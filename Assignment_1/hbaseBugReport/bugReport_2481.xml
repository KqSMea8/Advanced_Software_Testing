<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:02:16 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2481/HBASE-2481.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2481] Client is not getting UnknownScannerExceptions; they are being eaten</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2481</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This was reported by mudphone on IRC and confirmed by myself in quick test.  If the client takes too long going back to the RS, the RS will throw an UnknownScannerException but it doesn&apos;t get back to the client.  Instead, the client scan silently ends.  Marking this blocker.  Its actually in 0.20.4.  Thats what I was testing.  Mayhaps an RC sinker?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12462834">HBASE-2481</key>
            <summary>Client is not getting UnknownScannerExceptions; they are being eaten</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jdcryans">Jean-Daniel Cryans</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 23 Apr 2010 00:26:44 +0000</created>
                <updated>Fri, 22 Jul 2016 06:46:43 +0000</updated>
                            <resolved>Sat, 24 Apr 2010 17:16:53 +0000</resolved>
                                    <version>0.20.4</version>
                                    <fixVersion>0.20.4</fixVersion>
                    <fixVersion>0.90.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12860082" author="tlipcon" created="Fri, 23 Apr 2010 00:30:39 +0000"  >&lt;p&gt;Yes, I think this should block release.&lt;/p&gt;</comment>
                            <comment id="12860100" author="apurtell" created="Fri, 23 Apr 2010 01:52:49 +0000"  >&lt;p&gt;+1 to sink release&lt;/p&gt;

&lt;p&gt;Good catch.&lt;/p&gt;</comment>
                            <comment id="12860385" author="stack" created="Fri, 23 Apr 2010 21:37:01 +0000"  >&lt;p&gt;Here is script to demo problem.  It scans 99 rows in a PE table then pauses for 60 seconds.  When it resumes, there is nothing else to fetch (though table has millions of rows) and over on serverside is a USE:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ more bin/slow_scan.rb 
# To run: ./bin/hbase org.jruby.Main bin/slow_scan.rb
include Java
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.util.Bytes
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HConstants
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.HTable
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Scan
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HBaseConfiguration
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.util.FSUtils
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.FileSystem
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;

# Get configuration to use.
c = HBaseConfiguration.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()

# Set hadoop filesystem configuration using the hbase.rootdir.
# Otherwise, we&apos;ll always use localhost though the hbase.rootdir
# might be pointing at hdfs location.
c.set(&lt;span class=&quot;code-quote&quot;&gt;&quot;fs.&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.name&quot;&lt;/span&gt;, c.get(HConstants::HBASE_DIR))
fs = FileSystem.get(c)

# Clean mentions of table from .META.
# Scan the .META. and remove all lines that begin with tablename
t = HTable.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;(c, &lt;span class=&quot;code-quote&quot;&gt;&quot;TestTable&quot;&lt;/span&gt;)
scan = Scan.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()
scanner = t.getScanner(scan)
count = 0
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (result = scanner.next())
  rowid = Bytes.toString(result.getRow())
  puts rowid
  count = count + 1 
  # If count == 100, pause &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 60 seconds.
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; count == 100 
    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(1000 * 60)
  end
end
scanner.close()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12860417" author="jdcryans" created="Fri, 23 Apr 2010 23:27:57 +0000"  >&lt;p&gt;This was caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1671&quot; title=&quot;HBASE-1609 broke scanners riding across splits&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1671&quot;&gt;&lt;del&gt;HBASE-1671&lt;/del&gt;&lt;/a&gt;, this changed in ScannerCallable: &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Result [] call() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException { 
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (scannerId != -1L &amp;amp;&amp;amp; closed) { 
- server.close(scannerId); 
- scannerId = -1L; 
+ close(); 
     } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (scannerId == -1L &amp;amp;&amp;amp; !closed) { 
- &lt;span class=&quot;code-comment&quot;&gt;// open the scanner 
&lt;/span&gt;- scannerId = openScanner(); 
+ &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.scannerId = openScanner(); 
     } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; { 
- Result [] rrs = server.next(scannerId, caching); 
+ Result [] rrs = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;; 
+ &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; { 
+ rrs = server.next(scannerId, caching); 
+ } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) { 
+ IOException ioe = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;; 
+ &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; RemoteException) { 
+ ioe = RemoteExceptionHandler.decodeRemoteException((RemoteException)e); 
+ } 
+ &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ioe != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; ioe &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; NotServingRegionException) { 
+ &lt;span class=&quot;code-comment&quot;&gt;// Throw a DNRE so that we &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt; out of cycle of calling NSRE 
&lt;/span&gt;+ &lt;span class=&quot;code-comment&quot;&gt;// when what we need is to open scanner against &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; location. 
&lt;/span&gt;+ &lt;span class=&quot;code-comment&quot;&gt;// Attach NSRE to signal client that it needs to resetup scanner. 
&lt;/span&gt;+ &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DoNotRetryIOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Reset scanner&quot;&lt;/span&gt;, ioe); 
+ } 
+ } 
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; rrs == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || rrs.length == 0? &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;: rrs; 
     } 
      
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;We now eat the exception if it&apos;s not NSRE, throwing it if the exception is a DoNotRetryIOException is the right thing to do, but the client code is still broken. In HTable.ClientScanner.next: &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; { 
            &lt;span class=&quot;code-comment&quot;&gt;// Server returns a &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; values &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; scanning is to stop. Else, 
&lt;/span&gt;            &lt;span class=&quot;code-comment&quot;&gt;// returns an empty array &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; scanning is to go on and we&apos;ve just 
&lt;/span&gt;            &lt;span class=&quot;code-comment&quot;&gt;// exhausted current region. 
&lt;/span&gt;            values = getConnection().getRegionServerWithRetries(callable); 
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (skipFirst) { 
              skipFirst = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;; 
              &lt;span class=&quot;code-comment&quot;&gt;// Reget. 
&lt;/span&gt;              values = getConnection().getRegionServerWithRetries(callable); 
            } 
          } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (DoNotRetryIOException e) { 
            Throwable cause = e.getCause(); 
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cause == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || !(cause &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; NotServingRegionException)) { 
              &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e; 
            } 
            &lt;span class=&quot;code-comment&quot;&gt;// Else, its signal from depths of ScannerCallable that we got an 
&lt;/span&gt;            &lt;span class=&quot;code-comment&quot;&gt;// NSRE on a next and that we need to reset the scanner. 
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lastResult != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) { 
              &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.scan.setStartRow(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lastResult.getRow()); 
              &lt;span class=&quot;code-comment&quot;&gt;// Skip first row returned. We already let it out on previous 
&lt;/span&gt;              &lt;span class=&quot;code-comment&quot;&gt;// invocation. 
&lt;/span&gt;              skipFirst = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;; 
            } 
            &lt;span class=&quot;code-comment&quot;&gt;// Clear region 
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.currentRegion = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;; 
            &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;; 
          } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) { 
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; UnknownScannerException &amp;amp;&amp;amp; 
                lastNext + scannerTimeout &amp;lt; &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis()) { 
              ScannerTimeoutException ex = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ScannerTimeoutException(); 
              ex.initCause(e); 
              &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; ex; 
            } 
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e; 
          } 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;We catch the DoNotRetryIOException first and in the other catch clause we check for UnknownScannerException, which extends DoNotRetryIOException... so ScannerTimeoutException is never used! Easy fix.&lt;/p&gt;</comment>
                            <comment id="12860444" author="jdcryans" created="Sat, 24 Apr 2010 00:35:48 +0000"  >&lt;p&gt;Patch that adds test, does the right catching and adds a message to the scanner timeout exception. I&apos;m still not satisfied by how we handle exceptions around that part of the code.&lt;/p&gt;</comment>
                            <comment id="12860483" author="stack" created="Sat, 24 Apr 2010 04:34:51 +0000"  >&lt;p&gt;Patch looks good enough for 0.20.4.  Let me see if I can get mudphone to test.&lt;/p&gt;</comment>
                            <comment id="12860548" author="stack" created="Sat, 24 Apr 2010 17:00:32 +0000"  >&lt;p&gt;I tried the patch and now we seem to do the right thing:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
0000000097
0000000098
0000000099




2010-04-24T09:58:57.642-0700: 62.527: [GC 62.527: [ParNew: 17024K-&amp;gt;1870K(19136K), 0.0045580 secs] 21509K-&amp;gt;6356K(83008K), 0.0045980 secs] [Times: user=0.03 sys=0.00, real=0.00 sec
org/apache/hadoop/hbase/client/HTable.java:1991:in `next&apos;: org.apache.hadoop.hbase.client.ScannerTimeoutException: 60007ms passed since the last invocation, timeout is currently )
        from sun.reflect.GeneratedMethodAccessor2:-1:in `invoke&apos;
        from sun/reflect/DelegatingMethodAccessorImpl.java:25:in `invoke&apos;
        from java/lang/reflect/Method.java:597:in `invoke&apos;
        from org/jruby/javasupport/JavaMethod.java:298:in `invokeWithExceptionHandling&apos;
        from org/jruby/javasupport/JavaMethod.java:259:in `invoke&apos;
        from org/jruby/java/invokers/InstanceMethodInvoker.java:36:in `call&apos;
        from org/jruby/runtime/callsite/CachingCallSite.java:70:in `call&apos;
        from bin/slow_scan.rb:27:in `__file__&apos;
        from bin/slow_scan.rb:-1:in `load&apos;
        from org/jruby/Ruby.java:577:in `runScript&apos;
        from org/jruby/Ruby.java:480:in `runNormally&apos;
        from org/jruby/Ruby.java:354:in `runFromMain&apos;
        from org/jruby/Main.java:229:in `run&apos;
        from org/jruby/Main.java:110:in `run&apos;
        from org/jruby/Main.java:94:in `main&apos;
Complete Java stackTrace
org.apache.hadoop.hbase.client.ScannerTimeoutException: 60007ms passed since the last invocation, timeout is currently set to 60000
        at org.apache.hadoop.hbase.client.HTable$ClientScanner.next(HTable.java:1991)
        at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.jruby.javasupport.JavaMethod.invokeWithExceptionHandling(JavaMethod.java:298)
        at org.jruby.javasupport.JavaMethod.invoke(JavaMethod.java:259)
        at org.jruby.java.invokers.InstanceMethodInvoker.call(InstanceMethodInvoker.java:36)
        at org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:70)
        at bin.slow_scan.__file__(slow_scan.rb:27)
        at bin.slow_scan.load(slow_scan.rb)
        at org.jruby.Ruby.runScript(Ruby.java:577)
        at org.jruby.Ruby.runNormally(Ruby.java:480)
        at org.jruby.Ruby.runFromMain(Ruby.java:354)
        at org.jruby.Main.run(Main.java:229)
        at org.jruby.Main.run(Main.java:110)
        at org.jruby.Main.main(Main.java:94)
Caused by: org.apache.hadoop.hbase.UnknownScannerException: org.apache.hadoop.hbase.UnknownScannerException: Name: 3092528963968774042
        at org.apache.hadoop.hbase.regionserver.HRegionServer.next(HRegionServer.java:1889)
        at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12860550" author="stack" created="Sat, 24 Apr 2010 17:16:53 +0000"  >&lt;p&gt;Committed to two branches and trunk.&lt;/p&gt;</comment>
                            <comment id="12872351" author="stack" created="Thu, 27 May 2010 20:27:11 +0000"  >&lt;p&gt;Here is the unit test done for 0.20.   It passes.  Added check of iterating a Scan too.&lt;/p&gt;</comment>
                            <comment id="12987510" author="hudson" created="Thu, 27 Jan 2011 11:45:31 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1721 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/HBase-TRUNK/1721/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/HBase-TRUNK/1721/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2481&quot; title=&quot;Client is not getting UnknownScannerExceptions; they are being eaten&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2481&quot;&gt;&lt;del&gt;HBASE-2481&lt;/del&gt;&lt;/a&gt;  max seq id in flushed file can be larger than its correct value causing data loss during recovery&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12991387">HBASE-16266</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12442722" name="HBASE-2481.patch" size="5365" author="jdcryans" created="Sat, 24 Apr 2010 00:35:48 +0000"/>
                            <attachment id="12445698" name="scannertimeouttest.txt" size="3395" author="stack" created="Thu, 27 May 2010 20:27:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 Apr 2010 00:30:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26325</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 47 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08son:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49247</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>