<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:32:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5973/HBASE-5973.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5973] Add ability for potentially long-running IPC calls to abort if client disconnects</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5973</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We recently had a cluster issue where a user was submitting scanners with a very restrictive filter, and then calling next() with a high scanner caching value. The clients would generally time out the next() call and disconnect, but the IPC kept running looking to fill the requested number of rows. Since this was in the context of MR, the tasks making the calls would retry, and the retries wuld be more likely to time out due to contention with the previous still-running scanner next() call. Eventually, the system spiraled out of control.&lt;/p&gt;

&lt;p&gt;We should add a hook to the IPC system so that RPC calls can check if the client has already disconnected. In such a case, the next() call could abort processing, given any further work is wasted. I imagine coprocessor endpoints, etc, could make good use of this as well.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12554540">HBASE-5973</key>
            <summary>Add ability for potentially long-running IPC calls to abort if client disconnects</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tlipcon">Todd Lipcon</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 May 2012 18:58:52 +0000</created>
                <updated>Tue, 26 Feb 2013 08:16:06 +0000</updated>
                            <resolved>Fri, 11 May 2012 19:28:13 +0000</resolved>
                                    <version>0.90.7</version>
                    <version>0.92.1</version>
                    <version>0.94.0</version>
                    <version>0.95.2</version>
                                    <fixVersion>0.94.1</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>IPC/RPC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13271863" author="tlipcon" created="Wed, 9 May 2012 22:05:21 +0000"  >&lt;p&gt;Attached patch implements the suggested idea, and hooks it up for scanner.next().&lt;/p&gt;

&lt;p&gt;I spent 2.5 hours trying to write a test case for it, but we have so many layers of byzantine caching going on above the IPC sockets that I couldn&apos;t figure out how to make a client IPC connection actually hard-disconnect. So I tested it from the shell. here&apos;s the manual test plan:&lt;/p&gt;

&lt;p&gt;1) create a table with 100 or so rows&lt;br/&gt;
2) issue following from shell:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HBase Shell; enter &apos;help&amp;lt;RETURN&amp;gt;&apos; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; list of supported commands.
Type &lt;span class=&quot;code-quote&quot;&gt;&quot;exit&amp;lt;RETURN&amp;gt;&quot;&lt;/span&gt; to leave the HBase Shell
Version 0.95-SNAPSHOT, r5c65cc4a19fbc00876a365b10e98142238dc9a97, Wed May  9 13:06:25 PDT 2012

hbase(main):001:0&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.filter.TestFilter
=&amp;gt; Java::OrgApacheHadoopHbaseFilter::TestFilter
hbase(main):002:0&amp;gt; scan &apos;t1&apos;, { FILTER =&amp;gt; TestFilter::SlowScanFilter.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;(), CACHE =&amp;gt; 50 }
ROW                                            COLUMN+CELL                                                                                                                             
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(shell will hang here)&lt;/p&gt;

&lt;p&gt;On the server side, you should see:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

12/05/09 15:03:29 INFO filter.TestFilter: Handler thread &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;[IPC Server handler 0 on 58364,5,main] sleeping in filter...
12/05/09 15:03:30 INFO filter.TestFilter: Handler thread &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;[IPC Server handler 0 on 58364,5,main] sleeping in filter...
12/05/09 15:03:31 INFO filter.TestFilter: Handler thread &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;[IPC Server handler 0 on 58364,5,main] sleeping in filter...
12/05/09 15:03:32 INFO filter.TestFilter: Handler thread &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;[IPC Server handler 0 on 58364,5,main] sleeping in filter...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now ^C the shell. You should see on the server:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
12/05/09 15:03:33 ERROR regionserver.RegionServer: 
org.apache.hadoop.hbase.ipc.CallerDisconnectedException: Aborting call scan(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, scannerId: 4581116627867187291
numberOfRows: 50
closeScanner: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
), rpc version=1, client version=1, methodsFingerPrint=-944626147 from 127.0.0.1:55648 after 5009 ms, since caller disconnected
        at org.apache.hadoop.hbase.ipc.HBaseServer$Call.throwExceptionIfCallerDisconnected(HBaseServer.java:417)
        at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.nextInternal(HRegion.java:3433)
        at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.next(HRegion.java:3391)
        at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.next(HRegion.java:3415)
        at org.apache.hadoop.hbase.regionserver.RegionServer.scan(RegionServer.java:828)
        at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.hbase.ipc.WritableRpcEngine$Server.call(WritableRpcEngine.java:358)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1387)
12/05/09 15:03:33 WARN ipc.HBaseServer: IPC Server Responder, call scan(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, scannerId: 4581116627867187291
numberOfRows: 50
closeScanner: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
), rpc version=1, client version=1, methodsFingerPrint=-944626147 from 127.0.0.1:55648: output error
12/05/09 15:03:33 WARN ipc.HBaseServer: IPC Server handler 0 on 58364 caught a ClosedChannelException, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; means that the server was processing a request but the client went away. The error message was: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We could probably improve the messaging slightly, but this is at least an improvement in that the thread doesn&apos;t continue to get hung up indefinitely.&lt;/p&gt;</comment>
                            <comment id="13271903" author="zhihyu@ebaysf.com" created="Wed, 9 May 2012 22:53:18 +0000"  >&lt;p&gt;Nice feature.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isCallerConnected() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is the above method used anywhere ?&lt;br/&gt;
Can throwExceptionIfCallerDisconnected() be added to Delayable ? There is only one implementation of Delayable:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; class Call &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Delayable {
src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13271906" author="tlipcon" created="Wed, 9 May 2012 22:54:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is the above method used anywhere ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, good point. It was used in an earlier rev but I took it out.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can throwExceptionIfCallerDisconnected() be added to Delayable ? There is only one implementation of Delayable:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It doesn&apos;t make sense inside an interface called Delayable. We could get rid of Delayable entirely (I considered that) but decided to keep it separate since it&apos;s a nice general interface with no tying to IPC currently.&lt;/p&gt;</comment>
                            <comment id="13271911" author="zhihyu@ebaysf.com" created="Wed, 9 May 2012 22:59:43 +0000"  >&lt;p&gt;I agree with the above analysis.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; RpcCallContext &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Delayable {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The new interface is tied to IPC. How about naming this interface DelayableRpcCall ?&lt;/p&gt;</comment>
                            <comment id="13271916" author="tlipcon" created="Wed, 9 May 2012 23:03:45 +0000"  >&lt;p&gt;The only things that make me nervous here are:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;does this hurt performance for the average case? we&apos;re now accessing a synchronized variable inside the scanner loop where we weren&apos;t before. I think it&apos;s in the noise, though, given it&apos;s uncontended.&lt;/li&gt;
	&lt;li&gt;is the layering violation too ugly? reaching out to IPC frm within RegionScanner is not exactly clean... should we introduce an interface?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Any thoughts on the above?&lt;/p&gt;</comment>
                            <comment id="13271918" author="tlipcon" created="Wed, 9 May 2012 23:04:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;The new interface is tied to IPC. How about naming this interface DelayableRpcCall ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well, if all RpcCalls are delayable, then why not just make it RpcCall?&lt;/p&gt;

&lt;p&gt;But I think the point is that there are some things which are Delayable which aren&apos;t RpcCalls, in theory. I don&apos; want to get bogged down in that discussion, though, so if you feel strongly, I&apos;ll change it. Otherwise let&apos;s leave it as is in the patch.&lt;/p&gt;</comment>
                            <comment id="13271925" author="tlipcon" created="Wed, 9 May 2012 23:08:08 +0000"  >&lt;p&gt;btw (and sorry for the many separate comments): I was thinking that RpcCallContext is also a useful interface should we want to add tracing, etc. I&apos;ve been thinking more and more that cross-machine tracing is worth doing a basic implementation of (see cloudtrace in accumulo)&lt;/p&gt;</comment>
                            <comment id="13271934" author="zhihyu@ebaysf.com" created="Wed, 9 May 2012 23:21:44 +0000"  >&lt;p&gt;RpcCallContext is an interface. I feel letting RegionScanner access RpcCallContext is Okay.&lt;/p&gt;</comment>
                            <comment id="13272124" author="tlipcon" created="Thu, 10 May 2012 06:21:07 +0000"  >&lt;p&gt;Attached patch removes the unused method that Ted noticed.&lt;/p&gt;

&lt;p&gt;I checked for a performance degradation by running the following in shell:&lt;/p&gt;

&lt;p&gt;4.times &lt;/p&gt;
{ count &apos;usertable&apos;, INTERVAL =&amp;gt; 100000, CACHE =&amp;gt; 1000 }

&lt;p&gt;on a 4-million row table generated by ycsb, after major compaction.&lt;/p&gt;

&lt;p&gt;I measured the elapsed User CPU on the server, and the wall clock on the client.&lt;/p&gt;

&lt;p&gt;with patch:&lt;br/&gt;
client side: 149.8 wall clock&lt;br/&gt;
server side: 1m52.03 user table&lt;/p&gt;

&lt;p&gt;without patch:&lt;br/&gt;
client side: 153.3 wall clock&lt;br/&gt;
server side: 1m51.4 user time&lt;/p&gt;

&lt;p&gt;These results seem to indicate there&apos;s no appreciable performance difference - just noise. Makes sense since ThreadLocal lookups and uncontended synchronization are both very cheap.&lt;/p&gt;
</comment>
                            <comment id="13272386" author="hadoopqa" created="Thu, 10 May 2012 14:47:05 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12526306/hbase-5973.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12526306/hbase-5973.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestDrainingServer&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1828//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1828//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1828//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1828//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1828//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1828//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13272459" author="tlipcon" created="Thu, 10 May 2012 16:22:22 +0000"  >&lt;p&gt;Ted: I noticed you marked this &quot;Reviewed&quot;. Is that a +1? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13272468" author="zhihyu@ebaysf.com" created="Thu, 10 May 2012 16:40:22 +0000"  >&lt;p&gt;+1 from me.&lt;/p&gt;

&lt;p&gt;Minor comments below:&lt;br/&gt;
For RpcCallContext.java and CallerDisconnectedException.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * Copyright 2010 The Apache Software Foundation
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please remove year.&lt;/p&gt;

&lt;p&gt;Please provide patches for 0.92 branch, etc.&lt;/p&gt;</comment>
                            <comment id="13272476" author="tlipcon" created="Thu, 10 May 2012 16:45:48 +0000"  >&lt;p&gt;Attached patch fixes the copyright. I&apos;ll commit this to the branches where it applies, and leave it open. Dave Wang is working on backports for some earlier branches as well.&lt;/p&gt;</comment>
                            <comment id="13272482" author="tlipcon" created="Thu, 10 May 2012 16:48:20 +0000"  >&lt;p&gt;Attached patch is for 0.94. Had to resolve a trivial conflict since nextInternal() doesn&apos;t have a Metric parameter in 0.94.&lt;/p&gt;</comment>
                            <comment id="13272485" author="hadoopqa" created="Thu, 10 May 2012 16:52:12 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12526370/hbase-5973-0.94.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12526370/hbase-5973-0.94.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1831//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1831//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13272494" author="tlipcon" created="Thu, 10 May 2012 17:04:48 +0000"  >&lt;p&gt;Woops, I forgot to svn add two files in my previous 0.94 commit/upload. Fixed in SVN, here&apos;s the proper patch.&lt;/p&gt;</comment>
                            <comment id="13272501" author="tlipcon" created="Thu, 10 May 2012 17:08:24 +0000"  >&lt;p&gt;Here&apos;s the patch for 0.92. Again pretty easy backport.&lt;/p&gt;</comment>
                            <comment id="13272502" author="tlipcon" created="Thu, 10 May 2012 17:09:47 +0000"  >&lt;p&gt;Committed to trunk, 94, 92. Dave is working on the 0.90 patch.&lt;/p&gt;</comment>
                            <comment id="13272504" author="hadoopqa" created="Thu, 10 May 2012 17:12:13 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12526374/hbase-5973-0.92.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12526374/hbase-5973-0.92.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1832//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1832//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13272536" author="hudson" created="Thu, 10 May 2012 17:41:54 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2860 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2860/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2860/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5973&quot; title=&quot;Add ability for potentially long-running IPC calls to abort if client disconnects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5973&quot;&gt;&lt;del&gt;HBASE-5973&lt;/del&gt;&lt;/a&gt;. Add ability for potentially long-running IPC calls to abort if client disconnects. Contributed by Todd Lipcon. (Revision 1336787)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
todd : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/CallerDisconnectedException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/hbase/table.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/shell/commands/scan.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13272554" author="hudson" created="Thu, 10 May 2012 17:56:57 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #186 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/186/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/186/&lt;/a&gt;)&lt;br/&gt;
    Amend &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5973&quot; title=&quot;Add ability for potentially long-running IPC calls to abort if client disconnects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5973&quot;&gt;&lt;del&gt;HBASE-5973&lt;/del&gt;&lt;/a&gt;. Add two missing files from previous commit (Revision 1336797)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5973&quot; title=&quot;Add ability for potentially long-running IPC calls to abort if client disconnects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5973&quot;&gt;&lt;del&gt;HBASE-5973&lt;/del&gt;&lt;/a&gt;. Add ability for potentially long-running IPC calls to abort if client disconnects. Contributed by Todd Lipcon. (Revision 1336788)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
todd : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/CallerDisconnectedException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;todd : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/ruby/hbase/table.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/ruby/shell/commands/scan.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13272669" author="hudson" created="Thu, 10 May 2012 19:24:46 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #403 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/403/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/403/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5973&quot; title=&quot;Add ability for potentially long-running IPC calls to abort if client disconnects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5973&quot;&gt;&lt;del&gt;HBASE-5973&lt;/del&gt;&lt;/a&gt;. Add ability for potentially long-running IPC calls to abort if client disconnects. Contributed by Todd Lipcon. (Revision 1336798)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
todd : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/ipc/CallerDisconnectedException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/hbase/table.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/shell/commands/scan.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13272845" author="stack" created="Thu, 10 May 2012 22:22:49 +0000"  >&lt;p&gt;Might Todd.  When we call this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; nextInternal(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; limit, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; metric) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+      RpcCallContext rpcCall = HBaseServer.getCurrentCall();
       &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rpcCall != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+          &lt;span class=&quot;code-comment&quot;&gt;// If a user specifies a too-restrictive or too-slow scanner, the
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// client might time out and disconnect &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; the server side
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// is still processing the request. We should abort aggressively
&lt;/span&gt;+          &lt;span class=&quot;code-comment&quot;&gt;// in that &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt;.
&lt;/span&gt;+          rpcCall.throwExceptionIfCallerDisconnected();
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... if connection is closed when we check, the exception does not come out here and abort this current nextInternal invocation?  Rather, it comes out on the stuck handler?  Does it interrupt the ongoing call, the one w/o a client?&lt;/p&gt;

&lt;p&gt;Pardon dumb question.  Just trying to understand how this fix works.&lt;/p&gt;</comment>
                            <comment id="13272852" author="tlipcon" created="Thu, 10 May 2012 22:33:49 +0000"  >&lt;p&gt;Sorry, Stack.. I don&apos;t follow your question. If getCurrentCall() is non-null, that implies that we are within one of the handler threads. So, throwing the exception here will abort the next() call in that same handler.&lt;/p&gt;</comment>
                            <comment id="13273033" author="stack" created="Fri, 11 May 2012 04:41:07 +0000"  >&lt;p&gt;@Todd You answered my question (that and looking at code).  I see how this works now and how it can be a kill-switch particularly for the case where heavy filtering has us passing on lots of rows.&lt;/p&gt;

&lt;p&gt;+1 on the patch.&lt;/p&gt;</comment>
                            <comment id="13273065" author="hudson" created="Fri, 11 May 2012 06:11:11 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #198 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/198/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/198/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5973&quot; title=&quot;Add ability for potentially long-running IPC calls to abort if client disconnects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5973&quot;&gt;&lt;del&gt;HBASE-5973&lt;/del&gt;&lt;/a&gt;. Add ability for potentially long-running IPC calls to abort if client disconnects. Contributed by Todd Lipcon. (Revision 1336787)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
todd : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/CallerDisconnectedException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/hbase/table.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/shell/commands/scan.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13273330" author="dsw" created="Fri, 11 May 2012 15:06:30 +0000"  >&lt;p&gt;Passed unit tests locally.&lt;/p&gt;</comment>
                            <comment id="13273338" author="hadoopqa" created="Fri, 11 May 2012 15:12:16 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12526533/HBASE-5973-0.90.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12526533/HBASE-5973-0.90.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1847//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1847//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13273446" author="tlipcon" created="Fri, 11 May 2012 17:39:17 +0000"  >&lt;p&gt;+1. Patch looks good to me. I&apos;ll commit to the 0.90 branch later today if there are no objections to backporting this.&lt;/p&gt;</comment>
                            <comment id="13273448" author="zhihyu@ebaysf.com" created="Fri, 11 May 2012 17:42:32 +0000"  >&lt;p&gt;@David:&lt;br/&gt;
Can you publish the results from running test suite on 0.90 ?&lt;br/&gt;
Such as cases tested, total time, etc.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13273454" author="apurtell" created="Fri, 11 May 2012 17:52:42 +0000"  >&lt;p&gt;+1 on backport to 0.90.&lt;/p&gt;</comment>
                            <comment id="13273490" author="dsw" created="Fri, 11 May 2012 18:30:30 +0000"  >&lt;p&gt;Sure.  This is what I saw on my local box:&lt;/p&gt;

&lt;p&gt;Tests in error:&lt;/p&gt;

&lt;p&gt;Tests run: 723, Failures: 0, Errors: 1, Skipped: 9&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Total time: 1:31:50.066s&lt;/p&gt;

&lt;p&gt;Only test that failed was:&lt;/p&gt;

&lt;p&gt;Running org.apache.hadoop.hbase.master.TestRestartCluster&lt;br/&gt;
Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 45.891 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;/p&gt;

&lt;p&gt;Test seems flaky as it passed just fine when run individually.&lt;/p&gt;</comment>
                            <comment id="13273531" author="tlipcon" created="Fri, 11 May 2012 19:28:14 +0000"  >&lt;p&gt;Committed to 0.90 as well. Thanks, Dave, for the backport.&lt;/p&gt;</comment>
                            <comment id="13278519" author="hudson" created="Fri, 18 May 2012 02:34:22 +0000"  >&lt;p&gt;Integrated in HBase-0.92-security #107 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92-security/107/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92-security/107/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5973&quot; title=&quot;Add ability for potentially long-running IPC calls to abort if client disconnects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5973&quot;&gt;&lt;del&gt;HBASE-5973&lt;/del&gt;&lt;/a&gt;. Add ability for potentially long-running IPC calls to abort if client disconnects. Contributed by Todd Lipcon. (Revision 1336798)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
todd : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/ipc/CallerDisconnectedException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/hbase/table.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/shell/commands/scan.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13279410" author="hudson" created="Sat, 19 May 2012 02:42:09 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #27 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/27/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/27/&lt;/a&gt;)&lt;br/&gt;
    Amend &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5973&quot; title=&quot;Add ability for potentially long-running IPC calls to abort if client disconnects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5973&quot;&gt;&lt;del&gt;HBASE-5973&lt;/del&gt;&lt;/a&gt;. Add two missing files from previous commit (Revision 1336797)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5973&quot; title=&quot;Add ability for potentially long-running IPC calls to abort if client disconnects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5973&quot;&gt;&lt;del&gt;HBASE-5973&lt;/del&gt;&lt;/a&gt;. Add ability for potentially long-running IPC calls to abort if client disconnects. Contributed by Todd Lipcon. (Revision 1336788)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
todd : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/CallerDisconnectedException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;todd : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/ruby/hbase/table.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/ruby/shell/commands/scan.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/ipc/TestDelayedRpc.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12550348">HBASE-5757</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12526533" name="HBASE-5973-0.90.txt" size="10235" author="dsw" created="Fri, 11 May 2012 15:06:30 +0000"/>
                            <attachment id="12526374" name="hbase-5973-0.92.txt" size="12143" author="tlipcon" created="Thu, 10 May 2012 17:08:24 +0000"/>
                            <attachment id="12526372" name="hbase-5973-0.94.txt" size="11679" author="tlipcon" created="Thu, 10 May 2012 17:04:48 +0000"/>
                            <attachment id="12526370" name="hbase-5973-0.94.txt" size="8494" author="tlipcon" created="Thu, 10 May 2012 16:48:20 +0000"/>
                            <attachment id="12526366" name="hbase-5973.txt" size="12130" author="tlipcon" created="Thu, 10 May 2012 16:45:47 +0000"/>
                            <attachment id="12526306" name="hbase-5973.txt" size="12238" author="tlipcon" created="Thu, 10 May 2012 06:21:07 +0000"/>
                            <attachment id="12526223" name="hbase-5973.txt" size="12337" author="tlipcon" created="Wed, 9 May 2012 22:02:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 May 2012 22:53:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>238790</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 30 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02hg7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12428</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>