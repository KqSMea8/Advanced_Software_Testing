<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:09:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15971/HBASE-15971.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15971] Regression: Random Read/WorkloadC slower in 1.x than 0.98</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15971</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;branch-1 is slower than 0.98 doing YCSB random read/workloadC. It seems to be doing about 1/2 the throughput of 0.98.&lt;/p&gt;

&lt;p&gt;In branch-1, we have low handler occupancy compared to 0.98. Hacking in reader thread occupancy metric, is about the same in both. In parent issue, hacking out the scheduler, I am able to get branch-1 to go 3x faster so will dig in here.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12976215">HBASE-15971</key>
            <summary>Regression: Random Read/WorkloadC slower in 1.x than 0.98</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12956205">HBASE-15594</parent>
                                    <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 Jun 2016 21:52:30 +0000</created>
                <updated>Thu, 16 Jun 2016 12:02:50 +0000</updated>
                            <resolved>Wed, 15 Jun 2016 00:17:58 +0000</resolved>
                                    <version>2.0.0</version>
                    <version>1.3.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                                    <component>rpc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>22</watches>
                                                                <comments>
                            <comment id="15317339" author="stack" created="Mon, 6 Jun 2016 21:54:18 +0000"  >&lt;p&gt;Here are graphs of me running ycsb &amp;#8211; both asynchbase and hbase10 &amp;#8211; on 8 servers pounding a single node carrying all regions. See how we do about 125k in branch-1 and 300k in 0.98. See how the handler occupancy is less in branch-1.&lt;/p&gt;</comment>
                            <comment id="15317366" author="mantonov" created="Mon, 6 Jun 2016 22:07:30 +0000"  >&lt;p&gt;Ouch.&lt;/p&gt;

&lt;p&gt;Do you have any feeling at what point this regression creeped in? Likely a blocker for 1.3 (and other branches). Also from the posted charts I&apos;m not sure I immediately see lower ipc readers, but numCallsInGeneralQueue is different drastically.. &lt;/p&gt;</comment>
                            <comment id="15317369" author="mantonov" created="Mon, 6 Jun 2016 22:09:02 +0000"  >&lt;p&gt;Is that for all blocks in the cache, I assume?&lt;/p&gt;</comment>
                            <comment id="15317882" author="stack" created="Tue, 7 Jun 2016 05:29:22 +0000"  >&lt;p&gt;I just checked. It is there in branch-1.0.&lt;/p&gt;

&lt;p&gt;Yes, it is for all blocks in cache.&lt;/p&gt;</comment>
                            <comment id="15319376" author="esteban" created="Tue, 7 Jun 2016 20:52:23 +0000"  >&lt;p&gt;Yes, I&apos;ve been working with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; on this and yes, the hit ratio is 99.998 from the block cache.&lt;/p&gt;</comment>
                            <comment id="15319474" author="stack" created="Tue, 7 Jun 2016 21:30:50 +0000"  >&lt;p&gt;I am having trouble finding where the regression came in looking at diff between 0.98 and 1.0. I&apos;ve hacked in a good bit of the 0.98 RPC but still 1.0 is slow so it is elsewhere (looking at hbase-default.xml changes, nothing apparent). It does not seem to be changes in RpcExecutor or in the derivative RWQ. This one is hard to bisect since needs to run on cluster and get eyeballed.... let me keep trying.&lt;/p&gt;</comment>
                            <comment id="15319488" author="dimaspivak" created="Tue, 7 Jun 2016 21:35:55 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, if this requires running a cluster, could &lt;tt&gt;clusterdock&lt;/tt&gt; over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12721&quot; title=&quot;Create Docker container cluster infrastructure to enable better testing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12721&quot;&gt;&lt;del&gt;HBASE-12721&lt;/del&gt;&lt;/a&gt; be any help? We can build images with arbitrary commits and start up clusters from them, so if we have some script that can be run on a cluster to determine if it&apos;s hit by this, we might be able to &lt;tt&gt;git bisect&lt;/tt&gt; it overnight?&lt;/p&gt;</comment>
                            <comment id="15321270" author="stack" created="Wed, 8 Jun 2016 19:17:28 +0000"  >&lt;p&gt;Thanks for the offer &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dimaspivak&quot; class=&quot;user-hover&quot; rel=&quot;dimaspivak&quot;&gt;Dima Spivak&lt;/a&gt; Write a script that git bisect could use that would build and deploy a cluster then run a loading and pass if &amp;gt; 250k and fail if &amp;lt; 250k? Would take a bit of work...  Let me spend some more time manually bisect&apos;ing. I&apos;d put it aside for the moment. If it is going on too long, I&apos;ll come get you. Thanks boss.&lt;/p&gt;</comment>
                            <comment id="15323661" author="stack" created="Fri, 10 Jun 2016 00:45:11 +0000"  >&lt;p&gt;Here is a hack copying a trick from Kudu that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tlipcon&quot; class=&quot;user-hover&quot; rel=&quot;tlipcon&quot;&gt;Todd Lipcon&lt;/a&gt; pointed me at. Needs work (hack is in the &apos;wrong&apos; place). Gets us almost 2x. Will work on a better version...&lt;/p&gt;

&lt;p&gt;Now to go find why big diff between 0.98 and 1.0.&lt;/p&gt;</comment>
                            <comment id="15323664" author="stack" created="Fri, 10 Jun 2016 00:49:17 +0000"  >&lt;p&gt;Here is the hits I was getting w/ this patch... This is 6 Readers and 48 Handlers (I have 48 cpus).  The extreme right is when I had 48 Readers and 48 Handlers.&lt;/p&gt;</comment>
                            <comment id="15323710" author="stack" created="Fri, 10 Jun 2016 01:34:57 +0000"  >&lt;p&gt;Handlers are erratic still but the peaks are higher. When the q backs up, the peaks fall as though as though we are &apos;off&apos; the fast path. Seems sensitive to amount of Readers. If 6 as is in this case, then we go fast. If 12, we slow down. Seems like the Readers also act as a bit of bottleneck which means the Handlers get to go the fast path more often. If I drive even more load, ops go up to 320k. 15% idle so there is more to be had here.&lt;/p&gt;

&lt;p&gt;Work still to do.&lt;/p&gt;</comment>
                            <comment id="15323948" author="mantonov" created="Fri, 10 Jun 2016 06:22:30 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; do you feel like to promote it to blocker for 1.3 (and other branches)?&lt;/p&gt;</comment>
                            <comment id="15324666" author="stack" created="Fri, 10 Jun 2016 15:50:31 +0000"  >&lt;p&gt;Not yet &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;, not until I finger what is difference. Working on this now.&lt;/p&gt;</comment>
                            <comment id="15324856" author="stack" created="Fri, 10 Jun 2016 17:17:22 +0000"  >&lt;p&gt;One difference is the sort in the scheduler by priority in SimpleRpcScheduler.&lt;/p&gt;

&lt;p&gt;In 1.0 we do the following as our default scheduler:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        CallPriorityComparator callPriority = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CallPriorityComparator(conf, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.priority);
        callExecutor = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BalancedQueueRpcExecutor(&lt;span class=&quot;code-quote&quot;&gt;&quot;B.&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;, handlerCount, numCallQueues,
          conf, abortable, BoundedPriorityBlockingQueue.class, maxQueueLength, callPriority);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In 0.98 we do:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      callExecutor = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BalancedQueueRpcExecutor(&lt;span class=&quot;code-quote&quot;&gt;&quot;B.Default&quot;&lt;/span&gt;, handlerCount,
        numCallQueues, maxQueueLength, conf, abortable);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the graph, you see three humps. The first is branch-1 with the same default as 0.98. It does 290k with 24% idle. Next is branch-1 default. It does 210k with 40% of cpu idle. The third hump is default 0.98 with 21% of cpu idle.&lt;/p&gt;

&lt;p&gt;Loading for the record is workloadc using asynchbase (because it seems to be able to put up more load):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
% &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; i in `seq 0 24`; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; i in `cat /tmp/slaves`; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; echo $i; ssh $i &lt;span class=&quot;code-quote&quot;&gt;&quot;sh -c &apos;nohup ./bin/run_ycsb.sh &amp;gt; /dev/&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; 2&amp;gt;&amp;amp;1 &amp;amp;&apos;&quot;&lt;/span&gt;; done; done
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The script is attached (stolen from Busbey)&lt;/p&gt;
</comment>
                            <comment id="15324858" author="stack" created="Fri, 10 Jun 2016 17:18:17 +0000"  >&lt;p&gt;Busbey script hacked.&lt;/p&gt;</comment>
                            <comment id="15324860" author="stack" created="Fri, 10 Jun 2016 17:18:46 +0000"  >&lt;p&gt;Oh, I have 8 servers beating up on a single RS.&lt;/p&gt;</comment>
                            <comment id="15325494" author="stack" created="Fri, 10 Jun 2016 23:26:38 +0000"  >&lt;p&gt;Looking at stack traces, they look similar. Only difference was this: hbase.ipc.server.reservoir.direct.buffer I set it to false in branch-1 and made no difference in throughput (made the stack traces look the same). 0.98 has the same ugly contention on registration of region scanners that 1.0 has and this is what shows in stack traces &amp;#8211; adding and removal of Scanners. Will be back to fix this (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15716&quot; title=&quot;HRegion#RegionScannerImpl scannerReadPoints synchronization constrains random read&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15716&quot;&gt;HBASE-15716&lt;/a&gt;). With the 0.98 scheduler in place under branch-1, the difference is 280k/sec to 335k/sec, about 25% (the scheduler that sorts by priority costs us 25% throughput... 210k/sec vs 270k/sec)... so looking for culprit for this other 25% still.&lt;/p&gt;</comment>
                            <comment id="15325542" author="stack" created="Sat, 11 Jun 2016 00:12:48 +0000"  >&lt;p&gt;Comparing JFR output while under same load, the block seek takes more CPU when passed the 1.0 Cell and heavy use of thread locals in 1.0 also seems to cost. On the other hand, the locking/contention profile looks worse for 0.98 than for 1.0 with more time lost waiting on locks. It spends more time waiting on the regionscanner registration lock than 1.0 and it has the LinkedList blocking when doing a response.&lt;/p&gt;</comment>
                            <comment id="15325655" author="enis" created="Sat, 11 Jun 2016 02:29:43 +0000"  >&lt;p&gt;I can also take a look if you attach the JFR outputs directly. They maybe sizable though. &lt;/p&gt;</comment>
                            <comment id="15325679" author="anoop.hbase" created="Sat, 11 Jun 2016 03:29:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;the block seek takes more CPU when passed the 1.0 Cell &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Whether the mvcc decoding have an impact Stack?  In the past (in 0.98 also) we will have mostly 0 value for mvcc for Cells. Means just one byte.  But some of the jira changed this I believe and we reset the mvcc to 0 become rare (Am I right?) Is this happening in 1.x also?&lt;/p&gt;</comment>
                            <comment id="15325997" author="stack" created="Sat, 11 Jun 2016 18:25:21 +0000"  >&lt;p&gt;Attaching 0.98.20 JFR&lt;/p&gt;</comment>
                            <comment id="15326000" author="stack" created="Sat, 11 Jun 2016 18:28:26 +0000"  >&lt;p&gt;So, comparing the branches is not straightforward. They diverge too much with too many issues effecting perf. Am walking up the two branches to find points of major transition to make sure they made it over from 0.98 to branch-1. So far I am as far as, 0.98.4, which doubled the random read throughput from about 180k to 335k all because of the unassumingly titled &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11355&quot; title=&quot;a couple of callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11355&quot;&gt;&lt;del&gt;HBASE-11355&lt;/del&gt;&lt;/a&gt; &quot;a couple of callQueue related improvements&quot;. Will be back after more digging.&lt;/p&gt;</comment>
                            <comment id="15326001" author="stack" created="Sat, 11 Jun 2016 18:28:31 +0000"  >&lt;p&gt;For branch-1&lt;/p&gt;</comment>
                            <comment id="15326002" author="stack" created="Sat, 11 Jun 2016 18:28:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; Attached JFRs Sir, one for tip of 0.98 and another for tip of branch-1.&lt;/p&gt;</comment>
                            <comment id="15326180" author="stack" created="Sun, 12 Jun 2016 04:28:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;Whether the mvcc decoding have an impact Stack?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Didn&apos;t see it show up here &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; Not worried about where the CPU is spent at moment, just about regression and then, being able to drive all the CPU. Can then come along after and spend time on what the CPU is doing (Counters are our worst offender in this workload).&lt;/p&gt;</comment>
                            <comment id="15326666" author="stack" created="Sun, 12 Jun 2016 22:39:53 +0000"  >&lt;p&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11355&quot; title=&quot;a couple of callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11355&quot;&gt;&lt;del&gt;HBASE-11355&lt;/del&gt;&lt;/a&gt; &quot;a couple of callQueue related improvements&quot; when applied on branch-1 actually 3x&apos;d the perf but throughput numbers were super low before it was applied; we went from 80k to 230k.  The following commit dropped the branch-1 throughput from 180k to 80k:&lt;/p&gt;

&lt;p&gt;commit de98955c16d71f2486f54f88c9ca6c88b91a3812&lt;br/&gt;
Author: mbertozzi &amp;lt;mbertozzi@unknown&amp;gt;&lt;br/&gt;
Date:   Wed May 7 21:05:04 2014 +0000&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10993&quot; title=&quot;Deprioritize long-running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10993&quot;&gt;&lt;del&gt;HBASE-10993&lt;/del&gt;&lt;/a&gt; Deprioritize long-running scanners&lt;/p&gt;

&lt;p&gt;Checking to see if I revert the above and use scheduler from 0.98, see if I have same throughput as 0.98 branch&lt;/p&gt;</comment>
                            <comment id="15326895" author="ikeda" created="Mon, 13 Jun 2016 06:38:28 +0000"  >&lt;p&gt;There seems excessive contention when the reader threads put requests into the blocking queue. Even LinkedBlockingQueue is not optimized for simultaneous puts and for simultaneous takes.&lt;/p&gt;

&lt;p&gt;For the FIFO queue, replacing LinkedBlockingQueue with LinkedTransferQueue is the easiest way if you uses Java 7 or later, or you can create a pseudo one using semaphore and ConcurrentLinkedQueue. For the priority queue you can create a pseudo one using semaphore and ConcurrentSkipListMap. &lt;/p&gt;

&lt;p&gt;The &quot;pseudo&quot; means it seems difficult to completely implement the contract of the blocking queue interface, and you will cheat by throwing AssertionError or something for some methods. In actual, complete blocking queues are not required for the RPC handlers, but introducing a new interface is followed by non-trivial changes (and I was exhausted in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14331&quot; title=&quot;a single callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14331&quot;&gt;HBASE-14331&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;</comment>
                            <comment id="15327030" author="ikeda" created="Mon, 13 Jun 2016 09:01:54 +0000"  >&lt;p&gt;Sorry, LinkedTransferQueue is unbound.&lt;/p&gt;</comment>
                            <comment id="15328059" author="stack" created="Mon, 13 Jun 2016 19:51:29 +0000"  >&lt;p&gt;Thanks for the reminder of the work over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14331&quot; title=&quot;a single callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14331&quot;&gt;HBASE-14331&lt;/a&gt;. Let me go comment over there.&lt;/p&gt;</comment>
                            <comment id="15328415" author="stack" created="Mon, 13 Jun 2016 22:13:17 +0000"  >&lt;p&gt;Reverting &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10993&quot; title=&quot;Deprioritize long-running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10993&quot;&gt;&lt;del&gt;HBASE-10993&lt;/del&gt;&lt;/a&gt; gets the branch-1 throughput almost the same as 0.98. So, the difference is our rpc scheduler doing FIFO by default (0.98) or sort-by-priority (branch-1). This change is all that is needed to make branch-1 same as 0.98:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java
index d9d61c1..88258f7 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java
@@ -180,8 +180,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class SimpleRpcScheduler &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; RpcScheduler &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; ConfigurationObs
     &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.highPriorityLevel = highPriorityLevel;
     &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.abortable = server;

-    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; callQueueType = conf.get(CALL_QUEUE_TYPE_CONF_KEY,
-      CALL_QUEUE_TYPE_DEADLINE_CONF_VALUE);
+    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; callQueueType = conf.get(CALL_QUEUE_TYPE_CONF_KEY, &lt;span class=&quot;code-quote&quot;&gt;&quot;FIFO&quot;&lt;/span&gt;);
     &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; callqReadShare = conf.getFloat(CALL_QUEUE_READ_SHARE_CONF_KEY, 0);
     &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; callqScanShare = conf.getFloat(CALL_QUEUE_SCAN_SHARE_CONF_KEY, 0);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There is no &apos;FIFO&apos; callQueueType... FIFO is just the default if no other config gets in the way.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10993&quot; title=&quot;Deprioritize long-running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10993&quot;&gt;&lt;del&gt;HBASE-10993&lt;/del&gt;&lt;/a&gt; added the &apos;deadline&apos; rpc queue type. It also made it the default. This queue type will sort the requests by &apos;priority&apos; but in the current implementation &amp;#8211; see AnnotationReadingPriorityFunction#getPriority &amp;#8211; only long-running scans are effected. When their &apos;next&apos; comes in, they are deprioritized a configurable amount (see &lt;a href=&quot;http://blog.cloudera.com/blog/2014/12/new-in-cdh-5-2-improvements-for-running-multiple-workloads-on-a-single-hbase-cluster/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blog.cloudera.com/blog/2014/12/new-in-cdh-5-2-improvements-for-running-multiple-workloads-on-a-single-hbase-cluster/&lt;/a&gt; for a nice exposition). &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10993&quot; title=&quot;Deprioritize long-running scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10993&quot;&gt;&lt;del&gt;HBASE-10993&lt;/del&gt;&lt;/a&gt; changed our scheduler from FIFO to be smarter but the cost turns out to be high.&lt;/p&gt;

&lt;p&gt;Chatting w/ &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt;, the sort-on-priority is of minor benefit and suggests that throttling would be a more effective means of limiting users or use of a table (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11598&quot; title=&quot;Add simple rpc throttling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11598&quot;&gt;&lt;del&gt;HBASE-11598&lt;/del&gt;&lt;/a&gt;). So, changing our default to go back to FIFO in branch-1.3 seems the thing to do (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; Ok by you?). I can make a patch to do this and then add on the fastpath patch added above and then branch-1 should go faster than 0.98. I&apos;d also work on moving stuff out of SimpleRpcExecutor Currently it is overloaded with options. Instead I&apos;d have folks enable the executor type they are interested in. Let SimpleRpcExecutor be explicitly FIFO.&lt;/p&gt;</comment>
                            <comment id="15328899" author="anoop.hbase" created="Tue, 14 Jun 2016 04:22:40 +0000"  >&lt;p&gt;Nice find.  Looks great.&lt;/p&gt;</comment>
                            <comment id="15330067" author="stack" created="Tue, 14 Jun 2016 18:15:54 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; Good for 1.3?&lt;/p&gt;</comment>
                            <comment id="15330090" author="mantonov" created="Tue, 14 Jun 2016 18:27:03 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; totally! Do you only want to change the default, or to purge deadline scheduling (in current version) in general? I would imagine people could have deadline set in their configs for no particular reason (just to kind of make the default explicit), and be unaware it costs them so much? If so, if silently ignoring deadline setting OK change for minor release?&lt;/p&gt;</comment>
                            <comment id="15330099" author="mantonov" created="Tue, 14 Jun 2016 18:28:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; as you are on it right now and seems to have the rig handy and you&apos;re testing RPC schedulers, may I ask you to run exact same test/rig for codel scheduler if you have a chance? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; So that we can see comparison on exact same rig as you posted here.&lt;/p&gt;</comment>
                            <comment id="15330106" author="stack" created="Tue, 14 Jun 2016 18:31:40 +0000"  >&lt;p&gt;I do not want to purge deadline. It could be made more useful later. It could also be made less costly in implementation. For those who have it explicitly set, it is hard to figure intent. Can we call this out as an incompatible change in the release notes?  Hopefully that will get folks attention?&lt;/p&gt;</comment>
                            <comment id="15330200" author="stack" created="Tue, 14 Jun 2016 19:13:36 +0000"  >&lt;p&gt;Added a diagram to the parent issue with codel it it for compare &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; Slightly slower than current state of branch-1 before all fixes. If this issue is anything to go by, work on the queue is how to go faster. Might be able to make use of the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16023&quot; title=&quot;Fastpath for the FIFO rpcscheduler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16023&quot;&gt;&lt;del&gt;HBASE-16023&lt;/del&gt;&lt;/a&gt; speedup if you are not too concerned about ordering. (You want &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16023&quot; title=&quot;Fastpath for the FIFO rpcscheduler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16023&quot;&gt;&lt;del&gt;HBASE-16023&lt;/del&gt;&lt;/a&gt; in branch-1.3 too?)&lt;/p&gt;</comment>
                            <comment id="15330499" author="mantonov" created="Tue, 14 Jun 2016 20:20:35 +0000"  >&lt;p&gt;Yeah, I think that should be fine. Let&apos;s just change the default then, and put a warning for release notes that for read-heavy workload with most of data in cache users of deadline scheduler shall expect big performance hit.&lt;/p&gt;</comment>
                            <comment id="15330510" author="mantonov" created="Tue, 14 Jun 2016 20:24:08 +0000"  >&lt;p&gt;For codel scheduling I don&apos;t care much about ordering, true. I&apos;ve been focusing on load shedding for the case when IO-bound workload can cause long queue buildup which could make things worse and cause stalls.&lt;/p&gt;</comment>
                            <comment id="15330544" author="mantonov" created="Tue, 14 Jun 2016 20:38:41 +0000"  >&lt;p&gt;Thanks for including it in your tests  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="15330580" author="hadoopqa" created="Tue, 14 Jun 2016 20:56:37 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch doesn&apos;t appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 5m 30s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 59s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 48s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_79 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 47s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 34s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_79 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 47s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 44s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 44s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_79 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 11m 55s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_79 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 72m 39s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 16s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 105m 8s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.coprocessor.TestRowProcessorEndpoint &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12810088/HBASE-15971.branch-1.002.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12810088/HBASE-15971.branch-1.002.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15971&quot; title=&quot;Regression: Random Read/WorkloadC slower in 1.x than 0.98&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15971&quot;&gt;&lt;del&gt;HBASE-15971&lt;/del&gt;&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; branch-1 / 286934f &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_79 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2211/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2211/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2211/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2211/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2211/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2211/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2211/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2211/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.2.1   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15330843" author="enis" created="Tue, 14 Jun 2016 23:11:48 +0000"  >&lt;p&gt;+1. Great finding. What to do for 1.2 and 1.1? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="15330917" author="stack" created="Wed, 15 Jun 2016 00:17:58 +0000"  >&lt;p&gt;Pushed to branch-1.3+ The test failure looks unrelated and passes locally. Will revert if it shows again. Thanks for reviews.&lt;/p&gt;</comment>
                            <comment id="15330929" author="stack" created="Wed, 15 Jun 2016 00:32:27 +0000"  >&lt;p&gt;If you don&apos;t care about ordering, you could maybe make use of the fastpath over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16023&quot; title=&quot;Fastpath for the FIFO rpcscheduler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16023&quot;&gt;&lt;del&gt;HBASE-16023&lt;/del&gt;&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15330952" author="stack" created="Wed, 15 Jun 2016 00:49:19 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; Do you mean use LinkedTransferQueue#transfer? That will block the Reader though, right? We don&apos;t want to do that. Would be interested in your input on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16023&quot; title=&quot;Fastpath for the FIFO rpcscheduler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16023&quot;&gt;&lt;del&gt;HBASE-16023&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15331029" author="ikeda" created="Wed, 15 Jun 2016 02:56:44 +0000"  >&lt;p&gt;I meant LinkedTransferQueue implements BlockingQueue efficiently for simultaneous puts/takes. TransferQueue adds extra methods, but I forget the details.&lt;/p&gt;

&lt;p&gt;Anyway, LinkedTransferQueue is unbound, and we should do something or tasks might be queued unlimitedly, causing out of memory. Even if we could use semaphores for that control, ConcurrentLinkedQueue will be good enough after all, with more simple implementation (and lighter overhead).&lt;/p&gt;</comment>
                            <comment id="15331972" author="busbey" created="Wed, 15 Jun 2016 16:07:02 +0000"  >&lt;p&gt;Hurm. I&apos;m fine with either 1) just calling this out as a known issue for 1.0 - 1.2 with instructions on configuring the change, or 2) changing the default as done here since there are instructions in the release note about how folks can ensure they keep the deadline scheduler if they need it for some reason.&lt;/p&gt;

&lt;p&gt;Strictly speaking, #1 would be more conservative. But since it makes such a big difference out of the box, and our only way of doing &quot;known issues&quot; would be to add a notice box to the ref guide section &quot;Request Queues&quot;, I&apos;m inclined to be bend.&lt;/p&gt;

&lt;p&gt;what do other folks think?&lt;/p&gt;</comment>
                            <comment id="15332049" author="ndimiduk" created="Wed, 15 Jun 2016 16:40:32 +0000"  >&lt;p&gt;I&apos;m not a big fan of changing default config values in a patch release. Maybe if we had a more rigorous test harness we run for each patch release.&lt;/p&gt;

&lt;p&gt;How about we go with (1) and/or both RM&apos;s explicitly call this out in the next patch release announcement?&lt;/p&gt;</comment>
                            <comment id="15332230" author="busbey" created="Wed, 15 Jun 2016 18:10:14 +0000"  >&lt;p&gt;&amp;gt; How about we go with (1) and/or both RM&apos;s explicitly call this out in the next patch release announcement?&lt;/p&gt;

&lt;p&gt;Doing 1, adding a call out in the ref guide, and including a call out in future patch releases on the impacted lines works for me.&lt;/p&gt;</comment>
                            <comment id="15333641" author="carp84" created="Thu, 16 Jun 2016 12:02:50 +0000"  >&lt;p&gt;Seems to miss the party, again... Great work sir &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;! I guess I could close &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15619&quot; title=&quot;Performance regression observed: Empty random read(get) performance of branch-1 worse than 0.98&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15619&quot;&gt;HBASE-15619&lt;/a&gt; since we already got a fix here, right?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12896012">HBASE-14479</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12957289">HBASE-15619</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12808489" name="098.hits.png" size="19329" author="stack" created="Mon, 6 Jun 2016 21:54:18 +0000"/>
                            <attachment id="12808492" name="098.png" size="26520" author="stack" created="Mon, 6 Jun 2016 21:54:18 +0000"/>
                            <attachment id="12809332" name="HBASE-15971.branch-1.001.patch" size="23874" author="stack" created="Fri, 10 Jun 2016 00:43:04 +0000"/>
                            <attachment id="12810088" name="HBASE-15971.branch-1.002.patch" size="5992" author="stack" created="Mon, 13 Jun 2016 22:29:42 +0000"/>
                            <attachment id="12809589" name="Screen Shot 2016-06-10 at 5.08.24 PM.png" size="1074770" author="stack" created="Sat, 11 Jun 2016 00:12:48 +0000"/>
                            <attachment id="12809588" name="Screen Shot 2016-06-10 at 5.08.26 PM.png" size="539457" author="stack" created="Sat, 11 Jun 2016 00:12:48 +0000"/>
                            <attachment id="12808490" name="branch-1.hits.png" size="14973" author="stack" created="Mon, 6 Jun 2016 21:54:18 +0000"/>
                            <attachment id="12808491" name="branch-1.png" size="31396" author="stack" created="Mon, 6 Jun 2016 21:54:18 +0000"/>
                            <attachment id="12809642" name="flight_recording_10172402220203_28.branch-1.jfr" size="9454948" author="stack" created="Sat, 11 Jun 2016 18:28:31 +0000"/>
                            <attachment id="12809641" name="flight_recording_10172402220203_29.09820.0.98.20.jfr" size="13020193" author="stack" created="Sat, 11 Jun 2016 18:25:21 +0000"/>
                            <attachment id="12809338" name="handlers.fp.png" size="25925" author="stack" created="Fri, 10 Jun 2016 01:34:57 +0000"/>
                            <attachment id="12809333" name="hits.fp.png" size="16715" author="stack" created="Fri, 10 Jun 2016 00:49:17 +0000"/>
                            <attachment id="12809495" name="hits.patched1.0.vs.unpatched1.0.vs.098.png" size="16403" author="stack" created="Fri, 10 Jun 2016 17:17:22 +0000"/>
                            <attachment id="12809497" name="run_ycsb.sh" size="6836" author="stack" created="Fri, 10 Jun 2016 17:18:17 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 6 Jun 2016 22:07:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            26 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2z1sf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Change the default rpc scheduler from &amp;#39;deadline&amp;#39; to &amp;#39;fifo&amp;#39; instead so it is the same as in branch 0.98. &amp;#39;deadline&amp;#39; was of questionable benefit but with a high cost scheduling. To re-enable &amp;#39;deadline&amp;#39;, set hbase.ipc.server.callqueue.type to &amp;#39;deadline&amp;#39; in your hbase-site.xml.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>