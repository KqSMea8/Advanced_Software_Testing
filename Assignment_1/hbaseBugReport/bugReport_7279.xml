<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:44:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7279/HBASE-7279.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7279] Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7279</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Did some profiling again.&lt;br/&gt;
I we can gain some performance &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; when passing buffer, rowoffset, and rowlength instead of making a copy of the row key.&lt;br/&gt;
That way we can also remove the row key caching (and this patch also removes the timestamps caching). Considering the sheer number in which we create KVs, every byte save is good.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; (15-20% when data is in the block cache we setup a Filter such that only a single row is returned to the client).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12618823">HBASE-7279</key>
            <summary>Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Dec 2012 03:38:39 +0000</created>
                <updated>Fri, 7 Feb 2014 23:12:53 +0000</updated>
                            <resolved>Thu, 6 Dec 2012 00:29:49 +0000</resolved>
                                                    <fixVersion>0.94.4</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13510242" author="lhofhansl" created="Wed, 5 Dec 2012 03:41:12 +0000"  >&lt;p&gt;Here&apos;s a 0.94 patch (that&apos;s where I have all my testing setup).&lt;br/&gt;
If folks like this patch I&apos;ll make a trunk version.&lt;/p&gt;

&lt;p&gt;You&apos;ll notice that things aren&apos;t quite as pretty anymore, with the byte[] + offset and length needing to be passed around.&lt;/p&gt;

&lt;p&gt;(we could envision an &quot;ArrayPtr&quot; object, which holds a reference to an array, offset, and length, but then that would another object to create)&lt;/p&gt;</comment>
                            <comment id="13510266" author="stack" created="Wed, 5 Dec 2012 04:28:28 +0000"  >&lt;p&gt;I don&apos;t care about whether it pretty or not.  Its fine writing a bit more code for some savings.  How you think we test more if we are losing out by removing the row and ts caches?&lt;/p&gt;

&lt;p&gt;Patch looks good.&lt;/p&gt;

&lt;p&gt;Could peeked change under you while you do the below?  Or is it single thread only in here?&lt;/p&gt;

&lt;p&gt;+    byte[] row = peeked.getBuffer();&lt;br/&gt;
+    int offset = peeked.getRowOffset();&lt;br/&gt;
+    short length = peeked.getRowLength();&lt;/p&gt;</comment>
                            <comment id="13510287" author="lhofhansl" created="Wed, 5 Dec 2012 05:28:31 +0000"  >&lt;p&gt;peeked is a local stack reference, so that should be ok&lt;/p&gt;

&lt;p&gt;Re: how to verify the row cache is not needed... I looked at every caller of KeyValue.getRow(). These are either:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;tests&lt;/li&gt;
	&lt;li&gt;not a hot code path (like getting the first key during a split)&lt;/li&gt;
	&lt;li&gt;or from inspection it can be seen that the KV is not used twice&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I think we&apos;re good on that front.&lt;/p&gt;

&lt;p&gt;I am less certain about the timestamp cache, so I could put that back, and we leave that for another patch (after removing the timestamp cache I was not observing any change - neither speedup nor slowdown).&lt;/p&gt;</comment>
                            <comment id="13510288" author="stack" created="Wed, 5 Dec 2012 05:32:29 +0000"  >&lt;p&gt;Leave it out I&apos;d say.  We&apos;ll be profiling 0.96.  Should show its head again if a prob.  Can put it back then.&lt;/p&gt;</comment>
                            <comment id="13510293" author="mcorgan" created="Wed, 5 Dec 2012 05:53:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;(we could envision an &quot;ArrayPtr&quot; object, which holds a reference to an array, offset, and length, but then that would another object to create)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Lars - I submitted a ByteRange class when the Cell interface was committed which is exactly the ArrayPtr.  I use it extensively in the PrefixTree module to make the code more robust and readable, but I always pool and reuse them in the hot code paths.  It makes byte[]&apos;s as easy to use as Strings for comparisons, copying, substrings, collections, sorting, deduping, etc.  Sounds like not the right choice for this situation, but thought I&apos;d point it out so you know about it.&lt;/p&gt;</comment>
                            <comment id="13510295" author="lhofhansl" created="Wed, 5 Dec 2012 06:07:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; You mean leave out the timestamp cache, or leave out the change that removes the timestamp cache? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I can go either way.&lt;/p&gt;

&lt;p&gt;However, 8 bytes is not insignificant (the rest of a KV is just 16 + 24 + 4 + 4 + 4 + 8 = 52). (makes me want to remove the keyLength cache as well for another 4 bytes)&lt;/p&gt;

&lt;p&gt;At Salesforce we&apos;re doing some scans over close to 1bn rows/kvs (most of which won&apos;t be shipped to the client).&lt;br/&gt;
The issue with the timestamp cache is that it will use 8 bytes, whether we cache anything or not. Over the 1bn KVs we&apos;ll produce 8GB of garbage just for this cache. &lt;/p&gt;

&lt;p&gt;I would like to put this into 0.94 as well.&lt;/p&gt;</comment>
                            <comment id="13510296" author="lhofhansl" created="Wed, 5 Dec 2012 06:10:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt; Thanks for point me at that. Probably not the right choice here. The local offset/length variables are just stack allocated and hence do not produce any garbage (in the GC sense).&lt;/p&gt;</comment>
                            <comment id="13510299" author="lhofhansl" created="Wed, 5 Dec 2012 06:17:41 +0000"  >&lt;p&gt;While I&apos;m at it, might as well correct the array size in the Result(List) constructor.&lt;/p&gt;</comment>
                            <comment id="13510301" author="stack" created="Wed, 5 Dec 2012 06:26:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Sorry. Remove timestamp caching.&lt;/p&gt;</comment>
                            <comment id="13510314" author="lhofhansl" created="Wed, 5 Dec 2012 06:45:51 +0000"  >&lt;p&gt;Cool. I&apos;ll make a trunk version for HadoopQA.&lt;/p&gt;</comment>
                            <comment id="13510322" author="mcorgan" created="Wed, 5 Dec 2012 07:01:21 +0000"  >&lt;p&gt;on a related note - one of the benefits of the mutable Cell implementations is that the first time a cell gets parsed out of the data block, we can store all the offset/length variables in nice fast int primitives.  I&apos;m trying to convert the existing SeekerState to this right now.  &lt;/p&gt;

&lt;p&gt;When the cells are travelling through all the scanners/heaps/filters, the methods like getQualifierLength() will simply return the already-calculated primitive int.  With plain KeyValue as it is now, each time getQualifierLength() is called you have to do all of the following, and it may get called many times on the way from disk to client:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;short&lt;/span&gt; getRowLength() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; Bytes.toShort(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.bytes, getKeyOffset());
  }
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getFamilyOffset(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rlength) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.offset + ROW_OFFSET + Bytes.SIZEOF_SHORT + rlength + Bytes.SIZEOF_BYTE;
  }
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; getFamilyLength() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getFamilyLength(getFamilyOffset());
  }
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getQualifierLength() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getQualifierLength(getRowLength(),getFamilyLength());
  }
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getQualifierLength(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rlength, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; flength) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getKeyLength() - (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;) getKeyDataStructureSize(rlength, flength, 0);
  }
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getKeyDataStructureSize(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rlength, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; flength, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; qlength) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; KeyValue.KEY_INFRASTRUCTURE_SIZE + rlength + flength + qlength;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13510324" author="lhofhansl" created="Wed, 5 Dec 2012 07:07:23 +0000"  >&lt;p&gt;0.94 patch with correct heapsize (needed to all remove a REFERENCE).&lt;/p&gt;</comment>
                            <comment id="13510325" author="lhofhansl" created="Wed, 5 Dec 2012 07:08:17 +0000"  >&lt;p&gt;And a 0.96 version&lt;/p&gt;</comment>
                            <comment id="13510326" author="lhofhansl" created="Wed, 5 Dec 2012 07:10:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt; Won&apos;t we then produce even more garbage? We can do that for KVs as well, but then we&apos;ll produce a &lt;b&gt;lot&lt;/b&gt; of garbage. Or are you saying that works in your case, because you&apos;ll be reusing cells?&lt;/p&gt;</comment>
                            <comment id="13510331" author="mcorgan" created="Wed, 5 Dec 2012 07:18:11 +0000"  >&lt;p&gt;Yeah - we can&apos;t do it with the current immutable KeyValues because of garbage and/or memory bloat, but the encoded scanners reuse a backing object where you can cache as many values as you want because you&apos;re reusing everything.  See BufferedDataBlockEncoder.SeekerState (which i&apos;m making implement the Cell interface).  The SeekerState gets reused as the scanner trots along.&lt;/p&gt;</comment>
                            <comment id="13510685" author="lhofhansl" created="Wed, 5 Dec 2012 18:56:25 +0000"  >&lt;p&gt;Missed the test classes.&lt;/p&gt;</comment>
                            <comment id="13510714" author="stack" created="Wed, 5 Dec 2012 19:37:00 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13510789" author="lhofhansl" created="Wed, 5 Dec 2012 21:27:30 +0000"  >&lt;p&gt;A reset of the rowcounter (for intra row pagination new to 0.96) got lost in the patch.&lt;br/&gt;
Found that through running the tests locally.&lt;/p&gt;</comment>
                            <comment id="13510963" author="lhofhansl" created="Thu, 6 Dec 2012 00:24:13 +0000"  >&lt;p&gt;Ran all tests in trunk with 7279-0.96-v3 and they all pass.&lt;br/&gt;
Going to commit.&lt;/p&gt;</comment>
                            <comment id="13510969" author="lhofhansl" created="Thu, 6 Dec 2012 00:29:49 +0000"  >&lt;p&gt;committed to 0.94 and 0.96, thanks for the review&lt;/p&gt;</comment>
                            <comment id="13511067" author="hudson" created="Thu, 6 Dec 2012 03:37:44 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3594 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3594/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3594/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7279&quot; title=&quot;Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7279&quot;&gt;&lt;del&gt;HBASE-7279&lt;/del&gt;&lt;/a&gt; Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher (Revision 1417715)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13511092" author="hudson" created="Thu, 6 Dec 2012 04:08:29 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #611 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/611/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/611/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7279&quot; title=&quot;Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7279&quot;&gt;&lt;del&gt;HBASE-7279&lt;/del&gt;&lt;/a&gt; Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher (Revision 1417716)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13511297" author="hudson" created="Thu, 6 Dec 2012 11:51:49 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #285 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/285/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/285/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7279&quot; title=&quot;Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7279&quot;&gt;&lt;del&gt;HBASE-7279&lt;/del&gt;&lt;/a&gt; Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher (Revision 1417715)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13529454" author="hudson" created="Tue, 11 Dec 2012 23:08:28 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #86 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/86/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/86/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7279&quot; title=&quot;Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7279&quot;&gt;&lt;del&gt;HBASE-7279&lt;/del&gt;&lt;/a&gt; Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher (Revision 1417716)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13544437" author="hudson" created="Sat, 5 Jan 2013 00:42:32 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #10 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/10/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/10/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7279&quot; title=&quot;Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7279&quot;&gt;&lt;del&gt;HBASE-7279&lt;/del&gt;&lt;/a&gt; Avoid copying the rowkey in RegionScanner, StoreScanner, and ScanQueryMatcher (Revision 1417716)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12630939">HBASE-7774</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12556058" name="7279-0.94-v2.txt" size="9679" author="lhofhansl" created="Wed, 5 Dec 2012 06:17:41 +0000"/>
                            <attachment id="12556065" name="7279-0.94-v3.txt" size="9673" author="lhofhansl" created="Wed, 5 Dec 2012 07:07:23 +0000"/>
                            <attachment id="12556133" name="7279-0.94-v4.txt" size="11414" author="lhofhansl" created="Wed, 5 Dec 2012 18:56:25 +0000"/>
                            <attachment id="12556049" name="7279-0.94.txt" size="9187" author="lhofhansl" created="Wed, 5 Dec 2012 03:41:12 +0000"/>
                            <attachment id="12556066" name="7279-0.96-v1.txt" size="9969" author="lhofhansl" created="Wed, 5 Dec 2012 07:08:17 +0000"/>
                            <attachment id="12556134" name="7279-0.96-v2.txt" size="11749" author="lhofhansl" created="Wed, 5 Dec 2012 18:59:55 +0000"/>
                            <attachment id="12556150" name="7279-0.96-v3.txt" size="11749" author="lhofhansl" created="Wed, 5 Dec 2012 21:27:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 5 Dec 2012 04:28:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>296071</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 49 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1451r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>232281</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>