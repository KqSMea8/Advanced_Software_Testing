<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:02:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9213/HBASE-9213.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9213] create a unified shim for hadoop 1 and 2 so that there&apos;s one build of HBase</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9213</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is a brainstorming JIRA. Working with HBase dependency at this point seems to be rather painful from what I hear from other folks. We could do the hive model with unified shim, built in such manner that it can work with either version, where at build time dependencies for all 2-3 versions are pulled and the appropriate one is used for tests, and when running HBase you have to point at Hadoop directory to get the dependencies. I am not very proficient at maven so not quite certain of the best solution yet.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12663565">HBASE-9213</key>
            <summary>create a unified shim for hadoop 1 and 2 so that there&apos;s one build of HBase</summary>
                <type id="13" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Brainstorming</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="sershe">Sergey Shelukhin</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Aug 2013 03:36:46 +0000</created>
                <updated>Wed, 29 Jan 2014 23:19:21 +0000</updated>
                                                                            <component>build</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13739193" author="eclark" created="Wed, 14 Aug 2013 03:59:07 +0000"  >&lt;p&gt;What we have for actually publishing to maven makes things much better. I think we should at least give it one real release.&lt;/p&gt;

&lt;p&gt;The way we will do real releases now that stack did all of the maven goodness (with hadoop version in the hbase version string), is very different from what was there just a couple of weeks ago.  The downstream projects have reported that it works well for them and testing it does produce a much easier story than previously (especially if it&apos;s hbase-client only).&lt;/p&gt;

&lt;p&gt;edit: formatting.&lt;/p&gt;</comment>
                            <comment id="13739200" author="eclark" created="Wed, 14 Aug 2013 04:11:09 +0000"  >&lt;p&gt;Check out &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8224&quot; title=&quot;Publish hbase build against h1 and h2 adding &amp;#39;-hadoop1&amp;#39; or &amp;#39;-hadoop2&amp;#39; to version string&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8224&quot;&gt;&lt;del&gt;HBASE-8224&lt;/del&gt;&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;The solution there is basically the same solution that the entire scala build chain used &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;.  They had a build tool on top of maven/ivy.  Instead we have stack&apos;s script&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.scala-sbt.org/0.13.0/docs/Detailed-Topics/Cross-Build.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.scala-sbt.org/0.13.0/docs/Detailed-Topics/Cross-Build.html&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://github.com/apache/hbase/blob/trunk/dev-support/generate-hadoopX-poms.sh&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/trunk/dev-support/generate-hadoopX-poms.sh&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13740189" author="sershe" created="Wed, 14 Aug 2013 21:06:41 +0000"  >&lt;p&gt;Is the script run as part of HBase build, or do you have to do it manually/add it to automated build?&lt;/p&gt;</comment>
                            <comment id="13740219" author="eclark" created="Wed, 14 Aug 2013 21:30:52 +0000"  >&lt;p&gt;Pretty sure that as it currently stands it&apos;s only for releases into maven central so not that often and definitely not part of the normal build process.&lt;/p&gt;</comment>
                            <comment id="13740475" author="roshan_naik" created="Thu, 15 Aug 2013 00:20:02 +0000"  >&lt;p&gt;Two questions:&lt;/p&gt;

&lt;p&gt;1) So can somebody confirm that the in Apache HBase will be publishing a separate maven artifacts like this  for instance: &lt;/p&gt;

&lt;p&gt;-&amp;gt; hbase-common-0.9X.Y-hadoop1  &amp;amp; hbase-common-0.9X.Y-hadoop2&lt;/p&gt;

&lt;p&gt;Minor detail...I am not certain if &apos;-hadoop1&apos; and &apos;-hadoop2&apos; will preced the version number or follow it in the above naming convention.&lt;/p&gt;


&lt;p&gt;2) If the above is true, is there going to be an additional third artifact also going to be published of the form :&lt;/p&gt;

&lt;p&gt;-&amp;gt; hbase-common-0.9X.Y&lt;/p&gt;

</comment>
                            <comment id="13740528" author="eclark" created="Thu, 15 Aug 2013 01:14:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://repository.apache.org/content/groups/snapshots/org/apache/hbase/hbase-common/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repository.apache.org/content/groups/snapshots/org/apache/hbase/hbase-common/&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;I think that there will be two different versions of hbase-common&lt;/p&gt;</comment>
                            <comment id="13740539" author="sershe" created="Thu, 15 Aug 2013 01:24:08 +0000"  >&lt;p&gt;I wonder what the advantage of this model is though. You have two separate builds for what is essentially the same code, as opposed to one that can be used with both versions of Hadoop.&lt;br/&gt;
Will hbase-common-hadoop1 work with hadoop2 if you upgrade to hadoop2 and replace the dependencies in hbase classpath? If yes this is still confusing, and an unnecessary coupling. &lt;/p&gt;

&lt;p&gt;PS: there&apos;s also &lt;a href=&quot;https://repository.apache.org/content/groups/snapshots/org/apache/hbase/hbase-hadoop1-compat/0.95.2-hadoop2-SNAPSHOT/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repository.apache.org/content/groups/snapshots/org/apache/hbase/hbase-hadoop1-compat/0.95.2-hadoop2-SNAPSHOT/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13740562" author="eclark" created="Thu, 15 Aug 2013 01:42:53 +0000"  >&lt;p&gt;Hadoop changed some interfaces in 1.0 to classes in 2.0 (or maybe it was the other way around I never fully investigated) so the byte code produced isn&apos;t compatible.  It should be possible to move all such cases into the shim layer only, but that work hasn&apos;t been done.   Because of that I&apos;m not 100% sure that the hbase-common module is hadoop version agnostic.  (That seems like a problem worth solving)&lt;/p&gt;

&lt;p&gt;I believe that the problem of building both compat shims when only one is needed, has been fixed.  If you look at maven now you&apos;ll see only one compat module per build.&lt;/p&gt;</comment>
                            <comment id="13740569" author="sershe" created="Thu, 15 Aug 2013 01:51:10 +0000"  >&lt;p&gt;Well, ideally we should solve that problem.&lt;br/&gt;
Can you point at builds that produced these? I am looking at recent Apache builds e.g. &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/448/consoleText&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/448/consoleText&lt;/a&gt; and I still see old variants being installed e.g. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Installing /home/jenkins/jenkins-slave/workspace/hbase-0.95/0.95/hbase-common/target/hbase-common-0.95.2-SNAPSHOT.jar to /home/jenkins/.m2/repository/org/apache/hbase/hbase-common/0.95.2-SNAPSHOT/hbase-common-0.95.2-SNAPSHOT.jar&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13740581" author="eclark" created="Thu, 15 Aug 2013 02:05:13 +0000"  >&lt;p&gt;It was a manual test by stack I think.&lt;/p&gt;</comment>
                            <comment id="13740587" author="sershe" created="Thu, 15 Aug 2013 02:11:03 +0000"  >&lt;p&gt;So what&apos;s the story for this going forward? Will it be official HBase build for 0.95 and trunk for now?&lt;/p&gt;</comment>
                            <comment id="13740690" author="hudson" created="Thu, 15 Aug 2013 05:12:27 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #4393 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4393/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4393/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9213&quot; title=&quot;create a unified shim for hadoop 1 and 2 so that there&amp;#39;s one build of HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9213&quot;&gt;HBASE-9213&lt;/a&gt; Fix release warning (eclark: rev 1514140)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/trace/HBaseHTraceConfiguration.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13740695" author="stack" created="Thu, 15 Aug 2013 05:19:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt; A single build would be coolio.  If you have ideas for how to make it work, I am all ears.&lt;/p&gt;

&lt;p&gt;Does the hive shim work well?  It strikes me as a horror to keep up.  Our compat modules that Elliott made are hard enough and these are just meshing APIs.&lt;/p&gt;

&lt;p&gt;We need to build tgzs and publish to maven.  We need to do it for hadoop1 and hadoop2.  The tgz needs to include all dependencies of which there are quiet a few when you are running on hadoop2.  The dependencies are ill-specified in associated poms overly-cautious pulling in way more than is needed in the name of &quot;just-in-case&quot;.  hadoop1 and hadoop2 and their dependencies likely need to be siloed (We might do this in a subdir in a tgz).&lt;/p&gt;

&lt;p&gt;Remember also that the hadoop we ship w/ is likely moot anyways as it is unlikely to match what the user is running; user has to replace the hadoop we ship w/ the hadoop they are running.&lt;/p&gt;

&lt;p&gt;Thats the tgz.&lt;/p&gt;

&lt;p&gt;Then there is publishing to maven.  When we publish to maven we say what we depend on in the associated pom we publish.  The vocabulary available to you when you are doing maven publishing is limited, cryptic, broken (as best as I can discern), and there is no means of flipping a switch to say &quot;I am currently dependent on hadoop1 (as opposed to hadoop2)&quot; when downstream dependencies are doing their dependency pull.&lt;/p&gt;

&lt;p&gt;So, after messing w/ the maven arcane &amp;#8211; e.g. classifications, trying to set properties/profiles at publish and dependency fullfillment time, etc. (of note, each plugin is written by a different crew w/o enforcement of how to name the property that refers to a particular attribute so each plugin can name it as it will, and then when it comes to corner-facility such as classification, plugins may implement or not so you have &apos;interesting&apos; cases such as classifications works for near all of the build pipeline but NOT for the final assembly plugin step, the plugin that makes the tgzs....or the release plugin doesn&apos;t even know the name of the pom that it is supposed to be reading though you can pass it on the command line to mvn and all other plugins are fine w/ that making it so you have to tell this plugin what pom to use via gymnastics), we&apos;ve ended up w/ our current hokey system where our build can be set against a target hadoop using maven profiles which works fine for local builds or builds up on the build box for unit tests etc., but it is lacking when it comes time to publish.  Publishing, we need to generate two different artifacts and we denote them by adding -hadoop1 and -hadoop2 to our version.  I could not make mvn do this for us so I made the script to do it working off the committed poms.&lt;/p&gt;

&lt;p&gt;On hbase-common, we could likely have a single jar that would work with both hadoop1 and hadoop2.  As Elliott says, we haven&apos;t done the work (it could be just a simple hack in the script over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8224&quot; title=&quot;Publish hbase build against h1 and h2 adding &amp;#39;-hadoop1&amp;#39; or &amp;#39;-hadoop2&amp;#39; to version string&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8224&quot;&gt;&lt;del&gt;HBASE-8224&lt;/del&gt;&lt;/a&gt;).  I&apos;ve not tried it (it didn&apos;t occur to me &amp;#8211; it is a good idea).  The prefix-tree module could likely drop the hadoop1 and hadoop2 suffix.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=roshan_naik&quot; class=&quot;user-hover&quot; rel=&quot;roshan_naik&quot;&gt;Roshan Naik&lt;/a&gt; Yes on 1.  See publish SNAPSHOTS for examples (let us know if the recent ones do not work for you &amp;#8211; we have heard from others that they do work as dependencies for downstreamers so we are thinking we are good here until we hear otherwise).  On 2., yes... all artifacts will have the -hadoop2 and -hadoop1 appended but you probably won&apos;t have to worry because they will be pulled in for you by maven (we did some tests to ensure the right dependencies come in).  Let us know if it isn&apos;t working for you.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13740728" author="eclark" created="Thu, 15 Aug 2013 05:53:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;Does the hive shim work well&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I looked into the hive shim when I was making the compat modules.  It&apos;s not really possible for us since we&apos;re creating classes that need to inherit from different class names in hadoop1/2. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13740782" author="hudson" created="Thu, 15 Aug 2013 07:36:40 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.95 #451 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/451/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/451/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9213&quot; title=&quot;create a unified shim for hadoop 1 and 2 so that there&amp;#39;s one build of HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9213&quot;&gt;HBASE-9213&lt;/a&gt; Fix release warning (eclark: rev 1514141)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/trace/HBaseHTraceConfiguration.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13741099" author="roshan_naik" created="Thu, 15 Aug 2013 15:57:50 +0000"  >&lt;p&gt;Stack,Elliott,&lt;br/&gt;
   Could you confirm ... henceforth, building hbase by running mvn on the default pom.xml would be incorrect ? once must run mvn against the pom generated by the gen script (from HBSE-8224). If thats true perhaps it would be good idea to rename the pom.xml to say pom.xml.template. That way people are not likely to build hbase the wrong way accidentally.&lt;/p&gt;


&lt;p&gt;Stack,&lt;br/&gt;
   I am confused that you answered &apos;yes&apos; to my question #2. My asked if a third artifact by name of hbase-common-0.96  will be published in addition to hbase-common-0.96-hadoop1 &amp;amp; hbase-common-0.96-hadoop2.  if the answer is really &apos;yes&apos;, it is unclear to me what is the purpose of it and how it differs from the other two.&lt;/p&gt;
</comment>
                            <comment id="13741207" author="stack" created="Thu, 15 Aug 2013 17:18:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=roshan_naik&quot; class=&quot;user-hover&quot; rel=&quot;roshan_naik&quot;&gt;Roshan Naik&lt;/a&gt; if we name it pom.xml.template, folks won&apos;t be able to do &apos;mvn install&apos;, they will have to do &apos;mvn -f -pom.xml.template install&apos;.  That is just going to piss off the majority of devs.&lt;/p&gt;

&lt;p&gt;On your questions #2, I misread.  No, there will not be a third artifact published.... there will only be -hadoop1 and -hadoop2 artifacts (and the -hadoop1, -hadoop2 comes after the version but be warned that the -test and -src appendages that mvn adds are tacked on to the &apos;version&apos; so come after the -hadoop1, -hadoop2 suffix.  See the published SNAPSHOTs for examples).&lt;/p&gt;</comment>
                            <comment id="13741243" author="sershe" created="Thu, 15 Aug 2013 17:35:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; Can you elaborate? Cannot we do it in respective shims/add a proxy class/...? Granted, HBase uses HDFS a lot more than Hive,  but it should still be doable.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We need to build tgzs and publish to maven. We need to do it for hadoop1 and hadoop2. The tgz needs to include all dependencies of which there are quiet a few when you are running on hadoop2. The dependencies are ill-specified in associated poms overly-cautious pulling in way more than is needed in the name of &quot;just-in-case&quot;. hadoop1 and hadoop2 and their dependencies likely need to be siloed (We might do this in a subdir in a tgz).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Do we really need to ship all the dependencies? User would point us to their Hadoop anyway as you mention below. So no need to ship our own Hadoop jars.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Then there is publishing to maven. When we publish to maven we say what we depend on in the associated pom we publish. The vocabulary available to you when you are doing maven publishing is limited, cryptic, broken (as best as I can discern), and there is no means of flipping a switch to say &quot;I am currently dependent on hadoop1 (as opposed to hadoop2)&quot; when downstream dependencies are doing their dependency pull.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As far as I understand you depend on both. So when somebody pulls you for their own build you also pull both. Then shim is pointed at the correct ones based on your local build flags.&lt;br/&gt;
Shim always sees just one set (from where it&apos;s pointed to in local tests, or from where the user pointed it to in production), figures out which one it is and initializes itself accordingly.&lt;br/&gt;
It is not the prettiest thing, but reliable (if shim cannot recognize the version then chances are you are broken wrt it anyway), and avoids two builds (and maven arcane &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On hbase-common, we could likely have a single jar that would work with both hadoop1 and hadoop2. As Elliott says, we haven&apos;t done the work (it could be just a simple hack in the script over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8224&quot; title=&quot;Publish hbase build against h1 and h2 adding &amp;#39;-hadoop1&amp;#39; or &amp;#39;-hadoop2&amp;#39; to version string&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8224&quot;&gt;&lt;del&gt;HBASE-8224&lt;/del&gt;&lt;/a&gt;). I&apos;ve not tried it (it didn&apos;t occur to me &#8211; it is a good idea). The prefix-tree module could likely drop the hadoop1 and hadoop2 suffix.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The jars have different size, so it looks like they are indeed different...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;all artifacts will have the -hadoop2 and -hadoop1 appended but you probably won&apos;t have to worry because they will be pulled in for you by maven (we did some tests to ensure the right dependencies come in). Let us know if it isn&apos;t working for you. Thanks.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But you would need to include a particular one still, right?&lt;/p&gt;</comment>
                            <comment id="13741278" author="stack" created="Thu, 15 Aug 2013 18:01:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do we really need to ship all the dependencies?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No.  The work to prune what is needed is involved (you need to test multiple contexts to ensure a removed jar is not needed).  I&apos;ve not done it as I do not have a week to set aside any time in my near future (and this work should rightly be done up in our parent project so more than just hbase benefits from the pruning)&lt;/p&gt;

&lt;p&gt;HBase needs to run standalone mode so it needs to ship w/ an hadoop.  That has been our style up to this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;As far as I understand you depend on both. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No.  When we package for hadoop1 we depend on hadoop1 only.  Ditto hadoop2.&lt;/p&gt;

&lt;p&gt;I don&apos;t follow the rest on your shim (it sounds good &amp;#8211; not doing two artifacts).&lt;/p&gt;

&lt;p&gt;That is interesting to learn that the jars are different size.  I wonder what the diff is?  Maybe something dumb like includes have versions burned into the jar?  I&apos;d think we should be able to have a hbase-common that would work w/ either hadoop.  It would be a bug if this were not so (I think).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But you would need to include a particular one still, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Downstreamers would need to say if they want hadoop1 or hadoop2 version of hbase, yes.&lt;/p&gt;

&lt;p&gt;I suppose we are forcing downstreamers to answer there hadoop1 or hadoop2 question but I believe that unavoidable, right?  Downstreamers usually want stuff like HBaseTestingUtility so they can spin up a little cluster.  As soon as this is going on, they&apos;ll want an hdfs.  Because of this latter, they must make a choice.&lt;/p&gt;

&lt;p&gt;I suppose we could do some work so that we hid hadoop1 or hadoop2 as much as possible but I&apos;ve not done it (I am totally burnt on maven wrangling.  I&apos;d rather dig my eyes out w/ a fork than spend any more time on build issues.  See the issues that led us to our current build for why my frustration.  Fellow-travelers such as Elliot and Enis seemed to have the same experience so I don&apos;t think it a maven-blindness on my part).&lt;/p&gt;

&lt;p&gt;Good on you Sergey.&lt;/p&gt;</comment>
                            <comment id="13741413" author="sershe" created="Thu, 15 Aug 2013 19:56:28 +0000"  >&lt;p&gt;Hmm... yeah, Hive doesn&apos;t ship with dependencies like Hadoop, they rely on user to provide that. So that is also simpler. Let me think about it sometime.&lt;/p&gt;

&lt;p&gt;Meanwhile, is Apache build going to be switched to new stuff, and if so is there ETA? Should I file a JIRA given that original (to provide a script) is done?&lt;/p&gt;</comment>
                            <comment id="13741417" author="roshan_naik" created="Thu, 15 Aug 2013 20:00:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;&quot;I am totally burnt on maven wrangling. I&apos;d rather dig my eyes out w/ a fork than spend any more time &quot;&lt;/p&gt;&lt;/blockquote&gt;


&lt;p&gt;Stack... That comment takes the award for the funniest comment of the month. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13741422" author="stack" created="Thu, 15 Aug 2013 20:09:08 +0000"  >&lt;p&gt;I&apos;m doing 0.95.2 now with the new stuff &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13741427" author="sershe" created="Thu, 15 Aug 2013 20:11:25 +0000"  >&lt;p&gt;yeah but Apache build still publishes the old stuff... this is confusing. Is this a separate thing? How would people know which to consume&lt;/p&gt;</comment>
                            <comment id="13741430" author="sershe" created="Thu, 15 Aug 2013 20:11:53 +0000"  >&lt;p&gt;Sorry this is confusing for me now, I am not saying this is inherently confusing &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13741549" author="stack" created="Thu, 15 Aug 2013 22:03:08 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt; np.&lt;/p&gt;

&lt;p&gt;How you mean publishes the old stuff?  You mean into your local repo?  Yeah, that is true.  Regards what to consume, isn&apos;t that easy.  Up in apache we have hadoop1 and hadoop2 tgzs or in mvn we have hbase-X.Y.Z-hadoop1 and hbase-X.Y.Z-hadoop2 only.  See &lt;a href=&quot;http://people.apache.org/~stack/hbase-0.95.2RC0/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~stack/hbase-0.95.2RC0/&lt;/a&gt; and &lt;a href=&quot;https://repository.apache.org/content/repositories/releases/org/apache/hbase/hbase/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repository.apache.org/content/repositories/releases/org/apache/hbase/hbase/&lt;/a&gt; for example based off hbase-0.95.2.&lt;/p&gt;</comment>
                            <comment id="13741630" author="sershe" created="Thu, 15 Aug 2013 23:02:29 +0000"  >&lt;p&gt;See my comment above, example build is &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/448/consoleText&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/448/consoleText&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="13743162" author="stack" created="Sun, 18 Aug 2013 06:46:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt; You mean that when builds run as they do up on apache build box, that the produce is hbase-0.97.0-SNAPSHOT and not hbase-0.97.0-SNAPSHOT-hadoop1?  If so, yeah.  Profiles don&apos;t work.  Can&apos;t set version from profile.  Can&apos;t even set version from command line.  I suppose I could amend the apache and ec2 builds to use our little script so we produce hadoop1 or hadoop2 builds but I don&apos;t think that is what you want.&lt;/p&gt;

&lt;p&gt;I just noticed that our hbase-common depends on hadoop so yeah, different dependencies dependent on if for hadoop1 or hadoop2... &lt;/p&gt;</comment>
                            <comment id="13748507" author="eric@apache.org" created="Fri, 23 Aug 2013 12:35:24 +0000"  >&lt;p&gt;Can you list the pain? &amp;lt;&amp;lt;&amp;lt; &quot;at this point seems to be rather painful from what I hear from other folks&quot;&lt;br/&gt;
Where can I read form the &quot;hive shim&quot;?&lt;/p&gt;

&lt;p&gt;(Sorry for this late questions, and also if it has already been listed somewhere)&lt;/p&gt;</comment>
                            <comment id="13748756" author="sershe" created="Fri, 23 Aug 2013 17:33:06 +0000"  >&lt;p&gt;There were some problems with maven not pulling transitive dependencies due to a variable in pom file, which was solved by separating builds in the jira mentioned above. Other projects have to specify internal modules to get compatibility with hadoop1 and hadoop2. It&apos;s also not clear now with 2 builds how people will organize their builds (e.g. will Flume have to have two builds or Hbase shim too?), and how deployment is going to work - deployed -hadoop1 build will not be able to work with hadoop2 is that is upgraded as far as I understand.&lt;/p&gt;

&lt;p&gt;Hive shim - I am not aware of any documentation, so code is something that can be read &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Here&apos;s my understanding, I think this is correct in general, might have some incorrect details. Hive has an advantage of not shipping dependencies such as Hadoop. So, at build time, for tests/etc., they get all dependencies for both hadoop versions; build points to the correct one based on profile. In a cluster, the user is expected to supply hadoop. The shim creator determines at runtime which hadoop is used and provides the appropriate shim.&lt;br/&gt;
So, one build of Hive can run on multiple versions and user doesn&apos;t need to bother as long as there&apos;s Hadoop in the cluster.&lt;/p&gt;</comment>
                            <comment id="13749322" author="eric@apache.org" created="Sat, 24 Aug 2013 06:24:42 +0000"  >&lt;p&gt;Thx Sergey for the inputs. Will have a look to hive shim in their src.&lt;/p&gt;

&lt;p&gt;Thinking loud:&lt;/p&gt;

&lt;p&gt;1.- If hbase continues to ship hadoop jars, I guess the focus point is how to create multiple tar.gz artifact s with a single &apos;mvn release&apos; command (will look how this is done now - &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; quick pointer always welcome for this).&lt;/p&gt;

&lt;p&gt;2.- Even if hbase does not ship hadoop jars, the same requirement as in 1.- applies, because we need to ship the correct hbase-compat jars (still worth now that will we&apos;ll have a new hadoop3-compat). So I don&apos;t see how &lt;/p&gt;

&lt;p&gt;3.- Playing with compat modules and profiles is prolly annoying for a dev, especially if he is not in love (or even hates) maven... I personally found an efficient way to deal on the cli and in the ide with those profiles and modules. I guess it is a matter of better showing/explaining this via doc, blog, video...&lt;/p&gt;

&lt;p&gt;4.- Going to any other build tool will just move the problem. The specific and hard issue here are inherent to the hadoop api/versions/packaging being not backwards compatible. If we want to continue to support all those hadoop versions, we need to deal with those constraints.&lt;/p&gt;

&lt;p&gt;5. Working on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6581&quot; title=&quot;Build with hadoop.profile=3.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6581&quot;&gt;HBASE-6581&lt;/a&gt;, i have carefully checked that the tar.gz were containing the correct hadoop jar (excluding e.g. hadoop-core 1 if needed, excluding the compat jar that are not needed,...)&lt;/p&gt;

&lt;p&gt;6. There maybe some more clever way to work with classpath loading. On startup, hbase could determine it self on which hadoop it is running. In this case (see 2. where we don&apos;t ship hadoop jars), we would ship all hbase jars, and work with clever classloaders... This sound like something begun in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6407&quot; title=&quot;Investigate moving to DI (guice) framework for plugin arch.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6407&quot;&gt;&lt;del&gt;HBASE-6407&lt;/del&gt;&lt;/a&gt;. Injection/classloading/plugins are different beasts, although belonging to the same family.&lt;/p&gt;
</comment>
                            <comment id="13750415" author="stack" created="Mon, 26 Aug 2013 19:04:34 +0000"  >&lt;p&gt;If we did what hive did, questions:&lt;/p&gt;

&lt;p&gt;1. We would complicate the simple case, running hbase standalone (&quot;Download hbase binary, if hadoop 1.x.x, copy jars a, b, c to lib, if hadoop 2.x.x, copy jars d, e, f.  Do not copy hadoop 0.20 jars because we do not work unless you .... and so on&quot;).  We already get dinged on being &quot;complicated&quot;.  We would be raising the bar for the folks who just want to try it out.&lt;br/&gt;
2. How do the hive shims work?  Is it download hive, put in place the hive-hadoop-2 shim, and then add in hadoop2?  Or is it download hive and put in place hadoop2 (and hive will figure via reflection what it has under it and then invoke the approriate hadoop1 or hadoop2 method?).  If the former, that is what we have now (our shims are called hbase-hadoop*-compat).  If the latter case, then IIUC, it would be untenable us doing reflection to figure if hadoop metrics1 or hadoop metrics2 and then per metric, make the appropriate invocation; we&apos;d make a horrid reflection spaghetti.&lt;/p&gt;

&lt;p&gt;Maybe we could have a setup script where you say what you want to run against and we then go fetch what we need (including compat modules from maven) and then you start hbase (this&apos;d work for standalone mode but then how to distinguish from actual install-on-a-cluster)&lt;/p&gt;

&lt;p&gt;1. This is basically still correct for building different tgzs &lt;a href=&quot;http://hbase.apache.org/book.html#build&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book.html#build&lt;/a&gt; (I need to update)&lt;br/&gt;
4. Hard thing about another build tool is that in the end we have to publish to a maven repo somehow; we could have a build tool and then have another script to do maven publish (and I&apos;m wary that &quot;all is fixed if you just use this other build tool&quot; &amp;#8211; heard that one before).&lt;/p&gt;
</comment>
                            <comment id="13871003" author="eric@apache.org" created="Tue, 14 Jan 2014 18:54:24 +0000"  >&lt;p&gt;I am now working on a more generic shim a-la-hive, but may be with some spiced with guice (cfr &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6407&quot; title=&quot;Investigate moving to DI (guice) framework for plugin arch.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6407&quot;&gt;&lt;del&gt;HBASE-6407&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13885980" author="stack" created="Wed, 29 Jan 2014 23:19:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=echarles&quot; class=&quot;user-hover&quot; rel=&quot;echarles&quot;&gt;Eric Charles&lt;/a&gt; See the refguide.  Try to doc. it so anyone can do the build.  &lt;a href=&quot;http://hbase.apache.org/book/releasing.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book/releasing.html&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12665018">HBASE-9300</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 Aug 2013 03:59:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343566</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 46 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1n8zr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343870</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>