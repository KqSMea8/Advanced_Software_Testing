<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:29:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5583/HBASE-5583.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5583] Master restart on create table with splitkeys does not recreate table with all the splitkey regions</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5583</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;-&amp;gt; Create table using splitkeys&lt;br/&gt;
-&amp;gt; MAster goes down before all regions are added to meta&lt;br/&gt;
-&amp;gt; On master restart the table is again enabled but with less number of regions than specified in splitkeys&lt;/p&gt;

&lt;p&gt;Anyway client will get an exception if i had called sync create table.  But table exists or not check will say table exists. &lt;br/&gt;
Is this scenario to be handled by client only or can we have some mechanism on the master side for this? Pls suggest.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12546570">HBASE-5583</key>
            <summary>Master restart on create table with splitkeys does not recreate table with all the splitkey regions</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Mar 2012 11:38:14 +0000</created>
                <updated>Wed, 16 Nov 2016 19:57:42 +0000</updated>
                            <resolved>Wed, 16 Nov 2016 19:57:42 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="13233150" author="jmhsieh" created="Tue, 20 Mar 2012 02:52:36 +0000"  >&lt;p&gt;Maybe we should put plans for master actions into ZK, and then remove each step as they are completed.  This would allow a backup master or the restarted master to pick up and continue where the previous master had died.&lt;/p&gt;

&lt;p&gt;So this we may have a zk structure act like a queue with region infos and then let the masters drain from there to create .META. rows.&lt;/p&gt;

&lt;p&gt;I was thinking about adding a flag to info:regioninfo or extra column (&quot;info:unfinshedPresplitCreate&quot;) but this would seem to suffer from a similar problem if the master failed as these were being removed after all regions created.&lt;/p&gt;</comment>
                            <comment id="13233252" author="ram_krish" created="Tue, 20 Mar 2012 06:25:03 +0000"  >&lt;p&gt;@Jon &lt;br/&gt;
Yes we should go with some form of persisting the splitkeys.  ZK should be the best place for that.&lt;/p&gt;</comment>
                            <comment id="13233456" author="ram_krish" created="Tue, 20 Mar 2012 14:46:58 +0000"  >&lt;p&gt;One more issue is there&lt;br/&gt;
If the master goes down just after writing the table descriptors and before adding anything to the META, on master restart we move the enabling state tables to enabled only if they have entry in META.  So this is another area we need to address.&lt;br/&gt;
So ZK should ideally used in a better way to track the table creation steps.&lt;/p&gt;</comment>
                            <comment id="13245371" author="ram_krish" created="Tue, 3 Apr 2012 14:53:10 +0000"  >&lt;p&gt;First step update the status in the below to CREATETABLE&lt;br/&gt;
/hbase/table/tableName&lt;br/&gt;
/hbase/table/tableName/currentstep&lt;/p&gt;



&lt;p&gt;-&amp;gt; Create nodes with hregioninfo in the constructor of create table handler.&lt;br/&gt;
Create those many nodes as in the splitkeys.&lt;/p&gt;


&lt;p&gt;-&amp;gt; /hbase/table/tableName/currentStep&lt;br/&gt;
CREATED_SPLIT_KEYS (after the creation of all splitkey nodes)&lt;br/&gt;
CREATING_TD&lt;br/&gt;
ADD_TO_META&lt;br/&gt;
ASSIGN_USER_REGIONS&lt;/p&gt;

&lt;p&gt;if all are done &apos;ENABLED&apos; will be the state of the table.&lt;/p&gt;

&lt;p&gt;-&amp;gt; add regioninfo to  META and on success delete the node created node one by one&lt;/p&gt;



&lt;p&gt;-&amp;gt; IF master fail over happens&lt;/p&gt;

&lt;p&gt;See in what step the node is&lt;br/&gt;
============================&lt;/p&gt;

&lt;p&gt;If failed in ASSIGN_USER_REGIONS &lt;br/&gt;
Just reassign all the regions&lt;/p&gt;

&lt;p&gt;If failed in ADD_TO_META&lt;br/&gt;
Check what regions are not yet added to meta and then do the assignment for all the regions&lt;br/&gt;
We can ensure that the nodes that are available in the zk are the ones for which the meta entry is not updated&lt;/p&gt;

&lt;p&gt;If failed in CREATING_TD&lt;br/&gt;
If tabledescriptor not found create it again. if not go to the next step&lt;/p&gt;

&lt;p&gt;If failed in CREATED_SPLIT_KEYS&lt;br/&gt;
Delete the node so that atleast the next time creation is successful.  Just log it as we cannot throw error back to the client.&lt;/p&gt;

&lt;p&gt;===================================================================================&lt;/p&gt;

&lt;p&gt;We need to create one more api in client called &apos;isTableAvailable()&apos; accepting  splitKeys also.  so that the user can use them to check if really &lt;br/&gt;
the table is created with all the splitkeys.&lt;br/&gt;
Currently the isTableAvailable() just checks if atleast one region is assigned to any RS.&lt;/p&gt;

&lt;p&gt;The current changes does not guarentee that the user table will be created in a synchronous way to the client createTable api.&lt;br/&gt;
but will ensure that while creating any table if the master failover happens the table doesnot get created with less number of&lt;br/&gt;
regions but still the user thinks table creation is sucessful.&lt;/p&gt;

&lt;p&gt;We now distinguish the states where a table was in create flow or in the enable flow.&lt;br/&gt;
Previously the ENABLING state was in master fail over scenario.&lt;/p&gt;

&lt;p&gt;Pls provide your inputs.&lt;/p&gt;</comment>
                            <comment id="13246311" author="zhihyu@ebaysf.com" created="Wed, 4 Apr 2012 14:46:03 +0000"  >&lt;p&gt;Expanding table creation state coverage makes sense.&lt;/p&gt;</comment>
                            <comment id="13604834" author="zjushch" created="Mon, 18 Mar 2013 01:42:16 +0000"  >&lt;p&gt;Could we consider make creating table as a transaction, e.g. create files in tmp directory, atomic put regions to .META. ?&lt;/p&gt;</comment>
                            <comment id="13604846" author="ram_krish" created="Mon, 18 Mar 2013 03:31:14 +0000"  >&lt;p&gt;Ya that was my idea.  I was working on that..had some rough working patch.  But that also had some set of problems.&lt;br/&gt;
Will revive that patch and get back on the issues/problems that we may face.&lt;/p&gt;</comment>
                            <comment id="13605268" author="mbertozzi" created="Mon, 18 Mar 2013 16:18:27 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Could we consider make creating table as a transaction, e.g. create files in tmp directory, atomic put regions to .META.?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We have already that, the problem is that META and the filesystem are two separate operations... so you may fail in the middle and have META but not the fs dir moved...&lt;br/&gt;
The idea of the file-tracking table (mentioned in others jira, e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7806&quot; title=&quot;Isolate the FileSystem calls&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7806&quot;&gt;HBASE-7806&lt;/a&gt;) was exactly to solve the problem and having a single source of truth... and have the table creation/deletion as transaction&lt;/p&gt;</comment>
                            <comment id="13605323" author="ram_krish" created="Mon, 18 Mar 2013 16:32:40 +0000"  >&lt;p&gt;@Matteo&lt;br/&gt;
My plan was to maintain the state of the operation in ZK or HDFS.  Can i refresh the patch that i have and submit for review? &lt;br/&gt;
Or you feel that will not be needed at all.&lt;/p&gt;</comment>
                            <comment id="13605336" author="mbertozzi" created="Mon, 18 Mar 2013 16:38:33 +0000"  >&lt;blockquote&gt;
&lt;p&gt;My plan was to maintain the state of the operation in ZK or HDFS. Can i refresh the patch that i have and submit for review?&lt;br/&gt;
Or you feel that will not be needed at all.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;There&apos;s a long way to the file-tracking table,&lt;br/&gt;
so I&apos;m +1 to have an alternative now based on a ZK or HDFS state&lt;/p&gt;</comment>
                            <comment id="13609212" author="ram_krish" created="Thu, 21 Mar 2013 17:58:48 +0000"  >&lt;p&gt;I am attaching a patch here with the current state of work.&lt;br/&gt;
This is not the final one.&lt;/p&gt;

&lt;p&gt;Still Exception handling and testing is pending.&lt;/p&gt;

&lt;p&gt;I would like to get myself clarified whether am going in the right direction.&lt;br/&gt;
My first question would be&lt;br/&gt;
-&amp;gt; In order to maintain different states at which we are in while creating table should we go for a special node under the table znode or can we add new states to the existing table states like (DISABLING, ENABLING, DISABLED etc).?&lt;/p&gt;

&lt;p&gt;BAsed on this i can rebase the patch.&lt;br/&gt;
Also pls note that the ZooKeeperProto.java is showing as a complete change with out which this patch should be comparitively smaller.  &lt;/p&gt;

&lt;p&gt;-&amp;gt; This patch basically tries to handle table creation on master failure and restart.&lt;br/&gt;
-&amp;gt; Adds a new state CREATINGTABLE instead of ENABLING so that we know that this table is partially created.&lt;br/&gt;
-&amp;gt; Adds a status node under /table to maintain various states of the table creation process (is this seperate node needed or not is my doubt).&lt;br/&gt;
-&amp;gt; Table lock related things needs to be checked.&lt;/p&gt;

&lt;p&gt;Even after we do all this HBaseAdmin.isTableAvailable(tableName, splitKeys) should be used by the client to check if all the regions are created.  &lt;br/&gt;
Feed back is appreciated.&lt;br/&gt;
I can do more testing and handle ZK exceptions in a better way in my further patches.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="13609237" author="anoopsamjohn" created="Thu, 21 Mar 2013 18:08:24 +0000"  >&lt;p&gt;Ram&lt;br/&gt;
       Started going through the patch. It looks so big change but is it really? There generated file is fully rewritten!&lt;br/&gt;
ZooKeeper.proto&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ENABLING = 3;
+    CREATINGTABLE = 4;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can we make CREATINGTABLE -&amp;gt; CREATING?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; State {
+    CREATED_TD = 0;
+    CREATED_REGIONINFO = 1;
+    MOVED_TO_ORIG_LOCATION = 2;
+    ADD_TO_META = 3;
+    ASSIGN_USER_REGIONS = 4;
+    DONE = 4;
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Repeated ordinal. Typo?&lt;br/&gt;
Will continue..&lt;/p&gt;</comment>
                            <comment id="13609245" author="anoopsamjohn" created="Thu, 21 Mar 2013 18:13:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;In order to maintain different states at which we are in while creating table should we go for a special node under the table znode or can we add new states to the existing table states like (DISABLING, ENABLING, DISABLED etc)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;IMO go with separate node.&lt;/p&gt;</comment>
                            <comment id="13609913" author="ram_krish" created="Fri, 22 Mar 2013 04:35:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;It looks so big change but is it really? There generated file is fully rewritten!&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes.. i think i made some mess there.  &lt;br/&gt;
On the enum names and ordering i will finalise the names once the patch comes alright.  BTW thanks for taking a look.&lt;/p&gt;</comment>
                            <comment id="13609926" author="ram_krish" created="Fri, 22 Mar 2013 04:49:50 +0000"  >&lt;p&gt;But going with seperate node we have to do the bookkeeping work for that new node.&lt;br/&gt;
Also need to take care of exception that come out on setting data on that znode.  &lt;br/&gt;
Advantage that we get by updating the same table znode is that things are easy to maintain and we can do the updates automically like the deletion/updation of the table node alone would suffice to indicate some operation is done.  But when we have another znode we need to update that znode also and things will not be automic.&lt;br/&gt;
Particularly on restart scenarios we may face some problems.  Anyway will list out the probs that i faced with one and 2 znodes.&lt;/p&gt;</comment>
                            <comment id="13610244" author="ram_krish" created="Fri, 22 Mar 2013 13:09:25 +0000"  >&lt;p&gt;Just added few more logs and ensured that the proto file is not fully changed.&lt;br/&gt;
Made some changes to the enums.  Yet not started testing and still need to validate some cases.  Uploading for reference.&lt;/p&gt;</comment>
                            <comment id="13615415" author="ram_krish" created="Wed, 27 Mar 2013 15:49:20 +0000"  >&lt;p&gt;This is still WIP in progress.  But overall in better shape.&lt;br/&gt;
Will add more tests with more split keys.&lt;br/&gt;
May be some refactorings are needed still.&lt;/p&gt;</comment>
                            <comment id="13616178" author="ram_krish" created="Thu, 28 Mar 2013 10:31:39 +0000"  >&lt;p&gt;Thinking on the problems of having two znodes is that&lt;br/&gt;
-&amp;gt; Table is ENABLED but before the status znode is cleared the Master goes down.  Now the new master may see that the znode is ENABLED but the status znode will remain there.  We now have to check for every table if the status znode is present and if the table is in ENABLED state we need to delete the znode.&lt;br/&gt;
-&amp;gt; The other case is - while the table creation was going on theere was a failure in table creation and so we go and try to delete the status and znode and also the table znode.  Now assume the master goes down just after the status znode deletion.  Now the new master knows it is a partially created table but it will not know what action to take if the status znode is not available.  According to me this is the only scenario where having 2 status znodes will be problematic.&lt;br/&gt;
-&amp;gt; The advantage of having only one znode is, our entire recovery just depends on the state present in the table znode.  If the table is in any of the state other than ENABLED/ENABLING, DISABLING,DISABLED we go ahead with the existing code.  If the znode is any of the the new states that is introduced by this  patch then master would be clear in knowing what action to take.&lt;/p&gt;

&lt;p&gt;But introducing new state to the new existing table znode - am not sure if others will accept to it.  So some feedback on this part will help me to proceed with the patch.  &lt;/p&gt;</comment>
                            <comment id="13617316" author="ram_krish" created="Fri, 29 Mar 2013 12:59:09 +0000"  >&lt;p&gt;This patch _5 uses the table znode with new states that will be used in table creation.&lt;br/&gt;
If you guys feel this is the best approach i can check out if this cause anyother impact.&lt;br/&gt;
Also need to make the TesetcreateTableHandler to run reliably.&lt;/p&gt;</comment>
                            <comment id="13617755" author="yuzhihong@gmail.com" created="Fri, 29 Mar 2013 21:41:56 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Set&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; getCreatingTables(ZooKeeperWatcher zkw) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; KeeperException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think getTablesInCreation would be better method name.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void removeCreateTableStates(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Suggest renaming removeCreateTableStates() as removeTableStateForTableInCreation().&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Table.State createTableStates[] = { Table.State.CREATING, Table.State.CREATING_TD,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why do you use an array instead of a Set ? That way you don&apos;t need to iterate through the states in ZKTableReadOnly.isTableState()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+         List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; listChildrenNoWatch = ZKUtil.listChildrenNoWatch(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.watcher, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.watcher.tableZNode+&lt;span class=&quot;code-quote&quot;&gt;&quot;/&quot;&lt;/span&gt;+child);
+         &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; string : listChildrenNoWatch) {
+       &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Status node should be prenet &quot;&lt;/span&gt;+string);
+     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I guess you would remove the above in the next patch.&lt;/p&gt;

&lt;p&gt;For createTableCreationStatusNode():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Created children node &quot;&lt;/span&gt;+numberOfChildren);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you keep the above log, please add tableName.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; checkAndSetCreatingTableStates(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; KeeperException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Remove the trailing &apos;s&apos; in method name.&lt;/p&gt;</comment>
                            <comment id="13617762" author="jxiang" created="Fri, 29 Mar 2013 21:54:23 +0000"  >&lt;p&gt;Please ignore if you have already considered about this:  is it simpler to disable the table and let the user create the table again in such a case?  I assume this won&apos;t happen many times.  Or show the user a big warning in this case and let them decide how to move ahead?  Users should use caution if the cluster fails in the middle when a table is created.&lt;/p&gt;</comment>
                            <comment id="13618002" author="ram_krish" created="Sat, 30 Mar 2013 06:39:29 +0000"  >&lt;p&gt;@Jimmy,&lt;br/&gt;
When i was with my previous employer we actually wanted this feature.  The reason was tables was dropped and created on a daily basis.  So because of this problem, the developers had written a client code which creates the table by adding directly into META and then tries to enable those regions. I think that was in 0.90 code.  &lt;br/&gt;
The later version of hbase made the creation more reliable but often in our integration tests and Functional testing we end up with the tables getting half created and we end up in problems.&lt;br/&gt;
That is why it prompted us to work on this.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;s it simpler to disable the table and let the user create the table again in such a case&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes this is possible.  But involves the following changes that i can think of immediately&lt;br/&gt;
-&amp;gt; Even if the table znode is in ENABLING we  should still disable the table.&lt;br/&gt;
&lt;del&gt;&amp;gt; If we mark the table disabled, user should be very clear that the table he created is partial and that is what is DISABLED now. I think the better way is to use a new state&lt;/del&gt; say UNUSABLE (or something like this) which will make the user to take a clear course of action.&lt;br/&gt;
I still feel the above steps are simpler.&lt;br/&gt;
But table creation is the basic step and handling the failure scenarios in this should be more of automated rather than user interference is what i felt.  Hence decided to go on with this way.&lt;br/&gt;
@Ted&lt;br/&gt;
Thanks for going thro the patch.  I will make the necessary changes and upload it.  &lt;br/&gt;
Just waiting for more ideas and views on this.  &lt;/p&gt;</comment>
                            <comment id="13618106" author="jxiang" created="Sat, 30 Mar 2013 15:45:37 +0000"  >&lt;p&gt;@Ram, I see. Thanks.  When you are ready, can we put it on the review board?&lt;/p&gt;</comment>
                            <comment id="13619002" author="ram_krish" created="Mon, 1 Apr 2013 18:20:59 +0000"  >&lt;p&gt;I am facing some problems in making the testcases run.  Or else would have uploaded a patch.  I am still figuring out the root cause.  Will keep updated.&lt;/p&gt;</comment>
                            <comment id="13619718" author="ram_krish" created="Tue, 2 Apr 2013 11:27:11 +0000"  >&lt;p&gt;The added testcases passes.  Will wait for hadoop QA to run&lt;/p&gt;</comment>
                            <comment id="13620616" author="ram_krish" created="Wed, 3 Apr 2013 05:04:31 +0000"  >&lt;p&gt;Added review request in RB - &lt;a href=&quot;https://reviews.apache.org/r/10237/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/10237/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13620640" author="enis" created="Wed, 3 Apr 2013 05:40:28 +0000"  >&lt;p&gt;Sorry for coming in this late to this jira. Ram, have you looked at the generic master coordinated actions jira, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt;? What you are doing here, and what we need in general for operations(create table, disable table, etc) running in master is: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Client initiates the Master operation, gets a trackId in an async response.&lt;/li&gt;
	&lt;li&gt;Operations are written in a sequence of adempotent steps, where each step can be undone. Each step can work on top of partial results from a previous execution.&lt;/li&gt;
	&lt;li&gt;Master executes the steps of operation in sequence. Master either keeps the state of the whole execution stack, or uses a WAL for keeping the execution state.&lt;/li&gt;
	&lt;li&gt;Client query back the execution state by asking the master with the obtained trackId.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This patch only solves the create table problem, for some cases, but cannot be generalized to other operations. Instead of doing it case-by-case, we should really solve this in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt; I think. As I outlined there, there are 3 ways, that we can approach this: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Keeping the master state in zookeeper. Your patch does this for create table. However, we should go with the FATE approach if we decide on this.&lt;/li&gt;
	&lt;li&gt;Keeping the state in an WAL from master. This log will use hlog, but will be owned by the active master. recovery is done using this.&lt;/li&gt;
	&lt;li&gt;Keeping the state in a system table. Since HBase tables in turn use WAL&apos;s, this is just indirectly using a WAL.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13620650" author="ram_krish" created="Wed, 3 Apr 2013 05:58:00 +0000"  >&lt;p&gt;@Enis &lt;br/&gt;
Off late did not watch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt; JIRA closely. I agree all the master originated table management operations should be generic. I will watch the JIRA and participate in discussions over there.&lt;br/&gt;
So if we don&apos;t need this feature then i can create a patch for 0.94 if it  makes sense to have it there.&lt;br/&gt;
Till FATE is in place can we go ahead with this? Just asking your opinion.&lt;/p&gt;</comment>
                            <comment id="13620654" author="enis" created="Wed, 3 Apr 2013 06:09:20 +0000"  >&lt;p&gt;Thanks Ram. Yes, the design in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt; is not finalized yet unfortunately. We wanted to bring FATE, which will only handle the client initiated operations, not stuff like region assignment. Then the other WAL approaches came, and now Sergey&apos;s design. In any case, the issue probably won&apos;t cut it for 0.94.&lt;/p&gt;

&lt;p&gt;I would not object to getting the patch in this issue in, given that the design is still in discussion. My only concern would be that the table state is checked in a lot of places, so we should be careful. If you think that solving this issue only for create table with splits is important we can go with your approach. Otherwise, I would wait for a resolution on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt;.  &lt;/p&gt;</comment>
                            <comment id="13620663" author="hadoopqa" created="Wed, 3 Apr 2013 06:18:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12576723/HBASE-5583_new_1_review.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12576723/HBASE-5583_new_1_review.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestAssignmentManager&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5112//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13620779" author="ram_krish" created="Wed, 3 Apr 2013 09:33:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;I would not object to getting the patch in this issue in, given that the design is still in discussion. My only concern would be that the table state is checked in a lot of places, so we should be careful. If you think that solving this issue only for create table with splits is important we can go with your approach. Otherwise, I would wait for a resolution on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Enis concern here is valid.  &lt;br/&gt;
What other folks think on this, i can work based on that.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;,&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt;,&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt;,&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rajesh23&quot; class=&quot;user-hover&quot; rel=&quot;rajesh23&quot;&gt;rajeshbabu&lt;/a&gt;,&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt; - Your thoughts?&lt;/p&gt;</comment>
                            <comment id="13621011" author="jxiang" created="Wed, 3 Apr 2013 15:58:35 +0000"  >&lt;p&gt;To me, I think we can wait for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt;, if this is not so urgent.&lt;/p&gt;</comment>
                            <comment id="13635346" author="ram_krish" created="Thu, 18 Apr 2013 17:02:55 +0000"  >&lt;p&gt;If &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt; takes some more time can we check this ?&lt;/p&gt;</comment>
                            <comment id="13635349" author="yuzhihong@gmail.com" created="Thu, 18 Apr 2013 17:05:08 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt; has no assignee and no Fix Version.&lt;/p&gt;

&lt;p&gt;I think we can revive discussion for this JIRA.&lt;/p&gt;</comment>
                            <comment id="13662145" author="ram_krish" created="Mon, 20 May 2013 16:54:48 +0000"  >&lt;p&gt;Its more than one month, is it ok if we can revive now?  Ted agreed to it a month ago itself. What other feel?&lt;/p&gt;</comment>
                            <comment id="13815420" author="hadoopqa" created="Wed, 6 Nov 2013 23:03:03 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12576723/HBASE-5583_new_1_review.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12576723/HBASE-5583_new_1_review.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7763//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7763//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13849698" author="hadoopqa" created="Mon, 16 Dec 2013 20:33:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12576723/HBASE-5583_new_1_review.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12576723/HBASE-5583_new_1_review.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8186//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8186//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14126664" author="hadoopqa" created="Tue, 9 Sep 2014 06:13:01 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12576723/HBASE-5583_new_1_review.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12576723/HBASE-5583_new_1_review.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12576723&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10778//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10778//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15671443" author="mbertozzi" created="Wed, 16 Nov 2016 19:57:42 +0000"  >&lt;p&gt;This got fixed by proc-v2 &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13203&quot; title=&quot;Procedure v2 - master create/delete table&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13203&quot;&gt;&lt;del&gt;HBASE-13203&lt;/del&gt;&lt;/a&gt;, where now create table and the other DDLs are using a state machine and on restart they resume from where they left off with all the information they need to complete the operation&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12574840" name="HBASE-5583_new_1.patch" size="542041" author="ram_krish" created="Thu, 21 Mar 2013 17:53:02 +0000"/>
                            <attachment id="12576723" name="HBASE-5583_new_1_review.patch" size="77745" author="ram_krish" created="Wed, 3 Apr 2013 05:05:06 +0000"/>
                            <attachment id="12575007" name="HBASE-5583_new_2.patch" size="67095" author="ram_krish" created="Fri, 22 Mar 2013 13:10:47 +0000"/>
                            <attachment id="12575722" name="HBASE-5583_new_4_WIP.patch" size="93546" author="ram_krish" created="Wed, 27 Mar 2013 15:49:20 +0000"/>
                            <attachment id="12576064" name="HBASE-5583_new_5_WIP_using_tableznode.patch" size="75273" author="ram_krish" created="Fri, 29 Mar 2013 12:59:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Mar 2012 02:52:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>231728</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02dwv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11855</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>