<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:23:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11467/HBASE-11467.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11467] New impl of Registry interface not using ZK + new RPCs on master protocol</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11467</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently there&apos; only one implementation of Registry interface, which is using ZK to get info about meta. Need to create implementation which will be using  RPC calls to master the client is connected to.&lt;/p&gt;

&lt;p&gt;Review of early version of patch is here: &lt;a href=&quot;https://reviews.apache.org/r/24296/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/24296/&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12725814">HBASE-11467</key>
            <summary>New impl of Registry interface not using ZK + new RPCs on master protocol</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12725383">HBASE-11464</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="mantonov">Mikhail Antonov</assignee>
                                    <reporter username="mantonov">Mikhail Antonov</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 Jul 2014 19:03:40 +0000</created>
                <updated>Wed, 10 Sep 2014 21:57:55 +0000</updated>
                                            <version>2.0.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>Client</component>
                    <component>Consensus</component>
                    <component>Zookeeper</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="14054424" author="ghelmling" created="Tue, 8 Jul 2014 02:06:39 +0000"  >&lt;p&gt;If I understand the intent correctly, moving ClusterId discovery to a master RPC operation creates a sort of chicken-and-egg problem for token authentication.  The RPC client needs to know the ClusterId of the cluster it is connecting to in order to select the correct authentication token to use.  This was possible with ZK, as the ClusterId was stored in a public znode.&lt;/p&gt;

&lt;p&gt;If we move retrieval of the cluster ID to an RPC call on master, the client will not be able to authenticate, since, without the ClusterId, it does not know which token to select.  I believe this will make token authentication unusable, or else we would have to special case that specific operation and make it &lt;em&gt;not&lt;/em&gt; require authentication on the master (which will be tricky in itself since authentication happens on the connection level).&lt;/p&gt;</comment>
                            <comment id="14057909" author="mantonov" created="Thu, 10 Jul 2014 20:25:15 +0000"  >&lt;p&gt;Thanks for comment &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt; ! &lt;/p&gt;

&lt;p&gt;I see several possible options here. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ClusterId is used in RpcClient code, in TokenSelector.selectToken(..). Since cluster id is publicly available information. We could use something else for token here, like hbase.masters.quorum property, containing list of active masters?&lt;/li&gt;
	&lt;li&gt;ClusterId is a tag used to identity cluster. Does it make sense to have it also on the client side in hbase-conf.xml? If it doesn&apos;t match the id stored in the cluster, then client can&apos;t connect?&lt;/li&gt;
	&lt;li&gt;ClusterId is also stored in HDFS in hdfs:/&amp;lt;namenode&amp;gt;:&amp;lt;port&amp;gt;/hbase/hbase.id. Clients who have connection to HDFS could read it from there. Several drawbacks - clients may not have access to HDFS at all, also this is implementation detail which we shall not disclose to clients.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14061383" author="stack" created="Mon, 14 Jul 2014 22:50:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;...and make it not require authentication on the master (which will be tricky in itself since authentication happens on the connection level).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How bad having a special, open RPC which always bypasses auth to read &apos;public&apos; info like the clusterid?   Which in essence is what is going on when we read from ZK?  A new &apos;Interface&apos;?&lt;/p&gt;</comment>
                            <comment id="14061417" author="mantonov" created="Mon, 14 Jul 2014 23:23:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; that token management (which involves clusterId access) happens not at individual protocol level  (i.e. MasterProtos), but at the rpc channel level (BlockingRpcChannelImplementation, and RpcClient). So to do that, we would need to write new implementation of BlockingRpcChannel?&lt;/p&gt;</comment>
                            <comment id="14066881" author="posix4e" created="Fri, 18 Jul 2014 21:11:15 +0000"  >&lt;p&gt;Stack I totally agree.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt; any ideas? How bad is it to get the cluserid without authentication?&lt;/p&gt;</comment>
                            <comment id="14066950" author="ghelmling" created="Fri, 18 Jul 2014 22:01:04 +0000"  >&lt;p&gt;Maybe we could make ClusterId available through an HTTP endpoint on the master?  That would allow the client to easily poll the endpoint on configured masters to obtain it.&lt;/p&gt;

&lt;p&gt;Obtaining ClusterId through normal RPC without authentication would be difficult, I think.  Authentication happens at connection time, so allowing getting ClusterId to happen without auth would require something like setting up a separate RPC server just to handle that, or else some nasty hacks to allow that particular call to go through.&lt;/p&gt;</comment>
                            <comment id="14066969" author="mantonov" created="Fri, 18 Jul 2014 22:14:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt; Thanks! Provided that each client has list of masters it round-robin&apos;s across, that&apos;s probably the best option so far. I think I&apos;m going to stick with you suggestion.&lt;/p&gt;

&lt;p&gt;As I look at the registry interface, this one call is the only one which is hard to route thru the RPC, the others (getMetaRegionLocation, isTableOnlineState, getCurrentNrHRS) would go thru RPC once the connection is established.&lt;/p&gt;</comment>
                            <comment id="14067031" author="mantonov" created="Fri, 18 Jul 2014 22:46:35 +0000"  >&lt;p&gt;On a related topic about doing those RPC calls to master. Now on the client side we retrive ServerName stored in ZK by calling MasterAddressTracker.getMasterAddress(), which returns full servername including startcode. When we connect to masters using just client config, we know address and port, but can&apos;t know startcode upfront, so have to use 0L startcode. Looking into implications..&lt;/p&gt;</comment>
                            <comment id="14069151" author="ryanobjc" created="Mon, 21 Jul 2014 19:48:55 +0000"  >&lt;p&gt;Maybe someone can explain to me the purpose of the cluster id in the authentication phase?  If we&apos;re just reading it from the master, then providing it to the same machine via a different RPC, why not just drop the cluster-id from the authentication handshake?  Or if you can&apos;t remove it, use a constant cluster id in that part?&lt;/p&gt;
</comment>
                            <comment id="14070075" author="mantonov" created="Tue, 22 Jul 2014 09:48:45 +0000"  >&lt;p&gt;Looks like getting clusterId during HConnection initialization using REST call to master isn&apos;t that straightforward solution, as master itself creates hconneciton (for example when it creates StartupManager), and it happens well before Jetty container is initialized for master. Even if we change the sequence of steps for master initialization, making REST call from inside master code to the web endpoint seems a bit strange. &lt;/p&gt;

&lt;p&gt;So I guess the question is if we can make token selector use information which can be obtained from local configuration instead? Like store clusterId in client configuration (how often is it updated?), or may be use for example masters.quorum.addresses instead, as cluster identifier?&lt;/p&gt;</comment>
                            <comment id="14070076" author="mantonov" created="Tue, 22 Jul 2014 09:52:13 +0000"  >&lt;p&gt;(StartupManager -&amp;gt; ServerManager).&lt;/p&gt;</comment>
                            <comment id="14071231" author="mantonov" created="Wed, 23 Jul 2014 01:15:45 +0000"  >&lt;p&gt;Also as I&apos;m going through this patch, seems like we may need 2 different implementations of Registry for clients and nodes in the cluster. For example, when HMaster starts up and initializes, in multiple places it needs to initialize the connection and request meta location. So we would have to do kind of loopback call thru short-circuit connection, which won&apos;t work because the master isn&apos;t yet initialized.&lt;/p&gt;</comment>
                            <comment id="14081557" author="mantonov" created="Thu, 31 Jul 2014 22:00:13 +0000"  >&lt;p&gt;Attaching draft version of patch (I&apos;m still working on it) to get initial feedbacks from those who may be interested. Short overview:&lt;/p&gt;


&lt;ul&gt;
	&lt;li&gt;I didn&apos;t yet figure out what to do with ClusterId, which is used as a text in the secured setup for the handshake. So for now actual code inside connection manager is using default cluster id, but as part of this change I did make an attempt to expose ClusterId at the rest endpoint (for that purpose I moved several classes from hbase-server to hbase-client, namely Client, Cluster and Response, and created REST resource and model in hbase-server module. All this code isn&apos;t being used now).&lt;/li&gt;
	&lt;li&gt;MasterAddressesProvider interface is assumed to provide callers with the address of next master he should attempt to contact, as well as return the full list of all known possible masters. It does not guarantee that next master returned to caller will be up and running at the time callers decides to connect it, so caller still expected to validate it itself (that&apos;s what happening in HConnectionImplementation). Also caller shall not assume that call to get next active master costs nothing, as implementation might be doing network-based lookup.&lt;/li&gt;
	&lt;li&gt;ConfigBasedMasterAddresses provider does simple round robin across all masters he knows of from the config file. Assumptions are that 1) caching of retrieved locations is handled at higher level, in HConnectionImplementation, and this class doesn&apos;t care 2) all masters are using the same RPC port, which is retrieved from hbase-site.com, and it&apos;s not part of masters quorum property 3) this class doesn&apos;t record information about failed servers, handling of failed servers is done separately in RpcClient.FailedServers. This part actually needs to be refined.&lt;/li&gt;
	&lt;li&gt;HConnectionKey was modified to include now masters quorum string and not ZK-related stuff.&lt;/li&gt;
	&lt;li&gt;Few new RPC calls (and message types) were added to MasterProtos&lt;/li&gt;
	&lt;li&gt;Unfortunately, I had to do quite a bit of changes in scaffolding code around mini HBase cluster, because for what I&apos;m doing here I need everyone to know actual master&apos;s RPC port, and currently in mini HBase cluster it binds to ephemeral port .&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What else..The basic tests (including few humble tests I wrote) are passing, but some LargeTests, including master failover tests, are broken, so I&apos;m working on them now. Some more notes to emphasize on testing.&lt;br/&gt;
Now there are 2 working tests added (1 for config based master addresses provider, and one for RpcRegistry itself, and 1 test for ClusterIdResource REST endpoint, but latter one isn&apos;t being used.&lt;/p&gt;</comment>
                            <comment id="14083490" author="mantonov" created="Sat, 2 Aug 2014 09:40:12 +0000"  >&lt;p&gt;Second (still draft) version of patch&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Mostly to assist mini cluster testing, changed hbase.masters.quorum property to contain hostname:port pairs.&lt;/li&gt;
	&lt;li&gt;Some methods from ConnectionUtils were moved to other locations. createShortCirctuitConnection() has gone to&lt;br/&gt;
HRegionServer (the only place it was used in conjunction with ConnectionAdapter), and setServerSideHConnectionRetriesConfig() went to RsRpcServies. So in that sense I believe ConnectionUtils class it truly client-side class only, and it&apos;s in hbase-client module.&lt;/li&gt;
	&lt;li&gt;seems like it makes sense to have 2 types of Registry, at least as this stage. So I added 2 methods to ClusterConnection interface (it&apos;s private) to get and set Registry. Now the client-side HConnections are using RpcRegistry, and server-side connections are using ServerSideZkRegistry. That also helps to avoid chicken-and-egg problem with trying to read ClusterId from the web endpoint before web server is brought up.&lt;/li&gt;
	&lt;li&gt;moved ConnectionAdapter from hbase-client to hbase-module, as it seems right thing to do (please advise if I&apos;m missing some consideration here?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Looking for initial feedbacks. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; , &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt;, ..?&lt;/p&gt;

&lt;p&gt;Another thing which seems the right one to do is to reconcile notions of CoprocessorHostConnection and shortCircuitConnection (running via ConnectionAdapter), as they seem to be conceptually the same or similar things?&lt;/p&gt;</comment>
                            <comment id="14083491" author="mantonov" created="Sat, 2 Aug 2014 09:41:57 +0000"  >&lt;p&gt;Also I would put it up on the review board, if you guys think that it&apos;d be better reviewed in one big patch, otherwise I can probably break it into some smaller ones.&lt;/p&gt;</comment>
                            <comment id="14083713" author="mantonov" created="Sat, 2 Aug 2014 20:48:25 +0000"  >&lt;p&gt;submitting to get hadoop-qa run&lt;/p&gt;</comment>
                            <comment id="14083778" author="hadoopqa" created="Sat, 2 Aug 2014 22:56:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12659460/HBASE-11467.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12659460/HBASE-11467.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12659460&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +        public MasterProtos.GetMetaLocationResponse getMetaRegionLocation(RpcController controller, MasterProtos.GetMetaLocationRequest request) throws ServiceException {&lt;br/&gt;
+        public MasterProtos.GetTableStateResponse getTableState(RpcController controller, MasterProtos.GetTableStateRequest request) throws ServiceException {&lt;br/&gt;
+   * @return initialized instance of &lt;/p&gt;
{@link org.apache.hadoop.hbase.coordination.MasterAddressesProvider}
&lt;p&gt;,&lt;br/&gt;
+       * &amp;lt;code&amp;gt;rpc GetMetaRegionLocation(.GetMetaLocationRequest) returns (.GetMetaLocationResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc GetMetaRegionLocation(.GetMetaLocationRequest) returns (.GetMetaLocationResponse);&amp;lt;/code&amp;gt;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestMergeTool&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterShutdown&lt;br/&gt;
                  org.apache.hadoop.hbase.TestMetaTableAccessorNoCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestHBaseFsck&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationDisableInactivePeer&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillSlaveRS&lt;br/&gt;
                  org.apache.hadoop.hbase.TestZooKeeper&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.regionserver.TestReplicationSourceManager&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHCM&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.backup.example.TestZooKeeperTableArchiveClient&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSyncUpTool&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestReplicasClient&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationWithTags&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRestartCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitLogWorker&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSmallTests&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationChangingPeerRegionservers&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRSKilledWhenInitializing&lt;br/&gt;
                  org.apache.hadoop.hbase.TestIOFencing&lt;br/&gt;
                  org.apache.hadoop.hbase.client.replication.TestReplicationAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestZKLessAMOnCluster&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 3 zombie test(s): 	at org.apache.hadoop.hbase.client.TestFromClientSide.testKeyOnlyFilter(TestFromClientSide.java:684)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestClusterBootOrder.testBootRegionServerFirst(TestClusterBootOrder.java:104)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFromClientSide.testKeyOnlyFilter(TestFromClientSide.java:684)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10276//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14085809" author="mantonov" created="Tue, 5 Aug 2014 05:08:15 +0000"  >&lt;p&gt;Fixing broken Large tests. &lt;/p&gt;

&lt;p&gt;Posted on RB - &lt;a href=&quot;https://reviews.apache.org/r/24296/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/24296/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14088601" author="mantonov" created="Thu, 7 Aug 2014 01:15:29 +0000"  >&lt;p&gt;pinging &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; - sorry to be insistent, just would appreciate very much if you could take a quick look at the RB. Thank you!&lt;/p&gt;</comment>
                            <comment id="14091471" author="mantonov" created="Fri, 8 Aug 2014 23:59:25 +0000"  >&lt;p&gt;As this discussion around using/not using clusterId in the token is about security, pinging &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14091631" author="stack" created="Sat, 9 Aug 2014 03:45:05 +0000"  >&lt;p&gt;Why does client need to provide clusterid authenticating?  The cluster knows its clusterid.  The client is specifying the cluster it wants to connect too when it choses a zk ensemble.  I suppose the client could provide it as part of its connection string but seems like a pain to users having to specify cryptic string in local config for the client to volunteer on connection setup.&lt;/p&gt;</comment>
                            <comment id="14091641" author="stack" created="Sat, 9 Aug 2014 04:18:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt; Clusterid question above sir.  Please put it straight.  Thanks boss.&lt;/p&gt;</comment>
                            <comment id="14093566" author="ghelmling" created="Tue, 12 Aug 2014 00:40:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; The client needs to know the ClusterId in order to select the token to use for token authentication from the bundle of credentials that it has access to.  I believe when we first implemented this we discussed using the zk quorum string instead, but we settled on using a globally unique cluster ID as a cleaner solution, due to difficulties in canonicalizing the quorum string (short vs. fully qualified hostnames, ordering, whether or not client port is present...), and of course the zk quorum could change.&lt;/p&gt;

&lt;p&gt;It might be possible to have the server provide the cluster ID as part of the initial SASL negotiation, but I&apos;m not sure how difficult this would be.  Currently, if a token is found, we negotiate DIGEST-MD5 with SASL, otherwise pass through to GSSAPI.  So having the server return a cluster ID in negotiation would require a step before that in order to determine whether we have a token or not.&lt;/p&gt;

&lt;p&gt;I agree that forcing the client to add the cluster ID in configuration somewhere is not a great option, but I haven&apos;t looked at the patch yet to see what it is doing.  I will take a look at the details.&lt;/p&gt;</comment>
                            <comment id="14094579" author="octo47" created="Tue, 12 Aug 2014 19:54:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;, great work!&lt;/p&gt;

&lt;p&gt;How about using some ClusterIdProvider which will have a couple implementations. Even so, it is not bad to have zk for configuration proposes, if it already exists in infrastructure. So as a result we can make a bunch of such providers and address them by some human readable cluster name.&lt;/p&gt;

&lt;p&gt;As a sketch, lets uri will look like this:&lt;br/&gt;
zk://zk.host1:port,zk.host2:port,zk.host3:port/mycluster&lt;br/&gt;
If such uri will be configured on both, server and client, server will be able to write all needed data into zk.&lt;/p&gt;

&lt;p&gt;Alternatively uri conf://mycluster can be provided, and in that case all configuration can be read from config (it can be some property names scheme to find out masters and such)&lt;/p&gt;</comment>
                            <comment id="14094583" author="octo47" created="Tue, 12 Aug 2014 19:57:41 +0000"  >&lt;p&gt;even &lt;a href=&quot;http://some.load.balancer:60010/clusterId&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://some.load.balancer:60010/clusterId&lt;/a&gt; will work, &lt;/p&gt;</comment>
                            <comment id="14094704" author="ryanobjc" created="Tue, 12 Aug 2014 21:24:32 +0000"  >&lt;p&gt;Having an extra RPC to figure out who you&apos;re talking to isn&apos;t horrifyingly bad. &lt;/p&gt;

&lt;p&gt;Thinking broader, how does SSH do this?  Could we emulate that?  I believe that in SSH you can tell it via config that this key should be used for this host(s), and absent that, it walks thru the set of keys it has at its disposal.&lt;/p&gt;

&lt;p&gt;What is the simplest approach for the user?  Magic strings tend to be not liked much&lt;/p&gt;</comment>
                            <comment id="14094755" author="mantonov" created="Tue, 12 Aug 2014 21:51:48 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt; thanks for clarification!&lt;/p&gt;

&lt;p&gt;One thing which comes to my mind - imagine we have ZK string, or masters quorum string, as a cluster id. It&apos;s in format of host1:port1,host2:port2,hostN:portN.&lt;br/&gt;
Presumably it doesn&apos;t change that often. And it&apos;s used as a selector, or key, to lookup token associated with this entity (cluster). It doesn&apos;t really have to be canonical, perhaps.&lt;/p&gt;

&lt;p&gt;On the very first connection, if there&apos;s no token, we fall back to GSSAPI, and when we have token, we use DIGEST-MD5. So in the scenario of masters connection string, of zk quorum string, we use it as a token selector. If at some point masters membership changes, and client needs to update his local quorum string - then the consequence will be that cached token may not longer be looked up using new connection string, so new GSSAPI pass will have to happen. Is that bad?&lt;/p&gt;</comment>
                            <comment id="14094955" author="mantonov" created="Wed, 13 Aug 2014 00:38:19 +0000"  >&lt;p&gt;Rebased patch which applies against current master (still apparently draft, as the matter with ClusterId is being discussed)&lt;/p&gt;</comment>
                            <comment id="14104820" author="ryanobjc" created="Wed, 20 Aug 2014 23:56:55 +0000"  >&lt;p&gt;So I checked this patch out, a few things really stood out to me:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lets not have init() in the MasterAddressesProvider interface.  The interface should describe what an object does, not how it does it.  I talked to Mikhail and this is going to get moved to the constructor.  This&apos;ll make it easier to reuse this object in other places as well.&lt;/li&gt;
	&lt;li&gt;Let&apos;s also not have it in Registry if possible.  Consider this a stretch goal.&lt;/li&gt;
	&lt;li&gt;Having an extra REST RPC to find the cluster ID is an acceptable solution - it maintains RPC roundtrips compared to the current implementation.  It&apos;d be nice if we didn&apos;t have to have it, but I think that shouldn&apos;t hold this issue up.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There are a few things, eg:&lt;br/&gt;
TestClusterIdResource.java:&lt;br/&gt;
    assertThat(JSON.parse(new String(response.getBody())).toString(),&lt;br/&gt;
      is(TEST_UTIL.getHBaseCluster().getClusterStatus().getClusterId()));&lt;/p&gt;

&lt;p&gt;This could be made easier to read if we refactored elements of the functionality into static methods.  for example we could have a JSON matcher so we have something like:&lt;/p&gt;

&lt;p&gt;assertThat(response, isJSONString(CLUSTER_ID));&lt;/p&gt;

&lt;p&gt;Note we refactored out the parsing, and the &apos;train wreck&apos; call to get getClusterId (shouldn&apos;t this be a property of an HBaseCluster anyways?) and it&apos;s substantially cleaner to read.  This is only one possibility here.&lt;/p&gt;

&lt;p&gt;We can also use hamcrest matchers to make things easier to read, eg:&lt;br/&gt;
    assertThat(registry.isTableOnlineState(TableName.META_TABLE_NAME, true), is(true));&lt;br/&gt;
    assertThat(registry.isTableOnlineState(TableName.META_TABLE_NAME, false), is(false));&lt;/p&gt;

&lt;p&gt;assertThat(registry, tableOnline(META_TABLE));&lt;/p&gt;

&lt;p&gt;Right now the boolean flags don&apos;t mean much to me just from looking at that snippet (unless I have also, for some reason, memorized the registry API).&lt;/p&gt;

&lt;p&gt;Also, I am seeing a few Thread.sleep() -&amp;gt; if we can get an async notice that the thing we are waiting for has happened, that&apos;d be pretty sweet.&lt;/p&gt;

&lt;p&gt;Other than those things, this is shaping up nicely.&lt;/p&gt;
</comment>
                            <comment id="14107465" author="mantonov" created="Fri, 22 Aug 2014 20:52:16 +0000"  >&lt;p&gt;Thanks for review &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ryanobjc&quot; class=&quot;user-hover&quot; rel=&quot;ryanobjc&quot;&gt;ryan rawson&lt;/a&gt;! I&apos;ll post updated patch soon with those fixed + modified handling of registries on server-side.&lt;/p&gt;</comment>
                            <comment id="14116663" author="mantonov" created="Sun, 31 Aug 2014 07:55:36 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; may be to bring back here in jira the conversation started on RB..&lt;/p&gt;

&lt;p&gt;So.. in the context of discussion happening in &apos;scaling to 1M regions&quot; jira - how would you suggest to proceed with this patch? I addressed most of the comments from review board (thanks for reviews!), and incorporated with feedbacks from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ryanobjc&quot; class=&quot;user-hover&quot; rel=&quot;ryanobjc&quot;&gt;ryan rawson&lt;/a&gt; above, and working on fixing and reworking tests (some failures aren&apos;t related, but some are caused by certain changes in minicluster infrastructure). Do you think it may be &apos;committable&apos; by itself, of it should be on-hold until further steps on cluster topology discussion? Would appreciate your thoughts on that.&lt;/p&gt;</comment>
                            <comment id="14117874" author="stack" created="Tue, 2 Sep 2014 04:27:08 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; is latest patch up on rb?&lt;/p&gt;

&lt;p&gt;Why a setRegistry in ClusterConnection? Why not just read from config or on construction?&lt;/p&gt;

&lt;p&gt;On the higher-level question, this patch makes a radical change &amp;#8211; disruptive &amp;#8211; in folks expectations undoing zk as first port-of-call connecting to a cluster instead putting in place a cluster of masters as the cluster id string.  Needs surfacing on dev list for discussion.  2.0 hbase at least.  How would we migrate a zk-based cluster to a master-based one?&lt;/p&gt;

&lt;p&gt;Could we take the bulk of this patch and keep zk string as the minimum to connect to a cluster until we put stake in the ground for topology in &apos;scaling 1M regions&apos; and while ruminating on implications of going from zk to master quorum?&lt;/p&gt;
</comment>
                            <comment id="14117891" author="mantonov" created="Tue, 2 Sep 2014 05:01:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; not the latest one, in sense that I&apos;m going to publish new version on RB tonight or early this week, maybe tomorrow (mostly it&apos;s fixing the tests with changes invariants/expectations of master being up/down). In new version, this setRegistry() will go away. Found the way to get rid of it.&lt;/p&gt;

&lt;p&gt;At the high level - totally agree that it&apos;s change is a radical one, I targeted it for 2.0 for now. I&apos;ll start the discussion in the mail list, too. On the side note - this patch itself doesn&apos;t change the way how the servers themselves (HMs or HRSs) are talking to each other, so &lt;em&gt;master-based cluster&lt;/em&gt; isn&apos;t what&apos;s coming with this patch.&lt;/p&gt;

&lt;p&gt;Do you suggest to put this patch on hold, or modify it so it&apos;s more like &quot;second option to connect to cluster&quot;?&lt;/p&gt;</comment>
                            <comment id="14117897" author="mantonov" created="Tue, 2 Sep 2014 05:07:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;How would we migrate a zk-based cluster to a master-based one?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You mean, to the cluster which has multiple masters and doesn&apos;t have ZK connectivity on the client side, or to the cluster which doesn&apos;t have ZK completely? For the former case, migration would require updating client jars to pull in new code + modify config files to use masters connection instead of connecting to ZK.&lt;/p&gt;</comment>
                            <comment id="14118490" author="stack" created="Tue, 2 Sep 2014 18:34:13 +0000"  >
&lt;blockquote&gt;&lt;p&gt;... so master-based cluster isn&apos;t what&apos;s coming with this patch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But master-character changes now in that for a client to connect, master must be up (currently, this is the case but only out of lazyness.... we need to make it so client can connect w/o having to test master is up).  This goes against a tenet that is long-time, though soft-spoken that needs to be made more pronounced, that master can go away for periods of time and the cluster keeps running.  If we partition the master &amp;#8211; a far-out possibility that hopefully we never have to do where master 1. does tables A-D and master 2. does tables E-H, etc. &amp;#8211; then how would this play out?  The cluster string would have to list all masters ?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do you suggest to put this patch on hold, or modify it so it&apos;s more like &quot;second option to connect to cluster&quot;?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The patch is great. Nice cleanup.  Would be good to get some of it in, the least controversial parts.  Post new rb and will review w/ that in mind.&lt;/p&gt;

&lt;p&gt;We need to chat on master topology on dev list and maybe stakeholders should meet and powwow...&lt;/p&gt;


</comment>
                            <comment id="14118746" author="mantonov" created="Tue, 2 Sep 2014 21:05:11 +0000"  >&lt;p&gt;Updated the diff on RB with latest changes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; Right, I think we need to have a dedicated discussion around master changes/topology. On the question about&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If we partition the master &#8211; a far-out possibility that hopefully we never have to do where master 1. does tables A-D and master 2. does tables E-H, etc. &#8211; then how would this play out? The cluster string would have to list all masters ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think the more robust solution would be forwarding from one master to another (i.e., clearly each master should know full cluster topology anyway, but clients shouldn&apos;t have to, they should be able to ask any master they know, i.e. a client may only know about some subset of masters, and get location of the master they actually need). More brainstorming is needed here, for sure.&lt;/p&gt;</comment>
                            <comment id="14129198" author="mantonov" created="Wed, 10 Sep 2014 21:57:55 +0000"  >&lt;p&gt;pinging &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; - any thoughts on the latest patch up on RB?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12725835">HBASE-11472</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12661351" name="HBASE-11467.patch" size="315010" author="mantonov" created="Wed, 13 Aug 2014 00:38:19 +0000"/>
                            <attachment id="12659460" name="HBASE-11467.patch" size="310748" author="mantonov" created="Sat, 2 Aug 2014 09:40:12 +0000"/>
                            <attachment id="12659014" name="HBASE-11467.patch" size="256710" author="mantonov" created="Thu, 31 Jul 2014 21:54:38 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 8 Jul 2014 02:06:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>403972</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 14 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1xiyn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>404014</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>