<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:29:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12041/HBASE-12041.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12041] AssertionError in HFilePerformanceEvaluation.UniformRandomReadBenchmark</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12041</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-09-19 05:18:54,719 INFO  [0] hbase.HFilePerformanceEvaluation: Running UniformRandomReadBenchmark &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 1000000 rows.
2014-09-19 05:18:54,719 INFO  [0] hfile.CacheConfig: CacheConfig:disabled
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;0&quot;&lt;/span&gt; java.lang.AssertionError: Expected 0000472128 but got 0000472127
        at org.apache.hadoop.hbase.PerformanceEvaluationCommons.assertKey(PerformanceEvaluationCommons.java:50)
        at org.apache.hadoop.hbase.PerformanceEvaluationCommons.assertKey(PerformanceEvaluationCommons.java:45)
        at org.apache.hadoop.hbase.HFilePerformanceEvaluation$UniformRandomReadBenchmark.doRow(HFilePerformanceEvaluation.java:295)
        at org.apache.hadoop.hbase.HFilePerformanceEvaluation$RowOrientedBenchmark.run(HFilePerformanceEvaluation.java:169)
        at org.apache.hadoop.hbase.HFilePerformanceEvaluation.runBenchmark(HFilePerformanceEvaluation.java:121)
        at org.apache.hadoop.hbase.HFilePerformanceEvaluation$2.run(HFilePerformanceEvaluation.java:87)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:744)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12743020">HBASE-12041</key>
            <summary>AssertionError in HFilePerformanceEvaluation.UniformRandomReadBenchmark</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="jmspaggi">Jean-Marc Spaggiari</reporter>
                        <labels>
                    </labels>
                <created>Sun, 21 Sep 2014 12:13:47 +0000</created>
                <updated>Sat, 21 Feb 2015 23:41:31 +0000</updated>
                            <resolved>Thu, 25 Sep 2014 18:13:40 +0000</resolved>
                                    <version>0.99.1</version>
                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>0.99.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                            <comments>
                            <comment id="14143884" author="stack" created="Mon, 22 Sep 2014 21:44:32 +0000"  >&lt;p&gt;I don&apos;t even get as far as you do &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmspaggi&quot; class=&quot;user-hover&quot; rel=&quot;jmspaggi&quot;&gt;Jean-Marc Spaggiari&lt;/a&gt;  I get this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
kalashnikov:hbase.git stack$ ./bin/hbase --config ~/conf_hbase  org.apache.hadoop.hbase.HFilePerformanceEvaluation
2014-09-22 14:41:36.889 java[64802:1903] Unable to load realm info from SCDynamicStore
2014-09-22 14:41:37,064 WARN  [main] util.NativeCodeLoader (NativeCodeLoader.java:&amp;lt;clinit&amp;gt;(62)) - Unable to load &lt;span class=&quot;code-keyword&quot;&gt;native&lt;/span&gt;-hadoop library &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; your platform... using builtin-java classes where applicable
2014-09-22 14:41:37,343 INFO  [main] hbase.HFilePerformanceEvaluation (HFilePerformanceEvaluation.java:runBenchmark(119)) - Running SequentialWriteBenchmark &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 1000000 rows.
2014-09-22 14:41:37,697 INFO  [main] hfile.CacheConfig (CacheConfig.java:&amp;lt;init&amp;gt;(260)) - CacheConfig:disabled
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; java.lang.ArrayIndexOutOfBoundsException: 12346
	at org.apache.hadoop.hbase.KeyValue.getFamilyLength(KeyValue.java:1350)
	at org.apache.hadoop.hbase.KeyValue.getFamilyLength(KeyValue.java:1343)
	at org.apache.hadoop.hbase.KeyValueUtil.keyLength(KeyValueUtil.java:71)
	at org.apache.hadoop.hbase.io.hfile.HFileWriterV2.append(HFileWriterV2.java:253)
	at org.apache.hadoop.hbase.io.hfile.HFileWriterV3.append(HFileWriterV3.java:88)
	at org.apache.hadoop.hbase.io.hfile.HFileWriterV3.append(HFileWriterV3.java:133)
	at org.apache.hadoop.hbase.io.hfile.HFileWriterV3.append(HFileWriterV3.java:106)
	at org.apache.hadoop.hbase.HFilePerformanceEvaluation$SequentialWriteBenchmark.doRow(HFilePerformanceEvaluation.java:203)
	at org.apache.hadoop.hbase.HFilePerformanceEvaluation$RowOrientedBenchmark.run(HFilePerformanceEvaluation.java:169)
	at org.apache.hadoop.hbase.HFilePerformanceEvaluation.runBenchmark(HFilePerformanceEvaluation.java:121)
	at org.apache.hadoop.hbase.HFilePerformanceEvaluation.runBenchmarks(HFilePerformanceEvaluation.java:72)
	at org.apache.hadoop.hbase.HFilePerformanceEvaluation.main(HFilePerformanceEvaluation.java:377)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Digging, its kinda ugly in that we pass from the test the &apos;key&apos; and the &apos;value.  Down in the depths of HFileWriter, we try then to get stuff like family lengths only there is no family length because no family in original bytes passed &amp;#8211; just random row bytes.  Down in HFileWriter we are trying to juggle Cell and KeyValue.  Presumption is we have a &apos;key&apos; as we did in old days when we did the KeyValue serialization.&lt;/p&gt;</comment>
                            <comment id="14143904" author="stack" created="Mon, 22 Sep 2014 21:58:48 +0000"  >&lt;p&gt;In 0.98, we did thisin the HFPE write:&lt;/p&gt;

&lt;p&gt;append(final byte[] key, final byte[] value)&lt;br/&gt;
called straight through to&lt;br/&gt;
protected void append(final long memstoreTS, final byte[] key, final int koffset,&lt;br/&gt;
 final int klength, final byte[] value, final int voffset, final int vlength)&lt;br/&gt;
.... with follows: append(0, key, 0, key.length, value, 0, value.length);&lt;/p&gt;

&lt;p&gt;Now we have &apos;interpretation&apos; of the arrays passed going on.  The presumption is that the passed bytes are serialized using old-school KeyValue:&lt;/p&gt;

&lt;p&gt;append(final byte[] key, final byte[] value)... ends up creating a KeyValue on the end out of the &apos;key&apos; and the &apos;value&apos; only it will trips when it goes to parse the content.&lt;/p&gt;

&lt;p&gt;We need to look at the Writer API &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ramkrishna.vasudevan%40huawei.com&quot; class=&quot;user-hover&quot; rel=&quot;ramkrishna.vasudevan@huawei.com&quot;&gt;Ramkrishna.S.Vasudevan&lt;/a&gt;  You fellas probably already have ideas here (Odd that HFile#Writer takes a Cell when it is going to write a key and a value... should we be passing in a serializer/deserialzier too? ... or HFile should not know anything about Cell or KeyValue.  There is the Comparator... which does bytes only which should be fine...).&lt;/p&gt;

&lt;p&gt;Since this is a HFilePE test and not a Cell or KV test, I think I should expose....&lt;/p&gt;

&lt;p&gt;protected void append(final long memstoreTS, final byte[] key, final int koffset,&lt;br/&gt;
 final int klength, final byte[] value, final int voffset, final int vlength)&lt;/p&gt;

&lt;p&gt;... for &apos;testing&apos;.&lt;/p&gt;
</comment>
                            <comment id="14143992" author="stack" created="Mon, 22 Sep 2014 23:02:17 +0000"  >&lt;p&gt;I see that we check sort order by looking at a Cell in HFile.Writer.&lt;/p&gt;

&lt;p&gt;HFile.Writer takes a KVComparator, not a Cell Comparator.&lt;/p&gt;

&lt;p&gt;The BlockEncoder takes a Cell but we populate the index with a KV serialization of what we think the &apos;key&apos; is.&lt;/p&gt;

&lt;p&gt;I could fix this tool by passing in &apos;Cells&apos;. Will make it different than it was in 0.98.&lt;/p&gt;</comment>
                            <comment id="14143995" author="jmspaggi" created="Mon, 22 Sep 2014 23:07:46 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I could fix this tool by passing in &apos;Cells&apos;. Will make it different than it was in 0.98.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As long as it allows to compare between the different 0.99.x versions, I think we are fine. Based on your 3 last comments, seems that anyway there will be already many updates required compared to 0.98 and test will not really be identical. &lt;/p&gt;</comment>
                            <comment id="14144206" author="anoop.hbase" created="Tue, 23 Sep 2014 02:27:39 +0000"  >&lt;p&gt;I see. The change we done in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11874&quot; title=&quot;Support Cell to be passed to StoreFile.Writer rather than KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11874&quot;&gt;&lt;del&gt;HBASE-11874&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
From code we always pass Cell to the Writer. We read the row/family lengths etc and serialize those compartments (as how we do in a KV).  In the past we used to pass KV and we relied on the fact that all items are backed by single byte array and just copied the single array as is. So at that time passing key and value bytes for test made more sense. Now as the core code flow is changed, IMO the tests also should pass Cells.(KeyValue objects) &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;HFile should not know anything about Cell or KeyValue. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. the V2/V3 version writer writes the Cell compartments as contiguous bytes (This end up in KV serialization way as we used to do this way) and corresponding reader version knows how to interpret these bytes back to Cells. That sounds good to me.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since this is a HFilePE test and not a Cell or KV test, I think I should expose....&lt;/p&gt;

&lt;p&gt;protected void append(final long memstoreTS, final byte[] key, final int koffset,&lt;br/&gt;
final int klength, final byte[] value, final int voffset, final int vlength)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think append(Cell) itself can be used from this tool. Some of the tests were using this API and I changed those along with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11874&quot; title=&quot;Support Cell to be passed to StoreFile.Writer rather than KeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11874&quot;&gt;&lt;del&gt;HBASE-11874&lt;/del&gt;&lt;/a&gt; but missed tool. &lt;/p&gt;</comment>
                            <comment id="14144334" author="ram_krish" created="Tue, 23 Sep 2014 04:52:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;The BlockEncoder takes a Cell but we populate the index with a KV serialization of what we think the &apos;key&apos; is.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is the tricky part in this.  Though we go with the comparators while doing the index search we do rawbyte comparison assuming the key is serialized as per the KV serialization.&lt;/p&gt;</comment>
                            <comment id="14144342" author="stack" created="Tue, 23 Sep 2014 05:00:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmspaggi&quot; class=&quot;user-hover&quot; rel=&quot;jmspaggi&quot;&gt;Jean-Marc Spaggiari&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;seems that anyway there will be already many updates required compared to 0.98 and test will not really be identical.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I think this the case boss.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;IMO the tests also should pass Cells.(KeyValue objects)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;... and we should deprecate those appends that take key, value, and tag byte arrays? (I started to do it but its a little bit of a rad change).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; Was thinking on this more.  You can&apos;t pass a Cell to a Writer w/o also passing how to serialize and deserialize?  Right? So we need to pass comparator, serializer, and Cells themselves?  In Writer, it needs to be able to figure key to add to the hfile index at least.  It wants the comparator to ensure all is in order.  We then pass the Cell through to DBE.  That does the actual serializing. It needs serializer too?  Or, rather, it  is THE Serializer  We should ask DBE to serialize the key to add to the index?  We should make the NONE DBE do the KV serialization rather than do it in upper levels?&lt;/p&gt;
</comment>
                            <comment id="14144358" author="anoop.hbase" created="Tue, 23 Sep 2014 05:13:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;We then pass the Cell through to DBE. That does the actual serializing. It needs serializer too? Or, rather, it is THE Serializer We should ask DBE to serialize the key to add to the index? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is THE serializer IMO.&lt;br/&gt;
Atleast to the index we write the key as it would look like in KV. So I am not sure whether it will be correct to ask the DBE to create a key to be added to index .&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In Writer, it needs to be able to figure key to add to the hfile index at least. It wants the comparator to ensure all is in order. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes we use KVComparator here inside the HFileWriter to compare the keys and make sure they are in order. (The name only is KVComparator  actually it compares Cells)  And the key to index we create using the rk,cf,q,ts,type from Cell and serializing as in KeyValue. That is the writer decides the way.&lt;/p&gt;</comment>
                            <comment id="14144383" author="stack" created="Tue, 23 Sep 2014 05:34:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;It is THE serializer IMO.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok. Lets go w/ this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Atleast to the index we write the key as it would look like in KV. So I am not sure whether it will be correct to ask the DBE to create a key to be added to index .&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK.  We need to do better than this though:&lt;/p&gt;

&lt;p&gt;      firstKeyInBlock = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;klength&amp;#93;&lt;/span&gt;;&lt;br/&gt;
      KeyValueUtil.appendKeyTo(cell, firstKeyInBlock, 0);&lt;/p&gt;

&lt;p&gt;That is what we currently have.  Could have an Index Serializer interface. For now could do the basic implementation?  Needs to retain sort.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;That is the writer decides the way.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We pass in the KVComparator.  We should clean this up too?  Not pass in a comparator from KV?&lt;/p&gt;

&lt;p&gt;You down with deprecating the Writer.appends that take byte arrays that are supposed to be in KeyValue Key and Value formats?&lt;/p&gt;
</comment>
                            <comment id="14144395" author="anoop.hbase" created="Tue, 23 Sep 2014 05:45:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;That is what we currently have. Could have an Index Serializer interface. For now could do the basic implementation? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sounds good. We need to have an interface which can serialize keys into index blocks. Also this should be able to compare these index entries against a seek key coming in the read reqs and help us in locating the HFileBlock.  Also we will have to write the interface impl class name into file meta info &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Or is it like a version of HFile stick with only one impl?  With V2 and V3 any way we have to stick with KV way serializer.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;You down with deprecating the Writer.appends that take byte arrays that are supposed to be in KeyValue Key and Value formats?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1. Keep the one which takes Cells and we deprecate others.&lt;/p&gt;</comment>
                            <comment id="14145270" author="stack" created="Tue, 23 Sep 2014 19:14:28 +0000"  >&lt;p&gt;Ok. So, I think I can&apos;t fix this issue until I do the internal refactor.  As is, HFilePE depends on keys being formatted as KV keys.  I could &apos;hack&apos; in something to get this going again but let me go to the root issue first then come back here.&lt;/p&gt;</comment>
                            <comment id="14148064" author="stack" created="Thu, 25 Sep 2014 18:13:40 +0000"  >&lt;p&gt;Fixed by subtask patch.  Resolving.&lt;/p&gt;</comment>
                            <comment id="14331511" author="enis" created="Sat, 21 Feb 2015 23:41:31 +0000"  >&lt;p&gt;Closing this issue after 0.99.1 release.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                            <subtask id="12743586">HBASE-12069</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 22 Sep 2014 21:44:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i20b33:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>