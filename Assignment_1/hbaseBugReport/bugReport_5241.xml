<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:26:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5241/HBASE-5241.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5241] Deletes should not mask Puts that come after it.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5241</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Suppose that we have a delete row, and then followed by the put. The delete row&lt;br/&gt;
can mask the put, unless there was a major compaction in between.&lt;/p&gt;

&lt;p&gt;Now that we are flushing the memstoreTS to disk, along with the KVs, we should be able&lt;br/&gt;
to differentiate whether or not the Put happened after the Delete and offer better &lt;br/&gt;
delete semantics.&lt;/p&gt;

&lt;p&gt;Couldn&apos;t find a pre-existing JIRA that already discusses this, so creating one.&lt;/p&gt;

&lt;p&gt;Seems related to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2406&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2406&lt;/a&gt;, but is not quite the same.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12539241">HBASE-5241</key>
            <summary>Deletes should not mask Puts that come after it.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="amitanand">Amitanand Aiyer</assignee>
                                    <reporter username="amitanand">Amitanand Aiyer</reporter>
                        <labels>
                    </labels>
                <created>Sat, 21 Jan 2012 01:58:50 +0000</created>
                <updated>Mon, 6 Jun 2016 12:51:45 +0000</updated>
                                                                                <due></due>
                            <votes>1</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13190274" author="zhihyu@ebaysf.com" created="Sat, 21 Jan 2012 02:19:47 +0000"  >&lt;p&gt;This is a nice initiative.&lt;/p&gt;</comment>
                            <comment id="13207976" author="phabricator@reviews.facebook.net" created="Tue, 14 Feb 2012 20:07:58 +0000"  >&lt;p&gt;aaiyer requested code review of &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;br/&gt;
Reviewers: JIRA&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5241&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; Puts should not be masked by prior Deletes&lt;/p&gt;

&lt;p&gt;  Initial version of the patch. Getting it out to start&lt;br/&gt;
  discussion/get feedback on a few different ways to address this.&lt;/p&gt;

&lt;p&gt;  There are test failures.&lt;/p&gt;

&lt;p&gt;  Suppose that we have a delete row, and then followed by the put. The delete row&lt;br/&gt;
  can mask the put, unless there was a major compaction in between.&lt;/p&gt;

&lt;p&gt;  Now that we are flushing the memstoreTS to disk, along with the KVs, we should be able&lt;br/&gt;
  to differentiate whether or not the Put happened after the Delete and offer better&lt;br/&gt;
  delete semantics.&lt;/p&gt;

&lt;p&gt;  Couldn&apos;t find a pre-existing JIRA that already discusses this, so creating one.&lt;/p&gt;

&lt;p&gt;  Seems related to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2406&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2406&lt;/a&gt;, but is not quite the same.&lt;/p&gt;

&lt;p&gt;TEST PLAN&lt;br/&gt;
  EMPTY&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanDeleteTracker.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/DeleteTracker.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/p&gt;

&lt;p&gt;MANAGE HERALD DIFFERENTIAL RULES&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/view/differential/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/view/differential/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY DID I GET THIS EMAIL?&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/transcript/3687/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/transcript/3687/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: use the X-Herald-Rules header to filter Herald messages in your client.&lt;/p&gt;</comment>
                            <comment id="13208077" author="phabricator@reviews.facebook.net" created="Tue, 14 Feb 2012 22:15:59 +0000"  >&lt;p&gt;stack has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;/p&gt;

&lt;p&gt;  Not sure I grok completely whats going on.  Where is the extra cost we pay in seeking?&lt;/p&gt;

&lt;p&gt;  Good stuff Amit.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:74 This is ugly!&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:189 This used to be compare to zero.  Was it wrong?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:195 Or, I suppose -1L now means what 0L used to?&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java:277 Why this change?&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java:845 We remove this assertions because delete behavior has changed?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13208117" author="lhofhansl" created="Tue, 14 Feb 2012 23:36:14 +0000"  >&lt;p&gt;This entire approach seems wrong to me. Things is HBase have a timestamp and one of the nicest parts about HBase is that the actual order in which operations are applied does not matter.&lt;/p&gt;

&lt;p&gt;This will break replication where operations can arrive out of order and other code in HBase.&lt;/p&gt;

&lt;p&gt;Unless somebody provides a very compelling use case I&apos;m -1 on this general direction.&lt;/p&gt;</comment>
                            <comment id="13208757" author="amitanand" created="Wed, 15 Feb 2012 20:16:58 +0000"  >&lt;p&gt;@Lars. Sure. I see there can be issues with replication.&lt;/p&gt;

&lt;p&gt;Is that something that cannot be fixed?  &lt;/p&gt;

&lt;p&gt;I am not really familiar with the replication code path. But, say, if we ship the memstoreTS along with the KV&apos;s during replication; would that not take care of the out of order issue?&lt;/p&gt;</comment>
                            <comment id="13208765" author="lhofhansl" created="Wed, 15 Feb 2012 20:26:44 +0000"  >&lt;p&gt;I fear we&apos;d have two chronological dimensions now. One as indicated by the timestamps and another indicated by the order in which the changes are physically applied (memstoreTS).&lt;/p&gt;

&lt;p&gt;This &quot;problem&quot; is really only a problem when Deletes are dated into the future or Puts are dated in the past. Any app doing this must be aware of the implications.&lt;br/&gt;
It just seems like a non-issue to me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Replication is just happens to be a place where I can see problems. I&apos;m sure there&apos;re more (multi actions, etc).&lt;br/&gt;
Is the memstoreTS written to the WAL? (Replication uses WAL shipping).&lt;/p&gt;</comment>
                            <comment id="13208768" author="phabricator@reviews.facebook.net" created="Wed, 15 Feb 2012 20:26:59 +0000"  >&lt;p&gt;aaiyer has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:74 fixing this in the next version.&lt;/p&gt;

&lt;p&gt;  will update, once I fix the tests as well.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:189 I guess -1 or 0, both would work.&lt;/p&gt;

&lt;p&gt;  It seems to be initialized to -1L. But used to get reset to 0 on reset. That didn&apos;t make sense.&lt;/p&gt;

&lt;p&gt;  Chose one at random.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java:202 This is one perf penalty we pay for the better consistency semantics.&lt;/p&gt;

&lt;p&gt;  We can only zero-out memstoreTS upon major compaction. Not when all readers get past the read point.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java:845 that was the initial direction.&lt;/p&gt;

&lt;p&gt;  I&apos;m working on keeping things backward compatible. so this will get reverted.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13208769" author="amitanand" created="Wed, 15 Feb 2012 20:29:16 +0000"  >&lt;p&gt;@stack. The potential performance slow down on seek is due to this:&lt;/p&gt;

&lt;p&gt;In ScanQueryMatcher, we used to return getNextRowOrNextColumn(bytes, offset, qualLength) for FAMILY_DELETED and COLUMN_DELETED; because once we see a KV that is deleted due to a family or a column delete, all the remaining KV&apos;s (with a lower timestamp) are guaranteed to be deleted.&lt;/p&gt;

&lt;p&gt;Now, we return SKIP instead. This change is required, because there might be a KV, later in the file &amp;#8211; that has a lower timestamp, but a higher memstoreTS (so that deleteFamily does not apply). In this case, we end up moving 1 KV at a time; instead of potentially skipping the entire column or row.&lt;/p&gt;


</comment>
                            <comment id="13208772" author="amitanand" created="Wed, 15 Feb 2012 20:31:21 +0000"  >&lt;p&gt;After some discussion, we figured that skipping to the next column, vs skipping to next KV shouldn&apos;t make so much of a difference. So, headed in this direction (as opposed to trying to create indices or change the sort order).&lt;/p&gt;


&lt;p&gt;Will need to see once the patch is complete, if the read performance gets affected significantly.&lt;/p&gt;</comment>
                            <comment id="13208773" author="amitanand" created="Wed, 15 Feb 2012 20:31:34 +0000"  >&lt;p&gt;After some discussion, we figured that skipping to the next column, vs skipping to next KV shouldn&apos;t make so much of a difference. So, headed in this direction (as opposed to trying to create indices or change the sort order).&lt;/p&gt;


&lt;p&gt;Will need to see once the patch is complete, if the read performance gets affected significantly.&lt;/p&gt;</comment>
                            <comment id="13208777" author="amitanand" created="Wed, 15 Feb 2012 20:38:43 +0000"  >&lt;p&gt;@Lars. I see your point. Its definitely debatable, weather timestamp is something that should be exposed to the client (to control) or something that should be considered an internal detail (so mess up at your risk).&lt;/p&gt;

&lt;p&gt;We do have applications that control timestamp; so we might need this (internally at least). Not sure if that is the only one in use, or there are more.&lt;/p&gt;

&lt;p&gt;Wrt the WALs. In the current codebase, I believe that we do not write memstoreTS. But, that can be fixed if needed.&lt;/p&gt;</comment>
                            <comment id="13209068" author="lhofhansl" created="Thu, 16 Feb 2012 01:58:55 +0000"  >&lt;p&gt;Skipping to next column can be much more efficient then skipping to next KV if there are many versions. In fact stack had filed a bug about it (can&apos;t find) and you FB folks put in the fix to skip to the next column.&lt;br/&gt;
Sorry to be the party killer here, but let&apos;s please not do this. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13209079" author="amitanand" created="Thu, 16 Feb 2012 02:30:47 +0000"  >&lt;p&gt;@Lars: Was discussing the replication issue a little more with Kannan. It does seem like there may be corner cases in which the exact order does matter. Even if we leave things the way they are; and clients do not take control of the timestamp.&lt;/p&gt;

&lt;p&gt;Say for example we have two Puts from the client side. &amp;#8211; If both hit the server in quick succession, they could both be issued the same milli-second timestamp. Which one of them wins, will then be entirely determined by the order in which they are applied. If we apply them in different order, we could end up with different values.&lt;/p&gt;

&lt;p&gt;It seems to me that to ensure determinism in terms of what the clients see; it would be crutial to have an internal timestamp that orders every operation (using something like Lamport&apos;s logical clock, instead real clock).&lt;/p&gt;

&lt;p&gt;I do agree with you that it would be nice if timestamp were considered an internal detail that clients don&apos;t take control of. But, we would still have to include memstoreTS or Log Seq Id to ensure deterministic replay.&lt;/p&gt;</comment>
                            <comment id="13209083" author="amitanand" created="Thu, 16 Feb 2012 02:37:06 +0000"  >&lt;p&gt;Yeah, I&apos;m worried about the performance slow down as well. &lt;/p&gt;</comment>
                            <comment id="13209085" author="lhofhansl" created="Thu, 16 Feb 2012 02:43:40 +0000"  >&lt;p&gt;If two things happen at the same time there &lt;b&gt;is&lt;/b&gt; no right order. The fact that we have limited timer resolution is not that relevant here.&lt;/p&gt;

&lt;p&gt;We just discussed another scenario internally here, were we have application level replicas of a table. One way to do this is have the client write to two HBase clusters and also have a catchup background task which copies older (before we started the dual-writing) cells to the replica. We will use this a lot to catch up standby clusters, etc. This would also not work any longer.&lt;/p&gt;

&lt;p&gt;Anyway, if there are other committers that feel that we need this I won&apos;t veto it (but I am -0.5 on it). And it must configurable without any performance detriment when disabled (i.e. delete still seeks to the next column). I&apos;d also vote to default off.&lt;/p&gt;

&lt;p&gt;Maybe some of the other committers would like to comment? @Stack, @Ted, @Todd?&lt;/p&gt;</comment>
                            <comment id="13209092" author="zhihyu@ebaysf.com" created="Thu, 16 Feb 2012 02:56:44 +0000"  >&lt;p&gt;I am in favor of internal timestamp so that we don&apos;t rely so much on real clock.&lt;br/&gt;
The initiative for this feature is to remove indeterminate behavior w.r.t. the timing of major compaction.&lt;/p&gt;

&lt;p&gt;I am in support of this feature. We can turn it off by default.&lt;/p&gt;</comment>
                            <comment id="13209114" author="phabricator@reviews.facebook.net" created="Thu, 16 Feb 2012 04:42:58 +0000"  >&lt;p&gt;aaiyer has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java:277 Technically, this should have never passed with the old settings expectedResults = 2.&lt;/p&gt;

&lt;p&gt;  It was passing due to a bug; which deleted version 0, whenever there was a delete for version 1. changing familyStamp to -1 should fix this.&lt;/p&gt;

&lt;p&gt;  But, I&apos;m having trouble convincing myself expectedResults = 3 is undoubtedly correct. It seems debatable. Any thoughts?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13209123" author="phabricator@reviews.facebook.net" created="Thu, 16 Feb 2012 05:36:59 +0000"  >&lt;p&gt;aaiyer updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;br/&gt;
Reviewers: JIRA, Kannan, Karthik, stack, tedyu, nspiegelberg, jgray, lhofhansl, mbautin, gqchen&lt;/p&gt;

&lt;p&gt;  the current state of affairs, supporting old behavior.&lt;/p&gt;

&lt;p&gt;  will work more on this, once we hear from more folks on the directions we want to go.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanDeleteTracker.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/DeleteTracker.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/p&gt;</comment>
                            <comment id="13209142" author="phabricator@reviews.facebook.net" created="Thu, 16 Feb 2012 06:16:58 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java:402 Put &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; here.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java:408 Should this be turned off by default ?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/DeleteTracker.java:45 Add @param for memstoreTS in these two methods.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:1750 If there is no better way of handling, remove this line.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:1763 This special constant should be defined and documented.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:49 This member doesn&apos;t seem to be used anywhere.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:50 This neither.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:66 Would memstoreTSForDelete be a better name ?&lt;br/&gt;
  Add comment please.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:65 Would timestampForDelete be better name ?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:89 Add @param for memstoreTS.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:93 Indentation for these two lines.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:60 Add comments for these fields please&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:62 How about naming this field memstoreTSForDeleteCol ?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:118 Should we consider checking these two timestamps separately ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13209198" author="phabricator@reviews.facebook.net" created="Thu, 16 Feb 2012 07:48:59 +0000"  >&lt;p&gt;aaiyer updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;br/&gt;
Reviewers: JIRA, Kannan, Karthik, stack, tedyu, nspiegelberg, jgray, lhofhansl, mbautin, gqchen&lt;/p&gt;

&lt;p&gt;  address comments from ted.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;/p&gt;













</comment>
                            <comment id="13209533" author="lhofhansl" created="Thu, 16 Feb 2012 17:45:42 +0000"  >&lt;p&gt;@Ted: Fair enough.&lt;br/&gt;
Here&apos;s another thing that will break: Master-Master replication. The memstoreTSs generated by the regionserver have no meaning w.r.t. to each other.&lt;br/&gt;
Also, since the replication sink accesses the replicated cluster through the normal API we need to add (public?) APIs to pass the memstoreTS through.&lt;/p&gt;

&lt;p&gt;And I can already see folks who want to manipulate the memstoreTS from the outside, bringing us back to where we are.&lt;/p&gt;</comment>
                            <comment id="13210076" author="lhofhansl" created="Fri, 17 Feb 2012 05:47:50 +0000"  >&lt;p&gt;Need to think about &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4536&quot; title=&quot;Allow CF to retain deleted rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4536&quot;&gt;&lt;del&gt;HBASE-4536&lt;/del&gt;&lt;/a&gt; as well. The main problem there was to work out when it is safe to delete the (family) delete markers - the solution was to store the smallest TS of any Put KV in the store file&apos;s metadata. I think that method should still work with your change.&lt;/p&gt;</comment>
                            <comment id="13210097" author="phabricator@reviews.facebook.net" created="Fri, 17 Feb 2012 06:19:57 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;/p&gt;

&lt;p&gt;  I have voiced my concern amply in the jira &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;  Implementation-wise this is looks reasonable enough. See a few questions and comments inline.&lt;/p&gt;


&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:1748 Is this right? Now we&apos;re always dating column or family way into the future.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java:223 See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4926&quot; title=&quot;DebugFilter; counts how many KVs skipped before result found, counts storefiles we tripped over&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4926&quot;&gt;&lt;del&gt;HBASE-4926&lt;/del&gt;&lt;/a&gt; on why this might be a performance problem.&lt;br/&gt;
  The seeking was just recently put in to address issues like this.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:155 Ugh... Although there shouldn&apos;t be too many family delete markers.&lt;br/&gt;
  Are you going to do some performance tests (or is this in production at FB already?)&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:155 This needs to conditioned on ENFORCE_STRICTER_SEMANTICS, right?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:166 Same here&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:173 and here&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13210444" author="phabricator@reviews.facebook.net" created="Fri, 17 Feb 2012 18:57:57 +0000"  >&lt;p&gt;aaiyer has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:1748 This will only happen for Deletes (Column and Family). The idea is that the Delete shall apply to all the puts, with a lower memstoreTS, regardless of their timestamp &amp;#8211; even if it is in &quot;future&quot;.&lt;/p&gt;

&lt;p&gt;  Subsequent Puts etc. will not get masked by the Delete, because they should have a memstoreTS that is larger.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:155 This is not yet in production. But, if we decide to go down this route, we will definitely test it out for performance.&lt;/p&gt;

&lt;p&gt;  Haven&apos;t optimised much here. Since, I don&apos;t expect there to be too many delete Family.&lt;/p&gt;

&lt;p&gt;  Will revisit if the assumption turns out to be false.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:155 I&apos;m not sure if we want to put this under ENFORCE_STRICTER_SEMANTICS ....&lt;/p&gt;

&lt;p&gt;  my understanding was that it would be better to have Puts not be masked by previous Deletes, regardless ....&lt;/p&gt;

&lt;p&gt;  weather we are willing to pay the extra performance cost for it, was the trade-off enforced using ENFORCE_STRICTER_SEMANTICS.&lt;/p&gt;

&lt;p&gt;  If there is a good reason for clients to expect that the Put will be masked by previous Deletes, we can definitely guard this with the flag.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanDeleteTracker.java:173 Perhaps, I might rename this class to something different, and we can add a flag in ScanQueryMatcher to instantiate the appropriate DeleteTracker.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java:223 Agree that this is going to be a performance issue here.&lt;/p&gt;

&lt;p&gt;  But, this is just a V-1 to get the general idea out. I&apos;m hopeful, we can optimise the codepath so that we incur the performance penalty only when there is really a later KV with a higher memstoreTS.&lt;/p&gt;

&lt;p&gt;  We currently, do not have a way to tell that. But, it can be done, say dump a flag while writing the HFile, if there is a memstoreTS inversion. Or something along that lines ....&lt;/p&gt;

&lt;p&gt;  Will try to optimise this, if needed, along those lines.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13211190" author="lhofhansl" created="Sun, 19 Feb 2012 02:45:22 +0000"  >&lt;p&gt;What about the fact the currently Deletes and Puts are idempotent? With this change a failed Put or Delete cannot just be redone, because the effect might be different.&lt;/p&gt;</comment>
                            <comment id="13212214" author="tlipcon" created="Mon, 20 Feb 2012 23:30:04 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Now that we are flushing the memstoreTS to disk, along with the KVs, we should be able&lt;br/&gt;
to differentiate whether or not the Put happened after the Delete and offer better &lt;br/&gt;
delete semantics.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What are the &quot;better semantics&quot; that we would offer? ie, if I do:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;put value &quot;a&quot; at ts=1&lt;/li&gt;
	&lt;li&gt;delete at ts=3&lt;/li&gt;
	&lt;li&gt;put value &quot;b&quot; at ts=2&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;and I do a read with &quot;current time&quot; semantics, do you expect to see &quot;b&quot; or nothing? I&apos;m not convinced that &quot;b&quot; is a &quot;better semantic&quot; here, except for the point that it makes major compaction more transparent. The transparency of compaction is sort of nice, but compaction is already not transparent because of time travel reads (except for the &quot;always keep versions&quot; stuff that we did recently)&lt;/p&gt;</comment>
                            <comment id="13221653" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 17:57:54 +0000"  >&lt;p&gt;aaiyer has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java:609 It seems like going for stronger read semantics would disable the space savings we get by storing the memstoreTS as a (1 byte) Zero value, instead of the actual value.&lt;/p&gt;

&lt;p&gt;  Perhaps, one way to get similar savings would be to store the actual memstoreTS in the variable length encoding, after differential encoding.&lt;/p&gt;

&lt;p&gt;   Here is what I propose.&lt;br/&gt;
      Keep track of a per-StoreFile startMemstoreTS value, that (approximately) keeps track of the smallest memstoreTS in the file.&lt;/p&gt;

&lt;p&gt;     KV&apos;s will store the deltas such that KV&apos;s-memstoreTS = StoreFile&apos;s-startMemstoreTS + KV-delta.&lt;/p&gt;

&lt;p&gt;     If the delta is small enough, we will only use 1 or 2 bytes for storing it. Since we use Bytes.writeVLong: From the java docs:&lt;/p&gt;

&lt;p&gt;  if n in [-32, 127): encode in one byte with the actual value. Otherwise,&lt;br/&gt;
  if n in [-20*2^8, 20*2^8): encode in two bytes: byte&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = n/256 - 52; byte&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;=n&amp;amp;0xff. Otherwise,&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221710" author="phabricator@reviews.facebook.net" created="Sat, 3 Mar 2012 21:53:54 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java:609 I think this suggestion is a good idea.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13221817" author="phabricator@reviews.facebook.net" created="Sun, 4 Mar 2012 07:36:20 +0000"  >&lt;p&gt;aaiyer has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5241&quot; title=&quot;Deletes should not mask Puts that come after it.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5241&quot;&gt;HBASE-5241&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Deletes should not mask Puts that come after it.&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java:223 mbautin, kannan: Just thinking aloud ...&lt;/p&gt;

&lt;p&gt;    If we are able to keep track of the Rows/Rows+Col, at flush time, where we see that a DeleteColumn/DeleteFamily is followed by a Put/KV with a higher memstoreTS; we might be able to skip ahead to getNextRowOrNextColumn as earlier, for almost all cases except ones where there actually was a back-fill.&lt;/p&gt;

&lt;p&gt;   Would it be possible, given the hfilev2 structure, to be able to add more kinds of bloom blocks to keep track of this information?&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1731&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13584252" author="zeph" created="Fri, 22 Feb 2013 13:25:33 +0000"  >&lt;p&gt;please... try find an agreement on this &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5154&quot; title=&quot;Can&amp;#39;t put small timestamp after delete the column&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5154&quot;&gt;&lt;del&gt;HBASE-5154&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13584256" author="zeph" created="Fri, 22 Feb 2013 13:29:24 +0000"  >&lt;p&gt;now... this is getting funny &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-720&quot; title=&quot;clean up inconsistencies around deletes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-720&quot;&gt;&lt;del&gt;HBASE-720&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12537740">HBASE-5154</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12399493">HBASE-720</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12976049">HBASE-15968</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12514541" name="ASF.LICENSE.NOT.GRANTED--HBASE-5241.D1731.1.patch" size="19786" author="phabricator@reviews.facebook.net" created="Tue, 14 Feb 2012 20:07:59 +0000"/>
                            <attachment id="12514757" name="ASF.LICENSE.NOT.GRANTED--HBASE-5241.D1731.2.patch" size="28011" author="phabricator@reviews.facebook.net" created="Thu, 16 Feb 2012 05:37:00 +0000"/>
                            <attachment id="12514769" name="ASF.LICENSE.NOT.GRANTED--HBASE-5241.D1731.3.patch" size="28082" author="phabricator@reviews.facebook.net" created="Thu, 16 Feb 2012 07:49:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 21 Jan 2012 02:19:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>224743</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 43 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ht0v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101964</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>