<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:03:56 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9383/HBASE-9383.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9383] Have Cell interface extend HeapSize interface</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9383</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;From the review of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9359&quot; title=&quot;Convert KeyValue to Cell in hbase-client module - Result/Put/Delete, ColumnInterpreter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9359&quot;&gt;&lt;del&gt;HBASE-9359&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Stack: Cell should implement HeapSize?  That sounds right.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ram: +1 for Cell extending HeapSize.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;Jon: I&apos;ll look into Cell extending HeapSize as a follow on.  It doesn&apos;t interfere with the signature and if a older 0.96 client talks to a 0.96.1 rs that has the change, it won&apos;t matter.&lt;/p&gt;&lt;/blockquote&gt;</description>
                <environment></environment>
        <key id="12666193">HBASE-9383</key>
            <summary>Have Cell interface extend HeapSize interface</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12663993">HBASE-9245</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jmhsieh">Jonathan Hsieh</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Aug 2013 21:19:59 +0000</created>
                <updated>Tue, 9 Sep 2014 03:59:13 +0000</updated>
                            <resolved>Tue, 9 Sep 2014 03:26:34 +0000</resolved>
                                    <version>0.96.0</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13756361" author="mcorgan" created="Tue, 3 Sep 2013 04:56:09 +0000"  >&lt;p&gt;Not sure I understand where it would be used, but when data block encoding is applied to a group of cells, they lose their individual heap sizes because they are composed of diffs of previous cells or references into a dictionary of common byte strings.  Would this return the heap size of the cell as if it were a KeyValue?&lt;/p&gt;</comment>
                            <comment id="13756683" author="jmhsieh" created="Tue, 3 Sep 2013 15:04:01 +0000"  >&lt;p&gt;I punted on this because I wasn&apos;t sure how far the encoded cells are percolated through the RS.  I assume the heap size of the KV is used for memstore/buffer cache accounting.  are prefixtree cells present in the memstore? is encoded data present in the block cache or are the expanded?&lt;/p&gt;

&lt;p&gt;for prefixtree heapsize, it would make sense to count the pointers, and separately count the shared prefixpool.&lt;/p&gt;</comment>
                            <comment id="13756825" author="mcorgan" created="Tue, 3 Sep 2013 17:45:38 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;are prefixtree cells present in the memstore?&lt;/p&gt;&lt;/blockquote&gt;no, the memstore is fully expanded KeyValues, plus the overhead of the CSLM that contains them.  (encoding the memstores would be a big improvement, btw)&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;for prefixtree heapsize, it would make sense to count the pointers, and separately count the shared prefixpool.&lt;/p&gt;&lt;/blockquote&gt;well, they are not really pointers, just encoded integers of various sizes that &quot;point&quot; to various offsets within a block&apos;s byte[].&lt;/p&gt;

&lt;p&gt;If for now you&apos;re just trying to replace KeyValue references with Cell and get all the generics working, tests passing, etc, then you may be ok having Cell&apos;s heapSize returning as if it&apos;s a fully expanded KeyValue.  I don&apos;t think it would break anything.&lt;/p&gt;

&lt;p&gt;Maybe make KeyValueUtil.heapSize(Cell cell) and calling it from within all Cell implementations.  Or, does it even need to be in the implementation, or can be just a util method?  Is it ever called polymorphically?&lt;/p&gt;

&lt;p&gt;We&apos;d just have to be careful of how Cell&apos;s heapSize is used.  For example, to calculate the heapSize of an encoded data block, you&apos;d want to look at the length of the block&apos;s total byte[] rather than adding up all the Cell.heapSizes in the block.&lt;/p&gt;</comment>
                            <comment id="13756841" author="jmhsieh" created="Tue, 3 Sep 2013 17:57:40 +0000"  >
&lt;blockquote&gt;&lt;p&gt;If for now you&apos;re just trying to replace KeyValue references with Cell and get all the generics working, tests passing, etc, then you may be ok having Cell&apos;s heapSize returning as if it&apos;s a fully expanded KeyValue. I don&apos;t think it would break anything.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Maybe make KeyValueUtil.heapSize(Cell cell) and calling it from within all Cell implementations. Or, does it even need to be in the implementation, or can be just a util method? Is it ever called polymorphically?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To get test passing and to keep the changes from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9334&quot; title=&quot;Convert KeyValue to Cell in hbase-client module - Filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9334&quot;&gt;&lt;del&gt;HBASE-9334&lt;/del&gt;&lt;/a&gt;/9259 semantics preserving, right now I use KeyValueUtil.ensureKeyValue(Cell) to convert to a KV and then call the heap size method.  I believe they are all KV&apos;s behind the scene at the moment so this is a cheap operation.&lt;/p&gt;

&lt;p&gt;I generally prefer having interface be sparse &amp;#8211; it is harder to remove methods than to add them.  My instinct is to keep it out until we percolate encodings into memstores or other places (they client) it it becomes clear that adding it makes sense.&lt;/p&gt;</comment>
                            <comment id="13904809" author="enis" created="Tue, 18 Feb 2014 23:37:27 +0000"  >&lt;p&gt;Agreed with Stack&apos;s comments on  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7320&quot; title=&quot;Remove KeyValue.getBuffer()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7320&quot;&gt;HBASE-7320&lt;/a&gt;. I don&apos;t think HeapSize belongs to the Cell interface. Maybe we can have a CellContainer interface, where CellContainer, and KV and encoders implement CellContainer. Also, since Cell is a public facing API, I think we have to be careful to not include methods. We actually want to hide the internal methods in Cell. &lt;/p&gt;</comment>
                            <comment id="14126521" author="enis" created="Tue, 9 Sep 2014 03:26:34 +0000"  >&lt;p&gt;I think Cell and HeapSize are incompatible by definition, and this has been discussed in other jiras as well. Closing as won&apos;t fix. Please reopen if you think otherwise. &lt;/p&gt;</comment>
                            <comment id="14126560" author="anoop.hbase" created="Tue, 9 Sep 2014 03:59:13 +0000"  >&lt;p&gt;Also see CellUtil#estimatedHeapSizeOf() -&amp;gt; We started making use of this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12623342">HBASE-7320</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Sep 2013 04:56:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>346132</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 14 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1nos7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>346433</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>