<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:46:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13771/HBASE-13771.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13771] Replication clients should not access zookeeper directly</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13771</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Replication client actions set and modify znodes directly. This is legacy from an era before we had the AccessController available and missing coverage of admin action in our security model. &lt;/p&gt;

&lt;p&gt;All replication client actions should be mediated by the master, and hooked up to the coprocessor framework for use by the AccessController. After adding this functionality we should should restrict access to replication znodes to only the HBase service principal, but provide a configuration option to relax those permissions for as long as older admin clients are in use (with a stern suggestion to upgrade ASAP). This type of functional change, with optional backwards compatibility, should be fine for all branches.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12832545">HBASE-13771</key>
            <summary>Replication clients should not access zookeeper directly</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Mon, 25 May 2015 17:16:13 +0000</created>
                <updated>Wed, 27 May 2015 01:43:21 +0000</updated>
                                            <version>2.0.0</version>
                    <version>1.0.1</version>
                    <version>1.1.0</version>
                    <version>0.98.12</version>
                    <version>1.2.0</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="14560269" author="apurtell" created="Wed, 27 May 2015 01:38:40 +0000"  >&lt;p&gt;Some random notes:&lt;/p&gt;

&lt;p&gt;Replication queue and peer management is almost pluggable in ReplicationAdmin. ReplicationFactory is hardcoded to always create the xxxZKImpl instances. This must be changed to instantiate classes specified in site configuration, using reflection.&lt;/p&gt;

&lt;p&gt;When we can plug in alternative implementations, we can switch the default to one that uses a new Master admin API. Leave the old one in place as a fallback if running old masters.&lt;/p&gt;

&lt;p&gt;ReplicationAdmin unconditionally creates a ZooKeeperWatcher. It&apos;s an anonymous inner class that overrides abort().  This is passed through to ReplicationFactory#getReplicationPeers and ReplicationFactory#getReplicationQueuesClient. ReplicationFactory should deal with this, keep it out of ReplicationAdmin. Fortunately ReplicationFactory is private.&lt;/p&gt;

&lt;p&gt;Add new API for replication admin as ReplicationAdminService, implement it in MasterRpcServices:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
AddPeerResponse replicationAddPeer(AddPeerRequest req)
RemovePeerResponse replicationRemovePeer(RemovePeerRequest req)
EnablePeerResponse replicationEnablePeer(EnablePeerRequest req)
DisablePeerResponse replicationDisablePeer(DisablePeerRequest req)
ListPeersResponse replicationListPeers(ListPeersRequest req)
ListPeerConfigsResponse replicationListPeerConfigs(ListPeerConfigsRequest req)
GetPeerConfigResponse replicationGetPeerConfig(GetPeerConfigRequest req)
SetPeerConfigResponse replicationSetPeerConfig(SetPeerConfigRequest req)
GetPeerTableCFsResponse replicationGetPeerTableCFs(GetPeerTableCFsRequest req)
SetPeerTableCFsResponse replicationSetPeerTableCFs(SetPeerTableCFsRequest req)
AppendPeerTableCFsResponse replicationAppendPeerTableCFs(AppendPeerTableCFsRequest req)
RemovePeerTableCFsResponse replicationRemovePeerTableCFs(RemovePeerTableCFsRequest req)
GetPeerStateResponse replicationGetPeerState(GetPeerStateRequest req)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add protobuf message definitions for above new xxxResponse and xxxRequest types. Could prefix them with &quot;Replication&quot; like the interface methods. See about consolidating the message types for xxxPeerTableCFs methods.&lt;/p&gt;

&lt;p&gt;For each ReplicationAdminService method, add a corresponding coprocessor API hook, and access control for it in the AccessController.&lt;/p&gt;

&lt;p&gt;The Master can simply create ReplicationQueuesClientZKImpl and ReplicationPeersZKImpl instances and delegate to them from the ReplicationAdminService implementation, until we move away from managing state in ZK (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13773&quot; title=&quot;Replication should not use ZooKeeper at all for coordination&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13773&quot;&gt;HBASE-13773&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;ReplicationAdmin#listValidReplicationPeers will not need to check state in ZK or call the new replicationGetPeerState API repeatedly if ListPeersResponse includes the information it needs.&lt;/p&gt;

&lt;p&gt;Other ReplicationAdmin methods use Admin APIs already.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12832546">HBASE-13772</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 29 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2f667:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>