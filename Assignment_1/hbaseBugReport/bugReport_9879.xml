<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:08:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9879/HBASE-9879.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9879] Can&apos;t undelete a KeyValue</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9879</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Test scenario:&lt;/p&gt;

&lt;p&gt;put(KV, timestamp=100)&lt;br/&gt;
put(KV, timestamp=200)&lt;br/&gt;
delete(KV, timestamp=200, with MutationProto.DeleteType.DELETE_ONE_VERSION)&lt;br/&gt;
get(KV) =&amp;gt; returns value at timestamp=100 (OK)&lt;br/&gt;
put(KV, timestamp=200)&lt;br/&gt;
get(KV) =&amp;gt; returns value at timestamp=100 (but not the one at timestamp=200 that was &quot;reborn&quot; by the previous put)&lt;/p&gt;

&lt;p&gt;Is that normal?&lt;/p&gt;

&lt;p&gt;I ran into this bug while running the integration tests at &lt;a href=&quot;https://github.com/OpenTSDB/asynchbase/pull/60&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/OpenTSDB/asynchbase/pull/60&lt;/a&gt; &#8211; the first time you run it, it passes, but after that, it keeps failing.  Sorry I don&apos;t have the corresponding HTable-based code but that should be fairly easy to write.&lt;/p&gt;

&lt;p&gt;I only tested this with 0.96.0, dunno yet how this behaved in prior releases.&lt;/p&gt;

&lt;p&gt;My hunch is that the tombstone added by the DELETE_ONE_VERSION keeps shadowing the value even after it&apos;s reborn.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12677177">HBASE-9879</key>
            <summary>Can&apos;t undelete a KeyValue</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tsuna">Benoit Sigoure</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Nov 2013 23:56:11 +0000</created>
                <updated>Wed, 16 Nov 2016 22:11:50 +0000</updated>
                                            <version>0.96.0</version>
                    <version>2.0.0</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13811791" author="jmspaggi" created="Sat, 2 Nov 2013 00:00:53 +0000"  >&lt;p&gt;If you flush and compact before the last put, you will see your timestamp=200 cell... Else, you will not because they will end in the same file, and the compaction will remove everything where timestamp=200...&lt;/p&gt;</comment>
                            <comment id="13811882" author="anoop.hbase" created="Sat, 2 Nov 2013 05:42:38 +0000"  >&lt;p&gt;This is a known thing and discussed some time back also in user mailing list&lt;/p&gt;</comment>
                            <comment id="13811955" author="jmspaggi" created="Sat, 2 Nov 2013 11:59:03 +0000"  >&lt;p&gt;BUT.....&lt;/p&gt;

&lt;p&gt;The thing is, we now have a way to fix that... But do we want to?&lt;/p&gt;

&lt;p&gt;The way will be to use the tags to store a sequence ID for each cell, kind of timestamp but that user can NOT modify.&lt;/p&gt;

&lt;p&gt;That way if someone send a Put, then a Delete then a Put for the EXACT same cell (row, CF:Q:TS) we can, using the timestamp tag, see which one is supposed to come first, which one is supposed to come after.&lt;/p&gt;

&lt;p&gt;Even better, if someone just to 2 Put with the EXACT same cell again, we can guarantee that the one pushed in 2nd will be the one which will stay in table at the end.&lt;/p&gt;

&lt;p&gt;We just have to make this as config param per table to not force all the cells from all the tables to have this system tag.&lt;/p&gt;

&lt;p&gt;I have already been asked by few end users if this is possible, and we can not to that today in 0.94.x but I think that having this is a good idea.&lt;/p&gt;

&lt;p&gt;I can give it a try...&lt;/p&gt;</comment>
                            <comment id="13812076" author="lhofhansl" created="Sat, 2 Nov 2013 17:17:29 +0000"  >&lt;p&gt;We&apos;d be breaking idempotency. The actual order in which operations arrive at the region server would note matter.&lt;/p&gt;</comment>
                            <comment id="13812126" author="jmspaggi" created="Sat, 2 Nov 2013 19:35:14 +0000"  >&lt;p&gt;The same way idempotency is broken when someone send puts or increments to a table from into a mapreduce task. People need to know what they are using. So if they set this parameter to a table, then they know how it&apos;s going to work. Very useful with the timestamp is set by the client applicatoin and not HBase.&lt;/p&gt;

&lt;p&gt;That will also allow to update a specific version of a specific cell. Today it&apos;s not possible to do that. You have to do a delete, flush, compaction and put. With this option, you will only have to do a put and that will automatically overwrite the previous one. Usefull when you keep a state as the last version of a cell, but you want to look at the history of the modifications, and want to update one of them...&lt;/p&gt;</comment>
                            <comment id="13812127" author="lhofhansl" created="Sat, 2 Nov 2013 19:46:23 +0000"  >&lt;p&gt;Wait... How will be proposed change fix this? Using Long.MAX_VALUE will cause the server to find the last version of the KV in question and delete that specific version. Passing a specific ts will only delete that specific version, if that ts happens to be the last version it&apos;ll shadow a new put just it did before.&lt;/p&gt;</comment>
                            <comment id="13812129" author="lhofhansl" created="Sat, 2 Nov 2013 19:51:26 +0000"  >&lt;p&gt;In fact with HTable you have both option: (1) target the last version for delete (2) mark a specific version for delete.&lt;br/&gt;
In either case a version delete marker will hide a put of the same ts.&lt;/p&gt;</comment>
                            <comment id="13812174" author="apurtell" created="Sat, 2 Nov 2013 21:12:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;Very useful with the timestamp is set by the client applicatoin and not HBase.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There was support in the recent PMC meeting for deprecating client set timestamps. Existing tables would grandfather a setting that allows user set timestamps but new tables would not allow them. Allowing clients to (ab)use cell timestamps leads to several problems not just this known issue. &lt;/p&gt;

&lt;p&gt;Edit: Did not change the jira type.&lt;/p&gt;</comment>
                            <comment id="13812219" author="lhofhansl" created="Sat, 2 Nov 2013 23:41:38 +0000"  >&lt;p&gt;To be precise, the idea was to optionally let a Table or ColumnFamily declare whether or not it would allow a client to set timestamps.&lt;/p&gt;</comment>
                            <comment id="13812966" author="apurtell" created="Mon, 4 Nov 2013 16:15:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;To be precise, the idea was to optionally let a Table or ColumnFamily declare whether or not it would allow a client to set timestamps.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, sorry, with the default being false.&lt;/p&gt;</comment>
                            <comment id="13815179" author="sershe" created="Wed, 6 Nov 2013 19:24:21 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8770&quot; title=&quot;deletes and puts with the same ts should be resolved according to mvcc/seqNum&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8770&quot;&gt;HBASE-8770&lt;/a&gt;. This would not be an issue if deletes and puts were resolved consistently...&lt;/p&gt;</comment>
                            <comment id="13815432" author="enis" created="Wed, 6 Nov 2013 23:16:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;There was support in the recent PMC meeting for deprecating client set timestamps. Existing tables would grandfather a setting that allows user set timestamps but new tables would not allow them. Allowing clients to (ab)use cell timestamps leads to several problems not just this known issue.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9905&quot; title=&quot;Enable using seqId as timestamp &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9905&quot;&gt;HBASE-9905&lt;/a&gt; for discussing that. &lt;/p&gt;</comment>
                            <comment id="13815945" author="jmspaggi" created="Thu, 7 Nov 2013 13:24:54 +0000"  >&lt;p&gt;Sorry, I was busy last few days and did not got a chance to update here.&lt;/p&gt;

&lt;p&gt;So here is the concern about this.&lt;/p&gt;

&lt;p&gt;Let&apos;s imagine your have a row with an ID, describing a unique identifier for your use case. Then you have one single CF, and columns. Columns are event categories. So each category is a type of event for this ID. Now, my for my events I have a payload in the cell. My payload is an avro object, where I have details about this specific occurrence of the event. Into this payload I have a field. Open, or close.&lt;/p&gt;

&lt;p&gt;It&apos;s stored that way because I want to be able to see the even chronology using the versions, and I want to be able to jump to a specific event type.&lt;/p&gt;

&lt;p&gt;I store my events, opened. And now, I want to close one of them. So I want to insert the exact same row with the exact same timestamp, but a slightly modifier payload where the status is now closed.&lt;/p&gt;

&lt;p&gt;I will have 2 timestamps for this newly introduce cell. I will have the original timestamp, the timestamp when the cell has been initially written into HBase, and this timestamp will help for the ordering of the cells into a specific event type. BUT... I also want to have a timestamp for the update itself. And this last one to be used to order the same event updates.&lt;/p&gt;

&lt;p&gt;If those modifications are coming fast, they might both be in memory. And I don&apos;t think we have any guarantee of the order. If were is some time between the 2, the first one might be already into a store, and the 2nd one into another store, so we should be fine. But not always. So we can&apos;t not really use that.&lt;/p&gt;

&lt;p&gt;Same for the delete. If I send a &quot;put&quot; then a &quot;delete&quot; then a &quot;put&quot; like detailed by Benoit initially, then the last &quot;put&quot; will be hidden by the delete, except if there has been a compaction just before it and the delete and first put got flushed. &lt;/p&gt;

&lt;p&gt;Now, if we use a cell tag sequence ID, or a cell tag operation timestamp... If you send a &quot;put&quot;, then a &quot;delete&quot;, then a &quot;put&quot;... All with the same cell time stamp. The operation timestamp will not be the same and we will be able to order those 3 events based on the operation timestamp, and then we will be able to clear the first put and the delete but keep the last put. Same for the case were we have &quot;put&quot; then &quot;put&quot;. Again with the same cell stimestamp. We will be able to order those 2 operations based in the operation timestamp.&lt;/p&gt;

&lt;p&gt;We can make this optional for a table. Like an parameter like &quot;CONSIDER_OPERATION_TIMESTAMP&quot;, which mean cells are going to be ordered also by this extra parameter and information is going to be stored into a tag. Same as the option you want to introduce where we block the feature to specify a specific cell timestamp, then we have another option to improve its usage depending on the use case.&lt;/p&gt;

&lt;p&gt;My 2&#162; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15671820" author="esteban" created="Wed, 16 Nov 2016 22:10:41 +0000"  >&lt;p&gt;This should be addressed by the work on HLC (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14070&quot; title=&quot;Hybrid Logical Clocks for HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14070&quot;&gt;HBASE-14070&lt;/a&gt;) and related JIRAs about MVCC (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15968&quot; title=&quot;MVCC-sensitive semantics of versions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15968&quot;&gt;HBASE-15968&lt;/a&gt;).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12844853">HBASE-14070</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12976049">HBASE-15968</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 2 Nov 2013 00:00:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>356552</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1pgtr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>356840</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>