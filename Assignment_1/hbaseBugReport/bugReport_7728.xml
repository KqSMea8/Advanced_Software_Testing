<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:48:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7728/HBASE-7728.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7728] deadlock occurs between hlog roller and hlog syncer</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7728</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;the hlog roller thread and hlog syncer thread may occur dead lock with the &apos;flushLock&apos; and &apos;updateLock&apos;, and then cause all &apos;IPC Server handler&apos; thread blocked on hlog append. the jstack info is as follow :&lt;br/&gt;
&quot;regionserver60020.logRoller&quot;:&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1305)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;waiting to lock &amp;lt;0x000000067bf88d58&amp;gt; (a java.lang.Object)&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1283)&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.wal.HLog.sync(HLog.java:1456)&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.wal.HLog.cleanupCurrentWriter(HLog.java:876)&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.wal.HLog.rollWriter(HLog.java:657)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x000000067d54ace0&amp;gt; (a java.lang.Object)&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.LogRoller.run(LogRoller.java:94)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:662)&lt;br/&gt;
&quot;regionserver60020.logSyncer&quot;:&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1314)&lt;/li&gt;
	&lt;li&gt;waiting to lock &amp;lt;0x000000067d54ace0&amp;gt; (a java.lang.Object)&lt;/li&gt;
	&lt;li&gt;locked &amp;lt;0x000000067bf88d58&amp;gt; (a java.lang.Object)&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1283)&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.wal.HLog.sync(HLog.java:1456)&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.wal.HLog$LogSyncer.run(HLog.java:1235)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:662)&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment>&lt;p&gt;Linux 2.6.18-164.el5 x86_64 GNU/Linux&lt;/p&gt;</environment>
        <key id="12630089">HBASE-7728</key>
            <summary>deadlock occurs between hlog roller and hlog syncer</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yuzhihong@gmail.com">Ted Yu</assignee>
                                    <reporter username="aaronwq">Wang Qiang</reporter>
                        <labels>
                    </labels>
                <created>Thu, 31 Jan 2013 07:36:02 +0000</created>
                <updated>Tue, 26 Feb 2013 08:27:15 +0000</updated>
                            <resolved>Fri, 1 Feb 2013 22:38:18 +0000</resolved>
                                    <version>0.94.2</version>
                                    <fixVersion>0.94.5</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>17</watches>
                                                                <comments>
                            <comment id="13567496" author="anoopsamjohn" created="Thu, 31 Jan 2013 10:01:05 +0000"  >&lt;p&gt;LogRoller thread trying to do a rolling over current log file. It captured the updateLock already.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HLog#rollWriter(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; force)
&lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (updateLock) {
        &lt;span class=&quot;code-comment&quot;&gt;// Clean up current writer.
&lt;/span&gt;        Path oldFile = cleanupCurrentWriter(currentFilenum);
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer = nextWriter;
		....
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As part of the clean up current writer, this thread try to sync the pending writes&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HLog#cleanupCurrentWriter(){
....
	sync();
    }
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer.close();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;At the same time logSyncer thread was doing a defered log sync operation&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HLog#syncer(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; txid){
 ...
 &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (flushLock) {
	....
	&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
	  logSyncerThread.hlogFlush(tempWriter, pending);
	} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(IOException io) {
	  &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
		&lt;span class=&quot;code-comment&quot;&gt;// HBASE-4387, HBASE-5623, retry with updateLock held
&lt;/span&gt;		tempWriter = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer;
		logSyncerThread.hlogFlush(tempWriter, pending);
	  }
	}
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This thread trying to grab the updateLock and holding the flushLock. Same time the roller thread coming and as part of clean up sync it tries to grab flushLock.&lt;br/&gt;
IOException might have happened in the logSyncer thread(logSyncerThread.hlogFlush). At this time our assumption is a log rollover already happened. That is why we try to write again with updateLock held and getting the writer again. &lt;span class=&quot;error&quot;&gt;&amp;#91;The writer on which the IOE happened should have closed.&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;In roller thread the writer close happens after the cleanup operation.&lt;br/&gt;
So I guess logSyncerThread.hlogFlush thrown IOE not because of a log roll.&lt;br/&gt;
With out assuming the log roll in catch block we can check for tempWriter == this.writer; ??&lt;/p&gt;

&lt;p&gt;I am not an expert in this area. As per a quick code study adding my observation. If wrong pls correct me.  Any logs with you when this happened?&lt;/p&gt;</comment>
                            <comment id="13567519" author="anoopsamjohn" created="Thu, 31 Jan 2013 10:35:10 +0000"  >&lt;p&gt;With out assuming the log roll in catch block we can check for tempWriter == this.writer; ??&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Not correct..&lt;br/&gt;
Can we know the IOE because of a parallel writer close?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13567546" author="ram_krish" created="Thu, 31 Jan 2013 11:16:22 +0000"  >&lt;p&gt;Yes  logs will be needed.  &lt;br/&gt;
If sync is still going on from cleanUpWriter then it means that this.writer is not null still.&lt;br/&gt;
If this.writer is not null then the IOE also should not have happened.&lt;/p&gt;

&lt;p&gt;If sync has happened then syncedTillHere should have changed.  So nice thing to analyse and debug.&lt;br/&gt;
The updateLock is needed too while changing the writer.  &lt;/p&gt;
</comment>
                            <comment id="13567550" author="anoopsamjohn" created="Thu, 31 Jan 2013 11:20:36 +0000"  >&lt;p&gt;Yes Ram the locks are correctly used AFA I have seen&lt;br/&gt;
Ideally logSyncerThread.hlogFlush should not throw IOE as it is clear from the thread dumb that the roller has not even near the point where it closes and reset the current writer.  Still it seems the IOE happened. That is why it is asking for the updateLock.&lt;/p&gt;</comment>
                            <comment id="13567551" author="anoopsamjohn" created="Thu, 31 Jan 2013 11:21:48 +0000"  >&lt;p&gt;Sorry.. thread dump &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13567553" author="anoopsamjohn" created="Thu, 31 Jan 2013 11:22:24 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=aaronwq&quot; class=&quot;user-hover&quot; rel=&quot;aaronwq&quot;&gt;Wang Qiang&lt;/a&gt; Any chance for logs?&lt;/p&gt;</comment>
                            <comment id="13567554" author="ram_krish" created="Thu, 31 Jan 2013 11:23:47 +0000"  >&lt;p&gt;I am checking with latest 0.94 code.  May be 0.94.2 has some changes as per the line no in the thread dump?&lt;/p&gt;</comment>
                            <comment id="13567570" author="anoopsamjohn" created="Thu, 31 Jan 2013 11:47:44 +0000"  >&lt;p&gt;I can see getting an IOE wrapping a NPE when the concurrent writer close happening&lt;br/&gt;
This is from here&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
SequenceFileLogWriter
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void append(HLog.Entry entry) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    entry.setCompressionContext(compressionContext);
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer.append(entry.getKey(), entry.getEdit());
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (NullPointerException npe) {
      &lt;span class=&quot;code-comment&quot;&gt;// Concurrent close...
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(npe);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13568225" author="yuzhihong@gmail.com" created="Thu, 31 Jan 2013 23:11:18 +0000"  >&lt;p&gt;How about this patch ?&lt;/p&gt;

&lt;p&gt;It tries to guard against closed this.writer.&lt;/p&gt;</comment>
                            <comment id="13568273" author="hadoopqa" created="Fri, 1 Feb 2013 00:14:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567455/7728-v1.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567455/7728-v1.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestJoinedScanners&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4279//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13568321" author="lhofhansl" created="Fri, 1 Feb 2013 01:02:44 +0000"  >&lt;p&gt;How are we getting into HLog.syncer() with the updateLock already held?&lt;/p&gt;</comment>
                            <comment id="13568324" author="lhofhansl" created="Fri, 1 Feb 2013 01:05:21 +0000"  >&lt;p&gt;Oh I see:&lt;br/&gt;
rollWriter -&amp;gt; cleanupCurrentWriter -&amp;gt; sync() -&amp;gt; syncer()&lt;/p&gt;</comment>
                            <comment id="13568344" author="lhofhansl" created="Fri, 1 Feb 2013 01:22:59 +0000"  >&lt;p&gt;How about this? Avoids holding the updateLock for the entire duration of the cleanup.&lt;/p&gt;

&lt;p&gt;100% untested.&lt;/p&gt;</comment>
                            <comment id="13568352" author="hadoopqa" created="Fri, 1 Feb 2013 01:32:07 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567480/7728-suggest.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567480/7728-suggest.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4281//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4281//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13568360" author="lhofhansl" created="Fri, 1 Feb 2013 01:37:27 +0000"  >&lt;p&gt;This was an 0.94 patch. Lemme make a trunk version. Thinking about it more, not sure it&apos;s correct. The update lock is supposed to guard against a concurrent roll... Not sure it would still reliably do that.&lt;/p&gt;</comment>
                            <comment id="13568409" author="hadoopqa" created="Fri, 1 Feb 2013 02:45:26 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567486/7728-suggest-0.96.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567486/7728-suggest-0.96.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRollingNoCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4283//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13568427" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 03:19:11 +0000"  >&lt;p&gt;TestLogRollingNoCluster, the test added for concurrent log rolling and hlogFlush, failed.&lt;/p&gt;

&lt;p&gt;It would be nice if my patch is given a chance &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13568429" author="anoopsamjohn" created="Fri, 1 Feb 2013 03:25:24 +0000"  >&lt;p&gt;Ted&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
             &lt;span class=&quot;code-comment&quot;&gt;// HBASE-4387, HBASE-5623, retry with updateLock held
&lt;/span&gt;             tempWriter = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer;
-            logSyncerThread.hlogFlush(tempWriter, pending);
           }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here also the syncer thread is trying to get the updateLock and holding the flushLock.&lt;br/&gt;
Same time roller thread holds the updateLock and it tries to get the flushLock.&lt;br/&gt;
This is what happened in the issue.  So will this remove the deadlock?&lt;/p&gt;

&lt;p&gt;A log would greatly help us if there is some thing. Any chance &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=aaronwq&quot; class=&quot;user-hover&quot; rel=&quot;aaronwq&quot;&gt;Wang Qiang&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13568439" author="lhofhansl" created="Fri, 1 Feb 2013 03:44:25 +0000"  >&lt;p&gt;Of course Ted. That&apos;s why I named it ...suggest &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;</comment>
                            <comment id="13568443" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 03:55:47 +0000"  >&lt;p&gt;Patch v2 tries to align the order of locking so that there is no deadlock.&lt;/p&gt;

&lt;p&gt;TestLogRollingNoCluster and TestHLog passed.&lt;/p&gt;</comment>
                            <comment id="13568452" author="lhofhansl" created="Fri, 1 Feb 2013 04:05:01 +0000"  >&lt;p&gt;Does it need the part where it sets the writer to null and following null check?&lt;/p&gt;</comment>
                            <comment id="13568453" author="anoopsamjohn" created="Fri, 1 Feb 2013 04:13:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;Does it need the part where it sets the writer to null and following null check?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;May be better this be there IMHO. &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt;&lt;br/&gt;
This patch looks to solve the issue of possible deadlock I guess.&lt;br/&gt;
Can we log the IOE ? Or not really needed?&lt;/p&gt;</comment>
                            <comment id="13568464" author="lhofhansl" created="Fri, 1 Feb 2013 04:23:27 +0000"  >&lt;p&gt;Do not we not have to check for tempWriter == null during the first attempt to flush the log?&lt;/p&gt;</comment>
                            <comment id="13568467" author="anoopsamjohn" created="Fri, 1 Feb 2013 04:30:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do not we not have to check for tempWriter == null during the first attempt to flush the log?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes .&lt;/p&gt;</comment>
                            <comment id="13568480" author="hadoopqa" created="Fri, 1 Feb 2013 04:55:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567512/7728-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567512/7728-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestZKBasedOpenCloseRegion&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4285//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13568482" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 04:57:05 +0000"  >&lt;p&gt;Patch v3 adds error log.&lt;br/&gt;
There is null check at the beginning of hlogFlush():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    void hlogFlush(Writer writer, List&amp;lt;Entry&amp;gt; pending) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (pending == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13568485" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 05:03:21 +0000"  >&lt;p&gt;I ran the two tests locally with patch and they passed:&lt;br/&gt;
  667  mt -Dtest=TestAdmin&lt;br/&gt;
  668  mt -Dtest=TestZKBasedOpenCloseRegion&lt;/p&gt;</comment>
                            <comment id="13568490" author="anoopsamjohn" created="Fri, 1 Feb 2013 05:12:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; You mean this?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.closed) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
      tempWriter = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer; &lt;span class=&quot;code-comment&quot;&gt;// guaranteed non-&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
&lt;/span&gt;    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Yes here we check for this.closed state. This well guards the tempWriter to be not null during the 1st flush attempt.&lt;br/&gt;
I was wrong the above comment that we need null check.&lt;/p&gt;

&lt;p&gt;But we need null check down the line when we do the sync() call on the writer?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        tempWriter.sync();
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(IOException io) {
        &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
          &lt;span class=&quot;code-comment&quot;&gt;// HBASE-4387, HBASE-5623, retry with updateLock held
&lt;/span&gt;          tempWriter = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer;
          tempWriter.sync();
        }
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Or instead of null checks all the places can we do this.closed checks?&lt;/p&gt;

&lt;p&gt;Also in the log can we write that info that we will do a retry for the flush? Do we need the log level to be error or WARN is fine? May be error also okey.&lt;/p&gt;</comment>
                            <comment id="13568496" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 05:26:07 +0000"  >&lt;p&gt;Patch v4 addresses Anoop&apos;s comments&lt;/p&gt;</comment>
                            <comment id="13568504" author="anoopsamjohn" created="Fri, 1 Feb 2013 05:41:25 +0000"  >&lt;p&gt;Ted&lt;br/&gt;
In the last patch you removed the null check for the hlogFlush() retry?&lt;br/&gt;
Now the check is there in one place in sync() , the retry time.&lt;br/&gt;
We need the null check at the 1st time sync also. (with out the updateLock)&lt;/p&gt;
</comment>
                            <comment id="13568506" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 05:47:36 +0000"  >&lt;p&gt;TestLogRollingNoCluster and &amp;#42;HLog&amp;#42; tests passed for 0.94 patch.&lt;/p&gt;</comment>
                            <comment id="13568507" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 05:50:16 +0000"  >&lt;p&gt;In both 0.94 and trunk, we have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    void hlogFlush(Writer writer, List&amp;lt;Entry&amp;gt; pending) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (pending == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So the null check before calling hlogFlush() is not needed.&lt;/p&gt;</comment>
                            <comment id="13568511" author="hadoopqa" created="Fri, 1 Feb 2013 05:57:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567517/7728-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567517/7728-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4286//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13568520" author="hadoopqa" created="Fri, 1 Feb 2013 06:24:57 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12567526/7728-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12567526/7728-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4287//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13568524" author="stack" created="Fri, 1 Feb 2013 06:45:51 +0000"  >&lt;p&gt;How we know this fixes the deadlock?  Can we manufacture it in a test bed and then see if this patch fixes it?&lt;/p&gt;</comment>
                            <comment id="13568580" author="anoopsamjohn" created="Fri, 1 Feb 2013 08:40:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt;&lt;br/&gt;
+        this.writer = null;&lt;br/&gt;
This addition in close() can make NPE possible at the places where we try hlogFlush for 2nd time and 2 places of tempWriter.sync(), one without and another with updateLock.&lt;br/&gt;
I was telling abt this null check. In your older patch you have added null check on the tempWriter before repeating hlogFlush ()&lt;/p&gt;</comment>
                            <comment id="13568694" author="anoopsamjohn" created="Fri, 1 Feb 2013 12:28:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; Checked with 2 threads and giving break points,  one is doing the append and other doing the roll. Able to reproduce the deadlock and patch solves that. The patch make sure the locking order is maintained same as that with roller.&lt;/p&gt;

&lt;p&gt;I think in the issue what happened is the 1st time call to hlogFlush() thrown an IOE but there were no roll happened and new writer created. The roller  thread is still trying for cleanupCurrentWriter. So IOE because of some other reason happened. I dont think there was a parallel explicit close() call also happened. In close() we can see the it joins the log syncer thread and then only doing the writer close.&lt;/p&gt;</comment>
                            <comment id="13568761" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 14:41:02 +0000"  >&lt;p&gt;Patch v4 adds null check for tempWriter.sync()&lt;/p&gt;</comment>
                            <comment id="13568813" author="lhofhansl" created="Fri, 1 Feb 2013 15:42:47 +0000"  >&lt;p&gt;Am still not 100% sold that we need to set the writer to null upon close and add the null check everywhere in syncer().&lt;br/&gt;
The change of the locking order should be enough. If not, please explain it to me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13568944" author="ram_krish" created="Fri, 1 Feb 2013 18:33:23 +0000"  >&lt;p&gt;Patch looks good.  Nice fix.  &lt;/p&gt;</comment>
                            <comment id="13568953" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 18:40:30 +0000"  >&lt;p&gt;The null check originated from the fact that Writer doesn&apos;t provide isClosed() method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; Writer {
    void init(FileSystem fs, Path path, Configuration c) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

    void close() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

    void sync() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

    void append(Entry entry) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getLength() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I would like to have a way of telling whether Writer is closed.&lt;/p&gt;</comment>
                            <comment id="13569046" author="lhofhansl" created="Fri, 1 Feb 2013 20:30:34 +0000"  >&lt;p&gt;The fact that the writer might be closed concurrently is exactly the reason why the flush and sync are retried with the updateLock held.&lt;br/&gt;
The null-check confuses the issue, IMHO.&lt;/p&gt;</comment>
                            <comment id="13569065" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 20:46:25 +0000"  >&lt;p&gt;In the current formation:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
            tempWriter = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer;
            logSyncerThread.hlogFlush(tempWriter, pending);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The null check is the first action in hlogFlush().&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        tempWriter.sync();
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(IOException ex) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It is expected that NullPointerException would be wrapped in IOException and handled by the catch clause.&lt;br/&gt;
When tempWriter is null, the above assumption no longer works.&lt;/p&gt;</comment>
                            <comment id="13569069" author="lhofhansl" created="Fri, 1 Feb 2013 20:52:23 +0000"  >&lt;p&gt;That is why we should not change that. What I am saying is that if you access the writer inside the updatalock in syncer() it will not be null.&lt;br/&gt;
If we set it to null when closing, we might expose us to other NPEs in other parts of the code. As seen from this issue, this code is finicky.&lt;/p&gt;

&lt;p&gt;That main point I am making is that the deadlock (this issues) is fixed by your reordering of the locks (nice change, btw), and that the null stuff in an extraneous change.&lt;br/&gt;
We can add the null set/check to 0.96, for 0.94 I would prefer the minimum change possible (unless you really feel strongly about this).&lt;/p&gt;</comment>
                            <comment id="13569074" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 20:56:43 +0000"  >&lt;p&gt;I will trim down the 0.94 patch, attach it here and run related tests.&lt;/p&gt;</comment>
                            <comment id="13569104" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 21:24:47 +0000"  >&lt;p&gt;Here&apos;re the 0.94 tests I ran with simplified patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Running org.apache.hadoop.hbase.mapreduce.TestHLogRecordReader
2013-02-01 13:04:25.210 java[78223:1203] Unable to load realm info from SCDynamicStore
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.247 sec
Running org.apache.hadoop.hbase.master.cleaner.TestLogsCleaner
2013-02-01 13:04:31.229 java[78233:1203] Unable to load realm info from SCDynamicStore
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.905 sec
Running org.apache.hadoop.hbase.master.TestDistributedLogSplitting
2013-02-01 13:04:34.321 java[78235:dd03] Unable to load realm info from SCDynamicStore
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 135.127 sec
Running org.apache.hadoop.hbase.master.TestSplitLogManager
2013-02-01 13:08:28.744 java[78334:1203] Unable to load realm info from SCDynamicStore
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 100.334 sec
Running org.apache.hadoop.hbase.monitoring.TestMemoryBoundedLogMessageBuffer
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.224 sec
Running org.apache.hadoop.hbase.regionserver.TestSplitLogWorker
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.777 sec
Running org.apache.hadoop.hbase.regionserver.wal.TestHLog
2013-02-01 13:08:49.760 java[78345:1203] Unable to load realm info from SCDynamicStore
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 60.172 sec
Running org.apache.hadoop.hbase.regionserver.wal.TestHLogBench
2013-02-01 13:09:50.456 java[78397:1203] Unable to load realm info from SCDynamicStore
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.873 sec
Running org.apache.hadoop.hbase.regionserver.wal.TestHLogMethods
2013-02-01 13:09:51.531 java[78399:1203] Unable to load realm info from SCDynamicStore
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.798 sec
Running org.apache.hadoop.hbase.regionserver.wal.TestHLogSplit
2013-02-01 13:09:52.761 java[78402:1203] Unable to load realm info from SCDynamicStore
Tests run: 30, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 242.269 sec
Running org.apache.hadoop.hbase.regionserver.wal.TestHLogSplitCompressed
2013-02-01 13:13:55.600 java[78424:1203] Unable to load realm info from SCDynamicStore
Tests run: 30, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 235.546 sec
Running org.apache.hadoop.hbase.regionserver.wal.TestLogRollAbort
2013-02-01 13:17:51.787 java[78446:1203] Unable to load realm info from SCDynamicStore
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 36.362 sec
Running org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
2013-02-01 13:18:28.753 java[78473:1203] Unable to load realm info from SCDynamicStore
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 283.942 sec
Running org.apache.hadoop.hbase.regionserver.wal.TestLogRollingNoCluster
2013-02-01 13:23:13.084 java[78536:1203] Unable to load realm info from SCDynamicStore
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.838 sec
Running org.apache.hadoop.hbase.TestFullLogReconstruction
2013-02-01 13:23:15.325 java[78538:1203] Unable to load realm info from SCDynamicStore
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 64.557 sec
Running org.apache.hadoop.hbase.regionserver.wal.TestLogRollingNoCluster
2013-02-01 13:24:32.933 java[78575:1203] Unable to load realm info from SCDynamicStore
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.283 sec
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;They all passed.&lt;/p&gt;</comment>
                            <comment id="13569105" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 21:25:47 +0000"  >&lt;p&gt;Integrated to 0.94 and trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the reviews, Lars, Stack, Anoop and Ram.&lt;/p&gt;</comment>
                            <comment id="13569179" author="lhofhansl" created="Fri, 1 Feb 2013 22:36:29 +0000"  >&lt;p&gt;Posthumous +1 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13569200" author="hudson" created="Fri, 1 Feb 2013 22:57:10 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #816 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/816/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/816/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7728&quot; title=&quot;deadlock occurs between hlog roller and hlog syncer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7728&quot;&gt;&lt;del&gt;HBASE-7728&lt;/del&gt;&lt;/a&gt; deadlock occurs between hlog roller and hlog syncer (Ted Yu) (Revision 1441637)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13569272" author="stack" created="Fri, 1 Feb 2013 23:51:07 +0000"  >&lt;p&gt;Looks like I just ran into this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Java stack information &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the threads listed above:
===================================================
&lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Server handler 49 on 10304&quot;&lt;/span&gt;:
        at org.apache.hadoop.hbase.regionserver.wal.HLog.append(HLog.java:1121)
        - waiting to lock &amp;lt;0x0000000583d75420&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.appendNoSync(HLog.java:1167)
        at org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion.java:2212)
        at org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:1960)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.multi(HRegionServer.java:3454)
        at sun.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.hbase.ipc.WritableRpcEngine$Server.call(WritableRpcEngine.java:364)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1400)
&lt;span class=&quot;code-quote&quot;&gt;&quot;regionserver10304.logRoller&quot;&lt;/span&gt;:
        at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1302)
        - waiting to lock &amp;lt;0x0000000583d75438&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1279)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.sync(HLog.java:1432)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.cleanupCurrentWriter(HLog.java:865)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.rollWriter(HLog.java:646)
        - locked &amp;lt;0x0000000583d75420&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at org.apache.hadoop.hbase.regionserver.LogRoller.run(LogRoller.java:94)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
&lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Server handler 46 on 10304&quot;&lt;/span&gt;:
        at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1312)
        - waiting to lock &amp;lt;0x0000000583d75420&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        - locked &amp;lt;0x0000000583d75438&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.sync(HLog.java:1436)
        at org.apache.hadoop.hbase.regionserver.HRegion.syncOrDefer(HRegion.java:5176)
        at org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion.java:2232)
        at org.apache.hadoop.hbase.regionserver.HRegion.batchMutate(HRegion.java:1960)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.multi(HRegionServer.java:3454)
        at sun.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.hbase.ipc.WritableRpcEngine$Server.call(WritableRpcEngine.java:364)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1400)

Found 1 deadlock.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a 0.94.3 or so.&lt;/p&gt;</comment>
                            <comment id="13569279" author="sershe" created="Fri, 1 Feb 2013 23:57:48 +0000"  >&lt;p&gt;I have a meta question about retrying with update lock held.. noticed that when working on something else earlier.&lt;br/&gt;
If we fail to sync because writer was being closed (and is replaced by a new writer?), why would we want to sync the new unrelated writer?&lt;/p&gt;</comment>
                            <comment id="13569314" author="hudson" created="Sat, 2 Feb 2013 00:39:57 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #389 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/389/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/389/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7728&quot; title=&quot;deadlock occurs between hlog roller and hlog syncer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7728&quot;&gt;&lt;del&gt;HBASE-7728&lt;/del&gt;&lt;/a&gt; deadlock occurs between hlog roller and hlog syncer (Ted Yu) (Revision 1441631)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13569325" author="lhofhansl" created="Sat, 2 Feb 2013 00:50:30 +0000"  >&lt;p&gt;If the flush fails we&apos;d flush these edit into the next log file.&lt;br/&gt;
For sync&apos;ing you&apos;re right. It makes no sense to sync the new writer.&lt;/p&gt;</comment>
                            <comment id="13569544" author="ram_krish" created="Sat, 2 Feb 2013 13:38:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;For sync&apos;ing you&apos;re right. It makes no sense to sync the new writer.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Why do you feel so Lars? Is it because anyway it would get synced in the subsequent sync calls?&lt;/p&gt;</comment>
                            <comment id="13569602" author="lhofhansl" created="Sat, 2 Feb 2013 17:34:42 +0000"  >&lt;p&gt;I think the reasoning would go like this: When we get past flush part, all edits have been flushed to the last log file. If we cannot sync that file, for example because the log was rolled, it does not help to sync another log file (it won&apos;t cause the prior file to be sync&apos;ed).&lt;/p&gt;</comment>
                            <comment id="13569989" author="anoopsamjohn" created="Mon, 4 Feb 2013 04:47:56 +0000"  >&lt;p&gt;So in such a case we need to distinguish clearly that an Exception in flush or sync is due to log roll. Now this is not this way.&lt;br/&gt;
In this defect case also an IOE has happened while flush but rolling of the log and new writer creation was not happened by that time. (A rolling was in progress but it has not reached till the point of creating new writer)&lt;/p&gt;</comment>
                            <comment id="13570985" author="hudson" created="Tue, 5 Feb 2013 03:58:27 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #11 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/11/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/11/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7728&quot; title=&quot;deadlock occurs between hlog roller and hlog syncer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7728&quot;&gt;&lt;del&gt;HBASE-7728&lt;/del&gt;&lt;/a&gt; deadlock occurs between hlog roller and hlog syncer (Ted Yu) (Revision 1441637)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13580252" author="jmspaggi" created="Sun, 17 Feb 2013 19:00:42 +0000"  >&lt;p&gt;Has this been applied in 0.94? Seems that it&apos;s not. can anyone confirm? I looked an HLog and have expected to see a &quot;this.writer = null;&quot; close to line 1010 but it&apos;s not there.&lt;/p&gt;</comment>
                            <comment id="13580254" author="qwertymaniac" created="Sun, 17 Feb 2013 19:07:12 +0000"  >&lt;p&gt;Per &lt;a href=&quot;http://svn.apache.org/viewvc/hbase/tags/0.94.5RC1/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java?view=log&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/hbase/tags/0.94.5RC1/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java?view=log&lt;/a&gt; and its contents, this is in the 0.94.5 release.&lt;/p&gt;</comment>
                            <comment id="13580255" author="jmspaggi" created="Sun, 17 Feb 2013 19:08:12 +0000"  >&lt;p&gt;Yep, I just figured I looked at the v2 version of the patch but should have looked at the simplified one.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12567636" name="7728-0.94-simplified.txt" size="1712" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 21:04:31 +0000"/>
                            <attachment id="12567617" name="7728-0.94-v2.txt" size="2264" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 18:46:42 +0000"/>
                            <attachment id="12567529" name="7728-0.94.txt" size="2100" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 05:38:46 +0000"/>
                            <attachment id="12567486" name="7728-suggest-0.96.txt" size="2183" author="lhofhansl" created="Fri, 1 Feb 2013 01:39:51 +0000"/>
                            <attachment id="12567480" name="7728-suggest.txt" size="2038" author="lhofhansl" created="Fri, 1 Feb 2013 01:22:59 +0000"/>
                            <attachment id="12567455" name="7728-v1.txt" size="915" author="yuzhihong@gmail.com" created="Thu, 31 Jan 2013 23:11:18 +0000"/>
                            <attachment id="12567512" name="7728-v2.txt" size="1783" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 03:55:47 +0000"/>
                            <attachment id="12567517" name="7728-v3.txt" size="1852" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 04:57:05 +0000"/>
                            <attachment id="12567586" name="7728-v4.txt" size="2418" author="yuzhihong@gmail.com" created="Fri, 1 Feb 2013 14:41:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 31 Jan 2013 10:01:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>310585</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 43 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1hlmv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>310930</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>