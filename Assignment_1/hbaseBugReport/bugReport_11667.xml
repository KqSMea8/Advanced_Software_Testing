<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:25:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11667/HBASE-11667.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11667] Comment ClientScanner logic for NSREs.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11667</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We ran into an issue with Phoenix where a RegionObserver coprocessor intercepts a scan and returns an aggregate (in this case a count) with a fake row key. It turns out this does not work when the &lt;tt&gt;ClientScanner&lt;/tt&gt; encounters NSREs, as it uses the last key it saw to reset the scanner to try again (which in this case would be the fake key).&lt;/p&gt;

&lt;p&gt;While this is arguably a rare case and one could also argue that a region observer just shouldn&apos;t do this... While looking at &lt;tt&gt;ClientScanner&lt;/tt&gt;&apos;s code I found this logic not necessary.&lt;br/&gt;
A NSRE occurred because we contacted a region server with a key that it no longer hosts. This is the start key, so it is always correct to retry with this same key. That simplifies the ClientScanner logic and also make this sort of coprocessors possible,&lt;/p&gt;</description>
                <environment></environment>
        <key id="12731897">HBASE-11667</key>
            <summary>Comment ClientScanner logic for NSREs.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Aug 2014 23:48:51 +0000</created>
                <updated>Tue, 9 Sep 2014 04:19:27 +0000</updated>
                            <resolved>Wed, 6 Aug 2014 18:36:27 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>0.94.23</fixVersion>
                    <fixVersion>0.98.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="14085519" author="lhofhansl" created="Mon, 4 Aug 2014 23:52:19 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jamestaylor&quot; class=&quot;user-hover&quot; rel=&quot;jamestaylor&quot;&gt;James Taylor&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, FYI.&lt;/p&gt;</comment>
                            <comment id="14085521" author="lhofhansl" created="Mon, 4 Aug 2014 23:55:54 +0000"  >&lt;p&gt;Here&apos;s a &lt;b&gt;proposal&lt;/b&gt; against 0.94.&lt;br/&gt;
Please have a very careful look, as there might be corner conditions lurking that I have not seen.&lt;br/&gt;
I ran TestFromClientSide (including the new test I added) and it worked fine.&lt;/p&gt;

&lt;p&gt;Since we retry with the previous key that caused the failure, all the skipFirst huh-hah just goes away, which is nice.&lt;/p&gt;</comment>
                            <comment id="14085561" author="lhofhansl" created="Tue, 5 Aug 2014 00:28:01 +0000"  >&lt;p&gt;And a trunk version.&lt;/p&gt;

&lt;p&gt;The logic here was more complicated due to region replicas.&lt;br/&gt;
&lt;tt&gt;TestRegionReplicas&lt;/tt&gt; fails locally for me with or without the patch, so not sure.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; and whoever knows about region replicas (maybe &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;?), please have a careful look. The simplification of this code would be nice if it is correct.&lt;/p&gt;</comment>
                            <comment id="14085562" author="lhofhansl" created="Tue, 5 Aug 2014 00:28:17 +0000"  >&lt;p&gt;Let&apos;s try hadoop QA&lt;/p&gt;</comment>
                            <comment id="14085626" author="devaraj" created="Tue, 5 Aug 2014 01:21:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11665&quot; title=&quot;TestRegionReplicas doesn&amp;#39;t work for me&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11665&quot;&gt;&lt;del&gt;HBASE-11665&lt;/del&gt;&lt;/a&gt; is tracking failures in the TestRegionReplicas. For scan tests you should run TestReplicasClient tests - that has tests for scans with replicas. Will have a look at your patch.&lt;/p&gt;</comment>
                            <comment id="14085629" author="apurtell" created="Tue, 5 Aug 2014 01:24:09 +0000"  >&lt;p&gt;Attaching a patch for 0.98.&lt;/p&gt;

&lt;p&gt;Working on an integration test now.&lt;/p&gt;</comment>
                            <comment id="14085660" author="zjushch" created="Tue, 5 Aug 2014 01:55:32 +0000"  >&lt;p&gt;The logic of skipFirst  is used to handle the case that client call &apos;next&apos; request and server returns the NSRE in the process of scanning.&lt;br/&gt;
I think it shouln&apos;t be removed directly.&lt;/p&gt;

&lt;p&gt;For example, for a region contains rows: &apos;aaa&apos;,&apos;bbb&apos;,&apos;ccc&apos;,&apos;ddd&apos;.&lt;br/&gt;
Do the following things:&lt;br/&gt;
1.Client open the scanner(empty start row) of this region.&lt;br/&gt;
2.Client call next, and get row &apos;aaa&apos;&lt;br/&gt;
3.Move the region to another server&lt;br/&gt;
4.Client call next request to the old server, it will get NSRE, thus client will open the scanner again with &apos;aaa&apos;(the last result) as the start row.&lt;br/&gt;
5.Client should skip the first row &apos;aaa&apos; &lt;/p&gt;

&lt;p&gt;So, for the test case testScansWithSplits(), we should do &quot;TEST_UTIL.getHBaseAdmin().split(TABLE)&quot; in the process of scanning rather than after completing scanning.&lt;/p&gt;

&lt;p&gt;Pardon me if something wrong.&lt;/p&gt;</comment>
                            <comment id="14085704" author="lhofhansl" created="Tue, 5 Aug 2014 02:54:15 +0000"  >&lt;p&gt;That&apos;s exactly the kind of discussion I wanted to have.&lt;/p&gt;

&lt;p&gt;In your example &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt;, each request to a region server involves a key (the Scan&apos;s start key). So after your #3 there would be a new RPC. With a new key (&apos;bbb&apos; if scanner caching is 1 or &apos;ccc&apos; if scanner caching is 2, etc). In each case the scanner would correctly reset itself to retry only the part needed for the last startkey used for the RPC that failed with NSRE.&lt;br/&gt;
As for the test, it running/interleaving scans and splits in a loop (20 iteratoions) and test for the scenario you mention.&lt;/p&gt;

&lt;p&gt;I still think the change is correct.&lt;/p&gt;</comment>
                            <comment id="14085707" author="lhofhansl" created="Tue, 5 Aug 2014 02:57:26 +0000"  >&lt;p&gt;Reattaching trunk patch to make sure Hadoop QA picks up the last attachment (is that still necessary?)&lt;/p&gt;</comment>
                            <comment id="14085727" author="zjushch" created="Tue, 5 Aug 2014 03:14:23 +0000"  >&lt;p&gt;For test case, I mean move the split action to the while block, like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (rs.next() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        c++;
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c % 4333 == 1) {
          TEST_UTIL.getHBaseAdmin().split(TABLE);
        }
      }
      assertEquals(7733, c);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In our internal 0.94 branch, the test will failed with the patch:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;java.lang.AssertionError: expected:&amp;lt;7733&amp;gt; but was:&amp;lt;7743&amp;gt;
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.failNotEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:128)
	at org.junit.Assert.assertEquals(Assert.java:472)
	at org.junit.Assert.assertEquals(Assert.java:456)
	at org.apache.hadoop.hbase.client.TestFromClientSide.testScansWithSplits(TestFromClientSide.java:5096)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;br/&gt;
Could you take the above change about test case and try a test?&lt;/p&gt;</comment>
                            <comment id="14085731" author="lhofhansl" created="Tue, 5 Aug 2014 03:21:42 +0000"  >&lt;p&gt;Sure. Split is not synchronous though. Will try.&lt;/p&gt;</comment>
                            <comment id="14085741" author="lhofhansl" created="Tue, 5 Aug 2014 03:36:14 +0000"  >&lt;p&gt;Hmm... I always get this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests in error: 
  testScansWithSplits(org.apache.hadoop.hbase.client.TestFromClientSide): org.apache.hadoop.hbase.NotServingRegionException: Region is not online: testScansWithSplits,wWW4,1407209622238.f53974a70f899779b20750fadb5cf4bd.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But I do not get this without the patch to &lt;tt&gt;ClientScanner&lt;/tt&gt;. Hmm...&lt;/p&gt;</comment>
                            <comment id="14085754" author="apurtell" created="Tue, 5 Aug 2014 03:57:49 +0000"  >&lt;p&gt;Attached as IntegrationTestBigLinkedListWithRegionMovement, an integration test that extends ITBLL with a fixed monkey policy that moves a random region of the table very often.&lt;/p&gt;</comment>
                            <comment id="14085764" author="lhofhansl" created="Tue, 5 Aug 2014 04:11:03 +0000"  >&lt;p&gt;Actually I do get this exception without the patch &lt;tt&gt;ClientScanner&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="14085770" author="lhofhansl" created="Tue, 5 Aug 2014 04:17:33 +0000"  >&lt;p&gt;Ah... Now I got a run with&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failed tests:   testScansWithSplits(org.apache.hadoop.hbase.client.TestFromClientSide): expected:&amp;lt;7733&amp;gt; but was:&amp;lt;7743&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OK... I buy that there is an issue. Although I do not understand why. An RPC either fails or it doesn&apos;t. There is no notion of partial RPC.&lt;br/&gt;
Say the scan RPC with &apos;aaa&apos; fails with an NSRE. Then no rows of that RPC will be returned and it can be retried. With scanner caching = 1, the next RPC would then try with &apos;bbb&apos;, which would also either succeed or fail. The scanner cannot fail partially &lt;b&gt;during&lt;/b&gt; an RPC.&lt;/p&gt;</comment>
                            <comment id="14085791" author="lhofhansl" created="Tue, 5 Aug 2014 04:39:56 +0000"  >&lt;p&gt;Interestingly it is always wrong by exactly one batch. When I set the caching to 100 I sometimes get 7833 instead of the 7733.&lt;br/&gt;
Hmm... So maybe not as a simple as I thought. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks for catching me &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="14085795" author="apurtell" created="Tue, 5 Aug 2014 04:49:29 +0000"  >&lt;p&gt;FWIW, that integration test passed with this change on 0.98, executing for 20 minutes. So not good enough. &lt;/p&gt;</comment>
                            <comment id="14085797" author="hadoopqa" created="Tue, 5 Aug 2014 04:54:12 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12659813/IntegrationTestBigLinkedListWithRegionMovement.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12659813/IntegrationTestBigLinkedListWithRegionMovement.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12659813&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.procedure.TestProcedureManager&lt;br/&gt;
                  org.apache.hadoop.hbase.ipc.TestIPC&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestClockSkewDetection&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10290//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14085803" author="lhofhansl" created="Tue, 5 Aug 2014 05:03:49 +0000"  >&lt;p&gt;I think I see what the issue is now. Each RPC needs to set the correct startRow as it might just hit the next region. My patch removes exactly that part. Hence an NSRE in any but the first round would redo scanning from the previous startKey, which then might rescan the last batch (and hence the number of extra rows scanned is always the caching setting).&lt;/p&gt;

&lt;p&gt;Will close as &quot;Invalid&quot; unless somebody has more ideas.&lt;/p&gt;</comment>
                            <comment id="14085818" author="stack" created="Tue, 5 Aug 2014 05:19:36 +0000"  >&lt;p&gt;Can we at least doc why we do this setting of the start row since I&apos;d forgotten and other fellas, smart fellas, couldn&apos;t see the why w/o intervention from 12k miles away?&lt;/p&gt;

&lt;p&gt;What about the phoenix issue?&lt;/p&gt;
</comment>
                            <comment id="14085842" author="lhofhansl" created="Tue, 5 Aug 2014 05:52:17 +0000"  >&lt;p&gt;Yeah, I can add some Javadoc. James has another workaround for Phoenix, where he detects a stale cache and reloads for the situations where that is necessary (as in the count&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/star_yellow.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; query I mentioned in the description).&lt;/p&gt;</comment>
                            <comment id="14085881" author="lhofhansl" created="Tue, 5 Aug 2014 06:47:45 +0000"  >&lt;p&gt;I also wonder now how this would behave with a filter that filters most (or all) KVs for a region in the case when we have a stale cache due to splits... Since the ClientScanner has nothing to go by it would redo the scan of the entire prior region.&lt;/p&gt;</comment>
                            <comment id="14085884" author="lhofhansl" created="Tue, 5 Aug 2014 06:48:11 +0000"  >&lt;p&gt;How this for comment? (0.94)&lt;/p&gt;</comment>
                            <comment id="14085886" author="lhofhansl" created="Tue, 5 Aug 2014 06:48:58 +0000"  >&lt;p&gt;And I think we should comment &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;&apos;s integration test.&lt;/p&gt;</comment>
                            <comment id="14085891" author="apurtell" created="Tue, 5 Aug 2014 06:53:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;I also wonder now how this would behave with a filter that filters most (or all) KVs for a region in the case when we have a stale cache due to splits... Since the ClientScanner has nothing to go by it would redo the scan of the entire prior region.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We should come up with a test that finds out. Might be a bug issue there.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And I think we should comment Andrew Purtell&apos;s integration test.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11672&quot; title=&quot;Add IntegrationTestBigLinkedListWithRegionMovement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11672&quot;&gt;&lt;del&gt;HBASE-11672&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14085896" author="jamestaylor" created="Tue, 5 Aug 2014 06:57:45 +0000"  >&lt;p&gt;For more cases in which this is problematic for Phoenix and to see the workaround, see &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1146&quot; title=&quot;Detect stale client region cache on server and retry scans in split regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1146&quot;&gt;&lt;del&gt;PHOENIX-1146&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14085904" author="lhofhansl" created="Tue, 5 Aug 2014 07:05:28 +0000"  >&lt;p&gt;I meant &lt;b&gt;commit&lt;/b&gt; Andrew&apos;s test...&lt;/p&gt;</comment>
                            <comment id="14085913" author="lhofhansl" created="Tue, 5 Aug 2014 07:12:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;We should come up with a test that finds out. Might be a bug issue there.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not a bug, I think, just unnecessary work. I also do not see any other way of doing this. When a region moves even from a logical viewpoint you &lt;b&gt;need&lt;/b&gt; to know where to start off again or you have to start from last known position (which is the start key of the last region).&lt;br/&gt;
I suppose every scan could always send the last row seen as extra metadata at the end of the RPC. The ClientScanner would record that, but not pass it on to the caller. That would still break the Phoenix scenario that started this discussion though, as the region observer does not send a useful row key back at all.&lt;/p&gt;</comment>
                            <comment id="14085919" author="apurtell" created="Tue, 5 Aug 2014 07:18:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;I suppose every scan could always send the last row seen as extra metadata at the end of the RPC. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That wouldn&apos;t help. It&apos;s suspicious that the client relies on the server telling it state it could track locally (or am I missing something?). In the Phoenix case the server lies because a coprocessor changes something, and the client cannot recover, but could/should?&lt;/p&gt;</comment>
                            <comment id="14085931" author="lhofhansl" created="Tue, 5 Aug 2014 07:33:43 +0000"  >&lt;blockquote&gt;&lt;p&gt;It&apos;s suspicious that the client relies on the server telling it state it could track locally (or am I missing something?).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The client cannot track what the server is doing unless the server tells it what it did (i.e. how far it got with its scan). I don&apos;t think we can recover if there is no way to know which state to recover to.&lt;br/&gt;
All the client can know without help from the server (this particular scan) if last startkey of the last region. I tried to only use that information, but it turns out that does not work. Interesting problem &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14086370" author="apurtell" created="Tue, 5 Aug 2014 15:25:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;The client cannot track what the server is doing unless the server tells it what it did (i.e. how far it got with its scan). I don&apos;t think we can recover if there is no way to know which state to recover to. All the client can know without help from the server (this particular scan) if last startkey of the last region. I tried to only use that information, but it turns out that does not work. Interesting problem &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The problem with your patch was the client ended up handing duplicate rows to the application layer because we removed a kludge. The client is in the position of observing the Results it is passing up. I wonder if it is possible to detect the &apos;skipFirst&apos; condition and handle it without relying on the current server response, since we see at least in this case a coprocessor can cause the server to lie. (Of course, we can always declare that to be an invalid thing to do.) I am not looking at code when saying this, just thinking out loud.&lt;/p&gt;</comment>
                            <comment id="14086408" author="lhofhansl" created="Tue, 5 Aug 2014 15:51:38 +0000"  >&lt;p&gt;It seems we either have to delay up to an entire region worth of data from delivering up the caller, or we have to know up to what point we have delivered and that means keeping track of the last key we have delivered (it does not need to a real key, but it needs to be unique). Maybe I am being trapped in how things are right now...?&lt;/p&gt;</comment>
                            <comment id="14086414" author="lhofhansl" created="Tue, 5 Aug 2014 15:53:38 +0000"  >&lt;p&gt;So commit the java doc change for now?&lt;/p&gt;</comment>
                            <comment id="14086416" author="apurtell" created="Tue, 5 Aug 2014 15:54:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;or we have to know up to what point we have delivered and that means keeping track of the last key we have delivered&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I would say this.&lt;/p&gt;</comment>
                            <comment id="14086867" author="stack" created="Tue, 5 Aug 2014 22:05:13 +0000"  >&lt;p&gt;The comment is great. +1 on that.&lt;/p&gt;

&lt;p&gt;Keeping last thing we delivered &amp;#8211; state &amp;#8211; would purge all that is grey in this area.&lt;/p&gt;</comment>
                            <comment id="14087161" author="lhofhansl" created="Wed, 6 Aug 2014 02:43:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;Keeping last thing we delivered &#8211; state &#8211; would purge all that is grey in this area.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In a sense we do, and then use only when encountering a NRSE exception. If we just remember what we delivered (and don&apos;t require a real key) we&apos;d always have to rescan the entire region upon a NSRE (not just the last rows worth of scanner caching) and then ignore everything we delivered so far. So definitely less efficient, and might lead to other weird issues if scans do not return the exact same row keys upon repeated execution (for example when a filter or region observer messes with things).&lt;/p&gt;

&lt;p&gt;I&apos;ll commit the comment update to all branches for now; but I&apos;ll keep thinking about this. This is ugly right now, especially in trunk with the region replicas.&lt;/p&gt;</comment>
                            <comment id="14088005" author="lhofhansl" created="Wed, 6 Aug 2014 18:36:27 +0000"  >&lt;p&gt;Committed doc update to all branches.&lt;/p&gt;</comment>
                            <comment id="14088241" author="hudson" created="Wed, 6 Aug 2014 20:59:46 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.94-JDK7 #167 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-JDK7/167/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-JDK7/167/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11667&quot; title=&quot;Comment ClientScanner logic for NSREs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11667&quot;&gt;&lt;del&gt;HBASE-11667&lt;/del&gt;&lt;/a&gt; Comment ClientScanner logic for NSREs. (larsh: rev c51e19afec1925de7769c24e0dbd2bfcf90a184e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14088268" author="hudson" created="Wed, 6 Aug 2014 21:15:20 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5375 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5375/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5375/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11667&quot; title=&quot;Comment ClientScanner logic for NSREs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11667&quot;&gt;&lt;del&gt;HBASE-11667&lt;/del&gt;&lt;/a&gt; Comment ClientScanner logic for NSREs. (larsh: rev 25e6baee424602942afbe40b01ea0b4cff1ea9b1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14088292" author="hudson" created="Wed, 6 Aug 2014 21:29:13 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94 #1398 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/1398/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/1398/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11667&quot; title=&quot;Comment ClientScanner logic for NSREs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11667&quot;&gt;&lt;del&gt;HBASE-11667&lt;/del&gt;&lt;/a&gt; Comment ClientScanner logic for NSREs. (larsh: rev c51e19afec1925de7769c24e0dbd2bfcf90a184e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14088329" author="hudson" created="Wed, 6 Aug 2014 21:50:13 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #88 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/88/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/88/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11667&quot; title=&quot;Comment ClientScanner logic for NSREs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11667&quot;&gt;&lt;del&gt;HBASE-11667&lt;/del&gt;&lt;/a&gt; Comment ClientScanner logic for NSREs. (larsh: rev fb8cc733edec3f86884cad19351b8e75484be6cf)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14088331" author="hudson" created="Wed, 6 Aug 2014 21:50:46 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94-security #509 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/509/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/509/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11667&quot; title=&quot;Comment ClientScanner logic for NSREs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11667&quot;&gt;&lt;del&gt;HBASE-11667&lt;/del&gt;&lt;/a&gt; Comment ClientScanner logic for NSREs. (larsh: rev c51e19afec1925de7769c24e0dbd2bfcf90a184e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14088410" author="hudson" created="Wed, 6 Aug 2014 22:45:19 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #439 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/439/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/439/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11667&quot; title=&quot;Comment ClientScanner logic for NSREs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11667&quot;&gt;&lt;del&gt;HBASE-11667&lt;/del&gt;&lt;/a&gt; Comment ClientScanner logic for NSREs. (larsh: rev 273fe4fc81b6017ffae9ea00e8b58d65d576b84e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14088523" author="hudson" created="Thu, 7 Aug 2014 00:24:31 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #413 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/413/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/413/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11667&quot; title=&quot;Comment ClientScanner logic for NSREs.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11667&quot;&gt;&lt;del&gt;HBASE-11667&lt;/del&gt;&lt;/a&gt; Comment ClientScanner logic for NSREs. (larsh: rev 273fe4fc81b6017ffae9ea00e8b58d65d576b84e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12731936">PHOENIX-1146</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12659765" name="11667-0.94.txt" size="3368" author="lhofhansl" created="Mon, 4 Aug 2014 23:55:54 +0000"/>
                            <attachment id="12659838" name="11667-doc-0.94.txt" size="1190" author="lhofhansl" created="Tue, 5 Aug 2014 06:50:16 +0000"/>
                            <attachment id="12659803" name="11667-trunk.txt" size="5377" author="lhofhansl" created="Tue, 5 Aug 2014 02:57:26 +0000"/>
                            <attachment id="12659790" name="HBASE-11667-0.98.patch" size="4467" author="apurtell" created="Tue, 5 Aug 2014 01:24:09 +0000"/>
                            <attachment id="12659813" name="IntegrationTestBigLinkedListWithRegionMovement.patch" size="4159" author="apurtell" created="Tue, 5 Aug 2014 04:12:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 5 Aug 2014 01:21:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>409926</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 19 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1yj1b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>409920</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>