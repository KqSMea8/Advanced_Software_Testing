<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:41:13 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6942/HBASE-6942.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6942] Endpoint implementation for bulk deletion of data</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6942</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We can provide an end point implementation for doing a bulk deletion of data(based on a scan) at the server side. This can reduce the time taken for such an operation as right now it need to do a scan to client and issue delete(s) using rowkeys.&lt;/p&gt;

&lt;p&gt;Query like  delete from table1 where...&lt;/p&gt;</description>
                <environment></environment>
        <key id="12610188">HBASE-6942</key>
            <summary>Endpoint implementation for bulk deletion of data</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anoopsamjohn">Anoop Sam John</assignee>
                                    <reporter username="anoopsamjohn">Anoop Sam John</reporter>
                        <labels>
                    </labels>
                <created>Thu, 4 Oct 2012 04:56:27 +0000</created>
                <updated>Tue, 26 Feb 2013 08:20:45 +0000</updated>
                            <resolved>Wed, 24 Oct 2012 03:36:29 +0000</resolved>
                                                    <fixVersion>0.94.3</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>Coprocessors</component>
                    <component>Performance</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>16</watches>
                                                                <comments>
                            <comment id="13469151" author="anoopsamjohn" created="Thu, 4 Oct 2012 04:58:17 +0000"  >&lt;p&gt;I have an implementation based on 0.94 version as we are using this version. I will upload that version for getting reviews. Later will create a patch for 0.96(or may be later versions). There some changes based on PB is needed I guess&lt;/p&gt;</comment>
                            <comment id="13471408" author="lhofhansl" created="Mon, 8 Oct 2012 05:25:33 +0000"  >&lt;p&gt;This is a surprisingly (to me, anyway) common use case.&lt;br/&gt;
+1 to that idea.&lt;/p&gt;

&lt;p&gt;We can ship a sample EndPoint for this with HBase.&lt;/p&gt;</comment>
                            <comment id="13471668" author="anoopsamjohn" created="Mon, 8 Oct 2012 16:58:22 +0000"  >&lt;p&gt;As of now just added one client class which can be used to invoke this endpoint (just like AggregateClient)&lt;br/&gt;
Do we need to expose a new delete() API in HTable itself or just leave the Endpoint as such so that someone need to write code make call to the Endpoint.&lt;/p&gt;</comment>
                            <comment id="13472509" author="lhofhansl" created="Tue, 9 Oct 2012 16:19:02 +0000"  >&lt;p&gt;Patch looks good over all (but have not looked in detail).&lt;br/&gt;
Since this is a specific use case (we&apos;re issuing family deletes always), I&apos;d say we should only provide the EndPoint and don&apos;t add a public API into HTableInterface.&lt;/p&gt;</comment>
                            <comment id="13472516" author="yuzhihong@gmail.com" created="Tue, 9 Oct 2012 16:24:17 +0000"  >&lt;p&gt;@Anoop:&lt;br/&gt;
Can you add a test case where deletion fails in one of the regions of the table ?&lt;/p&gt;

&lt;p&gt;Once you add that test, you would discover a small flaw in determining row count.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13473032" author="anoopsamjohn" created="Wed, 10 Oct 2012 06:44:53 +0000"  >&lt;p&gt;Thanks Lars and Ted for having a look at the patch&lt;br/&gt;
@Ted&lt;br/&gt;
You mean when the deletion in one region fails after some batches, that count wont get returned and so wont get added up to the total count. Correct?&lt;br/&gt;
Yes I realized that. &lt;br/&gt;
As per Lars suggestion may be wont be giving a client class also. Just the endpoint implementation. Still Endpoint need to return how many rows it is deleted. Also IOE if any while deletion. Will change.&lt;/p&gt;</comment>
                            <comment id="13473034" author="lhofhansl" created="Wed, 10 Oct 2012 06:57:33 +0000"  >&lt;p&gt;Maybe you could a client side code snippet to the Javadoc of the endpoint? If not, the test is documentation enough about how to use it, I think.&lt;/p&gt;</comment>
                            <comment id="13473038" author="lhofhansl" created="Wed, 10 Oct 2012 07:02:20 +0000"  >&lt;p&gt;Also, I wonder whether there is a way to allow this delete specific families, columns, or versions. Especially the latter might be useful... Maybe for another jira.&lt;br/&gt;
(Should this be in the examples package?)&lt;/p&gt;</comment>
                            <comment id="13473109" author="anoopsamjohn" created="Wed, 10 Oct 2012 09:02:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;Maybe you could a client side code snippet to the Javadoc of the endpoint?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Will add the snippet in the javadoc. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Also, I wonder whether there is a way to allow this delete specific families, columns, or versions. Especially the latter might be useful... Maybe for another jira.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We can have another jira issues for these&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Should this be in the examples package?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The doubt came in my mind too... What do u say Lars? I am fine with examples package.&lt;/p&gt;</comment>
                            <comment id="13473985" author="anoopsamjohn" created="Thu, 11 Oct 2012 09:23:39 +0000"  >&lt;p&gt;Changed as per comments from Lars and Ted&lt;/p&gt;</comment>
                            <comment id="13474295" author="yuzhihong@gmail.com" created="Thu, 11 Oct 2012 16:35:31 +0000"  >&lt;p&gt;@Anoop:&lt;br/&gt;
Can you point me to the change in patch v2 that would account for partially deleted rows in a region ?&lt;/p&gt;

&lt;p&gt;Also, please provide patch for trunk.&lt;/p&gt;

&lt;p&gt;Do you have bandwidth to make the endpoint conform to new PB approach ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13474321" author="lhofhansl" created="Thu, 11 Oct 2012 17:04:55 +0000"  >&lt;p&gt;HRegionServer.put(..., List&amp;lt;Put&amp;gt;) does this to determine the number of successful operations:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      OperationStatus codes[] = region.batchMutate(putsWithLocks);
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (i = 0; i &amp;lt; codes.length; i++) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (codes[i].getOperationStatusCode() != OperationStatusCode.SUCCESS) {
          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; i;
        }
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should add this here as well. Otherwise v2 looks good.&lt;/p&gt;</comment>
                            <comment id="13474758" author="anoopsamjohn" created="Fri, 12 Oct 2012 03:33:20 +0000"  >&lt;p&gt;Thanks for the comments.. I will check&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Do you have bandwidth to make the endpoint conform to new PB approach ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes I can do... I have done it partially...&lt;/p&gt;</comment>
                            <comment id="13474771" author="anoopsamjohn" created="Fri, 12 Oct 2012 04:21:08 +0000"  >&lt;p&gt;Oops!  I missed OperationStatus completely..  Thanks Lars for pointing out... Yes I wrote test case with a CP which bypass specific row deletes.. With OperationStatus I can get the count correctly. Will post a patch soon&lt;/p&gt;</comment>
                            <comment id="13474876" author="anoopsamjohn" created="Fri, 12 Oct 2012 08:13:08 +0000"  >&lt;p&gt;Small update on the above comment.. Bypass of deletes if done via CP I wont be able to know that from OperationStatus. In that we will still mark it as SUCCESS only.&lt;/p&gt;</comment>
                            <comment id="13475382" author="jerrylam" created="Fri, 12 Oct 2012 21:40:43 +0000"  >&lt;p&gt;In my use case, I use extensively the version delete marker because I need to delete a specific version of a cell (row key, CF, qualifier, timestamp). I have a mapreduce job that will run across some regions and based on some business rules, some of the cells will be deleted in the table using the version delete marker. The business rules for deletion are scoped to each column family at a time. Therefore, there are no logically dependency of deletions between column families.&lt;/p&gt;</comment>
                            <comment id="13475513" author="lhofhansl" created="Sat, 13 Oct 2012 03:23:15 +0000"  >&lt;p&gt;@Anoop: True, but I think that is good enough. If folks add coprocessors they can mess up all kinds of things.&lt;/p&gt;

&lt;p&gt;@Jerry: So what you are saying is that this does not help you?&lt;/p&gt;</comment>
                            <comment id="13475515" author="anoopsamjohn" created="Sat, 13 Oct 2012 03:39:01 +0000"  >&lt;p&gt;Yes Lars I am adding the logic to count the rows deleted as this way.. But I was not able to test this.. Because getting a Status code of FAILURE or SANITY_FAILURE seems not possible in this case...  Any way better the code be in correct shape... This is the apt way to know...&lt;/p&gt;

&lt;p&gt;Regarding Jerry&apos;s comment - His use case seems different than ours.. Ours is a range based row deletes.. Not even condition based. But I expect some one can have condition based delete also.. Any way we give Scan so it is possible.. I am specifically mentioning that this is used for deleting the entire row... &lt;/p&gt;

&lt;p&gt;We can have separate jira issues to deal with CF deletes, column deletes, version deletes etc... agree Lars? I will be happy to work with that.. Also will give a trunk version once 94 based version is fine for commit.&lt;/p&gt;

&lt;p&gt;This delete performance is being discussed in different user mail threads I guess.. SO this kind of a example Endpoint impl will help folks...&lt;/p&gt;</comment>
                            <comment id="13475517" author="anoopsamjohn" created="Sat, 13 Oct 2012 03:46:05 +0000"  >&lt;p&gt;V3 for your review&lt;/p&gt;</comment>
                            <comment id="13475522" author="zhihyu@ebaysf.com" created="Sat, 13 Oct 2012 04:10:27 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class BulkDeleteEndpoint &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; BaseEndpointCoprocessor &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; BulkDeleteProtocol {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please add annotation for audience and stability.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt; deleteRowKeys = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt;(rowBatchSize);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should a Set be used ? The use case is for deleting entire rows. We just need to collect unique row keys.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (scan.getFilter() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+      &lt;span class=&quot;code-comment&quot;&gt;// What we need is just the rowkeys. So only 1st KV from any row is enough.
&lt;/span&gt;+      scan.setFilter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FirstKeyOnlyFilter());
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If user has specified Filter already but the Filter would return many KeyValues from one row, should we introduce FirstKeyOnlyFilter through FilterList ?&lt;/p&gt;</comment>
                            <comment id="13475536" author="lhofhansl" created="Sat, 13 Oct 2012 05:33:33 +0000"  >&lt;p&gt;I think Ted is right, looking at FirstKeyOnlyFilter, it can be combined with other filters into FilterList with Operator.MUST_PASS_ALL.&lt;/p&gt;

&lt;p&gt;If we always combine with the FirstKeyOnlyFilter we can keep using a List for the deletedRowKeys, because there&apos;s only one ever.&lt;/p&gt;

&lt;p&gt;Sorry for the length of the discussion here, Anoop. Almost there &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;+1 for the rest of the patch. (Have you tried it in production?)&lt;/p&gt;

&lt;p&gt;And +1 for dealing with other delete types in a separate jira... Would be nice to use the same method, though, and just pass in an extra flag to indicate with type of delete to use (and hence how to filter the results).&lt;/p&gt;</comment>
                            <comment id="13475542" author="anoopsamjohn" created="Sat, 13 Oct 2012 06:07:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;Please add annotation for audience and stability.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is to be there with Trunk only right? In 0.94 I think we should not add as per the Hadoop support&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Should a Set be used ? The use case is for deleting entire rows. We just need to collect unique row keys.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;May be List is fine. Will be an issue when batching is there. But not expecting.. Any way Set seems perfect. I will change. &lt;br/&gt;
FirstKeyOnlyFilter - Let me test one thing.. Having one doubt...&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Sorry for the length of the discussion here, Anoop. Almost there&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No problems at all Lars.. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Would be nice to use the same method, though, and just pass in an extra flag to indicate with type of delete to use&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes this is what in mind too...&lt;/p&gt;</comment>
                            <comment id="13475544" author="anoopsamjohn" created="Sat, 13 Oct 2012 06:25:46 +0000"  >&lt;p&gt;I think my doubts regarding FirstKeyOnlyFilter come correct. &lt;span class=&quot;error&quot;&gt;&amp;#91;Checked with change in code&amp;#93;&lt;/span&gt;&lt;br/&gt;
Suppose in table we have one CF and in that having 3 qualifiers&lt;br/&gt;
cf1:c1  cf1:c2  cf1:c3&lt;br/&gt;
Now I have to delete all the rows where cf1:c3=?&lt;br/&gt;
I will have a SCVF with this condition&lt;br/&gt;
Now suppose If I add FKOF also along with this in a FL&lt;br/&gt;
For any row the 1st KV which is coming to the filter will be of cf:c1&apos;s&lt;br/&gt;
The SCVF can not filter it out. Also the FKOF will pass it. &lt;br/&gt;
But for the 2nd KV the FKOF will make the scan to go to the next row.&lt;br/&gt;
So the actual filter which was having my condition will never get a chance to do the validation and do filtering...&lt;/p&gt;

&lt;p&gt;So I think generally the FKOF can not be used with this kind of condition filters..&lt;/p&gt;

&lt;p&gt;Pls correct me if any thing I missed or wrongly said..&lt;/p&gt;</comment>
                            <comment id="13475553" author="zhihyu@ebaysf.com" created="Sat, 13 Oct 2012 08:43:16 +0000"  >&lt;p&gt;Thanks for your example, Anoop.&lt;br/&gt;
FirstKeyOnlyFilter cannot be used directly.&lt;/p&gt;

&lt;p&gt;In trunk, there is new Filter class that allows chaining and preserving the correct qualifier.&lt;/p&gt;</comment>
                            <comment id="13475583" author="anoopsamjohn" created="Sat, 13 Oct 2012 10:44:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;In trunk, there is new Filter class that allows chaining and preserving the correct qualifier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Which one you are refering to Ted? I know FirstKeyValueMatchingQualifiersFilter&lt;/p&gt;</comment>
                            <comment id="13475590" author="yuzhihong@gmail.com" created="Sat, 13 Oct 2012 11:45:42 +0000"  >&lt;p&gt;That is the one. &lt;/p&gt;</comment>
                            <comment id="13475632" author="anoopsamjohn" created="Sat, 13 Oct 2012 15:19:56 +0000"  >&lt;p&gt;This filter returns the 1st KV corresponds to any of the columns(cf:qualifier)only&lt;br/&gt;
I think even that also we wont be able to use in our case...&lt;br/&gt;
For a delete request like &quot;delete from tab where c2=? AND c3=?&quot; Here once the filter finds KV corresponds to c2 it will make the scan jump to next row...  So wont get a chance to compare the value for c3&lt;/p&gt;

&lt;p&gt;I will post a patch for trunk on Monday.. &lt;/p&gt;</comment>
                            <comment id="13475637" author="yuzhihong@gmail.com" created="Sat, 13 Oct 2012 15:45:27 +0000"  >&lt;p&gt;Looks like FilterList.filterKeyValue() should be enhanced (with a new setting, in another JIRA) where ReturnCode.NEXT_ROW would be returned for the second occurrence of the same row key whose first ReturnCode was ReturnCode.INCLUDE.&lt;/p&gt;</comment>
                            <comment id="13475721" author="lhofhansl" created="Sat, 13 Oct 2012 22:21:31 +0000"  >&lt;p&gt;Anoop, you were right from the beginning, we either use the filter passed with the scan (it is the responsibility of the caller to set it up correctly) or use FKOF (by itself).&lt;/p&gt;</comment>
                            <comment id="13475748" author="yuzhihong@gmail.com" created="Sun, 14 Oct 2012 02:31:58 +0000"  >&lt;p&gt;When FirstKeyOnlyFilter is not involved, this endpoint has the potential to delete selected KeyValue&apos;s.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class BulkDeleteResponse &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Serializable {
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; serialVersionUID = -8192337710525997237L;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt; rowsDeleted;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; IOException ioException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do you think the above response should have a field which notes the number of KeyValue&apos;s deleted ?&lt;/p&gt;

&lt;p&gt;When this feature is made available to public, people would start using it.&lt;br/&gt;
It would be nice for API to accommodate future enhancement without requiring users to change the clients.&lt;/p&gt;

&lt;p&gt;Nice job, Anoop.&lt;/p&gt;</comment>
                            <comment id="13475763" author="yuzhihong@gmail.com" created="Sun, 14 Oct 2012 04:11:16 +0000"  >&lt;p&gt;Scan extends OperationWithAttributes which has the following method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setAttribute(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] value) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This allows users to pass various flags indicating what type of deletion they want to perform server-side.&lt;br/&gt;
Actually parameter rowBatchSize can be passed this way to BulkDeleteEndpoint.&lt;/p&gt;</comment>
                            <comment id="13475839" author="anoopsamjohn" created="Sun, 14 Oct 2012 14:04:18 +0000"  >&lt;p&gt;Regarding passing the rowBatchSize in attributes of Scan, I am in half mind Ted..  As this attribute is related with the delete op and not Scan...  Requesting your opinion also Lars..&lt;br/&gt;
I was thinking of enhancing this for doing all kind of deletes. We have CF delete, column delete, version delete and time based KVs delete etc... Ideally better we can support all these kind of deletes.  What is in my mind is to accept a Delete object as a template in this Endpoint...  Well for Delete we need some byte[] as rowkey.. Any dummy(empty byte[]) is okey..  What we need is to follow that Delete object create Delete objects in Endpoint. Thougts??&lt;/p&gt;

&lt;p&gt;Yes Ted in that case we can pass back the number of KVs deleted..  &lt;/p&gt;</comment>
                            <comment id="13475846" author="yuzhihong@gmail.com" created="Sun, 14 Oct 2012 15:06:34 +0000"  >&lt;p&gt;I like the suggestion of passing Delete object to the endpoint.&lt;/p&gt;</comment>
                            <comment id="13475911" author="lhofhansl" created="Sun, 14 Oct 2012 22:24:32 +0000"  >&lt;p&gt;Yeah, passing the delete option as scan attribute is a bit weird. But I can see this both ways.&lt;br/&gt;
It would be nice if all of this could be strictly controlled by the scan we pass in. The scan would (through the attribute) indicate the delete type to use and also describe the KVs that are to be deleted.&lt;/p&gt;

&lt;p&gt;Also not sure about the template Delete... We&apos;d have to make up fake column qualifiers and qualifiers in the future... Since this is an advanced feature we could pass the delete type (from KeyValue), or maybe a new enum to indicate what we want to do.&lt;/p&gt;

&lt;p&gt;So I can see this going both ways. In either case this should probably return the number of KVs deleted.&lt;/p&gt;</comment>
                            <comment id="13475955" author="anoopsamjohn" created="Mon, 15 Oct 2012 04:21:23 +0000"  >&lt;p&gt;In order to support all types of deletes we need to have the params&lt;br/&gt;
cf names which needs to be deleted&lt;br/&gt;
qualifier names which needs to be deleted&lt;br/&gt;
timestamp im case we need a time based delete&lt;br/&gt;
a type - This is needed when it is a delete version request&lt;/p&gt;

&lt;p&gt;The scan ideally need not scan all the column which needs to be deleted. If I have a condition based delete, what needs to be scanned is the columns involving in the condition..&lt;/p&gt;

&lt;p&gt;So taking all these in another POJO, i thought it would be better to accept as Delete object. In that we have APIs like deleteColumn(s), deleteFamily etc... Users also might be very much knowing this. What do u say Lars? The bit weird part I am seeing in this is the rowkey which need to be a fake one..&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We&apos;d have to make up fake column qualifiers and qualifiers in the future&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sorry didnt get your mean&lt;/p&gt;

&lt;p&gt;Thanks for the reviews and comments &lt;/p&gt;</comment>
                            <comment id="13475961" author="lhofhansl" created="Mon, 15 Oct 2012 04:48:24 +0000"  >&lt;p&gt;Hmm... Most of these parameters can be controlled with a scan.&lt;br/&gt;
For example to delete only some CFs, just configure the scan that way. I don&apos;t think we should make it more complicated/flexible than this.&lt;/p&gt;

&lt;p&gt;What you are describing is another use case. What if I only want to delete the column that I am describing with the scan? (Now I would have include the superset of all possible columns in the passed Delete object)&lt;/p&gt;

&lt;p&gt;If folks need more complicated logic they should write their own endpoint (now they have an example)... That is whole point of coprocessors, so that we do not have to anticipate every possible usecase &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The beauty of this approach is that we can just pass a Scan object (along with just a delete type maybe) and have the endpoint do its work.&lt;/p&gt;

&lt;p&gt;Anyway, I do not feel strongly about this. If you think that we need more flexibility and passing a Delete is the best way to pursue this, then let&apos;s do that... As long as the simple case is still simple.&lt;/p&gt;</comment>
                            <comment id="13475962" author="ram_krish" created="Mon, 15 Oct 2012 04:49:19 +0000"  >&lt;p&gt;If delete also we are supporting, then its better to provide a sample POJO class.  Anyway its going to be listed in the examples section.  So a clear documentation and a proper example will atleast help users in using it.  Generally as Ted suggested users at first level will just try to copy paste the examples and see how it is behaving.&lt;/p&gt;</comment>
                            <comment id="13475963" author="lhofhansl" created="Mon, 15 Oct 2012 04:52:08 +0000"  >&lt;p&gt;For the V4 patch. You do not need to check all the operationStatus&apos;, you can break out of the loop as soon as you find the first status that is not success.&lt;/p&gt;

&lt;p&gt;Can do that on commit. +1 on the rest of the patch.&lt;/p&gt;

&lt;p&gt;Edit: Forgot a &quot;not&quot; in the 2nd sentence.&lt;/p&gt;</comment>
                            <comment id="13475985" author="anoopsamjohn" created="Mon, 15 Oct 2012 05:30:39 +0000"  >&lt;p&gt;Yes Lars, for the simplicity better to control every thing via Scan.. For the user also specify this would be easy.  Let me try it out with code.. Also will try passing every thing via the Scan#setAttribute() &lt;/p&gt;</comment>
                            <comment id="13476121" author="anoopsamjohn" created="Mon, 15 Oct 2012 12:59:21 +0000"  >&lt;p&gt;Not the final one. Need to change some javadoc and sample code I guess. Also as of now not added the no# of KVs deleted in the response..  Pls share your thoughts of the over all idea.&lt;/p&gt;</comment>
                            <comment id="13476126" author="anoopsamjohn" created="Mon, 15 Oct 2012 13:06:06 +0000"  >&lt;p&gt;Some drawbacks due to not taking Delete object &lt;br/&gt;
1. When it is a timestamp based delete same TS to be used for all the columns where as in normal delete diff TS can be used&lt;br/&gt;
2. Types can not be mixed. In normal delete one CF delete and other one&apos;s column delete and yet others version delete can be combined&lt;/p&gt;

&lt;p&gt;Just mentioning the differences. Dont think these are common usecases. So I am fine with the current way of ours. &lt;/p&gt;

&lt;p&gt;Requesting thoughts from other users who having similar usecases.&lt;/p&gt;</comment>
                            <comment id="13476127" author="jmspaggi" created="Mon, 15 Oct 2012 13:08:37 +0000"  >&lt;p&gt;I will be very happy to give it a try when you will be ready. &lt;/p&gt;

&lt;p&gt;I need to delete all rows older than a specific given timestamp and this fix seem to be a perfect fit. Thanks!&lt;/p&gt;</comment>
                            <comment id="13476134" author="ram_krish" created="Mon, 15 Oct 2012 13:28:30 +0000"  >&lt;p&gt;One thing we should add in the javadoc is how many kvs the scan returns.  This should not be very huge and it should not impact the RS heap.&lt;br/&gt;
Users should be careful and i remember there was mail thread talking about limiting the memory that is used by Endpoints.&lt;/p&gt;

&lt;p&gt;Missed a &apos;not&apos;&lt;/p&gt;</comment>
                            <comment id="13476292" author="yuzhihong@gmail.com" created="Mon, 15 Oct 2012 17:42:28 +0000"  >&lt;p&gt;An alternative, assuming Delete is passed as a parameter to BulkDeleteEndpoint, would be to reduce DeleteType to two enum values: ROW and NON_ROW.&lt;br/&gt;
For NON_ROW case, the user is able to specify any combination of deletions based on non-null row key (just a placeholder):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    Delete del = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(row);
    del.deleteFamily(FAMILY1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In createDeleteMutation(), we call Delete.getFamilyMap() and plug in the row key obtained from the scanning for all KeyValue&apos;s contained in family map.&lt;/p&gt;</comment>
                            <comment id="13476361" author="yuzhihong@gmail.com" created="Mon, 15 Oct 2012 19:23:26 +0000"  >&lt;p&gt;In patch v5, rowBatchSize isn&apos;t used in the following call:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          hasMore = scanner.next(results);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In createDeleteMutation(), List&amp;lt;KeyValue&amp;gt; is passed and row key is retrieved from the first KeyValue.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] row = deleteRow.get(0).getRow();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is this intended ?&lt;/p&gt;</comment>
                            <comment id="13476709" author="anoopsamjohn" created="Tue, 16 Oct 2012 04:12:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;In patch v5, rowBatchSize isn&apos;t used in the following call:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;hasMore = scanner.next(results);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ted this code part is same in older versions also. We use the rowBatchSize to accumulate the rows so that all can be deleted as one unit. This is not scan batch.. We do rowBatchSize times scanner.next(results) just like HRS&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In createDeleteMutation(), List&amp;lt;KeyValue&amp;gt; is passed and row key is retrieved from the first KeyValue.Is this intended ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. All the KVs in this list will be part of same row.. So we can use any of the KV to get the rowkey. All rowkeys will be same..&lt;/p&gt;</comment>
                            <comment id="13476720" author="lhofhansl" created="Tue, 16 Oct 2012 04:23:27 +0000"  >&lt;p&gt;@Anoop: Maybe I am not understanding how you would pass the Delete objects. Would you pass multiple ones? If not, how could you use it as a template for different types of deletes?&lt;/p&gt;</comment>
                            <comment id="13476723" author="anoopsamjohn" created="Tue, 16 Oct 2012 04:29:12 +0000"  >&lt;p&gt;In the Delete template way, pass one Delete object only. The rowkey will be dummy only.. What we grab from this is which all family/col/version delete needed. User can create the Delete object and call deleteColumn(s) etc on that object....&lt;br/&gt;
At Endpoint side we will make use of the Delete object and get the family map from that.. We will use that family map to create the family map for the new Delete objects that we have created..&lt;br/&gt;
Here is the sample code for that&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Delete delete = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(deleteRowKey);
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (deleteTemplate != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
              &lt;span class=&quot;code-comment&quot;&gt;// when a delete is passed, get all the properties of that delete other than the
&lt;/span&gt;              &lt;span class=&quot;code-comment&quot;&gt;// rowkey and give to the &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete objects being created
&lt;/span&gt;              &lt;span class=&quot;code-comment&quot;&gt;// No need to check &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; row locks. No way to get these locks at the client
&lt;/span&gt;              &lt;span class=&quot;code-comment&quot;&gt;// side as the rows itself is not known.
&lt;/span&gt;              delete.setTimestamp(deleteTemplate.getTimeStamp());
              delete.setWriteToWAL(deleteTemplate.getWriteToWAL());
              setFamilyMap(deleteRowKey, deleteTemplate, delete);
            }
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void setFamilyMap(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] deleteRowKey, Delete deleteTemplate, Delete delete) {
    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], List&amp;lt;KeyValue&amp;gt;&amp;gt; deleteTemplateFamilyMap = deleteTemplate.getFamilyMap();
    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], List&amp;lt;KeyValue&amp;gt;&amp;gt; deleteFamilyMap = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], List&amp;lt;KeyValue&amp;gt;&amp;gt;();
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Entry&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], List&amp;lt;KeyValue&amp;gt;&amp;gt; entry : deleteTemplateFamilyMap.entrySet()) {
      List&amp;lt;KeyValue&amp;gt; deleteTemplateKVs = entry.getValue();
      List&amp;lt;KeyValue&amp;gt; deleteKVs = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;KeyValue&amp;gt;(deleteTemplateKVs.size());
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (KeyValue kv : deleteTemplateKVs) {
        deleteKVs.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue(deleteRowKey, entry.getKey(), kv.getQualifier(), kv
            .getTimestamp(), Type.codeToType(kv.getType())));
      }
      deleteFamilyMap.put(entry.getKey(), deleteKVs);
    }
    delete.setFamilyMap(deleteFamilyMap);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13476727" author="anoopsamjohn" created="Tue, 16 Oct 2012 04:31:16 +0000"  >&lt;p&gt;Patch V5 I am trying to not rely on the Delete object or any. As Lars suggested rely on the scan o/p and we pass DeleteType&lt;br/&gt;
I also feel like this approach may be okey...&lt;/p&gt;</comment>
                            <comment id="13476728" author="lhofhansl" created="Tue, 16 Oct 2012 04:33:25 +0000"  >&lt;p&gt;I also think we have different use cases in mind. Passing the timestamp for a version delete through the Scan is not useful (I think) rather the timestamps should be taken from the scanned KeyValues.&lt;/p&gt;

&lt;p&gt;I think you misunderstood what I was saying with &quot;it should be controlled by the scan&quot;. What I meant was: Via the scan we will select a bunch of KeyValues. Then these KeyValues indicate what would be deleted (together with the various delete types).&lt;/p&gt;

&lt;p&gt;I.e. a user can pass the VERSION delete type along with a scan selecting a bunch of KeyValue. Then these exact KeyValues will be deleted.&lt;br/&gt;
Likewise when COLUMN is passed the passed scan will identify a bunch of KeyValues to identify the columns to be delete (caller should make sure - only for performance - that the same column KeyValue does not occur multiple times)&lt;br/&gt;
Same for Families and Rows.&lt;/p&gt;

&lt;p&gt;So we only pass a scan (with NO extra attributes in the scan) along with an indicator if the delete type. That should be enough.&lt;/p&gt;</comment>
                            <comment id="13476733" author="lhofhansl" created="Tue, 16 Oct 2012 04:38:42 +0000"  >&lt;p&gt;For COLUMN, FAMILY, and ROW deletes it does make sense to pass a timestamp - I guess - in that case it could delete only KVs older than the TS would be deleted.&lt;br/&gt;
For VERSION deletes it makes no sense though.&lt;/p&gt;</comment>
                            <comment id="13476744" author="anoopsamjohn" created="Tue, 16 Oct 2012 05:02:18 +0000"  >&lt;p&gt;Lars&lt;br/&gt;
   The version deletes are some what like a grey area for me.. We do not have specific use case. I was trying to just allow the same way of version delete as from the normal client side..  Yes I understood what is in your mind clearly now.. Yes for version delete may be use the TS as got from the scanned KVs we can use...&lt;br/&gt;
Let me think more about the version delete part..  So lars for other types the approach in V5 is okey?&lt;/p&gt;</comment>
                            <comment id="13476747" author="lhofhansl" created="Tue, 16 Oct 2012 05:07:16 +0000"  >&lt;p&gt;Maybe let&apos;s step back and list all the use cases. Here&apos;re the ones I have been thinking about:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Delete a set of exact versions of some keyvalues: VERSION delete type and a scan that via setMaxVersions/setTimeStamp/setTimeRange/setFilter selects a set of KVs. Delete those KVs exactly.&lt;/li&gt;
	&lt;li&gt;Delete a certain set of rows (that&apos;s how we started)... ROW delete type and a scan, we&apos;ll use FirstKeyOnlyFilter and delete all rows found.&lt;/li&gt;
	&lt;li&gt;Delete a set of columns. COLUMN delete type with a scan that returns exactly one version of each KV. Take the column of that KV and delete it.&lt;/li&gt;
	&lt;li&gt;Delete some column families. This one is a bit more tricky since we cannot create a scan that only return a single KV for each family. Here it would be necessary to pass either a Delete template or a set of families to delete... I&apos;d say we can table this for later.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Now for the timestamp use cases:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Delete all ROWS or COLUMNS older than some TS. Pass the according delete type, a TS, and a scan selecting the right rows or columns.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So except the family delete, we can cover all cases by passing a appropriately created scan object, a delete type, and a TS.&lt;/p&gt;

&lt;p&gt;Does this make any sense? Am I missing important use cases?&lt;/p&gt;</comment>
                            <comment id="13476750" author="lhofhansl" created="Tue, 16 Oct 2012 05:08:08 +0000"  >&lt;p&gt;Hey Anoop, we crossed comments. I think the rest of V5 is along the lines of my last comment here, right?&lt;/p&gt;</comment>
                            <comment id="13476758" author="anoopsamjohn" created="Tue, 16 Oct 2012 05:37:55 +0000"  >&lt;p&gt;Lars, I think other than the version type the patch is in line with your thinking. With Version type the main difference is patch V5 considers deleting only one version of a column where as in your comment it is N version depending on the scan (how many KVs it returned).. Yes I agree 100% with you on this&lt;/p&gt;

&lt;p&gt;wrt FAMILY delete type, I think we can handle. Let the scan returns N KVs for a row. If that N KVs corresponds to M families, we delete all M families. Also TS can be used here as well...&lt;br/&gt;
What do u say Lars?&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="13476775" author="lhofhansl" created="Tue, 16 Oct 2012 05:58:33 +0000"  >&lt;p&gt;Sounds good. Just worried that N will necessarily be (much?) larger than M.&lt;/p&gt;

&lt;p&gt;One last thing. Let&apos;s not pass things as Scan attributes, it just makes it more obtuse (IMHO &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ). We can have an API:&lt;br/&gt;
&lt;tt&gt;BulkDeleteResponse delete(Scan scan, DeleteType type, Long timestamp)&lt;/tt&gt;&lt;br/&gt;
timestamp could be null (hence a Long). If it is null, we use the lastest timestamp for ROW/FAMILY/COLUMN and the KV&apos;s timestamp for VERSION, otherwise we can use the passed timestamp... That should account for all use cases.&lt;/p&gt;

&lt;p&gt;(Sorry, I think it was my comment to use a Scan only to made you change it...? That was not what I meant... I just think it&apos;s better to be explicit about extra parameters for an operation).&lt;/p&gt;

&lt;p&gt;Does that sound OK?&lt;/p&gt;

&lt;p&gt;Documenting this will be tricky. I can have a shot at that (if you like, Anoop. If you prefer to do that, that&apos;s fine too).&lt;/p&gt;

&lt;p&gt;Thanks for all the work on this and the patience, this is an awesome feature!&lt;/p&gt;

&lt;p&gt;Eventually, since we made it so general now, I &lt;b&gt;can&lt;/b&gt; see this as an official API in HTable... But let&apos;s do that in an another jira (if others agree).&lt;/p&gt;</comment>
                            <comment id="13476804" author="anoopsamjohn" created="Tue, 16 Oct 2012 06:46:27 +0000"  >&lt;p&gt;API signature wise I am okey Lars. Passing in Scan attributes, I was in 2 minds all the time..&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
BulkDeleteResponse delete(Scan scan, DeleteType type, Long timestamp)&lt;br/&gt;
We need to pass the rowBatchSize too.. This is needed to accumulate the rows for a batched delete.&lt;br/&gt;
Do we need a Request object taking up the attributes? Yes some thing inline of protobufs?  Just asked&lt;/p&gt;

&lt;p&gt;Yes above suggestions sounds good to me&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Documenting this will be tricky. I can have a shot at that (if you like, Anoop. If you prefer to do that, that&apos;s fine too).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes Lars you can do that if you like  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Eventually, since we made it so general now, I can see this as an official API in HTable... But let&apos;s do that in an another jira (if others agree).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13476807" author="anoopsamjohn" created="Tue, 16 Oct 2012 06:51:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;Just worried that N will necessarily be (much?) larger than M.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We do not have any way to get only the 1st KVs from all the families of row right? We have FirstKeyOnlyFilter now.&lt;/p&gt;</comment>
                            <comment id="13476814" author="lhofhansl" created="Tue, 16 Oct 2012 07:02:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;We do not have any way to get only the 1st KVs from all the families of row right? We have FirstKeyOnlyFilter now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Right. I can&apos;t see any way to only get the 1st KV for a CF. I think we can live with that for now.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We need to pass the rowBatchSize too&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, forgot about that.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do we need a Request object taking up the attributes? Yes some thing inline of protobufs?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not sure. I like just passing the four parameters needed. (If that is not possible with protobufs, we should use a request object.)&lt;/p&gt;</comment>
                            <comment id="13477064" author="yuzhihong@gmail.com" created="Tue, 16 Oct 2012 14:59:08 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; noOfRowsDeleted = invokeBulkDeleteProtocol(tableName, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Scan(), 500, DeleteType.ROW,
+        &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think the test should also cover the case where batchSize is smaller than the number of rows to be deleted.&lt;/p&gt;</comment>
                            <comment id="13477128" author="yuzhihong@gmail.com" created="Tue, 16 Oct 2012 16:21:44 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
BulkDeleteResponse delete(Scan scan, DeleteType type, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt; timestamp, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; batchSize)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What if user wants to delete more than one column family ? How would he / she formulate through one request ?&lt;/p&gt;</comment>
                            <comment id="13477143" author="anoopsamjohn" created="Tue, 16 Oct 2012 16:41:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;What if user wants to delete more than one column family ? How would he / she formulate through one request ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;When the type is FAMILY, we will delete all the families coming as part of the scan result.. So add N families in Scan&lt;/p&gt;

&lt;p&gt;Yes I will add that test case also..&lt;/p&gt;</comment>
                            <comment id="13477156" author="yuzhihong@gmail.com" created="Tue, 16 Oct 2012 16:56:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;as part of the scan result&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;List&amp;lt;KeyValue&amp;gt; is returned from scanner.next(). It would be easier to understand user intention through Scan.getFamilyMap() instead of analyzing scan result.&lt;/p&gt;</comment>
                            <comment id="13477174" author="lhofhansl" created="Tue, 16 Oct 2012 17:13:41 +0000"  >&lt;p&gt;I don&apos;t necessarily agree here, Ted. Analyzing the scan result is the whole point of this jira. Passing a template family map will not make this easier for a user (IMHO).&lt;/p&gt;</comment>
                            <comment id="13477177" author="yuzhihong@gmail.com" created="Tue, 16 Oct 2012 17:21:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;Just worried that N will necessarily be (much?) larger than M.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;How do we correlate scan result with which column families to delete ?&lt;/p&gt;</comment>
                            <comment id="13477554" author="anoopsamjohn" created="Wed, 17 Oct 2012 03:01:52 +0000"  >&lt;p&gt;When user say he want to delete family cf1 and cf2 (with passing TS or not)&lt;br/&gt;
Then user need to create the Scan object appropriately. Include the cf1 and cf2 in the Scan&lt;br/&gt;
Now from the KVs we can create the Delete object&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; FAMILY:
        Set&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt; families = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TreeSet&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt;(Bytes.BYTES_COMPARATOR);
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (KeyValue kv : deleteRow) {
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (families.add(kv.getFamily())) {
            delete.deleteFamily(kv.getFamily(), ts);
          }
        }
        &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Add family of all the KVs into Delete..Used to set to avoid duplicate calls.&lt;br/&gt;
Am I making you clear Ted?&lt;/p&gt;</comment>
                            <comment id="13477558" author="anoopsamjohn" created="Wed, 17 Oct 2012 03:06:42 +0000"  >&lt;p&gt;One another question&lt;br/&gt;
Do some one tried passing an enum type via the CP Endpoints?&lt;br/&gt;
I think it wont work.. I was checking why and found it is as per the code in HbaseObjectWritable.&lt;/p&gt;

&lt;p&gt;In the kernel code also only one enum is passed across wire I think ie.RegionOpeningState&lt;br/&gt;
This one is specifically added to CODE_TO_CLASS and CLASS_TO_CODE Maps in HbaseObjectWritable&lt;/p&gt;

&lt;p&gt;Is it a bug we need to address? Or some where we are telling that enums can not be used?&lt;/p&gt;</comment>
                            <comment id="13477566" author="lhofhansl" created="Wed, 17 Oct 2012 03:21:44 +0000"  >&lt;p&gt;You can send the enum&apos;s ordinal number across.&lt;/p&gt;</comment>
                            <comment id="13477567" author="yuzhihong@gmail.com" created="Wed, 17 Oct 2012 03:27:29 +0000"  >&lt;p&gt;Do we support delete family cf1 and delete column qualifier cq2 of family cf2 in one request ?&lt;/p&gt;</comment>
                            <comment id="13477568" author="anoopsamjohn" created="Wed, 17 Oct 2012 03:28:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do we support delete family cf1 and delete column qualifier cq2 of family cf2 in one request ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No Ted.. In this we can not do that...&lt;/p&gt;</comment>
                            <comment id="13477570" author="anoopsamjohn" created="Wed, 17 Oct 2012 03:30:13 +0000"  >&lt;p&gt;See my previous comment&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6942?focusedCommentId=13476126&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13476126&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-6942?focusedCommentId=13476126&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13476126&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13477571" author="anoopsamjohn" created="Wed, 17 Oct 2012 03:32:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;You can send the enum&apos;s ordinal number across.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes Lars. Then we can not accept Enum types as a parameter in the CP Endpoint.. So user also need to pass the ordinal(as we don&apos;t have a client side wrapper API to call this Endpoint as of now)&lt;br/&gt;
I shall do it like that now..&lt;/p&gt;</comment>
                            <comment id="13477573" author="yuzhihong@gmail.com" created="Wed, 17 Oct 2012 03:34:19 +0000"  >&lt;p&gt;If we pass Scan and Delete to endpoint, we can handle arbitrary deletion requests.&lt;/p&gt;

&lt;p&gt;@Anoop:&lt;br/&gt;
I clicked on the link above - it is not obvious which comment you were referring to.&lt;br/&gt;
Please refer to comment by its time.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13477574" author="lhofhansl" created="Wed, 17 Oct 2012 03:35:21 +0000"  >&lt;p&gt;Alternatively we use four integer constants, or do what you had suggested earlier and pass a Delete template object (although I still think that would be confusing).&lt;/p&gt;

&lt;p&gt;Since these are endpoints, it is also possible to just have 4 different endpoint that share some methods between them.&lt;/p&gt;</comment>
                            <comment id="13477578" author="anoopsamjohn" created="Wed, 17 Oct 2012 03:40:33 +0000"  >&lt;p&gt;Ted&lt;br/&gt;
Some drawbacks due to not taking Delete object &lt;br/&gt;
1. When it is a timestamp based delete same TS to be used for all the columns where as in normal delete diff TS can be used&lt;br/&gt;
2. Types can not be mixed. In normal delete one CF delete and other one&apos;s column delete and yet others version delete can be combined&lt;/p&gt;</comment>
                            <comment id="13477579" author="anoopsamjohn" created="Wed, 17 Oct 2012 03:41:14 +0000"  >&lt;p&gt;Lars&lt;br/&gt;
Will be better to pass the type constants (Int constants)&lt;/p&gt;</comment>
                            <comment id="13477581" author="lhofhansl" created="Wed, 17 Oct 2012 03:49:40 +0000"  >&lt;p&gt;Yes. I &lt;b&gt;really&lt;/b&gt; do not want not to make more complicated than it is.&lt;br/&gt;
If somebody wants to delete a couple of column families and a couple of columns, it can be done with multiple roundtrips.&lt;/p&gt;

&lt;p&gt;Now, if the code can be simplified by passing a Delete object, then we should do that.&lt;/p&gt;</comment>
                            <comment id="13477583" author="anoopsamjohn" created="Wed, 17 Oct 2012 03:51:31 +0000"  >&lt;p&gt;I will make a patch based on the delete template also... &lt;br/&gt;
So will be easy to compare..&lt;br/&gt;
I will make those today&lt;br/&gt;
Sorry was busy with meeting yday..&lt;/p&gt;</comment>
                            <comment id="13477916" author="anoopsamjohn" created="Wed, 17 Oct 2012 14:36:56 +0000"  >&lt;p&gt;Patch V6 with Scan based approach...&lt;br/&gt;
Regarding returning the no# of KVs deleted.&lt;br/&gt;
I think this is having meaning only when delete type is VERSION...  In other types we don&apos;t know exactly how many KVs deleted...&lt;br/&gt;
In case of VERSION delete we return the no# versions deleted&lt;/p&gt;</comment>
                            <comment id="13477919" author="anoopsamjohn" created="Wed, 17 Oct 2012 14:40:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6942&quot; title=&quot;Endpoint implementation for bulk deletion of data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6942&quot;&gt;&lt;del&gt;HBASE-6942&lt;/del&gt;&lt;/a&gt;_DeleteTemplate  patch with Delete template approach&lt;br/&gt;
Here one thing we can not directly implement is the deletion  of N versions.. With scan based approach as every thing governed by the scan result it is easy&lt;/p&gt;

&lt;p&gt;With both these I feel being a user go with Scan based approach will be easy. The mixed kind of delete only will be not possible in that case&lt;/p&gt;

&lt;p&gt;Requesting opinion from others&lt;/p&gt;</comment>
                            <comment id="13477978" author="jmspaggi" created="Wed, 17 Oct 2012 15:59:38 +0000"  >&lt;p&gt;Should:&lt;br/&gt;
NO_OF_VERSIOS_TO_DELETE = &quot;noOfVersiosToDelete&quot;&lt;br/&gt;
be&lt;br/&gt;
NO_OF_VERSIONS_TO_DELETE = &quot;noOfVersionsToDelete&quot;&lt;br/&gt;
?&lt;/p&gt;</comment>
                            <comment id="13477987" author="yuzhihong@gmail.com" created="Wed, 17 Oct 2012 16:09:27 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (opStatus[i].getOperationStatusCode() != OperationStatusCode.SUCCESS) {
+              &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should we continue to check status code for the remaining opStatus ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] versionsDeleted = deleteWithLockArr[i].getFirst().getAttribute(
+                NO_OF_VERSIOS_TO_DELETE);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Typo in the constant name above.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; noOfVersiosToDelete = 0;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Typo in variable name above.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; Bytes.hashCode(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.family) + Bytes.hashCode(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.qualifier);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can we come up with better hash code ?&lt;/p&gt;

&lt;p&gt;Looking at both approaches, I think using delete template gives us flexibility and cleaner code.&lt;/p&gt;</comment>
                            <comment id="13478021" author="anoopsamjohn" created="Wed, 17 Oct 2012 16:48:44 +0000"  >&lt;p&gt;@Jean and @Ted&lt;br/&gt;
My mistake with typo.. Will correct..&lt;/p&gt;

&lt;p&gt;With deleteTemplate one thing which is not possible directly is deleting N versions usecase.. Seems Lars is having such usecase.. I am not sure&lt;br/&gt;
Also in this user need to be careful making both Scan and Delete object.. Dont feel some duplicate work?   &lt;/p&gt;</comment>
                            <comment id="13478028" author="anoopsamjohn" created="Wed, 17 Oct 2012 16:57:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should we continue to check status code for the remaining opStatus ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I was following the code in HRS.. Also Lars one suggested the same way..  Getting a SANITY_FAILURE wont happen here Also I am not able to get how we can get a FAILURE status also..&lt;/p&gt;</comment>
                            <comment id="13478038" author="yuzhihong@gmail.com" created="Wed, 17 Oct 2012 17:08:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;was following the code in HRS&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Are you referring to the following code in doBatchOp() ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; SANITY_CHECK_FAILURE:
            result = ResponseConverter.buildActionResult(
                &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FailedSanityCheckException(codes[i].getExceptionMsg()));
            builder.setResult(i, result);
            &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above is within switch statement nested inside a for loop.&lt;/p&gt;</comment>
                            <comment id="13478060" author="anoopsamjohn" created="Wed, 17 Oct 2012 17:33:02 +0000"  >&lt;p&gt;This one Ted&lt;br/&gt;
HRegionServer#put(final byte[] regionName, final List&amp;lt;Put&amp;gt; puts)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
OperationStatus codes[] = region.batchMutate(putsWithLocks);
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (i = 0; i &amp;lt; codes.length; i++) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (codes[i].getOperationStatusCode() != OperationStatusCode.SUCCESS) {
          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; i;
        }
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13478068" author="yuzhihong@gmail.com" created="Wed, 17 Oct 2012 17:42:29 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; put(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] regionName, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; List&amp;lt;Put&amp;gt; puts)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above method is only in 0.94 code base. It has no javadoc. But I interpret the meaning of its return value to be the first index of unsuccessful Put.&lt;/p&gt;</comment>
                            <comment id="13478621" author="anoopsamjohn" created="Thu, 18 Oct 2012 03:00:18 +0000"  >&lt;p&gt;Yes 0.94 code base&lt;br/&gt;
Pls see the javadoc in HRegionInterface.java&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
   * Put an array of puts into the specified region
   *
   * @param regionName region name
   * @param puts List of puts to execute
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; The number of processed put&apos;s.  Returns -1 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; all Puts
   * processed successfully.
   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException e
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; put(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] regionName, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; List&amp;lt;Put&amp;gt; puts)
  &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;b&gt;return The number of processed put&apos;s&lt;/b&gt;&lt;/p&gt;</comment>
                            <comment id="13480610" author="anoopsamjohn" created="Sat, 20 Oct 2012 03:05:22 +0000"  >&lt;p&gt;@Lars Your comments on V6....&lt;/p&gt;

&lt;p&gt;Also regarding Ted&apos;s doubt in finding the number of processed Mutation..  As above u can see the java doc in HRegionInterface#put() clearly tells that it return the number of processed Puts. Suppose I have 100 Puts in the input list in which the 50th one failed (assume Sanity check failed)..  Still the batchMutate will try to process all other 99 Puts..  As per the logic in HRS it will return 49 as the processed Puts count..  Does this correct?  Pls correct me if my understanding is wrong&lt;/p&gt;</comment>
                            <comment id="13480620" author="lhofhansl" created="Sat, 20 Oct 2012 03:51:41 +0000"  >&lt;p&gt;This:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!hasMore) {
+            &lt;span class=&quot;code-comment&quot;&gt;// There are no more rows.
&lt;/span&gt;+            &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is at the wrong spot. Per RegionScanner contract a return of false indicates that the there is no &lt;b&gt;next&lt;/b&gt; batch of values, but that does not mean that there are no KVs in the &lt;b&gt;current&lt;/b&gt; batch. This check should be at the end of the loop.&lt;/p&gt;

&lt;p&gt;Passing the number of versions deleted through an attribute is hokey. I wonder whether there is a better approach.&lt;/p&gt;

&lt;p&gt;For passing the delete type bytes. What I meant was to use a enum backed by bytes. See KeyValue.Type and the getCode and codeToType methods.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure I see a usecase for the VERSION marker together with a passed timestamp.&lt;br/&gt;
This will only delete the exact version of all the KVs scanned.&lt;/p&gt;

&lt;p&gt;Otherwise looks good.&lt;/p&gt;

&lt;p&gt;@Ted: The batchMutate call will not produce gaps. The first index not successful is equal to the number of successful operations. So this is correct in this patch.&lt;/p&gt;

&lt;p&gt;Lastly... Are we making this too complicated? The first patch was nice and simple, it only deleted rows. Now we have a pretty complicated piece of code... Just asking, I still think it&apos;s a nice patch.&lt;/p&gt;</comment>
                            <comment id="13480630" author="yuzhihong@gmail.com" created="Sat, 20 Oct 2012 04:10:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;This check should be at the end of the loop.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The break statement is within this for loop:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; rowBatchSize; i++) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;&lt;p&gt;Are we making this too complicated ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The complication is due to the desire to satisfy more use cases. I think it is worth it.&lt;/p&gt;</comment>
                            <comment id="13480631" author="lhofhansl" created="Sat, 20 Oct 2012 04:15:09 +0000"  >&lt;p&gt;@Ted: Oops, yes, you&apos;re right. The break is at the correct spot.&lt;/p&gt;</comment>
                            <comment id="13480635" author="yuzhihong@gmail.com" created="Sat, 20 Oct 2012 04:29:56 +0000"  >&lt;p&gt;@Lars:&lt;br/&gt;
What&apos;s your opinion for the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6942&quot; title=&quot;Endpoint implementation for bulk deletion of data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6942&quot;&gt;&lt;del&gt;HBASE-6942&lt;/del&gt;&lt;/a&gt;_DeleteTemplate.patch ?&lt;/p&gt;</comment>
                            <comment id="13480636" author="lhofhansl" created="Sat, 20 Oct 2012 04:40:39 +0000"  >&lt;p&gt;Personally I prefer V6. The power of this code is that the KVs/columns/families to be deleted can be described by a scan. Passing the DeleteTemplate is very inflexible by comparison.&lt;br/&gt;
Now, potentially we could increase flexibility here too. For example when we find the template KVs, if it is a COLUMN marker, we can take the row and column for the scanned row, if it a version, we take the row, column, and ts from the scanned row, etc.&lt;/p&gt;</comment>
                            <comment id="13480639" author="yuzhihong@gmail.com" created="Sat, 20 Oct 2012 04:49:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;Passing the DeleteTemplate is very inflexible by comparison.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That patch uses the Scan parameter as well. Can you elaborate why using DeleteTemplate is very inflexible ?&lt;br/&gt;
See Annop&apos;s comment @ 17/Oct/12 15:40 about limitation for patch v6:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The mixed kind of delete only will be not possible in that case&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13480643" author="lhofhansl" created="Sat, 20 Oct 2012 04:54:46 +0000"  >&lt;p&gt;If you look at createDeleteMutation, you see that only the row key is taken from the scanned KVs, the rest is taken from the DeleteTemplate. That does not appear very useful to me.&lt;/p&gt;</comment>
                            <comment id="13480650" author="yuzhihong@gmail.com" created="Sat, 20 Oct 2012 05:21:30 +0000"  >&lt;p&gt;See also Anoop&apos;s comment @ 20/Oct/12 04:05 w.r.t. batchMutate:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;As per the logic in HRS it will return 49 as the processed Puts count.. Does this correct?&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13480667" author="ram_krish" created="Sat, 20 Oct 2012 07:06:12 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      OperationStatus codes[] = region.batchMutate(putsWithLocks);
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (i = 0; i &amp;lt; codes.length; i++) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (codes[i].getOperationStatusCode() != OperationStatusCode.SUCCESS) {
          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; i;
        }
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This will need a change any way.&lt;br/&gt;
But currently there is no code that is calling it. All clients will call only batchMutate.  The above problem lies in the put().  In trunk it has been removed. &lt;/p&gt;</comment>
                            <comment id="13480668" author="ram_krish" created="Sat, 20 Oct 2012 07:31:55 +0000"  >&lt;p&gt;@Anoop&lt;br/&gt;
Nice work and covers all the cases.&lt;br/&gt;
@Ted/Lars&lt;br/&gt;
Also i feel that this is an endpoint impl.  It gives user an idea what all they can do.  &lt;br/&gt;
The rowBatchSize can be optional too right? May be user can see how he wants the rowbatchsize to be.  &lt;/p&gt;

</comment>
                            <comment id="13480756" author="anoopsamjohn" created="Sat, 20 Oct 2012 15:03:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;For passing the delete type bytes. What I meant was to use a enum backed by bytes&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Lars we can not make the signature of endpoint like delete(Scan, DeleteType..)&lt;br/&gt;
I also tried initially like enum backed with byte.. But any way when customer calls the endpoint as delete(Scan, deleteType.getBytes()... )&lt;br/&gt;
I thought that will be only confusion..&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
We are not supporting enum type as a parameter to Endpoint&lt;/p&gt;
</comment>
                            <comment id="13480766" author="lhofhansl" created="Sat, 20 Oct 2012 15:58:35 +0000"  >&lt;p&gt;Let&apos;s commit something very close to V6 soon.&lt;/p&gt;</comment>
                            <comment id="13480769" author="yuzhihong@gmail.com" created="Sat, 20 Oct 2012 16:11:08 +0000"  >&lt;p&gt;This is an improvement which should go to trunk first, right ?&lt;br/&gt;
@Anoop:&lt;br/&gt;
please provide patch for trunk.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13480828" author="lhofhansl" created="Sat, 20 Oct 2012 20:52:11 +0000"  >&lt;p&gt;No. It&apos;s an example endpoint; it absolutely does not have to go into trunk first. (Of course it should also go into trunk)&lt;/p&gt;

</comment>
                            <comment id="13480989" author="anoopsamjohn" created="Sun, 21 Oct 2012 16:19:33 +0000"  >&lt;p&gt;Patch addressing comments&lt;br/&gt;
Ted I will submit patch for trunk tomorow&lt;/p&gt;</comment>
                            <comment id="13481444" author="anoopsamjohn" created="Mon, 22 Oct 2012 15:51:48 +0000"  >&lt;p&gt;Patch for trunk&lt;/p&gt;</comment>
                            <comment id="13481471" author="hadoopqa" created="Mon, 22 Oct 2012 16:16:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12550303/HBASE-6942_Trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12550303/HBASE-6942_Trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 82 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestSplitTransaction&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3110//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13481491" author="yuzhihong@gmail.com" created="Mon, 22 Oct 2012 16:45:49 +0000"  >&lt;p&gt;Please use remove the trailing CR (^M) in the patch.&lt;br/&gt;
Trunk patch looks good overall.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class BulkDeleteEndpoint &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; BulkDeleteService &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; CoprocessorService,^M
+    Coprocessor {^M
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please add javadoc to above class.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          scanner.close();^M
+        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ioe) {^M
+          LOG.debug(ioe);^M
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should LOG.error() be used above ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] versionsDeleted = deleteWithLockArr[i].getFirst().getAttribute(^M
+                NO_OF_VERSIONS_TO_DELETE);^M
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (versionsDeleted != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {^M
+              totalVersionsDeleted += Bytes.toInt(versionsDeleted);^M
+            }^M
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should the above be enclosed in if (deleteType == DeleteType.VERSION) block ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      h = h + 13 * Bytes.hashCode(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.family);^M
+      h = h + 13 * Bytes.hashCode(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.qualifier);^M
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Would mulplication by 13 result in overflow ?&lt;br/&gt;
Take a look at the following code from HColumnDescriptor:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    result ^= &lt;span class=&quot;code-object&quot;&gt;Byte&lt;/span&gt;.valueOf(COLUMN_DESCRIPTOR_VERSION).hashCode();
    result ^= values.hashCode();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * Copyright 2011 The Apache Software Foundation^M
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above line is not needed.&lt;/p&gt;</comment>
                            <comment id="13481633" author="apurtell" created="Mon, 22 Oct 2012 18:56:14 +0000"  >&lt;p&gt;Sorry for being late to the party. Really glad to see your interest and effort in submitting a coprocessor example. We need more of these! I took a look at the trunk patch after reading through this issue. +1 after addressing Ted&apos;s comments, except for the hashcode multiplication thing.&lt;/p&gt;</comment>
                            <comment id="13482104" author="anoopsamjohn" created="Tue, 23 Oct 2012 04:38:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would mulplication by 13 result in overflow ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Wont be an issue I guess Ted.. This might create -ve numbers but that is fine.. You can see TablePermission.java.. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Should the above be enclosed in if (deleteType == DeleteType.VERSION) block&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13482106" author="anoopsamjohn" created="Tue, 23 Oct 2012 04:39:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should the above be enclosed in if (deleteType == DeleteType.VERSION) block&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Fine can add the if check.. Would avoid a getAttribute() call..&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;* Copyright 2011 The Apache Software Foundation&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Oops! sorry..&lt;/p&gt;</comment>
                            <comment id="13482228" author="anoopsamjohn" created="Tue, 23 Oct 2012 09:39:58 +0000"  >&lt;p&gt;Will address this Findbugs warning also in next patch&lt;br/&gt;
Should org.apache.hadoop.hbase.coprocessor.example.BulkDeleteEndpoint$Column be a &lt;em&gt;static&lt;/em&gt; inner class?&lt;/p&gt;</comment>
                            <comment id="13482279" author="yuzhihong@gmail.com" created="Tue, 23 Oct 2012 12:10:31 +0000"  >&lt;p&gt;That is fine. &lt;/p&gt;</comment>
                            <comment id="13482385" author="hadoopqa" created="Tue, 23 Oct 2012 15:03:46 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12550464/HBASE-6942_Trunk-V2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12550464/HBASE-6942_Trunk-V2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 82 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3125//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13482437" author="yuzhihong@gmail.com" created="Tue, 23 Oct 2012 16:06:25 +0000"  >&lt;p&gt;Integrated to 0.94 and trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, Anoop.&lt;/p&gt;

&lt;p&gt;Thanks for the review, Lars and Andy.&lt;/p&gt;

&lt;p&gt;@Anoop:&lt;br/&gt;
Can you write up release note for this feature ?&lt;/p&gt;</comment>
                            <comment id="13482492" author="hudson" created="Tue, 23 Oct 2012 17:31:41 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #548 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/548/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/548/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6942&quot; title=&quot;Endpoint implementation for bulk deletion of data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6942&quot;&gt;&lt;del&gt;HBASE-6942&lt;/del&gt;&lt;/a&gt; Endpoint implementation for bulk delete rows (Anoop) (Revision 1401332)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteResponse.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestBulkDeleteProtocol.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13482502" author="hudson" created="Tue, 23 Oct 2012 17:40:09 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3474 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3474/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3474/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6942&quot; title=&quot;Endpoint implementation for bulk deletion of data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6942&quot;&gt;&lt;del&gt;HBASE-6942&lt;/del&gt;&lt;/a&gt; Endpoint implementation for bulk delete rows (Anoop) (Revision 1401330)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/example/generated/BulkDeleteProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/protobuf/BulkDelete.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestBulkDeleteProtocol.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13482534" author="lhofhansl" created="Tue, 23 Oct 2012 18:16:18 +0000"  >&lt;p&gt;woohoo &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13482834" author="hudson" created="Tue, 23 Oct 2012 23:48:27 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #232 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/232/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/232/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6942&quot; title=&quot;Endpoint implementation for bulk deletion of data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6942&quot;&gt;&lt;del&gt;HBASE-6942&lt;/del&gt;&lt;/a&gt; Endpoint implementation for bulk delete rows (Anoop) (Revision 1401330)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/example/generated/BulkDeleteProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/protobuf/BulkDelete.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestBulkDeleteProtocol.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13482941" author="anoopsamjohn" created="Wed, 24 Oct 2012 04:05:05 +0000"  >&lt;p&gt;Thanks Ted, Lars, Andrew and Ram for the review. Happy to see this in..&lt;/p&gt;</comment>
                            <comment id="13482942" author="anoopsamjohn" created="Wed, 24 Oct 2012 04:06:28 +0000"  >&lt;p&gt;Thanks to Jerry and Jean for their inputs and review as well..&lt;/p&gt;</comment>
                            <comment id="13490372" author="hudson" created="Mon, 5 Nov 2012 01:35:35 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #9 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/9/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/9/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6942&quot; title=&quot;Endpoint implementation for bulk deletion of data&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6942&quot;&gt;&lt;del&gt;HBASE-6942&lt;/del&gt;&lt;/a&gt; Endpoint implementation for bulk delete rows (Anoop) (Revision 1401332)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example/BulkDeleteResponse.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestBulkDeleteProtocol.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12548256" name="HBASE-6942.patch" size="15193" author="anoopsamjohn" created="Mon, 8 Oct 2012 16:55:37 +0000"/>
                            <attachment id="12550462" name="HBASE-6942_94-V8.patch" size="31746" author="anoopsamjohn" created="Tue, 23 Oct 2012 14:06:12 +0000"/>
                            <attachment id="12549517" name="HBASE-6942_DeleteTemplate.patch" size="30917" author="anoopsamjohn" created="Wed, 17 Oct 2012 14:37:22 +0000"/>
                            <attachment id="12550464" name="HBASE-6942_Trunk-V2.patch" size="95535" author="anoopsamjohn" created="Tue, 23 Oct 2012 14:07:29 +0000"/>
                            <attachment id="12550303" name="HBASE-6942_Trunk.patch" size="94106" author="anoopsamjohn" created="Mon, 22 Oct 2012 15:51:48 +0000"/>
                            <attachment id="12548723" name="HBASE-6942_V2.patch" size="15436" author="anoopsamjohn" created="Thu, 11 Oct 2012 09:23:39 +0000"/>
                            <attachment id="12548997" name="HBASE-6942_V3.patch" size="15744" author="anoopsamjohn" created="Sat, 13 Oct 2012 03:45:41 +0000"/>
                            <attachment id="12549017" name="HBASE-6942_V4.patch" size="15848" author="anoopsamjohn" created="Sat, 13 Oct 2012 11:39:57 +0000"/>
                            <attachment id="12549142" name="HBASE-6942_V5.patch" size="28853" author="anoopsamjohn" created="Mon, 15 Oct 2012 12:59:21 +0000"/>
                            <attachment id="12549516" name="HBASE-6942_V6.patch" size="32338" author="anoopsamjohn" created="Wed, 17 Oct 2012 14:34:29 +0000"/>
                            <attachment id="12550188" name="HBASE-6942_V7.patch" size="32475" author="anoopsamjohn" created="Sun, 21 Oct 2012 16:19:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 8 Oct 2012 05:25:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>240583</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 6 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i013pb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4369</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This issue gives an example Endpoint implementation for efficiently deleting bulk data from tables. Which  data to be deleted can be controlled using a Scan object passed to the endpoint.&lt;br/&gt;
We can delete rows, column families, column qualifiers or cell versions based on delete type passed.&lt;br/&gt;
Optionally timestamp also can be passed. When timestamp is passed for ROW, FAMILY and COLUMN delete types, all the versions before that time(specified time inclusive) will get deleted.&lt;br/&gt;
When the type is VERSION, if a timestamp is passed, only one version(with ts as given value) of all the cells which the Scan selected will be deleted. When no timestamp value passed for VERSION type delete it will delete all the cell versions which the Scan selected. Using appropriate Scan with Timerange etc user can control which versions to be deleted.&lt;br/&gt;
The API returns the number of rows deleted (In types other than ROW it is not entire row deleted) and when type is VERSION it will return total number of versions deleted also.&lt;br/&gt;
The Scan can be created with a rowkey range, with some filters, with Timerange etc based on the delete usecase.&lt;br/&gt;
&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>