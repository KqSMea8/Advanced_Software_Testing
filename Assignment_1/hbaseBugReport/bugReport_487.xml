<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:44:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-487/HBASE-487.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-487] Replace hql w/ a hbase-friendly jirb or jython shell</title>
                <link>https://issues.apache.org/jira/browse/HBASE-487</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The hbase shell is a useful admin and debugging tool but it has a couple of downsides.  To extend, a fragile parser definition needs tinkering-with and new java classes must be added.  The current test suite for hql is lacking coverage and the current code could do with a rewrite having evolved piecemeal.  Another downside is that the presence of an HQL interpreter gives the mis-impression that hbase is like a SQL database.&lt;/p&gt;

&lt;p&gt;This &apos;wish&apos; issue suggests that we jettison HQL and instead offer users a jirb or jython command line.  We&apos;d ship with some scripts and jruby/jython classes that we&apos;d source on startup to do things like import base client classes &amp;#8211; so folks wouldn&apos;t have to remember all the packages stuff sat in &amp;#8211; and added a pretty-print for scanners and getters outputting text, xhtml or binary.  They would also make it easy to do HQL-things in jruby/python script.&lt;/p&gt;

&lt;p&gt;Advantages: Already-written parser with no need of extension probing deeper into hbase: i.e. better for debugging than HQL could ever be.  Easy extension adding scripts/modules rather than java code.  Less likely hbase could be confused for a SQL db.&lt;/p&gt;

&lt;p&gt;Downsides: Probably more verbose.  Requires ruby or python knowledge (&quot;Everyone knows some sql&quot;).  Big? (jruby lib is 24M).&lt;/p&gt;

&lt;p&gt;I was going to write security as downside but HQL suffers this at the moment too &amp;#8211; though it has been possible to sort the updates from the selects in the UI to prevent modification of the db from the UI, something that would be hard to do in a jruby/jython parser.&lt;/p&gt;

&lt;p&gt;What do others think?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12390073">HBASE-487</key>
            <summary>Replace hql w/ a hbase-friendly jirb or jython shell</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Wish</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Mon, 3 Mar 2008 19:13:26 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:10 +0000</updated>
                            <resolved>Wed, 18 Jun 2008 20:00:46 +0000</resolved>
                                                    <fixVersion>0.2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12574851" author="udanax" created="Tue, 4 Mar 2008 06:10:38 +0000"  >&lt;p&gt;-1.  Is above downsides can&apos;t fix?&lt;/p&gt;</comment>
                            <comment id="12575067" author="bryanduxbury" created="Tue, 4 Mar 2008 17:35:26 +0000"  >&lt;p&gt;@Edward - I don&apos;t think that a custom-written parser will ever give us the flexibility to do crazy debugging and tinkering like a JRuby shell would. &lt;/p&gt;

&lt;p&gt;As far as the point that it requires some ruby/python knowledge to use, I don&apos;t think that&apos;s true. At least in ruby, we could make the syntax very simple, while still allowing access to the deeper pure-ruby stuff for those who know it&apos;s there.&lt;/p&gt;

&lt;p&gt;For instance, we could make a get method like so:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;gt; get &lt;span class=&quot;code-quote&quot;&gt;&quot;row name&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fam:col&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fam2:col2&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It doesn&apos;t look like SQL, but it has the same functionality, and you don&apos;t really have to know ruby to use it. &lt;/p&gt;</comment>
                            <comment id="12575547" author="udanax" created="Thu, 6 Mar 2008 03:16:28 +0000"  >&lt;p&gt;Hmm. I See. and agree about flexibility.&lt;br/&gt;
Then, i&apos;d like to move current HQL features to HRdfStore project. (&lt;a href=&quot;http://wiki.apache.org/incubator/HRdfStoreProposal&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/incubator/HRdfStoreProposal&lt;/a&gt;)&lt;br/&gt;
It makes more sense for us, and HQL features are good fit with HRdfStore project.&lt;/p&gt;

&lt;p&gt;Would you sponsor me and HRdfStore project?&lt;/p&gt;</comment>
                            <comment id="12584765" author="stack" created="Wed, 2 Apr 2008 20:39:48 +0000"  >&lt;p&gt;jython is easy enough to integrate. What about fact that you have to tab in shell when you want to write a little loop or that long lines can&apos;t be continued on next line with a &apos;\&apos;.  Does this make it unsuitable?&lt;/p&gt;

&lt;p&gt;Looking at integrating jirb now.  Its more of a PITA integrating but no need of parens and more free-form would be more &apos;shell-like&apos;.&lt;/p&gt;

&lt;p&gt;What else should we be looking at?  Beanshell would be a sort of middle-ground; everyone would have to learn its syntax and you can do anything you could in jython/jirb and its easy to integrate&lt;/p&gt;

&lt;p&gt;Was thinking that ./bin/hbase shell would put up the new shell, not HQL.  Would be a banner which said run &apos;./bin/hbase hql&apos; to get old, deprecated shell&lt;/p&gt;</comment>
                            <comment id="12584927" author="stack" created="Thu, 3 Apr 2008 00:00:04 +0000"  >&lt;p&gt;Patch to get groovy into hbase.  Currently type &quot;./bin/hbase groovy&quot; to make it work.&lt;/p&gt;

&lt;p&gt;Jars to include are about 2.7M&lt;/p&gt;

&lt;p&gt;Can use the groovy config. to preload the shell w/ hbase helper scripts and methods&lt;/p&gt;

&lt;p&gt;Should do our own shell Main so we use later commons-cli, the one we include... that&apos;d cut down on having to import one more jar and so we don&apos;t show &apos;inspect&apos; in as a help option (I&apos;m running groovy headless &amp;#8211; but maybe we want AWT and being able to inspect objects to see what their API, etc.)?&lt;/p&gt;

&lt;p&gt;Here is sample:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
durruti:~/Documents/checkouts/hbase/trunk stack$ ./bin/hbase groovy
Groovy Shell (1.5.4, JVM: 1.5.0_13-121)
Type &apos;help&apos; or &apos;\h&apos; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; help.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
groovy:000&amp;gt; help

For information about Groovy, visit:
    http:&lt;span class=&quot;code-comment&quot;&gt;//groovy.codehaus.org 
&lt;/span&gt;
Available commands:
  help     (\h) Display &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; help message
  ?        (\?) Alias to: help
  exit     (\x) Exit the shell
  quit     (\q) Alias to: exit
  &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt;   (\i) Import a class into the namespace
  display  (\d) Display the current buffer
  clear    (\c) Clear the buffer
  show     (\S) Show variables, classes or imports
  inspect  (\n) Inspect a variable or the last result with the GUI object browser
  purge    (\p) Purge variables, classes, imports or preferences
  edit     (\e) Edit the current buffer
  load     (\l) Load a file or URL into the buffer
  .        (\.) Alias to: load
  save     (\s) Save the current buffer to a file
  record   (\r) Record the current session to a file
  history  (\H) Display, manage and recall edit-line history
  alias    (\a) Create an alias
  set      (\=) Set (or list) preferences

For help on a specific command type:
    help command 

groovy:000&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.HTable
groovy:000&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HBaseConfiguration
groovy:000&amp;gt; c = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HBaseConfiguration() 
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12584958" author="stack" created="Thu, 3 Apr 2008 02:17:44 +0000"  >&lt;p&gt;jruby and beanshell have forbidding licenses; they&apos;re out of the running.  jython license may be ok so its not ruled out yet.  Groovy is apache licensed.&lt;/p&gt;</comment>
                            <comment id="12584969" author="bryanduxbury" created="Thu, 3 Apr 2008 03:21:06 +0000"  >&lt;p&gt;The license compatibility issue only prevents us from bundling, right? Certainly it&apos;d be nice to bundle the needed libraries in, but it would add at most one or two more steps to the install process. Also, if we decide to make a web admin interface in JRuby on Rails, JRuby would already be around. &lt;/p&gt;

&lt;p&gt;I think we should avoid making a decision solely for license purposes. &lt;/p&gt;</comment>
                            <comment id="12584973" author="stack" created="Thu, 3 Apr 2008 03:43:51 +0000"  >&lt;p&gt;Yeah &amp;#8211; license prevents bundling.&lt;/p&gt;

&lt;p&gt;If shell were optional, requiring user take optional installation step would be fine but IMO shell is core.&lt;/p&gt;

&lt;p&gt;Other jython/jruby downsides:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Size on disk. JRuby is 25M just counting ruby classes and jar.  Jython is smaller. Would need to trim either (Beanshell is small).&lt;/li&gt;
	&lt;li&gt;JRuby is more awkward to integrate than jython/groovy/beanshell&lt;/li&gt;
	&lt;li&gt;Jython is a python that is 6 years old &amp;#8211; 2.2.1 (From michael B).  In the past, its been awkward having to remember the old syntax when you&apos;ve been used to modern cpythons&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(I wonder what groovy&apos;s grails is like as a RonR clone)&lt;/p&gt;</comment>
                            <comment id="12585030" author="tomwhite" created="Thu, 3 Apr 2008 09:48:21 +0000"  >&lt;p&gt;How about JavaScript? It comes with the JDK from version 6, and is easy enough to add for older versions. Just a thought.&lt;/p&gt;</comment>
                            <comment id="12585174" author="stack" created="Thu, 3 Apr 2008 16:37:03 +0000"  >&lt;p&gt;&amp;gt; How about JavaScript?&lt;/p&gt;

&lt;p&gt;When I&apos;ve suggested that we can have js effectively for free, reaction seems to be generally uninspired.  I&apos;ve heard &quot;javascript does not work well as a shell&quot; and &quot;yuck&quot;.  I&apos;ll take a look...&lt;/p&gt;</comment>
                            <comment id="12587757" author="cwensel" created="Thu, 10 Apr 2008 19:18:41 +0000"  >&lt;p&gt;Quick thoughts...&lt;/p&gt;

&lt;p&gt;Groovy seems polished as a shell and as a base scripting language. Re scripting, the &apos;builder&apos; functionality strikes me as a big plus. &lt;/p&gt;

&lt;p&gt;Re javascript. I&apos;ve used it (Rhino/E4X) extensively for scripting. Managing script &apos;includes&apos; from shared scripts was very clumsy. E4X was a major plus, but it is analogous to Groovy &apos;builder&apos; functionality (but only for XML). Further, javascript has a rocky roadmap (E4X not avail in jdk, and might be dropped in JS2, not that it&apos;s needed here).&lt;/p&gt;</comment>
                            <comment id="12589414" author="stack" created="Wed, 16 Apr 2008 05:17:51 +0000"  >&lt;p&gt;Adds a src/groovy dir.  In it are my beginnings playing w/ altering shell so it includes hbase context.  Also included are mods to build.xml to add a groovyc target which will compile groovy to class files.&lt;/p&gt;</comment>
                            <comment id="12589622" author="stack" created="Wed, 16 Apr 2008 16:03:24 +0000"  >&lt;p&gt;Couple of notes on my groovy playing:&lt;/p&gt;

&lt;p&gt;+ Groovysh is hard to modify.  Not subclassable &amp;#8211; has a main &amp;#8211; and so I have to copy at least two groovy shell files local &amp;#8211; Main and Groovysh &amp;#8211; and change a few lines like package and class names.&lt;br/&gt;
+ Groovysh is hard to modify in that the list of commands displayed in shell are listed in a bundled commands.xml file.  The commands.xml is loaded as a resource from the current .groovy files classloader.  Means I have to bring the commands.xml local too.&lt;br/&gt;
+ Looks like I cannot do without parens invoking groovy methods.  Works if you do this &apos;get tableName:&quot;SOME_TABLE&quot;, rowName: &quot;SOME_ROW&quot;&apos; but not if I do this &apos;rowresult = get tableName:&quot;SOME_TABLE&quot;, rowName: &quot;SOME_ROW&quot;&apos;: i.e. the parse gets messed up by the &apos;rowresult =&apos; prefix.&lt;/p&gt;

&lt;p&gt;Idea for how hbase groovy would work is roughly:&lt;/p&gt;

&lt;p&gt;+ On startup you&apos;d have a shell that had an hbase object in it.&lt;br/&gt;
+ If you did a help, you&apos;d see list of groovy options with addition of hbase object.&lt;br/&gt;
+ You&apos;d do &apos;help hbase&apos; and it would list something like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
hbase.admin
hbase.conf
hbase.get
hbase.iterator
hbase.put
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;+ Doing &apos;help hbase.admin&apos; would show you something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
hbase.admin.createTable ...
hbase.admin.deleteTable ...
hbase.admin.tables
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;+ Invoking something like hbase.admin.createTable, you could pass a populated HTableDescriptor or you could do short-circuit that was something like: &apos;hbase.admin.createTable(&quot;table_name&quot;, &quot;colfamily1_name&quot;, ....)&lt;/p&gt;

&lt;p&gt;Replacing shell with groovy will take a while &amp;#8211; few days to get something primitive into place and then ongoing work improving.&lt;/p&gt;
</comment>
                            <comment id="12589628" author="stack" created="Wed, 16 Apr 2008 16:24:40 +0000"  >&lt;p&gt;It looks like jruby is in the running again.  If its included under the CPL license, that should work.   Hadoop currently bundles junit which is CPL.  Nigel Daley also pointed me to this useful resource: &lt;a href=&quot;http://people.apache.org/~rubys/3party.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~rubys/3party.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12589687" author="stack" created="Wed, 16 Apr 2008 18:38:47 +0000"  >&lt;p&gt;Having nice little classloader issues making groovy work.  Putting aside for the moment to play with rhino/js.&lt;/p&gt;

&lt;p&gt;+ Need to figure out a readline for it.  It doesn&apos;t have it natively.&lt;br/&gt;
+ I like the way it reports syntax errors in-line rather than throwing pages of exceptions (groovy)&lt;br/&gt;
+ Does not autoimport java.lang because class name clashes got basic types.&lt;br/&gt;
+ Having trouble creating instances of hbase classes though I&apos;ve done importPackage &amp;#8211; says &apos;TypeError: &lt;span class=&quot;error&quot;&gt;&amp;#91;JavaPackage org.apache.hadoop.hbase.HBaseConfiguration&amp;#93;&lt;/span&gt; is not a function, it is object.&apos;  Looks like I need to use full package names though the doc claims otherwise (Not friendly).  Its odd because I can do java classes fine but not hbase ones (must be doing something wrong):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
js&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;var&lt;/span&gt; sb = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; java.lang.&lt;span class=&quot;code-object&quot;&gt;StringBuffer&lt;/span&gt;();
js&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;var&lt;/span&gt; sb = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; org.apache.hadoop.hbase.HBaseConfiguration();
js: &lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;, line 21: uncaught JavaScript runtime exception: TypeError: [JavaPackage org.apache.hadoop.hbase.HBaseConfiguration] is not a function, it is object.
        at &amp;lt;stdin&amp;gt;:21
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;+ Looks like I&apos;d make an hbase object that subclassed the rhino ScriptableObject.  In here I could hide alot of the hbase&apos;isms.&lt;/p&gt;</comment>
                            <comment id="12590140" author="stack" created="Thu, 17 Apr 2008 18:30:09 +0000"  >&lt;p&gt;Here&apos;s a patch to make jirb run.  In our lib dir I have the following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ ls lib/ruby 
1.8             jirb            jruby.jar       site_ruby
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;jirb is from jruby/bin.  The 1.8 is a cut-down version of whats in jruby (I removed cgi support, etc.).    I have not included gems.  Was 15M.&lt;/p&gt;

&lt;p&gt;To make it run you do:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ ./bin/hbase shell
irb(main):001:0&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HBaseConfiguration
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12591838" author="stack" created="Wed, 23 Apr 2008 22:31:52 +0000"  >&lt;p&gt;Marking as 0.2.0&lt;/p&gt;</comment>
                            <comment id="12592197" author="cwensel" created="Thu, 24 Apr 2008 23:23:11 +0000"  >&lt;p&gt;I&apos;ve added a patch to groovysh to allow for scripts to register new commands.&lt;br/&gt;
&lt;a href=&quot;http://jira.codehaus.org/browse/GROOVY-2778&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.codehaus.org/browse/GROOVY-2778&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But the argument parser leaves something to be desired, it tokenizes all the values after the command by whitespace and does not honor quotes. &lt;/p&gt;

&lt;p&gt;for example: cmd &quot;foo bar&quot;&lt;br/&gt;
would result in arg&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; == &apos;&quot;foo&apos; and arg&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; == &apos;bar&quot;&apos;&lt;/p&gt;

&lt;p&gt;Further I do not know if you can access shell variables from the command. Likely so, but isn&apos;t straightforward. the argument parser for sure doesn&apos;t resolve them. thus escaping shell variables into command arguments might be troublesome.&lt;/p&gt;</comment>
                            <comment id="12597560" author="stack" created="Fri, 16 May 2008 18:08:41 +0000"  >&lt;p&gt;An interesting shell framework (via Chris) &lt;a href=&quot;http://cwiki.apache.org/GSHELL/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/GSHELL/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12599252" author="stack" created="Fri, 23 May 2008 00:04:52 +0000"  >&lt;p&gt;Some requirements a discussion: &lt;a href=&quot;http://wiki.apache.org/hadoop/Hbase/Shell/Replacement&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/Hbase/Shell/Replacement&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12599255" author="stack" created="Fri, 23 May 2008 00:32:21 +0000"  >&lt;p&gt;I&apos;m thinking we should just check in the jruby jar and make the shell jirb now in advance of any DSL design.  Having it in place will allow us experiment.  What do others think?&lt;/p&gt;</comment>
                            <comment id="12599256" author="jdcryans" created="Fri, 23 May 2008 00:43:30 +0000"  >&lt;p&gt;+1 on that!&lt;/p&gt;</comment>
                            <comment id="12599257" author="jimk" created="Fri, 23 May 2008 01:04:12 +0000"  >&lt;p&gt;&amp;gt; stack - 22/May/08 05:32 PM&lt;br/&gt;
&amp;gt; I&apos;m thinking we should just check in the jruby jar and make the shell jirb now in advance of any DSL&lt;br/&gt;
&amp;gt; design. Having it in place will allow us experiment. What do others think?&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12599260" author="bryanduxbury" created="Fri, 23 May 2008 01:17:17 +0000"  >&lt;p&gt;+1 on that.&lt;/p&gt;</comment>
                            <comment id="12599262" author="dysinger" created="Fri, 23 May 2008 01:32:58 +0000"  >&lt;p&gt;+1 from me.&lt;/p&gt;

&lt;p&gt;Add in some more small ruby code and you&apos;ll have yourself a DSL.&lt;/p&gt;

&lt;p&gt;Just take the code from this project&apos;s lib dir and stick it into a jar next to jruby.&lt;/p&gt;

&lt;p&gt;Check out the examples for mail.rb and others.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dslkit.rubyforge.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dslkit.rubyforge.org/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12599273" author="stack" created="Fri, 23 May 2008 04:46:41 +0000"  >&lt;p&gt;I&apos;ll add in the jar then.&lt;/p&gt;

&lt;p&gt;Tim, that dslkit is GPL so I can&apos;t check it in (Looks good though... )&lt;/p&gt;</comment>
                            <comment id="12599286" author="stack" created="Fri, 23 May 2008 06:22:40 +0000"  >&lt;p&gt;I added the jar and made it so that when you do &apos;./bin/hbase shell&apos;, you now get raw jirb.   While I was at it, I purged hql.  First order of business I&apos;d say is changing prompt from &apos;jirb&apos; to &apos;hbase&apos;.&lt;/p&gt;</comment>
                            <comment id="12599390" author="bryanduxbury" created="Fri, 23 May 2008 14:52:03 +0000"  >&lt;p&gt;Ok, I finally found 15 minutes in which to write the dsl spec I&apos;ve been promising. Here it is!&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
--General--
help
  Get a list of all possible commands

help [cmd]
  Get deeper help on a specific command

--Admin--

list
  List all the currently existing tables (and their status?)
  
create name, colfam_spec [, colfam_spec ...], [table_opts]
  Create a table.
  
drop name
  Delete a table
  
alter name [, colfam_spec ...] [, table_opts]
  Change an existing table&apos;s options or column families
  
enable name
  Enable a table
  
disable name
  Disable a table
  
truncate name
  Drop and recreate a table, effectively emptying it.
  
--DML--
get table_name, row_key [, &lt;span class=&quot;code-quote&quot;&gt;&quot;column_name&quot;&lt;/span&gt; ...]
  Return data from a row
  
put table_name, row_key [, timestamp], &lt;span class=&quot;code-quote&quot;&gt;&quot;column_name&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; value&quot;&lt;/span&gt;, ...
  Put some data to a row at the specific cells, optionally with a timestamp
  
scan table_name, start_key, end_key [, timestamp] [, &lt;span class=&quot;code-quote&quot;&gt;&quot;column_name&quot;&lt;/span&gt; ...]
  Perform a scan over the table from start_key to end_key optionally with a timestamp or specified columns.
  
delete table_name, row_key, [, timestamp], &lt;span class=&quot;code-quote&quot;&gt;&quot;column_name&quot;&lt;/span&gt;, ...
  Delete the data at the cells provided &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a given row

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12599419" author="dysinger" created="Fri, 23 May 2008 16:31:00 +0000"  >&lt;p&gt;I didn&apos;t notice the license on DSLKit.  Most Ruby code is BSD that I see.  Bummer.  &lt;/p&gt;</comment>
                            <comment id="12599431" author="stack" created="Fri, 23 May 2008 17:01:31 +0000"  >&lt;p&gt;&amp;gt; I didn&apos;t notice the license on DSLKit. &lt;/p&gt;

&lt;p&gt;np Tim.&lt;/p&gt;


&lt;p&gt;Bryan, how you think colfam_spec should be done?  As a dictionary so &apos;&lt;/p&gt;
{name: &quot;info&quot;, max_versions: 3...}
&lt;p&gt;&apos;?  Anything not explicitly listed gets the default.  Same for table opts?&lt;/p&gt;

&lt;p&gt;Alter needs to take add, delete, edit qualifiers.  What happens if you just want to edit a colum family only or table opts?  How&apos;s the parser figure your intent?&lt;/p&gt;

&lt;p&gt;Drop truncate I&apos;d say.  Maybe instead add describe table.  Let describe table return a result.  Make it so create table can take the result of a describe table.  How about also adding &apos;describe table columnfamily&apos; to get a column family listing?&lt;/p&gt;

&lt;p&gt;Regards &apos;get&apos;, can users specify regex for column name (not critical).  Its missing optional timestamp&lt;/p&gt;

&lt;p&gt;In the put, is &apos;=&amp;gt;&apos; the separator between value and cell address?  Should the timestampt be after column since it is optional.&lt;/p&gt;

&lt;p&gt;Whats output look like?  Hows it going to work?  How is it specified for a session?&lt;/p&gt;

&lt;p&gt;Otherwise, looks good.  Intent is to use verbs from current hbase API rather than sql-ese?&lt;/p&gt;
</comment>
                            <comment id="12599439" author="bryanduxbury" created="Fri, 23 May 2008 17:24:00 +0000"  >&lt;p&gt;For sure the simplest way to do the colfam spec would be to use JRuby hashes, which have the form of &lt;/p&gt;
{&quot;key&quot; =&amp;gt; &quot;value&quot;}
&lt;p&gt;. That&apos;s what the =&amp;gt; operator is used for. If that doesn&apos;t put people off, then I think it&apos;s what we should use for all *_spec objects in this dsl.&lt;/p&gt;

&lt;p&gt;Truncate can be a nice to have. I agree there should be a describe in general, so let&apos;s add that as the first step. &quot;describe table columnfamily&quot; seems redundant to me - let&apos;s just go with &quot;describe table&quot;, and you get the full table spec including columns.&lt;/p&gt;

&lt;p&gt;I think regex in get is a nice to have for the next version.&lt;/p&gt;

&lt;p&gt;Some sample output might look like (excuse the hacky ascii boxing):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
irb&amp;gt;get &lt;span class=&quot;code-quote&quot;&gt;&quot;my_table&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;colfam:name&quot;&lt;/span&gt;
+------------------+---------+
 | column           | value  |
+------------------+---------+
| colfam:name  | bryan  |
+------------------+---------+
Completed in 0.01 sec.
irb&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Mind you, the cool looking table would be the toString of whatever object was actually returned, which would probably be some wrapper around RowResult. What do you mean, how is it specified for a session?&lt;/p&gt;

&lt;p&gt;&amp;gt; Otherwise, looks good. Intent is to use verbs from current hbase API rather than sql-ese?&lt;br/&gt;
Yes, and this is very, very important distinction. The goal is to map as much of this shell as possible to the API, rather than trying to make it look like SQL. I want people to have to stop and think at least a little about the differences, rather than just assuming off the bat there&apos;s some magical SELECT verb that takes care of everything.&lt;/p&gt;</comment>
                            <comment id="12599445" author="stack" created="Fri, 23 May 2008 17:41:11 +0000"  >&lt;p&gt;I&apos;m fine w/ ruby hashes.  Fine also w/ no describe table_name col_family in first version.  Same for regex.&lt;/p&gt;

&lt;p&gt;Your output is missing row spec.  Or, outputting in hql, if row was specified in query, I would output just column and cell &amp;#8211; no rowspec &amp;#8211; but when say, scanning, then you needed the three rows.  Also missing is timestamp (Now its available, lets add it to output)&lt;/p&gt;

&lt;p&gt;In hql, you could specify a table formatter.  There were two types: ascii table and xhtml (Former was default; latter was used outputting content in the hql ui page and often useful when you needed to parse a big result).  Going forward we should be able to add other formatter types and formatters (no formatting with tab delimiters, no column headers, json, etc.)  At least ascii and probably xhtml are needed in the first version I&apos;d say.&lt;/p&gt;

&lt;p&gt;Would suggest you clean up your proposal and put it up on &lt;a href=&quot;http://wiki.apache.org/hadoop/Hbase/Shell/Replacement&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/Hbase/Shell/Replacement&lt;/a&gt; or into a new page.  Add your distinction between hql and this dsl somewhere as a bolded design dictate.&lt;/p&gt;</comment>
                            <comment id="12599538" author="stack" created="Fri, 23 May 2008 23:21:59 +0000"  >&lt;p&gt;Patch that adds src/ruby and a first attempt at an HBase.rb module with basic imports and &apos;import Java&apos; statement.  Changes in build.xml add the src/ruby content to the root of the hbase-X.X.X.jar.  I tried usring -r module_name to the irb invocation but looks like CLASSLOADER issues... our modules can&apos;t be found on irb invocation (I&apos;d guess only finds stuff in the jruby jar).&lt;/p&gt;

&lt;p&gt;Seems too that we need to figure how to get an irbrc into the mix.  In here we can define the prompt among other things.  Do it in a manner that can be overridden; e.g. in an irb.rc that can be found on irb load so users&apos; .irbrc override ours.&lt;/p&gt;</comment>
                            <comment id="12599560" author="stack" created="Sat, 24 May 2008 04:47:06 +0000"  >&lt;p&gt;This patch adds a module named HBase.rb to $HBASE_HOME/bin.  It then adds &apos;-r $HBASE_HOME/bin/HBase.rb&apos; to the irb invocation.  The module runs the magic &apos;include Java&apos; invocation, imports basic HBase types, sets the prompt, and then has defines for &apos;help&apos; and &apos;version&apos;.  Here&apos;s how it looks currently:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
durruti:~/Documents/checkouts/trunk stack$ ./bin/hbase shell
irb: warn: can&apos;t alias help from irb_help.
hbase(main):001:0&amp;gt; help
HBase Shell Commands:
 version   Output the hbase version
 ...
=&amp;gt; nil
hbase(main):002:0&amp;gt; version
TODO: 0.2.x
=&amp;gt; nil
hbase(main):003:0&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There&apos;s some namespace issue that needs to be fixed &amp;#8211; the &apos;irb: warn: can&apos;t alias help from irb_help&apos;.  Need to fix the &apos;=&amp;gt; nil&apos; return too.&lt;/p&gt;

&lt;p&gt;This HBase.rb looks like could be place to put the hbase DSL.&lt;/p&gt;

&lt;p&gt;We could use this and the src/ruby dir.  The latter could hold fat ruby scripts or debugging code (if its findable on CLASSPATH from jirb).&lt;/p&gt;</comment>
                            <comment id="12599628" author="stack" created="Sat, 24 May 2008 21:50:53 +0000"  >&lt;p&gt;Here&apos;s post on the &apos;alias help from irb_help&apos;: &lt;a href=&quot;http://www.koders.com/noncode/fid545E597E7FE131466FB0DFC081EB6FFB30D89DD7.aspx&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.koders.com/noncode/fid545E597E7FE131466FB0DFC081EB6FFB30D89DD7.aspx&lt;/a&gt;  Says just ignore it!&lt;/p&gt;</comment>
                            <comment id="12601013" author="stack" created="Fri, 30 May 2008 05:18:33 +0000"  >&lt;p&gt;Committed last patch.  Just emits a help with nothing in it but the version command.  Version command does the right thing.   There is the annoying &quot;can&apos;t aliase help from irb_help&quot; but hopefully can figure how to fix that&lt;/p&gt;</comment>
                            <comment id="12601430" author="bryanduxbury" created="Sun, 1 Jun 2008 00:51:57 +0000"  >&lt;p&gt;Here&apos;s an improved version of bin/hbase and hirb.rb that gives us more control. I still haven&apos;t gotten rid of the stupid warn about realiasing of help, but I&apos;m confident it is gettable.&lt;/p&gt;</comment>
                            <comment id="12601437" author="stack" created="Sun, 1 Jun 2008 05:20:37 +0000"  >&lt;p&gt;Committed Bryan&apos;s improvements.  The &quot;can&apos;t alias help&quot; message is back but its after the banner message.  I&apos;d guess most folks won&apos;t even notice it.  Its ok for now.  Bryan&apos;s work will give us first hack at the command-line args before passing to irb.&lt;/p&gt;</comment>
                            <comment id="12603290" author="stack" created="Sat, 7 Jun 2008 05:43:04 +0000"  >&lt;p&gt;Added formatter ruby module under bin.  Added handling of command-line args.&lt;/p&gt;</comment>
                            <comment id="12604742" author="stack" created="Fri, 13 Jun 2008 05:51:27 +0000"  >&lt;p&gt;Basic DDL and general help is in place.  CRUD is TODO.&lt;/p&gt;</comment>
                            <comment id="12605780" author="stack" created="Tue, 17 Jun 2008 23:56:23 +0000"  >&lt;p&gt;New commit on this issue.  Comments below.  All methods are in place as of this commit.  Need to do a little more testing before closing.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
M  src/test/org/apache/hadoop/hbase/TestBloomFilters.java
  Constant named changed From DEFAULT_MAX_VALUE_LENGTH to DEFAULT_LENGTH
M  src/java/org/apache/hadoop/hbase/HColumnDescriptor.java
  Changed MAX_LENGTH to LENGTH and dropped MAX from DEFAULT_MAX_LENGTH
M src/java/org/apache/hadoop/hbase/HConstants.java
  Added NAME and VERSIONS
M  src/java/org/apache/hadoop/hbase/regionserver/HStore.java
  Make the delete of data file recursive; when its not, just fails because
  data file exists
M  src/java/org/apache/hadoop/hbase/regionserver/NoSuchColumnFamilyException.java
  Don&apos;t retry these exceptions.
M  src/java/org/apache/hadoop/hbase/HRegionInfo.java
  NAME define moved to HConstants
M  src/java/org/apache/hadoop/hbase/master/TableOperation.java
  Pass &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; to TNFE rather than &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; array.
M  src/java/org/apache/hadoop/hbase/io/Cell.java
  Add constructor that takes a &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;
M  src/java/org/apache/hadoop/hbase/io/BatchOperation.java
  Add Constructor that takes &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;
M  src/java/org/apache/hadoop/hbase/client/HTable.java
  Add timestamp argument to the deleteFamily methods.
M  src/java/org/apache/hadoop/hbase/client/HConnectionManager.java
  toString &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; arrays in exception construction
M  bin/HBase.rb
  Moved java includes here out of hirb.
  Added bunch of defines.
  Added implementations &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; scan, delete*, put, get, etc.  
  Added little test suite.
M  bin/Formatter.rb
  Fixup.
M  bin/hirb.rb
  Filled out help and filled out missing methods.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12606066" author="stack" created="Wed, 18 Jun 2008 20:00:46 +0000"  >&lt;p&gt;Closing.  Thing basically works and is as good/bad as what its replacing.  There are holes in the shell I&quot;m sure but we can create new issues to fix.  Added some doc. up on wiki page.  &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12393466">HBASE-570</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12383617" name="487-added-formatter.patch" size="4125" author="stack" created="Sat, 7 Jun 2008 05:43:04 +0000"/>
                            <attachment id="12383181" name="better-hirb.patch" size="3401" author="bryanduxbury" created="Sun, 1 Jun 2008 00:51:57 +0000"/>
                            <attachment id="12380246" name="groovy-2.patch" size="34701" author="stack" created="Wed, 16 Apr 2008 05:17:51 +0000"/>
                            <attachment id="12379205" name="groovy.patch" size="3271" author="stack" created="Thu, 3 Apr 2008 00:00:03 +0000"/>
                            <attachment id="12380430" name="jruby.patch" size="1120" author="stack" created="Thu, 17 Apr 2008 18:30:09 +0000"/>
                            <attachment id="12382710" name="module_in_bin.patch" size="1430" author="stack" created="Sat, 24 May 2008 04:47:06 +0000"/>
                            <attachment id="12382703" name="rb.patch" size="2332" author="stack" created="Fri, 23 May 2008 23:21:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 4 Mar 2008 06:10:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31725</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 27 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d4br:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74477</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>