<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:22:10 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11331/HBASE-11331.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11331] [blockcache] lazy block decompression</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11331</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Maintaining data in its compressed form in the block cache will greatly increase our effective blockcache size and should show a meaning improvement in cache hit rates in well designed applications. The idea here is to lazily decompress/decrypt blocks when they&apos;re consumed, rather than as soon as they&apos;re pulled off of disk.&lt;/p&gt;

&lt;p&gt;This is related to but less invasive than &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12720693">HBASE-11331</key>
            <summary>[blockcache] lazy block decompression</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ndimiduk">Nick Dimiduk</assignee>
                                    <reporter username="ndimiduk">Nick Dimiduk</reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Jun 2014 20:54:23 +0000</created>
                <updated>Sat, 21 Feb 2015 23:34:16 +0000</updated>
                            <resolved>Wed, 10 Sep 2014 23:11:26 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>0.98.7</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                <comments>
                            <comment id="14028384" author="ndimiduk" created="Wed, 11 Jun 2014 20:57:03 +0000"  >&lt;p&gt;Here&apos;s a patch with small tests passing. Will start playing with PerfEval and report back.&lt;/p&gt;</comment>
                            <comment id="14028512" author="hadoopqa" created="Wed, 11 Jun 2014 22:38:21 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12649880/HBASE-11331.00.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12649880/HBASE-11331.00.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12649880&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 24 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestMultiColumnScanner&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileGetting(TestHRegion.java:3499)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9747//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14028647" author="stack" created="Thu, 12 Jun 2014 00:26:45 +0000"  >&lt;p&gt;Looks great to me &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;  I am decompressing every time I read from a block rather than as we have now where we decompress once and that is what is in the blockcache?  Will be interesting to see how this does compared.  May show that this should be optional behavior (we give up CPU here... we need to start winning it back elsewhere).&lt;/p&gt;</comment>
                            <comment id="14030586" author="anoop.hbase" created="Fri, 13 Jun 2014 12:50:32 +0000"  >&lt;p&gt;Not decrypting gives (so much) size save?&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;decompressing every time I read from a block rather than as we have now where we decompress once &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ya a concerning factor and +1 for making it configurable.&lt;/p&gt;</comment>
                            <comment id="14030948" author="vrodionov" created="Fri, 13 Jun 2014 18:17:43 +0000"  >&lt;p&gt;These two statements contradict each other:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Maintaining data in its compressed form in the block cache will greatly increase our effective blockcache size and should show a meaning improvement in cache hit rates in well designed applications.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The idea here is to lazily decompress/decrypt blocks when they&apos;re consumed, rather than as soon as they&apos;re pulled off of disk.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You either keep blocks compressed in a cache and decompress them on demand (1) or you decompress them lazily and keep them decompressed after that (2). What does &quot;lazy decompression&quot; means in this case? If you cache blocks on reads only (most of the time and default behavior) - there is no much sense in a lazy decompression, because your  block will be accessed immediately after it got into the cache. Lazy decompression makes sense only if you cache blocks on writes, but in this case (2) contradicts (1)  as I mentioned already.&lt;/p&gt;</comment>
                            <comment id="14030968" author="ndimiduk" created="Fri, 13 Jun 2014 18:31:36 +0000"  >&lt;p&gt;In this implementation, the decompressed block does not replace the compressed block in the cache. Decompression cost is paid on block access, every time. I need to profile the scanner path to ensure a single request is not decompressing the same block multiple times. For hot blocks, I expect this to result in increased CPU load vs decompressing it only once. For a more evenly distributed access pattern, this should greatly reduce the amount of disk seeks because more data is cached. I believe the latter use-case is more common.&lt;/p&gt;</comment>
                            <comment id="14030986" author="vrodionov" created="Fri, 13 Jun 2014 18:47:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;, where do you keep decompressed blocks? In a fast on heap cache? You do not have to decompress block every time you access it - only once and all subsequent scanner.next will read from decompressed block. Sorry, I am not following you here.&lt;/p&gt;</comment>
                            <comment id="14031002" author="vrodionov" created="Fri, 13 Jun 2014 18:58:20 +0000"  >&lt;p&gt;In my own tests I have seen performance drop from ~ 100K to 75K ops with compression on. This is with a custom LZ4 codec and YMMV. I think 20-25% penalty is not that big  to justify uncompressed mode of operation. In many cases, having more data in a cache is much more important than peak performance. &lt;/p&gt;</comment>
                            <comment id="14031006" author="ndimiduk" created="Fri, 13 Jun 2014 19:01:58 +0000"  >&lt;p&gt;Decompressed blocks aren&apos;t stored anywhere in the patch posted. This patch, just as current master code, decompressed an HFileBlock into an on-heap ByteBuffer. There&apos;s no additional cache layer for decompressed blocks as it stands currently; they&apos;re decompressed, consumed, and thrown away. HFileReaderV2$AbstractScannerV2 keeps a reference to the current block, so a single GET shouldn&apos;t pay the cost of decompression multiple times, but I need to confirm this is true.&lt;/p&gt;</comment>
                            <comment id="14031009" author="ndimiduk" created="Fri, 13 Jun 2014 19:03:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;In many cases, having more data in a cache is much more important than peak performance.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We are in complete agreement on this point.&lt;/p&gt;</comment>
                            <comment id="14037824" author="stack" created="Thu, 19 Jun 2014 20:28:31 +0000"  >&lt;p&gt;How feasible keeping count of how many times a block has been decompressed and if over a configurable threshold, instead shove the decompressed block back into the block cache in place of the compressed one?   We already count if been accessed more than once?  Could we leverage this fact?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is related to but less invasive than &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Would a better characterization be that this is a core piece of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt; only done more in line w/ how hbase master branch works now (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt; interjects a special-case handling of its L2 cache when reading blocks from HDFS... This makes do without special interjection).&lt;/p&gt;</comment>
                            <comment id="14050892" author="stack" created="Thu, 3 Jul 2014 00:07:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;How feasible keeping count of how many times a block has been decompressed and if over a configurable threshold, instead shove the decompressed block back into the block cache in place of the compressed one?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Or, if hot, move the decompressed and decoded block up into L1?&lt;/p&gt;</comment>
                            <comment id="14052680" author="stack" created="Fri, 4 Jul 2014 21:37:08 +0000"  >&lt;p&gt;Report comparing compressed to uncompressed bucket cache.  Finding is slightly less i/o but at the cost of lots more GC and CPU.  Get rate goes way down too.&lt;/p&gt;</comment>
                            <comment id="14073878" author="ndimiduk" created="Fri, 25 Jul 2014 00:10:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;How feasible keeping count of how many times a block has been decompressed and if over a configurable threshold, instead shove the decompressed block back into the block cache in place of the compressed one? We already count if been accessed more than once? Could we leverage this fact?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I like it. Do you think that&apos;s necessary for this feature, or an acceptable follow-on JIRA?&lt;/p&gt;</comment>
                            <comment id="14073883" author="ndimiduk" created="Fri, 25 Jul 2014 00:13:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;Or, if hot, move the decompressed and decoded block up into L1?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This sounds like a feature to add to CombinedCache. Can blocks become &quot;less hot&quot; and be demoted back down to a compressed state in L2, or is promotion a one-way street? I guess regular block eviction will take care of this naturally.&lt;/p&gt;</comment>
                            <comment id="14075169" author="ndimiduk" created="Sat, 26 Jul 2014 00:41:46 +0000"  >&lt;p&gt;Rebased to master, fixed most tests in io.hfile.*&lt;/p&gt;</comment>
                            <comment id="14075225" author="stack" created="Sat, 26 Jul 2014 02:04:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do you think that&apos;s necessary for this feature, or an acceptable follow-on JIRA?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Follow-on.&lt;/p&gt;

&lt;p&gt;Trying your latest patch.  Will make new report with more variety to it.&lt;/p&gt;</comment>
                            <comment id="14075233" author="stack" created="Sat, 26 Jul 2014 02:42:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; IMO, this can&apos;t be on by default given the report previous.  Benefit is not enough.  Will post a new report in next few days but think the benefit vs cost will be about same; tilted against.&lt;/p&gt;</comment>
                            <comment id="14075234" author="stack" created="Sat, 26 Jul 2014 02:42:49 +0000"  >&lt;p&gt;bq ....tilted against.&lt;/p&gt;

&lt;p&gt;... it being on by default.  For some use cases enabling it will make sense but not general case.&lt;/p&gt;</comment>
                            <comment id="14075297" author="stack" created="Sat, 26 Jul 2014 07:40:18 +0000"  >&lt;p&gt;Seeing this... trying to figure it in client:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;2014-07-26 00:38:46,924 DEBUG [IPC Client (1094864774) connection to c2021.halxg.cloudera.com/10.20.84.27:16020 from stack] ipc.RpcClient: IPC Client (1094864774) connection to c2021.halxg.cloudera.com/10.20.84.27:16020 from stack: got response header call_id: 1102 exception { exception_class_name: &lt;span class=&quot;code-quote&quot;&gt;&quot;java.io.IOException&quot;&lt;/span&gt; stack_trace: &lt;span class=&quot;code-quote&quot;&gt;&quot;java.io.IOException\n\tat org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2047)\n\tat org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:98)\n\tat org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:114)\n\tat org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:94)\n\tat java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:744)\nCaused by: java.lang.ArrayIndexOutOfBoundsException\n\tat org.apache.hadoop.hbase.io.hfile.HFileBlock.unpack(HFileBlock.java:498)\n\tat org.apache.hadoop.hbase.io.hfile.HFileReaderV2.getCachedBlock(HFileReaderV2.java:270)\n\tat org.apache.hadoop.hbase.io.hfile.HFileReaderV2.readBlock(HFileReaderV2.java:424)\n\tat org.apache.hadoop.hbase.io.hfile.HFileBlockIndex$BlockIndexReader.loadDataBlockWithScanInfo(HFileBlockIndex.java:260)\n\tat org.apache.hadoop.hbase.io.hfile.HFileReaderV2$AbstractScannerV2.seekTo(HFileReaderV2.java:644)\n\tat org.apache.hadoop.hbase.io.hfile.HFileReaderV2$AbstractScannerV2.reseekTo(HFileReaderV2.java:624)\n\tat org.apache.hadoop.hbase.regionserver.StoreFileScanner.reseekAtOrAfter(StoreFileScanner.java:251)\n\tat org.apache.hadoop.hbase.regionserver.StoreFileScanner.reseek(StoreFileScanner.java:176)\n\tat org.apache.hadoop.hbase.regionserver.NonLazyKeyValueScanner.doRealSeek(NonLazyKeyValueScanner.java:55)\n\tat org.apache.hadoop.hbase.regionserver.KeyValueHeap.generalizedSeek(KeyValueHeap.java:312)\n\tat org.apache.hadoop.hbase.regionserver.KeyValueHeap.requestSeek(KeyValueHeap.java:268)\n\tat org.apache.hadoop.hbase.regionserver.StoreScanner.reseek(StoreScanner.java:721)\n\tat org.apache.hadoop.hbase.regionserver.StoreScanner.seekAsDirection(StoreScanner.java:709)\n\tat org.apache.hadoop.hbase.regionserver.StoreScanner.next(StoreScanner.java:559)\n\tat org.apache.hadoop.hbase.regionserver.KeyValueHeap.next(KeyValueHeap.java:139)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.populateResult(HRegion.java:4002)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.nextInternal(HRegion.java:4082)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.nextRaw(HRegion.java:3951)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.next(HRegion.java:3933)\n\tat org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.next(HRegion.java:3920)\n\tat org.apache.hadoop.hbase.regionserver.HRegion.get(HRegion.java:4865)\n\tat org.apache.hadoop.hbase.regionserver.HRegion.get(HRegion.java:4838)\n\tat org.apache.hadoop.hbase.regionserver.RSRpcServices.get(RSRpcServices.java:1619)\n\tat org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:29990)\n\tat org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2013)\n\t... 4 more\n&quot;&lt;/span&gt; do_not_retry: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; }, totalSize: 2735 bytes&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14083242" author="ndimiduk" created="Sat, 2 Aug 2014 00:25:39 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;. v02 addresses the exception you see here. It also:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;makes the feature configurable. enable with &lt;tt&gt;hbase.block.data.cachecompressed=true&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;only retains data blocks in their &quot;packed&quot; format in memory. Everything else &lt;b&gt;should&lt;/b&gt; be cached decompressed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;One observation: when running the RS with a compression-enabled table, I see a lot of log messages says &quot;got brand-new decompressor&quot;. I don&apos;t see any messages saying &quot;got recycled compressor&quot; (i&apos;ve enabled debug logging for org.apache.hadoop.io.compress). I think we&apos;re not returning the objects to the pool. Running this small PE workload results in ~1600 said log lines. Run the same workload with hbase.block.data.cachecompressed=true, I see ~10k, so this will have a significant impact on the performance of this feature. Will investigate further.&lt;/p&gt;</comment>
                            <comment id="14083268" author="ndimiduk" created="Sat, 2 Aug 2014 01:11:32 +0000"  >&lt;p&gt;Looks like the lack of compressor reuse is a known issue, somewhere between &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5881&quot; title=&quot;BuiltIn Gzip compressor &amp;amp; decompressor not getting pooled, leading to native memory leak&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5881&quot;&gt;&lt;del&gt;HBASE-5881&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7435&quot; title=&quot;BuiltInGzipDecompressor is only released during full GC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7435&quot;&gt;&lt;del&gt;HBASE-7435&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-9171&quot; title=&quot;Release resources of unpoolable Decompressors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-9171&quot;&gt;&lt;del&gt;HADOOP-9171&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14087037" author="ndimiduk" created="Wed, 6 Aug 2014 00:42:42 +0000"  >&lt;p&gt;re: lazy-decompress.02.0.pdf&lt;/p&gt;

&lt;p&gt;Attaching some metrics after running v02 with the new flag enabled/disabled.&lt;/p&gt;

&lt;p&gt;The test cluster is a single machine, configured with 12g heap and 0.6 for blockcache, so slighly over 7g mem available for cache. The TestTable is snappy compressed, written with PE --size=100. Shell &lt;tt&gt;status &apos;simple&apos;&lt;/tt&gt; reports &lt;tt&gt;compressionRatio=0.2437&lt;/tt&gt;. RandomRead test is run with --size=25, so with feature enabled, we should be at ~6g of compressed blocks.&lt;/p&gt;
&lt;h3&gt;&lt;a name=&quot;clientperceivedperf&quot;&gt;&lt;/a&gt;client perceived perf&lt;/h3&gt;
&lt;p&gt;With flag=false, I see slightly higher throughput (~7.5k vs ~8k) and slightly less gc (360ms vs 325ms).&lt;/p&gt;
&lt;h3&gt;&lt;a name=&quot;systemload&quot;&gt;&lt;/a&gt;system load&lt;/h3&gt;
&lt;p&gt;CPU load looks slightly higher with flag=true (user time diff is negligible, system time more noticeable, no difference in iowait).&lt;/p&gt;
&lt;h3&gt;&lt;a name=&quot;blockcacheutilization&quot;&gt;&lt;/a&gt;blockcache utilization&lt;/h3&gt;
&lt;p&gt;There are definitely cache evictions happening with flag=false that do not happen with flag=true. The number of blocks cached is definitely higher with flag=true (~17.5k vs ~21.5k).&lt;/p&gt;
&lt;h3&gt;&lt;a name=&quot;IO&quot;&gt;&lt;/a&gt;IO&lt;/h3&gt;
&lt;p&gt;No difference in reported IO requests. Probably it&apos;s the OS buffer cache to the rescue here.&lt;/p&gt;</comment>
                            <comment id="14087060" author="ndimiduk" created="Wed, 6 Aug 2014 01:07:56 +0000"  >&lt;p&gt;Looks like I have about 10g used as disk cache. Will run the workloads again with RS heap increased to 20g.&lt;/p&gt;</comment>
                            <comment id="14087200" author="hadoopqa" created="Wed, 6 Aug 2014 03:41:04 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12659287/HBASE-11331.02.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12659287/HBASE-11331.02.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12659287&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 36 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestIOFencing&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestReplicasClient&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRestartCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10308//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14088111" author="ndimiduk" created="Wed, 6 Aug 2014 19:36:05 +0000"  >&lt;p&gt;re: lazy-decompress.02.1.pdf&lt;/p&gt;

&lt;p&gt;Attaching some metrics after running v02 with less os page cache and feature enabled/disabled.&lt;/p&gt;

&lt;p&gt;This time the total RS heap is increased to 20g, so the effective blockcache size is ~12g. The machine has 24g of RAM, so this squeezes the OS-available memory down to ~4g &amp;#8211; when the blockcache is full. I&apos;ve added blockcache size and OS page cache to the charts  Same table, same compression ratio, same PE randomRead test, this time run with --size=45, so I expect ~11g of compressed blocks.&lt;/p&gt;

&lt;p&gt;I expected this to be an IO-bound workload with flag=false but to be cache-at-capacity for flag=true. The massive evictions look to me like the blockcache heapsize calculation is based on the decompressed size, not compressed size. Updating patch.&lt;/p&gt;</comment>
                            <comment id="14088136" author="stack" created="Wed, 6 Aug 2014 19:55:32 +0000"  >&lt;p&gt;Any chance of our fixing compressor reuse. As you say, I&apos;d imagine it&apos;d mess up any possibility of nice  numbers when this feature enabled.  I&apos;m game to rerun test when you say its ready.  That a fancy graph tool on front a tsdb? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;?  Nice graphs.&lt;/p&gt;</comment>
                            <comment id="14088193" author="ndimiduk" created="Wed, 6 Aug 2014 20:26:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;Any chance of our fixing compressor reuse.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll look into it. If anything, it&apos;ll be a separate ticket.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;m game to rerun test when you say its ready.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hold off on rerunning until I verify/refute my hypothesis on the blockcache heapsize stuff.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Nice graphs&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Awe shucks, thanks boss. This is Grafana running on top of OpenTSDB. No offense, but I find it nicer to use these dashboards than the gnuplot stuff we get otherwise. I&apos;m still learning it, but I&apos;ll attach the dashboard json file I used to make the latest figures.&lt;/p&gt;</comment>
                            <comment id="14088196" author="ndimiduk" created="Wed, 6 Aug 2014 20:27:02 +0000"  >&lt;p&gt;Attach lazy-decompress.02.1.json, used with grafana 1.7rc for the legend aliasing.&lt;/p&gt;</comment>
                            <comment id="14088271" author="apurtell" created="Wed, 6 Aug 2014 21:16:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Grafana running on top of OpenTSDB&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Very nice. Is there a way to autogen the JSON? Pardon for hijacking the issue.&lt;/p&gt;</comment>
                            <comment id="14088436" author="ndimiduk" created="Wed, 6 Aug 2014 23:07:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is there a way to autogen the JSON?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The json file I attached was exported from Grafana; I did not build it in a text editor. It&apos;s UI starts with a black dashboard and you add to it the rows and column with metrics you want. Probably I&apos;m not explaining it well; I&apos;ll leave it to grafana.org/docs&lt;/p&gt;</comment>
                            <comment id="14103307" author="ndimiduk" created="Wed, 20 Aug 2014 03:08:08 +0000"  >&lt;p&gt;Parking an updated patch. Rebased onto master, adds a bit of instrumentation to LruBlockCache when TRACE debugging is enabled, and adds an e2e test comparing directly the flag enabled and disabled. The only testing I&apos;ve done with this one is &lt;tt&gt;mvn test -Dtest=org.apache.hadoop.hbase.io.hfile.*&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ve not been able to reproduce the jagged blockcache size spikes in recent runs. I&apos;ll take this patch through the ringer with my rig tomorrow, and report back with my findings.&lt;/p&gt;</comment>
                            <comment id="14103311" author="ndimiduk" created="Wed, 20 Aug 2014 03:11:21 +0000"  >&lt;p&gt;Adding a RB link since the patch has passed 100k. &lt;a href=&quot;https://reviews.apache.org/r/24880/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/24880/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14105615" author="ndimiduk" created="Thu, 21 Aug 2014 17:16:13 +0000"  >&lt;p&gt;Sharing some more test results. These are running PerfEval randomRead test on a single machine cluster deployment. The RS gets a 20g heap out of 24g available on the box. Table is snappy compressed. The idea is to demonstrate a best-case scenario for this patch: you have enough ram for the whole compressed data set, but not after decompressed. The &lt;tt&gt;true&lt;/tt&gt; run below shows some IO wait, so I may have the math on the compression ratio slightly off.&lt;/p&gt;

&lt;p&gt;Values in this table come from the &quot;average&quot; values reported on the attached screen shots. I&apos;ve chosen some of the more critical metrics, but it&apos;s all there for reference. Let me know if there&apos;s a metric I&apos;m missing, I can add it to the report (if OpenTSDB collects it, that is).&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;hbase.block.data.cachecompressed=false&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;hbase.block.data.cachecompressed=true&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;delta&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.Get_num_ops&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;423&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4.93k&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;1065%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.Get_mean&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;19.14 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.00 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;-94%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.Get_99th_percentile&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;182.58 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;33.17 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;-81%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.jvmmetrics.GcTimeMillis&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;27.73 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;401.16 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;1346%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;proc.loadavg.1min&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11.55&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;7.82&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;-32%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;proc.stat.cpu.percpu
{type=iowait}&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;358.43&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;211.83&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;-40%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.blockCacheCount&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;181.66k&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;722.55k&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;297%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</comment>
                            <comment id="14105617" author="ndimiduk" created="Thu, 21 Aug 2014 17:17:38 +0000"  >&lt;p&gt;Previous comment is re: v03-20g-045g-false.pdf, v03-20g-045g-true.pdf&lt;/p&gt;</comment>
                            <comment id="14105622" author="ndimiduk" created="Thu, 21 Aug 2014 17:19:00 +0000"  >&lt;p&gt;I&apos;m now investigating those heart-beat looking GC spikes in the compressed=true graphs.&lt;/p&gt;</comment>
                            <comment id="14105635" author="vrodionov" created="Thu, 21 Aug 2014 17:26:34 +0000"  >&lt;p&gt;The standard YCSB is very friendly to compressed block cache (especially, with zipfian data access pattern). Just to let you know, Nick. &lt;/p&gt;</comment>
                            <comment id="14105865" author="ndimiduk" created="Thu, 21 Aug 2014 19:59:52 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; I think PE has zipfian now too (or maybe that&apos;s just the value size?). I&apos;ll take a look at YCSB, thanks.&lt;/p&gt;</comment>
                            <comment id="14105880" author="ndimiduk" created="Thu, 21 Aug 2014 20:15:33 +0000"  >&lt;p&gt;re: v03-20g-045g-true-16h.pdf&lt;/p&gt;

&lt;p&gt;I baked this patch overnight (16h + some warmup) with compress=true. Same --size=45. Things look stable.&lt;/p&gt;</comment>
                            <comment id="14105888" author="ndimiduk" created="Thu, 21 Aug 2014 20:18:53 +0000"  >&lt;p&gt;Interesting that proc.loadavg.1min decreases even though we know there&apos;s more decompress operations happening and the gc activity increases. Maybe that measurement includes iowait?&lt;/p&gt;</comment>
                            <comment id="14105976" author="ndimiduk" created="Thu, 21 Aug 2014 21:16:30 +0000"  >&lt;p&gt;Attaching patch addressing rb feedback.&lt;/p&gt;</comment>
                            <comment id="14106147" author="stack" created="Thu, 21 Aug 2014 23:29:19 +0000"  >&lt;p&gt;You figure the compressor issue, our not reusing them?&lt;/p&gt;

&lt;p&gt;13x the GC because we are doing 10x the throughput is fair enough.  All other numbers are very nice.&lt;/p&gt;

&lt;p&gt;This is best case (when =false, we are seeking? Or is it always inside fscache?)&lt;/p&gt;

&lt;p&gt;What is the &apos;cost&apos; keeping stuff compressed? What if you do a run where all fits in cache, for both cases?&lt;/p&gt;</comment>
                            <comment id="14106148" author="ndimiduk" created="Thu, 21 Aug 2014 23:29:56 +0000"  >&lt;p&gt;I&apos;ve tripped my assertions around blockcache count metrics. Updating the patch to print more details. Will file a separate ticket once I understand what&apos;s happening here.&lt;/p&gt;</comment>
                            <comment id="14106165" author="ndimiduk" created="Thu, 21 Aug 2014 23:41:06 +0000"  >&lt;p&gt;Thanks for having a look &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You figure the compressor issue, our not reusing them?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve punted on the compressor is a non-issue, but I haven&apos;t run with a profiler yet. I think it was related to the non-native gz impl while running locally. I&apos;ll re-enable tracing there as well with the next runs and see what I see.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is best case (when =false, we are seeking? Or is it always inside fscache?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, this configuration is targeting a best case for this patch. The fscache is minimized with this config, seems to stay down around 3.5g (vs 11.5g blockcache). Compression ratio is reported as 0.2437, so --size=45 should be ~11g compressed &amp;#8211; larger than the fscache. Because the PE test is random, I believe we&apos;ll be thrashing the fscache with both =true and =false. The iowait charts indicate both configs are doing io constantly, just more with =false (as expected).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What is the &apos;cost&apos; keeping stuff compressed? What if you do a run where all fits in cache, for both cases?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m testing a couple more scenarios, this one was already on the list.&lt;/p&gt;</comment>
                            <comment id="14106221" author="hadoopqa" created="Fri, 22 Aug 2014 00:14:18 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12663549/HBASE-11331.05.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12663549/HBASE-11331.05.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12663549&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 44 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 7 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +            LOG.trace(&quot;freed &quot; + StringUtils.byteDesc(bytesFreed) + &quot; from single and multi buckets&quot;);&lt;br/&gt;
+            LOG.trace(&quot;freed &quot; + StringUtils.byteDesc(bytesFreed) + &quot; total from all three buckets &quot;);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestImportTsv.testMROnTable(TestImportTsv.java:113)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10521//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14107368" author="ndimiduk" created="Fri, 22 Aug 2014 19:40:56 +0000"  >&lt;p&gt;As best as I can tell, both of these configurations stay entirely in BlockCache. Verified by looking at the RS BlockCache stats and confirmed by the low iowait stat being basically flat for them both. Looks like enabling this feature when it&apos;s not needed is quite expensive.&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;=false, 11g&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;=true, 40g&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;delta&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.Get_num_ops&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15.15 k&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;6.07 k&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;-60%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.Get_mean&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.00 ns&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 0.00 ns&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;0%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.Get_99th_percentile&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.00 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;22.65 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;2165%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.jvmmetrics.GcTimeMillis&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;48.89 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;441.33 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;802%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;proc.loadavg.1min&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.56&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.25&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;480%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;proc.stat.cpu.percpu
{type=iowait}&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.55&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.47&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;-2%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.blockCacheCount&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;181.75 k&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;666.44 k&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;266%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</comment>
                            <comment id="14107587" author="ndimiduk" created="Fri, 22 Aug 2014 21:55:35 +0000"  >&lt;p&gt;re: hbase-hbase-master-hor17n36.gq1.ygridcore.net.log&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;ve tripped my assertions around blockcache count metrics.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;False alarm. There is a case when the reported metric is greater than 5% different from the actual map size, but it happened while executing the shutdown hooks, not while the job was running. Attaching the log file in case anyone is curious.&lt;/p&gt;</comment>
                            <comment id="14109622" author="ndimiduk" created="Mon, 25 Aug 2014 19:43:16 +0000"  >&lt;p&gt;Running some numbers where dataset is larger than available blockcache in both cases, will report back. In the mean time, would be nice to get some more eyes on the patch. I&apos;ll also be creating patches for branch-1 and 0.98.&lt;/p&gt;

&lt;p&gt;ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14109769" author="ndimiduk" created="Mon, 25 Aug 2014 21:28:04 +0000"  >&lt;p&gt;This data is from increasing the query range to size=100; more data than fits in cache with either config. I had to run the warmup and test for longer periods because it took longer for the oscache and BlockCache to reach steady-state.&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;=false, 100g&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;=true, 100g&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;delta&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.Get_num_ops&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;313.83&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;466.69&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;49%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.Get_mean&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;28.91 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;20.00 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;-31%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.Get_99th_percentile&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;221.06 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;197.30 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;-11%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.jvmmetrics.GcTimeMillis&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;26.99 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;48.84 ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;81%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;proc.loadavg.1min&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11.71&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;12.00&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;2%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;proc.stat.cpu.percpu
{type=iowait}&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;343.11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;404.10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;18%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;hbase.regionserver.server.blockCacheCount&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;181.85 k&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;716.79 k&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;294%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Overall, I&apos;d say that you want this feature enabled unless:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;your data decompressed fits in BlockCache&lt;/li&gt;
	&lt;li&gt;your machines are not your own and CPU time is at a premium (ie, AWS).&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;2nd point above is just a guess. It&apos;s likely other factors are at play in these environments.&lt;/p&gt;</comment>
                            <comment id="14109792" author="stack" created="Mon, 25 Aug 2014 21:44:30 +0000"  >&lt;p&gt;50% more ops for 80% more GC (20% more CPU) sounds like reasonable trade off.  Would be interesting to see how it does in a long running test?  Does the extra GC bring on the dreaded FGC? Is GC steady?  On the blockCacheCount, this is indication of our caching more blocks?  3x?&lt;/p&gt;</comment>
                            <comment id="14109817" author="ndimiduk" created="Mon, 25 Aug 2014 21:56:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would be interesting to see how it does in a long running test?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Today&apos;s results were from 90m warmup + 40m test. The 16h run I posted on Thursday &lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; seemed stable. No slope in those graphs. This is just PE mind you, no concurrent writes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On the blockCacheCount, this is indication of our caching more blocks? 3x?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, exactly. It&apos;s purely compression ratio manifest in memory. All this is using SNAPPY and the reported compression ratio is 0.2473, thus the ~3x increase. Probably using GZ would have better BC utilization buy higher CPU load (should translate to a standard compression benchmark).&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;: &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12663479/v03-20g-045g-true-16h.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12663479/v03-20g-045g-true-16h.pdf&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14109841" author="ndimiduk" created="Mon, 25 Aug 2014 22:09:05 +0000"  >&lt;p&gt;Adding intended fix-versions. Will sort with RM&apos;s as they weigh in.&lt;/p&gt;</comment>
                            <comment id="14109916" author="ndimiduk" created="Mon, 25 Aug 2014 22:56:47 +0000"  >&lt;p&gt;Commit applies cleanly onto branch-1. Posting a patch for 0.98, based on applying commit for v05 and resolving conflicts. Tested this one with &lt;tt&gt;mvn test -Dtest=org.apache.hadoop.hbase.io.hfile.*&lt;/tt&gt; and a local sandbox run with PerfEval and the flag enabled.&lt;/p&gt;</comment>
                            <comment id="14109930" author="hadoopqa" created="Mon, 25 Aug 2014 23:03:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12664245/HBASE-11331.05-0.98.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12664245/HBASE-11331.05-0.98.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12664245&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 46 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10574//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10574//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14110159" author="apurtell" created="Tue, 26 Aug 2014 01:55:37 +0000"  >&lt;p&gt;+1 for 0.98.&lt;/p&gt;

&lt;p&gt;This is good work.&lt;/p&gt;

&lt;p&gt;Didn&apos;t relish going through HFile code again (hasn&apos;t been long enough since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7544&quot; title=&quot;Transparent table/CF encryption&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7544&quot;&gt;&lt;del&gt;HBASE-7544&lt;/del&gt;&lt;/a&gt;). Nothing jumped out to me as wrong. I will try taking another look when not spread so thin.&lt;/p&gt;

&lt;p&gt;The schema option needs to be false by default. We can write a note in the release notes and/or manual that if using compression the user should try enabling the option and only disable if observing too high CPU usage or too much GC under their workload.&lt;/p&gt;

&lt;p&gt;Edit: I reviewed the 0.98 patch&lt;/p&gt;</comment>
                            <comment id="14111244" author="ndimiduk" created="Tue, 26 Aug 2014 20:15:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;The schema option needs to be false by default&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is the intention. If it&apos;s not, I&apos;ve messed up. Will double-check before commit.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=misty&quot; class=&quot;user-hover&quot; rel=&quot;misty&quot;&gt;Misty Stanley-Jones&lt;/a&gt; where would I put a section in the book on this feature? Maybe something under &quot;9.6.4. Block Cache&quot; ?&lt;/p&gt;</comment>
                            <comment id="14111319" author="ndimiduk" created="Tue, 26 Aug 2014 20:54:32 +0000"  >&lt;p&gt;Any other comments from reviewers? Are we happy with the config name &quot;hbase.block.data.cachecompressed&quot; ?&lt;/p&gt;</comment>
                            <comment id="14111391" author="enis" created="Tue, 26 Aug 2014 21:47:16 +0000"  >&lt;p&gt;Left some comments at RB. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Any other comments from reviewers? Are we happy with the config name &quot;hbase.block.data.cachecompressed&quot; ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should this be &lt;tt&gt;hbase.block.cache.data.cachecompressed&lt;/tt&gt;?&lt;/p&gt;</comment>
                            <comment id="14111393" author="enis" created="Tue, 26 Aug 2014 21:48:15 +0000"  >&lt;p&gt;Also add the parameter to hbase-default.xml and release notes so that it is findable. &lt;/p&gt;</comment>
                            <comment id="14111547" author="misty" created="Tue, 26 Aug 2014 23:26:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; wow there are a lot of comments here and I don&apos;t have bandwidth to parse it right now. From looking at the description, it looks like maybe this needs a mention in the blockcache section and also in the compression / codec appendix. WDYT?&lt;/p&gt;</comment>
                            <comment id="14111667" author="apurtell" created="Wed, 27 Aug 2014 00:53:27 +0000"  >&lt;p&gt;Moving to 0.98.7&lt;/p&gt;</comment>
                            <comment id="14112523" author="ndimiduk" created="Wed, 27 Aug 2014 17:39:58 +0000"  >&lt;p&gt;Quick update: I&apos;ve hit an ArrayIndexOutOfBoundsException while running a mixed workload via LTT. Investigating.&lt;/p&gt;</comment>
                            <comment id="14127499" author="ndimiduk" created="Tue, 9 Sep 2014 20:31:10 +0000"  >&lt;p&gt;Patch v6 addresses Enis&apos;s comments from RB (not much) and resolves a bug in the interaction between this feature and serialization of blocks for L2 cache&apos;s. In addition to resolving the issue, I&apos;ve added some testing for serialization (I didn&apos;t find any previously) and sured up the meaning of HFileBlock.equals().&lt;/p&gt;

&lt;p&gt;master patch applies cleanly to branch-1. 0.98 patch included as well. Please give it one more look so we can put this one to bed.&lt;/p&gt;</comment>
                            <comment id="14127631" author="hadoopqa" created="Tue, 9 Sep 2014 21:59:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12667477/HBASE-11331.06.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12667477/HBASE-11331.06.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12667477&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 44 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +            assertEquals((int) encodedSizes.get(blockId), blockFromHFile.getUncompressedSizeWithoutHeader());&lt;br/&gt;
+              LOG.info(&quot;packedHeapsize=&quot; + packedHeapsize + &quot;, unpackedHeadsize=&quot; + blockUnpacked.heapSize());&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10796//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14127731" author="ndimiduk" created="Tue, 9 Sep 2014 22:59:27 +0000"  >&lt;p&gt;Addressing line length nits from buildbot.&lt;/p&gt;</comment>
                            <comment id="14127736" author="yuzhihong@gmail.com" created="Tue, 9 Sep 2014 23:00:45 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14127828" author="hadoopqa" created="Wed, 10 Sep 2014 00:02:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12667525/HBASE-11331.07.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12667525/HBASE-11331.07.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12667525&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 44 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMultiParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 6 zombie test(s): 	at org.apache.hadoop.hbase.util.TestBytes.testToStringBytesBinaryReversible(TestBytes.java:295)&lt;br/&gt;
	at org.apache.hadoop.hbase.backup.TestHFileArchiving.testCleaningRace(TestHFileArchiving.java:372)&lt;br/&gt;
	at org.apache.hadoop.hbase.ipc.TestDelayedRpc.testTooManyDelayedRpcs(TestDelayedRpc.java:202)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompaction(TestIOFencing.java:224)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10800//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14128811" author="ndimiduk" created="Wed, 10 Sep 2014 17:59:08 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Left some comments at RB.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Any other comments from reviewers? Are we happy with the config name &quot;hbase.block.data.cachecompressed&quot; ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should this be &lt;tt&gt;hbase.block.cache.data.cachecompressed&lt;/tt&gt;?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There&apos;s not a lot of consistency around cache configurations. We also have:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;hbase.rs.cacheblocksonwrite&lt;/li&gt;
	&lt;li&gt;hfile.block.index.cacheonwrite&lt;/li&gt;
	&lt;li&gt;hfile.block.bloom.cacheonwrite&lt;/li&gt;
	&lt;li&gt;hbase.rs.evictblocksonclose&lt;/li&gt;
	&lt;li&gt;hbase.bucketcache.*&lt;/li&gt;
	&lt;li&gt;hbase.rs.prefetchblocksonopen&lt;/li&gt;
	&lt;li&gt;hbase.offheapcache.minblocksize&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14128833" author="stack" created="Wed, 10 Sep 2014 18:09:20 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Add to the simplification of block cache config a note that we need to unify the configuration args?&lt;/p&gt;

&lt;p&gt;Needs fat release note and on commit, add something to the refguide in the block cache section else I&apos;m afraid folks won&apos;t come across this feature.&lt;/p&gt;</comment>
                            <comment id="14129211" author="enis" created="Wed, 10 Sep 2014 22:03:54 +0000"  >&lt;p&gt;Is this right? Assuming HeapByteBuffer here.  &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
         &amp;gt;    @Override
                                                              &amp;gt;    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void serialize(ByteBuffer destination) {
                                                              &amp;gt; -    ByteBuffer dupBuf = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.buf.duplicate();
                                                              &amp;gt; -    dupBuf.rewind();
                                                              &amp;gt; -    destination.put(dupBuf);
                                                              &amp;gt; +    &lt;span class=&quot;code-comment&quot;&gt;// assumes HeapByteBuffer
&lt;/span&gt;                                                              &amp;gt; +    destination.put(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.buf.array(), &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.buf.arrayOffset()
                                                              &amp;gt; +      getSerializedLength() - EXTRA_SERIALIZATION_SPACE);
                                                              &amp;gt;      serializeExtraInfo(destination);
                                                              &amp;gt;    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On naming conf, I&apos;ll go with whatever you think is better. Agreed with Stack. Fat release note would be good. &lt;/p&gt;</comment>
                            <comment id="14129242" author="ndimiduk" created="Wed, 10 Sep 2014 22:21:05 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; for having a look.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Add to the simplification of block cache config a note that we need to unify the configuration args?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Alright, I&apos;ll open a ticket.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Needs fat release note and on commit, add something to the refguide in the block cache section else I&apos;m afraid folks won&apos;t come across this feature.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Release note I&apos;d planned, just what&apos;s in the commit message; you want more than this?&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;When hbase.block.data.cachecompressed=true, DATA (and ENCODED_DATA) blocks are cached in the BlockCache in their on-disk format. This is different from the default behavior, which decompresses and decrypts a block before caching.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ll open a docs ticket for updating the book.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is this right? Assuming HeapByteBuffer here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Alas, yes. There&apos;s a number of assumptions baked into HFileBlock about HeapByteArrays. The whole read-ahead of the next block&apos;s header feature is based on this supposition (look for reads beyond limit without checking capacity; this is how I ran into the serialization bug in the first place).&lt;/p&gt;</comment>
                            <comment id="14129280" author="enis" created="Wed, 10 Sep 2014 22:45:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Release note I&apos;d planned, just what&apos;s in the commit message; you want more than this?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Maybe add why you would want this (X times more block cache while trading more CPU usage). &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;There&apos;s a number of assumptions baked into HFileBlock about HeapByteArrays&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok. Seems we may need to address that in the future. &lt;/p&gt;

&lt;p&gt;&lt;ins&gt;1 for 0.99&lt;/ins&gt;. &lt;/p&gt;</comment>
                            <comment id="14129286" author="ndimiduk" created="Wed, 10 Sep 2014 22:48:10 +0000"  >&lt;p&gt;Opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11938&quot; title=&quot;Unify cache configuration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11938&quot;&gt;HBASE-11938&lt;/a&gt; for cache configuration and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11939&quot; title=&quot;Document compressed blockcache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11939&quot;&gt;&lt;del&gt;HBASE-11939&lt;/del&gt;&lt;/a&gt; for updating the book.&lt;/p&gt;</comment>
                            <comment id="14129287" author="stack" created="Wed, 10 Sep 2014 22:48:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;you want more than this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No. The note you have looks good.&lt;/p&gt;
</comment>
                            <comment id="14129296" author="apurtell" created="Wed, 10 Sep 2014 22:52:13 +0000"  >&lt;p&gt;+1 for 0.98. &lt;/p&gt;

&lt;p&gt;0.98.7 is open.&lt;/p&gt;</comment>
                            <comment id="14129321" author="ndimiduk" created="Wed, 10 Sep 2014 23:11:26 +0000"  >&lt;p&gt;Pushed to 0.98+. FYI, I re-ran the suite over o.a.h.h.io.hfile.* on each branch before pushing. I also added &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&apos;s excellent summary of the resource utilization involved in this feature to the release note.&lt;/p&gt;

&lt;p&gt;Thanks for the patient reviews everyone!&lt;/p&gt;</comment>
                            <comment id="14129427" author="hudson" created="Thu, 11 Sep 2014 00:22:40 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5489 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5489/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5489/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11331&quot; title=&quot;[blockcache] lazy block decompression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11331&quot;&gt;&lt;del&gt;HBASE-11331&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;blockcache&amp;#93;&lt;/span&gt; lazy block decompression (ndimiduk: rev eec15bd17218a2543c9f4cbb9a78841a9fdec043)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileEncryption.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockCompatibility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV3.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLazyDataBlockDecompression.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl.jamon&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestChecksum.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14129471" author="hudson" created="Thu, 11 Sep 2014 01:17:12 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98 #510 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/510/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/510/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11331&quot; title=&quot;[blockcache] lazy block decompression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11331&quot;&gt;&lt;del&gt;HBASE-11331&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;blockcache&amp;#93;&lt;/span&gt; lazy block decompression (ndimiduk: rev b8851309e0ff1e04a3a0abd5fbad6d1868a151bc)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockCompatibility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestChecksum.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl.jamon&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLazyDataBlockDecompression.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileEncryption.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV3.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14129511" author="hudson" created="Thu, 11 Sep 2014 01:57:15 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #171 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/171/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/171/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11331&quot; title=&quot;[blockcache] lazy block decompression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11331&quot;&gt;&lt;del&gt;HBASE-11331&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;blockcache&amp;#93;&lt;/span&gt; lazy block decompression (ndimiduk: rev 4d51cf0ee7d2a508569bd96630eb6d2d9afd6493)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl.jamon&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestChecksum.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileEncryption.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockCompatibility.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV3.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLazyDataBlockDecompression.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14129521" author="hudson" created="Thu, 11 Sep 2014 02:09:31 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #483 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/483/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/483/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11331&quot; title=&quot;[blockcache] lazy block decompression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11331&quot;&gt;&lt;del&gt;HBASE-11331&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;blockcache&amp;#93;&lt;/span&gt; lazy block decompression (ndimiduk: rev b8851309e0ff1e04a3a0abd5fbad6d1868a151bc)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl.jamon&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockCompatibility.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV3.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestChecksum.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLazyDataBlockDecompression.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileEncryption.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestForceCacheImportantBlocks.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContext.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331192" author="enis" created="Sat, 21 Feb 2015 23:34:16 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12745039">HBASE-12123</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12740633">HBASE-11939</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12649880" name="HBASE-11331.00.patch" size="45127" author="ndimiduk" created="Wed, 11 Jun 2014 20:57:03 +0000"/>
                            <attachment id="12657953" name="HBASE-11331.01.patch" size="53186" author="ndimiduk" created="Sat, 26 Jul 2014 00:41:46 +0000"/>
                            <attachment id="12659287" name="HBASE-11331.02.patch" size="79666" author="ndimiduk" created="Sat, 2 Aug 2014 00:25:39 +0000"/>
                            <attachment id="12662967" name="HBASE-11331.03.patch" size="103549" author="ndimiduk" created="Wed, 20 Aug 2014 03:08:08 +0000"/>
                            <attachment id="12663509" name="HBASE-11331.04.patch" size="103576" author="ndimiduk" created="Thu, 21 Aug 2014 21:16:30 +0000"/>
                            <attachment id="12664245" name="HBASE-11331.05-0.98.patch" size="102431" author="ndimiduk" created="Mon, 25 Aug 2014 22:56:47 +0000"/>
                            <attachment id="12663549" name="HBASE-11331.05.patch" size="103619" author="ndimiduk" created="Thu, 21 Aug 2014 23:29:56 +0000"/>
                            <attachment id="12667476" name="HBASE-11331.06-0.98.patch" size="112243" author="ndimiduk" created="Tue, 9 Sep 2014 20:31:10 +0000"/>
                            <attachment id="12667477" name="HBASE-11331.06.patch" size="113112" author="ndimiduk" created="Tue, 9 Sep 2014 20:31:10 +0000"/>
                            <attachment id="12667524" name="HBASE-11331.07-0.98.patch" size="112217" author="ndimiduk" created="Tue, 9 Sep 2014 22:59:27 +0000"/>
                            <attachment id="12667525" name="HBASE-11331.07.patch" size="113086" author="ndimiduk" created="Tue, 9 Sep 2014 22:59:27 +0000"/>
                            <attachment id="12654142" name="HBASE-11331LazyBlockDecompressperfcompare.pdf" size="362218" author="stack" created="Fri, 4 Jul 2014 21:37:08 +0000"/>
                            <attachment id="12663765" name="hbase-hbase-master-hor17n36.gq1.ygridcore.net.log" size="624314" author="ndimiduk" created="Fri, 22 Aug 2014 21:55:35 +0000"/>
                            <attachment id="12660008" name="lazy-decompress.02.0.pdf" size="440333" author="ndimiduk" created="Wed, 6 Aug 2014 00:42:42 +0000"/>
                            <attachment id="12660218" name="lazy-decompress.02.1.json" size="27696" author="ndimiduk" created="Wed, 6 Aug 2014 20:27:02 +0000"/>
                            <attachment id="12660205" name="lazy-decompress.02.1.pdf" size="524293" author="ndimiduk" created="Wed, 6 Aug 2014 19:36:05 +0000"/>
                            <attachment id="12663429" name="v03-20g-045g-false.pdf" size="193867" author="ndimiduk" created="Thu, 21 Aug 2014 17:16:13 +0000"/>
                            <attachment id="12663479" name="v03-20g-045g-true-16h.pdf" size="246957" author="ndimiduk" created="Thu, 21 Aug 2014 20:15:33 +0000"/>
                            <attachment id="12663430" name="v03-20g-045g-true.pdf" size="187575" author="ndimiduk" created="Thu, 21 Aug 2014 17:16:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Jun 2014 22:38:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>398892</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1wo8f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>399014</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>When hbase.block.data.cachecompressed=true, DATA (and ENCODED_DATA) blocks are cached in the BlockCache in their on-disk format. This is different from the default behavior, which decompresses and decrypts a block before caching.&lt;br/&gt;
&lt;br/&gt;
For a region server hosting more data than fits into cache, enabling this feature with SNAPPY compression results in 50% increase in throughput and 30% improvement in mean latency while increasing GC by 80% and increasing overall CPU load by 2%.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>