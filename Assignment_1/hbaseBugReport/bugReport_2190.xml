<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:59:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2190/HBASE-2190.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2190] HRS should report to master when HMsg are available</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2190</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;It still takes a lot of time for the client to see splits or just regions that move around, with default PE it takes around 4 seconds and creating a table takes a bit more than 2 seconds. I remember having the discussion with Stack that HRS.run was not suppose to sleep if any message to send. &lt;/p&gt;

&lt;p&gt;Turns out it does sleep.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12455567">HBASE-2190</key>
            <summary>HRS should report to master when HMsg are available</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="jdcryans">Jean-Daniel Cryans</reporter>
                        <labels>
                    </labels>
                <created>Sun, 7 Feb 2010 08:29:59 +0000</created>
                <updated>Fri, 12 Oct 2012 06:15:00 +0000</updated>
                            <resolved>Thu, 11 Feb 2010 05:53:55 +0000</resolved>
                                    <version>0.20.3</version>
                                    <fixVersion>0.20.4</fixVersion>
                    <fixVersion>0.90.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12830682" author="jdcryans" created="Sun, 7 Feb 2010 08:36:56 +0000"  >&lt;p&gt;Very ugly patch that adds an ArrayBlockingQueue that HRS.run uses to poll without a timeout instead of sleeping. Every time a HMsg is added, an object is also put in that queue (I reuse the same one) so that we never sleep if something is in there. We could transform outboundMsgs into a concurrent structure but it seems problematic with splits since the three of them must be shipped together.&lt;/p&gt;

&lt;p&gt;With that patch splits now take around 2 seconds in PE and creating a table takes only 1 second.&lt;/p&gt;</comment>
                            <comment id="12831883" author="stack" created="Wed, 10 Feb 2010 05:56:57 +0000"  >&lt;p&gt;Use a LinkedBlockingQueue.  Removed the old array of HMsgs and use this LBQ instead.  Making new HMsg type, a split that carries the daughters in it rather than send as new messages (goes w/ the general tendency of this patch making all operations more lively).  Patch is not tested yet.  Please don&apos;t review yet.&lt;/p&gt;</comment>
                            <comment id="12832319" author="stack" created="Thu, 11 Feb 2010 00:15:09 +0000"  >&lt;p&gt;Messages on RS are now on a hair-trigger; as soon as one available, its passed the master.  All seems snappier &amp;#8211; splitting and table creation.  I think this will help with table enable/disable type stuff too.  We&apos;ll see.  Still testing it up on cluster to make sure no message duplication, etc.&lt;/p&gt;

&lt;p&gt;Here are some commit notes for attached patch:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
M src/test/org/apache/hadoop/hbase/TestHMsg.java
  Add serialization tests.
M src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
  Changed outboundMsgs from array to LinkedBlockingQueue.
  Moved housekeeping AFTER pause since when before, its addition of
  &lt;span class=&quot;code-quote&quot;&gt;&quot;processing open&quot;&lt;/span&gt; would make it so we didn&apos;t sleep and we were
  flooding the master with &lt;span class=&quot;code-quote&quot;&gt;&quot;processing open&quot;&lt;/span&gt; messages (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; mechanism
  is on a hair-trigger).
  Use &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MSG_REPORT_SPLIT_WITH_DAUGHTERS HMsg which bundles up three
  HMsgs as one. 
  Removed all synchronization on &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.outboundMsgs.  Seems unnecessary.
M src/java/org/apache/hadoop/hbase/master/ServerManager.java
  Added handling of &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MSG_REPORT_SPLIT_WITH_DAUGHTERS message.
M src/java/org/apache/hadoop/hbase/HMsg.java
  Added &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MSG_REPORT_SPLIT_WITH_DAUGHTERS message.  Carries split
  daughters as payload rather than send them as &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; individual messages.
  Should be self-migrating.  Will need to restart master first though
  when doing a rolling-restart.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12832323" author="stack" created="Thu, 11 Feb 2010 00:30:40 +0000"  >&lt;p&gt;It passes all tests.  Patch is for branch.&lt;/p&gt;</comment>
                            <comment id="12832325" author="stack" created="Thu, 11 Feb 2010 00:33:59 +0000"  >&lt;p&gt;THE patch.&lt;/p&gt;</comment>
                            <comment id="12832326" author="stack" created="Thu, 11 Feb 2010 00:34:48 +0000"  >&lt;p&gt;I think this patch is good to go.  Running tests it seems to do what other stuff used do.  Review please.&lt;/p&gt;</comment>
                            <comment id="12832356" author="jdcryans" created="Thu, 11 Feb 2010 01:55:40 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;I adapted and ran the patch on trunk with 1 machine, created 75 regions, did some enabling/disabling. It&apos;s working and it&apos;s faster.&lt;/p&gt;

&lt;p&gt;For the patch itself, I think HRS. getOutboundMsgs should be renamed now that it doesn&apos;t get you anything. That can be fixed on commit.&lt;/p&gt;</comment>
                            <comment id="12832387" author="stack" created="Thu, 11 Feb 2010 05:53:55 +0000"  >&lt;p&gt;Committed to branch and trunk after making j-d suggested change (thanks for review j-d).&lt;/p&gt;</comment>
                            <comment id="12833183" author="kannanm" created="Fri, 12 Feb 2010 21:47:47 +0000"  >&lt;p&gt;One question about the fix. &lt;/p&gt;

&lt;p&gt;Prior to the fix, the housekeeping() call (to report back to the master that it is processing an open region request) used to happen before it went to sleep at the bottom of the HRS run loop. Now, it happens after the sleep (i.e. poll on the LBQ). Is this a deliberate change? Just trying to understand. Wouldn&apos;t the former be a little better? &lt;/p&gt;</comment>
                            <comment id="12833207" author="stack" created="Fri, 12 Feb 2010 22:35:47 +0000"  >&lt;p&gt;@Kannan In the &quot;commit message&quot; above &amp;#8211; 11/Feb/10 12:15 AM &amp;#8211; I say this: &lt;/p&gt;

&lt;p&gt;&quot;Moved housekeeping AFTER pause since when before, its addition of&lt;br/&gt;
  &quot;processing open&quot; would make it so we didn&apos;t sleep and we were&lt;br/&gt;
  flooding the master with &quot;processing open&quot; messages (this new mechanism&lt;br/&gt;
  is on a hair-trigger).&quot;&lt;/p&gt;

&lt;p&gt;What was happening was if opening a region, in housekeeping, we&apos;d add a opening-region message to the BlockingQueue &amp;#8211; MSG_REPORT_OPENING_REGION (sor something like that) &amp;#8211; which in this new hair-trigger setup would immediately trip a send of the message to the master.... and keep sending messages to the master until the region successfully opened.  We&apos;d never sleep (block on the queue).&lt;/p&gt;

&lt;p&gt;I moved the housekeeping till after we got something from the blockingqueue.  If the region has opened in the meantime, we&apos;ll not bother sending MSG_REPORT_OPENING_REGION.  If it hasn&apos;t opened, it&apos;ll be added and get sent on the next report to master.&lt;/p&gt;

&lt;p&gt;I hope that helps.&lt;/p&gt;</comment>
                            <comment id="12833208" author="stack" created="Fri, 12 Feb 2010 22:36:04 +0000"  >&lt;p&gt;Oh, @Kannan, thanks for reviewing change.&lt;/p&gt;</comment>
                            <comment id="12833244" author="kannanm" created="Fri, 12 Feb 2010 23:34:33 +0000"  >&lt;p&gt;aah.. missed your commit comment earlier.&lt;/p&gt;

&lt;p&gt;Also, I hadn&apos;t realized that we &amp;lt;&amp;lt;&amp;lt; keep sending messages to the master until the region successfully opened&amp;gt;&amp;gt;&amp;gt;.  But upon reading the code further, it looks like this happens via the &quot;Progressable&quot; reporter mechanism (in HRegionServer:instantiateRegion).&lt;/p&gt;

&lt;p&gt;Makes sense now.&lt;/p&gt;

</comment>
                    </comments>
                    <attachments>
                            <attachment id="12435415" name="2190-v2.patch" size="8805" author="stack" created="Wed, 10 Feb 2010 05:56:57 +0000"/>
                            <attachment id="12435526" name="2190-v3.patch" size="14574" author="stack" created="Thu, 11 Feb 2010 00:33:59 +0000"/>
                            <attachment id="12435523" name="2190-v3.patch" size="903" author="stack" created="Thu, 11 Feb 2010 00:15:09 +0000"/>
                            <attachment id="12435116" name="HBASE-2190.patch" size="3724" author="jdcryans" created="Sun, 7 Feb 2010 08:36:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 10 Feb 2010 05:56:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32447</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 44 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08sof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49246</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This requires that making a rolling update, you upgrade the master first (so it knows what to do w/ the new split signal this patch introduces).</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>