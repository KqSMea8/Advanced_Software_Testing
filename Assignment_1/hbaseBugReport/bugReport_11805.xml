<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:26:47 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11805/HBASE-11805.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11805] KeyValue to Cell Convert in WALEdit APIs</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11805</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In almost all other main interface class/APIs we have changed KeyValue to Cell. But missing in WALEdit. This is public marked for Replication (Well it should be for CP also) &lt;br/&gt;
These 2 APIs deal with KVs&lt;br/&gt;
add(KeyValue kv)&lt;br/&gt;
ArrayList&amp;lt;KeyValue&amp;gt; getKeyValues()&lt;/p&gt;

&lt;p&gt;Suggest deprecate them and add for 0.98&lt;br/&gt;
add(Cell kv) &lt;br/&gt;
List&amp;lt;Cell&amp;gt; getCells()&lt;/p&gt;

&lt;p&gt;And just replace from 1.0&lt;/p&gt;</description>
                <environment></environment>
        <key id="12736121">HBASE-11805</key>
            <summary>KeyValue to Cell Convert in WALEdit APIs</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="anoop.hbase">Anoop Sam John</assignee>
                                    <reporter username="anoop.hbase">Anoop Sam John</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Aug 2014 18:24:25 +0000</created>
                <updated>Sat, 21 Feb 2015 23:35:18 +0000</updated>
                            <resolved>Sat, 13 Sep 2014 03:33:02 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14108974" author="anoop.hbase" created="Mon, 25 Aug 2014 10:03:30 +0000"  >&lt;p&gt;WALEdit implements HeapSize, and as Cell is not having heapSize() we will ending up in issue.&lt;br/&gt;
Also will have to have the setSeqId() which is there only in KeyValue&lt;br/&gt;
KeyValue#length() is the other one which is used by/from WALEdit.&lt;/p&gt;

&lt;p&gt;The background of this is, we need different type of Tag which only has to go into WAL, then if the WALEdit add takes KV only, we have to recreate a KV which needs byte copying for entire KV key, value etc.  If we have WALEdit#add(Cell) we can create a new Cell impl where the Key and Value part refer to the same byte[] and tags part only needs a byte[] copy and recreation.&lt;/p&gt;

&lt;p&gt;Any ideas for the extension of Cell?  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14109009" author="ram_krish" created="Mon, 25 Aug 2014 10:55:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;In almost all other main interface class/APIs we have changed KeyValue to Cell.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Still not in write path and in Memstores.  Some of the problems mentioned in the comment above are applicable for those areas also.  But in write path doing it would not be necessary. until we end up in a new format of hfileblock.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;we need different type of Tag which only has to go into WAL&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Okie.&lt;br/&gt;
But in one way having WALEdit having KV is right becuase there is no seperated byte array for each of the row key components and so KeyValue would be the best fit here, but  if Cell atleast the copying of tags/values could be done (as in this requirement). Cells would be of use when we have to do some copying but still reduce the copy that happens.&lt;br/&gt;
We had a similar argument over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7320&quot; title=&quot;Remove KeyValue.getBuffer()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7320&quot;&gt;HBASE-7320&lt;/a&gt; where there was a need to strip the tags without rewriting them. We still want that behaviour in places where the tags should not be sent to the client (atleast the tags of security related things should be stripped). We had exact same discussion there.&lt;/p&gt;

</comment>
                            <comment id="14109023" author="anoop.hbase" created="Mon, 25 Aug 2014 11:37:31 +0000"  >&lt;p&gt;I mean in the Exposed APIs/Interfaces we have Cell now. WALEdit is exposed.. (Limited for replication and for CP also)&lt;/p&gt;</comment>
                            <comment id="14110290" author="stack" created="Tue, 26 Aug 2014 05:22:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;WALEdit implements HeapSize, and as Cell is not having heapSize() we will ending up in issue.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;CellUtil does heap size?  CellUtil#estimateSizeOf&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also will have to have the setSeqId() which is there only in KeyValue&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Man. Its a pity.  Cell is all getters.  Would be shame adding in this one setter.  So, let implementations implement Cell and SequenceNumber (add setSequenceNumber to the SequenceNumber Interface) on the server side?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;KeyValue#length() is the other one which is used by/from WALEdit.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is that because WALEdit is doing it wrong?  Is this how it preallocates and copies over KV?&lt;/p&gt;

&lt;p&gt;This is low-priority &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt; (as per Ram) because we are working on read-path first?&lt;/p&gt;




</comment>
                            <comment id="14110306" author="ram_krish" created="Tue, 26 Aug 2014 05:35:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;This is low-priority Anoop Sam John (as per Ram) because we are working on read-path first?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Stack, this change though in the right path tries to achieve some other use case by converting it into cell.  So if we are able to do this it would help in cases as Anoop mentions above &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;the background of this is, we need different type of Tag which only has to go into WAL,&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14110307" author="anoop.hbase" created="Tue, 26 Aug 2014 05:36:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Man. Its a pity. Cell is all getters. Would be shame adding in this one setter. So, let implementations implement Cell and SequenceNumber (add setSequenceNumber to the SequenceNumber Interface) on the server side?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I was just saying the issues I met with once I change KV to Cell. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Not saying we should add setter. I am also think that is not correct.  Sorry my statement was not clear.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is low-priority Anoop Sam John (as per Ram) because we are working on read-path first?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is not just wrt offheap work.   WALEdit is exposed interface now. For Replication and CP atleast. So I was thinking that we should finalize the API in that atleast before 1.0.   &lt;/p&gt;</comment>
                            <comment id="14110310" author="stack" created="Tue, 26 Aug 2014 05:40:32 +0000"  >&lt;p&gt;Agree.&lt;/p&gt;

&lt;p&gt;We need the setter don&apos;t we?&lt;/p&gt;</comment>
                            <comment id="14110312" author="anoop.hbase" created="Tue, 26 Aug 2014 05:41:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;CellUtil does heap size? CellUtil#estimateSizeOf&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is not heapSize but the length().   Wherever we use WALEdit KVs legth() I use CellUtil helper API now.  May be heapSize also similar way adding some thing in CellUtil.&lt;/p&gt;

&lt;p&gt;Again my main intent is to clean the API with using Cell instead of KV. Implementation wise we can correct/better later also. But the API signature can get changed before 1.0 (IMHO)&lt;/p&gt;</comment>
                            <comment id="14110318" author="anoop.hbase" created="Tue, 26 Aug 2014 05:43:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;We need the setter don&apos;t we?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes but with new Interface.   I was thinking initially to have an Interface extending Cell and using that in server side.  But what u suggested looks better&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;SequenceNumber (add setSequenceNumber to the SequenceNumber Interface) &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If the passed in Object is of type SequenceNumber  we can call setter directly. If not, there is no other go but to recreate a KV and set seqNo &lt;/p&gt;</comment>
                            <comment id="14110845" author="stack" created="Tue, 26 Aug 2014 15:40:10 +0000"  >&lt;p&gt;You are right. heapsize != length.  Need to add comment to estimateSizeOf.  estimateSizeOf is not the serialized size either.  Its estimate.  We have to give up on heapSize for cell and use estimates instead?  There was discussion in an old issue on heapsize and Cell and was thought we should not add it unless really needed and wasn&apos;t thought needed at the time.   See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9383&quot; title=&quot;Have Cell interface extend HeapSize interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9383&quot;&gt;&lt;del&gt;HBASE-9383&lt;/del&gt;&lt;/a&gt;.  We&apos;ve been here before (smile).&lt;/p&gt;</comment>
                            <comment id="14110914" author="ram_krish" created="Tue, 26 Aug 2014 16:35:37 +0000"  >&lt;p&gt;Cells having SequenceNumber is also fine. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11777&quot; title=&quot;Find a way to set sequenceId on Cells on the server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11777&quot;&gt;&lt;del&gt;HBASE-11777&lt;/del&gt;&lt;/a&gt; deals with it. &lt;/p&gt;</comment>
                            <comment id="14110917" author="ram_krish" created="Tue, 26 Aug 2014 16:36:44 +0000"  >&lt;p&gt;Can we atleast implement length() or something similar to the Cell API then?&lt;/p&gt;</comment>
                            <comment id="14110988" author="stack" created="Tue, 26 Aug 2014 17:28:15 +0000"  >&lt;p&gt;What would length mean?  If its prefix encoded or compressed, is it length of the encoded/compressed Cell or do we expand and then return the length? &lt;/p&gt;</comment>
                            <comment id="14111684" author="apurtell" created="Wed, 27 Aug 2014 01:01:46 +0000"  >&lt;p&gt;Moving out of .6&lt;/p&gt;</comment>
                            <comment id="14117010" author="anoop.hbase" created="Mon, 1 Sep 2014 04:12:13 +0000"  >&lt;p&gt;Patch is ready with me but depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11777&quot; title=&quot;Find a way to set sequenceId on Cells on the server&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11777&quot;&gt;&lt;del&gt;HBASE-11777&lt;/del&gt;&lt;/a&gt;. Once that is committed will attach here for review.&lt;/p&gt;</comment>
                            <comment id="14118543" author="anoop.hbase" created="Tue, 2 Sep 2014 18:59:06 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; I would like to see this into 0.99.0  Will  give a patch very soon.&lt;/p&gt;</comment>
                            <comment id="14118734" author="hadoopqa" created="Tue, 2 Sep 2014 21:00:12 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12665959/HBASE-11805.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12665959/HBASE-11805.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12665959&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 45 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10681//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14119067" author="enis" created="Wed, 3 Sep 2014 00:38:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;I would like to see this into 0.99.0 Will give a patch very soon.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sounds good. Will wait for the final patch. &lt;/p&gt;</comment>
                            <comment id="14119294" author="anoop.hbase" created="Wed, 3 Sep 2014 04:02:22 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;. Pls have a look at the attached patch which has to go in for branch-1 also.  (Removing the APIs dealing with KV and keeping only Cell)&lt;br/&gt;
For 0.98 we will keep the KV based APIs with deprecation.&lt;/p&gt;</comment>
                            <comment id="14119368" author="stack" created="Wed, 3 Sep 2014 05:26:28 +0000"  >&lt;p&gt;Do we have to do the below?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (KeyValue kv : value.getKeyValues()) {&lt;br/&gt;
+          for (Cell cell : value.getCells()) {&lt;br/&gt;
+            KeyValue kv = KeyValueUtil.ensureKeyValue(cell);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Maybe we could make do w/ a Cell? Seems like later changes have determined that you don&apos;t need KV so you have probably already tried my suggestion and it just don&apos;t work here... thats fine.  Just asking.&lt;/p&gt;

&lt;p&gt;This one is a bit odd Anoop...&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (KeyValue kv: kvs) {&lt;/li&gt;
	&lt;li&gt;size += kv.getLength();&lt;br/&gt;
+      for (Cell cell: cells) 
{
+        size += KeyValueUtil.length(cell);
       }&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Using a KeyValueUtils on a cell?&lt;/p&gt;

&lt;p&gt;Nice one here: &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;walEdit.add(KeyValueUtil.ensureKeyValue(cell));&lt;br/&gt;
+        walEdit.add(cell);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Good&lt;/p&gt;

&lt;p&gt;This too....&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;kv.setSequenceId(currentReplaySeqId);&lt;br/&gt;
+            CellUtil.setSequenceId(cell, currentReplaySeqId);&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;+1 on patch.  A few nits above.  Nice stuff.&lt;/p&gt;</comment>
                            <comment id="14119994" author="anoop.hbase" created="Wed, 3 Sep 2014 15:52:39 +0000"  >&lt;p&gt;Thanks Stack.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Do we have to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; the below?

   - &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (KeyValue kv : value.getKeyValues()) {
    + &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Cell cell : value.getCells()) {
    + KeyValue kv = KeyValueUtil.ensureKeyValue(cell);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;This is in WALPlayer#HLogKeyValueMapper. The mapper o/p value is KeyValue.  This also we can change to Cell. But I thought of doing all these as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11871&quot; title=&quot;Avoid usage of KeyValueUtil#ensureKeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11871&quot;&gt;&lt;del&gt;HBASE-11871&lt;/del&gt;&lt;/a&gt;. One sub task  to remove enusreKeyValue from MR tools. Sounds ok?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This one is a bit odd Anoop...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    -&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (KeyValue kv: kvs) {
    -size += kv.getLength();
    + &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Cell cell: cells) { + size += KeyValueUtil.length(cell); }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Using a KeyValueUtils on a cell?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We have CellUtil#estimatedSizeOf() but that is not KV length. That is length + SIZEOF_INT.  The bytes a Cell takes when serialized to Encoder.&lt;br/&gt;
KKUtil method was existing and been used by Prefix Tree also.  May be will add length() in CellUtil , same way as in KVUtil and make code to use that.&lt;/p&gt;</comment>
                            <comment id="14120074" author="stack" created="Wed, 3 Sep 2014 16:49:45 +0000"  >&lt;p&gt;Sounds reasonable. +1&lt;/p&gt;</comment>
                            <comment id="14120204" author="anoop.hbase" created="Wed, 3 Sep 2014 18:23:51 +0000"  >&lt;p&gt;V2 addressing Stack&apos;s comment.&lt;br/&gt;
Added CellUtil#estimatedLengthOf(final Cell cell)&lt;br/&gt;
When passed cell is a KV we return the KV.length() to maintain the same result as in the past.  When cell is of other types, the return will be an estimate adding up the key, value and tags lengths part.&lt;/p&gt;</comment>
                            <comment id="14120475" author="hadoopqa" created="Wed, 3 Sep 2014 21:19:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12666280/HBASE-11805_V2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12666280/HBASE-11805_V2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12666280&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 45 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestMultiParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestReplicaWithCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestPerTableCFReplication&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScanBase.testScan(TestTableInputFormatScanBase.java:238)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan1.testScanEmptyToBBA(TestTableInputFormatScan1.java:70)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10696//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14121183" author="anoop.hbase" created="Thu, 4 Sep 2014 09:51:53 +0000"  >&lt;p&gt;0.98 version of the patch. Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;&lt;br/&gt;
Same trunk patch has to go into branch-1 as well. Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14121195" author="hadoopqa" created="Thu, 4 Sep 2014 10:02:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12666448/HBASE-11805_0.98.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12666448/HBASE-11805_0.98.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12666448&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 24 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10711//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10711//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14122039" author="apurtell" created="Thu, 4 Sep 2014 21:54:59 +0000"  >&lt;p&gt;Looks good, except this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+@InterfaceAudience.LimitedPrivate(HBaseInterfaceAudience.COPROC)
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class WALEdit &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Writable, HeapSize {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This might conflict with one of the JIRAs adding these annotations.&lt;/p&gt;

&lt;p&gt;Leave this hunk out and +1&lt;/p&gt;</comment>
                            <comment id="14122453" author="ram_krish" created="Fri, 5 Sep 2014 05:21:03 +0000"  >&lt;p&gt;There are codes like this&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (kvs.size() &amp;lt; expectedCount &amp;amp;&amp;amp; cellDecoder.advance()) {
      Cell cell = cellDecoder.current();
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(cell &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; KeyValue)) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;WAL edit only supports KVs as cells&quot;&lt;/span&gt;);
      }
      kvs.add((KeyValue)cell);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We may need to check these places. Discussing wth Anoop here, if we try to work with cells and try using cells in walEdit unless the codec in the replication is changed to work with Cells we don&apos;t get the real benefit of Cells in waledit. But it is always right to change all our data structures to deal with Cells rather than Kvs.&lt;/p&gt;</comment>
                            <comment id="14122481" author="anoop.hbase" created="Fri, 5 Sep 2014 05:56:57 +0000"  >&lt;p&gt;My bad. I missed reading that code. Thanks we will have to remove.&lt;/p&gt;

&lt;p&gt;Yes to get the adv we must handle the Codec side also.  That is why the Umbrella jira I raised (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11871&quot; title=&quot;Avoid usage of KeyValueUtil#ensureKeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11871&quot;&gt;&lt;del&gt;HBASE-11871&lt;/del&gt;&lt;/a&gt;)  Will check and raise a sub task to use the Cells in Codec where we write the WALEdit.&lt;/p&gt;

&lt;p&gt;One main intent for this Jira is to change the exposed interface signature to use Cell. This has to happen before 1.0 release. WALEdit is exposed to CPs and Replication.&lt;/p&gt;

&lt;p&gt;Thanks for the review Ram.&lt;/p&gt;</comment>
                            <comment id="14122491" author="ram_krish" created="Fri, 5 Sep 2014 06:03:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;That is why the Umbrella jira I raised (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11871&quot; title=&quot;Avoid usage of KeyValueUtil#ensureKeyValue&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11871&quot;&gt;&lt;del&gt;HBASE-11871&lt;/del&gt;&lt;/a&gt;) Will check and raise a sub task to use the Cells in Codec where we write the WALEdit.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;One main intent for this Jira is to change the exposed interface signature to use Cell. This has to happen before 1.0 release. WALEdit is exposed to CPs and Replication.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14124406" author="anoop.hbase" created="Sat, 6 Sep 2014 09:40:00 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+@InterfaceAudience.LimitedPrivate(HBaseInterfaceAudience.COPROC)
 &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class WALEdit &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Writable, HeapSize {&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The Jira adding the annotations is in now. WALEdit is still private. But it is exposed to CPs via different hooks. So I am changing it to LimitedPrivate for COPROC&lt;/p&gt;

&lt;p&gt;V3 patch solves comments from Ram and Stack. Will commit tomorrow unless objections.  Hope you ok &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14124422" author="hadoopqa" created="Sat, 6 Sep 2014 11:06:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12666998/HBASE-11805_V3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12666998/HBASE-11805_V3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12666998&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 45 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10733//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14124543" author="stack" created="Sat, 6 Sep 2014 16:16:05 +0000"  >&lt;p&gt;+1 on re-skim. Looks safe.&lt;/p&gt;</comment>
                            <comment id="14124858" author="anoop.hbase" created="Sun, 7 Sep 2014 10:25:19 +0000"  >&lt;p&gt;Pushed to 0.98+.  Thanks for the review Stack, Andy, Ram.&lt;/p&gt;</comment>
                            <comment id="14124878" author="hudson" created="Sun, 7 Sep 2014 12:10:21 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98 #502 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/502/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/502/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11805&quot; title=&quot;KeyValue to Cell Convert in WALEdit APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11805&quot;&gt;&lt;del&gt;HBASE-11805&lt;/del&gt;&lt;/a&gt; KeyValue to Cell Convert in WALEdit APIs. (anoopsamjohn: rev 3f6a44b98cdf4a6dc28a713bc70e4f5bb03ff36e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/WALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SampleRegionWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestSecureHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14124886" author="hudson" created="Sun, 7 Sep 2014 12:53:09 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #160 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/160/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/160/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11805&quot; title=&quot;KeyValue to Cell Convert in WALEdit APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11805&quot;&gt;&lt;del&gt;HBASE-11805&lt;/del&gt;&lt;/a&gt; KeyValue to Cell Convert in WALEdit APIs. (anoopsamjohn: rev ecb015d9a3c7d0aa0320670674cc1e55f390373f)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ScopeWALEntryFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/HLogPerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SampleRegionWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/WALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/TableCfWALEntryFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestSecureHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWALEntryFilters.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14124892" author="hudson" created="Sun, 7 Sep 2014 13:19:06 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5475 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5475/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5475/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11805&quot; title=&quot;KeyValue to Cell Convert in WALEdit APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11805&quot;&gt;&lt;del&gt;HBASE-11805&lt;/del&gt;&lt;/a&gt; KeyValue to Cell Convert in WALEdit APIs. (anoopsamjohn: rev 0a9bfcaf744a908c1710fec47de073724ec2d8be)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/TableCfWALEntryFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestSecureHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/WALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/HLogPerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ScopeWALEntryFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestRegionReplicaReplicationEndpointNoMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWALEntryFilters.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SampleRegionWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/RegionReplicaReplicationEndpoint.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14124895" author="hudson" created="Sun, 7 Sep 2014 13:41:06 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #476 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/476/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/476/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11805&quot; title=&quot;KeyValue to Cell Convert in WALEdit APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11805&quot;&gt;&lt;del&gt;HBASE-11805&lt;/del&gt;&lt;/a&gt; KeyValue to Cell Convert in WALEdit APIs. (anoopsamjohn: rev 3f6a44b98cdf4a6dc28a713bc70e4f5bb03ff36e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/WALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestSecureHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SampleRegionWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14126692" author="lhofhansl" created="Tue, 9 Sep 2014 06:42:58 +0000"  >&lt;p&gt;Looks like this potentially breaks Phoenix (and maybe other things) with exceptions like these:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.NullPointerException
        at org.apache.hadoop.hbase.util.Bytes.toShort(Bytes.java:845)
        at org.apache.hadoop.hbase.util.Bytes.toShort(Bytes.java:832)
        at org.apache.hadoop.hbase.KeyValue.getRowLength(KeyValue.java:1303)
        at org.apache.hadoop.hbase.KeyValue.getFamilyOffset(KeyValue.java:1319)
        at org.apache.hadoop.hbase.KeyValue.getFamilyLength(KeyValue.java:1334)
        at org.apache.hadoop.hbase.CellUtil.cloneFamily(CellUtil.java:70)
        at org.apache.hadoop.hbase.KeyValue.getFamily(KeyValue.java:1559)
        at org.apache.hadoop.hbase.replication.regionserver.Replication.scopeWAL
Edits(Replication.java:249)
        at org.apache.hadoop.hbase.replication.regionserver.Replication.visitLog
EntryBeforeWrite(Replication.java:233)
        at org.apache.hadoop.hbase.regionserver.wal.FSHLog.doWrite(FSHLog.java:1486)
        at org.apache.hadoop.hbase.regionserver.wal.FSHLog.append(FSHLog.java:1023)
        at org.apache.hadoop.hbase.regionserver.wal.FSHLog.appendNoSync(FSHLog.java:1054)
        at org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion.java:2553)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14126701" author="lhofhansl" created="Tue, 9 Sep 2014 06:51:35 +0000"  >&lt;p&gt;Tried with 0.98 current build compared to a build of the 0.98.6RC2 tag. The former build shows this, the latter does not.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, FYI.&lt;/p&gt;</comment>
                            <comment id="14126727" author="anoop.hbase" created="Tue, 9 Sep 2014 07:49:16 +0000"  >&lt;p&gt;Checking this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;br/&gt;
Looks strange that in a KeyValue object we have a null ref to bytes array!&lt;/p&gt;</comment>
                            <comment id="14126739" author="anoop.hbase" created="Tue, 9 Sep 2014 08:15:06 +0000"  >&lt;p&gt;Reading the Phoenix code, I think I got the issue.  &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
WALEdit edit = miniBatchOp.getWalEdit(i);
      &lt;span class=&quot;code-comment&quot;&gt;// we don&apos;t have a WALEdit &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; immutable index cases, which still see &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; path
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// we could check is indexing is enable &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the mutation in prePut and then just skip &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// after checking here, but &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; saves us the checking again.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (edit != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        KeyValue kv = edit.getKeyValues().get(0);
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (kv == BATCH_MARKER) {
          &lt;span class=&quot;code-comment&quot;&gt;// remove batch marker from the WALEdit
&lt;/span&gt;          edit.getKeyValues().remove(0);
        }
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;BATCH_MARKER is a KV with null bytes.   This removal wont happen now as we return a new ArrayList from WALEdit#getKeyValues()&lt;br/&gt;
Thinking abt how we can solve.&lt;/p&gt;</comment>
                            <comment id="14127247" author="anoop.hbase" created="Tue, 9 Sep 2014 17:16:17 +0000"  >&lt;p&gt;I logged &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1245&quot; title=&quot;Remove usage of empty KeyValue object BATCH_MARKER from Indexer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1245&quot;&gt;&lt;del&gt;PHOENIX-1245&lt;/del&gt;&lt;/a&gt; to handle the issue in Phoenix side. FYI &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14127459" author="apurtell" created="Tue, 9 Sep 2014 19:51:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;now as we return a new ArrayList from WALEdit#getKeyValues()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Isn&apos;t this an API regression? The client code expects to be able to use the returned list to change the WALEdit. &lt;/p&gt;</comment>
                            <comment id="14127796" author="apurtell" created="Tue, 9 Sep 2014 23:38:33 +0000"  >&lt;p&gt;Reopening.&lt;/p&gt;</comment>
                            <comment id="14128006" author="lhofhansl" created="Wed, 10 Sep 2014 03:43:45 +0000"  >&lt;p&gt;Yeah, that seems like a (implicit albeit) API regression. Is there a way to keep the identity of KVs?&lt;/p&gt;</comment>
                            <comment id="14128017" author="anoop.hbase" created="Wed, 10 Sep 2014 04:02:40 +0000"  >&lt;p&gt;Even though it is a bit ugly way to deal with the internal data structure of WALEdit and tried removing from that, we have to solve this issue. From the getter we have given back the original data structure and one can play with that. We have add API in WALEdit and one can add with out calling this but just by getting the List and adding directly to that. Remove is also like that. The ideal way would have been to ask for a remove() API. &lt;/p&gt;

&lt;p&gt;We can solve this by changing 0.98 code such that we keep the cells in the form of KeyValues in WALEdit. And the getter will continue to return the original list so that any removal will actually remove the Cell(KV) from WALEdit.  0.98 scope will get reduced to just deprecate the APIs and so adding the new one.  The new one also will just delegate call to the older one. The 98 internal code path also will continue to deal with KeyValue based APIs. Pls confirm whether this is ok &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="14128022" author="lhofhansl" created="Wed, 10 Sep 2014 04:10:11 +0000"  >&lt;p&gt;It&apos;s fine to return a KV as a KV is a Cell. The question is: Are we locking our to always requiring support for KVs? As far as I understand we just need to return same the objects that were added to edit (whether they are Cells or KVs)&lt;/p&gt;</comment>
                            <comment id="14128031" author="anoop.hbase" created="Wed, 10 Sep 2014 04:30:44 +0000"  >&lt;p&gt;As part of this change I changed the internal data structure to&lt;br/&gt;
ArrayList&amp;lt;Cell&amp;gt; cells&lt;br/&gt;
from&lt;br/&gt;
ArrayList&amp;lt;KeyValue&amp;gt; kvs&lt;br/&gt;
We have to return the internal data structure same ref so that remove from the list will result in actual removal from WALEdit.&lt;br/&gt;
That is why from old getKeyValues() API we had to return a newly created ArrayList and putting the cells (after KVUtil.ensureKeyValue())&lt;/p&gt;

&lt;p&gt;Now to fix, we will have to keep ArrayList as KeyValue generic and when adding to WALEdit we can add only KeyValue types. Then only we can return the same list ref.  Am I making it clear LarsH?&lt;/p&gt;</comment>
                            <comment id="14128032" author="ram_krish" created="Wed, 10 Sep 2014 04:33:49 +0000"  >&lt;p&gt;I think we could actually revert this change in 0.98 alone for now? Or go with deprecating the API so that in the future releases we are able to handle with the new API and thus the dependent project can also know about these behaviourial changes?&lt;/p&gt;</comment>
                            <comment id="14128040" author="anoop.hbase" created="Wed, 10 Sep 2014 04:43:45 +0000"  >&lt;p&gt;In 0.99+ we have removed the old KV based APIs and kept only Cell based APIs. In order to do that, we have to add the deprecation now and so the addition of the new APIs. But the changes should be only that much. So it is 90% revert. Does that make sense?  I can make a new patch fro this and we can get that in to 98&lt;/p&gt;</comment>
                            <comment id="14128176" author="lhofhansl" created="Wed, 10 Sep 2014 07:24:06 +0000"  >&lt;p&gt;+1 on reverting this from 0.98 and adding the deprecation now.&lt;/p&gt;</comment>
                            <comment id="14128332" author="anoop.hbase" created="Wed, 10 Sep 2014 10:52:24 +0000"  >&lt;p&gt;Patch to revert the changes. In effect now in 0.98 the code level changes are&lt;br/&gt;
1. Addition of 2 new Cell based APIs in WALEdit&lt;br/&gt;
2. Deprecated APIs getKeyValues() and add(KeyValue)&lt;/p&gt;</comment>
                            <comment id="14129507" author="anoop.hbase" created="Thu, 11 Sep 2014 01:53:55 +0000"  >&lt;p&gt;Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; . Can you review pls so that we can get this in.&lt;/p&gt;</comment>
                            <comment id="14132239" author="apurtell" created="Fri, 12 Sep 2014 22:44:36 +0000"  >&lt;p&gt;Is the addendum patch the revert? Can we just revert this in SCM and then propose in a new JIRA the desired changes? We can take 0.98 out of the fix versions here and resolve this.&lt;br/&gt;
Edit: An addendum patch that reverts a previous change while introducing new changes is hard to track, let&apos;s not do that.&lt;/p&gt;</comment>
                            <comment id="14132503" author="anoop.hbase" created="Sat, 13 Sep 2014 03:30:53 +0000"  >&lt;p&gt;Agree Andy. I have reverted the old commit (3f6a44b98cdf4a6dc28a713bc70e4f5bb03ff36e) for this from 0.98 branch.&lt;/p&gt;</comment>
                            <comment id="14132545" author="hudson" created="Sat, 13 Sep 2014 05:06:18 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #490 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/490/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/490/&lt;/a&gt;)&lt;br/&gt;
Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11805&quot; title=&quot;KeyValue to Cell Convert in WALEdit APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11805&quot;&gt;&lt;del&gt;HBASE-11805&lt;/del&gt;&lt;/a&gt; KeyValue to Cell Convert in WALEdit APIs.&quot; (anoopsamjohn: rev 55a790e348c40002026fb5f2c1f63e5317964c68)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/WALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SampleRegionWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestSecureHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14132563" author="hudson" created="Sat, 13 Sep 2014 06:10:28 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98 #516 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/516/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/516/&lt;/a&gt;)&lt;br/&gt;
Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11805&quot; title=&quot;KeyValue to Cell Convert in WALEdit APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11805&quot;&gt;&lt;del&gt;HBASE-11805&lt;/del&gt;&lt;/a&gt; KeyValue to Cell Convert in WALEdit APIs.&quot; (anoopsamjohn: rev 55a790e348c40002026fb5f2c1f63e5317964c68)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestSecureHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SampleRegionWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/WALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14132592" author="hudson" created="Sat, 13 Sep 2014 07:39:21 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #491 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/491/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/491/&lt;/a&gt;)&lt;br/&gt;
Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11805&quot; title=&quot;KeyValue to Cell Convert in WALEdit APIs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11805&quot;&gt;&lt;del&gt;HBASE-11805&lt;/del&gt;&lt;/a&gt; KeyValue to Cell Convert in WALEdit APIs.&quot; (anoopsamjohn: rev 55a790e348c40002026fb5f2c1f63e5317964c68)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SampleRegionWALObserver.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestSecureHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestWALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/WALPlayer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHLogRecordReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331305" author="enis" created="Sat, 21 Feb 2015 23:35:18 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12731255">HBASE-11639</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12741234">HBASE-11971</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12734947">HBASE-11777</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12704125">HBASE-10856</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12665959" name="HBASE-11805.patch" size="70794" author="anoop.hbase" created="Tue, 2 Sep 2014 19:24:44 +0000"/>
                            <attachment id="12666448" name="HBASE-11805_0.98.patch" size="55070" author="anoop.hbase" created="Thu, 4 Sep 2014 09:51:53 +0000"/>
                            <attachment id="12666996" name="HBASE-11805_0.98_V2.patch" size="57064" author="anoop.hbase" created="Sat, 6 Sep 2014 09:32:13 +0000"/>
                            <attachment id="12667644" name="HBASE-11805_0.98_addendum.patch" size="30648" author="anoop.hbase" created="Wed, 10 Sep 2014 10:52:24 +0000"/>
                            <attachment id="12666997" name="HBASE-11805_0.99.patch" size="71517" author="anoop.hbase" created="Sat, 6 Sep 2014 09:33:22 +0000"/>
                            <attachment id="12666280" name="HBASE-11805_V2.patch" size="71742" author="anoop.hbase" created="Wed, 3 Sep 2014 18:23:51 +0000"/>
                            <attachment id="12666998" name="HBASE-11805_V3.patch" size="73659" author="anoop.hbase" created="Sat, 6 Sep 2014 09:35:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Aug 2014 10:55:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1z8nr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>The KeyValue based APIs in WALEdit is been removed and replaced with Cell based APIs&lt;br/&gt;
void add(KeyValue)    -&amp;gt;       void add(Cell)&lt;br/&gt;
ArrayList&amp;lt;KeyValue&amp;gt; getKeyValues()    -&amp;gt;    ArrayList&amp;lt;Cell&amp;gt; getCells()</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>