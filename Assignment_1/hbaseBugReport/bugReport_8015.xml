<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:51:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8015/HBASE-8015.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8015] Support for Namespaces</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8015</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12635622">HBASE-8015</key>
            <summary>Support for Namespaces</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="toffer">Francis Liu</assignee>
                                    <reporter username="toffer">Francis Liu</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Mar 2013 17:50:37 +0000</created>
                <updated>Thu, 3 Sep 2015 12:33:16 +0000</updated>
                                                                                <due></due>
                            <votes>3</votes>
                                    <watches>39</watches>
                                                                                                            <comments>
                            <comment id="13594899" author="toffer" created="Wed, 6 Mar 2013 17:55:38 +0000"  >&lt;p&gt;Initial draft of design. This originally was intended to be implemented as coprocessors thus it&apos;s design was made to be as non-invasive as possible. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; Suggested that it would be better to make this part of core. I&apos;d be up for doing that and open to other changes to make things more integrated.&lt;/p&gt;</comment>
                            <comment id="13594917" author="sershe" created="Wed, 6 Mar 2013 18:12:22 +0000"  >&lt;p&gt;+1 on making core (as opposed to cp-s I assume?)&lt;br/&gt;
&quot;Given the level of autonomy namespaces will provide tenants. &quot; what does this mean?&lt;br/&gt;
What kind of resource allocation will be possible, except for server groups (just examples, to understand it better)?&lt;/p&gt;

&lt;p&gt;Then, about storing, I suggest not making it part of table name. It seems brittle, and will limit our options if we want to add features lately due to backward compat.&lt;br/&gt;
Also, how do we handle existing backward compat if someone already has a table name &quot;foo.bar&quot;?&lt;br/&gt;
Will root/meta have to be renamed hbase.root/hbase.meta to be in correct namespace, and how will it affect current assumptions about sorting if yes?&lt;/p&gt;</comment>
                            <comment id="13594943" author="toffer" created="Wed, 6 Mar 2013 18:34:01 +0000"  >&lt;blockquote&gt;
&lt;p&gt;+1 on making core (as opposed to cp-s I assume?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. Making this core would mean I&apos;d have to break the task into cp and core.  CP - for region server groups integration and quota control. Core - for basic namespace functionality.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&quot;Given the level of autonomy namespaces will provide tenants. &quot; what does this mean?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In a security-enabled cluster only system admins can create table, namespaces will introduce the notion of namespaces admins which will be granted to tenants. Thus enabling them to create tables themselves.&lt;/p&gt;

{quota}&lt;br/&gt;
Then, about storing, I suggest not making it part of table name. It seems brittle, and will limit our options if we want to add features lately due to backward compat.{quota}
&lt;p&gt;Having it part of the table name makes the changes less invasive (changes in meta schema, HTable apis, etc). Though I agree it would be nice to make this &lt;/p&gt;

{quota}&lt;br/&gt;
Also, how do we handle existing backward compat if someone already has a table name &quot;foo.bar&quot;?{quota}
&lt;p&gt;Last I checked &apos;.&apos; around allowed as part of the tablename. The cli will bork if &apos;.&apos; is used?&lt;/p&gt;

{quota}&lt;br/&gt;
Will root/meta have to be renamed hbase.root/hbase.meta to be in correct namespace, and how will it affect current assumptions about sorting if yes?{quota}
&lt;p&gt;As part of backward compatibility we can skip renaming root and meta and just explicitly support that they are part of the system namespace? These tables are already treated differently anyway?&lt;/p&gt;
</comment>
                            <comment id="13594946" author="enis" created="Wed, 6 Mar 2013 18:35:50 +0000"  >&lt;p&gt;+1 on having namespaces in core. Namespace/database&apos;s are universally understood in terms of the database space. We can keep the grouping of regionservers per namespace out of core, and deliver that as a part of the other region grouping issue. &lt;/p&gt;</comment>
                            <comment id="13594949" author="yuzhihong@gmail.com" created="Wed, 6 Mar 2013 18:38:12 +0000"  >&lt;p&gt;w.r.t. dot in table name:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; VALID_USER_TABLE_REGEX = &lt;span class=&quot;code-quote&quot;&gt;&quot;(?:[a-zA-Z_0-9][a-zA-Z_0-9.-]*)&quot;&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So dot should be allowed.&lt;/p&gt;</comment>
                            <comment id="13594951" author="toffer" created="Wed, 6 Mar 2013 18:38:44 +0000"  >&lt;p&gt;reposting coz of typos:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+1 on making core (as opposed to cp-s I assume?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. Making this core would mean I&apos;d have to break the task into cp and core. CP - for region server groups integration and quota control. Core - for basic namespace functionality.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&quot;Given the level of autonomy namespaces will provide tenants. &quot; what does this mean?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In a security-enabled cluster only system admins can create table, namespaces will introduce the notion of namespaces admins which will be granted to tenants. Thus enabling them to create tables themselves.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Then, about storing, I suggest not making it part of table name. It seems brittle, and will limit our options if we want to add features lately due to backward compat.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Having it part of the table name makes the changes less invasive (changes in meta schema, HTable apis, etc). Though I agree it would be nice to make this&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Also, how do we handle existing backward compat if someone already has a table name &quot;foo.bar&quot;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Last I checked &apos;.&apos; around allowed as part of the tablename. The cli will bork if &apos;.&apos; is used?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Will root/meta have to be renamed hbase.root/hbase.meta to be in correct namespace, and how will it affect current assumptions about sorting if yes?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As part of backward compatibility we can skip renaming root and meta and just explicitly support that they are part of the system namespace? These tables are already treated differently anyway?&lt;/p&gt;</comment>
                            <comment id="13594954" author="yuzhihong@gmail.com" created="Wed, 6 Mar 2013 18:44:26 +0000"  >&lt;p&gt;@Francis:&lt;br/&gt;
In the future when you want to correct your previous comment, you can quote the previous one and provide correction below the quote.&lt;/p&gt;</comment>
                            <comment id="13594958" author="yuzhihong@gmail.com" created="Wed, 6 Mar 2013 18:45:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7999&quot; title=&quot;Add &amp;#39;system&amp;#39; tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7999&quot;&gt;&lt;del&gt;HBASE-7999&lt;/del&gt;&lt;/a&gt; provides System table support.&lt;/p&gt;</comment>
                            <comment id="13594961" author="toffer" created="Wed, 6 Mar 2013 18:46:23 +0000"  >&lt;blockquote&gt;
&lt;p&gt;w.r.t. dot in table name:&lt;/p&gt;

&lt;p&gt;  public static final String VALID_USER_TABLE_REGEX = &quot;(?:&lt;span class=&quot;error&quot;&gt;&amp;#91;a-zA-Z_0-9&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;a-zA-Z_0-9.-&amp;#93;&lt;/span&gt;*)&quot;;&lt;/p&gt;

&lt;p&gt;So dot should be allowed&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks for the clarification. It seems like &apos;.&apos; and &apos;-&apos; isn&apos;t allowed only if it&apos;s the first character. For backward compatibility why don&apos;t we create namespaces for those tables that are named that way? &lt;/p&gt;</comment>
                            <comment id="13594977" author="enis" created="Wed, 6 Mar 2013 18:57:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;Having it part of the table name makes the changes less invasive (changes in meta schema, HTable apis, etc). Though I agree it would be nice to make this&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we should have namespaces as first class citizens. Namespaces have been traditionally used for grouping tables, setup replication, restricting access, etc. As a database, we can also use namespaces for acl, repication, backup, etc. &lt;/p&gt;</comment>
                            <comment id="13595005" author="toffer" created="Wed, 6 Mar 2013 19:23:28 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I think we should have namespaces as first class citizens. Namespaces have been traditionally used for grouping tables, setup replication, restricting access, etc. As a database, we can also use namespaces for acl, repication, backup, etc. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;They will be first class citizens. There will be a namespace table for namespace meta information. Also embedding namespace information in table name does not prevent this, we are just introducing the notion of fully-qualified table names (which we should introduce anyway). And store them in this form in meta/root.&lt;/p&gt;</comment>
                            <comment id="13595009" author="toffer" created="Wed, 6 Mar 2013 19:25:45 +0000"  >&lt;p&gt;Given that &apos;.&apos; is already used. Should we pick another delimiter for namespaces? Or should we provide a backward compatible way to support this. Ie creating namespaces for tablenames with &apos;.&apos;? &lt;/p&gt;</comment>
                            <comment id="13595075" author="sershe" created="Wed, 6 Mar 2013 20:38:23 +0000"  >&lt;p&gt;The latter may not necessarily be backward compatible...&lt;/p&gt;</comment>
                            <comment id="13595130" author="toffer" created="Wed, 6 Mar 2013 21:17:13 +0000"  >&lt;p&gt;Good point. For now I&apos;ll stick with &apos;/&apos; if there are no objections. And revisit &apos;.&apos; if anyone feels strongly about it.&lt;/p&gt;</comment>
                            <comment id="13595133" author="enis" created="Wed, 6 Mar 2013 21:21:45 +0000"  >&lt;p&gt;Hmm, ns.table is definitely more intuitive than /. SQL also uses that convention. &lt;/p&gt;</comment>
                            <comment id="13595152" author="sershe" created="Wed, 6 Mar 2013 21:48:48 +0000"  >&lt;p&gt;my point about backward compat was about the storage, not display. I.e. if people want to create a table &quot;a.b&quot; without namespace and be confused while viewing some table list, I think it&apos;s ok. Maybe we can disallow tables with dots.&lt;br/&gt;
If they have existing table &quot;a.b&quot; and NS is stored separately, again the worst thing that happens is user gets confused, reads the release notes and renames it. Should be ok to.&lt;br/&gt;
But if we /store/ NS in table name, then with table a.b, without special handing, system gets confused (thinks it&apos;s in NS &quot;a&quot;) after upgrade &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13595217" author="toffer" created="Wed, 6 Mar 2013 22:39:59 +0000"  >&lt;p&gt;I see, I am assuming we have to store namespace as part of the region name. And store them fully-qualified on hdfs/zookeeper/etc. Else we would be forced to have all table names to be globally unique which would different from database semantics. &lt;/p&gt;

&lt;p&gt;Another concern is if a user can run the same application code against 0.96.&lt;/p&gt;

&lt;p&gt;ie if I wanted to scan:&lt;/p&gt;

&lt;p&gt;&amp;gt; scan &apos;foo.bar&apos;&lt;/p&gt;

&lt;p&gt;Pre-NS this would scan table &apos;foo.bar&apos;. Post-NS, the system would parse this out as table bar in namespace foo. One way we could deal with this is read the table as Post-NS if it doesn&apos;t access read it as Pre-NS, check again if not then fail.&lt;/p&gt;</comment>
                            <comment id="13595222" author="toffer" created="Wed, 6 Mar 2013 22:42:41 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The latter may not necessarily be backward compatible...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you give an example to this? Thinking about it more, it seems to me you&apos;ll just end up with a lot of namespaces?&lt;/p&gt;</comment>
                            <comment id="13595438" author="jesse_yates" created="Thu, 7 Mar 2013 02:09:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;my point about backward compat was about the storage &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;IIRC we don&apos;t support backward compat for 0.96 backwards. As long as this goes into trunk, it should be fine going forward.&lt;/p&gt;</comment>
                            <comment id="13595439" author="jesse_yates" created="Thu, 7 Mar 2013 02:13:24 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; what kind of timeline are you planning for doing this work? I love to see it subsume &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7999&quot; title=&quot;Add &amp;#39;system&amp;#39; tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7999&quot;&gt;&lt;del&gt;HBASE-7999&lt;/del&gt;&lt;/a&gt;, but this is a much more involved change than what&apos;s going on there.&lt;/p&gt;</comment>
                            <comment id="13595447" author="sershe" created="Thu, 7 Mar 2013 02:17:42 +0000"  >&lt;p&gt;Well, there will be an upgrade script... then this will have to be added to it.&lt;br/&gt;
Also, trunk is now 98 so technically this should go into 95 then &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13595540" author="yuzhihong@gmail.com" created="Thu, 7 Mar 2013 04:35:45 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7999&quot; title=&quot;Add &amp;#39;system&amp;#39; tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7999&quot;&gt;&lt;del&gt;HBASE-7999&lt;/del&gt;&lt;/a&gt; has 0.96 as Fix Version.&lt;br/&gt;
If we agree that this feature is superset of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7999&quot; title=&quot;Add &amp;#39;system&amp;#39; tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7999&quot;&gt;&lt;del&gt;HBASE-7999&lt;/del&gt;&lt;/a&gt;, we should focus on this feature.&lt;/p&gt;</comment>
                            <comment id="13596171" author="toffer" created="Thu, 7 Mar 2013 18:45:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jesse_yates&quot; class=&quot;user-hover&quot; rel=&quot;jesse_yates&quot;&gt;Jesse Yates&lt;/a&gt; I&apos;m hoping to get an dev drop (0.94) by end of next week. I&apos;ll try to squeeze in a trunk patch. Does that work for you?&lt;/p&gt;</comment>
                            <comment id="13596175" author="jesse_yates" created="Thu, 7 Mar 2013 18:48:11 +0000"  >&lt;p&gt;Yeah, that would be great! Thanks Francis&lt;/p&gt;</comment>
                            <comment id="13596177" author="yuzhihong@gmail.com" created="Thu, 7 Mar 2013 18:50:11 +0000"  >&lt;p&gt;@Francis:&lt;br/&gt;
Can you work on the trunk patch first ?&lt;br/&gt;
If it gets ready before 0.95 RC0, it can go into 0.95&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13596185" author="toffer" created="Thu, 7 Mar 2013 18:55:21 +0000"  >&lt;p&gt;So it seems we&apos;re fine providing a migration script. So I&apos;ve gone ahead and produced a rough patch with the change. &lt;/p&gt;

&lt;p&gt;The general idea is to have a TableName class which encapsulates both namespace and tableQualifier (AKA the old table name). And this will be what gets passed around as much as possible internally. Table names are referenced fully qualified otherwise.&lt;br/&gt;
I&apos;ve also changed the tableDir on hdfs to include namespace as the parent directory. This will enable us to set HDFS quotas by namespace.&lt;/p&gt;

&lt;p&gt;I skipped the CRUD related stuff since that seems pretty straightforward. Let me know if this approach is acceptable.&lt;/p&gt;
</comment>
                            <comment id="13596250" author="enis" created="Thu, 7 Mar 2013 19:31:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;ve also changed the tableDir on hdfs to include namespace as the parent directory&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;How do you plan to enforce this? WAL&apos;s completely bypass the quota, and if a ns&apos;s quota fills up, it cannot flush, and compact, which will affect all of the other namespaces. I am not against the idea of having a parent namespace dir for tables, but just wondering whether this is really feasible. Can&apos;t we enforce quotas at the HBase level, since we are doing ACL&apos;s at the application layer for the same reasons. &lt;/p&gt;</comment>
                            <comment id="13596484" author="toffer" created="Thu, 7 Mar 2013 22:31:39 +0000"  >&lt;blockquote&gt;
&lt;p&gt;How do you plan to enforce this? WAL&apos;s completely bypass the quota, and if a ns&apos;s quota fills up, it cannot flush, and compact, which will affect all of the other namespaces. I am not against the idea of having a parent namespace dir for tables, but just wondering whether this is really feasible. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Maybe we should have WALs per namespace per server &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. If we want other namespace based features (ie replication) going this route makes sense?&lt;/p&gt;

&lt;p&gt;Internally we plan to do it using regionserver groups (one namespace per group). Since we don&apos;t want our tenants contending for other resources as well (disk, mem, cpu, etc).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Can&apos;t we enforce quotas at the HBase level, since we are doing ACL&apos;s at the application layer for the same reasons.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;d be good if we can leverage hdfs quota since it&apos;s already there and has worked well (at least for us). That&apos;s also less complexity for us, then we can focus on adding HBase specific Quota (ie regions, tables, etc).&lt;/p&gt;

</comment>
                            <comment id="13596648" author="yuzhihong@gmail.com" created="Fri, 8 Mar 2013 01:01:39 +0000"  >&lt;p&gt;Some questions on design doc.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;multiple namespaces can be part of the same region server group.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you elaborate a little bit ? From comment above: Internally we plan to do it using regionserver groups (one namespace per group).&lt;br/&gt;
I find the latter more intuitive.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;hbase &#173; admin tables:&#173;ROOT&#173;, .META., ACLs&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Would the group table from HBASE&#173;6721 belong to the above namespace ?&lt;/p&gt;</comment>
                            <comment id="13616439" author="toffer" created="Thu, 28 Mar 2013 17:19:04 +0000"  >&lt;p&gt;Sorry for the delay I was OOO last week. The patch is way bigger than I anticipated changing the path hierarchy took bulk of it as assumptions about it was all over the code. Here&apos;s an initial draft of the patch, functionally it&apos;s complete. I need some feedback before I can go further.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/10167/diff/#index_header&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/10167/diff/#index_header&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13616446" author="toffer" created="Thu, 28 Mar 2013 17:24:40 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Can you elaborate a little bit ? From comment above: Internally we plan to do it using regionserver groups (one namespace per group).&lt;br/&gt;
I find the latter more intuitive.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If you find that agreeable. We can keep it that way. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Would the group table from HBASE&#173;6721 belong to the above namespace ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep. depending on which ends up going in first will have to make that change.&lt;/p&gt;</comment>
                            <comment id="13616631" author="yuzhihong@gmail.com" created="Thu, 28 Mar 2013 20:49:02 +0000"  >&lt;p&gt;I am beginning to go over the code on review board.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;-there&apos;s a special case with tables in the default namespace: &amp;lt;table qualifier&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What tables would be placed in default namespace ? I think this (default namespace) may introduce confusion if there is no concrete use case.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;del&gt;I&apos;ve renamed the meta table to become -hbase&lt;/del&gt;.&lt;del&gt;meta&lt;/del&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Nice. This is the same as what was proposed over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8093&quot; title=&quot;Change the .META. table name for file system incompatibility&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8093&quot;&gt;&lt;del&gt;HBASE-8093&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13616640" author="yuzhihong@gmail.com" created="Thu, 28 Mar 2013 20:56:35 +0000"  >&lt;p&gt;Looks like the latest patch wasn&apos;t properly generated.&lt;br/&gt;
In HMaster.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
+=======
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.NamespaceDescriptor;
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.TableName;
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.ServerCallable;
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.exceptions.ConstraintException;
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.exceptions.DeserializationException;
+&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; first forward port of namespace trunk patch
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13616677" author="toffer" created="Thu, 28 Mar 2013 21:29:27 +0000"  >&lt;p&gt;Thanks for reviewing ted.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What tables would be placed in default namespace ? I think this (default namespace) may introduce confusion if there is no concrete use case.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s for existing tables that never used &apos;.&apos; as part of the table name. So they don&apos;t have to be renamed. They will all fall into the default namespace bucket and be accessed by the application the same way.&lt;/p&gt;</comment>
                            <comment id="13616680" author="toffer" created="Thu, 28 Mar 2013 21:32:57 +0000"  >&lt;p&gt;This of default namespace akin to the default package in java.&lt;/p&gt;</comment>
                            <comment id="13616687" author="toffer" created="Thu, 28 Mar 2013 21:41:13 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Looks like the latest patch wasn&apos;t properly generated.&lt;br/&gt;
In HMaster.java:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sorry about that. Updated the patch.&lt;/p&gt;</comment>
                            <comment id="13616716" author="enis" created="Thu, 28 Mar 2013 22:08:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;ve renamed the meta table to become -hbase.meta&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Nice. This is the same as what was proposed over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8093&quot; title=&quot;Change the .META. table name for file system incompatibility&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8093&quot;&gt;&lt;del&gt;HBASE-8093&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, let&apos;s solve this issue here once and for all. thinking about it, I have a hard time understanding why we need to use special chars in catalog tables. Can&apos;t we just have a namespace called simple &quot;system&quot;, and have tables named &quot;system.META&quot; and &quot;system.ROOT&quot;. I say no funky -, _, . escaping stuff. &lt;/p&gt;</comment>
                            <comment id="13616746" author="yuzhihong@gmail.com" created="Thu, 28 Mar 2013 22:39:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;It&apos;s for existing tables that never used &apos;.&apos; as part of the table name. So they don&apos;t have to be renamed.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am still going through your code.&lt;br/&gt;
Would user be able to create table in default namespace after migration ?&lt;br/&gt;
Put in another way: what privilege is required to do the above ?&lt;/p&gt;</comment>
                            <comment id="13616826" author="yuzhihong@gmail.com" created="Thu, 28 Mar 2013 23:40:31 +0000"  >&lt;p&gt;TestMasterFailover failed with patch. In test output, I saw:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &amp;lt;error message=&lt;span class=&quot;code-quote&quot;&gt;&quot;test timed out after 180000 milliseconds&quot;&lt;/span&gt; type=&lt;span class=&quot;code-quote&quot;&gt;&quot;java.lang.Exception&quot;&lt;/span&gt;&amp;gt;java.lang.Exception: test timed out after 180000 milliseconds
  at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(Native Method)
  at org.apache.hadoop.hbase.util.Threads.sleep(Threads.java:133)
  at org.apache.hadoop.hbase.MiniHBaseCluster.waitForActiveAndReadyMaster(MiniHBaseCluster.java:469)
  at org.apache.hadoop.hbase.HBaseCluster.waitForActiveAndReadyMaster(HBaseCluster.java:206)
  at org.apache.hadoop.hbase.master.TestMasterFailover.testMasterFailoverWithMockedRITOnDeadRS(TestMasterFailover.java:759)
...
2013-03-28 16:27:21,666 INFO  [Master:0;10.11.2.252,51376,1364513236949] master.HMaster(954): Failed to contact server
java.io.IOException: java.io.IOException: org.apache.hadoop.hbase.exceptions.UnknownProtocolException: Server is not handling protocol org.apache.hadoop.hbase.client.AdminProtocol
  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
  at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
  at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:95)
  at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:79)
  at org.apache.hadoop.hbase.ipc.ProtobufRpcClientEngine$Invoker.invoke(ProtobufRpcClientEngine.java:146)
  at com.sun.proxy.$Proxy17.getRegionInfo(Unknown Source)
  at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getRegionInfo(ProtobufUtil.java:1269)
  at org.apache.hadoop.hbase.master.HMaster.assignSystemTables(HMaster.java:949)
  at org.apache.hadoop.hbase.master.HMaster.finishInitialization(HMaster.java:780)
  at org.apache.hadoop.hbase.master.HMaster.run(HMaster.java:536)
  at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:680)
Caused by: org.apache.hadoop.hbase.ipc.RemoteWithExtrasException: java.io.IOException: org.apache.hadoop.hbase.exceptions.UnknownProtocolException: Server is not handling protocol org.apache.hadoop.hbase.client.AdminProtocol
  at org.apache.hadoop.hbase.ipc.ProtobufRpcServerEngine$Server.call(ProtobufRpcServerEngine.java:166)
  at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1871)

  at org.apache.hadoop.hbase.ipc.HBaseClient.call(HBaseClient.java:1321)
  at org.apache.hadoop.hbase.ipc.ProtobufRpcClientEngine$Invoker.invoke(ProtobufRpcClientEngine.java:131)
  ... 6 more
...
2013-03-28 16:30:39,937 INFO  [MASTER_META_SERVER_OPERATIONS-10.11.2.252,51577,1364513413623-0] master.RegionStates(264): Region {NAME =&amp;gt; &apos;-hbase-.-meta-,,1&apos;, STARTKEY =&amp;gt; &apos;&apos;, ENDKEY =&amp;gt; &apos;&apos;, ENCODED =&amp;gt; 715583861,} transitioned from {-hbase-.-meta-,,1.715583861 state=PENDING_OPEN, ts=1364513439937, server=10.11.2.252,51480,1364513407082} to {-hbase-.-meta-,,1.715583861 state=PENDING_OPEN, ts=1364513439937, server=10.11.2.252,51480,1364513407082}
2013-03-28 16:30:39,938 WARN  [MASTER_META_SERVER_OPERATIONS-10.11.2.252,51577,1364513413623-0] master.AssignmentManager(1869): Failed assignment of -hbase-.-meta-,,1.715583861 to 10.11.2.252,51480,1364513407082, trying to assign elsewhere instead; &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt;=10 of 10
org.apache.hadoop.hbase.ipc.HBaseClient$FailedServerException: This server is in the failed servers list: /10.11.2.252:51480
  at org.apache.hadoop.hbase.ipc.HBaseClient$Connection.setupIOstreams(HBaseClient.java:785)
  at org.apache.hadoop.hbase.ipc.HBaseClient.getConnection(HBaseClient.java:1414)
  at org.apache.hadoop.hbase.ipc.HBaseClient.call(HBaseClient.java:1299)
  at org.apache.hadoop.hbase.ipc.ProtobufRpcClientEngine$Invoker.invoke(ProtobufRpcClientEngine.java:131)
  at com.sun.proxy.$Proxy17.openRegion(Unknown Source)
  at org.apache.hadoop.hbase.master.ServerManager.sendRegionOpen(ServerManager.java:603)
  at org.apache.hadoop.hbase.master.AssignmentManager.assign(AssignmentManager.java:1796)
  at org.apache.hadoop.hbase.master.AssignmentManager.assign(AssignmentManager.java:1431)
  at org.apache.hadoop.hbase.master.AssignmentManager.assign(AssignmentManager.java:1410)
  at org.apache.hadoop.hbase.master.AssignmentManager.assignMeta(AssignmentManager.java:2303)
  at org.apache.hadoop.hbase.master.handler.MetaServerShutdownHandler.verifyAndAssignMeta(MetaServerShutdownHandler.java:100)
  at org.apache.hadoop.hbase.master.handler.MetaServerShutdownHandler.verifyAndAssignMetaWithRetries(MetaServerShutdownHandler.java:124)
  at org.apache.hadoop.hbase.master.handler.MetaServerShutdownHandler.process(MetaServerShutdownHandler.java:69)
  at org.apache.hadoop.hbase.executor.EventHandler.run(EventHandler.java:130)
  at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13616850" author="toffer" created="Thu, 28 Mar 2013 23:53:12 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I am still going through your code.&lt;br/&gt;
Would user be able to create table in default namespace after migration ?&lt;br/&gt;
Put in another way: what privilege is required to do the above ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;namespace affiliation is determine by table name during creation.&lt;/p&gt;

&lt;p&gt;ie&lt;/p&gt;

&lt;p&gt;#create table in namespace foo&lt;br/&gt;
create &apos;foo.my_table&apos;,&apos;f&apos;&lt;/p&gt;

&lt;p&gt;#create table in namespace default&lt;br/&gt;
create &apos;my_table&apos;,&apos;f&apos;&lt;/p&gt;
</comment>
                            <comment id="13616852" author="toffer" created="Thu, 28 Mar 2013 23:54:36 +0000"  >&lt;blockquote&gt;
&lt;p&gt;TestMasterFailover failed with patch. In test output, I saw:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep, as I mentioned in reviewboard. There are 3 tests that are failing. Have yet to determine if it is related to this patch. &lt;/p&gt;</comment>
                            <comment id="13616860" author="yuzhihong@gmail.com" created="Fri, 29 Mar 2013 00:03:07 +0000"  >&lt;p&gt;Without the patch, I got:&lt;/p&gt;

&lt;p&gt;Running org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
2013-03-28 16:57:21.814 java&lt;span class=&quot;error&quot;&gt;&amp;#91;4597:db03&amp;#93;&lt;/span&gt; Unable to load realm info from SCDynamicStore&lt;br/&gt;
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 51.262 sec&lt;/p&gt;</comment>
                            <comment id="13616874" author="toffer" created="Fri, 29 Mar 2013 00:10:21 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Yes, let&apos;s solve this issue here once and for all. thinking about it, I have a hard time understanding why we need to use special chars in catalog tables. Can&apos;t we just have a namespace called simple &quot;system&quot;, and have tables named &quot;system.META&quot; and &quot;system.ROOT&quot;. I say no funky -, _, . escaping stuff. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;AFAIK, if the META table goes offline due to RS failure. There is no special case to make it&apos;s assignment a priority. And priority is based on lexical ordering, in which case we will need the funky prefix. Not unless we&apos;d want to add complexity to handle that logic. &lt;/p&gt;

&lt;p&gt;BTW the check is not in yet. But I&apos;d also like to remove &apos;.&apos; as an option for table name. Beyond the proposed namespace delimiter usage.&lt;/p&gt;</comment>
                            <comment id="13616876" author="toffer" created="Fri, 29 Mar 2013 00:11:47 +0000"  >&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;p&gt;Without the patch, I got:&lt;/p&gt;

&lt;p&gt;Running org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
2013-03-28 16:57:21.814 java&lt;span class=&quot;error&quot;&gt;&amp;#91;4597:db03&amp;#93;&lt;/span&gt; Unable to load realm info from SCDynamicStore&lt;br/&gt;
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 51.262 sec&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh, maybe it&apos;s just my machine then. What was the purpose of your previous comment then?&lt;/p&gt;</comment>
                            <comment id="13616882" author="yuzhihong@gmail.com" created="Fri, 29 Mar 2013 00:18:05 +0000"  >&lt;p&gt;I plan to revisit this test after finishing one round of review.&lt;/p&gt;</comment>
                            <comment id="13629472" author="enis" created="Thu, 11 Apr 2013 22:14:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt;, I would like to get namespaces in 0.96, because it fits well into the singularity. Getting it in later would be hard. I&apos;ve put up some comments at RB. I can offer some help should you need with review / split / etc. &lt;/p&gt;</comment>
                            <comment id="13639819" author="toffer" created="Tue, 23 Apr 2013 23:24:08 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; I would very much like to get it in as well. I&apos;ve addressed your comments. Also I&apos;ve broken down the pieces into subtasks. The patch on RB is for the first subtask. We currently have 1-3 running on 0.94. We&apos;ll forward port the 2nd and 3rd piece as soon as the first task completed to keep things manageable.&lt;/p&gt;</comment>
                            <comment id="13640164" author="toffer" created="Wed, 24 Apr 2013 06:42:03 +0000"  >&lt;p&gt;I&apos;ve updated the design doc with a component diagram and some notes to make reviewing the code a bit easier. Let me know.&lt;/p&gt;</comment>
                            <comment id="13640713" author="enis" created="Wed, 24 Apr 2013 17:45:41 +0000"  >&lt;p&gt;Thanks Francis, I&apos;ll take a look at this today. &lt;/p&gt;</comment>
                            <comment id="13645024" author="yuzhihong@gmail.com" created="Mon, 29 Apr 2013 23:16:18 +0000"  >&lt;p&gt;Going over the design doc, I have a few questions:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;As a first step we only intend to limit the number of tables and regions a given namespace may contain.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Regions may have different sizes across namespaces. Would it make sense to limit the (estimated) total size of regions in a particular namespace ?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;namespace_create &#8216;&amp;lt;namespace&amp;gt;&#8217;, {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What about naming the new command create_namespace (with verb at the beginning) ?&lt;/p&gt;</comment>
                            <comment id="13645113" author="toffer" created="Tue, 30 Apr 2013 00:55:51 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Regions may have different sizes across namespaces. Would it make sense to limit the (estimated) total size of regions in a particular namespace ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That&apos;s disk space quota. Right now we plan to enforce it using hdfs quota and see how that goes. That way we don&apos;t have to reinvent the wheel.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What about naming the new command create_namespace (with verb at the beginning) ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I wanted to namespace the commands &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Let me know if the convention is different for HBase.&lt;/p&gt;</comment>
                            <comment id="13648848" author="yuzhihong@gmail.com" created="Fri, 3 May 2013 22:38:25 +0000"  >&lt;p&gt;Using dot (&apos;.&apos;) as separator is intuitive. Would using some other character make sense so that migration effort is lower ?&lt;/p&gt;

&lt;p&gt;For security, should each namespace have its own permission settings ?&lt;/p&gt;

&lt;p&gt;For enforcing namespace quota, that would be implemented in a follow-on JIRA, right ?&lt;/p&gt;</comment>
                            <comment id="13648860" author="yuzhihong@gmail.com" created="Fri, 3 May 2013 22:52:48 +0000"  >&lt;p&gt;@Francis:&lt;br/&gt;
Can you add new tests for this feature ?&lt;br/&gt;
The new tests should include unit tests and, integration tests.&lt;/p&gt;</comment>
                            <comment id="13649282" author="stack" created="Sun, 5 May 2013 05:51:54 +0000"  >&lt;p&gt;Never mind merit, this issue has it in spades, if this radical refactor is to make it into 0.95, the activity needs to pick up.  For integration to happen, the patch needs to be freighted w/ tests and migration code able to promptly move hbase from its current layout to namespace layout.  The patch when done should have a glow of confidence w/ ready answers for how to deal with issues such as pre-existing tables that have a &apos;.&apos; in their name.&lt;/p&gt;

&lt;p&gt;It has been suggested that we make a branch to speed dev on this issue which should help move things along; a branch will need a sponsor/conmiitter.  I could volunteer but there are probably better mentors than sloppy I who can help along this issue and advise on what is needed to make the cut-off date fast looming.&lt;/p&gt;</comment>
                            <comment id="13649295" author="yuzhihong@gmail.com" created="Sun, 5 May 2013 07:44:52 +0000"  >&lt;p&gt;I volunteer to be the sponsor. &lt;/p&gt;</comment>
                            <comment id="13651332" author="toffer" created="Tue, 7 May 2013 21:31:32 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Using dot (&apos;.&apos;) as separator is intuitive. Would using some other character make sense so that migration effort is lower ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;When I was asking about a different delimiter. No one was really happy with anything else but a &quot;.&quot;. If  you have a suggestion please let us know.&lt;/p&gt;</comment>
                            <comment id="13651335" author="toffer" created="Tue, 7 May 2013 21:36:02 +0000"  >&lt;blockquote&gt;
&lt;p&gt;@Francis:&lt;br/&gt;
Can you add new tests for this feature ?&lt;br/&gt;
The new tests should include unit tests and, integration tests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;There are unit tests I can have it run as an IT test as well. Though the real test really is the existing tests as the main issues are updating/replacing code segments which make assumptions about the directory layout. The tricky ones were in snapshots, hbck and splits. In this patch I&apos;ve gotten all of those to pass. We can add more tests to these components as needed.&lt;/p&gt;</comment>
                            <comment id="13651336" author="toffer" created="Tue, 7 May 2013 21:38:25 +0000"  >&lt;blockquote&gt;
&lt;p&gt;For security, should each namespace have its own permission settings ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, the permissions are similar to to directory privileges. You would need write access to a namespace to be able to create and drop tables. We already have a patch for this in 0.94. We&apos;ll put it up once we sort out the core patch.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For enforcing namespace quota, that would be implemented in a follow-on JIRA, right ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;yep see subtask. We also have this implemented will put up patch once most things are sorted out with core patch.&lt;/p&gt;</comment>
                            <comment id="13651338" author="yuzhihong@gmail.com" created="Tue, 7 May 2013 21:38:59 +0000"  >&lt;p&gt;@Francis:&lt;br/&gt;
Take a look at the summary here:&lt;br/&gt;
&lt;a href=&quot;http://search-hadoop.com/m/K0wzj1V5vpu&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/K0wzj1V5vpu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Delimiter and directory structure for namespace support is discussed in the middle of the above summary.&lt;/p&gt;</comment>
                            <comment id="13651420" author="toffer" created="Tue, 7 May 2013 23:16:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt; thanks but there doesn&apos;t seem to be any consensus? &lt;/p&gt;</comment>
                            <comment id="13651423" author="yuzhihong@gmail.com" created="Tue, 7 May 2013 23:20:00 +0000"  >&lt;p&gt;That&apos;s right.&lt;/p&gt;

&lt;p&gt;Maybe you can start discussion on dev@hbase for this topic.&lt;/p&gt;</comment>
                            <comment id="13651428" author="toffer" created="Tue, 7 May 2013 23:24:22 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Never mind merit, this issue has it in spades, if this radical refactor is to make it into 0.95, the activity needs to pick up. For integration to happen, the patch needs to be freighted w/ tests and migration code able to promptly move hbase from its current layout to namespace layout. The patch when done should have a glow of confidence w/ ready answers for how to deal with issues such as pre-existing tables that have a &apos;.&apos; in their name.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; Would we be able to get it in quicker with a feature branch? The reason I am asking is because part of what&apos;s challenging about this enhancement is catching all the code which makes assumption on path changes. And that will continue to grow until we provide the helper functions to be used. We have an 0.94 version of this patch working in sandbox with active users. So I believe basic functionality is working. The big thing missing is the migration script (We don&apos;t use &apos;.&apos; in table names).&lt;/p&gt;
</comment>
                            <comment id="13651442" author="toffer" created="Tue, 7 May 2013 23:42:25 +0000"  >&lt;p&gt;Another option is to factor the helper piece out of this class and get that committed quicker. Apart from extra work, we won&apos;t be able to verify everything is covered without the rest of the patch. Thoughts?&lt;/p&gt;</comment>
                            <comment id="13651464" author="eclark" created="Wed, 8 May 2013 00:10:43 +0000"  >&lt;p&gt;I think that adding a parameter for namespace is cleaner.  It would mean that we don&apos;t add need to rename tables.  People can continue to keep their table names.  We also then get an easier path to infer the default namespace.&lt;/p&gt;</comment>
                            <comment id="13651527" author="toffer" created="Wed, 8 May 2013 01:20:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; We can add that an the interface level to support both means of identifying tables. At the very least we will have to store table names fully qualified in the catalog tables. Storing it on hdfs and zk the same way makes things easier as well.&lt;/p&gt;

&lt;p&gt;By default namespace did you mean something like a  &quot;use &amp;lt;namespace&amp;gt;&quot; command in the cli?&lt;/p&gt;</comment>
                            <comment id="13651540" author="eclark" created="Wed, 8 May 2013 01:45:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;At the very least we will have to store table names fully qualified in the catalog tables.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;True, but we don&apos;t need to use . here, or expose it to the user.&lt;br/&gt;
So I&apos;m saying most places should use a different character to store the table name, and I would argue that we shouldn&apos;t expose that fully qualified table name to the user at all.&lt;/p&gt;

&lt;h3&gt;&lt;a name=&quot;Withanamespace&quot;&gt;&lt;/a&gt;With a namespace&lt;/h3&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;create &apos;namespace&apos;, &apos;t1&apos;, &apos;f1&apos;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Places something in meta like: &apos;namespace,t1,,hash&apos;&lt;/p&gt;

&lt;p&gt;Put Usage:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
put &apos;namespace&apos;, &apos;t1&apos;, &apos;r1&apos;, &apos;c1&apos;, &apos;value&apos;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
use &apos;namespace&apos;
put &apos;t1&apos;, &apos;r1&apos;, &apos;c1&apos;, &apos;value&apos;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a name=&quot;defaultspace&quot;&gt;&lt;/a&gt;default space&lt;/h3&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
create &apos;t1&apos;, &apos;f1&apos;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;places something in meta like: &apos;default,t1,,hash&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
put &apos;t1&apos;, &apos;r1&apos;, &apos;c1&apos;, &apos;value&apos;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
put &apos;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&apos;, &apos;t1&apos;, &apos;r1&apos;, &apos;c1&apos;, &apos;value&apos;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Comma is already reserved and we can use it for everywhere that we need a string name.  But we shouldn&apos;t expose that to the user.  We shouldn&apos;t overload table name with two different parts.  It gets confusing for users when one parameter actually represents two different things (namespace and table name).&lt;/p&gt;</comment>
                            <comment id="13651569" author="yuzhihong@gmail.com" created="Wed, 8 May 2013 02:40:00 +0000"  >&lt;p&gt;Should we support cross-namespace constructs ? If so, namespace would be exposed to user.&lt;/p&gt;

&lt;p&gt;For Oracle, some Namespaces are reserved:&lt;br/&gt;
&lt;a href=&quot;http://docs.oracle.com/cd/B28359_01/appdev.111/b31231/appb.htm#BABFFDFC&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.oracle.com/cd/B28359_01/appdev.111/b31231/appb.htm#BABFFDFC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This means an ordinary user query can easily reference more than one namespace.&lt;/p&gt;</comment>
                            <comment id="13651570" author="toffer" created="Wed, 8 May 2013 02:40:50 +0000"  >&lt;p&gt;I see. We need to expose it mainly for backwards compatibility. Also isn&apos;t being able to reference a fully-qualified table name common practice in databases? So users aren&apos;t learning something new here.&lt;/p&gt;</comment>
                            <comment id="13651583" author="eclark" created="Wed, 8 May 2013 03:16:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should we support cross-namespace constructs ? If so, namespace would be exposed to user.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;From my point of view the most important usability concern should be the java api, with thrift second.  My proposal would allow cross namespace very easily by just creating two different HTable&apos;s in different namespaces.  &lt;/p&gt;

&lt;p&gt;The shell is nice but it&apos;s just a convenience utility.  We shouldn&apos;t make the most used case harder or more confusing chasing some dream of having a sql shell.  In my opinion since HBase is not Oracle&apos;s 11g, it shouldn&apos;t value being like their sql.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We need to expose it mainly for backwards compatibility.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you talk a little about this.  I thought the examples I posted showed we could be backwards compatibile by adding an optional paramter (htable would be treated in a very similar manner).&lt;/p&gt;</comment>
                            <comment id="13651591" author="toffer" created="Wed, 8 May 2013 03:31:10 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Can you talk a little about this. I thought the examples I posted showed we could be backwards compatibile by adding an optional paramter (htable would be treated in a very similar manner).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Essentially we need to keep the &quot;HTable(byte[] tableName, Configuration config)&quot; constructor. The current implementation would assume a table is part of the default namespace if only the table name is provided. &lt;/p&gt;

&lt;p&gt;Apart from potentially confusing our users. Do you have any other concerns against supporting a fully-qualified table name? &lt;/p&gt;</comment>
                            <comment id="13652409" author="stack" created="Wed, 8 May 2013 22:09:31 +0000"  >&lt;p&gt;Regards sponsoring this issue, would suggest more than &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt; as volunteer is needed if serious about getting this in to 0.95/0.96 (I am working on 0.95 testing and last issues so do not have bandwidth to help here)&lt;/p&gt;

&lt;p&gt;IMO, the time for new features in 0.95 is loooooonnnnnnggggggg past so hard to justify holding up release for this.&lt;/p&gt;

&lt;p&gt;Lets get a feature branch going.  I can help set up apache build of the branch or do it over on andrew&apos;s ec2... so can get some test runs going.&lt;/p&gt;

&lt;p&gt;Need to work out the dot problem.  Can we do the search in two places as is suggested over on the list (internally, Elliott has suggested how to implement); i.e. only new tables go into namespace?  (Cannot gauge the migration problem till know how this plays out)&lt;/p&gt;

&lt;p&gt;If this goes into 0.95, table grouping can be done after 0.95 as CPs?  Not clear after reading above.&lt;/p&gt;

&lt;p&gt;+1 on getting rid of funky system tables stuff (but yeah, as per Francis above, they were given the funny names so they sorted before user tables).&lt;/p&gt;

&lt;p&gt;Breaking patch into pieces will help yes, especially ones that collect into one place our interaction with filesystem (see Matteo&apos;s recent work).&lt;/p&gt;

&lt;p&gt;On the design, needs date, author, and JIRA number.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;As a first step we only intend to limit the number of tables and regions a given namespace may contain.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This can be done later, right?  You&apos;d have to do it in hbase.&lt;/p&gt;

&lt;p&gt;Are we saying the default ns is called &apos;default&apos;?   Or that it has no name?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;NamespaceController coprocessor running on region servers to correctly enforce quota restrictions&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is this so we can get callbacks on change? (I wish we had in place a general config. change notification mechanism that this could leverage rather than have to build its own)&lt;/p&gt;

&lt;p&gt;How much of this design has to be in place for 0.96 to ship?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&amp;lt;ROOT&amp;gt;/data/&amp;lt;NAMESPACE&amp;gt;/&amp;lt;TABLE&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why the need for &apos;data&apos; in above?&lt;/p&gt;

&lt;p&gt;Looking quickly at the attached patch (will look at rb later):&lt;/p&gt;

&lt;p&gt;Below is interesting (smile)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        &amp;lt;hadoop.version&amp;gt;0.23.3&amp;lt;/hadoop.version&amp;gt;
+        &amp;lt;hadoop.version&amp;gt;0.23.7-SNAPSHOT&amp;lt;/hadoop.version&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Patch introduces TableName and TableName is used to hold namespace and the name of the table.  NS is a concept superior to tables.  It should be elsewhere, in a NS object?  (model seems off).&lt;/p&gt;

&lt;p&gt;NamespaceDescriptor implements java Serializable?&lt;/p&gt;

&lt;p&gt;NamespaceDesc.. has notion of groups.  Is that right given they are add on for later?&lt;/p&gt;

&lt;p&gt;Will look at rb patch next.  What is attached doesn&apos;t seem enough.  Will be back.&lt;/p&gt;

</comment>
                            <comment id="13652457" author="toffer" created="Wed, 8 May 2013 22:51:31 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Regards sponsoring this issue, would suggest more than Ted Yu as volunteer is needed if serious about getting this in to 0.95/0.96 (I am working on 0.95 testing and last issues so do not have bandwidth to help here)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; do you have any bandwidth? Since you&apos;ve shown interested earlier &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;IMO, the time for new features in 0.95 is loooooonnnnnnggggggg past so hard to justify holding up release for this.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Looking at the comments there aren&apos;t any major issues apart from the delimiter. The namespace affected tests are passing.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lets get a feature branch going. I can help set up apache build of the branch or do it over on andrew&apos;s ec2... so can get some test runs going.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Either sounds fine to me.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Need to work out the dot problem. Can we do the search in two places as is suggested over on the list (internally, Elliott has suggested how to implement); i.e. only new tables go into namespace? (Cannot gauge the migration problem till know how this plays out)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Working on my existing patch we can try out elliot&apos;s suggestion which would essentially require the new interfaces&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If this goes into 0.95, table grouping can be done after 0.95 as CPs? Not clear after reading above.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep it&apos;s possible. Though the patch will need some small changes in assignment manager and LoadBalancer interface, etc. Better to get those in soon if we&apos;re in a hurry. I can separate those out as a separate patch as well?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Breaking patch into pieces will help yes, especially ones that collect into one place our interaction with filesystem (see Matteo&apos;s recent work).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s gonna be hard, will give this a try. &lt;/p&gt;</comment>
                            <comment id="13652485" author="toffer" created="Wed, 8 May 2013 23:04:35 +0000"  >&lt;blockquote&gt;
&lt;p&gt;This can be done later, right? You&apos;d have to do it in hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Are we saying the default ns is called &apos;default&apos;? Or that it has no name?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It has no name similar to the java default package.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Is this so we can get callbacks on change? (I wish we had in place a general config. change notification mechanism that this could leverage rather than have to build its own)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I wish too. We can refactor after this to create one?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How much of this design has to be in place for 0.96 to ship?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We&apos;re watching out for backwards compatibility? I believe core namespace should be enough. We can put the rest in 96.1, quota stuff needs addition to the cli. Security has some changes as well to support namespaces but it&apos;s just an extension. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Below is interesting (smile)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s our secret version &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Patch introduces TableName and TableName is used to hold namespace and the name of the table. NS is a concept superior to tables. It should be elsewhere, in a NS object? (model seems off).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My line of thinking was that namespace is a component of tableName ie &quot;tableName = &amp;lt;table namespace&amp;gt;.&amp;lt;table qualifier&amp;gt;&quot;. Just like column = CF:CQ.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NamespaceDesc.. has notion of groups. Is that right given they are add on for later?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Where did you see that? Group information is added as a KV pair to the NamespaceDesc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NamespaceDescriptor implements java Serializable&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Oops will remove that&lt;/p&gt;
</comment>
                            <comment id="13652495" author="stack" created="Wed, 8 May 2013 23:09:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;NamespaceDesc.. has notion of groups. Is that right given they are add on for later?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In patch attached here.  May be gone in the rb version.&lt;/p&gt;</comment>
                            <comment id="13652503" author="stack" created="Wed, 8 May 2013 23:22:38 +0000"  >&lt;p&gt;Looking at what is up in rb, it is a massive patch that still has the migration part to be done.  My fear is that we&apos;ll race to get this into 0.95 and it will not be well baked enough &amp;#8211; and it can destabilize &apos;normal&apos; operation.  I am currently inclining against its inclusion (open to convincing otherwise but getting my opinion out there).&lt;/p&gt;</comment>
                            <comment id="13652519" author="toffer" created="Wed, 8 May 2013 23:41:03 +0000"  >&lt;p&gt;RB patch is attached to subtask.&lt;/p&gt;</comment>
                            <comment id="13652547" author="toffer" created="Thu, 9 May 2013 00:05:26 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Looking at what is up in rb, it is a massive patch that still has the migration part to be done. My fear is that we&apos;ll race to get this into 0.95 and it will not be well baked enough &#8211; and it can destabilize &apos;normal&apos; operation. I am currently inclining against its inclusion (open to convincing otherwise but getting my opinion out there).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Our 0.94 patch is almost fully-baked so far so good...we already have it running in sandbox with users. Would a quick meetup with the people involved help iron things out?&lt;/p&gt;</comment>
                            <comment id="13653238" author="enis" created="Thu, 9 May 2013 21:28:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;Enis Soztutar do you have any bandwidth? Since you&apos;ve shown interested earlier &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am up for it. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Would a quick meetup with the people involved help iron things out?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1. It is great that 0.94 version is in shape. The remaining questions are to handle migration, and the separator issue, and testing I guess. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Lets get a feature branch going. I can help set up apache build of the branch or do it over on andrew&apos;s ec2... so can get some test runs going.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am not a big fan of svn branches, but if it will help in reviews and testing, I can help with that.&lt;/p&gt;</comment>
                            <comment id="13654551" author="toffer" created="Fri, 10 May 2013 15:41:32 +0000"  >&lt;p&gt;It seems we&apos;ve come to a consensus on the upgrade approach.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In essence it&apos;ll do the following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Tables without &apos;.&apos; will be moved into the default namespace.&lt;/li&gt;
	&lt;li&gt;Tables with &apos;.&apos; will be move into new namespaces&lt;/li&gt;
	&lt;li&gt;namespaces will be delimited by the last &apos;.&apos; in the table name&lt;br/&gt;
   ie org.apache.hbase.MyTable, namespace = org.apache.hbase&lt;/li&gt;
	&lt;li&gt;In both cases the oldTableName is the same as the fullTableName&lt;/li&gt;
	&lt;li&gt;all existing apis and cli commands will be expecting full table names unless explicitly stated&lt;/li&gt;
	&lt;li&gt;a RenameTable tool will be provided to rename offline tables&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;So I&apos;ll start implementing it.&lt;/p&gt;

&lt;p&gt;Discussion is here:&lt;br/&gt;
&lt;a href=&quot;http://grokbase.com/p/hbase/dev/13598jegtp/discuss-namespace-delimiter&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://grokbase.com/p/hbase/dev/13598jegtp/discuss-namespace-delimiter&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13654555" author="yuzhihong@gmail.com" created="Fri, 10 May 2013 15:47:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;a RenameTable tool will be provided to rename offline tables&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It should be noted that the rename is done by first taking snapshot of the table and cloning to the new table name.&lt;/p&gt;</comment>
                            <comment id="13654601" author="stack" created="Fri, 10 May 2013 16:58:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;It should be noted that the rename is done by first taking snapshot of the table and cloning to the new table name.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No it shouldn&apos;t.  There was no consensus on the list and this is an exploratory effort so no need of constraint.&lt;/p&gt;

&lt;p&gt;One thought I had was that if all tables need to be moved, mayhaps we just say snapshots are broke on upgrade or rather than a tool for table rename, instead, we&apos;d have a tool that did surgery on snapshots to adjust them to match the new layout (advantage of this latter is that it can be done offline, not inline with migration &amp;#8211; though, I have no idea this would work... ask the snapshotters Jon, Matteo and Jesse).&lt;/p&gt;</comment>
                            <comment id="13656327" author="toffer" created="Mon, 13 May 2013 20:19:56 +0000"  >&lt;p&gt;I&apos;ve uploaded a first stab of the migration code on RB and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8408&quot; title=&quot;Implement namespace&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8408&quot;&gt;&lt;del&gt;HBASE-8408&lt;/del&gt;&lt;/a&gt;. Haven&apos;t addressed any of the comments yet so I could get this out first.&lt;/p&gt;

&lt;p&gt;I added a unit test which tests migration on a tarballed 0.94 rootdir. It does simple verification that the tables and snapshots have been migrated properly.&lt;/p&gt;</comment>
                            <comment id="13663155" author="toffer" created="Tue, 21 May 2013 17:27:49 +0000"  >&lt;p&gt;I believe the necessary code to verify this migration approach is in place. Please let me know if there are any concerns.&lt;/p&gt;</comment>
                            <comment id="13663646" author="toffer" created="Wed, 22 May 2013 01:03:34 +0000"  >&lt;p&gt;Ran tests see below. &quot;testDelayedRpcImmediateReturnValue&quot; seems to be flakey. It passed when I reran the class separately.&lt;/p&gt;

&lt;p&gt;Small and medium (and large):&lt;/p&gt;

&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Tests in error:&lt;br/&gt;
  testClusterStatus(org.apache.hadoop.hbase.client.TestHCM): Unexpected exception, expected&amp;lt;org.apache.hadoop.hbase.exceptions.RegionServerStoppedException&amp;gt; but was&amp;lt;junit.framework.AssertionFailedError&amp;gt;&lt;br/&gt;
  testRunShellTests(org.apache.hadoop.hbase.client.TestShell): (RuntimeError) Shell unit tests failed. Check output file for details.&lt;br/&gt;
  testDelayedRpcImmediateReturnValue(org.apache.hadoop.hbase.ipc.TestDelayedRpc): Index: 1, Size: 1&lt;/p&gt;

&lt;p&gt;Tests run: 1494, Failures: 0, Errors: 3, Skipped: 13&lt;/p&gt;

&lt;p&gt;Large Tests:&lt;/p&gt;

&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Tests in error:&lt;br/&gt;
  testRunShellTests(org.apache.hadoop.hbase.client.TestShell): (RuntimeError) Shell unit tests failed. Check output file for details.&lt;/p&gt;

&lt;p&gt;Tests run: 512, Failures: 0, Errors: 1, Skipped: 11&lt;/p&gt;</comment>
                            <comment id="13678337" author="stack" created="Fri, 7 Jun 2013 19:27:04 +0000"  >&lt;p&gt;What is state of this feature?  What else needs to be done other than more review and test?  Are we going to make a branch for it?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; How much testing of this feature has there been?  Thanks boss.&lt;/p&gt;</comment>
                            <comment id="13678392" author="enis" created="Fri, 7 Jun 2013 20:24:06 +0000"  >&lt;p&gt;I am doing the review, but could definitely use more reviews. After the first patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8408&quot; title=&quot;Implement namespace&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8408&quot;&gt;&lt;del&gt;HBASE-8408&lt;/del&gt;&lt;/a&gt;) is +1&apos;ed I will create a branch and commit there, since we will need the rest of the subtasks in shape before proposing the merge. &lt;/p&gt;</comment>
                            <comment id="13679623" author="toffer" created="Mon, 10 Jun 2013 16:46:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; It&apos;s past testing and we&apos;re baking it in our sandbox environment where we have active users. No issues so far.&lt;/p&gt;</comment>
                            <comment id="13683512" author="toffer" created="Fri, 14 Jun 2013 16:47:11 +0000"  >&lt;p&gt;As discussed I&apos;ve created a github repo please see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8408&quot; title=&quot;Implement namespace&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8408&quot;&gt;&lt;del&gt;HBASE-8408&lt;/del&gt;&lt;/a&gt;. Please give it a try and let me know what you guys think.&lt;/p&gt;</comment>
                            <comment id="13687139" author="stack" created="Tue, 18 Jun 2013 20:18:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; Are we going to implement the Elliott suggestion adding overrides for namespaces?  I was chatting w/ &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; last weds and he made a comment that helped: he said that if a choice between devs doing more work to save users &apos;surprise&apos;, then the answer is clear.&lt;/p&gt;

&lt;p&gt;Another thought is that we need to hurry up and get this in.  I&apos;ll do a review now.  Who else is reviewing?&lt;/p&gt;

&lt;p&gt;Thanks Francis.&lt;/p&gt;</comment>
                            <comment id="13687200" author="enis" created="Tue, 18 Jun 2013 21:09:18 +0000"  >&lt;p&gt;BTW regarding separator chars:&lt;br/&gt;
&quot;\/:*?&amp;lt;&amp;gt;|&quot;  NTFS does not allow these chars&lt;br/&gt;
&quot;\/~&quot;       Meaningful in ext/ntfs.&lt;br/&gt;
&quot;-&quot; and &quot;_&quot; cannot be used because they are legal in table names.&lt;br/&gt;
&quot;#&quot;         Comment in many SQL dialects, not compatible with URL encoding.&lt;br/&gt;
&quot;$%&amp;amp;&quot;       Used in shell scripts&lt;/p&gt;

&lt;p&gt;This leaves: &quot;!@^+=,&quot; if we disregard parenthesis chars. These also seem to work for HDFS. &quot;,&quot; is our internal separator for region names and META naming. @ also seems good enough. Haven&apos;t tried these for znodes. &lt;/p&gt;

&lt;p&gt;It seems that we could not reach an agreement on which proposal to implement, where they are&lt;br/&gt;
1) use dot as separator, autogenerate namespaces on migration&lt;br/&gt;
2) use one of the candidate char&apos;s above as ns and table separator. &lt;br/&gt;
3) In all places that require a table name, override with accepting namespace.&lt;/p&gt;

&lt;p&gt;However, it seems that we definitely have to have an internal separator char and a deterministic way of encoding &amp;lt;ns,table&amp;gt; pair into a string and decoding it back. This is because we need to do this for znodes in zktable, tablelockmanager, etc as well as META. So, I think it is a matter of whether we want to expose the separator char between proposal 2 and 3. I am in favor of doing 2, since it will allow better interop with external tools, and the code changes needed for 3 is significant. &lt;/p&gt;</comment>
                            <comment id="13687234" author="stack" created="Tue, 18 Jun 2013 21:37:37 +0000"  >&lt;p&gt;If we use &apos;@&apos;, won&apos;t we have to swap the order so it is table &apos;at&apos; namespace?  (Or, the &apos;@&apos; would seem to imply that).&lt;/p&gt;

&lt;p&gt;Between 2 and 3, if we choose 3, can&apos;t we keep more hidden from the user &amp;#8211; or allowing your &apos;external tools&apos; argument, we should do 2 and 3?&lt;/p&gt;</comment>
                            <comment id="13687237" author="eclark" created="Tue, 18 Jun 2013 21:38:26 +0000"  >&lt;p&gt;Option 3 seems to involve less technical debt (or chance of tech debt).&lt;/p&gt;</comment>
                            <comment id="13687238" author="stack" created="Tue, 18 Jun 2013 21:38:50 +0000"  >&lt;p&gt;So, that leaves &apos;^&apos;, the acute or hat character: namespace^table?&lt;/p&gt;</comment>
                            <comment id="13687341" author="sershe" created="Tue, 18 Jun 2013 23:01:17 +0000"  >&lt;p&gt;Option 4 is to use a dot, not create any automatic namespaces, have well-defined name resolution rules, and prohibit creating conflicts under those (also prohibit any further dots in table names for good measure). E.g. if user has org.my.cool.table, org.my.foo.table they go under default, and namespaces org, org.my, org.my.cool, and org.my.cool2 cannot be created at all until this table is renamed (or maybe they can be created by explicitly specifying that all tables should be renamed/moved under namespace keeping essentially the same name given the dots).&lt;br/&gt;
That way it&apos;s explicit to the user what needs to be done (no shooting-in-the-foot); there are dots; and there&apos;s minimum surprise.&lt;br/&gt;
The extra dev work is for mapping such table names to HDFS paths/etc.&lt;/p&gt;</comment>
                            <comment id="13687377" author="stack" created="Tue, 18 Jun 2013 23:34:04 +0000"  >&lt;p&gt;Option 4 would get us the &apos;.&apos; back (that would mean that we&apos;d do options 3 and 4).&lt;/p&gt;

&lt;p&gt;Migrating, we will have a pre-update step where you run a script and it will check your install for v1 hfiles AND if you have tables with dots in them.  If you have dots in your table name, you will be pointed at a page that describes the options available to you.&lt;/p&gt;</comment>
                            <comment id="13687408" author="sershe" created="Wed, 19 Jun 2013 00:03:07 +0000"  >&lt;p&gt;I was thinking more along the lines of doing the non-surprising thing silently (if the user doesn&apos;t want to use namespaces he will never notice anything at all), and allowing the user to resolve conflicts as necessary while preventing them from unwittingly shooting himself in the foot; but migration-time options also work.&lt;/p&gt;</comment>
                            <comment id="13689417" author="toffer" created="Thu, 20 Jun 2013 17:23:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;, I&apos;m leaning towards having the migration operation done manually by calling a script as well. Which options do we provide the user? Also it might be better if the script is portable enough that they can run on an existing 0.94 cluster so they don&apos;t have to find out during the actual upgrade process.&lt;/p&gt;</comment>
                            <comment id="13689419" author="toffer" created="Thu, 20 Jun 2013 17:25:59 +0000"  >&lt;p&gt;I thought of a way to implement &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt; idea. It was simple enough so I thought I&apos;d give it a try. Essentially keep an in-memory list of tables which make use of the delimiter (ie &apos;.&apos;) and consider these tables as exceptions to the namespace rule and handle them properly to make sure they are part of the default namespace. Have an added constraint that prevent creation of namespaces and tables that would conflict with any of the exception tables (ie ns1 and ns1.foo).&lt;/p&gt;

&lt;p&gt;Surprise here is:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;you can&apos;t create tables with the delimiter no longer unless you create the appropriate namespace.&lt;/li&gt;
	&lt;li&gt;you can&apos;t create tables/namespace which conflict the exception tables/namespaces&lt;/li&gt;
	&lt;li&gt;the exception list is derived by scanning the default namespace directories in .tmp, .data and .archive&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Here&apos;s a sample of how it works. I&apos;ve updated the TestNamespaceUpgrade test to verify that it works:&lt;br/&gt;
&lt;a href=&quot;https://github.com/francisliu/hbase_namespace/tree/core_8408_exception_list&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/francisliu/hbase_namespace/tree/core_8408_exception_list&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13689468" author="toffer" created="Thu, 20 Jun 2013 18:11:34 +0000"  >&lt;p&gt;Oops sorry I guess I&apos;m talking about two scripts. One to check if some surprising migration needs to be done and provide links/options. And another that does the actual migration.&lt;/p&gt;</comment>
                            <comment id="13689501" author="sershe" created="Thu, 20 Jun 2013 18:38:03 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;exceptionNS.add(tableName.getNamespaceAsString()); &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What is the current thinking on dots in namespaces and names? Presumably one table could prevent the creation of multiple namespaces if dots are allowed in namespace name, which I thought they are&lt;/p&gt;</comment>
                            <comment id="13689512" author="stack" created="Thu, 20 Jun 2013 18:47:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; There will be a migration evaluation script that will looks for presence of stuff like hfile v1s &amp;#8211; they must be compacted away before you can upgrade &amp;#8211; and this same step could check table names and if any w/ dot found, list options.  This script would be run against 0.94 install before shutting down for upgrade (Yes two scripts, a checker, and then a doer).&lt;/p&gt;

&lt;p&gt;Francis, we should still do the Elliott suggestion even if dot, right?  The dot would be for &apos;external&apos; tools or a useful facility in shell but we want namespaces to be first class in API too.&lt;/p&gt;

&lt;p&gt;Did you get my review comments up on rb francis?&lt;/p&gt;

&lt;p&gt;On dots in namespace, no, if it simplifies.&lt;/p&gt;
</comment>
                            <comment id="13689631" author="toffer" created="Thu, 20 Jun 2013 20:42:42 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Francis, we should still do the Elliott suggestion even if dot, right? The dot would be for &apos;external&apos; tools or a useful facility in shell but we want namespaces to be first class in API too.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The approach I proposed earlier would avoid having to do all the api stuff as part of the first namespace checkin as well as make use of &apos;.&apos; as a delimeter. The suprises are as I mentioned. We can incrementally add the apis. &lt;/p&gt;

&lt;p&gt;Sounds like we are going with overloading all the existing apis to take a namespace parameter. If so what would be the behavior when using the old api? Will it always reference default namespace or will we support fully qualified table names? &lt;/p&gt;

&lt;p&gt;For some reason I&apos;m not getting any jira or RB emails. Will take a look.&lt;/p&gt;
</comment>
                            <comment id="13689812" author="enis" created="Thu, 20 Jun 2013 23:06:12 +0000"  >&lt;p&gt;One problem with option 4 is that we want to pay the price of migration only one between 0.94-&amp;gt;0.96. If we do that, then it means we have to carry the exception tables code for all the releases going forward. Option 1 better than this I think? Note that surprise #1 also applies here as well. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Sounds like we are going with overloading all the existing apis to take a namespace parameter. If so what would be the behavior when using the old api? Will it always reference default namespace or will we support fully qualified table names?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It should use the default ns. I think the idea is that there will not be a public facing thing called &quot;fully qualified table name&quot; in Elliot&apos;s approach. Although internally, we will need one, hence my tendency to go with option 2 over 3 (see my above comment): &quot;namespace,table&quot; seems good enough for me. &lt;/p&gt;</comment>
                            <comment id="13689856" author="stack" created="Thu, 20 Jun 2013 23:39:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;If so what would be the behavior when using the old api? Will it always reference default namespace or will we support fully qualified table names?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think the old API will be against default NS.&lt;/p&gt;

&lt;p&gt;The FQTN (Fully Qualified Table Name) would be an internal or something that could be passed to external tools (command-line, shell).&lt;/p&gt;
</comment>
                            <comment id="13689968" author="toffer" created="Fri, 21 Jun 2013 02:02:46 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I think the old API will be against default NS.&lt;br/&gt;
The FQTN (Fully Qualified Table Name) would be an internal or something that could be passed to external tools (command-line, shell).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Is it possible to support FQTN as well? Or is going this route to avoid surprise completely? One concern that I see internally is that all our users will have to update their code to use the new apis so we can migrate them to new NS. As opposed to having just a table name then it&apos;s just a simple config change and restart. &lt;/p&gt;
</comment>
                            <comment id="13689977" author="toffer" created="Fri, 21 Jun 2013 02:25:02 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The FQTN (Fully Qualified Table Name) would be an internal or something that could be passed to external tools (command-line, shell).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see, so what delimiter are we planning on using? &apos;^&apos; and &apos;@&apos; isn&apos;t appealing. &apos;,&apos; looks nice but you mentioned it&apos;s already used any way we can update that cleanly to take this into account? &lt;/p&gt;</comment>
                            <comment id="13689979" author="toffer" created="Fri, 21 Jun 2013 02:31:20 +0000"  >&lt;p&gt;Also I&apos;m wondering how this will affect the rest service. Will we need a v2 set of apis to support this?&lt;/p&gt;</comment>
                            <comment id="13689986" author="enis" created="Fri, 21 Jun 2013 02:44:05 +0000"  >&lt;p&gt;+thrift as well. That is why I am in favor of option 2 now. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&apos;,&apos; looks nice but you mentioned it&apos;s already used any way we can update that cleanly to take this into account?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we can use this. We are relying on it for partitioning region names, and in META. So it should be compatible with that framework. &lt;/p&gt;</comment>
                            <comment id="13689989" author="toffer" created="Fri, 21 Jun 2013 03:04:40 +0000"  >&lt;p&gt;We can broaden the range if we encode the delimiter when stored on fs and zk. We are mainly limited by region and table names.&lt;/p&gt;</comment>
                            <comment id="13689993" author="toffer" created="Fri, 21 Jun 2013 03:12:07 +0000"  >&lt;p&gt;ZK restrictions:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://zookeeper.apache.org/doc/r3.4.3/zookeeperProgrammers.html#ch_zkDataModel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zookeeper.apache.org/doc/r3.4.3/zookeeperProgrammers.html#ch_zkDataModel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If only they printed the chars instead of code points.&lt;/p&gt;</comment>
                            <comment id="13690025" author="stack" created="Fri, 21 Jun 2013 04:46:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;One concern that I see internally is that all our users will have to update their code to use the new apis so we can migrate them to new NS.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean Y!  They are using &apos;.&apos; for separator currently?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;As opposed to having just a table name then it&apos;s just a simple config change and restart.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No override of APIs?&lt;/p&gt;

&lt;p&gt;We have a special KV comparator for .META. table.  It leverages the &apos;,&apos; position as delimiter between table name and startcode in region name.  I suppose we could change the KV comparator so it looks for &apos;,&apos;.&lt;/p&gt;

&lt;p&gt;I thought you had trick to make &apos;.&apos; work?&lt;/p&gt;
</comment>
                            <comment id="13690392" author="toffer" created="Fri, 21 Jun 2013 15:31:48 +0000"  >&lt;blockquote&gt;
&lt;p&gt;You mean Y! They are using &apos;.&apos; for separator currently?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The only dots we use are for namespaces and that&apos;s only in our sandbox so no worries there. My concern was that we&apos;d have to ask users to upgrade their code in order to start using namespaces.  &lt;/p&gt;

&lt;p&gt;So we&apos;ll have an internal delimiter &apos;.&apos; and an external one for external tools such as cli, rest&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, etc. But for the java apis we won&apos;t recognize an FQTN string in the public apis?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I thought you had trick to make &apos;.&apos; work?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, I do. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; pointed out that we will have to live with that trick in later versions. Just making sure you guys are ok with that. Have a look at it on github, just look at TableName.java that should help you get the gist of it.&lt;/p&gt;
</comment>
                            <comment id="13690410" author="stack" created="Fri, 21 Jun 2013 15:50:55 +0000"  >&lt;p&gt;The legacy Y! namespacers does compllicate things.  If we are not to unsettle them, the decision is made already and the override to add NS is out?&lt;/p&gt;

&lt;p&gt;This is 0.96.  Y! will have to do a &apos;migration&apos; to go up on 0.96 anyways?  Can you think of a &apos;step&apos; that you could add for Y! cluster that would help here?&lt;/p&gt;

&lt;p&gt;Your users are doing &apos;new HTable(conf, &quot;ns.sometable&quot;);&apos; and away they go?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But for the java apis we won&apos;t recognize an FQTN string in the public apis?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well, there would be helper classes for making sense of the FQTN that could be used by shell, rest, etc., but, yeah, the thought would be that in the API, there is no namepacing, not unless you ask for it explicitly.&lt;/p&gt;

&lt;p&gt;Let me look at the trick for how much we&apos;d have to carry into the future.&lt;/p&gt;</comment>
                            <comment id="13690489" author="toffer" created="Fri, 21 Jun 2013 17:19:17 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The legacy Y! namespacers does compllicate things. If we are not to unsettle them, the decision is made already and the override to add NS is out?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We are not married to the current implementation yet. But we have production users who are married to the old api and would require them to upgrade their code to use the new override apis as opposed to a table name change if we recognized FQTN strings in the existing api. I suspect other users will encounter the same problem.&lt;/p&gt;

&lt;p&gt;Essentially what I&apos;m asking is if it would be acceptable to recognize FQTN strings in the old api alongside implementing override?&lt;/p&gt;

&lt;p&gt;What are we buying if we are going to support an external delimiter as well as an internal delimiter but avoid the old api from recognizing FQTN string? &lt;/p&gt;


&lt;p&gt;*Nit side note: Shouldn&apos;t it be be called overload (not override), since we are planning on overloading a a method or am I thinking of one of the other approaches?&lt;/p&gt;

</comment>
                            <comment id="13691027" author="stack" created="Sat, 22 Jun 2013 03:18:12 +0000"  >&lt;p&gt;Sorry, meant overload.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But we have production users who are married to the old api and would require them to upgrade their code to use the new override apis as opposed to a table name change if we recognized FQTN strings in the existing api. I suspect other users will encounter the same problem.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The argument above is that the current implementation has been deployed some where so the current implementation is what we have to commit?&lt;/p&gt;

&lt;p&gt;Can we figure out something to bring along these legacy folks Francis?  They will have to restart anyways going to the new stuff?  Can we treat this problem apart from how ns goes into trunk/0.95?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Essentially what I&apos;m asking is if it would be acceptable to recognize FQTN strings in the old api alongside implementing override?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How would that work?  How would we distingush a FQTN from a plain TN if the TN has the delimiter in it as part of its name.  I can see helper methods that the shell or command-line tools could use but don&apos;t see these being run on every tablename we are passed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What are we buying if we are going to support an external delimiter as well as an internal delimiter but avoid the old api from recognizing FQTN string?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No conflation of namespace and tablename.  Clean deliniation between the ns and tablename concepts.  Users can take on the new namespace feature if they want to.  No hackery.&lt;/p&gt;

&lt;p&gt;Chatting today, the &apos;/&apos; character came up again.  Did we rule this out as a delimiter?  Yeah &apos;/&apos; is meaningful in ext and ntfs but can&apos;t we leverage their interpretation; e.g. ns is a directory of tables?  Ditto up in zk.&lt;/p&gt;</comment>
                            <comment id="13691244" author="stack" created="Sat, 22 Jun 2013 20:44:58 +0000"  >&lt;p&gt;&apos;/&apos; probably won&apos;t work.  Or at least, it won&apos;t work up in zk because you want to have RS watch tables come and go (or is it NS come and go).  If tables, you can&apos;t set a recursive watch so would seem to rule out &apos;/&apos;.&lt;/p&gt;</comment>
                            <comment id="13692174" author="sershe" created="Mon, 24 Jun 2013 17:39:55 +0000"  >&lt;p&gt;To solve ambiguity create should have for FQ overload imo. Then, that means you always operate on existing tables if they have a dot, so you can just prevent conflicts at create time.&lt;/p&gt;</comment>
                            <comment id="13698648" author="stack" created="Wed, 3 Jul 2013 06:04:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; Status?  I see no commits over in github?&lt;/p&gt;</comment>
                            <comment id="13699492" author="toffer" created="Wed, 3 Jul 2013 21:54:03 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; Getting things to compile is taking more time than I thought. Fixing unit tests now. Should hoping to have something up today. Sorry for the delay. &lt;/p&gt;</comment>
                            <comment id="13699598" author="stack" created="Wed, 3 Jul 2013 23:36:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; Ping here so i can go take a looksee when you have something boss.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13702105" author="toffer" created="Mon, 8 Jul 2013 16:38:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; I&apos;ve pushed changes into github, the changes mainly addresses one thing: make namespace as first class. I&apos;ve replaced internal apis which took &quot;byte[] tableName&quot; as a constant to use FullyQualifiedTableName instead. For HTable and HBaseAdmin, I&apos;ve overloaded such functions instead to keep backward compatibility. Also created a new branch in the repo which is a rebase off trunk yesterday. I&apos;ll address your RB comments today.&lt;/p&gt;

&lt;p&gt;Some issues:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The external interfaces: cli, thrift, rest and MR don&apos;t have the namespace as first class treatment yet&lt;/li&gt;
	&lt;li&gt;I initially went by the InterfaceAudience annotations but after talking to you guys it seems this is needs some updating as HConnection and HConnectionManager are both marked public tho they shouldn&apos;t be?&lt;/li&gt;
	&lt;li&gt;There are some apis (ie compact()) which have an overloaded parameter ie &quot;byte[] tableOrRegionName&quot; should we be splitting this into two apis and deprecate the old one?&lt;/li&gt;
	&lt;li&gt;Need to create a FullyQualifiedTableName PB equivalent and update PB rpc and messages as needed&lt;/li&gt;
	&lt;li&gt;I always needed to add commons-io as a maven dependency else things won&apos;t compile and these aren&apos;t related to my changes&lt;/li&gt;
	&lt;li&gt;Ran small,med,large tests and have these failures which aren&apos;t related to the patch: TestHCM.testClusterStatus, TestLogRolling.testCompactionRecordDoesntBlockRolling, TestShell&lt;/li&gt;
&lt;/ul&gt;









</comment>
                            <comment id="13702157" author="stack" created="Mon, 8 Jul 2013 17:31:54 +0000"  >&lt;p&gt;How long before cli, thrift, and rest get the treatment?  Could this be done later in separate patch?  W/o it, it would mean that tables not in default namespace would be unaddressable?&lt;/p&gt;

&lt;p&gt;Yeah, HC/HCM should probably be evolving at least.&lt;/p&gt;

&lt;p&gt;On the tableOrRegionName, yeah, should probably a utility that is called to figure out which and then once that is known, the appropriate api is called.&lt;/p&gt;

&lt;p&gt;Not sure why the commons-io.  Ditto on test failures.  Yes, possible unrelated to your changes.&lt;/p&gt;

&lt;p&gt;Let me look at your work over in git.&lt;/p&gt;</comment>
                            <comment id="13702281" author="toffer" created="Mon, 8 Jul 2013 18:53:17 +0000"  >&lt;blockquote&gt;
&lt;p&gt;How long before cli, thrift, and rest get the treatment? Could this be done later in separate patch? W/o it, it would mean that tables not in default namespace would be unaddressable?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It depends on how we&apos;d wanna deal with it. Presently it&apos;s addressable as all the apis recognize FQTN names with &apos;.&apos; as the delimiter. If we go this route there won&apos;t be much work, just some cleanup to use FullyQualifiedTableName were needed.&lt;/p&gt;

&lt;p&gt;If we decide to have a different external and internal delimiter or overload the cli api there would be some amount of work.&lt;/p&gt;

&lt;p&gt;In either case could be a separate patch.&lt;/p&gt;


</comment>
                            <comment id="13702969" author="stack" created="Tue, 9 Jul 2013 06:16:01 +0000"  >&lt;p&gt;I took a quick look over at &lt;a href=&quot;https://github.com/francisliu/hbase_namespace/commit/18973af443e8c6424c978364e2d0db2a5abe1286#L5R705&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/francisliu/hbase_namespace/commit/18973af443e8c6424c978364e2d0db2a5abe1286#L5R705&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Patch is massive but seems to be in the right direction.  I&apos;m thinking weeks &amp;#8211; three to four weeks &amp;#8211; for this to stabilize and get committed?&lt;/p&gt;</comment>
                            <comment id="13703524" author="toffer" created="Tue, 9 Jul 2013 17:23:10 +0000"  >&lt;p&gt;It&apos;s massive but not really complex. What does stabilizing involve? Reviews and all relevant unit tests passing?&lt;/p&gt;</comment>
                            <comment id="13703528" author="toffer" created="Tue, 9 Jul 2013 17:26:12 +0000"  >&lt;p&gt;BTW would it help if I put the patch on RB as well? 309 files might be too much.&lt;/p&gt;</comment>
                            <comment id="13706588" author="toffer" created="Fri, 12 Jul 2013 02:34:22 +0000"  >&lt;p&gt;I had a chat with Stack yesterday to iron out some design details. Here&apos;s a quick summary of things:&lt;/p&gt;

&lt;p&gt;1. We will be going with &apos;:&apos; as the delimiter. We&apos;ll make it so that the tableNames stored on the filesystem don&apos;t get stored fully-qualified. So that leaves HFileLinks which needs table names to be written with the namespace.&lt;/p&gt;

&lt;p&gt;2. a TableName POJO will be the class that gets passed around where a tableName reference is needed. HTable and HBaseAdmin will have the old apis overloaded with new apis that accept the TableName pojo. In addition, the old apis will recognize fully qualified table names. This keeps symmetry between both apis. Having colon as a delimiter will guarantee there is no confusion and clear intent.&lt;/p&gt;

&lt;p&gt;3. Since we will be using a TableName pojo everywhere internally. That means all the coprocessor hooks that have tableNames will change as well. This will break backward compatibility.&lt;/p&gt;

&lt;p&gt;4. External interfaces REST, Thrift and CLI will not require significant changes as tables can be referenced using fully-qualified. We will have to add namespace CRUD apis to REST and Thrift at a latter point.&lt;/p&gt;

&lt;p&gt;5. In a separate patch remove &apos;.&apos; prefix in non-table dirs in root dir&lt;/p&gt;</comment>
                            <comment id="13706590" author="toffer" created="Fri, 12 Jul 2013 02:36:57 +0000"  >&lt;p&gt;Forgot to mention, &apos;:&apos; is not a valid character on NTFS. So we&apos;d have to have a different separate for full table names in HFileLinks. Possibly a switch to support this. Thoughts &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13713879" author="enis" created="Fri, 19 Jul 2013 17:54:48 +0000"  >&lt;p&gt;We can use a different separator for file system then we expose to the users. Haven&apos;t checked whether zk also allows &quot;:&quot;. Using comma for this makes sense if you ask me. &lt;/p&gt;</comment>
                            <comment id="13714068" author="stack" created="Fri, 19 Jul 2013 20:58:58 +0000"  >&lt;p&gt;Comma is special in .META. table.  Would have to adjust comparators.  It would take us further away from one day being able to do memcmp on .META. rows keys.&lt;/p&gt;</comment>
                            <comment id="13715085" author="toffer" created="Mon, 22 Jul 2013 10:33:01 +0000"  >&lt;p&gt;@enis it looks like &apos;:&apos; is not in this list of not-allowed characters in ZK. I naively tried it and it works. Just curious I&apos;m not familiar with the HBase on windows effort. They won&apos;t be running HBase on HDFS? But on a windows DFS?&lt;/p&gt;

&lt;p&gt;@stack I believe enis is suggesting on using a different delimiter when storing FQTN as part of filenames on hdfs.&lt;/p&gt;</comment>
                            <comment id="13716046" author="enis" created="Tue, 23 Jul 2013 04:50:06 +0000"  >&lt;p&gt;Yes, we can use different separator chars for fqtn depending on context. META and other places will use colon, while filesystem might use some other char (possibly comma)&lt;/p&gt;</comment>
                            <comment id="13716048" author="enis" created="Tue, 23 Jul 2013 04:52:10 +0000"  >&lt;p&gt;Just re-read your comments for not storing FQ name on file system. Then we can just do this for file link which already contains carefully-selected separator chars for different fields. &lt;/p&gt;</comment>
                            <comment id="13716059" author="stack" created="Tue, 23 Jul 2013 05:21:03 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; Any status boss?&lt;/p&gt;</comment>
                            <comment id="13716136" author="enis" created="Tue, 23 Jul 2013 06:16:16 +0000"  >&lt;p&gt;Played with this for some time. Overall, shell commands, zookeeper data, ns table, hdfs data seems to be working. Did a skim through the commits at github. Waiting for the separator change. &lt;/p&gt;

&lt;p&gt;A possible follow up might be to hardcode .META. naming for backwards compatibility for 0.96 release? (scan &apos;.META.&apos; does not work right now)&lt;/p&gt;</comment>
                            <comment id="13718323" author="toffer" created="Wed, 24 Jul 2013 12:42:47 +0000"  >&lt;p&gt;I&apos;ve pushed some changes into github addressing the following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Change delimiter to &apos;:&apos;&lt;/li&gt;
	&lt;li&gt;Use a filesystem delimiter &apos;,&apos; instead of &apos;:&apos; where a fqtn is referenced as part of a file/dir name&lt;/li&gt;
	&lt;li&gt;changed filesystem table path to: &amp;lt;root&amp;gt;/data/&amp;lt;ns&amp;gt;/&amp;lt;table qualifier&amp;gt;&lt;/li&gt;
	&lt;li&gt;updated namespace and table name valid chars. namespace now only allows &lt;span class=&quot;error&quot;&gt;&amp;#91;A-Za-z0-9_&amp;#93;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;rename FullyQualifiedTableName to TableName since all table names are fully qualified not unless explicitly stated&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some issues:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;found out that &apos;:&apos; is not a valid character in HDFS (scratches head). so we&apos;ll really need an fs delimiter if we stick with this delimiter.&lt;/li&gt;
	&lt;li&gt;snapshot names character names - are all valid tables names valid snapshot names as well? Presently snapshot creation will complain if it has a &apos;:&apos; in it&lt;/li&gt;
	&lt;li&gt;small and medium tests pass, didn&apos;t have time to run large yet&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What do you guys think? I&apos;ll continue working on the other comments. &lt;/p&gt;

&lt;p&gt;Check out the changes here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/francisliu/hbase_namespace/tree/core_8408_rebase_1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/francisliu/hbase_namespace/tree/core_8408_rebase_1&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13718330" author="toffer" created="Wed, 24 Jul 2013 12:50:13 +0000"  >&lt;blockquote&gt;
&lt;p&gt;A possible follow up might be to hardcode .META. naming for backwards compatibility for 0.96 release? (scan &apos;.META.&apos; does not work right now)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Is meta public? &lt;/p&gt;
</comment>
                            <comment id="13718718" author="jesse_yates" created="Wed, 24 Jul 2013 19:06:52 +0000"  >&lt;blockquote&gt;
&lt;p&gt;snapshot names character names - are all valid tables names valid snapshot names as well? Presently snapshot creation will complain if it has a &apos;:&apos; in it&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It used to follow table name semantics, but looks like it just tries on the FS and fails if its not a valid character.&lt;/p&gt;</comment>
                            <comment id="13719135" author="enis" created="Thu, 25 Jul 2013 01:32:31 +0000"  >&lt;p&gt;I think above scheme is acceptable and the best we can do right now. ns:table also fits into cf:column naming as well. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;rename FullyQualifiedTableName to TableName&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;makes sense. &lt;/p&gt;</comment>
                            <comment id="13719253" author="stack" created="Thu, 25 Jul 2013 05:32:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;Use a filesystem delimiter &apos;,&apos; instead of &apos;:&apos; where a fqtn is referenced as part of a file/dir name&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; Where would this happen?  When would we have to have a &apos;:&apos;, or a &apos;,&apos; in the fs given ns is a dir?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;Presently snapshot creation will complain if it has a &apos;:&apos; in it&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When you create a snapshot, can you use a TableName?&lt;/p&gt;




</comment>
                            <comment id="13719321" author="toffer" created="Thu, 25 Jul 2013 07:20:56 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Francis Liu Where would this happen? When would we have to have a &apos;:&apos;, or a &apos;,&apos; in the fs given ns is a dir?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There&apos;s currently there are three places right now. &lt;/p&gt;

&lt;p&gt;1. HFileLink&lt;br/&gt;
   a. HFile references require include the table name as part of the filename&lt;br/&gt;
   b. back references include table name as well&lt;br/&gt;
2. Snapshot names&lt;br/&gt;
   a. In current behavior as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jesse_yates&quot; class=&quot;user-hover&quot; rel=&quot;jesse_yates&quot;&gt;Jesse Yates&lt;/a&gt; pointed out. Valid table names are valid snapshot names. Snapshots are stored on hdfs as a directory identified by their names. Though I&apos;m inclined not to support &apos;:&apos; as a valid character for snapshot names so we can keep &apos;:&apos; as a special character?&lt;/p&gt;</comment>
                            <comment id="13721864" author="stack" created="Sun, 28 Jul 2013 04:52:34 +0000"  >&lt;p&gt;On 1., you mean existing HFileLinks?  They would be to tables in default namespace?  Can  HFileLink be updated to look there and then add namespace in front of tablename, regioname and filename when creating the name?  Could use current link separator for added ns?  hfilelink already has its own notion of separator?&lt;/p&gt;

&lt;p&gt;On 2., references are always &apos;local&apos; to a table &amp;#8211; won&apos;t be across namespaces?  Where in HFile reference do we reference table name?  (I see regionnames and splitkeys)&lt;/p&gt;

&lt;p&gt;3. On snapshot names, yeah, go ahead and make &apos;:&apos; special character (not allowed in snapshot names)&lt;/p&gt;

&lt;p&gt;So would the above be the only places we&apos;d want to persist a &apos;:&apos; in fs?   (In fs we&apos;d usually ahve table in a ns subdir).&lt;/p&gt;

&lt;p&gt;Will review github.&lt;/p&gt;

&lt;p&gt;What is left to finish would you say?&lt;/p&gt;</comment>
                            <comment id="13724110" author="toffer" created="Tue, 30 Jul 2013 17:24:02 +0000"  >&lt;blockquote&gt;
&lt;p&gt;On 1., you mean existing HFileLinks? They would be to tables in default namespace? &lt;br/&gt;
Can HFileLink be updated to look there and then add namespace in front of tablename, regioname and filename when creating the name? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For migrated tables yes. But for new tables which use NS they could be to new NS tables so we need to add NS as part of the HFileLink. I&apos;ve updated the HFileLink file format to look like &amp;lt;NS&amp;gt;,&amp;lt;TableQualifier&amp;gt;&lt;del&gt;&amp;lt;...&amp;gt;&lt;/del&gt;&amp;lt;...&amp;gt; it will also recognize the older file format where &apos;&amp;lt;NS&amp;gt;,&apos; is missing (See HFileLink.java for more details). Are you suggesting I change it to &amp;lt;TableQualifier&amp;gt;&lt;del&gt;&amp;lt;...&amp;gt;&lt;/del&gt;&amp;lt;...&amp;gt;-&amp;lt;NS&amp;gt;?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Could use current link separator for added ns? hfilelink already has its own notion of separator?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep, currently I&apos;m using &apos;,&apos;. I could use &apos;&lt;del&gt;&apos; instead. So it becomes &amp;lt;NS&amp;gt;&lt;/del&gt;&amp;lt;TableQualifier&amp;gt;&lt;del&gt;&amp;lt;...&amp;gt;&lt;/del&gt;&amp;lt;...&amp;gt;?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;On 2., references are always &apos;local&apos; to a table &#8211; won&apos;t be across namespaces? Where in HFile reference do we reference table name? (I see regionnames and splitkeys)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sorry I meant the HFileLink Back references, not region split references. I think it&apos;s used for quick reference counting to see if an archived HFile can be cleaned up or not.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;3. On snapshot names, yeah, go ahead and make &apos;:&apos; special character (not allowed in snapshot names)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Cool will add the check.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So would the above be the only places we&apos;d want to persist a &apos;:&apos; in fs? (In fs we&apos;d usually ahve table in a ns subdir).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep, as far as I can tell. I&apos;ve ran small, medium and large tests, it only had unrelated failures.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What is left to finish would you say?&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add a TableName PB&lt;/li&gt;
	&lt;li&gt;Your comments on RB&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That&apos;s about it.&lt;/p&gt;

</comment>
                            <comment id="13724143" author="toffer" created="Tue, 30 Jul 2013 17:40:04 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Could use current link separator for added ns? hfilelink already has its own notion of separator?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Forgot to mention for HFileLink it uses hyphens and for backreferences it uses dots.&lt;/p&gt;</comment>
                            <comment id="13724347" author="stack" created="Tue, 30 Jul 2013 20:15:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;Are you suggesting I change it to &amp;lt;TableQualifier&amp;gt;&amp;lt;...&amp;gt;&amp;lt;...&amp;gt;-&amp;lt;NS&amp;gt;?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was suggesting that NS be delimited the same way table and region are currently delimited rather than intro new delimiter &apos;,&apos;; i.e. hypens and dots (as applicable?)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Your comments on RB&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You updated rb?&lt;/p&gt;</comment>
                            <comment id="13724354" author="toffer" created="Tue, 30 Jul 2013 20:22:38 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I was suggesting that NS be delimited the same way table and region are currently delimited rather than intro new delimiter &apos;,&apos;; i.e. hypens and dots (as applicable?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep got that with your second question. Will do. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You updated rb?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not yet. Will create a new RB once I&apos;ve put in all the missing changes as you suggested.&lt;/p&gt;</comment>
                            <comment id="13724364" author="stack" created="Tue, 30 Jul 2013 20:30:04 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; Thanks (in case you&apos;ve not noticed &amp;#8211; smile &amp;#8211; time is running out for getting this in)&lt;/p&gt;</comment>
                            <comment id="13724371" author="toffer" created="Tue, 30 Jul 2013 20:35:04 +0000"  >&lt;p&gt;Yes, working on it. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I&apos;ll try to put the final patch for review EOD today.&lt;/p&gt;</comment>
                            <comment id="13725886" author="toffer" created="Thu, 1 Aug 2013 00:15:13 +0000"  >&lt;p&gt;RB of near finished patch. It&apos;s missing some comments from stack in previous RB.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/13178/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/13178/&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13725889" author="toffer" created="Thu, 1 Aug 2013 00:15:50 +0000"  >&lt;p&gt;github repo of patch:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/francisliu/hbase_namespace/tree/core_8408_rebase_2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/francisliu/hbase_namespace/tree/core_8408_rebase_2&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13725952" author="yuzhihong@gmail.com" created="Thu, 1 Aug 2013 01:44:25 +0000"  >&lt;p&gt;Mind attaching the tar ball (src/test/data/TestNamespaceUpgrade.tgz) used by TestNamespaceUpgrade to the JIRA (with brief description on how it was generated) ?&lt;/p&gt;</comment>
                            <comment id="13725960" author="toffer" created="Thu, 1 Aug 2013 01:55:18 +0000"  >&lt;p&gt;Yep it&apos;s attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8408&quot; title=&quot;Implement namespace&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8408&quot;&gt;&lt;del&gt;HBASE-8408&lt;/del&gt;&lt;/a&gt;. Let me know if you&apos;re having trouble with it. The brief description is written in TestNamespaceUpgrade. See the source file for more info:&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Test upgrade from no namespace in 0.94 to namespace directory structure.&lt;/li&gt;
	&lt;li&gt;Mainly tests that tables are migrated and consistent. Also verifies&lt;/li&gt;
	&lt;li&gt;that snapshots have been migrated correctly.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;Uses a tarball which is an image of an 0.94 hbase.rootdir.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;Contains tables with currentKeys as the stored keys:&lt;/li&gt;
	&lt;li&gt;foo, ns1.foo, ns2.foo&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;Contains snapshots with snapshot
{num}
&lt;p&gt;Keys as the contents:&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;snapshot1Keys, snapshot2Keys&lt;br/&gt;
 *&lt;br/&gt;
 */&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13725989" author="yuzhihong@gmail.com" created="Thu, 1 Aug 2013 02:55:02 +0000"  >&lt;p&gt;Got it. The test passed.&lt;/p&gt;

&lt;p&gt;I think the untar() method can be moved to util class so that code is shared with TestMetaMigrationConvertingToPB.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; srcTable = newNS+TableName.NAMESPACE_DELIM+table.replaceAll(&lt;span class=&quot;code-quote&quot;&gt;&quot;[.]&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;_&quot;&lt;/span&gt;)+&lt;span class=&quot;code-quote&quot;&gt;&quot;_clone3&quot;&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The replaceAll() call only appears in this test. Can you tell me the reason ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
--- /dev/&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ServerCallable.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think the above class was removed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8764&quot; title=&quot;Some MasterMonitorCallable should retry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8764&quot;&gt;&lt;del&gt;HBASE-8764&lt;/del&gt;&lt;/a&gt;. Please refresh your workspace and update your patch.&lt;/p&gt;</comment>
                            <comment id="13726002" author="yuzhihong@gmail.com" created="Thu, 1 Aug 2013 03:17:15 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] DEFAULT_NAMESPACE_NAME = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What if user already had table named &apos;default.x&apos; ?&lt;/p&gt;

&lt;p&gt;Can you add some tables named &apos;a.b&apos; in the 0.94 cluster image in the migration test ?&lt;/p&gt;

&lt;p&gt;TestRestoreFlushSnapshotFromClient seems to hang:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; prio=10 tid=0x00007ffb7c007800 nid=0x28a4 waiting on condition [0x00007ffb82112000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: TIMED_WAITING (sleeping)
  at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(Native Method)
  at org.apache.hadoop.hbase.client.HBaseAdmin.waitUntilTableIsEnabled(HBaseAdmin.java:734)
  at org.apache.hadoop.hbase.client.HBaseAdmin.cloneSnapshot(HBaseAdmin.java:2725)
  at org.apache.hadoop.hbase.client.HBaseAdmin.cloneSnapshot(HBaseAdmin.java:2674)
  at org.apache.hadoop.hbase.snapshot.TestRestoreFlushSnapshotFromClient.testRestoreSnapshotOfCloned(TestRestoreFlushSnapshotFromClient.java:210)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In test output, I saw:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-08-01 03:01:47,059 ERROR [RS_OPEN_REGION-kiyo:35035-0] handler.OpenRegionHandler(475): Failed open of region=clonedtb-1375326090526,c,1375326056050.2fffb17b7a45e6f20fd296ffe0b1a3e7., starting to roll back the global memstore size.
java.io.IOException: java.io.IOException: java.io.FileNotFoundException: Unable to open link: org.apache.hadoop.hbase.io.HFileLink locations=[hdfs:&lt;span class=&quot;code-comment&quot;&gt;//localhost:39415/user/hortonzy/hbase/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testtb-1375326056044/ee59283afb6da8861c97fda630c2571d/cf/ee59283afb6da8861c97fda630c2571d, hdfs://localhost:39415/user/hortonzy/hbase/.tmp/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testtb-1375326056044/ee59283afb6da8861c97fda630c2571d/cf/ee59283afb6da8861c97fda630c2571d, hdfs://localhost:39415/user/hortonzy/hbase/.archive/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testtb-1375326056044/ee59283afb6da8861c97fda630c2571d/cf/ee59283afb6da8861c97fda630c2571d]
&lt;/span&gt;        at org.apache.hadoop.hbase.regionserver.HRegion.initializeRegionStores(HRegion.java:692)
        at org.apache.hadoop.hbase.regionserver.HRegion.initializeRegionInternals(HRegion.java:608)
        at org.apache.hadoop.hbase.regionserver.HRegion.initialize(HRegion.java:579)
        at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:4111)
        at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:4082)
        at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:4031)
        at org.apache.hadoop.hbase.regionserver.HRegion.openHRegion(HRegion.java:3982)
        at org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.openRegion(OpenRegionHandler.java:459)
        at org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.process(OpenRegionHandler.java:137)
        at org.apache.hadoop.hbase.executor.EventHandler.run(EventHandler.java:130)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
Caused by: java.io.IOException: java.io.FileNotFoundException: Unable to open link: org.apache.hadoop.hbase.io.HFileLink locations=[hdfs:&lt;span class=&quot;code-comment&quot;&gt;//localhost:39415/user/hortonzy/hbase/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testtb-1375326056044/ee59283afb6da8861c97fda630c2571d/cf/ee59283afb6da8861c97fda630c2571d, hdfs://localhost:39415/user/hortonzy/hbase/.tmp/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testtb-1375326056044/ee59283afb6da8861c97fda630c2571d/cf/ee59283afb6da8861c97fda630c2571d, hdfs://localhost:39415/user/hortonzy/hbase/.archive/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testtb-1375326056044/ee59283afb6da8861c97fda630c2571d/cf/ee59283afb6da8861c97fda630c2571d]
&lt;/span&gt;        at org.apache.hadoop.hbase.regionserver.HStore.loadStoreFiles(HStore.java:448)
        at org.apache.hadoop.hbase.regionserver.HStore.&amp;lt;init&amp;gt;(HStore.java:241)
        at org.apache.hadoop.hbase.regionserver.HRegion.instantiateHStore(HRegion.java:3093)
        at org.apache.hadoop.hbase.regionserver.HRegion$1.call(HRegion.java:665)
        at org.apache.hadoop.hbase.regionserver.HRegion$1.call(HRegion.java:662)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        ... 3 more
Caused by: java.io.FileNotFoundException: Unable to open link: org.apache.hadoop.hbase.io.HFileLink locations=[hdfs:&lt;span class=&quot;code-comment&quot;&gt;//localhost:39415/user/hortonzy/hbase/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testtb-1375326056044/ee59283afb6da8861c97fda630c2571d/cf/ee59283afb6da8861c97fda630c2571d, hdfs://localhost:39415/user/hortonzy/hbase/.tmp/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testtb-1375326056044/ee59283afb6da8861c97fda630c2571d/cf/ee59283afb6da8861c97fda630c2571d, hdfs://localhost:39415/user/hortonzy/hbase/.archive/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testtb-1375326056044/ee59283afb6da8861c97fda630c2571d/cf/ee59283afb6da8861c97fda630c2571d]&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13726029" author="toffer" created="Thu, 1 Aug 2013 04:15:03 +0000"  >&lt;blockquote&gt;
&lt;p&gt;What if user already had table named &apos;default.x&apos; ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Then the path on hdfs will be &amp;lt;ROOT_DIR&amp;gt;/default/default.x&lt;/p&gt;

&lt;p&gt;This is no longer an issue since we changed the delimiter to &apos;:&apos;. So the scenario where a table which already uses the delimiter no longer exists.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Can you add some tables named &apos;a.b&apos; in the 0.94 cluster image in the migration test ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yep that image contains tables like that: ns1.foo and ns2.foo&lt;/p&gt;



</comment>
                            <comment id="13726552" author="toffer" created="Thu, 1 Aug 2013 15:53:10 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The replaceAll() call only appears in this test. Can you tell me the reason ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It was needed to test snapshot across namespace when we had &apos;.&apos; as the delimiter. I&apos;ve removed replaceAll() in the new patch.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think the above class was removed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8764&quot; title=&quot;Some MasterMonitorCallable should retry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8764&quot;&gt;&lt;del&gt;HBASE-8764&lt;/del&gt;&lt;/a&gt;. Please refresh your workspace and update your patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Re-removed it and a number of other files. I think it stayed during merge because I modified those files.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TestRestoreFlushSnapshotFromClient seems to hang:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Fixed this seemed to be a typo during cleanup.&lt;/p&gt;

</comment>
                            <comment id="13730212" author="enis" created="Tue, 6 Aug 2013 00:32:26 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9134&quot; title=&quot;Run NamespaceUpgrade from hbase migration script&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9134&quot;&gt;&lt;del&gt;HBASE-9134&lt;/del&gt;&lt;/a&gt; for running the NS upgrade script from migration script. &lt;/p&gt;</comment>
                            <comment id="13730979" author="stack" created="Tue, 6 Aug 2013 17:20:43 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; Where you at on your review?  You want an update of the patch by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt;?  I committed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8778&quot; title=&quot;Region assigments scan table directory making them slow for huge tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8778&quot;&gt;&lt;del&gt;HBASE-8778&lt;/del&gt;&lt;/a&gt; because it looked like we needed a new revision.  If current patch is good by you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, I could back out &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8778&quot; title=&quot;Region assigments scan table directory making them slow for huge tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8778&quot;&gt;&lt;del&gt;HBASE-8778&lt;/del&gt;&lt;/a&gt; because it would be easier applying that on top of ns.&lt;/p&gt;</comment>
                            <comment id="13733303" author="hudson" created="Thu, 8 Aug 2013 09:23:03 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #4355 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4355/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4355/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8015&quot; title=&quot;Support for Namespaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8015&quot;&gt;HBASE-8015&lt;/a&gt; implement namespaces; ADDENDUM TWO &amp;#8211; REMOVE FILE REMOVED BY ORIGINAL PATCH (stack: rev 1511589)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TableName.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13733501" author="hudson" created="Thu, 8 Aug 2013 13:42:59 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #657 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/657/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/657/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8015&quot; title=&quot;Support for Namespaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8015&quot;&gt;HBASE-8015&lt;/a&gt; implement namespaces; ADDENDUM TWO &amp;#8211; REMOVE FILE REMOVED BY ORIGINAL PATCH (stack: rev 1511589)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TableName.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14142193" author="prasasf" created="Sat, 20 Sep 2014 20:36:23 +0000"  >&lt;p&gt;Do different namespaces for the same table name create different tables directories in hdfs and are maintained in different region files? &lt;/p&gt;

&lt;p&gt;How does this affect namenode memory if I want to have one namespace per user and I have a million users registered to my system. Will this scale?&lt;/p&gt;

&lt;p&gt;I would like namespace to be totally logical separation all sharing the same region file. Is this case?&lt;br/&gt;
Thank you for any responses.&lt;/p&gt;</comment>
                            <comment id="14142204" author="apurtell" created="Sat, 20 Sep 2014 21:21:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do different namespaces for the same table name create different tables directories in hdfs and are maintained in different region files? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How does this affect namenode memory if I want to have one namespace per user and I have a million users registered to my system. Will this scale?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As you would anticipate, eventually not, depending on how many tables each user creates and the capabilities of the namenode. I believe the intent of namespaces is to support multitenancy where a tenant shares a namespace and is a department or similar grouping within a larger organization. The namespace is a supergroup of tables sharing common ACLs, quotas, and the like. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I would like namespace to be totally logical separation all sharing the same region file. Is this case?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No it is not and this would be a substantial change. &lt;/p&gt;</comment>
                            <comment id="14311889" author="shihaoliang" created="Mon, 9 Feb 2015 07:22:49 +0000"  >&lt;p&gt;Can i have namespace in the specified HDFS folder?&lt;br/&gt;
Because in our multi-tenant scenarios, all the use resources are under the folder, files and hive tables and HBase datas.&lt;br/&gt;
We want to control all the data size in HDFS quota on the folder.&lt;/p&gt;

&lt;p&gt;My propose is to have configurations for Namespace to modified the default path. &lt;/p&gt;</comment>
                            <comment id="14702792" author="shashi.vish" created="Wed, 19 Aug 2015 10:00:40 +0000"  >&lt;p&gt;Can I export a namespace from one hbase cluster to another hbase cluster? Similar way that we can use Export/Import command with hbase table.&lt;/p&gt;</comment>
                            <comment id="14728581" author="kartik" created="Thu, 3 Sep 2015 06:55:18 +0000"  >&lt;p&gt;I would like to know if this JIRA enhancement also support below four items using namespace ?&lt;/p&gt;

&lt;p&gt;Cell Query (Single Value)&lt;br/&gt;
Cell or Row Query (Multiple Values)&lt;br/&gt;
Scanner Get Next&lt;br/&gt;
Scanner Creation&lt;/p&gt;


&lt;p&gt;Regards,&lt;br/&gt;
Kartik Bhatnagar&lt;/p&gt;</comment>
                            <comment id="14728958" author="jmspaggi" created="Thu, 3 Sep 2015 12:33:16 +0000"  >&lt;p&gt;Hi Kartik,&lt;/p&gt;

&lt;p&gt;You are better ask your questions on the mailing list.&lt;/p&gt;

&lt;p&gt;JM&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12572577" name="HBASE-8015_draft_94.patch" size="110321" author="toffer" created="Thu, 7 Mar 2013 18:56:16 +0000"/>
                            <attachment id="12580245" name="Namespace Design.pdf" size="554139" author="toffer" created="Wed, 24 Apr 2013 06:39:42 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12644237">HBASE-8408</subtask>
                            <subtask id="12644238">HBASE-8409</subtask>
                            <subtask id="12644239">HBASE-8410</subtask>
                            <subtask id="12644241">HBASE-8411</subtask>
                            <subtask id="12649794">HBASE-8633</subtask>
                            <subtask id="12661514">HBASE-9124</subtask>
                            <subtask id="12661979">HBASE-9128</subtask>
                            <subtask id="12661989">HBASE-9130</subtask>
                            <subtask id="12662007">HBASE-9134</subtask>
                            <subtask id="12662295">HBASE-9147</subtask>
                            <subtask id="12662297">HBASE-9148</subtask>
                            <subtask id="12662298">HBASE-9149</subtask>
                            <subtask id="12662301">HBASE-9150</subtask>
                            <subtask id="12662901">HBASE-9172</subtask>
                            <subtask id="12663462">HBASE-9206</subtask>
                            <subtask id="12667729">HBASE-9487</subtask>
                            <subtask id="12756032">HBASE-12511</subtask>
                            <subtask id="12756033">HBASE-12512</subtask>
                            <subtask id="12770691">HBASE-12936</subtask>
                            <subtask id="12825952">HBASE-13593</subtask>
                            <subtask id="12848393">HBASE-14147</subtask>
                            <subtask id="12952126">HBASE-15503</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Mar 2013 18:12:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>316115</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 15 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ijqn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>316458</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.96notable</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>