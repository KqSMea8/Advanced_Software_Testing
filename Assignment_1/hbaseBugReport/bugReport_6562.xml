<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:37:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6562/HBASE-6562.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6562] Fake KVs are sometimes passed to filters</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6562</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In internal tests at Salesforce we found that fake row keys sometimes are passed to filters (Filter.filterRowKey(...) specifically).&lt;/p&gt;

&lt;p&gt;The KVs are eventually filtered by the StoreScanner/ScanQueryMatcher, but the row key is passed to filterRowKey in RegionScannImpl &lt;b&gt;before&lt;/b&gt; that happens.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12603154">HBASE-6562</key>
            <summary>Fake KVs are sometimes passed to filters</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Sun, 12 Aug 2012 22:53:04 +0000</created>
                <updated>Wed, 2 Nov 2016 16:48:59 +0000</updated>
                                                            <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.4.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="13432857" author="lhofhansl" created="Sun, 12 Aug 2012 22:54:48 +0000"  >&lt;p&gt;Here&apos;s a trunk patch with test.&lt;br/&gt;
Thanks to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=giacomotaylor&quot; class=&quot;user-hover&quot; rel=&quot;giacomotaylor&quot;&gt;James Taylor&lt;/a&gt; to identify the issue and providing an initial test case.&lt;/p&gt;</comment>
                            <comment id="13432869" author="hadoopqa" created="Mon, 13 Aug 2012 00:27:44 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12540595/6562.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12540595/6562.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2551//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13432904" author="lhofhansl" created="Mon, 13 Aug 2012 04:02:58 +0000"  >&lt;p&gt;That 2nd part of the patch wasn&apos;t meant for this (the change to nextRow). It just snug it.&lt;/p&gt;</comment>
                            <comment id="13433753" author="lhofhansl" created="Tue, 14 Aug 2012 00:07:30 +0000"  >&lt;p&gt;Patch with only the relevant portion.&lt;/p&gt;

&lt;p&gt;Maybe we should add a isFake() method to KeyValue to generally identify KVs that should never be seen by any user code?&lt;/p&gt;</comment>
                            <comment id="13433861" author="zhihyu@ebaysf.com" created="Tue, 14 Aug 2012 04:01:00 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * Make sure the fake KVs createed internally are never user visible
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;createed&apos; -&amp;gt; &apos;created&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @org.junit.Rule
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; org.apache.hadoop.hbase.ResourceCheckerJUnitRule cu =
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; org.apache.hadoop.hbase.ResourceCheckerJUnitRule();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please add the above snippet to the end of the new test.&lt;/p&gt;</comment>
                            <comment id="13433862" author="lhofhansl" created="Tue, 14 Aug 2012 04:09:25 +0000"  >&lt;p&gt;Damn... I &lt;b&gt;always&lt;/b&gt; forget that. We should add some kind a build target to check that.&lt;/p&gt;</comment>
                            <comment id="13433926" author="jesse_yates" created="Tue, 14 Aug 2012 06:00:23 +0000"  >&lt;p&gt;@lars I hate to go backwards a bit with how we do testing, but this seems like a reasonable case for doing some OO in our testing, namely creating an HBaseTest class that we use when writing tests that has things like this.&lt;/p&gt;</comment>
                            <comment id="13434003" author="hadoopqa" created="Tue, 14 Aug 2012 08:47:14 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12540805/6562-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12540805/6562-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2564//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13434281" author="lhofhansl" created="Tue, 14 Aug 2012 17:16:47 +0000"  >&lt;p&gt;@Jesse: Are you referring to the fact that we have to add these magic lines to each test? Yeah, there must be a better way to do that.&lt;/p&gt;</comment>
                            <comment id="13434289" author="jesse_yates" created="Tue, 14 Aug 2012 17:33:30 +0000"  >&lt;p&gt;@Lars: Yes. &lt;/p&gt;</comment>
                            <comment id="13434692" author="lhofhansl" created="Wed, 15 Aug 2012 00:26:34 +0000"  >&lt;p&gt;Addressing Ted&apos;s comments.&lt;br/&gt;
Also added an isInternal method to identify KVs that should not seen by user code.&lt;/p&gt;</comment>
                            <comment id="13434793" author="lhofhansl" created="Wed, 15 Aug 2012 04:01:17 +0000"  >&lt;p&gt;The patch is pretty simple. If there are no objections I&apos;ll commit this to 0.94 and 0.96 tomorrow.&lt;/p&gt;</comment>
                            <comment id="13435616" author="hudson" created="Wed, 15 Aug 2012 23:30:05 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3222 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3222/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3222/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt; Fake KVs are sometimes passed to filters (Revision 1373650)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13435641" author="hudson" created="Thu, 16 Aug 2012 00:17:31 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #131 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/131/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/131/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt; Fake KVs are sometimes passed to filters (Revision 1373650)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13435648" author="lhofhansl" created="Thu, 16 Aug 2012 00:24:52 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96.&lt;/p&gt;</comment>
                            <comment id="13435699" author="hudson" created="Thu, 16 Aug 2012 01:56:16 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #397 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/397/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/397/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt; Fake KVs are sometimes passed to filters (Revision 1373679)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13439496" author="hudson" created="Wed, 22 Aug 2012 13:48:07 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #48 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/48/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/48/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt; Fake KVs are sometimes passed to filters (Revision 1373679)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13448319" author="hudson" created="Wed, 5 Sep 2012 00:57:15 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #7 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt; Fake KVs are sometimes passed to filters (Revision 1373679)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13467286" author="posix4e" created="Mon, 1 Oct 2012 23:00:18 +0000"  >&lt;p&gt;Sorry, I haven&apos;t had a lot of time to look at this. Still trying to figure out what exactly is going on, it looks like the when the first KeyValue of a scan in the column from the point of view of the code&lt;/p&gt;

&lt;p&gt;       HRegion.java&lt;br/&gt;
 } else if (kv != null &amp;amp;&amp;amp; !kv.isInternal() &amp;amp;&amp;amp; filterRowKey(currentRow)) {&lt;br/&gt;
Is generated by&lt;/p&gt;

&lt;p&gt;  public static KeyValue createLastOnRow(final byte [] row,&lt;br/&gt;
      final int roffset, final int rlength, final byte [] family,&lt;br/&gt;
      final int foffset, final int flength, final byte [] qualifier,&lt;br/&gt;
      final int qoffset, final int qlength) &lt;/p&gt;
{
    return new KeyValue(row, roffset, rlength, family,
        foffset, flength, qualifier, qoffset, qlength,
        HConstants.OLDEST_TIMESTAMP, Type.Minimum, null, 0, 0);
  }
&lt;p&gt;So it is always internal from that point of the code.&lt;/p&gt;

&lt;p&gt;Only later from within&lt;br/&gt;
StoreScanner.java&lt;br/&gt;
  public synchronized boolean next(List&amp;lt;KeyValue&amp;gt; outResult, int limit,      String metric) throws IOException {&lt;br/&gt;
....&lt;br/&gt;
      LOOP: while((kv = this.heap.peek()) != null) {&lt;br/&gt;
( The second time through)&lt;/p&gt;

&lt;p&gt;Do we get the actual kv, with a proper type and timestamp. This seems to mess with filtering.&lt;/p&gt;


</comment>
                            <comment id="13467287" author="posix4e" created="Mon, 1 Oct 2012 23:03:13 +0000"  >&lt;p&gt;I should mention, the user has to specify a family and qualifier in the scan for this bug to show up&lt;/p&gt;</comment>
                            <comment id="13467308" author="yuzhihong@gmail.com" created="Mon, 1 Oct 2012 23:29:56 +0000"  >&lt;p&gt;Thanks for reporting, Alex.&lt;/p&gt;

&lt;p&gt;Do you have a test case for filtering to show the deficiency ?&lt;/p&gt;</comment>
                            <comment id="13467317" author="posix4e" created="Mon, 1 Oct 2012 23:34:46 +0000"  >&lt;p&gt;This test currently fails. Notice if you never flush the table, the query works as expected&lt;/p&gt;</comment>
                            <comment id="13467318" author="posix4e" created="Mon, 1 Oct 2012 23:35:25 +0000"  >&lt;p&gt;Ah you beat me to it. I think my minimal java file should find it.&lt;/p&gt;</comment>
                            <comment id="13467320" author="lhofhansl" created="Mon, 1 Oct 2012 23:36:29 +0000"  >&lt;p&gt;Hey Alex, please do not reopen an old issue, but file a new jira instead.&lt;/p&gt;</comment>
                            <comment id="13467325" author="posix4e" created="Mon, 1 Oct 2012 23:38:43 +0000"  >&lt;p&gt;@&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;  But you told me to plop it on this issue. I guess that was long enough ago that I should have repinged you. I&apos;ll open a new one if you close this one.&lt;/p&gt;</comment>
                            <comment id="13467336" author="lhofhansl" created="Mon, 1 Oct 2012 23:47:06 +0000"  >&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;I meant to comment here, not to reopen it. Sorry. Thanks for reporting it.&lt;/p&gt;

&lt;p&gt;Looks to me that RowFilter is not quite right. filterKeyValue should also check the row key (if filterOutRow is not already true)&lt;/p&gt;</comment>
                            <comment id="13468730" author="lhofhansl" created="Wed, 3 Oct 2012 18:36:51 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6912&quot; title=&quot;Filters are not properly applied in certain cases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6912&quot;&gt;&lt;del&gt;HBASE-6912&lt;/del&gt;&lt;/a&gt;. I am going to revert this change.&lt;/p&gt;</comment>
                            <comment id="13469081" author="hudson" created="Thu, 4 Oct 2012 02:02:37 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3419 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3419/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3419/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6912&quot; title=&quot;Filters are not properly applied in certain cases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6912&quot;&gt;&lt;del&gt;HBASE-6912&lt;/del&gt;&lt;/a&gt; Filters are not properly applied in certain cases (revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt;) (Revision 1393853)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13469090" author="hudson" created="Thu, 4 Oct 2012 02:13:55 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #504 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/504/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/504/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6912&quot; title=&quot;Filters are not properly applied in certain cases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6912&quot;&gt;&lt;del&gt;HBASE-6912&lt;/del&gt;&lt;/a&gt; Filters are not properly applied in certain cases (revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt;) (Revision 1393854)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13469301" author="hudson" created="Thu, 4 Oct 2012 11:43:02 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #207 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/207/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/207/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6912&quot; title=&quot;Filters are not properly applied in certain cases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6912&quot;&gt;&lt;del&gt;HBASE-6912&lt;/del&gt;&lt;/a&gt; Filters are not properly applied in certain cases (revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt;) (Revision 1393853)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13469895" author="hudson" created="Fri, 5 Oct 2012 00:37:47 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #8 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/8/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/8/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6912&quot; title=&quot;Filters are not properly applied in certain cases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6912&quot;&gt;&lt;del&gt;HBASE-6912&lt;/del&gt;&lt;/a&gt; Filters are not properly applied in certain cases (revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt;) (Revision 1393854)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13469937" author="hudson" created="Fri, 5 Oct 2012 01:02:40 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #59 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/59/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/59/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6912&quot; title=&quot;Filters are not properly applied in certain cases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6912&quot;&gt;&lt;del&gt;HBASE-6912&lt;/del&gt;&lt;/a&gt; Filters are not properly applied in certain cases (revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6562&quot; title=&quot;Fake KVs are sometimes passed to filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6562&quot;&gt;HBASE-6562&lt;/a&gt;) (Revision 1393854)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestFakeKeyInFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13475916" author="lhofhansl" created="Sun, 14 Oct 2012 22:35:29 +0000"  >&lt;p&gt;Talk to our internal team that saw this problem. They no longer need this fix, and this appears to have more side-effects than I had thought. I&apos;ll unschedule this from 0.94.3.&lt;/p&gt;</comment>
                            <comment id="13542521" author="lhofhansl" created="Wed, 2 Jan 2013 23:02:17 +0000"  >&lt;p&gt;This just came up again. What happens is this: The scan&apos;s startRow is always seen by filterRowKey, even it is actually does not exist.&lt;br/&gt;
This is bad for folks who want to implement their own filters using filterRowKey, because there is no way to distinguish the case where the scan&apos;s startRow exist vs not.&lt;/p&gt;

&lt;p&gt;For example, say the first row has rowkey &quot;Y&quot;, and we have a filter that implements filterRowKey.&lt;br/&gt;
If if we scan and set the startRow to &quot;Y&quot;, filterRowKey will correctly see &quot;Y&quot;.&lt;br/&gt;
But, if we scan and set the startRow to &quot;X&quot;, filterRowKey is called twice, first with &quot;X&quot;, then with &quot;Y&quot;.&lt;/p&gt;

&lt;p&gt;If you now have a not-filter, you&apos;ll return &quot;X&quot;, and &quot;Y&quot;, which is wrong, because &quot;X&quot; does not exist.&lt;/p&gt;</comment>
                            <comment id="13542563" author="lhofhansl" created="Wed, 2 Jan 2013 23:46:15 +0000"  >&lt;p&gt;I do not know how to fix this, without breaking the lazy seek optimization.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mikhail&quot; class=&quot;user-hover&quot; rel=&quot;mikhail&quot;&gt;Mikhail Bautin&lt;/a&gt; Do you have any suggestions?&lt;/p&gt;</comment>
                            <comment id="13542672" author="mikhail" created="Thu, 3 Jan 2013 02:41:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;: the easiest way would be to disable lazy seek for such queries and document it. I&apos;m not sure what the exact set of filters that conflict with lazy seek is, though.&lt;/p&gt;</comment>
                            <comment id="13542752" author="lhofhansl" created="Thu, 3 Jan 2013 07:00:33 +0000"  >&lt;p&gt;Every filter that implements filterRowKey (including custom filters) is subject to this.&lt;/p&gt;

&lt;p&gt;It&apos;s only a problem with the first seek. It seems the first seek should always be an eager seek, so that we know the real startKey (rather than the one provided by the scan, which only needs to sort before the actual first key scanned).&lt;/p&gt;</comment>
                            <comment id="13542763" author="lhofhansl" created="Thu, 3 Jan 2013 07:14:57 +0000"  >&lt;p&gt;Specifically the issue here is with this code in StoreFileScanner:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-comment&quot;&gt;// Multi-column Bloom filter optimization.
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// Create a fake key/value, so that &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; scanner only bubbles up to the top
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// of the KeyValueHeap in StoreScanner after we scanned &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; row/column in
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// all other store files. The query matcher will then just skip &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; fake
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// key/value and the store scanner will progress to the next column. This
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// is obviously not a &lt;span class=&quot;code-quote&quot;&gt;&quot;real real&quot;&lt;/span&gt; seek, but unlike the fake KV earlier in
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; method, we want &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; to be propagated to ScanQueryMatcher.
&lt;/span&gt;    cur = kv.createLastOnRowCol();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So it seems that is in purpose but has the unfortunate side-effect that these KVs are now presented to the Filter.filterRowKey(...)&lt;/p&gt;</comment>
                            <comment id="13542981" author="yuzhihong@gmail.com" created="Thu, 3 Jan 2013 15:19:08 +0000"  >&lt;p&gt;The KeyValue created by kv.createLastOnRowCol() carries type of Type.Minimum&lt;br/&gt;
Can we utilize this information so that the fake KeyValue isn&apos;t passed to filterRowKey() ?&lt;/p&gt;</comment>
                            <comment id="13543154" author="yuzhihong@gmail.com" created="Thu, 3 Jan 2013 18:23:51 +0000"  >&lt;p&gt;Patch v4 shows what I meant.&lt;/p&gt;

&lt;p&gt;Test*Filter* tests passed.&lt;/p&gt;</comment>
                            <comment id="13543218" author="lhofhansl" created="Thu, 3 Jan 2013 19:36:54 +0000"  >&lt;p&gt;I am not sure that is safe either. There might be other places that generate such KVs (for example on Region boundaries during scanning), would need to check carefully.&lt;/p&gt;</comment>
                            <comment id="13543229" author="yuzhihong@gmail.com" created="Thu, 3 Jan 2013 19:51:29 +0000"  >&lt;p&gt;I ran the following two tests which use either createLastOnRowCol() or createLastOnRow():&lt;/p&gt;

&lt;p&gt;  356  mt -Dtest=TestDataBlockEncoders&lt;br/&gt;
  357  mt -Dtest=TestHalfStoreFileReader&lt;/p&gt;

&lt;p&gt;They passed.&lt;/p&gt;</comment>
                            <comment id="13543234" author="mikhail" created="Thu, 3 Jan 2013 19:56:10 +0000"  >&lt;p&gt;This does not seem to be a problem with lazy seek, this is a problem with the multi-column Bloom filter optimization (although that could be considered a &quot;second-level lazy seek&quot;).&lt;/p&gt;

&lt;p&gt;The result of createLastOnRowCol should also have timestamp=MINIMUM_TIMESTAMP, so it might be safer to check for the &lt;br/&gt;
combination of minimum type/timestamp. Another solution might be to pass a flag to requestSeek to indicate that the multi-column Bloom filter optimization should also be disabled when doing the initial seek.&lt;/p&gt;</comment>
                            <comment id="13543243" author="hadoopqa" created="Thu, 3 Jan 2013 20:09:42 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563118/6562-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563118/6562-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestHCM&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3831//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13543255" author="yuzhihong@gmail.com" created="Thu, 3 Jan 2013 20:33:25 +0000"  >&lt;p&gt;Patch v5 adopts Mikhail&apos;s suggestion.&lt;/p&gt;

&lt;p&gt;I think this requires less modification compared to the second one which touches requestSeek().&lt;/p&gt;</comment>
                            <comment id="13543285" author="lhofhansl" created="Thu, 3 Jan 2013 21:09:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Another solution might be to pass a flag to requestSeek to indicate that the multi-column Bloom filter optimization should also be disabled when doing the initial seek.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That seems to be correct approach, albeit a bit more involved.&lt;br/&gt;
Do we only reseek to a non-existing row key during the initial seek? Can it also happen when a scanner crosses a region boundary?&lt;/p&gt;</comment>
                            <comment id="13543299" author="mikhail" created="Thu, 3 Jan 2013 21:31:39 +0000"  >&lt;p&gt;I think this can also happen when the scanner crosses a region boundary.&lt;/p&gt;</comment>
                            <comment id="13543372" author="lhofhansl" created="Thu, 3 Jan 2013 22:40:02 +0000"  >&lt;p&gt;In that case the client will call openScanner again, so as long as the first seek of any newly created RegionScanner does a real seek we should be OK.&lt;/p&gt;</comment>
                            <comment id="13543393" author="lhofhansl" created="Thu, 3 Jan 2013 22:59:27 +0000"  >&lt;p&gt;A KV with Type=Minimum and TS=OLDEST_TIMESTAMP is created by KeyValue.createLastOnRowCol(...) and KeyValue.createLastOnRow(...). The former is indeed only called from StoreFileScanner.requestSeek. The latter on the other hand is called by ScanQueryMatcher, and is used to request seeks.&lt;/p&gt;</comment>
                            <comment id="13543421" author="lhofhansl" created="Thu, 3 Jan 2013 23:42:20 +0000"  >&lt;p&gt;I don&apos;t think the patch is correct. The problem is when you set the startRow of a scan to an actually existing row key it must not be filtered out, because it will be skipped over on next().&lt;br/&gt;
Also see TestFromClientSide.testJira6912, which failed in the test run.&lt;/p&gt;</comment>
                            <comment id="13543426" author="lhofhansl" created="Thu, 3 Jan 2013 23:46:10 +0000"  >&lt;p&gt;Here&apos;s a patch that works correct in all situations.&lt;br/&gt;
The downside is that now all StoreScanner need to perform a real disk seek at least once if there is a filter (and this is not a get scan)&lt;/p&gt;</comment>
                            <comment id="13543437" author="lhofhansl" created="Thu, 3 Jan 2013 23:53:05 +0000"  >&lt;p&gt;And a 0.96 version&lt;/p&gt;</comment>
                            <comment id="13543441" author="yuzhihong@gmail.com" created="Fri, 4 Jan 2013 00:06:51 +0000"  >&lt;p&gt;I agree that patches I posted didn&apos;t solve the problem.&lt;/p&gt;

&lt;p&gt;For trunk patch, shall we introduce counterpart to the following method in Filter ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hasFilterRow();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Namely:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hasFilterRowKey();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can then narrow !scan.hasFilter() to (!scan.hasFilter() || !scan.getFilter().hasFilterRowKey()).&lt;/p&gt;</comment>
                            <comment id="13543444" author="yuzhihong@gmail.com" created="Fri, 4 Jan 2013 00:08:23 +0000"  >&lt;p&gt;For trunk patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    HRegion region = HRegion.createHRegion(hri, FSUtils.getRootDir(UTIL.getConfiguration()), UTIL.getConfiguration(), desc);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Wrap long line above.&lt;/p&gt;</comment>
                            <comment id="13543451" author="yuzhihong@gmail.com" created="Fri, 4 Jan 2013 00:22:53 +0000"  >&lt;p&gt;I wonder what purpose the condition of scan.isGetScan() serves.&lt;br/&gt;
I ran the following tests without that condition and tests passed:&lt;/p&gt;

&lt;p&gt;  389  mt -Dtest=Test*Filter*&lt;br/&gt;
  391  mt -Dtest=TestDataBlockEncoders,TestHalfStoreFileReader,TestFromClientSideWithCoprocessor,TestHCM,TestFromClientSide,TestFakeKeyInFilter&lt;/p&gt;</comment>
                            <comment id="13543481" author="hadoopqa" created="Fri, 4 Jan 2013 01:00:22 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563194/6562-0.96-v1.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563194/6562-0.96-v1.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSide&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.io.encoding.TestUpgradeFromHFileV1ToEncoding.testUpgrade(TestUpgradeFromHFileV1ToEncoding.java:83)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3842//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13543486" author="lhofhansl" created="Fri, 4 Jan 2013 01:07:30 +0000"  >&lt;p&gt;I added isGetScan condition, because if this is a get scan we only ever scan to existing rowkeys, hence the lazy seek is OK even when we have filters.&lt;/p&gt;</comment>
                            <comment id="13543488" author="lhofhansl" created="Fri, 4 Jan 2013 01:09:04 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mikhail&quot; class=&quot;user-hover&quot; rel=&quot;mikhail&quot;&gt;Mikhail Bautin&lt;/a&gt; What do you think about this patch? Would you concerned about the performance implications (each column family is seeked at least once)?&lt;/p&gt;</comment>
                            <comment id="13543494" author="lhofhansl" created="Fri, 4 Jan 2013 01:13:39 +0000"  >&lt;p&gt;hasFilterRowKey() might be a worthwhile addition for trunk (although I am typically reluctant to make API changes)&lt;/p&gt;</comment>
                            <comment id="13543543" author="yuzhihong@gmail.com" created="Fri, 4 Jan 2013 02:25:25 +0000"  >&lt;p&gt;A brief check among the filters that implement filterRowKey() vs. the filters that extend FilterBase, the former is minority.&lt;br/&gt;
Meaning, introduction of hasFilterRowKey() would narrow the cases where lazy seek is skipped.&lt;/p&gt;</comment>
                            <comment id="13620358" author="stack" created="Tue, 2 Apr 2013 22:30:37 +0000"  >&lt;p&gt;Moving to 0.95.1  What we going to do w/ this one?  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mikhail&quot; class=&quot;user-hover&quot; rel=&quot;mikhail&quot;&gt;Mikhail Bautin&lt;/a&gt; Any opinion on Lar&apos;s last patch?  Thanks boss.&lt;/p&gt;</comment>
                            <comment id="13849692" author="hadoopqa" created="Mon, 16 Dec 2013 20:30:28 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563194/6562-0.96-v1.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563194/6562-0.96-v1.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8185//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8185//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14126663" author="hadoopqa" created="Tue, 9 Sep 2014 06:12:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563194/6562-0.96-v1.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563194/6562-0.96-v1.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12563194&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10777//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10777//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12609839">HBASE-6912</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12563192" name="6562-0.94-v1.txt" size="4303" author="lhofhansl" created="Thu, 3 Jan 2013 23:46:10 +0000"/>
                            <attachment id="12563194" name="6562-0.96-v1.txt" size="4224" author="lhofhansl" created="Thu, 3 Jan 2013 23:53:05 +0000"/>
                            <attachment id="12540805" name="6562-v2.txt" size="4399" author="lhofhansl" created="Tue, 14 Aug 2012 00:07:30 +0000"/>
                            <attachment id="12540985" name="6562-v3.txt" size="5306" author="lhofhansl" created="Wed, 15 Aug 2012 00:26:34 +0000"/>
                            <attachment id="12563118" name="6562-v4.txt" size="1213" author="yuzhihong@gmail.com" created="Thu, 3 Jan 2013 18:23:51 +0000"/>
                            <attachment id="12563145" name="6562-v5.txt" size="1287" author="yuzhihong@gmail.com" created="Thu, 3 Jan 2013 20:33:25 +0000"/>
                            <attachment id="12540595" name="6562.txt" size="3867" author="lhofhansl" created="Sun, 12 Aug 2012 22:54:48 +0000"/>
                            <attachment id="12547308" name="minimalTest.java" size="2461" author="posix4e" created="Mon, 1 Oct 2012 23:34:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 13 Aug 2012 00:27:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>240017</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 14 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00vhj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3033</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>