<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:40:13 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13149/HBASE-13149.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13149] HBase MR is broken on Hadoop 2.5+ Yarn</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13149</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Running the server MR tools is not working on Yarn version 2.5+.&lt;/p&gt;

&lt;p&gt;Running org.apache.hadoop.hbase.mapreduce.Export:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Exception in thread &quot;main&quot; java.lang.NoSuchMethodError: org.codehaus.jackson.map.ObjectMapper.setSerializationInclusion(Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;)Lorg/codehaus/jackson/map/ObjectMapper;
        at org.apache.hadoop.yarn.webapp.YarnJacksonJaxbJsonProvider.configObjectMapper(YarnJacksonJaxbJsonProvider.java:59)
        at org.apache.hadoop.yarn.util.timeline.TimelineUtils.&amp;lt;clinit&amp;gt;(TimelineUtils.java:47)
        at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:166)
        at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
        at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:102)
        at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
        at org.apache.hadoop.mapred.ResourceMgrDelegate.&amp;lt;init&amp;gt;(ResourceMgrDelegate.java:96)
        at org.apache.hadoop.mapred.YARNRunner.&amp;lt;init&amp;gt;(YARNRunner.java:112)
        at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
        at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:95)
        at org.apache.hadoop.mapreduce.Cluster.&amp;lt;init&amp;gt;(Cluster.java:82)
        at org.apache.hadoop.mapreduce.Cluster.&amp;lt;init&amp;gt;(Cluster.java:75)
        at org.apache.hadoop.mapreduce.Job$9.run(Job.java:1266)
        at org.apache.hadoop.mapreduce.Job$9.run(Job.java:1262)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:415)
        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1628)
        at org.apache.hadoop.mapreduce.Job.connect(Job.java:1261)
        at org.apache.hadoop.mapreduce.Job.submit(Job.java:1290)
        at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1314)
        at org.apache.hadoop.hbase.mapreduce.Export.main(Export.java:189)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The problem seems to be the jackson jar version.  &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-10104&quot; title=&quot;Update jackson to 1.9.13&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-10104&quot;&gt;&lt;del&gt;HADOOP-10104&lt;/del&gt;&lt;/a&gt; updated jackson version to 1.9.13.  &lt;a href=&quot;https://issues.apache.org/jira/browse/YARN-2092&quot; title=&quot;Incompatible org.codehaus.jackson* dependencies when moving from 2.4.0 to 2.5.0-SNAPSHOT&quot; class=&quot;issue-link&quot; data-issue-key=&quot;YARN-2092&quot;&gt;&lt;del&gt;YARN-2092&lt;/del&gt;&lt;/a&gt; reported a problem as well.&lt;/p&gt;

&lt;p&gt;HBase is using jackson 1.8.8. This version of the jar in the classpath seem to cause the problem.&lt;/p&gt;

&lt;p&gt;Should we upgrade to jackson 1.9.13? &lt;/p&gt;</description>
                <environment></environment>
        <key id="12779218">HBASE-13149</key>
            <summary>HBase MR is broken on Hadoop 2.5+ Yarn</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jinghe">Jerry He</assignee>
                                    <reporter username="jinghe">Jerry He</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Mar 2015 22:59:26 +0000</created>
                <updated>Fri, 3 Jul 2015 14:35:04 +0000</updated>
                            <resolved>Sun, 26 Apr 2015 19:40:40 +0000</resolved>
                                    <version>1.0.0</version>
                    <version>2.0.0</version>
                    <version>0.98.10.1</version>
                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="14345952" author="jinghe" created="Tue, 3 Mar 2015 23:02:05 +0000"  >&lt;p&gt;Tested on 0.98. It fixed the problem.  &apos;mvn test&apos; clean.&lt;/p&gt;</comment>
                            <comment id="14345957" author="enis" created="Tue, 3 Mar 2015 23:05:24 +0000"  >&lt;p&gt;Yes, this is due to jackson 1.9 used in hadoop 2.5+. Does jackson 1.9 work with older hadoop versions? We should document that with hadoop-2.5+ you should also change your jackson jar in your deployment. &lt;/p&gt;</comment>
                            <comment id="14346128" author="apurtell" created="Wed, 4 Mar 2015 00:46:20 +0000"  >&lt;p&gt;Aha, now it&apos;s our turn to feel this pain. Other projects have gone through it. Classpath isolation can&apos;t come soon enough, onward to Hadoop 3!&lt;/p&gt;</comment>
                            <comment id="14346148" author="apurtell" created="Wed, 4 Mar 2015 01:09:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;Does jackson 1.9 work with older hadoop versions? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We should find this out I think. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We should document that with hadoop-2.5+ you should also change your jackson jar in your deployment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Maybe we could also introduce a profile for upgrading necessary dependencies.&lt;/p&gt;</comment>
                            <comment id="14346233" author="jinghe" created="Wed, 4 Mar 2015 02:06:04 +0000"  >&lt;p&gt;According to the Versioning Strategy here: &lt;a href=&quot;http://wiki.fasterxml.com/JacksonDownload&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.fasterxml.com/JacksonDownload&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Minor version upgrade indicates added functionality, but without removing existing functionality&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The offending method org.codehaus.jackson.map.ObjectMapper.setSerializationInclusion(Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; is a new method in 1.9.+&lt;br/&gt;
See: &lt;a href=&quot;http://jackson.codehaus.org/1.8.8/javadoc/org/codehaus/jackson/map/ObjectMapper.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jackson.codehaus.org/1.8.8/javadoc/org/codehaus/jackson/map/ObjectMapper.html&lt;/a&gt;&lt;br/&gt;
and &lt;a href=&quot;http://jackson.codehaus.org/1.9.0/javadoc/org/codehaus/jackson/map/ObjectMapper.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jackson.codehaus.org/1.9.0/javadoc/org/codehaus/jackson/map/ObjectMapper.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I dropped the jackson 1.9.13 jars into the lib dir (replaced 1.8.8) of a HBase cluster on Hadoop 2.2.  HBase jobs are successful.&lt;/p&gt;

&lt;p&gt;Will test more ...&lt;/p&gt;</comment>
                            <comment id="14346458" author="jinghe" created="Wed, 4 Mar 2015 06:10:32 +0000"  >&lt;p&gt;Tested on hadoop 2.4.1 cluster too.&lt;br/&gt;
Dropped jackson 1.9.13 jars into HBase lib dir (replaced 1.8.8).  No change to hadoop dependency jars.&lt;br/&gt;
HBase Yarn jobs (Export, ExportSnapshot) are successful.&lt;/p&gt;</comment>
                            <comment id="14347108" author="busbey" created="Wed, 4 Mar 2015 16:40:40 +0000"  >&lt;p&gt;Won&apos;t we break people relying on HBase if we do this update? Our compat guide says we won&apos;t break downstream folks except on major versions.&lt;/p&gt;

&lt;p&gt;Activating the application classpath feature for our MR tools is supposed to isolate the jackson needed for HBase from the jackson needed for YARN. Does it work?&lt;/p&gt;</comment>
                            <comment id="14347347" author="busbey" created="Wed, 4 Mar 2015 18:43:26 +0000"  >&lt;p&gt;The Java API compliance checker that we use for our own checks (dev-support/check_compatibility.sh) also has a mode where you just feed it jars to check compatibility. Could we trust-but-verify the jackson versioning?&lt;/p&gt;

&lt;p&gt;That won&apos;t help in cases where downstream folks put jackson 1.8 in our classpath once we start relying on methods that are only in 1.9, but it would give me more confidence that we won&apos;t break common use.&lt;/p&gt;</comment>
                            <comment id="14347444" author="jinghe" created="Wed, 4 Mar 2015 19:45:30 +0000"  >&lt;p&gt;Hi, Sean&lt;/p&gt;

&lt;p&gt;Let me try the dev-support/check_compatibility.sh.  I have not run it before. &lt;/p&gt;</comment>
                            <comment id="14347448" author="busbey" created="Wed, 4 Mar 2015 19:47:39 +0000"  >&lt;p&gt;For clarification, dev-support/check_compatibility.sh just checks ABI/API compatibility for HBase versions. The underlying tool it uses is called the Java API Compliance Checker. That tool can do the jar-to-jar comparison I mentioned.&lt;/p&gt;</comment>
                            <comment id="14347476" author="jinghe" created="Wed, 4 Mar 2015 20:01:23 +0000"  >&lt;p&gt;Got it.  Need to use the underlying Java ACC tool.&lt;/p&gt;</comment>
                            <comment id="14347592" author="jinghe" created="Wed, 4 Mar 2015 21:28:01 +0000"  >&lt;p&gt;Attached the compatibility reports.&lt;br/&gt;
Messy?&lt;/p&gt;</comment>
                            <comment id="14347612" author="busbey" created="Wed, 4 Mar 2015 21:40:12 +0000"  >&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ugh. that looks bad. Do they publish a supported API based on package names or something?&lt;/p&gt;</comment>
                            <comment id="14348011" author="apurtell" created="Thu, 5 Mar 2015 02:29:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;Our compat guide says we won&apos;t break downstream folks except on major versions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s not the issue here. This was a Hadoop dependency change. We are along for the ride. Thoughts on strategies for dealing with when our upstream breaks our downstream? &lt;/p&gt;</comment>
                            <comment id="14348100" author="busbey" created="Thu, 5 Mar 2015 04:10:56 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Our compat guide says we won&apos;t break downstream folks except on major versions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s not the issue here. This was a Hadoop dependency change. We are along for the ride. Thoughts on strategies for dealing with when our upstream breaks our downstream?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We also list jackson as a dependency in hbase-client. To me, that means we have to mitigate for our downstream users where possible. Not everyone downstream uses the MR-base tools. Why should we break things for them?&lt;/p&gt;

&lt;p&gt;Have we confirmed that application classpaths don&apos;t mitigate this? relying on that would mean we can dodge this particular bullet.&lt;/p&gt;</comment>
                            <comment id="14348130" author="jinghe" created="Thu, 5 Mar 2015 04:54:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;Have we confirmed that application classpaths don&apos;t mitigate this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I missed this part.  Can you elaborate a little? See if I can do any testing. &lt;/p&gt;</comment>
                            <comment id="14348759" author="busbey" created="Thu, 5 Mar 2015 14:14:38 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Have we confirmed that application classpaths don&apos;t mitigate this?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I missed this part. Can you elaborate a little? See if I can do any testing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure thing. There&apos;s a feature in Hadoop 2 to use a different classloader for user submitted code. Unfortunately, it isn&apos;t really documented. The relevant jiras are &lt;a href=&quot;https://issues.apache.org/jira/browse/YARN-286&quot; title=&quot;Add a YARN ApplicationClassLoader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;YARN-286&quot;&gt;&lt;del&gt;YARN-286&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/MAPREDUCE-1700&quot; title=&quot;User supplied dependencies may conflict with MapReduce system JARs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAPREDUCE-1700&quot;&gt;&lt;del&gt;MAPREDUCE-1700&lt;/del&gt;&lt;/a&gt;, and as of Hadoop 2.6 &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-10893&quot; title=&quot;isolated classloader on the client side&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-10893&quot;&gt;&lt;del&gt;HADOOP-10893&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14350009" author="jinghe" created="Fri, 6 Mar 2015 06:01:44 +0000"  >&lt;p&gt;Hi, Sean&lt;/p&gt;

&lt;p&gt;I took a look at the separate classloader support in the relevant JIRAs you mentioned.  Here is what I see.  (I haven&apos;t got a chance to test it out yet today.)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/YARN-286&quot; title=&quot;Add a YARN ApplicationClassLoader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;YARN-286&quot;&gt;&lt;del&gt;YARN-286&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/MAPREDUCE-1700&quot; title=&quot;User supplied dependencies may conflict with MapReduce system JARs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAPREDUCE-1700&quot;&gt;&lt;del&gt;MAPREDUCE-1700&lt;/del&gt;&lt;/a&gt; provided a way to use a separate/isolated classloader for user jars/classes on the server side for user tasks.&lt;br/&gt;
This is configured by setting the property &apos;mapreduce.job.classloader&apos; to true and setting the env variable &apos;APP_CLASSPATH&apos;.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-10893&quot; title=&quot;isolated classloader on the client side&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-10893&quot;&gt;&lt;del&gt;HADOOP-10893&lt;/del&gt;&lt;/a&gt; introduced on the client side an env variable &apos;HADOOP_USE_CLIENT_CLASSLOADER&apos;, but it is only in the Hadoop RunJar tool.&lt;br/&gt;
The classloader isolation support in Hadoop is only partial.&lt;/p&gt;

&lt;p&gt;We seem to hit the problem on the client side (see the stack trace).  I don&apos;t think it is going to help us here?&lt;/p&gt;</comment>
                            <comment id="14353433" author="jinghe" created="Mon, 9 Mar 2015 19:23:29 +0000"  >&lt;p&gt;Hi, folks&lt;/p&gt;

&lt;p&gt;We need a fix here. &lt;br/&gt;
Should we at least upgrade to jackson 1.9.13 on the 2.0 branch?  And maybe even the 1.1+ branch?   We build on Hadoop 2.5.1 by default on these branches.&lt;br/&gt;
We&apos;ll document clearly for 0.98.&lt;/p&gt;

&lt;p&gt;Any suggestions? &lt;/p&gt;
</comment>
                            <comment id="14353496" author="busbey" created="Mon, 9 Mar 2015 20:04:45 +0000"  >&lt;p&gt;+1 on updating it in 2.0, with a release note.&lt;/p&gt;

&lt;p&gt;Shouldn&apos;t the RunJar isolation protect us on the client side when launching our tools? Do we do something that prevents the use of runjar?&lt;/p&gt;

&lt;p&gt;IIRC the runjar isolation is only on 2.6. For versions that don&apos;t have it, we can give folks instructions on manually replacing the impacted library (as we do for replacing the hadoop jars) with a note that they&apos;ll need to update their application to ensure it also uses the correct version.&lt;/p&gt;</comment>
                            <comment id="14353623" author="enis" created="Mon, 9 Mar 2015 21:16:01 +0000"  >&lt;p&gt;+1 for changing the jackson version in master and branch-1. For 1.0 and 0.98 we can document this in the book (there is a section about hadoop versions, we can add it there). &lt;/p&gt;</comment>
                            <comment id="14353740" author="busbey" created="Mon, 9 Mar 2015 22:09:22 +0000"  >&lt;p&gt;From reading the compatibility comparison between Jackson 1.8 and 1.9, updating it in branch-1 would violate our promise not to break any dependencies on minor version releases.&lt;/p&gt;

&lt;p&gt;Can we find a version of jackson that doesn&apos;t break yarn, us, and our compatibility promise for dependencies on branch-1?&lt;/p&gt;</comment>
                            <comment id="14353914" author="enis" created="Mon, 9 Mar 2015 23:59:01 +0000"  >&lt;p&gt;Running Hbase with jackson 1.8 with Hadoop-2.5+ does not work at all, so I don&apos;t know how compatibility is in the picture. &lt;/p&gt;</comment>
                            <comment id="14354000" author="jinghe" created="Tue, 10 Mar 2015 00:51:33 +0000"  >&lt;p&gt;If the jackson 1.8 appears before  jackson 1.9 in the classpath when the job is submitted, we will have a problem.&lt;br/&gt;
Did a little more investigation. &apos;hbase&apos; script puts hbaes lib/* in front of hadoop classpath.  hbase lib/* is also in front of user provided HBASE_CLASSPATH.&lt;/p&gt;

&lt;p&gt;But hadoop RunJar (or &apos;hadoop jar&apos;) puts hadoop jars and dependency jars in front of user jars (unless HADOOP_USER_CLASSPATH_FIRST is specified&apos;).&lt;br/&gt;
Therefore using &apos;hadoop jar&apos; to run hbase MR class works.&lt;br/&gt;
Well, it is a messy classpath issue. The hbase lib jars will need to appear AFTER the hadoop lib jars.&lt;/p&gt;

&lt;p&gt;We probably can not ask user to use &apos;hadoop jar&apos; to run HBase MR always.&lt;br/&gt;
Also it turns out that  hbase-server jar only expose limited main classes via org.apache.hadoop.hbase.mapreduce.Driver.&lt;/p&gt;</comment>
                            <comment id="14354108" author="busbey" created="Tue, 10 Mar 2015 01:59:04 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Running Hbase with jackson 1.8 with Hadoop-2.5+ does not work at all, so I don&apos;t know how compatibility is in the picture.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is not true. While I think this issue shows a gap in our testing of the 1.0.0 release, I don&apos;t think that gap is large enough to say it doesn&apos;t work at all. So far as we know right now, HBase with a YARN based app (including our bundled MR tools) doesn&apos;t work at all. Downstream folks who don&apos;t care about running MR or other YARN apps against HBase should work just fine.&lt;/p&gt;

&lt;p&gt;This is still a substantial problem, since it impacts folks who want to use our bundled tools, those who want to run MR directly, those who want to use Hive (atleast Hive on MR), Sqoop, and possibly Spark (in on-yarn mode).&lt;/p&gt;

&lt;p&gt;The way I see it we have a few options that keeps us honest wrt our compatibility promises, in roughly order of my decreasing preference:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Find a solution that fixes &lt;em&gt;just&lt;/em&gt; the problem at hand: running Hadoop 2.5+ YARN based apps against HBase
	&lt;ul&gt;
		&lt;li&gt;This might break operational compatibility, but we could do this without qualms on a minor version.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Move branch-1 to be 2.0
	&lt;ul&gt;
		&lt;li&gt;We could fix this in branch-1, make it 2.0.0 and move master to 3.0.0. It would be simple and in line with our current promises. It would also do a great job of desensitizing us to major version number increments.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Change our compatibility promise for dependencies to patch-only
	&lt;ul&gt;
		&lt;li&gt;I don&apos;t like this option because we just made our promises and I think not offering dependency compat at minor versions will be a substantial dis-incentive to upgrade&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Take a mulligan on jackson specifically
	&lt;ul&gt;
		&lt;li&gt;We could site this testing gap and the severity of the breakage in a big release note. But I really don&apos;t like this option because we just made our compatibility promises. It sets a dangerous precedent that erodes the trust downstream folks can place in our compatibility promises.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14354120" author="busbey" created="Tue, 10 Mar 2015 02:05:25 +0000"  >&lt;blockquote&gt;
&lt;p&gt;If the jackson 1.8 appears before jackson 1.9 in the classpath when the job is submitted, we will have a problem.&lt;br/&gt;
Did a little more investigation. &apos;hbase&apos; script puts hbaes lib/* in front of hadoop classpath. hbase lib/* is also in front of user provided HBASE_CLASSPATH.&lt;/p&gt;

&lt;p&gt;But hadoop RunJar (or &apos;hadoop jar&apos;) puts hadoop jars and dependency jars in front of user jars (unless HADOOP_USER_CLASSPATH_FIRST is specified&apos;).&lt;/p&gt;

&lt;p&gt;Therefore using &apos;hadoop jar&apos; to run hbase MR class works.&lt;br/&gt;
Well, it is a messy classpath issue. The hbase lib jars will need to appear AFTER the hadoop lib jars.&lt;br/&gt;
We probably can not ask user to use &apos;hadoop jar&apos; to run HBase MR always.&lt;br/&gt;
Also it turns out that hbase-server jar only expose limited main classes via org.apache.hadoop.hbase.mapreduce.Driver.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So it sounds like we can document a work around that sets HADOOP_CLASSPATH equal to the output of &lt;tt&gt;hbase mapredcp&lt;/tt&gt; and then uses &lt;tt&gt;hadoop jar&lt;/tt&gt; to run things. Do I have that right?&lt;/p&gt;

&lt;p&gt;Actually, looking at the output of &lt;tt&gt;hbase mapredcp&lt;/tt&gt;, I don&apos;t see jackson listed at all.  Could you include the command you&apos;re running to start the job?&lt;/p&gt;</comment>
                            <comment id="14354135" author="enis" created="Tue, 10 Mar 2015 02:15:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;This is not true. While I think this issue shows a gap in our testing of the 1.0.0 release&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Most of my tests are done with Hadoop-2.6.0, but I had already replaced the jackson jar from the installation. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I don&apos;t think that gap is large enough to say it doesn&apos;t work at all. So far as we know right now, HBase with a YARN based app (including our bundled MR tools) doesn&apos;t work at all.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, HBase standalone works. But MR support is a big part of HBase. &lt;/p&gt;

&lt;p&gt;I think for 0.98 and 1.0 we can treat this as a documentation issue. For 1.1 we should change the dependency version. Not sure why we cannot bump up a minor version of a dependency while we are also bumping up a minor version. &lt;/p&gt;</comment>
                            <comment id="14354158" author="jinghe" created="Tue, 10 Mar 2015 02:35:55 +0000"  >&lt;p&gt;Hi, Sean&lt;/p&gt;

&lt;p&gt;I used &apos;hbase &amp;lt;classname&amp;gt;&apos;.&lt;/p&gt;

&lt;p&gt;&apos;hbase classpath&apos; would show the jackson jars. &lt;/p&gt;</comment>
                            <comment id="14354161" author="busbey" created="Tue, 10 Mar 2015 02:38:36 +0000"  >&lt;blockquote&gt;
&lt;p&gt;For 1.1 we should change the dependency version. Not sure why we cannot bump up a minor version of a dependency while we are also bumping up a minor version.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Our compatibility guide currently says we will only cause a breaking dependency change on major version. The comparison &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jinghe&quot; class=&quot;user-hover&quot; rel=&quot;jinghe&quot;&gt;Jerry He&lt;/a&gt; did above shows that Jackson 1.8 -&amp;gt; Jackson 1.9 is a breaking dependency change, unless we&apos;re missing something in the jackson library that scopes which packages / classes should be relied on by downstream clients.&lt;/p&gt;</comment>
                            <comment id="14354170" author="busbey" created="Tue, 10 Mar 2015 02:49:44 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I used &apos;hbase &amp;lt;classname&amp;gt;&apos;.&lt;br/&gt;
&apos;hbase classpath&apos; would show the jackson jars.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s true, but we don&apos;t need the whole of the classpath.  It looks like the reference guide already tells folks that they should be using &lt;tt&gt;hadoop jar&lt;/tt&gt; to run everything against HBase (ref &lt;a href=&quot;http://hbase.apache.org/book.html#hbase.mapreduce.classpath&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;section on the classpath&lt;/a&gt; and &lt;a href=&quot;http://hbase.apache.org/book.html#_bundled_hbase_mapreduce_jobs&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;section on bundled jobs&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;How about we just add this failure to the troubleshooting section and reference the earlier guide sections?&lt;/p&gt;</comment>
                            <comment id="14354255" author="jinghe" created="Tue, 10 Mar 2015 04:12:43 +0000"  >&lt;p&gt;Here is more info on the jackson releases:  &lt;a href=&quot;http://svn.codehaus.org/jackson/trunk/release-notes/VERSION&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.codehaus.org/jackson/trunk/release-notes/VERSION&lt;/a&gt;&lt;br/&gt;
You can see in this Release Notes the following for 1.9:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Potential backwards compatibility issues (compared to 1.8.x):

  * Removed &apos;org.codehaus.jackson.annotate.JsonClass, JsonKeyClass and
    JsonContentClass (deprecated since 1.1)
  * Move TokenBufferDeserializer to separate class (from inside StdDeserializer)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14354292" author="jinghe" created="Tue, 10 Mar 2015 04:44:04 +0000"  >&lt;p&gt;Attached a patch for master.  Get a test run.&lt;/p&gt;</comment>
                            <comment id="14354486" author="hadoopqa" created="Tue, 10 Mar 2015 07:56:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12703591/HBASE-13149-master.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12703591/HBASE-13149-master.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 9b53a1c214f87bd0a38b12e8d308e7e3bde6de84.&lt;br/&gt;
  ATTACHMENT ID: 12703591&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.TestHeapSize&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.activemq.JmsQueueBrowserTest.testReceiveBrowseReceive(JmsQueueBrowserTest.java:60)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13152//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14355362" author="enis" created="Tue, 10 Mar 2015 18:14:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;Our compatibility guide currently says we will only cause a breaking dependency change on major version. The comparison Jerry He did above shows that Jackson 1.8 -&amp;gt; Jackson 1.9 is a breaking dependency change, unless we&apos;re missing something in the jackson library that scopes which packages / classes should be relied on by downstream clients.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think the changes are in the internals of Jackson from what I see in the report for jackson-core. I do not realistically expect us to do a full sweep of every dependency compat story, so we should rely on what our dependencies use for versioning. Assuming that jackson (or other deps) uses semver or something similar going from 1.8 to 1.9 should be fine. &lt;br/&gt;
I do not think we should corner ourselves into &quot;cannot upgrade dependencies&quot; situation (I think &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; started a thread on this some time ago). From what I see, inconveniencing our users with not upgrading this lib in 1.1 is far worse than upgrading it, but possibly causing some minor (if any) inconvenience in case the user is relying on that lib explicitly. &lt;/p&gt;</comment>
                            <comment id="14355404" author="busbey" created="Tue, 10 Mar 2015 18:24:10 +0000"  >&lt;p&gt;attaching a single report that covers all of the jackson libraries (should be just a consolidated version of the above individual reports)&lt;/p&gt;</comment>
                            <comment id="14355413" author="stack" created="Tue, 10 Mar 2015 18:29:55 +0000"  >&lt;p&gt;Nice report &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; if damning. I like the list of possible solns. Inventive (e.g. 1.1 =&amp;gt; 2.0).&lt;/p&gt;

&lt;p&gt;I see this issue as a test of the projects resolve on semvar. Can we surface on dev list?  The issues discussed in here are too large for a single issue (and besides the discussion is quality)&lt;/p&gt;</comment>
                            <comment id="14355439" author="busbey" created="Tue, 10 Mar 2015 18:42:06 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I think the changes are in the internals of Jackson from what I see in the report for jackson-core. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve attached a single report for everything, which makes it easier to spot things that are broken.&lt;/p&gt;

&lt;p&gt;Additionally, the release notes pointed out by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jinghe&quot; class=&quot;user-hover&quot; rel=&quot;jinghe&quot;&gt;Jerry He&lt;/a&gt; earlier makes it clear that there are breaking changes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here is more info on the jackson releases: &lt;a href=&quot;http://svn.codehaus.org/jackson/trunk/release-notes/VERSION&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.codehaus.org/jackson/trunk/release-notes/VERSION&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see in this Release Notes the following for 1.9:&lt;/p&gt;
  &lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  Potential backwards compatibility issues (compared to 1.8.x):

  * Removed &apos;org.codehaus.jackson.annotate.JsonClass, JsonKeyClass and
    JsonContentClass (deprecated since 1.1)
  * Move TokenBufferDeserializer to separate class (from inside StdDeserializer)
  &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;This will break anyone relying on the old annotation approach to using JSON with POJOs. Semver makes no allowance for removing &quot;just deprecated stuff&quot; on minor version and the &lt;a href=&quot;https://github.com/FasterXML/jackson-docs#on-jackson-versioning&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;jackson versioning statement doesn&apos;t carve it out&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I do not realistically expect us to do a full sweep of every dependency compat story, so we should rely on what our dependencies use for versioning. Assuming that jackson (or other deps) uses semver or something similar going from 1.8 to 1.9 should be fine. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I am willing to do such a check so long as we are going to make downstream promises. I believe I can also automate it. I think the above notes on jackson make it clear that they did not follow semver for 1.8 -&amp;gt; 1.9, regardless of what their stated policy is.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I do not think we should corner ourselves into &quot;cannot upgrade dependencies&quot; situation (I think Nick Dimiduk started a thread on this some time ago). From what I see, inconveniencing our users with not upgrading this lib in 1.1 is far worse than upgrading it, but possibly causing some minor (if any) inconvenience in case the user is relying on that lib explicitly.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is fine, provided we update our compatibility promises to reflect this reality. There is pain in either direction, we just need to set expectations for downstream folks. Note that options #2 and #3 I provided above will meet the goal of fixing this by updating the dependency while having a compatibility promise that is realistic for downstream folks.&lt;/p&gt;

&lt;p&gt;If we are going to set a precedent that&apos;s different from our current compatibility promises for dependencies, we should get a wider audience on dev@.&lt;/p&gt;</comment>
                            <comment id="14355519" author="enis" created="Tue, 10 Mar 2015 19:21:05 +0000"  >&lt;p&gt;Ok, let&apos;s continue on dev@, and come back here. &lt;/p&gt;</comment>
                            <comment id="14359155" author="apurtell" created="Thu, 12 Mar 2015 18:46:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;I see this issue as a test of the projects resolve on semvar.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I feel like this is an over the top statement. We are limited on what we can realistically promise by how we ourselves are affected by &quot;minor&quot; bumps of dependencies. Backing ourselves into a corner based on policy would be a first for this community and, IMHO, an unwelcome departure from earlier practice.&lt;/p&gt;</comment>
                            <comment id="14362621" author="lhofhansl" created="Mon, 16 Mar 2015 00:21:38 +0000"  >&lt;p&gt;Just asked on the mailing list, but now think I should have asked here.&lt;/p&gt;

&lt;p&gt;What &lt;b&gt;precisely&lt;/b&gt; will break when upgrade Jackson to 1.9? As long as we do not break client-server, server-server, file-formats, etc, we&apos;re good. IMHO.&lt;/p&gt;

&lt;p&gt;Specifically we &lt;b&gt;can&lt;/b&gt; break client binary compatibility. The section about &quot;Dependency Compatibility&quot; is about not pulling in anything that breaks any of guarantees we just so carefully stated (my main worry there was to pull in an incompatible version of Hadoop that breaks the wire-protocol).&lt;/p&gt;</comment>
                            <comment id="14362697" author="busbey" created="Mon, 16 Mar 2015 03:45:01 +0000"  >&lt;blockquote&gt;
&lt;p&gt;What precisely will break when upgrade Jackson to 1.9? As long as we do not break client-server, server-server, file-formats, etc, we&apos;re good. IMHO.&lt;br/&gt;
Specifically we can break client binary compatibility. The section about &quot;Dependency Compatibility&quot; is about not pulling in anything that breaks any of guarantees we just so carefully stated (my main worry there was to pull in an incompatible version of Hadoop that breaks the wire-protocol).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Some downstream applications that compiled against HBase 1.0.0 will fail to compile against HBase 1.1.0. Specifically, it will be those applications that relied on the hbase-client artifact and used things that were present in jackson 1.8.8 that are no longer in 1.9 (e.g. the breaking changes mentioned in the release notes, or those that show up in the &quot;source compatibility&quot; tab of the jackson 1.8 to 1.9 compatibility report).&lt;/p&gt;</comment>
                            <comment id="14362703" author="lhofhansl" created="Mon, 16 Mar 2015 03:55:58 +0000"  >&lt;p&gt;That&apos;s fine, no? Since there is no requirement to upgrade the HBase client for a minor version... Clients can stay at the old version with the old Jackson.&lt;br/&gt;
I think we&apos;re fine making this change, unless there are other effects.&lt;/p&gt;</comment>
                            <comment id="14362711" author="busbey" created="Mon, 16 Mar 2015 04:14:16 +0000"  >&lt;p&gt;Our promise of client API compatibility on minor release versions makes me think that I should be able to recompile my client against a new minor version without any issue.&lt;/p&gt;</comment>
                            <comment id="14362788" author="lhofhansl" created="Mon, 16 Mar 2015 06:03:51 +0000"  >&lt;p&gt;So it&apos;s not &quot;Dependency Compatibility&quot; we&apos;re talking about. I agree.&lt;/p&gt;

&lt;p&gt;As for client API compatibility... Good point. I do find that a stretch, though, since this just happens to be a library that we ship with and that a user &lt;em&gt;might&lt;/em&gt; have compiled against and that &lt;em&gt;might&lt;/em&gt; break compilation now. If that is the only concern I honestly think we can make the change.&lt;/p&gt;

&lt;p&gt;Do we know for sure this is the only situation where things are potentially broken?&lt;/p&gt;</comment>
                            <comment id="14364135" author="enis" created="Mon, 16 Mar 2015 22:54:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;As for client API compatibility... Good point. I do find that a stretch, though, since this just happens to be a library that we ship with and that a user might have compiled against and that might break compilation now. If that is the only concern I honestly think we can make the change.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1. &lt;br/&gt;
It is our API that we are making promises for &quot;source compatibility&quot;, not other&apos;s API coming through as a dependency. I thought the &quot;dependency compatibility&quot; is for that, and hence my argument for dropping support for it in minor versions. &lt;/p&gt;</comment>
                            <comment id="14484729" author="ndimiduk" created="Wed, 8 Apr 2015 05:17:14 +0000"  >&lt;p&gt;Bumping this to blocker for 1.1.0 release.&lt;/p&gt;</comment>
                            <comment id="14513222" author="ndimiduk" created="Sun, 26 Apr 2015 19:40:40 +0000"  >&lt;p&gt;Per discussions &lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, I&apos;ve pushed this to branch-1.1+.&lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jinghe&quot; class=&quot;user-hover&quot; rel=&quot;jinghe&quot;&gt;Jerry He&lt;/a&gt;. Mind giving us a nice release note summarizing the reasoning here?&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;: &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/hbase-dev/201504.mbox/%3CCA+RK=_C6OJi=y_4XTMHJZ2YUSbMpD9tvVHNk_P9ZMi_CahU1jA@mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/hbase-dev/201504.mbox/%3CCA+RK=_C6OJi=y_4XTMHJZ2YUSbMpD9tvVHNk_P9ZMi_CahU1jA@mail.gmail.com%3E&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;: &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/hbase-dev/201504.mbox/%3cCA+RK=_CkTUfa3nWPsy2A0PZt07h=1stP72rcazBrw5U0JFdgXA@mail.gmail.com%3e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/hbase-dev/201504.mbox/%3cCA+RK=_CkTUfa3nWPsy2A0PZt07h=1stP72rcazBrw5U0JFdgXA@mail.gmail.com%3e&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14513274" author="hudson" created="Sun, 26 Apr 2015 21:24:02 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #24 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/24/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/24/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13149&quot; title=&quot;HBase MR is broken on Hadoop 2.5+ Yarn&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13149&quot;&gt;&lt;del&gt;HBASE-13149&lt;/del&gt;&lt;/a&gt; HBase MR is broken on Hadoop 2.5+ Yarn (Jerry He) (ndimiduk: rev 39b7a55580206a3b6f6ec5a3f39b1aca2ea50ac0)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14513294" author="hudson" created="Sun, 26 Apr 2015 22:07:11 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #431 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/431/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/431/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13149&quot; title=&quot;HBase MR is broken on Hadoop 2.5+ Yarn&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13149&quot;&gt;&lt;del&gt;HBASE-13149&lt;/del&gt;&lt;/a&gt; HBase MR is broken on Hadoop 2.5+ Yarn (Jerry He) (ndimiduk: rev 555679d8e607109368d0e03448c5fd2cf71b7bc0)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14513326" author="hudson" created="Sun, 26 Apr 2015 23:26:23 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6415 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6415/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6415/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13149&quot; title=&quot;HBase MR is broken on Hadoop 2.5+ Yarn&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13149&quot;&gt;&lt;del&gt;HBASE-13149&lt;/del&gt;&lt;/a&gt; HBase MR is broken on Hadoop 2.5+ Yarn (Jerry He) (ndimiduk: rev 9ae023fcab15d0e628bcb21c40f4043890a1feb8)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14515861" author="jinghe" created="Mon, 27 Apr 2015 23:47:02 +0000"  >&lt;p&gt;Thanks for resolving this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;!&lt;br/&gt;
The test failures in the various branches are not related:&lt;br/&gt;
On HBase-TRUNK, HBase-1.2 and HBase-1.1:  TestHBaseFsck, which has been reported by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13574&quot; title=&quot;Broken TestHBaseFsck in master with hadoop 2.6.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13574&quot;&gt;&lt;del&gt;HBASE-13574&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
On branch-1.1: TestSnapshotCloneIndependence, which I have seen occasional failure in the builds previously.&lt;/p&gt;

&lt;p&gt;There is no objection to this commit so far.  &lt;br/&gt;
I will put a ReleaseNotes to warn any possible incompatibility issue and workarounds.&lt;/p&gt;</comment>
                            <comment id="14517655" author="jinghe" created="Tue, 28 Apr 2015 18:54:55 +0000"  >&lt;p&gt;Added ReleaseNotes.  Hope it is not too much or too little.&lt;br/&gt;
Feel free to comment on it or update it.&lt;/p&gt;</comment>
                            <comment id="14517663" author="ndimiduk" created="Tue, 28 Apr 2015 18:59:41 +0000"  >&lt;p&gt;Really great note &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jinghe&quot; class=&quot;user-hover&quot; rel=&quot;jinghe&quot;&gt;Jerry He&lt;/a&gt;! Let me add a quick bit about 1.0 and also &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13517&quot; title=&quot;Publish a client artifact with shaded dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13517&quot;&gt;&lt;del&gt;HBASE-13517&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14519838" author="stack" created="Wed, 29 Apr 2015 17:56:15 +0000"  >&lt;p&gt;Excellent release note &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerryhe&quot; class=&quot;user-hover&quot; rel=&quot;jerryhe&quot;&gt;Jerry He&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14571066" author="ndimiduk" created="Wed, 3 Jun 2015 15:28:40 +0000"  >&lt;p&gt;Closing issues released in 1.1.0.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12702290" name="HBASE-13149-0.98.patch" size="487" author="jinghe" created="Tue, 3 Mar 2015 23:01:05 +0000"/>
                            <attachment id="12703591" name="HBASE-13149-master.patch" size="483" author="jinghe" created="Tue, 10 Mar 2015 04:44:04 +0000"/>
                            <attachment id="12702611" name="jackson-core-asl-compat_report.html" size="304756" author="jinghe" created="Wed, 4 Mar 2015 21:26:11 +0000"/>
                            <attachment id="12702612" name="jackson-jaxrs-compat_report.html" size="15430" author="jinghe" created="Wed, 4 Mar 2015 21:26:11 +0000"/>
                            <attachment id="12702613" name="jackson-mapper-asl-compat_report.html" size="3632381" author="jinghe" created="Wed, 4 Mar 2015 21:26:11 +0000"/>
                            <attachment id="12702614" name="jackson-xc-compat_report.html" size="91851" author="jinghe" created="Wed, 4 Mar 2015 21:26:11 +0000"/>
                            <attachment id="12703706" name="jackson_1.8_to_1.9_compat_report.html" size="3831868" author="busbey" created="Tue, 10 Mar 2015 18:24:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Mar 2015 23:05:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 28 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i26bfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>In HBase 1.1.0 and above we have upgraded the version of Jackson dependencies (jackson-core-asl, jackson-mapper-asl, jackson-jaxrs and jackson-xc) from 1.8.8 to 1.9.13. This is to follow the upgrade to Jackson 1.9.13 in Hadoop 2.5 and above which causes Jackson class incompatibility for HBase as reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13149&quot; title=&quot;HBase MR is broken on Hadoop 2.5+ Yarn&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13149&quot;&gt;&lt;strike&gt;HBASE-13149&lt;/strike&gt;&lt;/a&gt;.  Refer to &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-10104&quot; title=&quot;Update jackson to 1.9.13&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-10104&quot;&gt;&lt;strike&gt;HADOOP-10104&lt;/strike&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/YARN-2092&quot; title=&quot;Incompatible org.codehaus.jackson* dependencies when moving from 2.4.0 to 2.5.0-SNAPSHOT&quot; class=&quot;issue-link&quot; data-issue-key=&quot;YARN-2092&quot;&gt;&lt;strike&gt;YARN-2092&lt;/strike&gt;&lt;/a&gt; for additional information. Jackson1.9.13 is not completely backward compatible with the prior version 1.8.8 used in HBase. See the Compatibility reports attached in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13149&quot; title=&quot;HBase MR is broken on Hadoop 2.5+ Yarn&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13149&quot;&gt;&lt;strike&gt;HBASE-13149&lt;/strike&gt;&lt;/a&gt; and &lt;a href=&quot;http://svn.codehaus.org/jackson/trunk/release-notes/VERSION&quot;&gt;http://svn.codehaus.org/jackson/trunk/release-notes/VERSION&lt;/a&gt; for more information.&lt;br/&gt;
&lt;br/&gt;
This upgrade does not have direct impact on HBase users and HBase applications in most cases. In the rare case where your HBase application uses Jackson directly AND your application has compatibility issue with Jackson 1.9.13, you can do the following to mitigate the problem.&lt;br/&gt;
&lt;br/&gt;
1. If you are on Hadoop 2.5 or above, and your HBase application involves running Yarn jobs, we recommend you update your application to use Jackson 1.9.13. You may be able to explore classpath isolation options (e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-10893&quot; title=&quot;isolated classloader on the client side&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-10893&quot;&gt;&lt;strike&gt;HADOOP-10893&lt;/strike&gt;&lt;/a&gt;) or have your own classpath isolation strategy that works for you, but the general recommendation is that you upgrade to Jackson 1.9.13.&lt;br/&gt;
2. You may choose to continue using Jackson 1.8.8 and not to use Jackson 1.9.13 in your classpath.  You can also choose to replace the Jackson 1.9.13 jars in $HBASE_HOME/lib with 1.8.8 jars.  It can work for you in the following cases:&lt;br/&gt;
a) You are on a Hadoop version earlier than Hadoop 2.5,  or&lt;br/&gt;
b) You are on Hadoop 2.5 or above, but your HBase application does not involve running Yarn jobs.&lt;br/&gt;
3. You may experiment with further isolation using the shaded jars introduced with 1.1.0 via &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13517&quot; title=&quot;Publish a client artifact with shaded dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13517&quot;&gt;&lt;strike&gt;HBASE-13517&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
Note that it may not be tested or guaranteed that using Jackson 1.8.8 in $HBASE_HOME/lib will work in future HBase releases.&lt;br/&gt;
It is recommended that your HBase application matches the Jackson version provided in HBase.&lt;br/&gt;
&lt;br/&gt;
In HBase 0.98.x and HBase 1.0.x, we have NOT upgraded the version of Jackson dependencies. If you are on Hadoop 2.5 or above, and your HBase application involves running Yarn jobs, you may encounter Jackson class incomparability issue, as reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13149&quot; title=&quot;HBase MR is broken on Hadoop 2.5+ Yarn&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13149&quot;&gt;&lt;strike&gt;HBASE-13149&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
You can do the following to mitigate the problem:&lt;br/&gt;
1. Use &amp;#39;hadoop jar&amp;#39; command to run your HBase jobs.&lt;br/&gt;
2. Explore classpath isolation options (e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-10893&quot; title=&quot;isolated classloader on the client side&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-10893&quot;&gt;&lt;strike&gt;HADOOP-10893&lt;/strike&gt;&lt;/a&gt;) or have your own classpath isolation strategy that works for you.&lt;br/&gt;
3. You can also choose to replace the Jackson 1.8.8 jars in $HBASE_HOME/lib with 1.9.13 jars from your Hadoop lib directory. We have tested HBase 0.98 with Jackson 1.9.13.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>