<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:57:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1969/HBASE-1969.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1969] HBASE-1626 does not work as advertised due to lack of &quot;instanceof&quot; check in MR framework</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1969</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The issue that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1626&quot; title=&quot;Allow emitting Deletes out of new TableReducer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1626&quot;&gt;&lt;del&gt;HBASE-1626&lt;/del&gt;&lt;/a&gt; tried to fix is that we can hand in Put or Delete instances to the TableOutputFormat. So the explicit Put reference was changed to Writable in the process. But that does not work as expected:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;09/11/04 13:35:56 INFO mapred.JobClient: Task Id : attempt_200911031030_0004_m_000013_2, Status : FAILED
java.io.IOException: Type mismatch in value from map: expected org.apache.hadoop.io.Writable, recieved org.apache.hadoop.hbase.client.Put
        at org.apache.hadoop.mapred.MapTask$MapOutputBuffer.collect(MapTask.java:812)
        at org.apache.hadoop.mapred.MapTask$NewOutputCollector.write(MapTask.java:504)
        at org.apache.hadoop.mapreduce.TaskInputOutputContext.write(TaskInputOutputContext.java:80)
        at com.worldlingo.hadoop.mapred.RestoreTable$RestoreMapper.map(RestoreTable.java:140)
        at com.worldlingo.hadoop.mapred.RestoreTable$RestoreMapper.map(RestoreTable.java:69)
        at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:144)
        at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:583)
        at org.apache.hadoop.mapred.MapTask.run(MapTask.java:305)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The issue is that the MapReduce framework checks not polymorphic for the type using &quot;instanceof&quot; but with a direct class comparison. In MapTask.java you find this code&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; void collect(K key, V value, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; partition
                                     ) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      reporter.progress();
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (key.getClass() != keyClass) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Type mismatch in key from map: expected &quot;&lt;/span&gt;
                              + keyClass.getName() + &lt;span class=&quot;code-quote&quot;&gt;&quot;, recieved &quot;&lt;/span&gt;
                              + key.getClass().getName());
      }
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (value.getClass() != valClass) {
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Type mismatch in value from map: expected &quot;&lt;/span&gt;
                              + valClass.getName() + &lt;span class=&quot;code-quote&quot;&gt;&quot;, recieved &quot;&lt;/span&gt;
                              + value.getClass().getName());
      }
      ... &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So it does not work using a Writable as the MapOutputValueClass for the job and then hand in a Put or Delete! The test case TestMapReduce did not pick this up as it has this line in it&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      TableMapReduceUtil.initTableMapperJob(
        Bytes.toString(table.getTableName()), scan,
        ProcessContentsMapper.class, ImmutableBytesWritable.class, 
        Put.class, job);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which sets the value class to Put&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (outputValueClass != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) job.setMapOutputValueClass(outputValueClass);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To fix this (for now) one can set the class to Put the same way or explicitly in their code &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;job.setMapOutputValueClass(Put.class);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But the whole idea only seems feasable if a) the Hadoop class is amended to use &quot;instanceof&quot; instead (lodge Hadoop MapRed JIRA issue?) or b) we have a combined class that represent a Put &lt;b&gt;and&lt;/b&gt; a Delete - which seems somewhat wrong, but doable. It would only really find use in that context and would require the user to make use of it when calling context.write(). This is making things not easier to learn.&lt;/p&gt;

&lt;p&gt;Suggestions?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12440274">HBASE-1969</key>
            <summary>HBASE-1626 does not work as advertised due to lack of &quot;instanceof&quot; check in MR framework</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="larsgeorge">Lars George</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Nov 2009 11:20:14 +0000</created>
                <updated>Wed, 16 Jul 2014 22:07:06 +0000</updated>
                            <resolved>Wed, 16 Jul 2014 22:07:06 +0000</resolved>
                                    <version>0.20.1</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12780199" author="larsgeorge" created="Thu, 19 Nov 2009 18:56:41 +0000"  >&lt;p&gt;I thought about this. Could we create a class Change that is the base for Put and Delete and implements a Writable as well, which only carries the changes, or in other words KeyValue&apos;s with only as much additional meta data that is required to batch execute them on a table?&lt;/p&gt;

&lt;p&gt;Then we would have to either &lt;/p&gt;

&lt;p&gt;a.1) add a Put.getChange() / Delete.getChange() &lt;/p&gt;

&lt;p&gt;a.2) implement Change as the base class for Put and Delete&lt;/p&gt;

&lt;p&gt;a.3) have a Change change = new Change(put) so you do context.write(key, new Change(put));&lt;/p&gt;

&lt;p&gt;Then on the table we &lt;/p&gt;

&lt;p&gt;b.1) either recreate the base classes from the Change instance and apply them as is done right now&lt;/p&gt;

&lt;p&gt;b.2) add support for Change to the HTable class so it can batch it and with the KV types knows what to do.&lt;/p&gt;


&lt;p&gt;Alternatively we can add a Change() class only to the mapreduce package that takes a Put or Delete as the constructor so you also do&lt;/p&gt;

&lt;p&gt;context.write(key, new Change(put));&lt;/p&gt;

&lt;p&gt;and it transports the payload (a Put or Delete) to the TableOutputFormat where it is then converted back and applied. Seems the least intrusive alternative.&lt;/p&gt;

&lt;p&gt;What say you?&lt;/p&gt;
</comment>
                            <comment id="12782203" author="stack" created="Tue, 24 Nov 2009 22:18:51 +0000"  >&lt;p&gt;Lars, on the Change class (or Edit or Update, whatever we call it), yes, I think we need something like this not only for here but also for a combined multi-get/put/delete.  Ryan has also talked about being able (again) to do Delete and Puts on same row as part of same operation.  We&apos;d need something like this for that too.&lt;/p&gt;

&lt;p&gt;In old designs for hbase-880 (? is this the new API issue?), Delete and Put had same base class.   Get had different ancestory.&lt;/p&gt;

&lt;p&gt;We don&apos;t need to do Gets in this context... and maybe in the batch multi case, the multi-Get could remain a special case; i.e. you would be able to mix Deletes and Puts in a batch but not Gets?&lt;/p&gt;
</comment>
                            <comment id="12782333" author="larsgeorge" created="Wed, 25 Nov 2009 07:45:39 +0000"  >&lt;p&gt;I agree, I would probably call it &quot;Mutation&quot; (following terminology from the BigTable paper). Get is different and can be kept separate. With that we could kill many birds with one stone, fixing the MR issue here, be able to implement batch mutations and do atomic row mutations comprising Put and Delete operations. BTW, BigTable has that&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// Open the table
&lt;/span&gt;Table *T = OpenOrDie(&lt;span class=&quot;code-quote&quot;&gt;&quot;/bigtable/web/webtable&quot;&lt;/span&gt;);

&lt;span class=&quot;code-comment&quot;&gt;// Write a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; anchor and delete an old anchor
&lt;/span&gt;RowMutation r1(T, &lt;span class=&quot;code-quote&quot;&gt;&quot;com.cnn.www&quot;&lt;/span&gt;);
r1.Set(&lt;span class=&quot;code-quote&quot;&gt;&quot;anchor:www.c-span.org&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;CNN&quot;&lt;/span&gt;);
r1.Delete(&lt;span class=&quot;code-quote&quot;&gt;&quot;anchor:www.abc.com&quot;&lt;/span&gt;);
Operation op;
Apply(&amp;amp;op, &amp;amp;r1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="14064207" author="apurtell" created="Wed, 16 Jul 2014 22:07:06 +0000"  >&lt;p&gt;Reopen or file new issue if relevant for modern HBase versions&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12465912">HBASE-2648</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Nov 2009 22:18:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26086</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 22 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02dqf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11826</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>