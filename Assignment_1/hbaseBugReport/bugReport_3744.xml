<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:12:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3744/HBASE-3744.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3744] createTable blocks until all regions are out of transition</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3744</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3305&quot; title=&quot;Allow round-robin distribution for table created with multiple regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3305&quot;&gt;&lt;del&gt;HBASE-3305&lt;/del&gt;&lt;/a&gt;, the behavior of createTable was changed and introduced this bug: createTable now blocks until all regions have been assigned, since it uses BulkStartupAssigner. BulkStartupAssigner.waitUntilDone calls assignmentManager.waitUntilNoRegionsInTransition, which waits across all regions, not just the regions of the table that has just been created.&lt;/p&gt;

&lt;p&gt;We saw an issue where one table had a region which was unable to be opened, so it was stuck in RegionsInTransition permanently (every open was failing). Since this was the case, waitUntilDone would always block indefinitely even though the newly created table had been assigned.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12503553">HBASE-3744</key>
            <summary>createTable blocks until all regions are out of transition</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yuzhihong@gmail.com">Ted Yu</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Apr 2011 20:45:36 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:38 +0000</updated>
                            <resolved>Tue, 19 Apr 2011 03:53:20 +0000</resolved>
                                    <version>0.90.1</version>
                                    <fixVersion>0.90.3</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13016528" author="yuzhihong@gmail.com" created="Wed, 6 Apr 2011 20:56:13 +0000"  >&lt;p&gt;We should add new assignmentManager.waitUntilNoRegionsInTransition() where we specify the regions to wait for.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
waitUntilNoRegionsInTransition(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; timeout, List&amp;lt;HRegionInfo&amp;gt; regions)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13016543" author="tlipcon" created="Wed, 6 Apr 2011 21:22:13 +0000"  >&lt;p&gt;Actually, the fact that we wait at all is incorrect, since we&apos;re now ignoring the &quot;sync&quot; parameter to createTable. We should only wait if the user passes true.&lt;/p&gt;</comment>
                            <comment id="13016556" author="yuzhihong@gmail.com" created="Wed, 6 Apr 2011 21:43:18 +0000"  >&lt;p&gt;First attempt for this issue.&lt;br/&gt;
I don&apos;t see sync parameter for createTable() in HMasterInterface&lt;br/&gt;
TestAdmin passes.&lt;/p&gt;</comment>
                            <comment id="13016577" author="yuzhihong@gmail.com" created="Wed, 6 Apr 2011 22:13:14 +0000"  >&lt;p&gt;From IRC:&lt;br/&gt;
tlipcon_: it seems wrong that we use something called BukStartupAssigner in the first place&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2:54pm&amp;#93;&lt;/span&gt; tlipcon_: since this is not startup&lt;br/&gt;
...&lt;br/&gt;
tlipcon_: i think BulkStartupAssigner should be renamed&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;3:11pm&amp;#93;&lt;/span&gt; tlipcon_: and then either a parameter or a different subclass that doesn&apos;t wait&lt;/p&gt;</comment>
                            <comment id="13016583" author="yuzhihong@gmail.com" created="Wed, 6 Apr 2011 22:27:14 +0000"  >&lt;p&gt;Currently we have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class BulkStartupAssigner &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; BulkAssigner {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We also have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  class BulkDisabler &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; BulkAssigner {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If we rename BulkAssigner as AbstractBulkAssigner, we can rename BulkStartupAssigner as BulkAssigner&lt;/p&gt;</comment>
                            <comment id="13016692" author="stack" created="Thu, 7 Apr 2011 04:56:01 +0000"  >&lt;p&gt;BulkStartupAssigner was for bulk assigning on startup.  Seems like its been pulled around.  Could BulkStartupAssigner be renamed BulkOpener?  And BulkDisabler named BulkCloser?  I see need of a BulkOpen on regionserver crash (if its not being used already).&lt;/p&gt;</comment>
                            <comment id="13016698" author="yuzhihong@gmail.com" created="Thu, 7 Apr 2011 05:11:27 +0000"  >&lt;p&gt;BulkOpen isn&apos;t used.&lt;br/&gt;
We also have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  class BulkEnabler &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; BulkAssigner {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13017191" author="stack" created="Thu, 7 Apr 2011 22:49:08 +0000"  >&lt;p&gt;So, I just ran into a problem running rolling restart where users were creating tables against the cluster.  BulkStartupAssigner as originally written was rigged to fail out if anything went wrong during startup.  Since create table uses this now, if anything goes wrong during table create, then the fail will kill master.&lt;/p&gt;

&lt;p&gt;Need to fix this.&lt;/p&gt;</comment>
                            <comment id="13017192" author="stack" created="Thu, 7 Apr 2011 22:49:38 +0000"  >&lt;p&gt;Making this critical since it is in way of a smooth rolling restart.&lt;/p&gt;</comment>
                            <comment id="13017212" author="stack" created="Fri, 8 Apr 2011 00:10:14 +0000"  >&lt;p&gt;Here is the exception I ran into:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2011-04-07 14:48:26,788 INFO org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogWriter: Using syncFs -- HDFS-200
2011-04-07 14:48:26,789 INFO org.apache.hadoop.hbase.regionserver.wal.HLog: New hlog /hbase/jeichorn_test/710a5516e0de5da60ed7ce9466ac3b6f/.logs/hlog.1302212906763
2011-04-07 14:48:26,789 INFO org.apache.hadoop.hbase.regionserver.wal.HLog: Using getNumCurrentReplicas--HDFS-826
2011-04-07 14:48:26,789 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Instantiated jeichorn_test,,1302212906755.710a5516e0de5da60ed7ce9466ac3b6f.
2011-04-07 14:48:26,805 INFO org.apache.hadoop.hbase.regionserver.HRegion: Onlined jeichorn_test,,1302212906755.710a5516e0de5da60ed7ce9466ac3b6f.; next sequenceid=1
2011-04-07 14:48:26,807 INFO org.apache.hadoop.hbase.catalog.MetaEditor: Added region jeichorn_test,,1302212906755.710a5516e0de5da60ed7ce9466ac3b6f. to META
2011-04-07 14:48:26,807 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Closing jeichorn_test,,1302212906755.710a5516e0de5da60ed7ce9466ac3b6f.: disabling compactions &amp;amp; flushes
2011-04-07 14:48:26,807 DEBUG org.apache.hadoop.hbase.regionserver.HRegion: Updates disabled &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region jeichorn_test,,1302212906755.710a5516e0de5da60ed7ce9466ac3b6f.
2011-04-07 14:48:26,807 DEBUG org.apache.hadoop.hbase.regionserver.Store: closed &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;
2011-04-07 14:48:26,807 INFO org.apache.hadoop.hbase.regionserver.HRegion: Closed jeichorn_test,,1302212906755.710a5516e0de5da60ed7ce9466ac3b6f.
2011-04-07 14:48:26,807 DEBUG org.apache.hadoop.hbase.regionserver.wal.HLog: IPC Server handler 5 on 60000.logSyncer interrupted &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sync requests
2011-04-07 14:48:26,807 INFO org.apache.hadoop.hbase.regionserver.wal.HLog: IPC Server handler 5 on 60000.logSyncer exiting
2011-04-07 14:48:26,808 DEBUG org.apache.hadoop.hbase.regionserver.wal.HLog: closing hlog writer in hdfs:&lt;span class=&quot;code-comment&quot;&gt;//sv2borg169:9000/hbase/jeichorn_test/710a5516e0de5da60ed7ce9466ac3b6f/.logs
&lt;/span&gt;2011-04-07 14:48:26,816 DEBUG org.apache.hadoop.hbase.regionserver.wal.HLog: Moved 1 log files to /hbase/jeichorn_test/710a5516e0de5da60ed7ce9466ac3b6f/.oldlogs
2011-04-07 14:48:26,817 INFO org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 1 region(s) round-robin across 9 server(s)
2011-04-07 14:48:26,817 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 0 region(s) to sv2borg160,60020,1302129205464
2011-04-07 14:48:26,818 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 0 region(s) to sv2borg161,60020,1302129205463
2011-04-07 14:48:26,818 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning done &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sv2borg160,60020,1302129205464
2011-04-07 14:48:26,818 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 0 region(s) to sv2borg162,60020,1302129205472
2011-04-07 14:48:26,819 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 0 region(s) to sv2borg163,60020,1302129205458
2011-04-07 14:48:26,820 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning done &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sv2borg161,60020,1302129205463
2011-04-07 14:48:26,820 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning done &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sv2borg162,60020,1302129205472
2011-04-07 14:48:26,821 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 0 region(s) to sv2borg164,60020,1302129205783
2011-04-07 14:48:26,822 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning done &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sv2borg163,60020,1302129205458
2011-04-07 14:48:26,822 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 1 region(s) to sv2borg165,60020,1302129205494
2011-04-07 14:48:26,822 DEBUG org.apache.hadoop.hbase.zookeeper.ZKAssign: master:60000-0x2ec9c7920100ba Async create of unassigned node &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 710a5516e0de5da60ed7ce9466ac3b6f with OFFLINE state
2011-04-07 14:48:26,823 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning done &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sv2borg164,60020,1302129205783
2011-04-07 14:48:26,823 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 0 region(s) to sv2borg166,60020,1302212905151
2011-04-07 14:48:26,823 DEBUG org.apache.hadoop.hbase.master.ServerManager: New connection to sv2borg166,60020,1302212905151
2011-04-07 14:48:26,826 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 0 region(s) to sv2borg167,60020,1302129205469
2011-04-07 14:48:26,826 DEBUG org.apache.hadoop.hbase.master.AssignmentManager$CreateUnassignedAsyncCallback: rs=jeichorn_test,,1302212906755.710a5516e0de5da60ed7ce9466ac3b6f. state=OFFLINE, ts=1302212906822, server=sv2borg165,60020,1302129205494
2011-04-07 14:48:26,826 FATAL org.apache.hadoop.hbase.master.HMaster: Failed assignment of regions to serverName=sv2borg166,60020,1302212905151, load=(requests=0, regions=0, usedHeap=0, maxHeap=0); bulk assign FAILED
java.io.IOException: Call to /10.20.20.166:60020 failed on local exception: java.io.EOFException
       at org.apache.hadoop.hbase.ipc.HBaseClient.wrapException(HBaseClient.java:806)
       at org.apache.hadoop.hbase.ipc.HBaseClient.call(HBaseClient.java:775)
       at org.apache.hadoop.hbase.ipc.HBaseRPC$Invoker.invoke(HBaseRPC.java:257)
       at $Proxy6.openRegions(Unknown Source)
       at org.apache.hadoop.hbase.master.ServerManager.sendRegionOpen(ServerManager.java:566)
       at org.apache.hadoop.hbase.master.AssignmentManager.assign(AssignmentManager.java:783)
       at org.apache.hadoop.hbase.master.AssignmentManager$SingleServerBulkAssigner.run(AssignmentManager.java:1329)
       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
       at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
Caused by: java.io.EOFException
       at java.io.DataInputStream.readInt(DataInputStream.java:375)
       at org.apache.hadoop.hbase.ipc.HBaseClient$Connection.receiveResponse(HBaseClient.java:539)
       at org.apache.hadoop.hbase.ipc.HBaseClient$Connection.run(HBaseClient.java:477)
2011-04-07 14:48:26,827 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning done &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sv2borg167,60020,1302129205469
2011-04-07 14:48:26,826 DEBUG org.apache.hadoop.hbase.master.AssignmentManager$ExistsUnassignedAsyncCallback: rs=jeichorn_test,,1302212906755.710a5516e0de5da60ed7ce9466ac3b6f. state=OFFLINE, ts=1302212906822
2011-04-07 14:48:26,826 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning 0 region(s) to sv2borg168,60020,1302129205483
2011-04-07 14:48:26,829 INFO org.apache.hadoop.hbase.master.HMaster: Aborting
2011-04-07 14:48:26,829 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning done &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sv2borg168,60020,1302129205483
2011-04-07 14:48:26,829 INFO org.apache.hadoop.hbase.master.AssignmentManager: sv2borg165,60020,1302129205494 unassigned znodes=1 of total=1
2011-04-07 14:48:26,829 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Bulk assigning done &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sv2borg165,60020,1302129205494
2011-04-07 14:48:26,995 DEBUG org.apache.hadoop.hbase.master.HMaster: Stopping service threads
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13017217" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 00:25:21 +0000"  >&lt;p&gt;Looks like SingleServerBulkAssigner.run() should be wrapped in try/catch block. &lt;/p&gt;</comment>
                            <comment id="13017247" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 03:06:36 +0000"  >&lt;p&gt;Second attempt.&lt;br/&gt;
Added boolean parameter, sync, to BulkAssigner.bulkAssign() to indicate whether it should call waitUntilDone().&lt;br/&gt;
Also added try/catch block in SingleServerBulkAssigner.run()&lt;/p&gt;

&lt;p&gt;I will wait for consensus of renaming BulkAssigner related classes.&lt;/p&gt;</comment>
                            <comment id="13017248" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 03:09:08 +0000"  >&lt;p&gt;TestLoadIncrementalHFiles and TestAdmin pass.&lt;/p&gt;</comment>
                            <comment id="13017259" author="stack" created="Fri, 8 Apr 2011 03:44:55 +0000"  >&lt;p&gt;Thanks for looking into this one Ted.&lt;/p&gt;

&lt;p&gt;The issue I ran into today is that the default handler for exceptions thrown while running BulkAssign excecutors was this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; UncaughtExceptionHandler getUncaughtExceptionHandler() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; UncaughtExceptionHandler() {
      @Override
      &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void uncaughtException(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt; t, Throwable e) {
        &lt;span class=&quot;code-comment&quot;&gt;// Abort &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; exception of any kind.
&lt;/span&gt;        server.abort(&lt;span class=&quot;code-quote&quot;&gt;&quot;Uncaught exception in &quot;&lt;/span&gt; + t.getName(), e);
      }
    };
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On the one hand, the above was what we decided made sense doing bulk assign on startup.&lt;/p&gt;

&lt;p&gt;But now bulkassign has been pulled around to do bulkassigning elsewhere.  Thats fine.  Its just that we should change the above default in subclasses that are not startup bulk assigns; i.e. make a new subclass so we can override the above default (What will you call it?  BulkTableAssigner?).  We should do this instead of try/catch (try/catch defeats the above mechanism).  I think what we want in the case where bulkassign is used on table create is just logging of the exception.  The region will have be in the OFFLINE state waiting to be moved by the RS to OPENING but it won&apos;t happen in the case above, so the OFFLINE state will time out and we&apos;ll retry the open.  We should add a test to prove this is actually what  happens (I could have a go at that if you want &amp;#8211; just say).&lt;/p&gt;

&lt;p&gt;So, I think this bit incorrect:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void run() {
-      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.assignmentManager.assign(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionserver, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regions);
+      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.assignmentManager.assign(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionserver, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regions);
+      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
+        LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error assigning &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regions.size() + &lt;span class=&quot;code-quote&quot;&gt;&quot; regions &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt;
+            + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionserver.getHostnamePort(), e);
+      }
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (HRegionInfo region : regionList) regionSet.add(region);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... can you do this instead?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
regionSet.addAll(regionList);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I like the sync addition and the wait on table regions additions.&lt;/p&gt;

&lt;p&gt;Good stuff Ted.&lt;/p&gt;</comment>
                            <comment id="13017262" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 04:05:46 +0000"  >&lt;p&gt;Thanks for detailed review Stack.&lt;br/&gt;
Shall we call the new class BulkRegionAssigner ?&lt;br/&gt;
Then we can use a boolean parameter, startup, for BulkRegionAssigner ctor to represent BulkStartupAssigner ? This parameter would determine the behavior of getUncaughtExceptionHandler().&lt;/p&gt;</comment>
                            <comment id="13017269" author="stack" created="Fri, 8 Apr 2011 04:33:00 +0000"  >&lt;p&gt;I think BulkRegionAssigner is not such a good name.  BulkAssigner does Regions.  Thats what it does so adding Region to the name doesn&apos;t really help.&lt;/p&gt;

&lt;p&gt;And i don&apos;t think a boolean in the ctor the way to go either.  Leave BulkStartupAssigner as it is.   Then make a new class to use in your round robin table create.   I think assignUserRegions should be changed to be assignAllUserRegions and you should not use this in your createTable method.  Instead you should make a assignTableUserRegions or some such method and in there, not use BulkStartupAssigner, but your BulkTableAssigner instead.&lt;/p&gt;

&lt;p&gt;Something like that.&lt;/p&gt;</comment>
                            <comment id="13017270" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 04:38:30 +0000"  >&lt;p&gt;Looking closer at the exception Stack posted, I think the call chain was as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
assign()
AssignmentManager.SingleServerBulkAssigner.run()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Therefore master abortion wasn&apos;t from UncaughtExceptionHandler.&lt;/p&gt;</comment>
                            <comment id="13017275" author="stack" created="Fri, 8 Apr 2011 04:46:03 +0000"  >&lt;p&gt;Bulk assign on table create is needed because of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3503&quot; title=&quot;HBaseAdmin#createTable with 70k keys takes hours when it should only take minutes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3503&quot;&gt;&lt;del&gt;HBASE-3503&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13017279" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 04:51:40 +0000"  >&lt;p&gt;Since AssignmentManager.assign() is outside BulkStartupAssigner and SingleServerBulkAssigner. It needs a startup parameter so that decision of whether to abort master can be made.&lt;br/&gt;
So BulkStartupAssigner and BulkTableAssigner would pass startup parameter to SingleServerBulkAssigner.&lt;br/&gt;
The only difference between BulkStartupAssigner and BulkTableAssigner is in their getUncaughtExceptionHandler() method. Meaning, we can write this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class BulkTableAssigner &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; BulkStartupAssigner {
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; UncaughtExceptionHandler getUncaughtExceptionHandler() {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; UncaughtExceptionHandler() {
        @Override
        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void uncaughtException(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt; t, Throwable e) {
          LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error assigning regions in &quot;&lt;/span&gt; + t.getName(), e);            
        }
      };
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13017283" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 04:57:25 +0000"  >&lt;p&gt;Currently assignAllUserRegions() calls assignUserRegions() for round-robin assignment.&lt;/p&gt;</comment>
                            <comment id="13017526" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 16:38:48 +0000"  >&lt;p&gt;Reverted BulkRegionAssigner.&lt;br/&gt;
I created BulkTableAssigner which doesn&apos;t use startup as parameter to ctor.&lt;/p&gt;</comment>
                            <comment id="13017665" author="stack" created="Fri, 8 Apr 2011 21:36:51 +0000"  >&lt;p&gt;Not much different from your patch Ted.  I separated bulk startup assign and general bulk assign.  In singleserverbulkassign, I let out IEs and Throwables... let the configured UncaughtException handler take care of it.  What you think?  Meantime I&apos;m testing.  Making a unit test is a bit tough.&lt;/p&gt;</comment>
                            <comment id="13017681" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 21:58:45 +0000"  >&lt;p&gt;TestAdmin and TestLoadIncrementalHFiles passed.&lt;br/&gt;
Version 3 is good.&lt;/p&gt;</comment>
                            <comment id="13017770" author="stack" created="Sat, 9 Apr 2011 00:04:02 +0000"  >&lt;p&gt;Ok.  I did some testing up on cluster creating tables and then bulk starting and killing a server during startup.  I looked at writing tests but its awkward killing a server just after table creation and during assign.  I&apos;m going to commit.&lt;/p&gt;</comment>
                            <comment id="13017800" author="stack" created="Sat, 9 Apr 2011 04:00:40 +0000"  >&lt;p&gt;Committed on TRUNK and Branch.  Thanks for patch Ted.&lt;/p&gt;</comment>
                            <comment id="13017925" author="stack" created="Sat, 9 Apr 2011 18:01:53 +0000"  >&lt;p&gt;Here is a little addendum to how timeouts are calculated.  I ran into an issue timing where timeout went to zero if we were doing &apos;preserve original location&apos; doing bulk load.&lt;/p&gt;</comment>
                            <comment id="13017926" author="stack" created="Sat, 9 Apr 2011 18:03:29 +0000"  >&lt;p&gt;Here&apos;s a script I used testing.  It will create N tables of M regions.  You pass N and M on the command line.  Good for testing what happens when a regionserver goes down in middle of a bulk assign of new table regions.&lt;/p&gt;</comment>
                            <comment id="13017932" author="stack" created="Sat, 9 Apr 2011 18:45:05 +0000"  >&lt;p&gt;This version adds deleting of the added tables.&lt;/p&gt;</comment>
                            <comment id="13017937" author="stack" created="Sat, 9 Apr 2011 19:06:48 +0000"  >&lt;p&gt;Bug fix in script.&lt;/p&gt;</comment>
                            <comment id="13018772" author="hudson" created="Tue, 12 Apr 2011 09:28:54 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1846 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/HBase-TRUNK/1846/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/HBase-TRUNK/1846/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="13021397" author="stack" created="Tue, 19 Apr 2011 03:53:20 +0000"  >&lt;p&gt;Committed branch and trunk.  Thanks for original patch Ted.  Its been running in our production &amp;gt; a week and we ran over this issue multiple times doing rolling restarts but master stayed up so seems to be basically working.&lt;/p&gt;</comment>
                            <comment id="13025605" author="yuzhihong@gmail.com" created="Wed, 27 Apr 2011 04:52:10 +0000"  >&lt;p&gt;This patch simulates the semantics of waiting for region assignment.&lt;/p&gt;</comment>
                            <comment id="13025887" author="jdcryans" created="Wed, 27 Apr 2011 16:46:54 +0000"  >&lt;p&gt;What&apos;s the purpose of the patch Ted? It should have been included in the previous commit? If so, please open a new jira.&lt;/p&gt;</comment>
                            <comment id="13025896" author="yuzhihong@gmail.com" created="Wed, 27 Apr 2011 16:56:31 +0000"  >&lt;p&gt;This JIRA changed the behavior of table creation to not wait for its regions to be fully assigned. This change caused TestAdmin failure.&lt;br/&gt;
The addendum adds waiting in verifyRoundRobinDistribution().&lt;/p&gt;</comment>
                            <comment id="13025906" author="jdcryans" created="Wed, 27 Apr 2011 17:26:25 +0000"  >&lt;p&gt;Ah I see (reading the thread now on the ML), in the future it might be better to reference such discussions when attaching a patch.&lt;/p&gt;

&lt;p&gt;Regarding the code itself, would it be better to add a new method to the master and call it from the test (and pass the HRIs) instead of copying the code?&lt;/p&gt;</comment>
                            <comment id="13025916" author="yuzhihong@gmail.com" created="Wed, 27 Apr 2011 17:42:05 +0000"  >&lt;p&gt;Separating step 6 of CreateTable() into a new method is good idea.&lt;br/&gt;
Shall we expose the new method through MasterServices ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    MasterServices services = TEST_UTIL.getMiniHBaseCluster().getMaster();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13025947" author="jdcryans" created="Wed, 27 Apr 2011 18:47:59 +0000"  >&lt;p&gt;It seems it could be useful.&lt;/p&gt;</comment>
                            <comment id="13030114" author="stack" created="Fri, 6 May 2011 20:03:28 +0000"  >&lt;p&gt;I applied the addendum w/ some massaging, no refactoring.  Thanks for the patch Ted.  Lets see if it cures the failing TestAdmin in 0.90.&lt;/p&gt;</comment>
                            <comment id="15017578" author="lars_francke" created="Fri, 20 Nov 2015 12:43:38 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12477493" name="3744-addendum-for-TestAdmin.patch" size="1932" author="yuzhihong@gmail.com" created="Wed, 27 Apr 2011 10:17:50 +0000"/>
                            <attachment id="12475898" name="3744-addendum.txt" size="1658" author="stack" created="Sat, 9 Apr 2011 18:01:52 +0000"/>
                            <attachment id="12475821" name="3744-v2.txt" size="11769" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 16:38:48 +0000"/>
                            <attachment id="12475844" name="3744-v3.txt" size="16662" author="stack" created="Fri, 8 Apr 2011 21:36:51 +0000"/>
                            <attachment id="12475776" name="3744.txt" size="7321" author="yuzhihong@gmail.com" created="Fri, 8 Apr 2011 03:06:35 +0000"/>
                            <attachment id="12475903" name="create_big_tables.rb" size="4209" author="stack" created="Sat, 9 Apr 2011 19:06:48 +0000"/>
                            <attachment id="12475900" name="create_big_tables.rb" size="4209" author="stack" created="Sat, 9 Apr 2011 18:45:05 +0000"/>
                            <attachment id="12475899" name="create_big_tables.rb" size="3517" author="stack" created="Sat, 9 Apr 2011 18:03:29 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Apr 2011 20:56:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27006</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hnnz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101096</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>