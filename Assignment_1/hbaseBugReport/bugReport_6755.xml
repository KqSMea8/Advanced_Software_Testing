<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:39:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6755/HBASE-6755.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6755] HRegion.internalObtainRowLock uses unecessary AtomicInteger</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6755</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I was looking at HBase&apos;s implementation of locks and saw that is unnecessarily uses an AtomicInteger to obtain a unique lockid.&lt;br/&gt;
The observation is that we only need a unique one and don&apos;t care if we happen to skip one.&lt;br/&gt;
In a very unscientific test I saw the %system CPU reduced when the AtomicInteger is avoided.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12606989">HBASE-6755</key>
            <summary>HRegion.internalObtainRowLock uses unecessary AtomicInteger</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Sep 2012 03:34:15 +0000</created>
                <updated>Tue, 7 May 2013 18:46:03 +0000</updated>
                            <resolved>Tue, 7 May 2013 18:46:03 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13452688" author="lhofhansl" created="Tue, 11 Sep 2012 03:35:26 +0000"  >&lt;p&gt;Here&apos;s a simple patch.&lt;br/&gt;
I ran TestAtomicOperation with it a few times.&lt;br/&gt;
Please have a look.&lt;/p&gt;</comment>
                            <comment id="13452695" author="stack" created="Tue, 11 Sep 2012 03:52:14 +0000"  >&lt;p&gt;That random stuff jumping elsewhere looks kinda dodgy?  I wonder why we can&apos;t go around in the loop again?  The variable id name should change?  Its not a generator?  Should the data member be volatile so the increment is seen immediately (I suppose we&apos;re almost back at an AtomicInteger cost then?&lt;/p&gt;

&lt;p&gt;Sorry for raining on simple change...&lt;/p&gt;</comment>
                            <comment id="13452707" author="hadoopqa" created="Tue, 11 Sep 2012 04:38:24 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12544584/6755-0.96.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12544584/6755-0.96.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2845//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2845//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2845//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2845//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13452731" author="lhofhansl" created="Tue, 11 Sep 2012 05:41:56 +0000"  >&lt;p&gt;That &quot;random stuff&quot; looks dodgy, but I was going to leave that for another day.&lt;/p&gt;

&lt;p&gt;Hmm. You make a good point about the variable needing to be volatile. Does it?&lt;br/&gt;
If it was not, threads running on different cores would not &quot;see&quot; the increment immediately, hence increment to the same value and then invoke the &quot;random stuff&quot;, because the next number was used already. Random itself is using AtomicLong, so avoiding it is also important.&lt;/p&gt;

&lt;p&gt;The question is how likely is this going to happen and it is worth the volatile or AtomicInt to guard against it. Since this is on the path of every write to HBase it is worth thinking about.&lt;/p&gt;

&lt;p&gt;The change might be simple, but the discussion is not. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13452749" author="lhofhansl" created="Tue, 11 Sep 2012 06:01:02 +0000"  >&lt;p&gt;Moving to 0.94.3, since it&apos;s not as slam dunk as I thought.&lt;/p&gt;</comment>
                            <comment id="13453732" author="lhofhansl" created="Wed, 12 Sep 2012 05:46:08 +0000"  >&lt;p&gt;Just did a quick test (on my poor 2 core laptop): Ran PE with RandomWrite with 50 Threads (nomapred, ROWS=5000). I added logging to the case where we have to reset the &quot;idGenerator&quot; from the random number. With this patch I find that it happened 10 times, without the patch it did not happen at all. With more cores this effect will be more pronounced - I&apos;ll try tomorrow on my work desktop with 12 HW threads (6 cores, 2 hyper threads per core).&lt;/p&gt;</comment>
                            <comment id="13453749" author="lhofhansl" created="Wed, 12 Sep 2012 06:01:22 +0000"  >&lt;p&gt;Interestingly, if I just try to increment the idGenerator twice the other core never sees a stale value. This is probably due to ConcurrentHashMap taking out a memory barrier anyway... Which incidentally makes this whole issue a moot point.&lt;br/&gt;
I&apos;ll play a bit more tomorrow and probably close as &quot;Invalid&quot;.&lt;/p&gt;</comment>
                            <comment id="13453887" author="nkeywal" created="Wed, 12 Sep 2012 10:20:15 +0000"  >&lt;p&gt;You can save an increment (Wow!), and may be some synchronisation issues with this (not tested).&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;       // loop until we generate an unused lock id
       while (true) {
        Integer lockId = ++lockIdGenerator;
         HashedBytes existingRowKey = lockIds.putIfAbsent(lockId, rowKey);
         if (existingRowKey == null) {
           return lockId;
         } else {
           // lockId already in use, jump generator to a new spot
	   do {
		 lockIdGenerator = rand.nextInt();
           }while (lockIds.putIfAbsent(lockIdGenerator , rowKey) == null);
           return lockIdGenerator ;
         }
       }
     } finally {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;But if this piece of code is important for the performances, it may need some rethinking imho, with stuff around native structures (int vs. Integer, allocation per block, pre allocation (may be in a different thread)...&lt;/p&gt;

&lt;p&gt;Is it that important?&lt;/p&gt;</comment>
                            <comment id="13454540" author="lhofhansl" created="Thu, 13 Sep 2012 01:19:11 +0000"  >&lt;p&gt;In that case I&apos;d be afraid that we&apos;d incur more actions on the concurrent map and the random number generator, which actually would be slower.&lt;/p&gt;</comment>
                            <comment id="13466106" author="stack" created="Sat, 29 Sep 2012 04:16:27 +0000"  >&lt;p&gt;Moving out of 0.96.  Open questions still.&lt;/p&gt;</comment>
                            <comment id="13475915" author="lhofhansl" created="Sun, 14 Oct 2012 22:34:32 +0000"  >&lt;p&gt;Removing from 0.94.3. Will probably just mark as &quot;Won&apos;t fix&quot;&lt;/p&gt;</comment>
                            <comment id="13651167" author="lhofhansl" created="Tue, 7 May 2013 18:46:03 +0000"  >&lt;p&gt;Closing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12544584" name="6755-0.96.txt" size="1349" author="lhofhansl" created="Tue, 11 Sep 2012 03:35:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Sep 2012 03:52:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>239581</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 32 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00rdz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2369</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>