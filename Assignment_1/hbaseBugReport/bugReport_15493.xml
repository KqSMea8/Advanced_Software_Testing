<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:04:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15493/HBASE-15493.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15493] Default ArrayList size may not be optimal for Mutation</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15493</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  List&amp;lt;Cell&amp;gt; getCellList(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] family) {
    List&amp;lt;Cell&amp;gt; list = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.familyMap.get(family);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (list == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      list = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Cell&amp;gt;();
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; list;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Creates list of size 10, this is up to 80 bytes per column family in mutation object. &lt;/p&gt;

&lt;p&gt;Suggested:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  List&amp;lt;Cell&amp;gt; getCellList(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] family) {
    List&amp;lt;Cell&amp;gt; list = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.familyMap.get(family);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (list == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      list = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Cell&amp;gt;(CELL_LIST_INITIAL_CAPACITY);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; list;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CELL_LIST_INITIAL_CAPACITY = 2 in the patch, this is debatable. For mutation where every CF has 1 cell, this gives decent reduction in memory allocation rate in both client and server during write workload. ~2%, not a big number, but as I said, already, memory optimization will include many small steps.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12951935">HBASE-15493</key>
            <summary>Default ArrayList size may not be optimal for Mutation</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="vrodionov">Vladimir Rodionov</assignee>
                                    <reporter username="vrodionov">Vladimir Rodionov</reporter>
                        <labels>
                    </labels>
                <created>Mon, 21 Mar 2016 05:05:15 +0000</created>
                <updated>Thu, 24 Mar 2016 04:49:22 +0000</updated>
                                            <version>2.0.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="15203725" author="vrodionov" created="Mon, 21 Mar 2016 05:07:55 +0000"  >&lt;p&gt;Patch v1 includes as well optimizations in Delete and Append classes.&lt;/p&gt;</comment>
                            <comment id="15203727" author="ram_krish" created="Mon, 21 Mar 2016 05:12:10 +0000"  >&lt;p&gt;I have been trying to make this more accurate atleast in the server side. In my case with &amp;gt;10 columns per cell the arraylist expansion was creating lot of garbage. But not sure if 2 is going to really help there. I know you are trying to take a middle man approach here but still. But getting the most exact estimate is much more complex in these cases. &lt;/p&gt;</comment>
                            <comment id="15203897" author="mantonov" created="Mon, 21 Mar 2016 08:36:55 +0000"  >&lt;p&gt;Is it supposed to go in branch-1 as well? Any memory/performance optimization would be great, if possible/easy to port.&lt;/p&gt;</comment>
                            <comment id="15204796" author="vrodionov" created="Mon, 21 Mar 2016 18:16:53 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Is it supposed to go in branch-1 as well?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;All memory optimizations will be back - ported to 1.1 + . &lt;/p&gt;</comment>
                            <comment id="15204801" author="vrodionov" created="Mon, 21 Mar 2016 18:19:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have been trying to make this more accurate atleast in the server side. In my case with &amp;gt;10 columns per cell the arraylist expansion was creating lot of garbage. But not sure if 2 is going to really help there. I know you are trying to take a middle man approach here but still. But getting the most exact estimate is much more complex in these cases.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;new API method in Mutation? setMaxCellPerCF?&lt;/p&gt;</comment>
                            <comment id="15204815" author="mantonov" created="Mon, 21 Mar 2016 18:26:43 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; thanks!&lt;/p&gt;</comment>
                            <comment id="15204855" author="stack" created="Mon, 21 Mar 2016 18:40:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;new API method in Mutation? setMaxCellPerCF?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As a hint? Nah. No one would use it. Probably not discernible benefit to using it.&lt;/p&gt;

&lt;p&gt;Can&apos;t we do a general histogram that watches allocations for a while and then arrives at a size that will satisfy most requests rather than try at an explicit size that will work for some cases but mess up others?&lt;/p&gt;

&lt;p&gt;Thanks for doing this digging &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; How you doing your measuring?&lt;/p&gt;</comment>
                            <comment id="15204911" author="vrodionov" created="Mon, 21 Mar 2016 19:06:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As a hint? Nah. No one would use it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I would prefer hint, do not want to spend a lot of time on this easy fix. We are going to use it in a time-series applications, where one cell per mutation is a norm. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How you doing your measuring?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Java Mission Control + Flight Recorder, then I analyse Memory Allocation by object type.&lt;/p&gt;</comment>
                            <comment id="15205757" author="stack" created="Tue, 22 Mar 2016 04:17:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;... do not want to spend a lot of time on this easy fix&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t either. The &apos;fix&apos; is for timeseries usecase at expense of others; e.g. loadings with many columns.. now they do an extra few resizings... they slow down. What about above suggestion of histogram of sizings... over a period of time. We need it all over the hbase codebase. There is a related attempt in the BoundedByteBufferPool.&lt;/p&gt;</comment>
                            <comment id="15205765" author="ram_krish" created="Tue, 22 Mar 2016 04:23:42 +0000"  >&lt;p&gt;I would say this could be of lower priority now. But the other JIRAs &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15509&quot; title=&quot;Avoid copy of block data in HFileBlock$Writer.finishBlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15509&quot;&gt;HBASE-15509&lt;/a&gt; (during flushes and compactions) and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15506&quot; title=&quot;FSDataOutputStream.write() allocates new byte buffer on each operation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15506&quot;&gt;HBASE-15506&lt;/a&gt; may be real winners for us. &lt;br/&gt;
Anoop&apos;s &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15180&quot; title=&quot;Reduce garbage created while reading Cells from Codec Decoder&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15180&quot;&gt;&lt;del&gt;HBASE-15180&lt;/del&gt;&lt;/a&gt; was a big gainer for us. &lt;/p&gt;</comment>
                            <comment id="15205993" author="hadoopqa" created="Tue, 22 Mar 2016 08:22:06 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch doesn&apos;t appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 11m 50s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 6s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 4s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_79 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 4m 57s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 31s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 20s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 24s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 58s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_79 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 22s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 11s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_79 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 11s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 6m 4s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-client: patch generated 1 new + 24 unchanged - 0 fixed = 25 total (was 24) &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 39s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch has 5 line(s) that end in whitespace. Use git apply --whitespace=fix. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 94m 54s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 3s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 50s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_79 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 1m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-client in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 11s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 136m 50s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.client.TestOperation &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12794699/HBASE-15493-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12794699/HBASE-15493-v2.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15493&quot; title=&quot;Default ArrayList size may not be optimal for Mutation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15493&quot;&gt;HBASE-15493&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux asf911.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / 797562e &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_79 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /usr/local/jenkins/java/jdk1.7.0_79:1.7.0_79 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; checkstyle &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/artifact/patchprocess/diff-checkstyle-hbase-client.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/artifact/patchprocess/diff-checkstyle-hbase-client.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; whitespace &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/artifact/patchprocess/whitespace-eol.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/artifact/patchprocess/whitespace-eol.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/artifact/patchprocess/patch-unit-hbase-client.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/artifact/patchprocess/patch-unit-hbase-client.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/artifact/patchprocess/patch-unit-hbase-client.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/artifact/patchprocess/patch-unit-hbase-client.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-client U: hbase-client &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1130/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.2.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15206827" author="ram_krish" created="Tue, 22 Mar 2016 17:24:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;setMaxCellsPerColumnFamily&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Adding an API in Public interface was the concern I had. But this is a straight forward way. For user it is of no use and he will not be sure what it does for him.&lt;/p&gt;</comment>
                            <comment id="15206874" author="stack" created="Tue, 22 Mar 2016 17:47:40 +0000"  >&lt;p&gt;Agreed user will not know what to do w/ this new API  &quot;Save an unknown and unmeasurable amount of resources serverside by setting this value... &quot; This is not the sort of stuff we should be bothering our users with. Before you know, a mythology will build up that playing with this setting is the difference between cluster life and death. Lets just do the work serverside for the user and not bother them with such minuitae.&lt;/p&gt;</comment>
                            <comment id="15206989" author="vrodionov" created="Tue, 22 Mar 2016 18:34:07 +0000"  >&lt;p&gt;Frankly speaking, I do not care about clueless users. Users I care about MUST be able to read HBase source code and understand importance of hinting and tweaking. This is just one of many small improvements which will follow soon. If I will discard any small improvement just because it is not substantial enough and I can&apos;t explain to regular user why is it for, I will never reach my goal (purge all garbage in write and read path). &lt;/p&gt;</comment>
                            <comment id="15207063" author="stack" created="Tue, 22 Mar 2016 19:08:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;Frankly speaking, I do not care about clueless users. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;1% -er!&lt;/p&gt;

&lt;p&gt;You set up a false dichotomy. Even the clueful are ovewhelmed by choice when using hbase. We do all a service &amp;#8211; the clueful and the clueless &amp;#8211; by having hbase make the right choice rather than put the burden on the operator. See suggestions above on sizing being done based off runtime signal.&lt;/p&gt;</comment>
                            <comment id="15207084" author="vrodionov" created="Tue, 22 Mar 2016 19:20:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, I have spent many hours, during last several days, analyzing memory allocation and hot spots we have in  a write path. Low hanging fruits, such as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15479&quot; title=&quot;No more garbage or beware of autoboxing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15479&quot;&gt;&lt;del&gt;HBASE-15479&lt;/del&gt;&lt;/a&gt; are now gone. Now, to reduce memory allocation by 10% we need to fix 3-5, may be more hot spots. If I will be doing this in a &quot;right&quot; way - adding all complexity to smart HBase, by allowing clueless users to get all benefits for free - I will be spending several days per tickets. I do not have that much time. That is why I decided to delegate all the tuning to advanced users. AutoSmart feature is complex and not worth spending time imo.&lt;/p&gt;

&lt;p&gt;Spoiler, &lt;/p&gt;

&lt;p&gt;The only other low hanging fruit remained is protobuf SerDe. &lt;/p&gt;
</comment>
                            <comment id="15207560" author="stack" created="Tue, 22 Mar 2016 23:53:28 +0000"  >&lt;p&gt;Thanks for the work. Pity. Was thinking we could do better than just make the 1% happy.&lt;/p&gt;</comment>
                            <comment id="15207793" author="anoop.hbase" created="Wed, 23 Mar 2016 02:53:11 +0000"  >&lt;p&gt;Otherwise you can think of adding an API to Put which takes a List of Cells?&lt;br/&gt;
We have exposed APIs in CellUtil to create cell objects based on row, cf, q, value, ts etc.&lt;br/&gt;
We already have an API  Put#add(Cell kv)&lt;br/&gt;
May be we should add some thing like  add(byte[] cf, List&amp;lt;Cell&amp;gt; cells)?   Directly take this list into the familyMap with out copy/clone.  So may be we should name it addImmutable?  We already have APIs of this type in Put.   Ya when user uses it, we knows that HBase will reuse his List and he should not pollute it. When user creates Put and Cells he knows the size of the List clearly.&lt;br/&gt;
Rather than adding a size related new API, this may be working out?  Ya may be few extra LOC for the user app.&lt;br/&gt;
Just sharing my thought after seeing this jira&lt;/p&gt;
</comment>
                            <comment id="15209291" author="stack" created="Wed, 23 Mar 2016 22:20:38 +0000"  >&lt;p&gt;I have changed my mind after getting off the phone call with a smart operator, totally confused by the profusion off configs and options badly confused by our poor namings (&quot;Is the queue size XYZ doing the same thing as the queue size ABC?&quot;). Now I no longer think there are 1% who are &quot;advanced&quot; able to tune by reading code and doc. I do not think there any. Lets do it &apos;right&apos; or not bother.&lt;/p&gt;</comment>
                            <comment id="15209295" author="stack" created="Wed, 23 Mar 2016 22:22:21 +0000"  >&lt;p&gt;This would be preferable. Client could pay the price of the calculation and volunteer the info to the serverside. Instantiating new object, could use this hint if present.&lt;/p&gt;</comment>
                            <comment id="15209385" author="vrodionov" created="Wed, 23 Mar 2016 23:11:44 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Lets do it &apos;right&apos; or not bother.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Brilliant words, somebody should have said that back in 2006-2007 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;</comment>
                            <comment id="15209717" author="ram_krish" created="Thu, 24 Mar 2016 04:19:36 +0000"  >&lt;p&gt;IMHO this operation of finding the exact size is useful in the SErver side too. Because with large cells per mutations I could see this list#add() taking more time. I thought of creating some thing like ServerMutation extending Mutations (and it is private) but the problem is that it becomes complicated when we have Cells backed by Offheap buffer.&lt;br/&gt;
May be this new API we can add only on server side something like that? I have not worked on end to end to take that patch to completion.&lt;/p&gt;</comment>
                            <comment id="15209725" author="vrodionov" created="Thu, 24 Mar 2016 04:31:05 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Maybe we should add something like add(byte[] cf, List&amp;lt;Cell&amp;gt; cells)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How about addImmutable(List&amp;lt;Cell&amp;gt; cells)?&lt;/p&gt;

&lt;p&gt;It is allowed to mix different column families, but if this method is called &lt;b&gt;only once&lt;/b&gt; (and it is supposed to be called once) we always will have right sizes in family map?&lt;/p&gt;</comment>
                            <comment id="15209746" author="anoop.hbase" created="Thu, 24 Mar 2016 04:49:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;  When Mutation comes to server, we know the total #cells in that. Not per family count. We dont PB that info. And may be we should not also?&lt;br/&gt;
Ya it will be best if we can have a new kind of Mutation only for server. At server we have 2 advs.  We can know the #cells in a mutation. (At least total)  and all the cells are in order.  So we dont need a TreeMap at least.  If u see a Mutation , the over head heap size is really big.   But we expose Mutation in our CPs and so FamilyMap which is Map..   We can discuss more on how to reduce these..  For a major version we may be able to break even some things in CP side.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;&lt;br/&gt;
When I say addImmutable(byte[] fam, List&amp;lt;Cell&amp;gt;)  am also thinking user should call it only once. &lt;br/&gt;
So if all cells are passed, we may have to split them into family map and again create new Lists.  My idea was to reuse the List created by user.  And ya we say it should be used only when user is read to give the List as immutable.&lt;br/&gt;
So they may be to do like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
List&amp;lt;Cell&amp;gt; f1Cells = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;(3);
f1Cells.add( CellUtil.createCell(...));
f1Cells.add( CellUtil.createCell(...));
f1Cells.add( CellUtil.createCell(...));&lt;span class=&quot;code-comment&quot;&gt;//  3 cells in f1
&lt;/span&gt;put.addImmutable (f1,  f1Cells);

List&amp;lt;Cell&amp;gt; f2Cells = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;(2);
f2Cells.add( CellUtil.createCell(...));
f2Cells.add( CellUtil.createCell(...)); &lt;span class=&quot;code-comment&quot;&gt;// 2 cells in f2
&lt;/span&gt;put.addImmutable (f2,  f2Cells);

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If it is one API with taking all family cells,they can reduce 2 lines.   Within mutation we need to create List for each of the cf and we need to use size= 5?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12951819">HBASE-15492</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12794468" name="HBASE-15493-v1.patch" size="3989" author="vrodionov" created="Mon, 21 Mar 2016 05:07:55 +0000"/>
                            <attachment id="12794699" name="HBASE-15493-v2.patch" size="6371" author="vrodionov" created="Tue, 22 Mar 2016 05:16:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 21 Mar 2016 05:12:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            38 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2uxuf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>