<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:55:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14738/HBASE-14738.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14738] Backport HBASE-11927 (Use Native Hadoop Library for HFile checksum) to 0.98</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14738</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Profiling 0.98.15 I see 20-30% of CPU time spent in Hadoop&apos;s PureJavaCrc32. Not surprising given previous results described on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11927&quot; title=&quot;Use Native Hadoop Library for HFile checksum (And flip default from CRC32 to CRC32C)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11927&quot;&gt;&lt;del&gt;HBASE-11927&lt;/del&gt;&lt;/a&gt;. Backport.&lt;/p&gt;

&lt;p&gt;There are two issues with the backport:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;The patch on 11927 changes the default CRC type from CRC32 to CRC32C. Although the changes are backwards compatible -files with either CRC type will be handled correctly in a transparent manner - we should probably leave the default alone in 0.98 and advise users on a site configuration change to use CRC32C if desired, for potential hardware acceleration.&lt;/li&gt;
	&lt;li&gt;Need a shim for differences between Hadoop&apos;s DataChecksum type.&lt;/li&gt;
&lt;/ol&gt;
</description>
                <environment></environment>
        <key id="12909513">HBASE-14738</key>
            <summary>Backport HBASE-11927 (Use Native Hadoop Library for HFile checksum) to 0.98</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Sun, 1 Nov 2015 20:52:04 +0000</created>
                <updated>Wed, 13 Jul 2016 07:19:37 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14984882" author="apurtell" created="Mon, 2 Nov 2015 08:42:14 +0000"  >&lt;p&gt;Attaching first cut. Differences from original commit:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Uses CompatibilityFactory and ServiceLoader to load hadoop version specific checksum implementations.&lt;/li&gt;
	&lt;li&gt;Moved old checksum code out to the hadoop 1 compat module. Borrowed Hadoop code to implement APIs in the shape of DataChecksum APIs.&lt;/li&gt;
	&lt;li&gt;Hadoop 2 compat module checksum implementation uses DataChecksum directly. Gets the benefits of acceleration where support is available.&lt;/li&gt;
	&lt;li&gt;Caches checksum object instances to avoid CompatibilityFactory and ServiceLoader overheads. (Noticed this when reprofiling after changes.) Cache will drop references to checksum objects 10 minutes after last use.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Profiled loading with YCSB workload A. Observed expected improvements.&lt;/p&gt;

&lt;p&gt;Let me profile the other workloads and run the full unit test suite and report back.&lt;/p&gt;</comment>
                            <comment id="14985096" author="hadoopqa" created="Mon, 2 Nov 2015 11:46:07 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770051/HBASE-14738-0.98.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770051/HBASE-14738-0.98.patch&lt;/a&gt;&lt;br/&gt;
  against 0.98 branch at commit 6dbb5a8052c5cbff9dfb9ebac68d3200d3543955.&lt;br/&gt;
  ATTACHMENT ID: 12770051&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 12 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 27 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16344//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14985658" author="apurtell" created="Mon, 2 Nov 2015 18:07:15 +0000"  >&lt;p&gt;Looks like a build env issue on that test result:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.18.1:test (secondPartTestsExecution) on project hbase-server: ExecutionException: java.lang.RuntimeException: The forked VM terminated without properly saying goodbye. VM crash or System.exit called?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Running the suite locally now.&lt;/p&gt;</comment>
                            <comment id="14986093" author="apurtell" created="Mon, 2 Nov 2015 21:30:57 +0000"  >&lt;p&gt;Suite passes all tests locally.&lt;/p&gt;</comment>
                            <comment id="14986173" author="stack" created="Mon, 2 Nov 2015 22:25:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.18.1:test (secondPartTestsExecution) on project hbase-server: ExecutionException: java.lang.RuntimeException: The forked VM terminated without properly saying goodbye. VM crash or System.exit called?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Trying to figure these out &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14988273" author="apurtell" created="Tue, 3 Nov 2015 22:18:31 +0000"  >&lt;p&gt;What do you think &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;. Looking to get this into 0.98.16&lt;/p&gt;</comment>
                            <comment id="14988697" author="appy" created="Wed, 4 Nov 2015 01:41:58 +0000"  >&lt;p&gt;In testAllChecksumTypes(), should we also check for the checksum type to make sure it&apos;s not using default checksum every time. I see no other test in that file testing the same so might as well do it here.&lt;br/&gt;
For everything else, LGTM.&lt;/p&gt;</comment>
                            <comment id="14988701" author="apurtell" created="Wed, 4 Nov 2015 01:47:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;In testAllChecksumTypes(), should we also check for the checksum type to make sure it&apos;s not using default checksum every time.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for the suggestion. Let me look at adding that test.&lt;/p&gt;

&lt;p&gt;FWIW I tested this change on the cluster and although the default in 0.98 is CRC32 when I asked for CRC32C in hbase-site I got HFiles with CRC32C, as evidenced by selection of the CRC32C DataChecksum implementation visible in the profile.&lt;/p&gt;</comment>
                            <comment id="14997384" author="apurtell" created="Mon, 9 Nov 2015 21:25:21 +0000"  >&lt;p&gt;Let me move this to 0.98.17&lt;/p&gt;</comment>
                            <comment id="15093021" author="apurtell" created="Tue, 12 Jan 2016 00:48:30 +0000"  >&lt;p&gt;Unscheduling. I&apos;m not seeing gains worth the risk of changing this code in 0.98. Let me leave this issue open with patch parked here in case we want to revisit this later.&lt;/p&gt;</comment>
                            <comment id="15374508" author="lhofhansl" created="Wed, 13 Jul 2016 07:19:37 +0000"  >&lt;p&gt;It&apos;s interesting that I never see this in my profiling sessions. What&apos;s the workload? (I assume uncached reads) &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12740264">HBASE-11927</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12770051" name="HBASE-14738-0.98.patch" size="52644" author="apurtell" created="Mon, 2 Nov 2015 08:42:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 2 Nov 2015 11:46:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            22 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2nsn3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Checksumming is cpu intensive. HBase computes additional checksums for HFiles (hdfs does checksums too) and stores them inline with file data. During reading, these checksums are verified to ensure data is not corrupted. This patch tries to use Hadoop Native Library for checksum computation, if it&#8217;s available, otherwise falls back to standard Java libraries. Instructions to load NHL in HBase can be found here (&lt;a href=&quot;http://hbase.apache.org/book.html#hadoop.native.lib&quot;&gt;http://hbase.apache.org/book.html#hadoop.native.lib&lt;/a&gt;).&lt;br/&gt;
&lt;br/&gt;
Default checksum algorithm remains CRC32. The CRC32C is better because of two reasons: 1) CRC32C has better error detection properties, and 2) New Intel processors have a dedicated instruction for crc32c computation (SSE4.2 instruction set)*. This change is fully backward compatible. Also, users should not see any differences except decrease in cpu usage. To use CRC32C, set configuration &#8216;hbase.hstore.checksum.algorithm&#8217; to &#8216;CRC32C&#8217;.&lt;br/&gt;
&lt;br/&gt;
* On linux, run &amp;#39;cat /proc/cpuinfo&#8217; and look for sse4_2 in list of flags to see if your processor supports SSE4.2. </customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        </customfields>
    </item>
</channel>
</rss>