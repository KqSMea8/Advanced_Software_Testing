<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:15:56 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4102/HBASE-4102.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4102] atomicAppend: A put that appends to the latest version of a cell; i.e. reads current value then adds the bytes offered by the client to the tail and writes out a new entry</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4102</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Its come up a few times that clients want to add to an existing cell rather than make a new cell each time.  At our place, the frontend keeps a list of urls a user has visited &amp;#8211; their md5s &amp;#8211; and updates it as user progresses.  Rather than read, modify client-side, then write new value back to hbase, it would be sweet if could do it all in one operation in hbase server.  TSDB aims to be space efficient.  Rather than pay the cost of the KV wrapper per metric, it would rather have a KV for an interval an in this KV have a value that is all the metrics for the period.&lt;/p&gt;

&lt;p&gt;It could be done as a coprocessor but this feels more like a fundamental feature.&lt;/p&gt;

&lt;p&gt;Beno&#238;t suggests that atomicAppend take a flag to indicate whether or not the client wants to see the resulting cell; often a client won&apos;t want to see the result and in this case, why pay the price formulating and delivering a response that client just drops.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12514140">HBASE-4102</key>
            <summary>atomicAppend: A put that appends to the latest version of a cell; i.e. reads current value then adds the bytes offered by the client to the tail and writes out a new entry</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 15 Jul 2011 00:17:54 +0000</created>
                <updated>Fri, 12 Oct 2012 05:34:49 +0000</updated>
                            <resolved>Wed, 12 Oct 2011 21:43:17 +0000</resolved>
                                                    <fixVersion>0.94.0</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13123565" author="lhofhansl" created="Sat, 8 Oct 2011 21:17:55 +0000"  >&lt;p&gt;This seems like a simple useful addition.&lt;br/&gt;
Should this be in 0.92 or 0.94?&lt;/p&gt;</comment>
                            <comment id="13123572" author="lhofhansl" created="Sat, 8 Oct 2011 22:10:58 +0000"  >&lt;p&gt;I have this working now.&lt;/p&gt;

&lt;p&gt;But now I realized two things:&lt;br/&gt;
1. I modeled it after the old ICV. I assume we want something like the new Increment API.&lt;br/&gt;
2. Is this something that even want to build into HBase? Or should a user implement this with a coprocessor endpoint? (It would be possible to do with a coprocessor, albeit not quite as efficient as an endpoint would have no access to the Stores.&lt;/p&gt;</comment>
                            <comment id="13123618" author="stack" created="Sun, 9 Oct 2011 05:01:47 +0000"  >&lt;p&gt;@Lars On whether it should be 0.92 or 0.94, I&apos;m thinking 0.94 (because people are watching me &amp;#8211; J-D and Todd will kill me if I commit a new feature to 0.92).  That said, I think at least SU will patch their 0.92 with this patch to get this feature; we need it.&lt;/p&gt;

&lt;p&gt;I think we want it like new increment API.&lt;/p&gt;

&lt;p&gt;On doing it as a CP, the argument is that this is a fundamental rather than something to do as a CP.&lt;/p&gt;</comment>
                            <comment id="13123854" author="lhofhansl" created="Mon, 10 Oct 2011 02:59:56 +0000"  >&lt;p&gt;Here&apos;s a first patch.&lt;br/&gt;
I hopefully minimized the copying and creation of byte[] in the regionserver.&lt;br/&gt;
I added a new constructor to KeyValue to be able to create an empty but pre-sized KeyValue that can be filled later.&lt;/p&gt;

&lt;p&gt;There&apos;s a lot of boilerplate that is very similar between Put, Increment, and now Append. Could think about factoring some more of it out.&lt;/p&gt;</comment>
                            <comment id="13123876" author="yuzhihong@gmail.com" created="Mon, 10 Oct 2011 03:49:42 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+/**
+ * Testing of HRegion.incrementColumnValue
+ *
+ */
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestAtomicOperation &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; HBaseTestCase {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Javadoc should be updated for the new test.&lt;br/&gt;
For Mutation.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the number of different families included in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; put
+   */
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numFamilies() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think put in javadoc should be mutation.&lt;br/&gt;
For Append.readFields():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (version &amp;gt; APPEND_VERSION) {
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;version not supported&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Value of version should be included in the exception.&lt;br/&gt;
For RegionCoprocessorHost.postAppend():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * @param appent Append object
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;there was a typo above.&lt;br/&gt;
For HRegion.append():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Result append(Append append, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; lockid, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; writeToWAL)
+      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
...
+    checkRow(row, &lt;span class=&quot;code-quote&quot;&gt;&quot;increment&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Second parameter above should be &quot;append&quot;&lt;/p&gt;</comment>
                            <comment id="13124569" author="lhofhansl" created="Mon, 10 Oct 2011 23:25:21 +0000"  >&lt;p&gt;Thanks Ted...&lt;br/&gt;
New change addressing all your points.&lt;/p&gt;</comment>
                            <comment id="13125134" author="lhofhansl" created="Tue, 11 Oct 2011 15:48:35 +0000"  >&lt;p&gt;All tests pass.&lt;/p&gt;</comment>
                            <comment id="13125144" author="yuzhihong@gmail.com" created="Tue, 11 Oct 2011 16:01:31 +0000"  >&lt;p&gt;+1 on patch v1.&lt;/p&gt;</comment>
                            <comment id="13125225" author="streamy" created="Tue, 11 Oct 2011 17:50:02 +0000"  >&lt;p&gt;This is really nice Lars.  I&apos;d love to see integration with RWCC and to somehow unify the code with Increment.  But I&apos;m okay with committing this and filing a follow-up JIRA.&lt;/p&gt;

&lt;p&gt;I&apos;m also going to backport this into my local 92 branch but I think it should only be committed to trunk.  Let&apos;s put all the polish on before putting it in an official release.&lt;/p&gt;

&lt;p&gt;Nice work!&lt;/p&gt;</comment>
                            <comment id="13125374" author="lhofhansl" created="Tue, 11 Oct 2011 20:44:49 +0000"  >&lt;p&gt;Agree with trunk only (otherwise never get 0.92 out of the door).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Let&apos;s put all the polish on before putting it in an official release.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So you&apos;re saying the RWCC integration and refactoring should go in before this is committed to trunk?&lt;br/&gt;
I would offer to do the RWCC integration right away, but this seems like a special case where data in the memstore is changed in place (same as Increment), and I am not sure about the RWCC semantics in that case.&lt;/p&gt;

&lt;p&gt;I&apos;d say we put this in as is, and then think about RWCC and refactoring for this and Increment.&lt;/p&gt;</comment>
                            <comment id="13125991" author="stack" created="Wed, 12 Oct 2011 17:45:24 +0000"  >&lt;p&gt;Fix copyright on commit (Remove it I&apos;d say.. this line &quot;Copyright 2010 The Apache Software Foundation&quot;... these are no longer necessary ... just the license).&lt;/p&gt;

&lt;p&gt;I like your no-cluster-spinup test of testAppend in HRegion and the &quot;Ultimate Answer to the Ultimate Question of Life,&quot;&lt;/p&gt;

&lt;p&gt;This seems like a good idea &apos;+  // TODO: refactor to derive from Put?&apos; but I&apos;m ok w/ it going in as is.&lt;/p&gt;

&lt;p&gt;Add Append class comment when you commit.  Say basically what its about.&lt;/p&gt;

&lt;p&gt;+1 on commit.&lt;/p&gt;</comment>
                            <comment id="13126137" author="lhofhansl" created="Wed, 12 Oct 2011 20:45:58 +0000"  >&lt;p&gt;At closer look Append and Put are subtly different when it comes to version handling (so they probably will still need to have separate implementations of readFields and write (which is not the bulk of the class, as I moved the other common code into Mutation and OperationWithAttributes as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4347&quot; title=&quot;Remove duplicated code from Put, Delete, Get, Scan, MultiPut&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4347&quot;&gt;&lt;del&gt;HBASE-4347&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;There&apos;re still opportunities to unify some common code between Put and Increment (and now Append), and as you say that is probably for another jira.&lt;/p&gt;

&lt;p&gt;Yet another question is the use of Attributes to add flags to Operations (get/scan/put/increment/append). It&apos;s nice because it allows adding flags without changing RPC versions. On the other hand it relies on a user never using the attribute that we&apos;re using for a flag. I am wondering whether should eat an incompatibility once and add &quot;system attributes&quot; (or something) that are independent from the user attributes. Then we can add flags to these operation without RPC changes and with interfering with user attributes.&lt;br/&gt;
If we do this, it might be good to do that with 0.92.&lt;/p&gt;

&lt;p&gt;I&apos;d also like to understand what RWCC means for the upsert store operation.&lt;/p&gt;

&lt;p&gt;That all said... I fixed the copyright notice and added more comments, and will check this into trunk soon.&lt;/p&gt;</comment>
                            <comment id="13126141" author="streamy" created="Wed, 12 Oct 2011 20:50:04 +0000"  >&lt;p&gt;I think unifying Put and Append is not support important.  It would be good to unify Increment and Append, maybe even CheckAndPut/Delete?  A generic atomic op thing.&lt;/p&gt;

&lt;p&gt;For the attributes, I think we just need a convention for system attributes, for example, they are preceded by an _ underscore.  And then we can put all the used attributes into HConstants for easy tracking.&lt;/p&gt;

&lt;p&gt;Let&apos;s open another JIRA to integrate RWCC w/ Append and possibly Increment as well.  We can discuss there.&lt;/p&gt;</comment>
                            <comment id="13126183" author="lhofhansl" created="Wed, 12 Oct 2011 21:43:17 +0000"  >&lt;p&gt;Committed to trunk&lt;/p&gt;</comment>
                            <comment id="13126203" author="lhofhansl" created="Wed, 12 Oct 2011 22:12:03 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4583&quot; title=&quot;Integrate RWCC with Append and Increment operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4583&quot;&gt;&lt;del&gt;HBASE-4583&lt;/del&gt;&lt;/a&gt; for RWCC discussion.&lt;/p&gt;</comment>
                            <comment id="13126274" author="hudson" created="Thu, 13 Oct 2011 00:48:00 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2322 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2322/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2322/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4102&quot; title=&quot;atomicAppend: A put that appends to the latest version of a cell; i.e. reads current value then adds the bytes offered by the client to the tail and writes out a new entry&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4102&quot;&gt;&lt;del&gt;HBASE-4102&lt;/del&gt;&lt;/a&gt; atomicAppend: A put that appends to the latest version of a cell&lt;/p&gt;

&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/Append.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/Put.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestIncrement.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12498485" name="4102-v1.txt" size="50901" author="lhofhansl" created="Mon, 10 Oct 2011 23:25:21 +0000"/>
                            <attachment id="12498382" name="4102.txt" size="50548" author="lhofhansl" created="Mon, 10 Oct 2011 02:59:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 8 Oct 2011 21:17:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33370</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 10 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08rqf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49093</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>