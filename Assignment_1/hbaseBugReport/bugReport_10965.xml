<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:18:53 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10965/HBASE-10965.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10965] Automate detection of presence of Filter#filterRow()</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10965</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;There is potential inconsistency between the return value of Filter#hasFilterRow() and presence of Filter#filterRow().&lt;/p&gt;

&lt;p&gt;Filters may override Filter#filterRow() while leaving return value of Filter#hasFilterRow() being false (inherited from FilterBase).&lt;/p&gt;

&lt;p&gt;Downside to purely depending on hasFilterRow() telling us whether custom filter overrides filterRow(List) or filterRow() is that the check below may be rendered ineffective:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (nextKv == KV_LIMIT) {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; filter.hasFilterRow()) {
              &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IncompatibleFilterException(
                &lt;span class=&quot;code-quote&quot;&gt;&quot;Filter whose hasFilterRow() returns &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; is incompatible with scan with limit!&quot;&lt;/span&gt;);
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When user forgets to override hasFilterRow(), the above check becomes not useful.&lt;/p&gt;

&lt;p&gt;Another limitation is that we cannot optimize FilterList#filterRow() through short circuit when FilterList#hasFilterRow() turns false.&lt;br/&gt;
See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11093?focusedCommentId=13985149&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13985149&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-11093?focusedCommentId=13985149&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13985149&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This JIRA aims to remove the inconsistency by automatically detecting the presence of overridden Filter#filterRow(). For FilterBase-derived classes, if filterRow() is implemented and not inherited from FilterBase, it is equivalent to having hasFilterRow() return true.&lt;/p&gt;

&lt;p&gt;With precise detection of presence of Filter#filterRow(), the following code from HRegion is no longer needed while backward compatibility is kept.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (!filter.hasFilterRow())
          &amp;amp;&amp;amp; filter.filterRow();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12708027">HBASE-10965</key>
            <summary>Automate detection of presence of Filter#filterRow()</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="yuzhihong@gmail.com">Ted Yu</assignee>
                                    <reporter username="yuzhihong@gmail.com">Ted Yu</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Apr 2014 21:25:37 +0000</created>
                <updated>Tue, 28 Oct 2014 20:58:06 +0000</updated>
                                                                            <component>Filters</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13967122" author="yuzhihong@gmail.com" created="Fri, 11 Apr 2014 21:28:25 +0000"  >&lt;p&gt;Patch v1 uses reflection to detect overridden Filter#filterRow().&lt;/p&gt;

&lt;p&gt;I can put isMethodImplemented() in a utility class once the approach passes review.&lt;/p&gt;

&lt;p&gt;&amp;#42;Filter&amp;#42; tests pass.&lt;/p&gt;</comment>
                            <comment id="13967201" author="yuzhihong@gmail.com" created="Fri, 11 Apr 2014 22:46:53 +0000"  >&lt;p&gt;For Phoenix, I did the following:&lt;/p&gt;

&lt;p&gt;apply patch to 0.98 branch&lt;br/&gt;
mvn clean package install -DskipTests&lt;br/&gt;
in Phoenix workspace, change hbase-hadoop2.version to 0.98.2-SNAPSHOT&lt;br/&gt;
Use command &apos;nohup ~/apache-maven-3.1.1/bin/mvn clean install -Dhadoop.profile=2 &amp;gt; h2.out &amp;amp;&apos; to run unit tests and they passed.&lt;/p&gt;</comment>
                            <comment id="13967306" author="yuzhihong@gmail.com" created="Sat, 12 Apr 2014 00:46:34 +0000"  >&lt;p&gt;TestMultiParallel fails on QA bot.&lt;br/&gt;
But it doesn&apos;t use any filter and it passes locally on Mac.&lt;/p&gt;</comment>
                            <comment id="13967315" author="hadoopqa" created="Sat, 12 Apr 2014 00:59:12 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12639884/10965-v1.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12639884/10965-v1.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12639884&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMultiParallel&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9263//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13967347" author="yuzhihong@gmail.com" created="Sat, 12 Apr 2014 02:18:39 +0000"  >&lt;p&gt;Patch v2 adds javadoc for isFilterMethodImplemented().&lt;/p&gt;</comment>
                            <comment id="13967380" author="anoop.hbase" created="Sat, 12 Apr 2014 03:45:11 +0000"  >&lt;p&gt;We need similar change here also.&lt;br/&gt;
HRegion#nextInternal(List&amp;lt;Cell&amp;gt; results, int limit)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; filter.hasFilterRow()) {
  &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IncompatibleFilterException(
      &lt;span class=&quot;code-quote&quot;&gt;&quot;Filter whose hasFilterRow() returns &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; is incompatible with scan with limit!&quot;&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Also we rely on this hasFilterRow() in other places too.  There also some changes needed?&lt;/p&gt;

&lt;p&gt;Why is the change in FilterList?  IMO in FilterList we have to decide based on individual filters within it.  We can not return true directly.&lt;/p&gt;</comment>
                            <comment id="13967387" author="yuzhihong@gmail.com" created="Sat, 12 Apr 2014 04:11:10 +0000"  >&lt;p&gt;The filter referenced in above code is of FilterWrapper where hasFilterRow() uses the return value from isFilterMethodImplemented().&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also we rely on this hasFilterRow() in other places too.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I searched all references to hasFilterRow() and made corresponding changes. Filter#hasFilterRow() can now be deprecated.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why is the change in FilterList&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is to make hasFilterRow() consistent with the filterRow() method. Prior to this change, filterRow() iterates through filters and calls filterRow(). So the change is consistent with the description of Filter#hasFilterRow().&lt;/p&gt;</comment>
                            <comment id="13967398" author="hadoopqa" created="Sat, 12 Apr 2014 04:43:04 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12639910/10965-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12639910/10965-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12639910&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9268//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13967425" author="ram_krish" created="Sat, 12 Apr 2014 06:59:42 +0000"  >&lt;p&gt;Will check this later so will get back on this tomorrow or monday.&lt;/p&gt;</comment>
                            <comment id="13967539" author="yuzhihong@gmail.com" created="Sat, 12 Apr 2014 15:05:02 +0000"  >&lt;p&gt;Patch v3 addresses Anoop&apos;s comment on FilterList#hasFilterRow()&lt;/p&gt;</comment>
                            <comment id="13967579" author="hadoopqa" created="Sat, 12 Apr 2014 16:49:01 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12639934/10965-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12639934/10965-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12639934&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9271//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13967665" author="yuzhihong@gmail.com" created="Sat, 12 Apr 2014 22:16:52 +0000"  >&lt;p&gt;Patch v4 is based on patch v3 and has the following additional change:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((isEmptyRow || ret == FilterWrapper.FilterRowRetCode.EXCLUDE) || filterRow()) {
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((isEmptyRow || ret == FilterWrapper.FilterRowRetCode.EXCLUDE)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above is feasible because detection of presence of filterRow() is much more reliable now. We don&apos;t need to call filterRow twice.&lt;/p&gt;

&lt;p&gt;All &amp;#42;Filter&amp;#42; tests pass.&lt;/p&gt;</comment>
                            <comment id="13967677" author="stack" created="Sat, 12 Apr 2014 23:19:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;There is potential inconsistency between the return value of Filter#hasFilterRow() and presence of Filter#filterRow(). Filters may override Filter#filterRow() while leaving return value of Filter#hasFilterRow() being false (inherited from FilterBase). &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The particular filter implementation is broke then?  You would change how we run filters to accommodate brokenly implemented filters?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This JIRA aims to remove the inconsistency by automatically detecting the presence of overridden Filter#filterRow(). If filterRow() is implemented and not inherited from FilterBase, it is equivalent to having hasFilterRow() return true.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why do we need this?  Who has this problem?  Are folks implementing filters w/o reading the Interface (is it not clear on what needs overriding &amp;#8211; if not, shouldn&apos;t we fix that?) or who is implementing filters w/o test that proves their filter &quot;does the right thing?&quot;  Is the filter API broke?  Should we fix that rather than add what looks like a band-aid, one that may &apos;surprise&apos; implementors?&lt;/p&gt;
</comment>
                            <comment id="13967692" author="hadoopqa" created="Sun, 13 Apr 2014 00:08:45 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12639959/10965-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12639959/10965-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12639959&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9272//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13967693" author="lhofhansl" created="Sun, 13 Apr 2014 00:33:47 +0000"  >&lt;p&gt;Is this right?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((isEmptyRow || ret == FilterWrapper.FilterRowRetCode.EXCLUDE) || filterRow()) {
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((isEmptyRow || ret == FilterWrapper.FilterRowRetCode.EXCLUDE)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this? (why not continue to call hasFilterRow(), which we just fixed in the patch to do right thing, and more importantly cache the outcode)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.hasFilter() &amp;amp;&amp;amp; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.filter.hasFilterRow()) {
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.hasFilter() &amp;amp;&amp;amp; FilterWrapper.isFilterMethodImplemented(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.filter, &lt;span class=&quot;code-quote&quot;&gt;&quot;filterRow&quot;&lt;/span&gt;)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The last point raises a bigger discussion: If we autodetect this, it should be removed from the filter API completely and moved into the framework. I.e. there&apos;s no need for Filter to even have hasFilterRow() anymore.&lt;/p&gt;

&lt;p&gt;Lastly, it would certainly be nice to autodetect this. Is it worth the effort, though?&lt;/p&gt;</comment>
                            <comment id="13968349" author="anoop.hbase" created="Mon, 14 Apr 2014 13:35:10 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (hasFilterRow == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Filter filter : filters) {
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (FilterWrapper.isFilterMethodImplemented(filter, &lt;span class=&quot;code-quote&quot;&gt;&quot;filterRow&quot;&lt;/span&gt;)) {
+          &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.hasFilterRow = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
+          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
+        }
       }
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.hasFilterRow = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This will be problematic When a FL contains another FL, the inner one will always say hasFilterRow as true.&lt;/p&gt;

&lt;p&gt;So here as per V4 patch we will auto detect presence of filterRow() overridden alone?&lt;/p&gt;

&lt;p&gt;FilterWrapper#hasFilterRow()  just checks presence of filterRow() ? !  When Filter extending &lt;br/&gt;
filterRowCells(List&amp;lt;Cell&amp;gt; kvs)   or filterRow(List&amp;lt;KeyValue&amp;gt; kvs)   hasFilter() have to return true  (And we need fail in HRegion a scan with filter and batch being set)&lt;/p&gt;</comment>
                            <comment id="13969266" author="anoop.hbase" created="Tue, 15 Apr 2014 06:38:37 +0000"  >&lt;p&gt;In initial time of 94 , I remember that   Filter#hasFilterRow() was associated with Filter#filterRow(List&amp;lt;KV&amp;gt;)&lt;br/&gt;
We used this boolean API in 2 places&lt;br/&gt;
1. To check whether Scan is with a Filter, which is having row filtering, and with a batch value set. This is not correct way and we have to fail then&lt;br/&gt;
2. The place before we call Filter#filterRow(List&amp;lt;KV&amp;gt;) in HRegion&lt;/p&gt;

&lt;p&gt;Later we made it like hasFilterRow() to return true when filterRow() is also implemented and so same is used in code where we call filterRow() also.&lt;/p&gt;

&lt;p&gt;Actually we need to use this boolean API only in case 1.  When one uses a filter and a Scan batch wrongly, we will fail the scan op	1st step itself. So there is no need to check this boolean API value before calling the actual Filter methods. The impl in FilterBase do nothing and no problem in calling that I believe.&lt;/p&gt;

&lt;p&gt;So with this Jira, if there is consensus to remove even the hasFilterRow() method, we can simplify the things.  Just in place where we check the Scan filter and batch to see whether we can proceed with the open scanner, just do this auto detect of method impls and act.  In other places of HRegion scan flow, no need to rely on any of these boolean values of hasFilterRow() returns.&lt;/p&gt;

&lt;p&gt;Make some sense?&lt;/p&gt;

&lt;p&gt;When we auto detect presence of methods take care of the FL case. ( FL inside FL) which I was saying above.&lt;/p&gt;</comment>
                            <comment id="13969457" author="ram_krish" created="Tue, 15 Apr 2014 11:50:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;This will be problematic When a FL contains another FL, the inner one will always say hasFilterRow as true.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Good catch.&lt;br/&gt;
We could deprecate hasFilterRow() if there is a consensus in removing it.  Later can remove it.&lt;br/&gt;
You mean to use the hasFilterrow() only in openScanner and not use in every next() calls? Ideally if the &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((isEmptyRow || ret == FilterWrapper.FilterRowRetCode.EXCLUDE) || filterRow()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;filterRow() is getting removed here then hasfilterRow() is called to check the stopRow alone.  In that case moving it to the openScanner makes sense instead of doing the reflection way of using it.&lt;/p&gt;</comment>
                            <comment id="13969760" author="yuzhihong@gmail.com" created="Tue, 15 Apr 2014 17:11:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;You would change how we run filters to accommodate brokenly implemented filters?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Accommodating brokenly implemented filters is already in place. Please take a look at the following method in HRegion#RegionScannerImpl:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; filterRow() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      &lt;span class=&quot;code-comment&quot;&gt;// when hasFilterRow returns &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, filter.filterRow() will be called automatically inside
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// filterRowCells(List&amp;lt;Cell&amp;gt; kvs) so we skip that scenario here.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (!filter.hasFilterRow())
          &amp;amp;&amp;amp; filter.filterRow();
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When filter.hasFilterRow() returns false, filter.filterRow() is still called.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Are folks implementing filters w/o reading the Interface&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Here is one example: phoenix-core/src/main/java/org/apache/phoenix/filter/MultiKeyValueComparisonFilter.java&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; filterRow() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But hasFilterRow() is not defined. There&apos;re other files in Phoenix which exhibit the same pattern.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;is it not clear on what needs overriding&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;From hbase-client/src/main/java/org/apache/hadoop/hbase/filter/Filter.java (since 0.96):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /**
   * Primarily used to check &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; conflicts with scans(such as scans that &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not read a full row at a
   * time).
   *
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; True &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; filter actively uses filterRow(List) or filterRow().
   */
  &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hasFilterRow();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The contract is clearly published but not all people follow it.&lt;/p&gt;

&lt;p&gt;If a custom filter overrides filterRow(List) or filterRow(), it is easy to use reflection to detect. Having hasFilterRow() method leaves room for inconsistency.&lt;/p&gt;

&lt;p&gt;If we can reach consensus on whether hasFilterRow() method should be deprecated first and then removed, I will address Lars&apos; and Anoop&apos;s review comments in the next patch.&lt;/p&gt;</comment>
                            <comment id="13969773" author="yuzhihong@gmail.com" created="Tue, 15 Apr 2014 17:22:48 +0000"  >&lt;p&gt;Another downside to purely depending on hasFilterRow() telling us whether custom filter overrides filterRow(List) or filterRow() is that the check below may be rendered ineffective:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (nextKv == KV_LIMIT) {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; filter.hasFilterRow()) {
              &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IncompatibleFilterException(
                &lt;span class=&quot;code-quote&quot;&gt;&quot;Filter whose hasFilterRow() returns &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; is incompatible with scan with limit!&quot;&lt;/span&gt;);
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When user forgets to override hasFilterRow(), the above check becomes not useful.&lt;/p&gt;</comment>
                            <comment id="13971541" author="stack" created="Wed, 16 Apr 2014 15:23:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;Accommodating brokenly implemented filters is already in place. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So the argument is that because we do something whack once, it is ok to continue along the whack path?&lt;/p&gt;

&lt;p&gt;Traditionally, compensations like these compounded makes the rig&apos;s operation fickle.&lt;/p&gt;

&lt;p&gt;And this example you cite seems categorically different from your patch in that it is the internals dictating how execution flows rather than compensation for what seems like a failure to implement the Interface as described (and that it calls filterRow though hasFilterRow is false is a bug).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But hasFilterRow() is not defined. There&apos;re other files in Phoenix which exhibit the same pattern.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Eh... file a bug with pheonix that they&apos;ve failed to implement filters properly.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The contract is clearly published but not all people follow it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The javadoc is not decisive.  That could be tightened up.  If folks don&apos;t read the contract, then it makes it tough.  We should fail fast though rather than try make guess at what was intended.&lt;/p&gt;

&lt;p&gt;If this issue had examination of  why we have these two tied methods at all I&apos;d have some sympathy for the proposal but as is it looks to me to be making a bad situation worse.&lt;/p&gt;







</comment>
                            <comment id="13971563" author="yuzhihong@gmail.com" created="Wed, 16 Apr 2014 15:43:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;file a bug with pheonix that they&apos;ve failed to implement filters properly.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-910&quot; title=&quot;Filter should override hasFilterRow() when filterRow() is overridden&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-910&quot;&gt;&lt;del&gt;PHOENIX-910&lt;/del&gt;&lt;/a&gt; was logged two weeks ago.&lt;/p&gt;</comment>
                            <comment id="13985161" author="yuzhihong@gmail.com" created="Wed, 30 Apr 2014 04:46:52 +0000"  >&lt;p&gt;Toward the tail of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11093&quot; title=&quot;FilterList#filterRow() iterates through its filters even though FilterList#hasFilterRow() returns false&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11093&quot;&gt;HBASE-11093&lt;/a&gt;, Anoop makes a case that as long as the following code is present in HRegion, change in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11093&quot; title=&quot;FilterList#filterRow() iterates through its filters even though FilterList#hasFilterRow() returns false&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11093&quot;&gt;HBASE-11093&lt;/a&gt; w.r.t. FilterList#filterRow() cannot be applied:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; filterRow() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
  &lt;span class=&quot;code-comment&quot;&gt;// when hasFilterRow returns &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, filter.filterRow() will be called automatically inside
&lt;/span&gt;  &lt;span class=&quot;code-comment&quot;&gt;// filterRowCells(List&amp;lt;Cell&amp;gt; kvs) so we skip that scenario here.
&lt;/span&gt;  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (!filter.hasFilterRow())
	  &amp;amp;&amp;amp; filter.filterRow();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11093?focusedCommentId=13985149&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13985149&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-11093?focusedCommentId=13985149&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13985149&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think goal of this JIRA can be achieved without removing hasFilterRow().&lt;br/&gt;
New method for autodetecting presence of hasFilterRow() can be added to FilterWrapper. We can rely on this new method in place where hasFilterRow() is currently called in HRegion.&lt;br/&gt;
Post 1.0 release, we can remove hasFilterRow().&lt;/p&gt;</comment>
                            <comment id="13988177" author="yuzhihong@gmail.com" created="Fri, 2 May 2014 20:18:13 +0000"  >&lt;p&gt;Patch v6 distinguishes the user filters which directly override Filter class from those which extend FilterBase.&lt;/p&gt;

&lt;p&gt;FilterUtil class is added which contain two helper methods.&lt;/p&gt;

&lt;p&gt;All &amp;#42;Filter&amp;#42; tests pass.&lt;/p&gt;</comment>
                            <comment id="13988406" author="yuzhihong@gmail.com" created="Fri, 2 May 2014 23:14:41 +0000"  >&lt;p&gt;From &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9449/consoleFull&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9449/consoleFull&lt;/a&gt; :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HBASE-10965 patch is being downloaded at Fri May  2 20:53:24 UTC 2014 from
http:&lt;span class=&quot;code-comment&quot;&gt;//issues.apache.org/jira/secure/attachment/12643103/10965-v6.txt
&lt;/span&gt;...

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] --- maven-surefire-plugin:2.12-TRUNK-HBASE-2:test (secondPartTestsExecution) @ hbase-shell ---
[INFO] Surefire report directory: /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-shell/target/surefire-reports
[INFO] Using configured provider org.apache.maven.surefire.junitcore.JUnitCoreProvider
...
FATAL: hudson.remoting.RequestAbortedException: java.io.IOException: Unexpected termination of the channel
hudson.remoting.RequestAbortedException: hudson.remoting.RequestAbortedException: java.io.IOException: Unexpected termination of the channel
	at hudson.remoting.RequestAbortedException.wrapForRethrow(RequestAbortedException.java:41)
	at hudson.remoting.RequestAbortedException.wrapForRethrow(RequestAbortedException.java:34)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Basically hbase-server tests passed but the build got aborted.&lt;/p&gt;</comment>
                            <comment id="13988734" author="yuzhihong@gmail.com" created="Sat, 3 May 2014 16:14:58 +0000"  >&lt;p&gt;Patch v7 adds test where a user filter extends Filter directly.&lt;/p&gt;</comment>
                            <comment id="13988837" author="yuzhihong@gmail.com" created="Sat, 3 May 2014 22:52:34 +0000"  >&lt;p&gt;I ran test suite on Linux. There were 3 test failures:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failed tests:   testQuarantineMissingHFile(org.apache.hadoop.hbase.util.TestHBaseFsck): expected:&amp;lt;2&amp;gt; but was:&amp;lt;1&amp;gt;

Tests in error:
  testFlushCommitsWithAbort(org.apache.hadoop.hbase.client.TestMultiParallel): test timed out after 300000 milliseconds
  testMasterRestartWhenTableInEnabling(org.apache.hadoop.hbase.master.TestAssignmentManager)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above tests don&apos;t use filter.&lt;br/&gt;
They passed on re-run.&lt;/p&gt;</comment>
                            <comment id="13989175" author="hadoopqa" created="Sun, 4 May 2014 22:40:36 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12643213/10965-v7.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12643213/10965-v7.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12643213&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9457//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13993351" author="lhofhansl" created="Fri, 9 May 2014 03:30:48 +0000"  >&lt;p&gt;v7 looks like it should work in all cases and not cause performance a degradation.&lt;/p&gt;

&lt;p&gt;Is the complexity worth it here, though? The interface is easily described, we need to fix our internal filters and all implementors of Filter need to do the same.&lt;/p&gt;</comment>
                            <comment id="13993583" author="yuzhihong@gmail.com" created="Fri, 9 May 2014 13:48:56 +0000"  >&lt;p&gt;w.r.t. complexity, patch v7 creates FilterUtil class for utility methods and adds new unit test. Apart from those, the patch is small.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;all implementors of Filter need to do the same.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;There&apos;re many custom Filters in use today. It is hard to know which filters override filterRow() but don&apos;t override hasFilterRow() - without autodetection proposed in this JIRA.&lt;br/&gt;
Hence the following code from HRegion cannot be safely removed without autodetection of hasFilterRow() :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (!filter.hasFilterRow())
          &amp;amp;&amp;amp; filter.filterRow();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;One limitation is that we cannot optimize FilterList#filterRow() through short circuit when FilterList#hasFilterRow() turns false. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11093&quot; title=&quot;FilterList#filterRow() iterates through its filters even though FilterList#hasFilterRow() returns false&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11093&quot;&gt;HBASE-11093&lt;/a&gt; is blocked due to this reason.&lt;/p&gt;</comment>
                            <comment id="13996049" author="ram_krish" created="Tue, 13 May 2014 04:47:26 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; declaringClass = m.getDeclaringClass();
+      &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; superCls = declaringClass.getSuperclass();
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (declaringClass.equals(clazz) &amp;amp;&amp;amp; superCls.equals(filterCls)) {
+        &lt;span class=&quot;code-comment&quot;&gt;// filter class directly overrides Filter
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; filter.hasFilterRow();
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If the filter is just implementing directly the &apos;Filter&apos; class.  &lt;br/&gt;
&apos;declaringClass.getSuperclass();&apos;  would return null?  Am not sure.  Can you verify this once? If so &apos;null&apos; check may be needed.&lt;/p&gt;</comment>
                            <comment id="13996106" author="lhofhansl" created="Tue, 13 May 2014 06:04:46 +0000"  >&lt;p&gt;-0 on this change. Just seems to add complexity for little gain.&lt;br/&gt;
If we could remove hasFilterRow completely from the interface (which we can do in 1.0, I think) that would be a different story.&lt;br/&gt;
Now we have the worst of both worlds. Filter still has hasFilterRow() and on top of that we have the reflection stuff.&lt;/p&gt;</comment>
                            <comment id="13996265" author="anoop.hbase" created="Tue, 13 May 2014 11:07:11 +0000"  >&lt;p&gt;My concern also same. We have to rely on the boolean return value as well as we have auto detect. Code is more complex now. I initially thought we can remove hasFilterRow () But as long as we have Filter and FilterBase 2 abstract super classes we can not remove the api.&lt;/p&gt;</comment>
                            <comment id="13996819" author="yuzhihong@gmail.com" created="Tue, 13 May 2014 19:46:56 +0000"  >&lt;p&gt;In 0.94, Filter is an interface.&lt;br/&gt;
This means user filters coming from 0.94 would always override FilterBase.&lt;/p&gt;</comment>
                            <comment id="13996838" author="yuzhihong@gmail.com" created="Tue, 13 May 2014 20:08:16 +0000"  >&lt;p&gt;From Filter.java in 0.96 :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 * Interface &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; row and column filters directly applied within the regionserver.
...
 * When implementing your own filters, consider inheriting {@link FilterBase} to help
 * you reduce boilerplate.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12711045">HBASE-11093</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12639884" name="10965-v1.txt" size="3842" author="yuzhihong@gmail.com" created="Fri, 11 Apr 2014 23:21:05 +0000"/>
                            <attachment id="12639910" name="10965-v2.txt" size="4155" author="yuzhihong@gmail.com" created="Sat, 12 Apr 2014 02:18:39 +0000"/>
                            <attachment id="12639934" name="10965-v3.txt" size="4660" author="yuzhihong@gmail.com" created="Sat, 12 Apr 2014 15:05:02 +0000"/>
                            <attachment id="12639959" name="10965-v4.txt" size="5429" author="yuzhihong@gmail.com" created="Sat, 12 Apr 2014 22:16:52 +0000"/>
                            <attachment id="12643103" name="10965-v6.txt" size="10063" author="yuzhihong@gmail.com" created="Fri, 2 May 2014 20:18:13 +0000"/>
                            <attachment id="12643213" name="10965-v7.txt" size="13661" author="yuzhihong@gmail.com" created="Sat, 3 May 2014 16:14:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 12 Apr 2014 00:59:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>386350</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 31 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1uk1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>386615</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>