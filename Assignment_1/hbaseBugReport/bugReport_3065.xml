<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:07:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3065/HBASE-3065.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3065] Retry all &apos;retryable&apos; zk operations; e.g. connection loss</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3065</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The &apos;new&apos; master refactored our zk code tidying up all zk accesses and coralling them behind nice zk utility classes.  One improvement was letting out all KeeperExceptions letting the client deal.  Thats good generally because in old days, we&apos;d suppress important state zk changes in state.  But there is at least one case the new zk utility could handle for the application and thats the class of retryable KeeperExceptions.  The one that comes to mind is conection loss.  On connection loss we should retry the just-failed operation.  Usually the retry will just work.  At worse, on reconnect, we&apos;ll pick up the expired session event. &lt;/p&gt;

&lt;p&gt;Adding in this change shouldn&apos;t be too bad given the refactor of zk corralled all zk access into one or two classes only.&lt;/p&gt;

&lt;p&gt;One thing to consider though is how much we should retry.  We could retry on a timer or we could retry for ever as long as the Stoppable interface is passed so if another thread has stopped or aborted the hosting service, we&apos;ll notice and give up trying.  Doing the latter is probably better than some kinda timeout.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3062&quot; title=&quot;ZooKeeper KeeperException$ConnectionLossException is a &amp;quot;recoverable&amp;quot; exception; we should retry a while on server startup at least.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3062&quot;&gt;&lt;del&gt;HBASE-3062&lt;/del&gt;&lt;/a&gt; adds a timed retry on the first zk operation.  This issue is about generalizing what is over there across all zk access.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12475630">HBASE-3065</key>
            <summary>Retry all &apos;retryable&apos; zk operations; e.g. connection loss</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="liyin">Liyin Tang</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Oct 2010 15:51:49 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:14 +0000</updated>
                            <resolved>Wed, 3 Aug 2011 02:06:33 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="12965513" author="streamy" created="Wed, 1 Dec 2010 00:52:54 +0000"  >&lt;p&gt;I&apos;d like to get to this for 0.92 at the latest.&lt;/p&gt;</comment>
                            <comment id="12994960" author="clehene" created="Tue, 15 Feb 2011 19:43:51 +0000"  >&lt;p&gt;We started getting tons of &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; /hbase&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; both in our MR jobs and in our &quot;unit&quot; tests that use the MiniHBaseCluster after upgrading from 0.89 to 0.90.&lt;/p&gt;


</comment>
                            <comment id="12994966" author="ryanobjc" created="Tue, 15 Feb 2011 19:49:42 +0000"  >&lt;p&gt;can you check your ZK cluster health?  There is a link at the top of the master page called &apos;zk dump&apos;.&lt;/p&gt;

&lt;p&gt;We had a situation where 2/5 of our quorum members were not part of it, and you get error messages like that a lot. We changed the logging so it might be illustrating a deployment issue on your end.&lt;/p&gt;</comment>
                            <comment id="13013825" author="liyin" created="Thu, 31 Mar 2011 04:29:44 +0000"  >&lt;p&gt;Most of retry are simple, except 2: create and setData. &lt;br/&gt;
I got some basic idea of retry &apos;create&apos; from &lt;a href=&quot;http://wiki.apache.org/hadoop/ZooKeeper/ErrorHandling&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/ZooKeeper/ErrorHandling&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But how to do the setData? &lt;br/&gt;
The problem is the 1st setData may success and got a connectionloss exception after that.&lt;br/&gt;
Then it retries and got the badversion exception. &lt;br/&gt;
How to make know that this badversion is caused by the result of previous correctly setData?&lt;/p&gt;</comment>
                            <comment id="13013847" author="mahadev" created="Thu, 31 Mar 2011 06:18:58 +0000"  >&lt;p&gt;liyin, &lt;br/&gt;
  This is a real problem. The only way you can make sure is to have some metadata in your setdata to make sure that it was your setdata which succeeded. Connectionloss error handling has been a widely argued abt issue with ZK and I believe &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-22&quot; title=&quot;Automatic request retries on connect failover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-22&quot;&gt;ZOOKEEPER-22&lt;/a&gt; is gaining more and more importance because of issues like these. But &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-22&quot; title=&quot;Automatic request retries on connect failover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-22&quot;&gt;ZOOKEEPER-22&lt;/a&gt; will take some time, so you&apos;d have to get arnd this issue with some metadata information for now.&lt;/p&gt;
</comment>
                            <comment id="13013865" author="liyin" created="Thu, 31 Mar 2011 07:13:50 +0000"  >&lt;p&gt;Thanks Mahadev&lt;br/&gt;
I think adding hostname and processID to the set data works. &lt;br/&gt;
And every time when calling the getData, it just remove that metadata.&lt;/p&gt;
</comment>
                            <comment id="13014004" author="stack" created="Thu, 31 Mar 2011 15:14:27 +0000"  >&lt;p&gt;Sounds good to me Liyin.&lt;/p&gt;</comment>
                            <comment id="13014889" author="liyin" created="Fri, 1 Apr 2011 23:59:41 +0000"  >&lt;p&gt;Changing the zk data format has a compatible problem.&lt;br/&gt;
Right now, I put some MAGIC number at the beginning of the new format zk data. &lt;br/&gt;
So it can handle the old format zk data easily.&lt;/p&gt;

&lt;p&gt;But the origin code cannot handle the new format of zk data. &lt;br/&gt;
When deploying, it needs a fresh restart and deploy all the new jar files together.&lt;/p&gt;</comment>
                            <comment id="13014923" author="stack" created="Sat, 2 Apr 2011 01:22:15 +0000"  >&lt;p&gt;Requiring a restart is ok Liyin.  Going from 0.90.x to 0.92 will require a restart currently anyways (The RCP version changed because of the addition of coprocessors among other additions and removals).&lt;/p&gt;</comment>
                            <comment id="13014924" author="stack" created="Sat, 2 Apr 2011 01:22:49 +0000"  >&lt;p&gt;Oh, so, do you even need the MAGIC in that case? (Restart usually clears zk state)&lt;/p&gt;</comment>
                            <comment id="13015282" author="liyin" created="Mon, 4 Apr 2011 05:21:37 +0000"  >&lt;p&gt;RecoverableZooKeeper is a wrapper of real Zookeeper instance. &lt;br/&gt;
It will retry operations for a configurable times if there is a connection loss exception. &lt;br/&gt;
The only limit is that it will not throw out NoNode exception for delete operation or throw out NodeExist exception for create operation.They are the only 2 false negative cases.&lt;br/&gt;
But application won&apos;t get any false positive exception.&lt;/p&gt;</comment>
                            <comment id="13020649" author="stack" created="Sat, 16 Apr 2011 19:31:01 +0000"  >&lt;p&gt;@Liyin Pardon me.  I missed your new patch.  It looks great.  Should I remove the retry on around create of baseZNode in ZooKeeperWatcher constructor?  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The only limit is that it will not throw out NoNode exception for delete operation or throw out NodeExist exception for create operation.They are the only 2 false negative cases.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So, to be clear (and after looking at code), if node already exists when we create, we just return as though the create was successful.  Similar for delete; if node already gone, we&apos;ll return as though successful delete.&lt;/p&gt;

&lt;p&gt;Let me know on above.  I can do fixes on commit (Patch looks good to me).&lt;/p&gt;</comment>
                            <comment id="13025364" author="stack" created="Tue, 26 Apr 2011 18:26:25 +0000"  >&lt;p&gt;Ping Liyin!&lt;/p&gt;</comment>
                            <comment id="13025369" author="liyin" created="Tue, 26 Apr 2011 18:36:51 +0000"  >&lt;p&gt;Hi Stack&lt;br/&gt;
I am so sorry for the delay&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I will fix this and submit a new patch~~&lt;br/&gt;
Thanks for the review&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13026093" author="liyin" created="Thu, 28 Apr 2011 03:29:28 +0000"  >&lt;p&gt;1) remove the unnecessary retry in the zookeeper watcher.&lt;br/&gt;
2) create still will throw out node exist exception and delete also will throw out no node exception. It only hide the exceptions caused by the retry logic. &lt;/p&gt;</comment>
                            <comment id="13027371" author="stack" created="Sat, 30 Apr 2011 20:37:54 +0000"  >&lt;p&gt;Thanks Liyin.  I think this will fix the intermittent fails of rolling restart test over on apache jenkins.&lt;/p&gt;</comment>
                            <comment id="13027372" author="stack" created="Sat, 30 Apr 2011 20:44:46 +0000"  >&lt;p&gt;Applied to TRUNK.  Patch is actually a reversed patch so I did a new reverse on application.  I added licenses to classes that were missing them.  Thanks for the sweet patch Liyin.&lt;/p&gt;</comment>
                            <comment id="13027375" author="stack" created="Sat, 30 Apr 2011 20:53:29 +0000"  >&lt;p&gt;Reopening. Most tests are failing.&lt;/p&gt;</comment>
                            <comment id="13027376" author="stack" created="Sat, 30 Apr 2011 20:55:09 +0000"  >&lt;p&gt;Here is a non-reversed patch with a fix for compile error.&lt;/p&gt;

&lt;p&gt;Would you mind taking a looksee Liyin to see why tests are failing?  Here is failure from first test in the test suite (mvn clean test):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 t/s/org.apache.hadoop.hbase.master.TestHMasterRPCException.txt                                                                                                                                                                               
-------------------------------------------------------------------------------
Test set: org.apache.hadoop.hbase.master.TestHMasterRPCException
-------------------------------------------------------------------------------
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.348 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
testRPCException(org.apache.hadoop.hbase.master.TestHMasterRPCException)  Time elapsed: 0.312 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.apache.hadoop.hbase.ZooKeeperConnectionException: master:57938-0x12fa82ed2230000 Unexpected KeeperException creating base node
    at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.&amp;lt;init&amp;gt;(ZooKeeperWatcher.java:160)
    at org.apache.hadoop.hbase.master.HMaster.&amp;lt;init&amp;gt;(HMaster.java:236)
    at org.apache.hadoop.hbase.master.TestHMasterRPCException.testRPCException(TestHMasterRPCException.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
    at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:165)
    at org.apache.maven.surefire.Surefire.run(Surefire.java:107)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:289)
    at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1005)
Caused by: org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; /hbase/unassigned
    at org.apache.zookeeper.KeeperException.create(KeeperException.java:118)
    at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)
    at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:809)
    at org.apache.zookeeper.ZooKeeper.exists(ZooKeeper.java:837)
    at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.exists(RecoverableZooKeeper.java:197)
    at org.apache.hadoop.hbase.zookeeper.ZKUtil.createAndFailSilent(ZKUtil.java:807)
    at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.&amp;lt;init&amp;gt;(ZooKeeperWatcher.java:155)
    ... 28 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13031262" author="liyin" created="Tue, 10 May 2011 17:17:43 +0000"  >&lt;p&gt;Thanks stack, I will take a close look&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;br/&gt;
I don&apos;t know why I never received emails update for this jira. &lt;br/&gt;
So sorry for the late response. &lt;/p&gt;</comment>
                            <comment id="13036526" author="stack" created="Thu, 19 May 2011 22:10:44 +0000"  >&lt;p&gt;Thanks Liyin.  I just tried the patch again to see if I could figure it but it doesn&apos;t apply now (ugh).  This patch I think important.  Tests used to fail sporadically up on apache jenkins from time to time because of a lack of retry.  You&apos;ve done the work, would be nice to bring it home.  Let me know if I can help out.&lt;/p&gt;</comment>
                            <comment id="13036529" author="liyin" created="Thu, 19 May 2011 22:14:13 +0000"  >&lt;p&gt;Thanks stack. If you cannot patch it, I can submit a new patch later. Since the 89 has a different way to use zk, I need more more time to debug the failure of the unit tests&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks Liyin&lt;/p&gt;</comment>
                            <comment id="13047571" author="stack" created="Fri, 10 Jun 2011 22:45:53 +0000"  >&lt;p&gt;Moving out of 0.92.0. Pull it back in if you think different.&lt;/p&gt;</comment>
                            <comment id="13047782" author="stack" created="Fri, 10 Jun 2011 23:52:19 +0000"  >&lt;p&gt;Bringing back in.  Try and hack this patch into our TRUNK.&lt;/p&gt;</comment>
                            <comment id="13072201" author="stack" created="Thu, 28 Jul 2011 06:25:25 +0000"  >&lt;p&gt;Update to trunk, fix failing TestHMasterRPC and some cleanup on Liyin&apos;s v3 patch.&lt;/p&gt;</comment>
                            <comment id="13072212" author="stack" created="Thu, 28 Jul 2011 06:45:03 +0000"  >&lt;p&gt;Committed to TRUNK Liyin.  This may have broken distributed split test.  Will look into that this morning (it has other issues).&lt;/p&gt;</comment>
                            <comment id="13072231" author="hudson" created="Thu, 28 Jul 2011 07:34:27 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2059 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2059/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2059/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3065&quot; title=&quot;Retry all &amp;#39;retryable&amp;#39; zk operations; e.g. connection loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3065&quot;&gt;&lt;del&gt;HBASE-3065&lt;/del&gt;&lt;/a&gt; Retry all &apos;retryable&apos; zk operations; e.g. connection loss&lt;/p&gt;

&lt;p&gt;stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitLogWorker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestSplitLogManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/RecoverableZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/RetryCounterFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/RetryCounter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13072585" author="hudson" created="Thu, 28 Jul 2011 22:58:23 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2060 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2060/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2060/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3065&quot; title=&quot;Retry all &amp;#39;retryable&amp;#39; zk operations; e.g. connection loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3065&quot;&gt;&lt;del&gt;HBASE-3065&lt;/del&gt;&lt;/a&gt;  Retry all &apos;retryable&apos; zk operations; e.g. connection loss; addendum... split log zk code url encodes which interacts w/ new naming of znodes that this patch introduces... this commit fixes testslitlogworker&lt;/p&gt;

&lt;p&gt;stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitLogWorker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKSplitLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13072769" author="ram_krish" created="Fri, 29 Jul 2011 10:36:12 +0000"  >&lt;p&gt;Reason for TestSplitLogManager failures&lt;br/&gt;
=======================================&lt;br/&gt;
Pls find the analysis&lt;br/&gt;
-&amp;gt; The Recoverable zookeeper encodes the node name while creating.(This is already pointed out by Stack).&lt;br/&gt;
-&amp;gt; The RecoverableZookeeper while writing the data adds some metadata to it.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;byte[] newData = appendMetaData(data);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;While we executing some of the testcases SplitLogManager.getDataSetWatchSuccess() gets invoked.&lt;br/&gt;
Here we do some state comparions like&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    if (TaskState.TASK_UNASSIGNED.equals(data)) {
      LOG.debug(&quot;task not yet acquired &quot; + path + &quot; ver = &quot; + version);
      handleUnassignedTask(path);
    } else if (TaskState.TASK_OWNED.equals(data)) {
      registerHeartbeat(path, version,
          TaskState.TASK_OWNED.getWriterName(data));
    } else if (TaskState.TASK_RESIGNED.equals(data)) {
      LOG.info(&quot;task &quot; + path + &quot; entered state &quot; + new String(data));
      resubmit(path, true);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here the data variable is with metadata appended while writing the data whereas the  TaskState is without metadata.&lt;br/&gt;
So any comparison that we make fails.&lt;/p&gt;

&lt;p&gt;Also one more observation is &apos;testOrphanTaskAcquisition()&apos; testcase needs some wait mechanism before proceeding.&lt;br/&gt;
Because the GetDataAsyncCallback call is asynchronous.&lt;/p&gt;

&lt;p&gt;In RecoverableZooKeeper the javadoc itself says creating a node should be handled carefully.&lt;br/&gt;
I have still not completely covered all the failures but this is the basic reason.  Even the test case &apos;testTaskDone&apos;()&apos; hanging is due to the same problem I feel.  &lt;br/&gt;
Am not fully aware of the splitlog feature with zookeeper will try to provide an addendum to this.&lt;/p&gt;</comment>
                            <comment id="13072770" author="ram_krish" created="Fri, 29 Jul 2011 10:42:18 +0000"  >&lt;p&gt;The above analysis is for the testcase &apos;testOrphanTaskAcquisition()&apos;&lt;/p&gt;</comment>
                            <comment id="13072779" author="ram_krish" created="Fri, 29 Jul 2011 11:32:58 +0000"  >&lt;p&gt;I will upload the patch.  I got the exact fix&lt;/p&gt;</comment>
                            <comment id="13072794" author="ram_krish" created="Fri, 29 Jul 2011 12:46:25 +0000"  >&lt;p&gt;I have uploaded the addendum.  I think there is a better way also&lt;br/&gt;
Currently in RecoverableZookeeper.getData() api already does the removeAppend step.  But those api doesnot take the&lt;br/&gt;
AsyncCallback as parameter but the one in Zookeeper does.  &lt;/p&gt;

&lt;p&gt;Here the problem is Zookeeper.getData() that takes AsyncCallback  doesnot return the byte[] instead internally it inovkes the AsyncCallback.processResult().  that is the reason we dont have the corresponding similar api in RecoverableZookeeper.  Pls let me know if the patch is ok.  Also correct me if my analysis is wrong. &lt;/p&gt;</comment>
                            <comment id="13072813" author="yuzhihong@gmail.com" created="Fri, 29 Jul 2011 13:32:46 +0000"  >&lt;p&gt;With the addendum, TestSplitLogManager passed and I got one fewer test failure from TestDistributedLogSplitting:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failed tests: 
  testThreeRSAbort(org.apache.hadoop.hbase.master.TestDistributedLogSplitting)
  testWorkerAbort(org.apache.hadoop.hbase.master.TestDistributedLogSplitting)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Applied addendum to TRUNK.&lt;/p&gt;

&lt;p&gt;Thanks for the analysis Ramkrishna.&lt;/p&gt;</comment>
                            <comment id="13072829" author="ram_krish" created="Fri, 29 Jul 2011 13:55:09 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
The testcase testWorkerAbort() is working fine.  &lt;br/&gt;
testThreeRSAbort I am getting &lt;br/&gt;
&apos;java.lang.AssertionError: expected:&amp;lt;4000&amp;gt; but was:&amp;lt;3400&amp;gt;.&apos;&lt;br/&gt;
Is this the error that we get?&lt;/p&gt;</comment>
                            <comment id="13072832" author="yuzhihong@gmail.com" created="Fri, 29 Jul 2011 13:59:59 +0000"  >&lt;p&gt;There is still more to fix.&lt;/p&gt;</comment>
                            <comment id="13072834" author="yuzhihong@gmail.com" created="Fri, 29 Jul 2011 14:01:02 +0000"  >&lt;p&gt;On my MacBook, I got:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testThreeRSAbort(org.apache.hadoop.hbase.master.TestDistributedLogSplitting)  Time elapsed: 30.298 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: expected:&amp;lt;4000&amp;gt; but was:&amp;lt;2900&amp;gt;
...
testWorkerAbort(org.apache.hadoop.hbase.master.TestDistributedLogSplitting)  Time elapsed: 48.424 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: expected:&amp;lt;1&amp;gt; but was:&amp;lt;0&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13072881" author="hudson" created="Fri, 29 Jul 2011 16:05:11 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2063 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2063/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2063/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3065&quot; title=&quot;Retry all &amp;#39;retryable&amp;#39; zk operations; e.g. connection loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3065&quot;&gt;&lt;del&gt;HBASE-3065&lt;/del&gt;&lt;/a&gt; Addendum that removes metadata in getDataSetWatchSuccess() (Ramkrishna)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13072886" author="stack" created="Fri, 29 Jul 2011 16:10:56 +0000"  >&lt;p&gt;Excellent Ram.  I&apos;d figured the first part of your patch last night &amp;#8211; the metdata prefix &amp;#8211; but not the second.  Thank you.  Let me build on your patch for the rest of the fix.&lt;/p&gt;

&lt;p&gt;So, yes, distributed log splitting does heavy interactions with zk.  It went in after the original 3065 patch was done.  The url encoding that distributed splitting zk&apos;ing does is clashing with suffixes that this patch adds to file names &amp;#8211; we need to find the places where we want to use znode name and make sure we url decode.  The second issue is the one you note above where this patch adds metadata at front of data and we need to strip it reading in a few places.&lt;/p&gt;

&lt;p&gt;Let me see how far I get today (I&apos;m gone for a week starting this evening...)&lt;/p&gt;</comment>
                            <comment id="13072906" author="yuzhihong@gmail.com" created="Fri, 29 Jul 2011 16:40:28 +0000"  >&lt;p&gt;I guess Prakash and Liyin would be able to accommodate this JIRA for distributed log splitting since they work together.&lt;/p&gt;</comment>
                            <comment id="13072952" author="stack" created="Fri, 29 Jul 2011 18:02:53 +0000"  >&lt;p&gt;@Ram We could add methods to RecoverableZookeeper than wrapped the callbacks to strip the metadata prefix; maybe we should do that sometime.  The addendum will do for now.&lt;/p&gt;</comment>
                            <comment id="13076032" author="yuzhihong@gmail.com" created="Tue, 2 Aug 2011 04:51:53 +0000"  >&lt;p&gt;In RecoverableZooKeeper, should we make the handling of zero length data in appendMetaData() and removeMetaData() symmetrical ?&lt;br/&gt;
I mean this change:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] appendMetaData(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] data) {
-    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(data == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;){
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(data == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || data.length == 0){
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; data;
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13078478" author="jdcryans" created="Tue, 2 Aug 2011 22:38:23 +0000"  >&lt;p&gt;Log splitting was broken since this jira was committed because a removeMetaData was missing in SplitLogWorker, here&apos;s what I just committed:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Index: src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java
===================================================================
--- src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java	(revision 1153269)
+++ src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java	(working copy)
@@ -537,6 +537,7 @@
         getDataSetWatchFailure(path);
         &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
       }
+      data = watcher.getRecoverableZooKeeper().removeMetaData(data);
       getDataSetWatchSuccess(path, data);
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13078548" author="hudson" created="Wed, 3 Aug 2011 01:12:26 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2072 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2072/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2072/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3065&quot; title=&quot;Retry all &amp;#39;retryable&amp;#39; zk operations; e.g. connection loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3065&quot;&gt;&lt;del&gt;HBASE-3065&lt;/del&gt;&lt;/a&gt; don&apos;t prepend MAGIC if data is empty&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3065&quot; title=&quot;Retry all &amp;#39;retryable&amp;#39; zk operations; e.g. connection loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3065&quot;&gt;&lt;del&gt;HBASE-3065&lt;/del&gt;&lt;/a&gt; adding a missing removeMetaData in SplitLogWorker.java&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/RecoverableZooKeeper.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestMultiParallel.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13078559" author="yuzhihong@gmail.com" created="Wed, 3 Aug 2011 02:06:33 +0000"  >&lt;p&gt;In TRUNK build 2072, there were only two test failures which are not related to this JIRA.&lt;/p&gt;

&lt;p&gt;Resolving.&lt;/p&gt;</comment>
                            <comment id="13078584" author="ram_krish" created="Wed, 3 Aug 2011 04:45:52 +0000"  >&lt;p&gt;@Ted, I think there is some randomness here.  Because if we try to debug i was not getting any error yesterday.  and even the failures were random in nature. &lt;/p&gt;</comment>
                            <comment id="13170113" author="qwertymaniac" created="Thu, 15 Dec 2011 10:42:04 +0000"  >&lt;p&gt;As a result of this, can the blocks of code of the following manner be considered as resolved?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rc != 0) {
        &lt;span class=&quot;code-comment&quot;&gt;// Thisis resultcode.  If non-zero, need to resubmit.
&lt;/span&gt;        LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;rc != 0 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + path + &lt;span class=&quot;code-quote&quot;&gt;&quot; -- retryable connectionloss -- &quot;&lt;/span&gt; +
          &lt;span class=&quot;code-quote&quot;&gt;&quot;FIX see http:&lt;span class=&quot;code-comment&quot;&gt;//wiki.apache.org/hadoop/ZooKeeper/FAQ#A2&quot;&lt;/span&gt;);
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is from AssignmentManager, lines 1306 and 1336 (two instances).&lt;/p&gt;

&lt;p&gt;Or are those callbacks still not retrying in nature?&lt;/p&gt;</comment>
                            <comment id="13170114" author="qwertymaniac" created="Thu, 15 Dec 2011 10:43:37 +0000"  >&lt;p&gt;Actually, the more critical one is from the CreateUnassigned one:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rc != 0) {
        &lt;span class=&quot;code-comment&quot;&gt;// Thisis resultcode.  If non-zero, need to resubmit.
&lt;/span&gt;        LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;rc != 0 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + path + &lt;span class=&quot;code-quote&quot;&gt;&quot; -- retryable connectionloss -- &quot;&lt;/span&gt; +
          &lt;span class=&quot;code-quote&quot;&gt;&quot;FIX see http:&lt;span class=&quot;code-comment&quot;&gt;//wiki.apache.org/hadoop/ZooKeeper/FAQ#A2&quot;&lt;/span&gt;);
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.zkw.abort(&lt;span class=&quot;code-quote&quot;&gt;&quot;Connectionloss writing unassigned at &quot;&lt;/span&gt; + path +
          &lt;span class=&quot;code-quote&quot;&gt;&quot;, rc=&quot;&lt;/span&gt; + rc, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(Line 1306, AssignmentManager). As you see there, it aborts the whole thing instead of retrying.&lt;/p&gt;</comment>
                            <comment id="13170314" author="stack" created="Thu, 15 Dec 2011 16:09:32 +0000"  >&lt;p&gt;We should make a test to prove these blocks not needed Harsh?&lt;/p&gt;</comment>
                            <comment id="13170355" author="qwertymaniac" created="Thu, 15 Dec 2011 17:25:30 +0000"  >&lt;p&gt;Good point.&lt;/p&gt;

&lt;p&gt;/me bangs his head on the wall for not trying first &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ll spend some time in the weekend to try out 0.92 and force this callback to fail.&lt;/p&gt;</comment>
                            <comment id="15017469" author="lars_francke" created="Fri, 20 Nov 2015 12:43:14 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12539891">HBASE-5281</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12477884" name="3065-v3.txt" size="58464" author="stack" created="Sat, 30 Apr 2011 20:55:09 +0000"/>
                            <attachment id="12488068" name="3065-v4.txt" size="60551" author="stack" created="Thu, 28 Jul 2011 06:25:25 +0000"/>
                            <attachment id="12488200" name="HBASE-3065-addendum.patch" size="664" author="ram_krish" created="Fri, 29 Jul 2011 12:36:58 +0000"/>
                            <attachment id="12475338" name="HBase-3065[r1088475]_1.patch" size="48013" author="liyin" created="Mon, 4 Apr 2011 05:21:37 +0000"/>
                            <attachment id="12477605" name="hbase3065_2.patch" size="58684" author="liyin" created="Thu, 28 Apr 2011 03:29:28 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Dec 2010 00:52:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26624</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hklj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100599</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Adds recovery of &amp;#39;recoverable&amp;#39; zk operations.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>