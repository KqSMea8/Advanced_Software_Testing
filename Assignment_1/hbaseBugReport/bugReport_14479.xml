<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:53:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14479/HBASE-14479.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14479] Apply the Leader/Followers pattern to RpcServer&apos;s Reader</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14479</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&lt;tt&gt;RpcServer&lt;/tt&gt; uses multiple selectors to read data for load distribution, but the distribution is just done by round-robin. It is uncertain, especially for long run, whether load is equally divided and resources are used without being wasted.&lt;/p&gt;

&lt;p&gt;Moreover, multiple selectors may cause excessive context switches which give priority to low latency (while we just add the requests to queues), and it is possible to reduce throughput of the whole server.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12896012">HBASE-14479</key>
            <summary>Apply the Leader/Followers pattern to RpcServer&apos;s Reader</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="ikeda">Hiroshi Ikeda</assignee>
                                    <reporter username="ikeda">Hiroshi Ikeda</reporter>
                        <labels>
                    </labels>
                <created>Thu, 24 Sep 2015 06:52:13 +0000</created>
                <updated>Mon, 25 Jul 2016 02:57:33 +0000</updated>
                                                                            <component>IPC/RPC</component>
                    <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                                                            <comments>
                            <comment id="14905919" author="ikeda" created="Thu, 24 Sep 2015 06:59:39 +0000"  >&lt;p&gt;Added a patch. Not so strict leader/followers pattern.&lt;/p&gt;</comment>
                            <comment id="14906191" author="hadoopqa" created="Thu, 24 Sep 2015 10:50:54 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12762069/HBASE-14479.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12762069/HBASE-14479.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 5b7894f92ba3e9ff700da1e9194ebb4774d8b71e.&lt;br/&gt;
  ATTACHMENT ID: 12762069&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildOverlap&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRollingRestart&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestTableLockManager&lt;br/&gt;
                  org.apache.hadoop.hbase.master.handler.TestEnableTableHandler&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRegionPlacement&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRestartCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestPerColumnFamilyFlush&lt;br/&gt;
                  org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildBase&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestServerCrashProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestMasterFailoverWithProcedures&lt;br/&gt;
                  org.apache.hadoop.hbase.TestRegionRebalancing&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterRestartAfterDisablingTable&lt;br/&gt;
                  org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildHole&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
                  org.apache.hadoop.hbase.TestFullLogReconstruction&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 23 zombie test(s): 	at org.apache.hadoop.hbase.util.TestHBaseFsck.testQuarantineCorruptHFile(TestHBaseFsck.java:2231)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testQuarantineMissingHFile(TestHBaseFsck.java:2373)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testFixHdfsHolesNotWorkingWithNoHdfsChecking(TestHBaseFsck.java:2152)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testCoveredStartKey(TestHBaseFsck.java:1145)&lt;br/&gt;
	at org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface.testIncrementHook(TestRegionObserverInterface.java:220)&lt;br/&gt;
	at org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface.testRegionObserver(TestRegionObserverInterface.java:124)&lt;br/&gt;
	at org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface.testRowMutation(TestRegionObserverInterface.java:183)&lt;br/&gt;
	at org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface.testCheckAndPutHooks(TestRegionObserverInterface.java:248)&lt;br/&gt;
	at org.apache.hadoop.hbase.TestIOFencing.testFencingAroundCompactionAfterWALSync(TestIOFencing.java:238)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFromClientSide.testJiraTest861(TestFromClientSide.java:2275)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestReplicasClient.testGetNoResultNotStaleSleepRegionWithReplica(TestReplicasClient.java:370)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testSSHCleanupDaugtherRegionsOfAbortedSplit(TestSplitTransactionOnCluster.java:1003)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestClientTimeouts.testAdminTimeout(TestClientTimeouts.java:108)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsckEncryption.testFsckWithEncryption(TestHBaseFsckEncryption.java:132)&lt;br/&gt;
	at org.apache.hadoop.hbase.coprocessor.TestOpenTableInCoprocessor.testCoprocessorCanCreateConnectionToRemoteTableWithCustomPool(TestOpenTableInCoprocessor.java:145)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestMetaWithReplicas.testShutdownHandling(TestMetaWithReplicas.java:141)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitWalDataLoss.test(TestSplitWalDataLoss.java:141)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFromClientSide.testKeyOnlyFilter(TestFromClientSide.java:700)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestRegionSplitter.testCreatePresplitTableUniform(TestRegionSplitter.java:129)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHTableMultiplexerFlushCache.testOnRegionChange(TestHTableMultiplexerFlushCache.java:115)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFastFail.testFastFail(TestFastFail.java:237)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.replication.TestReplicationAdminWithClusters.testEnableReplicationWhenSlaveClusterDoesntHaveTable(TestReplicationAdminWithClusters.java:65)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHCM.testRegionCaching(TestHCM.java:574)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHCM.testConnectionIdle(TestHCM.java:417)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHCM.testConnectionClose(TestHCM.java:331)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHCM.testConnectionCloseAllowsInterrupt(TestHCM.java:280)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildBase.testMetaRebuild(TestOfflineMetaRebuildBase.java:55)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction.testMasterOpsWhileSplitting(TestEndToEndSplitTransaction.java:98)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestRegionServerMetrics.testMutationsWithoutWal(TestRegionServerMetrics.java:199)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15709//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15709//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15709//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15709//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15709//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15709//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15709//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15709//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14907460" author="ikeda" created="Fri, 25 Sep 2015 02:47:28 +0000"  >&lt;p&gt;Added a revised patch. Fixed bugs of not handling closed connections.&lt;/p&gt;</comment>
                            <comment id="14907559" author="hadoopqa" created="Fri, 25 Sep 2015 04:37:04 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12762308/HBASE-14479-V2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12762308/HBASE-14479-V2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit dff86542d558394cc87ede256bd5432d071ed73f.&lt;br/&gt;
  ATTACHMENT ID: 12762308&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.http.TestGlobalFilter.testServletFilter(TestGlobalFilter.java:137)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15733//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15733//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15733//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15733//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15733//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15733//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15733//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15733//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14946046" author="stack" created="Wed, 7 Oct 2015 00:07:44 +0000"  >&lt;p&gt;Retry.&lt;/p&gt;</comment>
                            <comment id="14946052" author="stack" created="Wed, 7 Oct 2015 00:17:25 +0000"  >&lt;p&gt;Here&apos;s link &lt;a href=&quot;http://www.kircher-schwanninger.de/michael/publications/lf.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.kircher-schwanninger.de/michael/publications/lf.pdf&lt;/a&gt; I like the explanation here too: &lt;a href=&quot;http://stackoverflow.com/questions/3058272/explain-leader-follower-pattern&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/3058272/explain-leader-follower-pattern&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Patch seems good. You tried it &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; (if you&apos;d messed up, unit tests would be failing...) Anyway we could figure if a benefit? I can try running on a cluster and see.... Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14946178" author="hadoopqa" created="Wed, 7 Oct 2015 03:29:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12765295/HBASE-14479-V2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12765295/HBASE-14479-V2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0ea1f8122709302ee19279aaa438b37dac30c25b.&lt;br/&gt;
  ATTACHMENT ID: 12765295&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15893//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15893//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15893//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15893//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15893//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15893//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15893//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15893//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14946256" author="stack" created="Wed, 7 Oct 2015 05:07:29 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
kalashnikov:hbase.git.commit stack$ python ./dev-support/findHangingTests.py  https:&lt;span class=&quot;code-comment&quot;&gt;//builds.apache.org/job/PreCommit-HBASE-Build/15893//consoleText
&lt;/span&gt;Fetching https:&lt;span class=&quot;code-comment&quot;&gt;//builds.apache.org/job/PreCommit-HBASE-Build/15893//consoleText
&lt;/span&gt;Building remotely on ubuntu-2 (docker Ubuntu ubuntu) in workspace /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build
Testing patch &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; HBASE-14479.
Testing patch on branch master.
Printing hanging tests
Hanging test : org.apache.hadoop.hbase.util.TestHBaseFsck
Hanging test : org.apache.hadoop.hbase.namespace.TestNamespaceAuditor
Hanging test : org.apache.hadoop.hbase.master.balancer.TestStochasticLoadBalancer2
Hanging test : org.apache.hadoop.hbase.mob.mapreduce.TestMobSweeper
Hanging test : org.apache.hadoop.hbase.mob.compactions.TestMobCompactor
Printing Failing tests
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These failed.&lt;/p&gt;

&lt;p&gt;I&apos;m just going to disable them all... they fail regularly.  Let me make issues.&lt;/p&gt;</comment>
                            <comment id="14946355" author="stack" created="Wed, 7 Oct 2015 06:32:24 +0000"  >&lt;p&gt;Retry&lt;/p&gt;</comment>
                            <comment id="14946617" author="hadoopqa" created="Wed, 7 Oct 2015 10:04:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12765335/HBASE-14479-V2%20%281%29.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12765335/HBASE-14479-V2%20%281%29.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit d80c7e95ec7ef4811b83224a87ee6883f67f2d62.&lt;br/&gt;
  ATTACHMENT ID: 12765335&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15899//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15899//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15899//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15899//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15899//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15899//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15899//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15899//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14952151" author="stack" created="Sun, 11 Oct 2015 04:36:31 +0000"  >&lt;p&gt;Some pictures. I ran YCSB four loadings C (100% random read). The first was branch-1, the second was branch-1 + this patch, the third run was also branch-1 + this patch, and then the fourth run was w/o the patch (same as first run; i.e. run 1 and 4 were without the patch and runs 2 and 3 were with the patch). I restarted between run 1 and 2 and between 3 and 4.&lt;/p&gt;

&lt;p&gt;High-level, throughput is slightly up (depedent on the run..the differences are pretty erratic).&lt;/p&gt;

&lt;p&gt;Median, 75th and 95th are about the same... maybe less w/ the patch applied.&lt;/p&gt;

&lt;p&gt;GC time may be less w/ the patch (the fourth run which is w/o the patch has less GC but it is doing way less gets).&lt;/p&gt;

&lt;p&gt;Load w/ patch seems slightly less w/ patch... i/os are about same across the runs.&lt;/p&gt;

&lt;p&gt;High-level, no regression (probably some benefit discernible at this macro-level).&lt;/p&gt;

&lt;p&gt;I&apos;ll commit the patch.&lt;/p&gt;

</comment>
                            <comment id="14952159" author="stack" created="Sun, 11 Oct 2015 05:00:54 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; FYI. You&apos;ll like this one.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; Should we use this patten elsewhere, say, in the handoff to syncer threads in WAL? See &lt;a href=&quot;http://hbase.apache.org/xref/org/apache/hadoop/hbase/regionserver/wal/FSHLog.html#1770&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/xref/org/apache/hadoop/hbase/regionserver/wal/FSHLog.html#1770&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;if I understand the pattern right, we could purge Readers and have Handlers themselves do the select read from the socket (one less handoff)?&lt;/p&gt;



</comment>
                            <comment id="14952235" author="nkeywal" created="Sun, 11 Oct 2015 09:36:24 +0000"  >&lt;p&gt;Yeah, I tried to get rid of this array of readers a while back, but I didn&apos;t push the patch because I didn&apos;t get any significant result. Nice work, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14953700" author="stack" created="Mon, 12 Oct 2015 20:49:57 +0000"  >&lt;p&gt;A few comments:&lt;/p&gt;

&lt;p&gt;+ There is only one Reader thread so how can there be leaders and followers?&lt;br/&gt;
+ If only one Reader thread, could we discard and let the Listener thread do the dispatch?&lt;br/&gt;
+ Patch could do with a few comments including link to pattern being implemented. For example, what is going on here:&lt;/p&gt;

&lt;p&gt;+          SelectionKey key = selectedKeyQueue.poll();&lt;br/&gt;
+          if (key != null) &lt;/p&gt;
{
+            processing(key);
+            continue;
+          }

&lt;p&gt;We are the leader and we keep processing the queue till no more keys... then we fall through to do similar relinquishing the lock if no more to do?&lt;/p&gt;

&lt;p&gt;Patch does some nice cleanup. Just trying to understand it better. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14954386" author="ikeda" created="Tue, 13 Oct 2015 04:51:57 +0000"  >&lt;p&gt;Sorry I have little time now so response a few comments.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+ There is only one Reader thread so how can there be leaders and followers?&lt;br/&gt;
+ If only one Reader thread, could we discard and let the Listener thread do the dispatch?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;tt&gt;Reader&lt;/tt&gt; is a just runnable task and not extending &lt;tt&gt;Thread&lt;/tt&gt;.&lt;br/&gt;
Threads are created in a thread pool (It seems a strange usage but I want to put it aside for now).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+ SelectionKey key = selectedKeyQueue.poll();&lt;br/&gt;
+ if (key != null)&lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: { + processing(key); + continue; + }&lt;/span&gt; &lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;That intends just event dispatching while &lt;tt&gt;key&lt;/tt&gt; != null (corresponding to the transition following-&amp;gt;processing), and the semaphore releases threads so that the only one thread encounters &lt;tt&gt;key&lt;/tt&gt; == null and promotes to the leader (following-&amp;gt;leading).&lt;/p&gt;</comment>
                            <comment id="14954471" author="stack" created="Tue, 13 Oct 2015 06:15:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;(It seems a strange usage but I want to put it aside for now).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Does this mean you want to change the patch or just that you think it fine as is; it is just that the implementation is a little odd (all executors are contending on single instance of the Reader Runnable)?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;That intends just event dispatching while key != null (corresponding to the transition following-&amp;gt;processing)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;... hmm. I think I should just run this and see how it operates in action if only for my own education.&lt;/p&gt;</comment>
                            <comment id="14955352" author="stack" created="Tue, 13 Oct 2015 17:51:11 +0000"  >&lt;p&gt;So, played with the patch and see what is going on now (it used the idiom described in the paper flipping gating on semaphore to go from leader to follower). I&apos;d be up for committing to master and branch-1 with some commentary added. Waiting on response to question above when &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; has a moment to reply.&lt;/p&gt;</comment>
                            <comment id="14964423" author="ikeda" created="Tue, 20 Oct 2015 02:53:49 +0000"  >&lt;p&gt;Sorry for my late response.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;    (It seems a strange usage but I want to put it aside for now).&lt;/p&gt;

&lt;p&gt;Does this mean you want to change the patch or just that you think it fine as is; it is just that the implementation is a little odd (all executors are contending on single instance of the Reader Runnable)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, that works as is. I feel old because that executor creates the fixed number of threads and adjust each thread to just take one task. Executors are for handling tasks independent of threads. I think it is enough to just explicitly create threads in a thread group, but anyway that is not a practical problem.&lt;/p&gt;

&lt;p&gt;As to FSHLog, I have taken a little time to think, but it is too complex and I can&apos;t say for certain.&lt;/p&gt;

&lt;p&gt;I want to say one thing to make sure about the pattern; In general, the main advantage of the Leader/Followers pattern is the possibility for us to make a response without blocks in the same thread. In this jira issue, the benefit is not from this main advantage because we just add the requests to queues.&lt;/p&gt;</comment>
                            <comment id="14965933" author="stack" created="Tue, 20 Oct 2015 23:02:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;In this jira issue, the benefit is not from this main advantage because we just add the requests to queues.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, in a new issue, should we pull out the queue... Or, rather, I suppose in a follow-on I could experiment with removing queues to see if it buys us throughput. If it does, then we could look into redoing scheduling so it was like the &apos;Bound handle/thread association&apos; from the paper.&lt;/p&gt;

&lt;p&gt;Thanks for looking at the WAL &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; I have a sense that this pattern might help with the multiple-syncing threads... but let me try.&lt;/p&gt;</comment>
                            <comment id="14966381" author="ikeda" created="Wed, 21 Oct 2015 07:44:05 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I could experiment with removing queues to see if it buys us throughput.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Some of tasks take a time to execute, and before dispatching a tasks within the same thread, we should do key.interestOps(OP_READ) so that the selector resumes receiving data from the corresponding connection, otherwise parallelized scans in Phoenix or other cheat might reduce performance. Even if so, Support fairness across parallelized scans (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12790&quot; title=&quot;Support fairness across parallelized scans&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12790&quot;&gt;HBASE-12790&lt;/a&gt;) becomes difficult for scans coming from the same TCP stream.&lt;/p&gt;</comment>
                            <comment id="14972419" author="stack" created="Sat, 24 Oct 2015 05:48:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; I tried with this patch again this evening. It seems to lower the random read throughput (workloadc from YCSB) by some 7 or 8%.&lt;/p&gt;

&lt;p&gt;Looking at a few flamegraphs, the character of the read loop has changed &amp;#8211; it looks smoother with this patch &amp;#8211; and it costs slightly less in cpu w/ patch in place but still we run slower (32668.svg is with your patch applied).&lt;/p&gt;

&lt;p&gt;FYI&lt;/p&gt;</comment>
                            <comment id="14973862" author="ikeda" created="Mon, 26 Oct 2015 07:37:58 +0000"  >&lt;p&gt;That&apos;s interesting.&lt;/p&gt;

&lt;p&gt;I don&apos;t know details about YCSB, but does it use multiple connections? The selectors without the patch consume more CPU time than the selector with the patch.&lt;/p&gt;

&lt;p&gt;Park/unpark in the semaphore with the patch consumes non-trivial CPU time. The semaphore releases a permit for each connection to read, but there might be actually well context switches to wake up threads with overhead of park/unpark compared to cost of their tasks.&lt;/p&gt;</comment>
                            <comment id="14977559" author="ikeda" created="Wed, 28 Oct 2015 01:56:58 +0000"  >&lt;p&gt;I have an idea that a just simple scheduler can execute tasks within the almost same thread in a low load with a queue for tasks, instead of preparing an exclusive thread pool in RpcExecutor.&lt;/p&gt;

&lt;p&gt;Pseudo code:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
void RpcScheduler.dispatch(callRunner) {
    queue.offer(callRunner);

    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (threadsExecutingTasks &amp;lt; MAX_THREADS_EXECUTING_TASKS) {
       threadExecutingTasks++;
       &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; ((task = queue.poll()) != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
         execute(task);
       }
       &lt;span class=&quot;code-comment&quot;&gt;// In most cases in a low load, execute the one task you have added.
&lt;/span&gt;       threadExecutingTasks--;
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a based on the condition that we can borrow some threads from RpcServer for a while.&lt;br/&gt;
In the actual code, I would use AtomicLong to manage the numbers of threads and tasks.&lt;/p&gt;
</comment>
                            <comment id="14982952" author="stack" created="Fri, 30 Oct 2015 17:42:34 +0000"  >&lt;p&gt;YCSB does more than one connection...  one per client (25 in this case).&lt;/p&gt;</comment>
                            <comment id="14992886" author="ikeda" created="Fri, 6 Nov 2015 01:28:58 +0000"  >&lt;p&gt;I didn&apos;t realize that a wrapped data by SASL might create a several tasks. When we do a task within a received thread, we would make followers process the rest of the tasks.&lt;/p&gt;</comment>
                            <comment id="15333124" author="stack" created="Thu, 16 Jun 2016 05:23:14 +0000"  >&lt;p&gt;Just putting a placeholder here:&lt;/p&gt;

&lt;p&gt;Our rpcscheduler is configurable. Default is FIFO. If we do the request on the Reader thread &amp;#8211; not handing off to the Handler &amp;#8211; then we go much faster. Over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15967?focusedCommentId=15317950&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15317950&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-15967?focusedCommentId=15317950&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15317950&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; suggests doing all requests irrespective of priority on Reader until we get close to limit. Then we switch to queuing and respecting priority.&lt;/p&gt;

&lt;p&gt;Meantime, there is the FB experience which the lads have codified in AdaptiveLifoCoDelCallQueue where we FIFO until we become loaded and then we go LIFO with a controlled delay that has us shedding load rather than become swamped.&lt;/p&gt;

&lt;p&gt;Default should be a conflation of the two notions above. TODO. The FB lads are going to come back w/ some more input running AdaptiveLifoCoDelCallQueue. That&apos;ll help.&lt;/p&gt;</comment>
                            <comment id="15359168" author="stack" created="Fri, 1 Jul 2016 15:53:45 +0000"  >&lt;p&gt;I tried this again with total random read workload (all from cache). Readers are here at safe point:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2449 &lt;span class=&quot;code-quote&quot;&gt;&quot;RpcServer.reader=0,bindAddress=ve0528.halxg.cloudera.com,port=16020&quot;&lt;/span&gt; #34 daemon prio=5 os_prio=0 tid=0x00007fb669c7f1e0 nid=0x1c7e8 waiting on condition [0x00007fae4d244000]
2450    java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (parking)
2451   at sun.misc.Unsafe.park(Native Method)
2452   - parking to wait &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;  &amp;lt;0x00007faf661d4c00&amp;gt; (a java.util.concurrent.Semaphore$NonfairSync)
2453   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
2454   at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
2455   at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)
2456   at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)
2457   at java.util.concurrent.Semaphore.acquire(Semaphore.java:312)
2458   at org.apache.hadoop.hbase.ipc.RpcServer$Listener$Reader.doRunLoop(RpcServer.java:688)
2459   at org.apache.hadoop.hbase.ipc.RpcServer$Listener$Reader.run(RpcServer.java:669)
2460   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
2461   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
2462   at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;...i.e. at the new semaphore. Throughput is way down... 150k ops/s vs 380k ops/s.&lt;/p&gt;

&lt;p&gt;Looking w/ honest profiler, the call stack is way different w/ current branch-1 spending most of its time responding:&lt;/p&gt;

&lt;p&gt;Current branch-1&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    6 Tree Profile:
    7  (t 100.0,s  5.2) org.apache.hadoop.hbase.ipc.RpcServer$Responder::run
    8   (t 94.8,s  0.0) org.apache.hadoop.hbase.ipc.RpcServer$Responder::doRunLoop
    9    (t 81.0,s  0.6) org.apache.hadoop.hbase.ipc.RpcServer$Responder::doAsyncWrite
   10     (t 79.9,s  1.1) org.apache.hadoop.hbase.ipc.RpcServer$Responder::processAllResponses
   11      (t 76.4,s  0.6) org.apache.hadoop.hbase.ipc.RpcServer$Responder::processResponse
   12       (t 75.9,s  0.0) org.apache.hadoop.hbase.ipc.RpcServer::channelWrite
   13        (t 73.6,s  0.0) org.apache.hadoop.hbase.ipc.BufferChain::write
   14         (t 72.4,s  2.3) sun.nio.ch.SocketChannelImpl::write
   15          (t 67.8,s  0.6) sun.nio.ch.IOUtil::write
   16           (t 62.1,s  0.0) sun.nio.ch.SocketDispatcher::writev
   17            (t 62.1,s 62.1) sun.nio.ch.FileDispatcherImpl::writev0
   18           (t  2.3,s  0.6) sun.nio.ch.Util::getTemporaryDirectBuffer
   19            (t  1.7,s  0.0) java.lang.ThreadLocal::get
   20             (t  1.7,s  0.0) java.lang.ThreadLocal$ThreadLocalMap::access$000
   21              (t  1.7,s  1.7) java.lang.ThreadLocal$ThreadLocalMap::getEntry
   22           (t  0.6,s  0.0) sun.nio.ch.IOVecWrapper::get
   23            (t  0.6,s  0.0) java.lang.ThreadLocal::get
   24             (t  0.6,s  0.0) java.lang.ThreadLocal$ThreadLocalMap::access$000
   25              (t  0.6,s  0.6) java.lang.ThreadLocal$ThreadLocalMap::getEntry
   26           (t  0.6,s  0.6) sun.nio.ch.Util::offerLastTemporaryDirectBuffer
   27           (t  0.6,s  0.0) java.nio.DirectByteBuffer::put
   28            (t  0.6,s  0.6) java.nio.Buffer::limit
   29           (t  0.6,s  0.6) java.nio.Buffer::position
   30           (t  0.6,s  0.0) sun.nio.ch.IOVecWrapper::putLen
   31            (t  0.6,s  0.6) sun.nio.ch.NativeObject::putLong
   32          (t  1.1,s  0.0) java.nio.channels.spi.AbstractInterruptibleChannel::begin
   33           (t  1.1,s  0.0) java.nio.channels.spi.AbstractInterruptibleChannel::blockedOn
   34            (t  1.1,s  0.0) java.lang.&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;$2::blockedOn
   35             (t  1.1,s  1.1) java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;::blockedOn
   36          (t  1.1,s  1.1) sun.nio.ch.SocketChannelImpl::writerCleanup
   37         (t  1.1,s  1.1) java.nio.Buffer::hasRemaining
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With patch:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tree Profile:
 (t 100.0,s  2.2) java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;::run
  (t 97.8,s  0.0) java.util.concurrent.ThreadPoolExecutor$Worker::run
   (t 97.8,s  0.0) java.util.concurrent.ThreadPoolExecutor::runWorker
    (t 97.8,s  0.1) org.apache.hadoop.hbase.ipc.RpcServer$Listener$Reader::run
     (t 97.7,s  0.2) org.apache.hadoop.hbase.ipc.RpcServer$Listener$Reader::doRunLoop
      (t 63.9,s  0.9) org.apache.hadoop.hbase.ipc.RpcServer$Listener$Reader::leading
       (t 59.1,s  0.0) sun.nio.ch.SelectorImpl::select
        (t 59.1,s  0.0) sun.nio.ch.SelectorImpl::select
         (t 59.1,s  0.0) sun.nio.ch.SelectorImpl::lockAndDoSelect
          (t 59.1,s  0.1) sun.nio.ch.EPollSelectorImpl::doSelect
           (t 49.2,s  0.0) sun.nio.ch.EPollArrayWrapper::poll
            (t 43.2,s  0.9) sun.nio.ch.EPollArrayWrapper::updateRegistrations
             (t 42.0,s 42.0) sun.nio.ch.EPollArrayWrapper::epollCtl
             (t  0.4,s  0.2) java.util.BitSet::get
              (t  0.1,s  0.1) java.util.BitSet::wordIndex
            (t  6.0,s  6.0) sun.nio.ch.EPollArrayWrapper::epollWait
           (t  9.1,s  1.2) sun.nio.ch.EPollSelectorImpl::updateSelectedKeys
            (t  5.3,s  0.0) java.util.HashMap::get
             (t  5.3,s  3.9) java.util.HashMap::getNode
              (t  1.3,s  1.3) java.lang.&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;::equals
            (t  1.0,s  0.0) sun.nio.ch.SocketChannelImpl::translateAndSetReadyOps
             (t  1.0,s  1.0) sun.nio.ch.SocketChannelImpl::translateReadyOps
            (t  0.9,s  0.0) java.util.HashSet::add
             (t  0.9,s  0.0) java.util.HashMap::put
              (t  0.9,s  0.5) java.util.HashMap::putVal
               (t  0.4,s  0.4) java.util.HashMap::newNode
            (t  0.6,s  0.0) java.util.HashSet::contains
             (t  0.6,s  0.0) java.util.HashMap::containsKey
              (t  0.5,s  0.5) java.util.HashMap::getNode
              (t  0.1,s  0.1) java.util.HashMap::hash
            (t  0.1,s  0.1) sun.nio.ch.EPollArrayWrapper::getDescriptor
           (t  0.6,s  0.6) sun.nio.ch.IOUtil::drain
           (t  0.1,s  0.0) java.nio.channels.spi.AbstractSelector::end
            (t  0.1,s  0.1) java.nio.channels.spi.AbstractInterruptibleChannel::blockedOn
       (t  1.5,s  0.0) sun.nio.ch.SelectionKeyImpl::interestOps
        (t  1.5,s  0.6) sun.nio.ch.SelectionKeyImpl::nioInterestOps
         (t  0.9,s  0.0) sun.nio.ch.SocketChannelImpl::translateAndSetInterestOps
          (t  0.9,s  0.0) sun.nio.ch.EPollSelectorImpl::putEventOps
           (t  0.9,s  0.9) sun.nio.ch.EPollArrayWrapper::setInterest
       (t  1.2,s  0.0) java.util.concurrent.ConcurrentLinkedQueue::add
        (t  1.2,s  0.9) java.util.concurrent.ConcurrentLinkedQueue::offer
         (t  0.2,s  0.2) java.util.concurrent.ConcurrentLinkedQueue$Node::casNext
         (t  0.1,s  0.1) java.util.concurrent.ConcurrentLinkedQueue$Node::&amp;lt;init&amp;gt;
       (t  0.7,s  0.1) java.util.HashMap$KeyIterator::next
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;



</comment>
                            <comment id="15360884" author="ikeda" created="Mon, 4 Jul 2016 06:19:03 +0000"  >&lt;p&gt;RpcServer.Responder is sort of a safety net used when the native sending buffer of a socket is full, and that is rarely used if clients are well-behaved and wait their response for each request. That means, YCSB should call multiple requests simultaneously in one connection.&lt;/p&gt;

&lt;p&gt;I checked the source of RpcServer and I found that the method Reader.doRead(SelectionKey) just does one request for each call, regardless of whether the next request is available, unless requests are through SASL. That makes the patch of this issue unnecessarily change registration of the key of a connection for each request, causing overhead (as shown by sun.nio.ch.EPollArrayWrapper::updateRegistrations, though I didn&apos;t think such different through-puts).&lt;/p&gt;

&lt;p&gt;BTW, in order to resolve this, when we read as many requests from a connection as possible, the queue will easily become full and it will be difficult to handle requests fairly as to connections. I think it is better to cap the count of the requests simultaneously executing for each connection, according to the current requests queued (instead of using a fixed bounded queue).&lt;/p&gt;</comment>
                            <comment id="15368055" author="stack" created="Fri, 8 Jul 2016 17:47:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;I found that the method Reader.doRead(SelectionKey) just does one request for each call, regardless of whether the next request is available...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How do you mean &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;? The doRunLoop will doRead for each key gotten on a select.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;BTW, in order to resolve this, when we read as many requests from a connection as possible, the queue will easily become full and it will be difficult to handle requests fairly as to connections. I think it is better to cap the count of the requests simultaneously executing for each connection, according to the current requests queued (instead of using a fixed bounded queue).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good. I can test any experiments you might want to try.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15376201" author="ikeda" created="Thu, 14 Jul 2016 02:29:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;The doRunLoop will doRead for each key gotten on a select.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Reader.doRunLoop calls doRead(key) once for each key selected, and doRead calls Connection.readAndProcess() once for each call. readAndProcess reads and processes at most one request from a socket for each call. Actually, readAndProcess prepares a buffer whose size is just equal to the request&apos;s one, and reads data and calls process().&lt;/p&gt;

&lt;p&gt;That means, doRunLoop processes at most one request for each key selected, and the following request is required to be selected again in order to be processed.&lt;/p&gt;

&lt;p&gt;That would be good if clients claimed one request at a time. Moreover, that naturally implements round-robin behavior for registered channels in the selector. But that is subtle for asynchronous multiple requests via one socket because of overhead including unnecessarily calling Selector.select().&lt;/p&gt;

&lt;p&gt;If SASL is used and the request contains multiple substantial requests, all of them are processed in processUnwrappedData with while loop.&lt;/p&gt;</comment>
                            <comment id="15378767" author="ikeda" created="Fri, 15 Jul 2016 02:44:21 +0000"  >&lt;p&gt;In order to reduce overhead of unnecessarily changing registrations, we should postpone making the read flag on and delegating the leader to exclusive access to the socket, until we realize we cannot construct a task even after retrieving data from the socket. Additionally, we should retrieve data with a off-heap buffer whose size is equal to or larger than the socket&apos;s native buffer, for reducing overhead of native calls.&lt;/p&gt;

&lt;p&gt;Of course retrieving all available tasks from a socket at a time causes memory shortage and unfair execution as to connections. In order to prevent the unfairness, we should queue at most one task per connection. That doesn&apos;t mean that one connection cannot execute multiple tasks simultaneously; The restriction is for queued tasks waiting execution. From a different viewpoint, just before executing a task, we should delegate another follower to execute or queue the next task or delegate the leader, as described above.&lt;/p&gt;

&lt;p&gt;AdaptiveLifoCoDelCallQueue is not appropriate when clients can simultaneously send multiple requests. Because it is not realistic to retrieve all requests, the requests will be executed in available order when congestion. Moreover, that requests will be unfairly executed prior to others because that are retrieved later.&lt;/p&gt;</comment>
                            <comment id="15389680" author="ikeda" created="Fri, 22 Jul 2016 15:31:17 +0000"  >&lt;p&gt;Added an experimental patch for branch-1. Sorry I don&apos;t know that can be even compiled &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Reader threads are used for handling requests, except the last thread, which still reads requests from connections which have no queued request. RpcScheduler is completely bypassed (and is just created in vain). RpcScheduler seems to affect some metrics, and they will give no information. At most one request is queued from each connection (while each connection might parses data into multiple requests, for now).&lt;/p&gt;

&lt;p&gt;SelectionKey.OP_READ is not recovered until you find no data available in the stream, for avoiding overhead of changing registration to the read selector.&lt;/p&gt;

&lt;p&gt;This patch simply uses one FIFO queue because this is experimental, but it is possible that it would be best.&lt;/p&gt;</comment>
                            <comment id="15389699" author="ikeda" created="Fri, 22 Jul 2016 15:36:25 +0000"  >&lt;p&gt;Oops some files are lost. I&apos;ll correct...&lt;/p&gt;</comment>
                            <comment id="15389713" author="hadoopqa" created="Fri, 22 Jul 2016 15:38:34 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; patch &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 4s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14479&quot; title=&quot;Apply the Leader/Followers pattern to RpcServer&amp;#39;s Reader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14479&quot;&gt;HBASE-14479&lt;/a&gt; does not apply to master. Rebase required? Wrong Branch? See &lt;a href=&quot;https://yetus.apache.org/documentation/0.2.1/precommit-patchnames&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://yetus.apache.org/documentation/0.2.1/precommit-patchnames&lt;/a&gt; for help. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12819644/HBASE-14479-V3-experimental_branch-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12819644/HBASE-14479-V3-experimental_branch-1.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14479&quot; title=&quot;Apply the Leader/Followers pattern to RpcServer&amp;#39;s Reader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14479&quot;&gt;HBASE-14479&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2728/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2728/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.2.1   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15389717" author="ikeda" created="Fri, 22 Jul 2016 15:44:29 +0000"  >&lt;p&gt;Added a correct patch.&lt;/p&gt;</comment>
                            <comment id="15389724" author="hadoopqa" created="Fri, 22 Jul 2016 15:48:31 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; patch &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 3s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14479&quot; title=&quot;Apply the Leader/Followers pattern to RpcServer&amp;#39;s Reader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14479&quot;&gt;HBASE-14479&lt;/a&gt; does not apply to master. Rebase required? Wrong Branch? See &lt;a href=&quot;https://yetus.apache.org/documentation/0.2.1/precommit-patchnames&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://yetus.apache.org/documentation/0.2.1/precommit-patchnames&lt;/a&gt; for help. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12819646/HBASE-14479-V4-experimental_branch-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12819646/HBASE-14479-V4-experimental_branch-1.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14479&quot; title=&quot;Apply the Leader/Followers pattern to RpcServer&amp;#39;s Reader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14479&quot;&gt;HBASE-14479&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2729/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2729/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.2.1   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15391219" author="ikeda" created="Mon, 25 Jul 2016 00:46:45 +0000"  >&lt;p&gt;Add a renamed patch for Hadoop QA, with fixing typo.&lt;/p&gt;</comment>
                            <comment id="15391276" author="hadoopqa" created="Mon, 25 Jul 2016 02:57:33 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 1 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 10m 17s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 37s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 18s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 42s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 38s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 38s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 58s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 21s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 14m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; Patch causes 11 errors with Hadoop v2.6.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 16m 20s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; Patch causes 11 errors with Hadoop v2.6.2. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 18m 3s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; Patch causes 11 errors with Hadoop v2.6.3. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 19m 47s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; Patch causes 11 errors with Hadoop v2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 9s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 25s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 33s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 85m 30s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 25s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 128m 56s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.ipc.TestRpcClientLeaks &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.procedure.TestProcedureManager &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.master.balancer.TestRegionLocationFinder &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.ipc.TestAsyncIPC &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.ipc.TestIPC &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.security.TestAsyncSecureIPC &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.security.TestSecureIPC &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12819843/HBASE-14479.branch-1.V5_e.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12819843/HBASE-14479.branch-1.V5_e.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14479&quot; title=&quot;Apply the Leader/Followers pattern to RpcServer&amp;#39;s Reader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14479&quot;&gt;HBASE-14479&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; branch-1 / a8dd359 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /usr/local/jenkins/java/jdk1.8.0:1.8.0 /home/jenkins/jenkins-slave/tools/hudson.model.JDK/JDK_1.7_latest_:1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2748/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2748/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2748/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2748/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2748/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2748/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2748/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2748/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.2.1   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12976215">HBASE-15971</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12956205">HBASE-15594</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12765335" name="HBASE-14479-V2 (1).patch" size="9619" author="stack" created="Wed, 7 Oct 2015 06:32:24 +0000"/>
                            <attachment id="12765295" name="HBASE-14479-V2.patch" size="9619" author="stack" created="Wed, 7 Oct 2015 00:07:44 +0000"/>
                            <attachment id="12762308" name="HBASE-14479-V2.patch" size="9619" author="ikeda" created="Fri, 25 Sep 2015 02:47:28 +0000"/>
                            <attachment id="12819644" name="HBASE-14479-V3-experimental_branch-1.patch" size="19546" author="ikeda" created="Fri, 22 Jul 2016 15:31:17 +0000"/>
                            <attachment id="12819646" name="HBASE-14479-V4-experimental_branch-1.patch" size="32966" author="ikeda" created="Fri, 22 Jul 2016 15:44:29 +0000"/>
                            <attachment id="12819843" name="HBASE-14479.branch-1.V5_e.patch" size="32966" author="ikeda" created="Mon, 25 Jul 2016 00:46:45 +0000"/>
                            <attachment id="12762069" name="HBASE-14479.patch" size="9045" author="ikeda" created="Thu, 24 Sep 2015 06:59:39 +0000"/>
                            <attachment id="12768495" name="flamegraph-19152.svg" size="1626139" author="stack" created="Sat, 24 Oct 2015 05:48:13 +0000"/>
                            <attachment id="12768494" name="flamegraph-32667.svg" size="1359414" author="stack" created="Sat, 24 Oct 2015 05:48:13 +0000"/>
                            <attachment id="12766006" name="gc.png" size="44484" author="stack" created="Sun, 11 Oct 2015 04:36:31 +0000"/>
                            <attachment id="12766008" name="gets.png" size="26359" author="stack" created="Sun, 11 Oct 2015 04:36:31 +0000"/>
                            <attachment id="12766005" name="io.png" size="39603" author="stack" created="Sun, 11 Oct 2015 04:36:31 +0000"/>
                            <attachment id="12766007" name="median.png" size="28468" author="stack" created="Sun, 11 Oct 2015 04:36:31 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="13003146">HBASE-16569</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 24 Sep 2015 10:50:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            20 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2lhy7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>