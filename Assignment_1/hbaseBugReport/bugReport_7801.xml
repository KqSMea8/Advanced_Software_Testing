<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:49:10 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7801/HBASE-7801.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7801] Allow a deferred sync option per Mutation.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7801</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Won&apos;t have time for parent. But a deferred sync option on a per operation basis comes up quite frequently.&lt;br/&gt;
In 0.96 this can be handled cleanly via protobufs and 0.94 we can have a special mutation attribute.&lt;/p&gt;

&lt;p&gt;For batch operation we&apos;d take the safest sync option of any of the mutations. I.e. if there is at least one that wants to be flushed we&apos;d sync the batch, if there&apos;s none of those but at least one that wants deferred flush we defer flush the batch, etc.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12631569">HBASE-7801</key>
            <summary>Allow a deferred sync option per Mutation.</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12554266">HBASE-5954</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Sat, 9 Feb 2013 06:46:38 +0000</created>
                <updated>Wed, 31 Jul 2013 16:36:22 +0000</updated>
                            <resolved>Mon, 15 Apr 2013 18:46:41 +0000</resolved>
                                    <version>0.94.6</version>
                    <version>0.95.0</version>
                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.94.7</fixVersion>
                    <fixVersion>0.95.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="13575270" author="apurtell" created="Sat, 9 Feb 2013 21:27:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;In 0.96 this can be handled cleanly via protobufs and 0.94 we can have a special mutation attribute.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We still have op attributes in 0.96 too. Could you say more about how it would be done differently between 0.94 and 0.96+?&lt;/p&gt;</comment>
                            <comment id="13575292" author="lhofhansl" created="Sat, 9 Feb 2013 22:26:53 +0000"  >&lt;p&gt;We already have a writeToWal on Mutation. Could either use an enum or have an extra deferredFlush flag.&lt;br/&gt;
In 0.94 I can&apos;t break the RPC compatibility, so I have to use an attribute. In 0.96 I can do it the right way by changing the RPC.&lt;/p&gt;</comment>
                            <comment id="13575697" author="anoopsamjohn" created="Mon, 11 Feb 2013 09:25:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;For batch operation we&apos;d take the safest sync option of any of the mutations. I.e. if there is at least one that wants to be flushed we&apos;d sync the batch, if there&apos;s none of those but at least one that wants deferred flush we defer flush the batch&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This also to be default to defered = false&lt;br/&gt;
When the attribute is missing we can assume the value to be that set for the table?&lt;br/&gt;
When the attribute is there we go by that for the Mutation. And when atleast one need WAL to be synced immediately , go with that. If all need WAL to be defered synced or none have this attribute but at the table level it is defered, then go with defered.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Here batch will be the mini batch. Which all Mutations will come under one mini batch depends on the row locking.&lt;/p&gt;

&lt;p&gt;Another point not directly related to this issue. Now we have the LogSyncer thread started and running. This thread can come at any point during the put and can do a sync. If all my writes I want to be defered sync = false, this thread may be of no real use for me. In our case of secondary indexing we wanted the sync to happen as one operation (sync write for actual region and that for index region). This is possible but the issue is in between the LogSyncer thread can come and do a sync. So should we make a way to so as to control the start of LogSyncer ?&lt;/p&gt;</comment>
                            <comment id="13576399" author="lhofhansl" created="Tue, 12 Feb 2013 05:40:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;This also to be default to defered = false&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Absolutely. By default nothing will change.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When the attribute is missing we can assume the value to be that set for the table?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Here batch will be the mini batch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. Ideally we would only sync or defer those edits that need it, but if we sync or defer a few more in the batch it is still correct behavior.&lt;/p&gt;

&lt;p&gt;Not sure I completely follow your last paragraph. We need to control the sync and a periodic backround sync is not good enough?&lt;br/&gt;
By setting defer sync you implicitly declare that you are OK with losing (some of) the data in rare cases. If that is not acceptable you&apos;d need sync (not defer) I think.&lt;/p&gt;

&lt;p&gt;Maybe in 0.96 we can think about a way how group edits for different regions (on the same server) and write them into a single WALEdit (similar to RowMutations, but for multiple regions).&lt;/p&gt;</comment>
                            <comment id="13576414" author="anoopsamjohn" created="Tue, 12 Feb 2013 06:25:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;By setting defer sync you implicitly declare that you are OK with losing (some of) the data in rare cases. If that is not acceptable you&apos;d need sync (not defer) I think.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Lars I dont need the defered sync in any of the mutation. So every mini batch operation will do a wal write and then one sync at &lt;span class=&quot;error&quot;&gt;&amp;#91;STEP 7. Sync wal&amp;#93;&lt;/span&gt;&lt;br/&gt;
What my point was we have the LogSyncer thread running. It can come and do a sync before the thread, doing the write, coming and doing the sync at step#7.  In our case we have to make sure the sync is happening as one unit for the main region and index region. We do write WAL entry for the index region in CP WAL write hooks.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe in 0.96 we can think about a way how group edits for different regions (on the same server) and write them into a single WALEdit (similar to RowMutations, but for multiple regions).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I was also thinking in this way. This is already a backlog item I have added for myself here which comes in our sec index further optimization points &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Thanks Lars. I will see working with item.&lt;/p&gt;</comment>
                            <comment id="13577187" author="lhofhansl" created="Tue, 12 Feb 2013 23:50:19 +0000"  >&lt;p&gt;Here&apos;s a surprisingly simple work in progress patch for 0.94.&lt;br/&gt;
This is back and forward compatible between old clients and new servers or vice versa.&lt;/p&gt;

&lt;p&gt;Note: COMPLETELY UNTESTED.&lt;/p&gt;</comment>
                            <comment id="13578077" author="lhofhansl" created="Thu, 14 Feb 2013 01:04:01 +0000"  >&lt;p&gt;I tested the patch locally. Works fine.&lt;br/&gt;
Any comments?&lt;/p&gt;

&lt;p&gt;I could do the same for 0.96, or make a proper protobuf change there. (btw. for setting the cluster id in trunk we&apos;re still using attributes as opposed to encoding this in the protobuf message).&lt;br/&gt;
It is actually an interesting question whether we should maintain optional Mutation attributes via attributes or via a protobuf change.&lt;/p&gt;</comment>
                            <comment id="13578148" author="anoopsamjohn" created="Thu, 14 Feb 2013 04:38:06 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (walEdit.size() &amp;gt; 0 &amp;amp;&amp;amp; shouldSyncWal) {
         syncOrDefer(txid);
       }

&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void syncOrDefer(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; txid) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionInfo.isMetaRegion() ||
      !&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.htableDescriptor.isDeferredLogFlush()) {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.log.sync(txid);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When Mutation specifically say to sync WAL immediately, we need to do so with out considering what is set for Table? If so the  syncOrDefer will again defer it right?&lt;/p&gt;</comment>
                            <comment id="13578154" author="ram_krish" created="Thu, 14 Feb 2013 04:56:22 +0000"  >&lt;p&gt;For Anoop&apos;s point on the LogSyncerThread, what we were thinking is to have a config in the RS level itself to say if to allow the LogSyncer thread to start or not.&lt;br/&gt;
But not sure if this can fit in the kernel code.&lt;/p&gt;</comment>
                            <comment id="13578193" author="lhofhansl" created="Thu, 14 Feb 2013 07:15:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoopsamjohn&quot; class=&quot;user-hover&quot; rel=&quot;anoopsamjohn&quot;&gt;Anoop Sam John&lt;/a&gt; I was thinking that if the table is set up with deferred flush then we&apos;d honor that like we do now. Otherwise that option would be always ignored unless all Mutations are marked with deferFlush (something that an old client cannot even do).&lt;br/&gt;
Note that a Mutation does not explicitly say it wants to sync, it only explicitly state when it doesn&apos;t.&lt;/p&gt;

&lt;p&gt;Another option to make this a bit nicer is to pass the shouldSyncWal flag to syncOrDefer and hence all the decision logic about whether to flush or not in that method.&lt;/p&gt;</comment>
                            <comment id="13578196" author="lhofhansl" created="Thu, 14 Feb 2013 07:18:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Not running the LogSyncer thread at all seems like a recipe for unexpected behavior.&lt;br/&gt;
Or are you saying you to temporarily disable the syncer thread, while a bigger &quot;transaction&quot; is in progress?&lt;/p&gt;</comment>
                            <comment id="13578205" author="ram_krish" created="Thu, 14 Feb 2013 07:42:37 +0000"  >&lt;p&gt;Yes right Lars.  &lt;br/&gt;
If the Log syncer is on, suppose thro the WALObserver we have done a WAL edit and in the main flow we do another WAlEdit but both needs to be synced together as atomic, then we need to the logsyncer to be disabled.&lt;br/&gt;
Or else the logsyncer may sync up the first Edit that happened thro WALObserver and then when the main sync happens there could be a failure leading to inconsistency.&lt;/p&gt;</comment>
                            <comment id="13578215" author="anoopsamjohn" created="Thu, 14 Feb 2013 08:09:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; What all use cases you see? I have one table for which I want a sync immediately for almost all Mutations. For certain others I can have defered flush.&lt;br/&gt;
Can there be reverse case also? In the current implementation how we can achieve that. Sorry I dont have any clear use case with me for this. What do you say?&lt;/p&gt;</comment>
                            <comment id="13578216" author="anoopsamjohn" created="Thu, 14 Feb 2013 08:10:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;Not running the LogSyncer thread at all seems like a recipe for unexpected behavior.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Or are you saying you to temporarily disable the syncer thread, while a bigger &quot;transaction&quot; is in progress?&lt;/p&gt;

&lt;p&gt;In our case we didn&apos;t want the LogSyncer to be there at all as all the Mutation to all tables need to be sync immediately.&lt;/p&gt;</comment>
                            <comment id="13578472" author="lhofhansl" created="Thu, 14 Feb 2013 16:39:46 +0000"  >&lt;p&gt;The use case that I see a lot at Saleforce is similar to the writeToWAL use case. By default the Mutation is written to the WAL unless the Mutation says not to. The defer case is the same IMHO.&lt;/p&gt;

&lt;p&gt;Doing the reverse without making it confusing would require a &quot;forceFlush&quot; (or something like this) option in the Mutation. So we&apos;d have writeToWal, deferFlush, and forceFlush. Even then IMHO that would be more confusing the helpful.&lt;/p&gt;

&lt;p&gt;The key here is that it should possible to decide per Mutation whether to defer or not. Without this change that is not possible. With this change it is possible by leaving the table&apos;s default (flush) and then set the defer bit on a Mutation.&lt;/p&gt;</comment>
                            <comment id="13578926" author="anoopsamjohn" created="Fri, 15 Feb 2013 03:24:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;  Thanks for sharing the use case.&lt;br/&gt;
So we can say&lt;br/&gt;
1. When for a table most of the Mutations need WAL write flush immediately and very few can come with defer flush, we will not set the table defer flush but those Mutations to be defer flush&lt;br/&gt;
2. When for a table most of the Mutations can be defer flushed and few must be immediately flushed, we will not set table defer. On majority of the Mutations we will set defer flush attribute. Those which need immediate flush, we wont set the defer attribute.&lt;br/&gt;
3. When all the Mutations on a table can go with defer flush, set the table defer flush attribute and no other change is needed.&lt;/p&gt;

&lt;p&gt;Just saying as a conclusion. If most of the use case will be like #1, then I am fine Lars. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; BTW looked at the patch. Looks fine with me otherwise.&lt;/p&gt;</comment>
                            <comment id="13579705" author="lhofhansl" created="Sat, 16 Feb 2013 04:21:07 +0000"  >&lt;p&gt;Both #1 and #2 will be use cases, and both are possible with this.&lt;/p&gt;

&lt;p&gt;Generally, though, I do not see much interest in this from other folks. Is this not something people come across periodically?&lt;/p&gt;</comment>
                            <comment id="13579746" author="ram_krish" created="Sat, 16 Feb 2013 07:48:58 +0000"  >&lt;p&gt;@Lars&lt;br/&gt;
We need this.  As far as me and Anoop are concerned, have felt a need for such things.  &lt;br/&gt;
+1 on patch.&lt;/p&gt;</comment>
                            <comment id="13580071" author="lhofhansl" created="Sat, 16 Feb 2013 23:56:39 +0000"  >&lt;p&gt;Here&apos;s a more complete 0.94 patch. Also handles Appends and mutateRow.&lt;br/&gt;
(Note that Increment cannot be supported without an RPC change).&lt;/p&gt;</comment>
                            <comment id="13580072" author="lhofhansl" created="Sat, 16 Feb 2013 23:58:56 +0000"  >&lt;p&gt;Here&apos;s a 0.96 patch. Also uses Mutation attributes to avoid PB changes (could do this through PB as well).&lt;br/&gt;
Again, Increment is not supported as it does not extend Mutation (but it could be supported if we make an PB change).&lt;/p&gt;

&lt;p&gt;0.96 has RowProcessors, so I added an internal API to allow a row processor to decided whether it requests a sync. By default the response is true.&lt;/p&gt;</comment>
                            <comment id="13580073" author="lhofhansl" created="Sat, 16 Feb 2013 23:59:55 +0000"  >&lt;p&gt;Getting a HadoopQA run.&lt;/p&gt;</comment>
                            <comment id="13580080" author="hadoopqa" created="Sun, 17 Feb 2013 00:59:56 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12569695/7801-0.96-v1.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12569695/7801-0.96-v1.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4450//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13580120" author="lhofhansl" created="Sun, 17 Feb 2013 04:28:11 +0000"  >&lt;p&gt;Will fix the line length. As for this patch, any comments?&lt;br/&gt;
Have been thinking about unittest, but this would tricky to verify (we do not have any test for deferred log flush, probably for the same reason).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In our case we didn&apos;t want the LogSyncer to be there at all&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Looking at the code, we could just not start the LogSyncer if hbase.regionserver.optionallogflushinterval is set to 0. I&apos;d fear there might be other side effects, but it could just work. But that&apos;s for a different jira anyway.&lt;/p&gt;</comment>
                            <comment id="13580390" author="yuzhihong@gmail.com" created="Mon, 18 Feb 2013 03:52:00 +0000"  >&lt;p&gt;I looked at trunk patch. It looks good.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; of the resulting edit should sync&apos;ed to the WAL, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please correct the syntax of above javadoc.&lt;/p&gt;</comment>
                            <comment id="13580575" author="anoopsamjohn" created="Mon, 18 Feb 2013 12:12:21 +0000"  >&lt;p&gt;+1&lt;br/&gt;
We can add in release notes about how to achieve the different use cases.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Increment is not supported as it does not extend Mutation (but it could be supported if we make an PB change).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For 0.96 we have a JIRA issue for making Increment also a Mutation right? I forgot the issue id.&lt;/p&gt;</comment>
                            <comment id="13582788" author="enis" created="Thu, 21 Feb 2013 01:46:07 +0000"  >&lt;p&gt;For 0.94, it looks good, but for trunk I think we can merge writeToWAL and syncWAL into one enum. Smt like: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
message Mutate {
  required bytes row = 1;
  ....
  &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; WriteGuarantee {
    SYNC_WAL  = 0, 
    ASYNC_WAL = 1,
    SKIP_WAL  = 2
  }
  optional WriteGuarantee writeGuarantee = 6 [&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; = SYNC_WAL];
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I am sure, we can think of a better name than WriteGuarantee though. &lt;/p&gt;</comment>
                            <comment id="13582810" author="lhofhansl" created="Thu, 21 Feb 2013 02:21:58 +0000"  >&lt;p&gt;Was trying to avoid a PB change, but there&apos;s really no reason to.&lt;/p&gt;

&lt;p&gt;Maybe while I&apos;m at it I might remove the cluster id attribute as well in favor of an attribute on the PB message.&lt;/p&gt;</comment>
                            <comment id="13582811" author="lhofhansl" created="Thu, 21 Feb 2013 02:23:44 +0000"  >&lt;p&gt;Oh another problem with PB is that we need to introduce two enums, because we do not want to leak the PB definition into the public API. So a public enum that is part of the API that is then translated into the PB enum. (Did I mention I do not like PB? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;</comment>
                            <comment id="13582854" author="enis" created="Thu, 21 Feb 2013 02:54:19 +0000"  >&lt;p&gt;Makes sense. I think it is not a horrible idea to expose the PB&apos;s as client API&apos;s. If we want to have non-java clients (especially third party ones), then the java api is not our only client-facing API. Our RPC, and the PB&apos;s are client facing as well. Also, we might get rid of the client objects -&amp;gt; PB -&amp;gt; wire -&amp;gt; PB -&amp;gt; server objects flow, and go with client PB -&amp;gt; wire -&amp;gt; server PB -&amp;gt; wal/memstore. &lt;/p&gt;</comment>
                            <comment id="13582925" author="lhofhansl" created="Thu, 21 Feb 2013 05:07:51 +0000"  >&lt;p&gt;As far the Java API in concerned the fact that we use PB is an implementation detail and should not leak out.&lt;/p&gt;

&lt;p&gt;Are you also suggesting changing the Mutation API? I.e. remove &lt;/p&gt;
{set|get}WriteToWAL and replace it with setWriteGuarantee(WriteGuarantee wg)?&lt;br/&gt;
&lt;br/&gt;
Could do that in 0.94 as well (but still use Attributes to transmit the information - and obviously we have to keep {set|get}
&lt;p&gt;WriteToWAL in 0.94)&lt;/p&gt;

&lt;p&gt;Something like setWriteGuarantee(WriteGuarantee wg) is certainly nice, because it let&apos;s us add more options later (like a true sync to disk).&lt;/p&gt;</comment>
                            <comment id="13583498" author="enis" created="Thu, 21 Feb 2013 20:04:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;As far the Java API in concerned the fact that we use PB is an implementation detail and should not leak out.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My argument above is definitely longer term, when we decide to officially support multi-language clients. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Are you also suggesting changing the Mutation API? I.e. remove (set|get)WriteToWAL and replace it with setWriteGuarantee(WriteGuarantee wg)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;we can do both. Add the enums in the java client API, and the PB serialization. We can deprecate (set|get)WriteToWAL() in 0.94, and remove in 0.96. &lt;/p&gt;</comment>
                            <comment id="13583711" author="sershe" created="Fri, 22 Feb 2013 00:09:22 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!shouldSyncWal) {
+          shouldSyncWal |= !m.getDeferWALFlush();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;= is not necessary.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</comment>
                            <comment id="13583896" author="lhofhansl" created="Fri, 22 Feb 2013 04:06:48 +0000"  >&lt;p&gt;Yep that was an artifact of of my first attempt where I just or&apos;d shouldSyncWal in each iterarion before I added the else if.&lt;/p&gt;</comment>
                            <comment id="13588070" author="lhofhansl" created="Wed, 27 Feb 2013 07:00:04 +0000"  >&lt;p&gt;0.94 patch implementing {&lt;tt&gt;get|set}WriteGuarantee&lt;/tt&gt; on Mutation.&lt;/p&gt;

&lt;p&gt;Not exactly pretty, because this must be backwards compatible with older servers and clients (so still using the writeToWal and deferredFlus bits).&lt;/p&gt;

&lt;p&gt;But at least we can deprecate the API now and remove in 0.95.&lt;/p&gt;</comment>
                            <comment id="13588071" author="lhofhansl" created="Wed, 27 Feb 2013 07:00:22 +0000"  >&lt;p&gt;new trunk patch with PB coming tomorrow.&lt;/p&gt;</comment>
                            <comment id="13591967" author="lhofhansl" created="Mon, 4 Mar 2013 03:33:31 +0000"  >&lt;p&gt;Sigh... I will try to have trunk patch tomorrow.&lt;/p&gt;</comment>
                            <comment id="13592680" author="lhofhansl" created="Mon, 4 Mar 2013 21:51:25 +0000"  >&lt;p&gt;Sigh... Need to push, I just do not have time to get to this.&lt;/p&gt;</comment>
                            <comment id="13598188" author="lhofhansl" created="Sun, 10 Mar 2013 08:24:41 +0000"  >&lt;p&gt;Here&apos;s a fairly large patch that changes uses PB and does away with the old writeToWAL flag.&lt;br/&gt;
(It compiles, that&apos;s all I tests with this patch)&lt;/p&gt;</comment>
                            <comment id="13599740" author="lhofhansl" created="Tue, 12 Mar 2013 06:02:16 +0000"  >&lt;p&gt;Any comments?&lt;/p&gt;</comment>
                            <comment id="13599768" author="anoopsamjohn" created="Tue, 12 Mar 2013 06:32:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; I am going through the patch.&lt;/p&gt;</comment>
                            <comment id="13599864" author="ram_krish" created="Tue, 12 Mar 2013 09:37:59 +0000"  >&lt;p&gt;Will check this later today Lars. By the time if Anoop has gone over then fine.&lt;/p&gt;</comment>
                            <comment id="13599933" author="anoopsamjohn" created="Tue, 12 Mar 2013 11:31:19 +0000"  >&lt;p&gt;Gone through the changes in src code&lt;br/&gt;
1. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
+   * Write the Mutation of the WAL synchronously.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;you mean Mutation to the WAL? In other places too&lt;/p&gt;

&lt;p&gt;2. HRegion#increment(Increment increment)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        syncOrDefer(txid); &lt;span class=&quot;code-comment&quot;&gt;// sync the transaction log outside the rowlock
&lt;/span&gt;+        syncOrDefer(txid, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;code-comment&quot;&gt;// sync the transaction log outside the rowlock&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Hard coded true. Can check whether defered sync or not? Increment  is a Mutation.&lt;/p&gt;

&lt;p&gt;Will see test code part now. Patch not cleanly applying on  TestRestoreFlushSnapshotFromClient.java&lt;/p&gt;</comment>
                            <comment id="13599973" author="anoopsamjohn" created="Tue, 12 Mar 2013 12:23:22 +0000"  >&lt;p&gt;Change of writeToWAL -&amp;gt; writeGuarantee not handled in all the places? &lt;br/&gt;
eg: Delete.java - Delete(final Delete d)&lt;br/&gt;
Put(Put putToCopy)&lt;br/&gt;
etc&lt;/p&gt;</comment>
                            <comment id="13599976" author="anoopsamjohn" created="Tue, 12 Mar 2013 12:33:36 +0000"  >&lt;p&gt;1. HBaseTestCase&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.delete(delete, writeToWAL);
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.delete(delete);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do we need to set SKIP_WAL/SYNC_WAL based on writeToWAL into Delete object?&lt;/p&gt;


&lt;p&gt;2.TestFilter&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       Delete d = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(ROW);
       d.deleteColumns(FAMILIES[0], QUALIFIERS_ONE[1]);
       d.deleteColumns(FAMILIES[1], QUALIFIERS_ONE[1]);
-      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.delete(d, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.region.delete(d);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do we need to set SKIP_WAL into Delete object?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -217,7 +218,7 @@
     &lt;span class=&quot;code-comment&quot;&gt;// create &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; rows and column family to show how reseek works..
&lt;/span&gt;     &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] ROW : ROWS_THREE) {
       Put p = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put(ROW);
-      p.setWriteToWAL(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
+      p.setWriteGuarantee(WriteGuarantee.SKIP_WAL);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Not SKIP_WAL but SYNC_WAL.&lt;/p&gt;

&lt;p&gt;3.TestProtobufUtil&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    assertEquals(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, proto.getWriteToWAL());
+    assertEquals(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, proto.getWriteGuarantee());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Assertion is wrong now. Test will fail. Other places also where assertEquals related changes are there.&lt;/p&gt;


&lt;p&gt;4.TestCompaction&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      r.delete(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(results.get(0).getRow()), &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
+      r.delete(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(results.get(0).getRow()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do we need to set SKIP_WAL into Delete object?&lt;/p&gt;



&lt;p&gt;5.TestGetClosestAtOrBefore&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        mr.delete(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(keys.get(0).getRow()), &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
+        mr.delete(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(keys.get(0).getRow()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do we need to set SKIP_WAL into Delete object? And other similar places in this file&lt;/p&gt;

&lt;p&gt;6.TestHRegion&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    region.delete(delete, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
+    region.delete(delete);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do we need to set SKIP_WAL into Delete object? &lt;/p&gt;</comment>
                            <comment id="13599979" author="anoopsamjohn" created="Tue, 12 Mar 2013 12:34:58 +0000"  >&lt;p&gt;If you are busy and need any help let me know Lars. I can help you &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13600338" author="lhofhansl" created="Tue, 12 Mar 2013 18:59:05 +0000"  >&lt;p&gt;Thanks Anoop.&lt;/p&gt;

&lt;p&gt;New patch coming soon. Please note that HRegion.delete as well as HRegion.put completely ignored the 2nd parameter, which is why I just removed it.&lt;/p&gt;</comment>
                            <comment id="13600347" author="lhofhansl" created="Tue, 12 Mar 2013 19:04:21 +0000"  >&lt;p&gt;I think &lt;tt&gt;p.setWriteToWAL(true)&lt;/tt&gt; in TestFilter is a typo.&lt;/p&gt;</comment>
                            <comment id="13600349" author="lhofhansl" created="Tue, 12 Mar 2013 19:06:38 +0000"  >&lt;p&gt;Updated patch based on Anoop&apos;s comments.&lt;/p&gt;</comment>
                            <comment id="13600350" author="lhofhansl" created="Tue, 12 Mar 2013 19:06:53 +0000"  >&lt;p&gt;Let&apos;s get a HadoopQA run.&lt;/p&gt;</comment>
                            <comment id="13600378" author="hadoopqa" created="Tue, 12 Mar 2013 19:29:56 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12573393/7801-0.96-full-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12573393/7801-0.96-full-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 153 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.protobuf.TestProtobufUtil&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4781//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13604129" author="lhofhansl" created="Sat, 16 Mar 2013 06:00:52 +0000"  >&lt;p&gt;Fixes for TestProtobufUtil.&lt;br/&gt;
This should be close to the final version. Please have a look.&lt;/p&gt;</comment>
                            <comment id="13604139" author="hadoopqa" created="Sat, 16 Mar 2013 07:11:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12573996/7801-0.96-full-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12573996/7801-0.96-full-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 153 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4847//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13604159" author="yuzhihong@gmail.com" created="Sat, 16 Mar 2013 07:58:52 +0000"  >&lt;p&gt;Can you take a look at the javadoc warnings ?&lt;/p&gt;

&lt;p&gt;Thanks, Lars. &lt;/p&gt;</comment>
                            <comment id="13604297" author="lhofhansl" created="Sat, 16 Mar 2013 15:10:05 +0000"  >&lt;p&gt;Of course. Will also look at the long line complaint.&lt;/p&gt;</comment>
                            <comment id="13604469" author="lhofhansl" created="Sun, 17 Mar 2013 00:52:02 +0000"  >&lt;p&gt;Should address javadoc and line length warning.&lt;/p&gt;</comment>
                            <comment id="13604476" author="hadoopqa" created="Sun, 17 Mar 2013 02:01:35 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574030/7801-0.96-full-v5.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574030/7801-0.96-full-v5.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 153 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4850//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13604493" author="lhofhansl" created="Sun, 17 Mar 2013 03:40:30 +0000"  >&lt;p&gt;Are generated filed (like ClientProtos.java) excluded from the long-line check?&lt;/p&gt;</comment>
                            <comment id="13604496" author="yuzhihong@gmail.com" created="Sun, 17 Mar 2013 04:00:02 +0000"  >&lt;p&gt;I don&apos;t think so:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  ll=`cat $PATCH_DIR/patch | grep &lt;span class=&quot;code-quote&quot;&gt;&quot;^+&quot;&lt;/span&gt; | grep -v &lt;span class=&quot;code-quote&quot;&gt;&quot;^@@&quot;&lt;/span&gt; | grep -v &lt;span class=&quot;code-quote&quot;&gt;&quot;^+++&quot;&lt;/span&gt; | grep -v &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt;&quot;&lt;/span&gt; | wc -L`
  MAX_LINE_LENGTH_PATCH=`expr $MAX_LINE_LENGTH + 1`
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;code-quote&quot;&gt;&quot;$ll&quot;&lt;/span&gt; -gt &lt;span class=&quot;code-quote&quot;&gt;&quot;$MAX_LINE_LENGTH_PATCH&quot;&lt;/span&gt; ]]; then
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13604498" author="lhofhansl" created="Sun, 17 Mar 2013 04:04:17 +0000"  >&lt;p&gt;Might be a good thing to add anyway.&lt;br/&gt;
The long lines left that I noticed were in ClientProtos.java. I&apos;ll double check the patch.&lt;/p&gt;</comment>
                            <comment id="13604499" author="yuzhihong@gmail.com" created="Sun, 17 Mar 2013 04:07:48 +0000"  >&lt;p&gt;I logged &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8129&quot; title=&quot;Enhance long line detection in patch testing by ignoring generated files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8129&quot;&gt;HBASE-8129&lt;/a&gt; for making long line detection smarter&lt;/p&gt;</comment>
                            <comment id="13606120" author="anoopsamjohn" created="Tue, 19 Mar 2013 06:44:44 +0000"  >&lt;p&gt;Gone through the latest Trunk Patch. Seems good to me. +1&lt;br/&gt;
It is not cleanly applying (Conflict with Hregion.java etc..)&lt;/p&gt;</comment>
                            <comment id="13606569" author="enis" created="Tue, 19 Mar 2013 17:39:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;Are generated filed (like ClientProtos.java) excluded from the long-line check?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I logged &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8129&quot; title=&quot;Enhance long line detection in patch testing by ignoring generated files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8129&quot;&gt;HBASE-8129&lt;/a&gt; for making long line detection smarter&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No, it is just a simple bash script. &lt;/p&gt;</comment>
                            <comment id="13606581" author="enis" created="Tue, 19 Mar 2013 17:48:51 +0000"  >&lt;p&gt;I think this is a good time to think about how are we going to add proper hsync support. Are you thinking smt like: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; WriteGuarantee {
  SKIP_WAL,
  ASYNC_WAL,
  SYNC_WAL,
  FSYNC_WAL,
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;How about SKIP_WAL, DEFERRED_SYNC_WAL, HFLUSH_WAL, HSYNC_WAL. Just my 2 cents, I am not so good at naming. &lt;/p&gt;</comment>
                            <comment id="13606602" author="lhofhansl" created="Tue, 19 Mar 2013 18:00:04 +0000"  >&lt;p&gt;Yeah I was wondering about this too. Not sure we want to leak the Hadoop nomenclature up here. I&apos;m not good at naming either.&lt;/p&gt;</comment>
                            <comment id="13606615" author="enis" created="Tue, 19 Mar 2013 18:11:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;Not sure we want to leak the Hadoop nomenclature up here.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We have to explain the semantics of hflush vs hsync somehow to the user. &lt;/p&gt;</comment>
                            <comment id="13607385" author="ram_krish" created="Wed, 20 Mar 2013 08:15:53 +0000"  >&lt;p&gt;Patch looks fine to me.  Did not check the testcases though.&lt;br/&gt;
If DefferedLogFlush is enabled in HTD and my mutation says ASYNC_WAL it will go with defferedLogFlush right?  Just for clarification.&lt;/p&gt;</comment>
                            <comment id="13607558" author="anoopsamjohn" created="Wed, 20 Mar 2013 12:44:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;If DefferedLogFlush is enabled in HTD and my mutation says ASYNC_WAL it will go with defferedLogFlush right? Just for clarification.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes&lt;/p&gt;

&lt;p&gt;When table is not having DefferedLogFlush set, if all the Mutations in a mini batch says for async flush, the flush will be deferred.&lt;/p&gt;</comment>
                            <comment id="13608302" author="enis" created="Wed, 20 Mar 2013 22:05:08 +0000"  >&lt;p&gt;Two more comments: &lt;br/&gt;
Should we rename WriteGuarantee -&amp;gt; Durability, as in ACID? WriteGuarantee is good enough, but Durability is well understood. Alternatively DurabilityGuarantee? &lt;/p&gt;

&lt;p&gt;In, &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void syncOrDefer(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; txid, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; syncRequested) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getRegionInfo().isMetaRegion()
+        || (!&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.htableDescriptor.isDeferredLogFlush() &amp;amp;&amp;amp; syncRequested)
+        || &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.deferredLogSyncDisabled) {
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.log.sync(txid);
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The logic seems to be that deferred flush in HDT overrides WriteGuarantee in Mutation. Is this intended? I think, semantically, it would be most user friendly, if &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Durability setting in Mutation always takes precedence&lt;/li&gt;
	&lt;li&gt;If no Durability setting in Mutation, the one in HTD takes into affect. This allows us to do sync mutations to otherwise deferred column families, and vice versa. This can be achieved, by defining a Durability setting in HTD (getting rid of current skipwal and deferred stuff), and defaulting it to SYNC_WAL. Mutation will have an optional Durability which defaults to null. Wdyt?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13624315" author="lhofhansl" created="Sat, 6 Apr 2013 03:36:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; Anoop had the same question above. I do think the column family setting should take precedence, unless we want rethink this completely. For example an option in the WriteGuarantee enum could be USE_DEFAULT, which would do whatever was setup for the CF.&lt;/p&gt;

&lt;p&gt;The CF should probably also have an option to avoid writing the WAL entries... But that&apos;s for another jira.&lt;/p&gt;</comment>
                            <comment id="13624342" author="lhofhansl" created="Sat, 6 Apr 2013 05:06:55 +0000"  >&lt;ul&gt;
	&lt;li&gt;Rebased patch&lt;/li&gt;
	&lt;li&gt;Introduces FSYNC (noop for now, does the same as SYNC)&lt;/li&gt;
	&lt;li&gt;Introduces USE_DEFAULT, to indicate to just use the CF&apos;s default setting&lt;/li&gt;
	&lt;li&gt;Renames WriteGuarantee to Durability&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Not tested at all, but it compiles.&lt;/p&gt;

&lt;p&gt;Please have a look. If the API is OK, I&apos;ll match that in the 0.94 patch.&lt;/p&gt;</comment>
                            <comment id="13624505" author="hadoopqa" created="Sat, 6 Apr 2013 21:25:13 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12577359/7801-0.96-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12577359/7801-0.96-v6.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 156 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.protobuf.TestProtobufUtil&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5163//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13624624" author="lhofhansl" created="Sun, 7 Apr 2013 03:54:53 +0000"  >&lt;p&gt;Fixed TestProtobufUtil&lt;/p&gt;</comment>
                            <comment id="13624701" author="hadoopqa" created="Sun, 7 Apr 2013 05:06:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12577426/7801-0.96-v7.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12577426/7801-0.96-v7.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 156 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5166//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13625133" author="lhofhansl" created="Mon, 8 Apr 2013 04:44:36 +0000"  >&lt;p&gt;Any comments on the latest patch? It should give us all the functionality with maximum future flexibility.&lt;/p&gt;</comment>
                            <comment id="13625134" author="anoop.hbase" created="Mon, 8 Apr 2013 04:46:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; I will see the patch today.&lt;/p&gt;</comment>
                            <comment id="13625953" author="enis" created="Mon, 8 Apr 2013 23:07:42 +0000"  >&lt;p&gt;API looks good. A couple of comments: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;There are still some places referring writeGuarantee, useWriteGuarantee, or wg. Could you please change those to be consistent.&lt;/li&gt;
	&lt;li&gt;We rely on Durability enum ordinals being in ascending sorted order in terms of their semantic guarantees. We should note this in the enum definitions. Does it make sense to allow more room in between? Just thinking out loud, fsync ack from majority of replicas, etc?&lt;/li&gt;
	&lt;li&gt;Durability.java need InterfaceAudience annotations.&lt;/li&gt;
	&lt;li&gt;Should we add some pointers in SYNC_WAL, and FSYNC_WAL javadocs to hflush, hsync semantics? It might be confusing to first time comers. Can do as a follow up.&lt;/li&gt;
	&lt;li&gt;Should BaseRowProcessor#useWriteGuarantee() return USE_DEFAULT? It is not used, but for documentation, and further reference.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="13626053" author="lhofhansl" created="Tue, 9 Apr 2013 01:06:09 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;. Expect a new patch today.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Does it make sense to allow more room in between?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If we use ordinals we should not need to reserve space. The PB enum items are never compared to each other, and for the client side enum only the relationship between the enum items matters, not their absolute positioning.&lt;/p&gt;</comment>
                            <comment id="13626231" author="lhofhansl" created="Tue, 9 Apr 2013 04:58:52 +0000"  >&lt;p&gt;New patch addressing (hopefully) Enis&apos; comments.&lt;/p&gt;</comment>
                            <comment id="13626882" author="enis" created="Tue, 9 Apr 2013 17:55:37 +0000"  >&lt;p&gt;Thanks Lars, this looks better. Could you please address these two as well: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Durability.java need InterfaceAudience annotations.&lt;/li&gt;
	&lt;li&gt;Should we add some pointers in SYNC_WAL, and FSYNC_WAL javadocs to hflush, hsync semantics? It might be confusing to first time comers.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13627046" author="lhofhansl" created="Tue, 9 Apr 2013 20:22:35 +0000"  >&lt;p&gt;I did add the InterfaceAudience... I must have forgotten to save the file before I took the diff, will add again, sorry. (I hope there weren&apos;t more changes I didn&apos;t save).&lt;/p&gt;

&lt;p&gt;Re: hflush and hsync, can&apos;t point to Hadoop Javadoc I think as this changed over the releases (Syncable only has hflush and hsync since hadoop 2.0)&lt;/p&gt;</comment>
                            <comment id="13627085" author="lhofhansl" created="Tue, 9 Apr 2013 20:47:32 +0000"  >&lt;p&gt;How about this?&lt;/p&gt;</comment>
                            <comment id="13627169" author="hadoopqa" created="Tue, 9 Apr 2013 21:57:34 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12577889/7801-0.96-v9.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12577889/7801-0.96-v9.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 156 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5226//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13627292" author="enis" created="Wed, 10 Apr 2013 00:04:25 +0000"  >&lt;p&gt;+1 from me, the API looks very good now. &lt;/p&gt;

&lt;p&gt;Just a note, below is technically incompatible, but we do not care I guess at this point. Actually using 6 is cleaner.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-  optional bool writeToWAL = 6 [&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;];
+  optional Durability durability = 6 [&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; = USE_DEFAULT];
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13627477" author="anoopsamjohn" created="Wed, 10 Apr 2013 05:06:20 +0000"  >&lt;p&gt;1.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] row = delete.getRow();
+      delete.getRow();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can avoid this line fully right? Good that u make some cleanup also. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;2.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; what CF defaults to
&lt;/span&gt; +  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!isDeferredLogSyncEnabled()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can say do what table defaults to?&lt;br/&gt;
Even here also&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; Durability {
+  /**
+   * Use the column family&apos;s &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; setting to determine durability.
+   * This must remain the first option.
+   */
+  USE_DEFAULT,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3.As per code in syncOrDefer() when all the Mutations in the Mini batch says for SKIP_WAL, we should not call the sync.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; SKIP_WAL:
+        &lt;span class=&quot;code-comment&quot;&gt;// nothing &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; to
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But see the code in doMiniBatchMutation()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      Durability durability = Durability.USE_DEFAULT;
...
+        Durability tmpDur = m.getDurability(); 
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tmpDur == Durability.SKIP_WAL) {
           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (m &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; Put) {
             recordPutWithoutWal(m.getFamilyMap());
           }
           &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
+        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tmpDur.ordinal() &amp;gt; durability.ordinal()) {
+          durability = tmpDur;
         }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is correct for not considering one Mutation&apos;s SKIP_WAL to affect with the USE_DEFAULT of others. But when all the Mutation say SKIP_WAL, still finally the durability = Durability.USE_DEFAULT and will cause a log sync?&lt;/p&gt;


&lt;p&gt;Excellent work Lars.&lt;/p&gt;</comment>
                            <comment id="13627502" author="lhofhansl" created="Wed, 10 Apr 2013 05:30:29 +0000"  >&lt;p&gt;Thanks Anoop.&lt;/p&gt;

&lt;p&gt;#1 yes&lt;br/&gt;
#2 Oops, you&apos;re right. It&apos;s per table. Will fix.&lt;br/&gt;
#3 That works, because later in doMiniBatchMutation we only call syncOrDefer if the WALEdit is not empty. But you are right, this can be made safer/easier-to-read if we track the durability even in that case.&lt;/p&gt;

&lt;p&gt;I&apos;m thinking about how I could test this. Would need to something like holding the async flush, and doing that on request in a test. That way one write a bunch, check that it&apos;s not in the log, then run the async flush, check again. Maybe for later.&lt;/p&gt;</comment>
                            <comment id="13627509" author="anoop.hbase" created="Wed, 10 Apr 2013 05:39:12 +0000"  >&lt;p&gt;#3 - Oh yes.. Sorry I missed that.. Ya readability wise it may be better to track this way. Up to you Lars to change or not &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;+1 on the patch&lt;/p&gt;</comment>
                            <comment id="13628494" author="lhofhansl" created="Thu, 11 Apr 2013 00:31:19 +0000"  >&lt;p&gt;Expect a (hopefully) final patch soon.&lt;/p&gt;</comment>
                            <comment id="13628508" author="enis" created="Thu, 11 Apr 2013 00:43:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m thinking about how I could test this. Would need to something like holding the async flush, and doing that on request in a test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If you plug in a mock hlog implementation, and do no-op in sync(), or do a latch there you might be able to do that. However, I suspect it can still get messy. &lt;/p&gt;</comment>
                            <comment id="13628631" author="lhofhansl" created="Thu, 11 Apr 2013 03:28:39 +0000"  >&lt;p&gt;Need to rebase the patch again. Grrr.&lt;/p&gt;</comment>
                            <comment id="13628633" author="lhofhansl" created="Thu, 11 Apr 2013 03:33:02 +0000"  >&lt;p&gt;I think I ran into the PB 2.5 vs 2.4.1 issue.&lt;/p&gt;</comment>
                            <comment id="13629424" author="lhofhansl" created="Thu, 11 Apr 2013 21:33:56 +0000"  >&lt;p&gt;Addressed Anoop&apos;s comment.&lt;br/&gt;
Also added a test (which turned out to be simple, only the optionallogflushinterval needed to increased in order to not interfere)&lt;/p&gt;</comment>
                            <comment id="13629508" author="hadoopqa" created="Thu, 11 Apr 2013 22:47:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12578283/7801-0.96-v10.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12578283/7801-0.96-v10.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 159 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestFullLogReconstruction&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5275//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13629586" author="lhofhansl" created="Thu, 11 Apr 2013 23:46:04 +0000"  >&lt;p&gt;Enis and Anoop +1&apos;d already (and I have only clarified the code and added a test since then).&lt;br/&gt;
If there are no objections I will commit this tomorrow.&lt;/p&gt;

&lt;p&gt;I would also like to have this client side API in 0.94 (but without the rest of the intrusive changes). Thinking about how to do that is backward and binary compatible way now.&lt;/p&gt;</comment>
                            <comment id="13629811" author="lhofhansl" created="Fri, 12 Apr 2013 05:33:38 +0000"  >&lt;p&gt;New API for 0.94.&lt;br/&gt;
Caveats:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;In 0.94 we still have HRegion.put(Put), which does not honor deferred sync, I did not fix that.&lt;/li&gt;
	&lt;li&gt;Because of that checkAndPut does not honor deferred sync either.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;These are existing problems.&lt;br/&gt;
This should be wire and binary compatible. Please have a close look.&lt;/p&gt;</comment>
                            <comment id="13630341" author="lhofhansl" created="Fri, 12 Apr 2013 17:07:28 +0000"  >&lt;p&gt;Committed to 0.95 and 0.98. Thanks for the reviews and the patience with me.&lt;/p&gt;</comment>
                            <comment id="13630503" author="lhofhansl" created="Fri, 12 Apr 2013 19:08:02 +0000"  >&lt;p&gt;Better Javadocs on Mutation (explaining the interaction of writeToWAL and durability). set/getWriteToWAL are now deprecated - they will be gone in 0.96.&lt;/p&gt;</comment>
                            <comment id="13630507" author="lhofhansl" created="Fri, 12 Apr 2013 19:09:38 +0000"  >&lt;p&gt;Please have a look at the 0.94 patch (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;).&lt;br/&gt;
I would like to commit this to 0.94.7... If you can&apos;t get to it or have concerns that&apos;s fine too, I&apos;ll move it to 0.94.8, or remove from 0.94.&lt;/p&gt;</comment>
                            <comment id="13630528" author="hudson" created="Fri, 12 Apr 2013 19:28:59 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4058 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4058/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4058/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; Allow a deferred sync option per Mutation. (Revision 1467357)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Delete.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Durability.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTablePool.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Put.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/MultiTableOutputFormat.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/thrift2/ThriftUtilities.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/Merge.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TimestampTestBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/catalog/TestMetaMigrationConvertingToPB.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestCloneSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultipleTimestamps.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestRestoreSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestTimestampsFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestBigDecimalColumnInterpreter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverBypass.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestColumnPrefixFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestColumnRangeFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestMultipleColumnPrefixFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTimeRangeMapRed.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TsvImporterCustomTestMapper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterTransitions.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/protobuf/TestProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/OOMERegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestColumnSeeking.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeepDeletes.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestResettingCounters.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestWideScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestDurability.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannerResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannersWithFilters.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/TestRestoreFlushSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestCoprocessorScanPolicy.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestMergeTable.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13630621" author="yuzhihong@gmail.com" created="Fri, 12 Apr 2013 21:02:46 +0000"  >&lt;p&gt;In &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Durability valueOf(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; ordinal) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should exception be raised above ? Otherwise we would see NPE somewhere else.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * Note that the items must be sorted in order of increasing durability
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So the durability of SKIP_WAL is higher than that of USE_DEFAULT ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          Durability tmpDur = m.getDurability(); 
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tmpDur.ordinal() &amp;gt; durability.ordinal()) {
+            durability = tmpDur;
+          }
           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (m.getWriteToWAL()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should the m.getWriteToWAL() call be replaced with m.getDurability() ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; SYNC_WAL:
+      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; FSYNC_WAL:
+        &lt;span class=&quot;code-comment&quot;&gt;// sync the WAL edit (SYNC and FSYNC treated the same &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; now)
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.log.sync(txid);
+        &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Minor: it would be easier to maintain if the above two conditions are separated, with same this.log.sync(txid) call.&lt;/p&gt;</comment>
                            <comment id="13630645" author="hudson" created="Fri, 12 Apr 2013 21:25:34 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #495 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/495/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/495/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; Allow a deferred sync option per Mutation. (Revision 1467357)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Delete.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Durability.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTablePool.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Put.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/MultiTableOutputFormat.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/thrift2/ThriftUtilities.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/Merge.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TimestampTestBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/catalog/TestMetaMigrationConvertingToPB.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestCloneSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultipleTimestamps.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestRestoreSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestTimestampsFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestBigDecimalColumnInterpreter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverBypass.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestColumnPrefixFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestColumnRangeFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestMultipleColumnPrefixFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTimeRangeMapRed.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TsvImporterCustomTestMapper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterTransitions.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/protobuf/TestProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/OOMERegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestColumnSeeking.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeepDeletes.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestResettingCounters.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestWideScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestDurability.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannerResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannersWithFilters.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/TestRestoreFlushSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestCoprocessorScanPolicy.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestMergeTable.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13630648" author="yuzhihong@gmail.com" created="Fri, 12 Apr 2013 21:25:37 +0000"  >&lt;p&gt;I ran 0.94 test suite with patch and all clear.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; ASYNC_WAL:
+        &lt;span class=&quot;code-comment&quot;&gt;// defer the sync, unless we globally can&apos;t
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.deferredLogSyncDisabled) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we should add to javadoc for ASYNC_WAL that table descriptor setting is not considered.&lt;/p&gt;</comment>
                            <comment id="13630732" author="lhofhansl" created="Fri, 12 Apr 2013 23:05:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt; Thanks for looking.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should exception be raised above ? Otherwise we would see NPE somewhere else.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep... I&apos;ll change that. What Exception would be best here?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So the durability of SKIP_WAL is higher than that of USE_DEFAULT ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It also says that USE_DEFAULT needs to be the first one, I think the wording is fine, unless you think it should be clarified.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should the m.getWriteToWAL() call be replaced with m.getDurability() ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Could use tmpDur here. My intend was to keep the patch as small as possible. I&apos;ll change that.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Minor: it would be easier to maintain if the above two conditions are separated, with same this.log.sync(txid) call.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Personally, I find it more readable this way. It documents clearly in the code that these two are aliases.&lt;/p&gt;

&lt;p&gt;Will post a new patch later today.&lt;/p&gt;</comment>
                            <comment id="13630738" author="yuzhihong@gmail.com" created="Fri, 12 Apr 2013 23:10:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;What Exception would be best here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;How about IllegalArgumentException ?&lt;/p&gt;</comment>
                            <comment id="13630739" author="jeffreyz" created="Fri, 12 Apr 2013 23:10:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Today, I happened to work on Mutation.java and found that Mutation#MUTATION_OVERHEAD is off. The reason that TestHeapSize#testMutations can pass is due to we still leave old &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// writeToWAL
&lt;/span&gt;      Bytes.SIZEOF_BOOLEAN
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; there. The one byte later is round up to 8 bytes which is matching the newly added field durability which is a reference and has 8 bytes in len. Below are detailed dump for the Mutation:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
013-04-12 15:33:40,902 DEBUG [main] util.ClassSize(246): 0 row class [B
2013-04-12 15:33:40,903 DEBUG [main] util.ClassSize(246): 1 ts &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;
2013-04-12 15:33:40,903 DEBUG [main] util.ClassSize(246): 2 durability class org.apache.hadoop.hbase.client.Durability
2013-04-12 15:33:40,903 DEBUG [main] util.ClassSize(246): 3 familyMap &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; java.util.NavigableMap
2013-04-12 15:33:40,903 DEBUG [main] util.ClassSize(246): 4 attributes &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; java.util.Map
2013-04-12 15:33:40,903 DEBUG [main] util.ClassSize(273): Primitives=8, arrays=1, references(includes 2 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; object overhead)=6, refSize 8, size=80, prealign_size=80
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I attached an addendum for your references.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
-Jeffrey &lt;/p&gt;</comment>
                            <comment id="13630787" author="lhofhansl" created="Sat, 13 Apr 2013 00:01:44 +0000"  >&lt;p&gt;Oops. Thanks Jeffrey, will commit addendum ASAP.&lt;/p&gt;</comment>
                            <comment id="13630790" author="lhofhansl" created="Sat, 13 Apr 2013 00:03:41 +0000"  >&lt;p&gt;Committed addendum. Thanks again Jeffrey.&lt;/p&gt;</comment>
                            <comment id="13630885" author="hudson" created="Sat, 13 Apr 2013 02:43:49 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #67 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/67/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/67/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; Addendum - fix Mutation size (Revision 1467521)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; Allow a deferred sync option per Mutation. (Revision 1467356)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Delete.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Durability.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTablePool.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Put.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/constraint/ConstraintProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/MultiTableOutputFormat.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/thrift2/ThriftUtilities.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/util/Merge.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/PerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/TimestampTestBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/catalog/TestMetaMigrationConvertingToPB.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestCloneSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultipleTimestamps.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestRestoreSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestTimestampsFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestBigDecimalColumnInterpreter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverBypass.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestColumnPrefixFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestColumnRangeFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestMultipleColumnPrefixFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTimeRangeMapRed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/mapreduce/TsvImporterCustomTestMapper.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterTransitions.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/protobuf/TestProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/OOMERegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestColumnSeeking.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestKeepDeletes.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerMetrics.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestResettingCounters.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestWideScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestDurability.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannerResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestScannersWithFilters.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/rest/TestTableResource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/TestRestoreFlushSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestCoprocessorScanPolicy.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestMergeTable.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13630910" author="hudson" created="Sat, 13 Apr 2013 03:07:58 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #496 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/496/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/496/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; Addendum - fix Mutation size (Revision 1467522)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13630930" author="lhofhansl" created="Sat, 13 Apr 2013 04:40:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think we should add to javadoc for ASYNC_WAL that table descriptor setting is not considered.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think you misunderstand the setting. That&apos;s the case that Anoop needs where the deferred log flusher is disabled completely. In the case we also do not honor the table&apos;s settings, but flush everything synchronously, since otherwise it will never get flushed. In that case the RegionServer will log a warning on startup.&lt;/p&gt;</comment>
                            <comment id="13630936" author="lhofhansl" created="Sat, 13 Apr 2013 04:52:59 +0000"  >&lt;p&gt;Patch address (some of) Ted&apos;s comments.&lt;br/&gt;
I think this should be good to go... If we&apos;re OK with putting this into 0.94.&lt;/p&gt;</comment>
                            <comment id="13630940" author="lhofhansl" created="Sat, 13 Apr 2013 05:15:24 +0000"  >&lt;p&gt;Here&apos;s a list of changes I deliberately avoided in the 0.94 patch to keep it small and low risk:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Changing the coprocessor signature. The pre/post hooks still get only a boolean indicating whether the entry written to the WAL or not&lt;/li&gt;
	&lt;li&gt;Make HRegion.interalPut honor deferred sync. Currently internalPut does not honor this at all (not even when set on the Table); it is use for checkAndPut. This patch does not fix that.&lt;/li&gt;
	&lt;li&gt;cleanup the Increment/Appand method signatures. These receive an Append (or Increment) and also a writeToWAL boolean, even though the Append/Increment have that boolean already.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If we wanted to change any of these, it should be a separate jira.&lt;/p&gt;</comment>
                            <comment id="13630942" author="hudson" created="Sat, 13 Apr 2013 05:21:28 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4060 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4060/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4060/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; Addendum - fix Mutation size (Revision 1467522)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13631042" author="yuzhihong@gmail.com" created="Sat, 13 Apr 2013 13:38:37 +0000"  >&lt;p&gt;@Lars:&lt;br/&gt;
Can you update release notes for this JIRA ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13631108" author="ram_krish" created="Sat, 13 Apr 2013 17:47:42 +0000"  >&lt;p&gt;Patch looks good.  The changes that you have not done for 0.94 makes sense.&lt;/p&gt;</comment>
                            <comment id="13631424" author="lhofhansl" created="Sun, 14 Apr 2013 23:35:03 +0000"  >&lt;p&gt;Going to commit to 0.94 today or tomorrow, unless I hear objections. Since we had discussions about adding feaures to 0.94, please be vocal.&lt;/p&gt;

&lt;p&gt;At Salesforce we need this to do be able to seed a table with data from another system (and still allow that this is eventually replicated to a replication slave) and then allow further incremental updates with synchronous WAL sync.&lt;/p&gt;</comment>
                            <comment id="13631429" author="yuzhihong@gmail.com" created="Sun, 14 Apr 2013 23:52:26 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Durability getDurability() {
+    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] attr = getAttribute(DURABILITY_ID_ATTR);
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (attr == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; writeToWAL ? Durability.USE_DEFAULT : Durability.SKIP_WAL;
+    }
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; Durability.valueOf(Bytes.toInt(attr));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is it possible that &quot;&lt;em&gt;d.id&lt;/em&gt;&quot; has been used by certain user code ? Should exception from Durability.valueOf() be caught so that we can check the value of writeToWAL ?&lt;/p&gt;</comment>
                            <comment id="13631476" author="lhofhansl" created="Mon, 15 Apr 2013 03:24:59 +0000"  >&lt;p&gt;We have a silent agreement that attributes starting with _ are for internal use only (same for the cluster id), I agree that that should have been documented somewhere.&lt;/p&gt;

&lt;p&gt;As for catching the exception... Not sure what we should do in this case, other than throwing an Exception. Or you mean you want to catch and ignore it and then check the value of writeToWAL? Could do that too, but it seems a bit overkill. I&apos;d rather know in the client code if there&apos;s something wrong the enum.&lt;/p&gt;</comment>
                            <comment id="13631482" author="yuzhihong@gmail.com" created="Mon, 15 Apr 2013 04:02:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d rather know in the client code if there&apos;s something wrong the enum.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;doMiniBatchMutation() is called inside HRegion which is in region server. I think we should be a bit protective.&lt;/p&gt;</comment>
                            <comment id="13631497" author="lhofhansl" created="Mon, 15 Apr 2013 04:45:52 +0000"  >&lt;p&gt;Hmm... So translate to a DoNotRetryIOException at the server?&lt;/p&gt;</comment>
                            <comment id="13631721" author="yuzhihong@gmail.com" created="Mon, 15 Apr 2013 13:39:28 +0000"  >&lt;p&gt;We can either throw IOException at the server or, fall back to checking the value of writeToWAL.&lt;/p&gt;</comment>
                            <comment id="13631805" author="lhofhansl@yahoo.com" created="Mon, 15 Apr 2013 15:40:18 +0000"  >&lt;p&gt;Neither is ideal. Which would you prefer?&lt;/p&gt;

</comment>
                            <comment id="13631813" author="yuzhihong@gmail.com" created="Mon, 15 Apr 2013 16:07:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;fall back to checking the value of writeToWAL.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Before the ideal solution is found, I prefer the above.&lt;/p&gt;</comment>
                            <comment id="13631892" author="lhofhansl@yahoo.com" created="Mon, 15 Apr 2013 17:18:13 +0000"  >&lt;p&gt;Alright will have a new patch soon.&lt;/p&gt;

</comment>
                            <comment id="13631975" author="lhofhansl" created="Mon, 15 Apr 2013 18:22:58 +0000"  >&lt;p&gt;How about this?&lt;br/&gt;
(Both Durability.valueOf(int) and Bytes.toInt(byte[]) throw IllegalArgumentException.&lt;/p&gt;</comment>
                            <comment id="13631982" author="yuzhihong@gmail.com" created="Mon, 15 Apr 2013 18:26:07 +0000"  >&lt;p&gt;Looks good to me.&lt;/p&gt;

&lt;p&gt;Thanks for the perseverance, Lars.&lt;/p&gt;</comment>
                            <comment id="13632014" author="lhofhansl@yahoo.com" created="Mon, 15 Apr 2013 18:45:52 +0000"  >&lt;p&gt;Cool. Committed to 0.94 as well.&lt;br/&gt;
Thanks for the reviews!&lt;/p&gt;</comment>
                            <comment id="13632515" author="hudson" created="Tue, 16 Apr 2013 02:53:22 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #961 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/961/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/961/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; Allow a deferred sync option per Mutation. (Revision 1468179)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/Durability.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestDurability.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13632707" author="hudson" created="Tue, 16 Apr 2013 09:44:43 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #137 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/137/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/137/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7801&quot; title=&quot;Allow a deferred sync option per Mutation.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7801&quot;&gt;&lt;del&gt;HBASE-7801&lt;/del&gt;&lt;/a&gt; Allow a deferred sync option per Mutation. (Revision 1468179)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/Durability.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestDurability.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12632535">HBASE-7855</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12660795">HBASE-9093</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12655723">HBASE-8848</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12569113" name="7801-0.94-v1.txt" size="2461" author="lhofhansl" created="Wed, 13 Feb 2013 00:15:23 +0000"/>
                            <attachment id="12569694" name="7801-0.94-v2.txt" size="4890" author="lhofhansl" created="Sat, 16 Feb 2013 23:56:39 +0000"/>
                            <attachment id="12571148" name="7801-0.94-v3.txt" size="7337" author="lhofhansl" created="Wed, 27 Feb 2013 07:00:04 +0000"/>
                            <attachment id="12578366" name="7801-0.94-v4.txt" size="15458" author="lhofhansl" created="Fri, 12 Apr 2013 05:33:38 +0000"/>
                            <attachment id="12578485" name="7801-0.94-v5.txt" size="16248" author="lhofhansl" created="Fri, 12 Apr 2013 19:08:02 +0000"/>
                            <attachment id="12578582" name="7801-0.94-v6.txt" size="16373" author="lhofhansl" created="Sat, 13 Apr 2013 04:52:59 +0000"/>
                            <attachment id="12578768" name="7801-0.94-v7.txt" size="16849" author="lhofhansl" created="Mon, 15 Apr 2013 18:22:58 +0000"/>
                            <attachment id="12572955" name="7801-0.96-full-v2.txt" size="152124" author="lhofhansl" created="Sun, 10 Mar 2013 08:24:41 +0000"/>
                            <attachment id="12573393" name="7801-0.96-full-v3.txt" size="154147" author="lhofhansl" created="Tue, 12 Mar 2013 19:06:38 +0000"/>
                            <attachment id="12573996" name="7801-0.96-full-v4.txt" size="153614" author="lhofhansl" created="Sat, 16 Mar 2013 06:00:52 +0000"/>
                            <attachment id="12574030" name="7801-0.96-full-v5.txt" size="156120" author="lhofhansl" created="Sun, 17 Mar 2013 00:52:02 +0000"/>
                            <attachment id="12569695" name="7801-0.96-v1.txt" size="6072" author="lhofhansl" created="Sat, 16 Feb 2013 23:58:56 +0000"/>
                            <attachment id="12578283" name="7801-0.96-v10.txt" size="166149" author="lhofhansl" created="Thu, 11 Apr 2013 21:33:56 +0000"/>
                            <attachment id="12577359" name="7801-0.96-v6.txt" size="159880" author="lhofhansl" created="Sat, 6 Apr 2013 05:06:55 +0000"/>
                            <attachment id="12577426" name="7801-0.96-v7.txt" size="159904" author="lhofhansl" created="Sun, 7 Apr 2013 03:54:53 +0000"/>
                            <attachment id="12577705" name="7801-0.96-v8.txt" size="159718" author="lhofhansl" created="Tue, 9 Apr 2013 04:58:52 +0000"/>
                            <attachment id="12577889" name="7801-0.96-v9.txt" size="159613" author="lhofhansl" created="Tue, 9 Apr 2013 20:47:32 +0000"/>
                            <attachment id="12578539" name="hbase-7801-addendum.patch" size="854" author="jeffreyz" created="Fri, 12 Apr 2013 23:10:58 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 9 Feb 2013 21:27:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>312065</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 35 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1hurb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>312411</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>HBase clients from 0.94.7 going forward support the following new API for Mutations (Put/Delete/Append/Increment).&lt;br/&gt;
Mutation.setDurability(Durability). Possible durability settings are: USE_DEFAULT (use whatever the table has been configured with), SKIP_WAL (do not write anything to the WAL), ASYNC_WAL (write to the WAL asynchronously), SYNC (write to the WAL synchrously), FSYNC (write to the WAL synchronously and force to disc everywhere - currently not supported).&lt;br/&gt;
&lt;br/&gt;
Regionservers prior to 0.94.7 with ignore anything but SKIP_WAL and assume USE_DEFAULT.&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>