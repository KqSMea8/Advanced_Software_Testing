<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:58:37 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2058/HBASE-2058.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2058] Coprocessors: CPU and memory limit policy enforcment via runtime weaving</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2058</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Use the ASM bytecode analysis and rewriting engine to impose some constraints on CPU and memory use. This is middle ground between arbitrary function and a locked down language.&lt;/p&gt;

&lt;p&gt;We will be given arbitrary bytecode input. It is acceptable to reject a class and abort coprocessor loading if it defies analysis at load time such that we have insufficient confidence about the result.&lt;/p&gt;

&lt;p&gt;Wrap allocations to simply disallow large allocations. Hook or add finalizers to keep a running tally of aggregate heap charge. Disallow allocation beyond policy limit.&lt;/p&gt;

&lt;p&gt;Weave CPU usage tracking into loop headers. Throw an uncatchable exception if time limits prescribed by policy are exceeded.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12443810">HBASE-2058</key>
            <summary>Coprocessors: CPU and memory limit policy enforcment via runtime weaving</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="7">Later</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Dec 2009 21:44:23 +0000</created>
                <updated>Thu, 15 Dec 2011 21:33:54 +0000</updated>
                            <resolved>Thu, 15 Dec 2011 21:33:53 +0000</resolved>
                                                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12971038" author="apurtell" created="Mon, 13 Dec 2010 21:07:56 +0000"  >&lt;p&gt;JANINO is an embeddable Java complier and claims to support static code analysis via a visitor and code manipulation through allowing manipulation of the AST built during parse of source file.  JANINO: &lt;a href=&quot;http://docs.codehaus.org/display/JANINO/Home&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.codehaus.org/display/JANINO/Home&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For manipulating bytecode instead of Java source, the ASM framework can be used: &lt;a href=&quot;http://asm.ow2.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://asm.ow2.org/&lt;/a&gt; . ASM can be used to modify existing classes or dynamically generate classes, directly in binary form. &lt;/p&gt;

&lt;p&gt;JANINO may allow us to create private environments for loading and then unloading Java code. Shame it seems to require compilation from Java source to do so. If all you have is bytecode, then ASM is required. &lt;/p&gt;
</comment>
                            <comment id="13170506" author="apurtell" created="Thu, 15 Dec 2011 21:33:54 +0000"  >&lt;p&gt;I suspect that given the available option of external coprocessor hosts (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4047&quot; title=&quot;[Coprocessors] Generic external process host&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4047&quot;&gt;HBASE-4047&lt;/a&gt;), which enables things like resource reservation and limits via cgroups or similar OS-level facilities, there will never be sufficient impetus to undertake the difficult and research-y work described in this issue. But, marking as later as opposed to closing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32389</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 1 week ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hgav:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99903</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>