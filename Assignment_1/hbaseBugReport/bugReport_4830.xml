<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:22:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4830/HBASE-4830.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4830] Regionserver BLOCKED on WAITING DFSClient$DFSOutputStream.waitForAckedSeqno running 0.20.205.0+</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4830</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Running 0.20.205.1 (I was not at tip of the branch) I ran into the following hung regionserver:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;regionserver7003.logRoller&quot;&lt;/span&gt; daemon prio=10 tid=0x00007fd98028f800 nid=0x61af in &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [0x00007fd987bfa000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (on object monitor)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.java:485)
        at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.waitForAckedSeqno(DFSClient.java:3606)
        - locked &amp;lt;0x00000000f8656788&amp;gt; (a java.util.LinkedList)
        at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.flushInternal(DFSClient.java:3595)
        at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.closeInternal(DFSClient.java:3687)
        - locked &amp;lt;0x00000000f8656458&amp;gt; (a org.apache.hadoop.hdfs.DFSClient$DFSOutputStream)
        at org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.close(DFSClient.java:3626)
        at org.apache.hadoop.fs.FSDataOutputStream$PositionCache.close(FSDataOutputStream.java:61)
        at org.apache.hadoop.fs.FSDataOutputStream.close(FSDataOutputStream.java:86)
        at org.apache.hadoop.io.SequenceFile$Writer.close(SequenceFile.java:966)
        - locked &amp;lt;0x00000000f8655998&amp;gt; (a org.apache.hadoop.io.SequenceFile$Writer)
        at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogWriter.close(SequenceFileLogWriter.java:214)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.cleanupCurrentWriter(HLog.java:791)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.rollWriter(HLog.java:578)
        - locked &amp;lt;0x00000000c443deb0&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at org.apache.hadoop.hbase.regionserver.LogRoller.run(LogRoller.java:94)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;Other threads are like this (here&apos;s a sample):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

&lt;span class=&quot;code-quote&quot;&gt;&quot;regionserver7003.logSyncer&quot;&lt;/span&gt; daemon prio=10 tid=0x00007fd98025e000 nid=0x61ae waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; monitor entry [0x00007fd987cfb000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: BLOCKED (on object monitor)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.syncer(HLog.java:1074)
        - waiting to lock &amp;lt;0x00000000c443deb0&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.sync(HLog.java:1195)
        at org.apache.hadoop.hbase.regionserver.wal.HLog$LogSyncer.run(HLog.java:1057)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)

....

&lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Server handler 0 on 7003&quot;&lt;/span&gt; daemon prio=10 tid=0x00007fd98049b800 nid=0x61b8 waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; monitor entry [0x00007fd9872f1000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: BLOCKED (on object monitor)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.append(HLog.java:1007)
        - waiting to lock &amp;lt;0x00000000c443deb0&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
        at org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchPut(HRegion.java:1798)
        at org.apache.hadoop.hbase.regionserver.HRegion.put(HRegion.java:1668)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.multi(HRegionServer.java:2980)
        at sun.reflect.GeneratedMethodAccessor636.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.hbase.ipc.WritableRpcEngine$Server.call(WritableRpcEngine.java:364)
        at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1325)

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looks like &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-1529&quot; title=&quot;Incorrect handling of interrupts in waitForAckedSeqno can cause deadlock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-1529&quot;&gt;&lt;del&gt;HDFS-1529&lt;/del&gt;&lt;/a&gt;?  (Todd?)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12532069">HBASE-4830</key>
            <summary>Regionserver BLOCKED on WAITING DFSClient$DFSOutputStream.waitForAckedSeqno running 0.20.205.0+</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Sat, 19 Nov 2011 23:09:04 +0000</created>
                <updated>Wed, 9 Dec 2015 06:11:19 +0000</updated>
                            <resolved>Tue, 22 Nov 2011 01:07:10 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13153622" author="stack" created="Sat, 19 Nov 2011 23:42:46 +0000"  >&lt;p&gt;Hmmm... looks like I had an OOME first (Running w/ 1G/Default heap).&lt;/p&gt;</comment>
                            <comment id="13153624" author="stack" created="Sat, 19 Nov 2011 23:45:49 +0000"  >&lt;p&gt;Two thread dumps of hung regionserver&lt;/p&gt;</comment>
                            <comment id="13153638" author="tlipcon" created="Sun, 20 Nov 2011 01:37:44 +0000"  >&lt;p&gt;Yea, I&apos;m guessing this was a result of the OOME rather than any known HDFS bug. Whatever that assertion failure was in DFSClient probably borked the internal queues to some inconsistent state.&lt;/p&gt;</comment>
                            <comment id="13153977" author="stack" created="Mon, 21 Nov 2011 04:29:22 +0000"  >&lt;p&gt;Thanks Todd.&lt;/p&gt;

&lt;p&gt;Here&apos;s the OOME out in IPC:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Reader 8 on port 7003&quot;&lt;/span&gt; java.lang.OutOfMemoryError: Java heap space
	at java.nio.HeapByteBuffer.&amp;lt;init&amp;gt;(HeapByteBuffer.java:39)
	at java.nio.ByteBuffer.allocate(ByteBuffer.java:312)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Connection.readAndProcess(HBaseServer.java:1157)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Listener.doRead(HBaseServer.java:703)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Listener$Reader.doRunLoop(HBaseServer.java:495)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Listener$Reader.run(HBaseServer.java:470)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Because it happened out here we don&apos;t get benefit of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4769&quot; title=&quot;Abort RegionServer Immediately on OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4769&quot;&gt;&lt;del&gt;HBASE-4769&lt;/del&gt;&lt;/a&gt; and abort immediately.  Need a fix so we abort immediately instead of hang around in zombie mode as this server was doing.&lt;/p&gt;</comment>
                            <comment id="13154004" author="tlipcon" created="Mon, 21 Nov 2011 06:09:40 +0000"  >&lt;p&gt;We could ship with a config &quot;-XX:OnOutOfMemoryError=kill -9 %p&quot; or whatever that trick is...&lt;/p&gt;</comment>
                            <comment id="13154476" author="stack" created="Mon, 21 Nov 2011 20:41:59 +0000"  >&lt;p&gt;Todd&apos;s suggestion.  Testing it actually works.&lt;/p&gt;</comment>
                            <comment id="13154483" author="yuzhihong@gmail.com" created="Mon, 21 Nov 2011 20:45:32 +0000"  >&lt;p&gt;+1 on patch.&lt;br/&gt;
Minor comment: we may not need the braces for $&lt;/p&gt;
{HBASE_ON_OOME}
&lt;p&gt; - the other variable references don&apos;t use braces.&lt;/p&gt;</comment>
                            <comment id="13154768" author="stack" created="Tue, 22 Nov 2011 00:29:45 +0000"  >&lt;p&gt;Here is a patch that actually works.  The attached patch looks good but then when the JVM goes to execute it, the command is double quoted and doesn&apos;t work.  I messed around w/ this a bunch and its hard to have it so the -9 in kill -9 is not interpreted as a jvm arg.&lt;/p&gt;

&lt;p&gt;This next patch I&apos;ve tested and it successfully stops the JVM in its tracks.  The .log stops abruptly and the .out has:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
#
# java.lang.OutOfMemoryError: Java heap space
# -XX:OnOutOfMemoryError=&lt;span class=&quot;code-quote&quot;&gt;&quot;kill -9 %p&quot;&lt;/span&gt;
#   Executing /bin/sh -c &lt;span class=&quot;code-quote&quot;&gt;&quot;kill -9 31572&quot;&lt;/span&gt;...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;.. going to commit.&lt;/p&gt;</comment>
                            <comment id="13154866" author="hudson" created="Tue, 22 Nov 2011 04:40:26 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #158 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/158/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/158/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4830&quot; title=&quot;Regionserver BLOCKED on WAITING DFSClient$DFSOutputStream.waitForAckedSeqno running 0.20.205.0+&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4830&quot;&gt;&lt;del&gt;HBASE-4830&lt;/del&gt;&lt;/a&gt; Regionserver BLOCKED on WAITING DFSClient$DFSOutputStream.waitForAckedSeqno running 0.20.205.0+&lt;/p&gt;

&lt;p&gt;stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/bin/hbase&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13154951" author="hudson" created="Tue, 22 Nov 2011 08:35:19 +0000"  >&lt;p&gt;Integrated in HBase-0.92-security #6 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92-security/6/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92-security/6/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4830&quot; title=&quot;Regionserver BLOCKED on WAITING DFSClient$DFSOutputStream.waitForAckedSeqno running 0.20.205.0+&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4830&quot;&gt;&lt;del&gt;HBASE-4830&lt;/del&gt;&lt;/a&gt; Regionserver BLOCKED on WAITING DFSClient$DFSOutputStream.waitForAckedSeqno running 0.20.205.0+&lt;/p&gt;

&lt;p&gt;stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/bin/hbase&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15015858" author="lars_francke" created="Fri, 20 Nov 2015 11:52:54 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                            <comment id="15046571" author="carp84" created="Tue, 8 Dec 2015 08:26:30 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; two of our online machines met with OOME and aborted by this &lt;tt&gt;-XX:OnOutOfMemoryError=&quot;kill -9 %p&quot;&lt;/tt&gt; config and the error message was chopped in the .out file and nothing (stacktrace or anything for debug) left in .log file. Below is the content of our .out file:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;/home/hadoop/hadoop_hbase/hbase-online/bin/hbase-daemon.sh: line 216: 217101 Killed                  nice -n $HBASE_NICENESS &quot;$HBASE_HOME&quot;/bin/hbase --config &quot;${HBASE_CONF_DIR}&quot; $command &quot;$@&quot; start &amp;gt;&amp;gt; ${HBASE_LOGOUT} 2&amp;gt;&amp;amp;1
eeds VM limit
# -XX:OnOutOfMemoryError=&quot;kill -9 %p&quot;
#   Executing /bin/sh -c &quot;kill -9 217101&quot;...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;From which I could only guess the cause of OOME is &quot;Requested array size exceeds VM limit&quot; and have no way to debug it.&lt;/p&gt;

&lt;p&gt;So my question is that from maintenance perspective, is it better to kill -9 when OOME happens or to leave the hang RS there for trouble shooting? Is the &quot;kill -9&quot; config for making HMaster detects the RS failure more quickly thus reducing recovery time? Thanks.&lt;/p&gt;

&lt;p&gt;btw, checking the JVM source, JVM will fork a process to execute the kill -9 command before printing error stacktrace, see line 160~182 of &lt;a href=&quot;http://hg.openjdk.java.net/jdk7u/jdk7u/hotspot/file/d61a34c5c764/src/share/vm/gc_interface/collectedHeap.inline.hpp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;collectedHeap.inline.hpp&lt;/a&gt; and end lines of &lt;a href=&quot;http://hg.openjdk.java.net/jdk7u/jdk7u/hotspot/file/d61a34c5c764/src/share/vm/utilities/vmError.cpp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;vmError.cpp&lt;/a&gt;. Below is an excerpt:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;


  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!gc_overhead_limit_was_exceeded) {
    &lt;span class=&quot;code-comment&quot;&gt;// -XX:+HeapDumpOnOutOfMemoryError and -XX:OnOutOfMemoryError support
&lt;/span&gt;    report_java_out_of_memory(&lt;span class=&quot;code-quote&quot;&gt;&quot;Java heap space&quot;&lt;/span&gt;);

    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (JvmtiExport::should_post_resource_exhausted()) {
      JvmtiExport::post_resource_exhausted(
        JVMTI_RESOURCE_EXHAUSTED_OOM_ERROR | JVMTI_RESOURCE_EXHAUSTED_JAVA_HEAP,
        &lt;span class=&quot;code-quote&quot;&gt;&quot;Java heap space&quot;&lt;/span&gt;);
    }

    THROW_OOP_0(Universe::out_of_memory_error_java_heap());
  } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;code-comment&quot;&gt;// -XX:+HeapDumpOnOutOfMemoryError and -XX:OnOutOfMemoryError support
&lt;/span&gt;    report_java_out_of_memory(&lt;span class=&quot;code-quote&quot;&gt;&quot;GC overhead limit exceeded&quot;&lt;/span&gt;);

    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (JvmtiExport::should_post_resource_exhausted()) {
      JvmtiExport::post_resource_exhausted(
        JVMTI_RESOURCE_EXHAUSTED_OOM_ERROR | JVMTI_RESOURCE_EXHAUSTED_JAVA_HEAP,
        &lt;span class=&quot;code-quote&quot;&gt;&quot;GC overhead limit exceeded&quot;&lt;/span&gt;);
    }

    THROW_OOP_0(Universe::out_of_memory_error_gc_overhead_limit());
  }
}

void VMError::report_java_out_of_memory() {
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (OnOutOfMemoryError &amp;amp;&amp;amp; OnOutOfMemoryError[0]) {
    MutexLocker ml(Heap_lock);
    VM_ReportJavaOutOfMemory op(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
    VMThread::execute(&amp;amp;op);
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15048111" author="stack" created="Wed, 9 Dec 2015 06:11:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is the &quot;kill -9&quot; config for making HMaster detects the RS failure more quickly thus reducing recovery time? Thanks.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It is there because we are hosed when we get an OOME. In the past the RS could hang around lame after getting an OOME or keep going in a damaged state. The KILL was to address both cases.&lt;/p&gt;

&lt;p&gt;We use to dump the heap on OOME but that resulted in filled disks. Could you do this on your cluster for a while so you can catch a heap when it OOMEs so you can peruse after the fact?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;From which I could only guess the cause of OOME is &quot;Requested array size exceeds VM limit&quot; and have no way to debug it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Or, if it is above, that sounds like a program error where we came up with a negative number allocating an array?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12504681" name="4830-v2.txt" size="584" author="stack" created="Tue, 22 Nov 2011 00:31:21 +0000"/>
                            <attachment id="12504549" name="4830.txt" size="1359" author="stack" created="Mon, 21 Nov 2011 20:41:59 +0000"/>
                            <attachment id="12504405" name="hbase-stack-regionserver-sv4r9s38.out" size="68074" author="stack" created="Sat, 19 Nov 2011 23:45:48 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 20 Nov 2011 01:37:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>217805</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 1 week, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hsbr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101851</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>