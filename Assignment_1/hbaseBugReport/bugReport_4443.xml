<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:18:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4443/HBASE-4443.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4443] optimize/avoid seeking to &quot;previous&quot; block when key you are interested in is the first one of a block</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4443</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This issue primarily affects cases when you are storing large blobs, i.e. when blocks contain small number of keys, and the chances of the key you are looking for being the first block of a key is higher.&lt;/p&gt;

&lt;p&gt;Say, you are looking for &quot;row/col&quot;, and &quot;row/col/ts=5&quot; is the latest version of the key in the HFile and is at the beginning of block X.&lt;/p&gt;

&lt;p&gt;The search for the key is done by looking for &quot;row/col/TS=Long.MAX_VAL&quot;, but this will land us in block X-1 (because ts=Long.MAX_VAL sorts ahead of ts=5); only to find that there is no matching &quot;row/col&quot; in block X-1, and then we&apos;ll advance to block X to return the value.&lt;/p&gt;

&lt;p&gt;Seems like we should be able to optimize this somehow.&lt;/p&gt;

&lt;p&gt;Some possibilities:&lt;br/&gt;
1) Suppose we track that the  file contains no deletes, and if the CF setting has MAX_VERSIONS=1, we can know for sure that block X - 1 does not contain any relevant data, and directly position the seek to block X. &lt;span class=&quot;error&quot;&gt;&amp;#91;This will also require the memstore flusher to remove extra versions if MAX_VERSION=1 and not allow the file to contain duplicate entries for the same ROW/COL.&amp;#93;&lt;/span&gt;  Tracking deletes will also avoid in many cases, the seek to the top of the row to look for DeleteFamily.&lt;/p&gt;

&lt;p&gt;2) Have a dense index (1 entry per KV in the index; this might be ok for large object case since index vs. data ratio will still be low).&lt;/p&gt;

&lt;p&gt;3) Have the index contain the last KV of each block also in addition to the first KV. This doubles the size of the index though.&lt;/p&gt;





</description>
                <environment></environment>
        <key id="12523623">HBASE-4443</key>
            <summary>optimize/avoid seeking to &quot;previous&quot; block when key you are interested in is the first one of a block</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="adela">Adela Maznikar</assignee>
                                    <reporter username="kannanm">Kannan Muthukkaruppan</reporter>
                        <labels>
                    </labels>
                <created>Mon, 19 Sep 2011 21:17:25 +0000</created>
                <updated>Sun, 24 Mar 2013 00:59:02 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13273450" author="mikhail" created="Fri, 11 May 2012 17:49:26 +0000"  >&lt;p&gt;Liyin and Kannan suggested that we could store the last key of the block instead of the first key of this block, thus avoiding doubling the index size. That will solve the problem of seeking to the first key in block by using the KV of the form (row, column, MAX_TIMESTAMP). However, it would require bumping the HFile format version and maintaining separate read paths for the two formats.&lt;/p&gt;

&lt;p&gt;In our further discussion we found a way to keep the current file format and solve the problem of seeking to the first key in block. We can move start keys of every block as far to the left as possible on the KV axis. More precisely, the start key of i&apos;th block will now be the previous block&apos;s start key + epsilon, where the &quot;+ epsilon&quot; operation involves decreasing the timestamp. In case such artificial start key ends up greater than the block&apos;s real start key (e.g. when the difference between last key of the previous block and the first key of the current block is only in KV type or memstore timestamp) we will still use the real first key of the block. This does not require changing the meaning of the key we store in the index per block (it can still be logically considered the first key), but when we are searching for (row1, col2, MAX_TIMESTAMP), we would not have to go the previous block ending with (row1, col1, t1), because (row1, col2, MAX_TIMESTAMP) &amp;gt; (row1, col1, t1 - 1), which we will use as the logical start key of our current block containing the key of e.g. (row1, col2, t2). Hopefully this makes some sense. I will attach a figure to illustrate this shortly.&lt;/p&gt;</comment>
                            <comment id="13273459" author="tlipcon" created="Fri, 11 May 2012 17:58:32 +0000"  >&lt;p&gt;Hey Mikhail. I had exactly the same thought last night when I read this JIRA.&lt;/p&gt;

&lt;p&gt;But I thought that Liyin brought up some other advantages of indexing by the last key instead of the first &amp;#8211; namely that we can easily skip to the next block without having to go back to the index lookup to find the next block&apos;s first key.&lt;/p&gt;

&lt;p&gt;Is the assumption that we would use the &quot;as far left as possible&quot; index in our current HFile version, and then increment the version later to change to index by last key?&lt;/p&gt;</comment>
                            <comment id="13274750" author="kannanm" created="Mon, 14 May 2012 17:06:35 +0000"  >&lt;p&gt;@Todd: With the suggestion Mikhail had to move the key of every block as far left as possible, we would no longer need to change the index to be by last key.&lt;/p&gt;</comment>
                            <comment id="13274837" author="tlipcon" created="Mon, 14 May 2012 18:37:09 +0000"  >&lt;p&gt;Kannan: If we&apos;re in the middle of scanning one block, and we get a hint to seek to some given key, how do we perform the seek? Currently, we have to check the index to figure out if the target key belongs to the current block or the next block. If the current block knew its last key, then we could easily determine this without going back to the index lookup, right?&lt;/p&gt;</comment>
                            <comment id="13532592" author="kannanm" created="Fri, 14 Dec 2012 19:47:15 +0000"  >&lt;p&gt;@Todd: I missed your comment earlier. Just noticed this when revisiting this JIRA.&lt;/p&gt;

&lt;p&gt;Regarding your: &amp;lt;&amp;lt;&amp;lt;If the current block knew its last key, then we could easily determine this without going back to the index lookup, right?&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;Keeping both the first and last key on every block will double the size of the index. So that&apos;s not desirable. With the suggestion as written up Mikhail, we can still avoid the index lookup cost you are concerned about when we need to reseek in the middle of a scan. In fact, that portion Liyin has already done. Whenever we go down an index to arrive at a block, we dynamically also maintain the &quot;startKey&quot; of the &lt;b&gt;next&lt;/b&gt; block (that&apos;s just local state). So, on a &quot;reseek&quot; we can cheaply tell if we need to just keep scanning forward or go to the index again. Mikhail&apos;s suggestion now will simply pick a startKey which is much further to the left, and will help even more cases avoid the index lookup.&lt;/p&gt;


&lt;p&gt;For example,&lt;/p&gt;

&lt;p&gt;Block 1 has two keys:   &lt;span class=&quot;error&quot;&gt;&amp;#91;r1,c1,19:v1; r1,c2,20:v2&amp;#93;&lt;/span&gt;&lt;br/&gt;
Block 2 has two keys:   &lt;span class=&quot;error&quot;&gt;&amp;#91;r1,c3,21:v3; r1,c4,22:v4&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Today start key for Block 2: is &quot;r1,c3,21&quot;.&lt;/p&gt;

&lt;p&gt;Let&apos;s change start key for Block 2 to be: &lt;span class=&quot;error&quot;&gt;&amp;#91;r1, c2,19&amp;#93;&lt;/span&gt;  (that&apos;s a non-existent key, but that&apos;s ok. That&apos;s the smallest epsilon past the last key in the previous block.]&lt;/p&gt;

&lt;p&gt;That means, with the new scheme, a search for &quot;r1,c3&quot; which is done as a search for r1,c3,LONG.MAX_VAL will directly take us to Block2 and not to Block1 as it used to before.&lt;/p&gt;

&lt;p&gt;And say you are scanning and you in the middle of block1; while coming down the path to find Block1, we also maintain state that the startKey of the next block is r1,c2,19. So now in more cases (such as if the reseek is to r1,c3) we will correctly figure if we need to scan forward in the same block or just go find the next block.&lt;/p&gt;

&lt;p&gt;I&apos;ll try to lookup the JIRA where Liyin made the Scan/reseek optimization.&lt;/p&gt;
</comment>
                            <comment id="13532599" author="kannanm" created="Fri, 14 Dec 2012 19:54:09 +0000"  >&lt;p&gt;@Todd: The relevant JIRA is: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5987&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5987&lt;/a&gt; which maintains the next block&apos;s key in a HFileReaderV2.java (nextIndexedKey).&lt;/p&gt;</comment>
                            <comment id="13532650" author="tlipcon" created="Fri, 14 Dec 2012 20:49:12 +0000"  >&lt;p&gt;Hey Kannan. Thanks for the pointer and explanation. It all makes good sense. Given that other JIRA is committed for 0.96, can we now close this as dup?&lt;/p&gt;</comment>
                            <comment id="13532881" author="kannanm" created="Sat, 15 Dec 2012 01:45:56 +0000"  >&lt;p&gt;Todd: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5987&quot; title=&quot;HFileBlockIndex improvement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5987&quot;&gt;&lt;del&gt;HBASE-5987&lt;/del&gt;&lt;/a&gt; does the peek at/track the start key of the next block optimization (so that a reseek in the middle of a scan doesn&apos;t have to go back to the index in many cases). &lt;/p&gt;

&lt;p&gt;But this JIRA is for a different case. This JIRA should help cases where you are looking for the first key in a block. Normally, that&apos;s not a common case. But if you are storing large objects in HBase, then it becomes a common case because each block may contain very small number of keys. &lt;/p&gt;

&lt;p&gt;Say &quot;r1,c3,ts=21&quot; is the first key in a block, and we are looking for &quot;r1,c3&quot;. The query itself doesn&apos;t have a TS. So, we&apos;ll search for r1,c3,ts=LONG.MAX_VAL and end up going to the previous block unnecessarily. This JIRA proposes to change the key that is kept in the HFile index. Instead of the index keeping the first key of the blocks it is pointing to, it&apos;ll keep a fake key - which is the last key of the previous block plus eplison. So, for my earlier example (from two posts prior), we propose that the index will keep the key for Block 2 as r1,c2,19 (because the last key of Block 1 is r1,c2,20- so we simply pick the next key whether or not that&apos;s the actual start key of this block); instead of the current r1,c3,21.&lt;/p&gt;</comment>
                            <comment id="13611913" author="xieliang007" created="Sun, 24 Mar 2013 00:59:02 +0000"  >&lt;p&gt;Could we close this jira now ? In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7845&quot; title=&quot;optimize hfile index key&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7845&quot;&gt;&lt;del&gt;HBASE-7845&lt;/del&gt;&lt;/a&gt;, the TS of index key was replaced with LATEST TIMESTAMP during invoking getShortMidpointKey(), so we could avoid seeking to previous block now&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12632324">HBASE-7845</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12554851">HBASE-5987</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 11 May 2012 17:49:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33560</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 38 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02g6v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12224</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>