<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:54:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8370/HBASE-8370.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8370] Report data block cache hit rates apart from aggregate cache hit rates</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8370</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Attaching from mail to dev@hbase.apache.org&lt;/p&gt;

&lt;p&gt;I am wondering whether the HBase cachingHitRatio metrics that the region server UI shows, can get me a break down by data blocks. I always see this number to be very high and that could be exagerated by the fact that each lookup hits the index blocks and bloom filter blocks in the block cache before retrieving the data block. This could be artificially bloating up the cache hit ratio.&lt;/p&gt;

&lt;p&gt;Assuming the above is correct, do we already have a cache hit ratio for data blocks alone which is more obscure ? If not, my sense is that it would be pretty valuable to add one.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12643057">HBASE-8370</key>
            <summary>Report data block cache hit rates apart from aggregate cache hit rates</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10">Implemented</resolution>
                                        <assignee username="varunsharma">Varun Sharma</assignee>
                                    <reporter username="varunsharma">Varun Sharma</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Apr 2013 22:30:17 +0000</created>
                <updated>Tue, 22 Jul 2014 04:36:54 +0000</updated>
                            <resolved>Tue, 22 Jul 2014 04:36:54 +0000</resolved>
                                                                    <component>metrics</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                            <comments>
                            <comment id="13693798" author="varunsharma" created="Wed, 26 Jun 2013 07:18:40 +0000"  >&lt;p&gt;Here are some stats for this JIRA - I am arguing that the BlockCacheHit ratio number reported on a region server does not mean much.&lt;/p&gt;

&lt;p&gt;&quot;tbl.feeds.cf.home.bt.Index.fsBlockReadCnt&quot; : 46864,&lt;br/&gt;
&quot;tbl.feeds.cf.home.bt.Index.fsBlockReadCacheHitCnt&quot; : 46864&lt;/p&gt;

&lt;p&gt;Index Block cache hit ratio = 100 %&lt;/p&gt;

&lt;p&gt;&quot;tbl.feeds.cf.home.bt.Data.fsBlockReadCacheHitCnt&quot; : 202&lt;br/&gt;
&quot;tbl.feeds.cf.home.bt.Data.fsBlockReadCnt&quot; : 247&lt;/p&gt;

&lt;p&gt;Data Block cache hit ratio = 82 %&lt;/p&gt;

&lt;p&gt;Overall Cache hit ration = (46864 + 202) / (46864 + 247) = 99 %&lt;/p&gt;

&lt;p&gt;Since Indexes are hit often, cache hits are 100 % and also # of hits is high. The real number that we are concerned about, is 82 % which is hit rate on the data block. However, we continue to show the # 99 % on the region server console instead. I think we need to fix that number. Please let me know if folks object to this ?&lt;/p&gt;</comment>
                            <comment id="13694007" author="stack" created="Wed, 26 Jun 2013 14:46:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; Mighty Elliott... input?&lt;/p&gt;</comment>
                            <comment id="13694032" author="apurtell" created="Wed, 26 Jun 2013 15:29:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think we need to fix that number. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Configuration settings can change how we handle the different block types on a per type basis.    That&apos;s only half the story if we do not have per-block-type metrics too.&lt;/p&gt;</comment>
                            <comment id="13694296" author="varunsharma" created="Wed, 26 Jun 2013 22:07:15 +0000"  >&lt;p&gt;So, it seems that we have per block type metrics from SchemaMetrics under the region server and they are exposed as /jmx.&lt;/p&gt;

&lt;p&gt;The question is, which metric should we report on the region server UI. Right now all our clusters 99 % cache hit ratio which is false, since 20 % percent of the time there is a DataBlock miss and we are hitting disk for 20 % of requests.&lt;/p&gt;

&lt;p&gt;I have been misled by this number in the past, and I think there could be others, who are being similarly misled. So, should we just report another more representative metric on the region server console.&lt;/p&gt;

&lt;p&gt;Varun&lt;/p&gt;</comment>
                            <comment id="13694320" author="eclark" created="Wed, 26 Jun 2013 22:34:04 +0000"  >&lt;p&gt;We don&apos;t have per block type metrics in trunk/95 because the overall cache hit percentage is a good proxy for data block cache percent.  Yes the overall number is higher but it still gives a good actionable number.  You can know if you&apos;re doing better or worse than you were before.  Even better is the derivative of cache miss count.&lt;/p&gt;

&lt;p&gt;Overall SchemaMetrics cost HBase about 10% of it&apos;s performance and I just don&apos;t think the enough people got enough out of it to keep per cf per block type metrics.&lt;/p&gt;

&lt;p&gt;Maybe we should show the percentage to more decimal figures so that it&apos;s more obvious that there are some misses?  But overall while the UI is nice it&apos;s not what should be used for figuring these things out.  That should be done by your metrics system (CM, Ganglia, OpenTSDB, etc).&lt;/p&gt;</comment>
                            <comment id="13694336" author="varunsharma" created="Wed, 26 Jun 2013 22:57:59 +0000"  >&lt;p&gt;&quot;We don&apos;t have per block type metrics in trunk/95 because the overall cache hit percentage is a good proxy for data block cache percent. Yes the overall number is higher but it still gives a good actionable number. You can know if you&apos;re doing better or worse than you were before. Even better is the derivative of cache miss count.&quot;&lt;/p&gt;

&lt;p&gt;I am not sure this is true - this number is always 99 % for us on all clusters - blockCacheHitCachingRation - how can a number which never changes, ever be actionable ? Even with decimal numbers, its never going to change because the index blocks are going to take over&lt;/p&gt;

&lt;p&gt;Also, the different b/w 82 % cache hit ratio to 99 % cache hit ratio is enormous. Controlling you p80 on latency is a &lt;b&gt;lot&lt;/b&gt; easier than your p99. A cache hit ratio of 99 % just sends you this false sense of security that you have controlled your p99 latency. This is important for online serving, maynot be for enterprise.&lt;/p&gt;

&lt;p&gt;I guess, we don&apos;t need to bring back SchemaMetrics to fix this but we can have block level metrics. At least I want to be sure that Index blocks have 100 % cache hit rates because if that&apos;s not happening, then I am in a bad situation. It would be better to not have folks using HBase for online storage, play a guessing game, as to what the true effectiveness of the cache is.&lt;/p&gt;</comment>
                            <comment id="13694343" author="eclark" created="Wed, 26 Jun 2013 23:16:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;this number is always 99 % for us on all clusters&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That&apos;s why I said we need more decimal places for it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also, the different b/w 82 % cache hit ratio to 99 % cache hit ratio is enormous.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But that 82% doesn&apos;t tell you anything all by itself.  For a given work load is 80% good or bad.  You don&apos;t know.  That percentage is really only useful if you have a base line so it&apos;s equally informative uf the cache percentage to go from 99 and then falls to 98 or if it&apos;s 84 and falls to 83.  Additionally gauges are bad.  They just don&apos;t tell a great story.  There&apos;s a lot of lossy data there, sampling times can skew your picture of what&apos;s actually happening.  See &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phobos182&quot; class=&quot;user-hover&quot; rel=&quot;phobos182&quot;&gt;Jeremy Carroll&lt;/a&gt;&apos;s slides (&lt;a href=&quot;https://speakerdeck.com/phobos182/metrics-at-pinterest&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://speakerdeck.com/phobos182/metrics-at-pinterest&lt;/a&gt;) on why you should prefer counters over gauges. &lt;/p&gt;

&lt;p&gt;That&apos;s why I said that derivative of cache miss count is the best way to look at cache efficacy.  It gives you an accurate count of the number of times you have to go to hdfs (not really disk since there can be os cache there).  It also provides a good way to compare today to yesterday.&lt;/p&gt;</comment>
                            <comment id="13694361" author="varunsharma" created="Thu, 27 Jun 2013 00:00:12 +0000"  >&lt;p&gt;Having a cache hit ratio of 80 % means that at least 80 % of my requests are fast (assuming GC out of picture) - in the current scenario, it may map to a number like 99.9 % and tomorrow if I had 0 % cache hits for data blocks, the number comes down to 99.5 % - I am able to calculate this based on the numbers I paste above. It assumes a certain distribution b/w number of accesses to Index blocks and Data blocks. Tomorrow, if the distribution changes, it may well be that 99.5 % overall cache hit ratio corresponds to 90 % hit rate on data blocks. So, I don&apos;t think that &quot;Overall cache hit ratio&quot; is a good proxy for &quot;Data block cache hit ratio&quot;.&lt;/p&gt;

&lt;p&gt;As far as derivatives go, Miss count derivative can go up with other things like read request count - so now we would also need to do a derivate on that counter and compare etc. On 0.94, that number has been overflowing for us all the time and is -ve, is that being fixed in trunk ?&lt;/p&gt;

&lt;p&gt;I dont think this is about counters vs gauges. I am fine with exposing counters per block type. Right now, I just don&apos;t have any insight into the block cache which plays an important role in serving reads. When a compaction happens and new files are written, I dont know the number of cache misses for Index block vs Data block vs Bloom block. I would no longer know how many Data blocks are being accessed and how many Index blocks etc&lt;/p&gt;</comment>
                            <comment id="13694377" author="eclark" created="Thu, 27 Jun 2013 00:48:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Having a cache hit ratio of 80 % means that at least 80 % of my requests are fast&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I would disagree. &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Full handlers&lt;/li&gt;
	&lt;li&gt;Giant gets of large amounts of data.&lt;/li&gt;
	&lt;li&gt;Gets without a proper bloom filter.&lt;/li&gt;
	&lt;li&gt;Things that skip past lots of (cached) blocks&lt;/li&gt;
	&lt;li&gt;Slow data block encoding&lt;/li&gt;
	&lt;li&gt;slow filters&lt;/li&gt;
	&lt;li&gt;slow network&lt;/li&gt;
	&lt;li&gt;lock contention&lt;/li&gt;
	&lt;li&gt;GC&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There are TONS of other reason that your requests can be slow.  And without knowing the work load you can&apos;t tell if cache miss is more or less likely than any other explanation.  I&apos;ve seen workloads where the cache percent was in the low teens and I&apos;ve seen workloads where the cache percent was really 100%.  There&apos;s no way a priori to know if a number is good or bad.  So you again are back to using the metrics with a base line and comparing them.  For that the absolute numbers are less important.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;As far as derivatives go, Miss count derivative can go up with other things like read request count&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep and that makes things harder but the only thing that&apos;s not susceptible are gauges.  And like I said before I&apos;m trying to move us off of gauges.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I dont know the number of cache misses for Index block vs Data block vs Bloom block. I would no longer know how many Data blocks are being accessed and how many Index blocks etc&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But those aren&apos;t actionable metrics.  &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;If your bloom block cache hit count goes down you can do....... Not much. Not worth counting if you can&apos;t take action on it.&lt;/li&gt;
	&lt;li&gt;With the way the index blocks works you can&apos;t cache miss them, after the first time, unless we&apos;re oom (they aren&apos;t ever evicted, even if you turn off caching the cf).  So you&apos;ll see that there are some misses on region open, and anytime there&apos;s a new flush or compaction. So it will be 100%.  Compaction and flush metrics are much more useful here for determining this kind of thing, so there&apos;s no need to add more metrics for something that&apos;s better covered somewhere else.&lt;/li&gt;
	&lt;li&gt;So data blocks are the only useful one.  and they dominate the number of blocks requested. So this can pretty well be covered by the following.
	&lt;ul&gt;
		&lt;li&gt;blockCacheExpressHitPercent&lt;/li&gt;
		&lt;li&gt;blockCountHitPercent&lt;/li&gt;
		&lt;li&gt;blockCacheHitCount&lt;/li&gt;
		&lt;li&gt;blockCacheMissCount&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m -1 adding any more metrics on the read path unless there&apos;s something that&apos;s totally missed (Jeremy brought up a couple the last time I met with him).  That code is just too important to be instrumented any more for things that can be figured out other ways (and I would argue better ways but that&apos;s less important).&lt;/p&gt;

&lt;p&gt;I&apos;m +1 on making that cache hit percent a double so there&apos;s more accuracy.&lt;/p&gt;</comment>
                            <comment id="13694389" author="varunsharma" created="Thu, 27 Jun 2013 01:08:16 +0000"  >&lt;p&gt;We can make the hit percent a double.&lt;/p&gt;

&lt;p&gt;But if we never evict index blocks, one option is to only count DataBlocks for HitPercent, CacheHitCount, CacheMissCount. I know that is not the case for 0.94. Is that the case for trunk or can we change these metrics to only instrument data blocks then ?&lt;/p&gt;

&lt;p&gt;Anyone else have opinions ?&lt;/p&gt;</comment>
                            <comment id="13694433" author="varunsharma" created="Thu, 27 Jun 2013 02:30:35 +0000"  >&lt;p&gt;Also, coming back to the point about the metrics being actionable.&lt;/p&gt;

&lt;p&gt;RE:If your bloom block cache hit count goes down you can do....... Not much. Not worth counting if you can&apos;t take action on it.&lt;/p&gt;

&lt;p&gt;I disagree that its not actionable. I would go fix the block cache in this case. It means there is something seriously wrong with our implementation of the block cache if we are evicting bloom blocks - maybe its just me but I feel we should not be evicting bloom blocks.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If the cache hit rate is too low on Data Blocks, the action item is to increase Block Cache amount.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I would agree that index block metrics are not needed or actionable if it is indeed the case that we pin index blocks forever.&lt;/p&gt;


</comment>
                            <comment id="13699614" author="eclark" created="Wed, 3 Jul 2013 23:54:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;I disagree that its not actionable. I would go fix the block cache in this case. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My opinion would be that metrics should be useful for they Guys and Girls on the ops teams.  If the metrics published aren&apos;t usable by them then most users are paying a cost for things that only interest us devs.  Tracing, trace level logging and debuggers should provide enough info to diagnose most of the block cache features you are talking about.&lt;/p&gt;

&lt;p&gt;The path, of adding metrics for devs, is what first got us SchemaMetrics. Some devs were investigating how and when to use multi level indexes in HFileV2.  Everyone paid the cost for those metrics even after the issues had all be solved.  I&apos;m really just trying to make sure we don&apos;t repeat the same mistakes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I would agree that index block metrics are not needed or actionable if it is indeed the case that we pin index blocks forever.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;They are always the last to be evicted yes. &lt;a href=&quot;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CachedBlock.java#L125&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CachedBlock.java#L125&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13704808" author="varunsharma" created="Wed, 10 Jul 2013 17:43:32 +0000"  >&lt;p&gt;Looking at some metrics on a cluster (read heavy) &lt;/p&gt;

&lt;p&gt;1) Index blocks - 99.998 % hit rate&lt;br/&gt;
2) Bloom blocks - 99.98 %&lt;br/&gt;
3) Data blocks - 95.4 %&lt;/p&gt;

&lt;p&gt;I think Data block cache hit rates might be more actionable than either the combined/index/bloom hit rates ?&lt;/p&gt;</comment>
                            <comment id="13705052" author="varunsharma" created="Wed, 10 Jul 2013 20:53:06 +0000"  >&lt;p&gt;Can we switch the hit rate to represent data blocks only ?&lt;/p&gt;</comment>
                            <comment id="13705354" author="apurtell" created="Thu, 11 Jul 2013 01:16:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think Data block cache hit rates might be more actionable than either the combined/index/bloom hit rates&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree&lt;/p&gt;</comment>
                            <comment id="14005310" author="stack" created="Wed, 21 May 2014 22:11:38 +0000"  >&lt;p&gt;In trunk we do not have per block type metrics.&lt;/p&gt;

&lt;p&gt;In trunk we do not show the cache hit rates in the UI apart from what can be found in the metrics listing under /jmx&lt;/p&gt;

&lt;p&gt;So I could close this issue I suppose because the pivot around which the above discussion turns no longer exists in trunk.&lt;/p&gt;

&lt;p&gt;But the discussion above is good around making it more plain when problematic evictions are happening in your online serving system.&lt;/p&gt;

&lt;p&gt;I could file an issue to make it so the block cache percentage is a double rather than an int &amp;#8211; the one thing the two lads agreed to above &amp;#8211; but I can&apos;t help but think that most operators will not be concerned if their block cache hit ratio goes from 99.45% to 99.41% (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=varunsharma&quot; class=&quot;user-hover&quot; rel=&quot;varunsharma&quot;&gt;Varun Sharma&lt;/a&gt;&apos;s point, in synopsis, is that significant changes in blockcache loading should be more obvious; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt; agrees).&lt;/p&gt;

&lt;p&gt;Let me just do this anyways.  I just made a sub-jira&lt;/p&gt;

&lt;p&gt;So, I want to add back blocktype reporting to trunk &amp;#8211; data blocks at least (I went looking for such reporting because I&apos;ve been messing with block cache and have been wanting to know what is going on inside, a recurring theme if you search JIRA) &amp;#8211; but while our &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; starts out at an extreme (conflating block type reporting with the heavyweight per-columnfamily/table/region SchemaMetrics system since purged), his argument that we should only expose &quot;actionable&quot; metrics has merit. For example, in my case, excepting DoubleBlockCache (slabcache), caches are tiered with meta (index/blooms) in the LRCBC and the everything else in the L2; in this case reporting on data block metrics is redundant (On other hand, most run with just one BC implementation...)&lt;/p&gt;

&lt;p&gt;While we could probably resolve, let me leave this issue open.  We still need a &apos;fix&apos;.  I&apos;ll be back.&lt;/p&gt;

</comment>
                            <comment id="14069589" author="stack" created="Tue, 22 Jul 2014 00:31:11 +0000"  >&lt;p&gt;Small patch that adds dumping of &apos;data&apos; stats to the toJSON output on a particular BlockCache (was missing from JSON but is present in the UI).&lt;/p&gt;</comment>
                            <comment id="14069808" author="stack" created="Tue, 22 Jul 2014 04:36:54 +0000"  >&lt;p&gt;Resolving as implemented (after I commit &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11559&quot; title=&quot;Add dumping of DATA block usage to the BlockCache JSON report.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11559&quot;&gt;&lt;del&gt;HBASE-11559&lt;/del&gt;&lt;/a&gt;).  Varun can get his block reporting by type by looking at UI/JSON report (dumping out over a period if wants to study production a while) and Elliott gets his way with no extra metrics added reporting by type.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                            <subtask id="12715866">HBASE-11229</subtask>
                            <subtask id="12727800">HBASE-11532</subtask>
                            <subtask id="12728746">HBASE-11559</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 26 Jun 2013 14:46:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>323467</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 21 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jt3z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>323812</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>