<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:48:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-901/HBASE-901.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-901] Add a limit to key length, check key and value length on client side.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-901</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently there is no limit on key length and there should be. It should be a parameter in HTableDescriptor since the row key length needs to be considered in addition to the column key.&lt;/p&gt;

&lt;p&gt;It should be trivial to add, since HTD can be upgraded without requiring a migration.&lt;/p&gt;

&lt;p&gt;Checking of the key length (and the value length) should be done on the client side as it will fail early rather than once the request is sent to the server.&lt;/p&gt;

&lt;p&gt;This means that a BatchUpdate needs a reference to either the HTable or to the HTD. It can be a transient reference so that the HTable (or HTD) need not be serialized/deserialized.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12405162">HBASE-901</key>
            <summary>Add a limit to key length, check key and value length on client side.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jdcryans">Jean-Daniel Cryans</assignee>
                                    <reporter username="jimk">Jim Kellerman</reporter>
                        <labels>
                    </labels>
                <created>Thu, 25 Sep 2008 17:02:36 +0000</created>
                <updated>Sun, 13 Sep 2009 22:26:27 +0000</updated>
                            <resolved>Tue, 30 Sep 2008 17:19:12 +0000</resolved>
                                                    <fixVersion>0.19.0</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12634546" author="stack" created="Thu, 25 Sep 2008 17:08:50 +0000"  >&lt;p&gt;Why need an upper-bound on key length?  What are we afraid of?  100M keys?&lt;/p&gt;

&lt;p&gt;Why does it have to be configurable?  Why not explicit config in hbase-site?  Or am I missing something?&lt;/p&gt;</comment>
                            <comment id="12634549" author="jimk" created="Thu, 25 Sep 2008 17:17:05 +0000"  >&lt;p&gt;The key length limit need not be configurable. Let&apos;s just set it at 64K. That way we don&apos;t need the reference from BatchUpdate to HTable or HTableDescriptor.&lt;/p&gt;</comment>
                            <comment id="12634552" author="jimk" created="Thu, 25 Sep 2008 17:20:25 +0000"  >&lt;p&gt;Jean-Daniel points out that we still need to get to the HTableDescriptor, because even if key lengths have a fixed maximum, value lengths are configurable.&lt;/p&gt;</comment>
                            <comment id="12634563" author="stack" created="Thu, 25 Sep 2008 17:51:28 +0000"  >&lt;p&gt;Why not let it fail server-side as we do now? I suppose the idea is have the error happen at the client rather than after making the trip over the wire?  We need check server-side anyways to protect at Region level (off-line operations such as migrating or merging or fixing)?  Entwinning htable or HTD with BU seems to me like a complication it would be nice to do without.  Value lengths can be set on column family basis?  Inside in BU we&apos;ll run the checks?   Can we come up with another reason for giving BU an HTD?  If two justifications, it&apos;d make more sense.&lt;/p&gt;</comment>
                            <comment id="12634578" author="jdcryans" created="Thu, 25 Sep 2008 18:43:43 +0000"  >&lt;p&gt;For atomicity reasons, we cannot let it fail server side because it would break batch transactions.&lt;/p&gt;

&lt;p&gt;Having an error on BU.put is nice, but having it on HTable.commit BEFORE the batchUpdate is done on an HRS would also work great. &lt;/p&gt;

&lt;p&gt;Another thing we should check is family existence.&lt;/p&gt;</comment>
                            <comment id="12634605" author="stack" created="Thu, 25 Sep 2008 20:33:02 +0000"  >&lt;p&gt;I like the idea of doing it in HTable before the commit better.  Nice one.  Family existence check would be sweet too.&lt;/p&gt;</comment>
                            <comment id="12634666" author="jimk" created="Thu, 25 Sep 2008 22:31:31 +0000"  >&lt;p&gt;stack - 25/Sep/08 01:33 PM&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I like the idea of doing it in HTable before the commit better. Nice one. Family existence check would be sweet too.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 Does the check before the server starts to process batch (or batches). Eliminates partially processed batches.&lt;/p&gt;</comment>
                            <comment id="12634923" author="jdcryans" created="Fri, 26 Sep 2008 16:31:12 +0000"  >&lt;p&gt;We have a problem with HTD that needs a meta scan at each invocation. See this conversation I had with stack:&lt;/p&gt;


&lt;p&gt;&amp;lt;jdcryans&amp;gt; st^ack: the HTD  we get in HTable is obtained though a meta scan&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; validating a batch of rows would be shitty&lt;br/&gt;
&amp;lt;st^ack&amp;gt; and makes no sense caching the HTD&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; I think we should cache it, while validating columns, if we get a null HCD we try to refresh once&lt;br/&gt;
&amp;lt;st^ack&amp;gt; just getting it would be expensive&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; get it while you build HTable&lt;br/&gt;
&amp;lt;st^ack&amp;gt; And if it gets changed by another client instance?&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; that&apos;s what I said, cache only while validating rows&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; I mean for this reason only&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; If asked directly on HTable, do the scan&lt;br/&gt;
&amp;lt;st^ack&amp;gt; But what if we are not batching... doing one row at a time?&lt;br/&gt;
&amp;lt;st^ack&amp;gt; Do we get HTD each time?&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; I would still leave it as class property&lt;br/&gt;
&amp;lt;st^ack&amp;gt; So, on construction of HTable, you&apos;d get the HTD.&lt;br/&gt;
&amp;lt;st^ack&amp;gt; You&apos;d keep using this same HTD during life of the HTable instance?&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; unless you get a null HCD while validation&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; at that moment you refresh the cache&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; once so if you get it another time it&apos;s because it&apos;s not a family&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; this would be a very optimistic caching&lt;br/&gt;
&amp;lt;st^ack&amp;gt; Why a null HCD, because a new one was added (or removed)&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; public HColumnDescriptor getFamily(final byte [] column) &lt;/p&gt;
{
&amp;lt;jdcryans&amp;gt;     return this.families.get(HStoreKey.getFamilyMapKey(column));
&amp;lt;jdcryans&amp;gt;   }
&lt;p&gt;&amp;lt;jdcryans&amp;gt; if the get returns nothing&lt;br/&gt;
&amp;lt;st^ack&amp;gt; I think caching HCD in client is going to burn us in many interesting ways&lt;br/&gt;
&amp;lt;st^ack&amp;gt; Users on list will be showing up w/ questions about why changed attributes are not being picked up in clients&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; I repeat, the cached HCD would only be used for commits validation&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; HTD&lt;br/&gt;
&amp;lt;st^ack&amp;gt; Since you have to disable to change HCD and HTD, if we could figure someway of sending signal to clients when table is reeanbled.. .that&apos;d help&lt;br/&gt;
&amp;lt;st^ack&amp;gt; size of cell, right&lt;br/&gt;
&amp;lt;st^ack&amp;gt; What if user changes size of cell in table schema&lt;br/&gt;
&amp;lt;st^ack&amp;gt; client won&apos;t see it&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; ok, well we refresh it upon any error of that kind&lt;br/&gt;
&amp;lt;st^ack&amp;gt; well, if cell size is set down, the server will throw exception if client is sending over cells too big...&lt;br/&gt;
&amp;lt;st^ack&amp;gt; but if cell size is made biggger, client will continue to send cells that are too small if operating with an old version of HTD&lt;br/&gt;
st^ack by the way, thanks for figuring the HTD is made by scanning meta.. imagine if we&apos;d committed the patch w/o knowing this&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; if cell size set down, we&apos;d get an exception client side, refresh the cached HTD, then it would be good&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; but yeah, the other situation is a problem&lt;br/&gt;
&amp;lt;st^ack&amp;gt; What if we added an offline/onlining exception&lt;br/&gt;
&amp;lt;st^ack&amp;gt; It&apos;d be like NSRE&lt;br/&gt;
&amp;lt;st^ack&amp;gt; When client sees it, it &apos;recalibrates&apos;&lt;br/&gt;
&amp;lt;st^ack&amp;gt; Refreshes its cache of HTD&lt;br/&gt;
&amp;lt;st^ack&amp;gt; Clients would need to send identifiers though I suppose&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; would only happen if client tries to do stuff while it&apos;s offline&lt;br/&gt;
&amp;lt;st^ack&amp;gt; jdcryans: HRS could keep a map of the client ids its currently talking to&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; I know what we need... ZK&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; it should manage that kind of stuff&lt;br/&gt;
st^ack thinking... if a big table, we&apos;d be sending exception per HRS ... that&apos;d be silly&lt;br/&gt;
&amp;lt;st^ack&amp;gt; How you think it would work here?  ZK lookups are cheap so just go get the table schema on a period or before big batch?&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; something like that&lt;br/&gt;
&amp;lt;st^ack&amp;gt; Ok.&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; or it would keep track of table offlining/enabling&lt;br/&gt;
&amp;lt;st^ack&amp;gt; Sounds million times better than my dumbass suggestion&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; well there is a reason why that kind of software exists&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; because distributed computing is a zoo&lt;br/&gt;
&amp;lt;st^ack&amp;gt; Whats that mean for batching?  No batching till ZK?&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; or be very careful when batching&lt;br/&gt;
&amp;lt;st^ack&amp;gt; k&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; we can still check some stuff like row key length&lt;br/&gt;
&amp;lt;jdcryans&amp;gt; if columns are well formed&lt;/p&gt;</comment>
                            <comment id="12634925" author="jdcryans" created="Fri, 26 Sep 2008 16:44:39 +0000"  >&lt;p&gt;Patch that validates the maximum we can without using a HTD. Please review.&lt;/p&gt;</comment>
                            <comment id="12635012" author="jimk" created="Fri, 26 Sep 2008 20:46:55 +0000"  >&lt;p&gt;Reviewed patch. &lt;/p&gt;

&lt;p&gt;Remember that the key we use in a file is a serialized HSK, so you need to compare the serialized HSK length to HConstants.MAX_ROW_LENGTH (which you might want to rename as MAX_KEY_LENGTH)&lt;/p&gt;</comment>
                            <comment id="12635019" author="jdcryans" created="Fri, 26 Sep 2008 21:03:55 +0000"  >&lt;p&gt;Will serializing every row key in the client to get the length be too much of an overhead? Is it &quot;safe&quot;, even tho it&apos;s not exact, to keep the current comparison?&lt;/p&gt;</comment>
                            <comment id="12635045" author="stack" created="Fri, 26 Sep 2008 22:09:58 +0000"  >&lt;p&gt;I think it&apos;ll be too much overhead, yes.  I think doing lengths is probably &apos;safe-enough&apos;.  Worst that can happen is we&apos;ll get an exception server-side ?&lt;/p&gt;</comment>
                            <comment id="12635170" author="jimk" created="Sat, 27 Sep 2008 17:46:09 +0000"  >&lt;p&gt;We will need to do something better in the future, but for now I think this is good enough. +1 go ahead and commit it.&lt;/p&gt;</comment>
                            <comment id="12635792" author="jdcryans" created="Tue, 30 Sep 2008 17:19:12 +0000"  >&lt;p&gt;Committed to trunk. Thanks to everyone who helped.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12400417">HBASE-748</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12391033" name="hbase-901-v1.patch" size="2708" author="jdcryans" created="Fri, 26 Sep 2008 16:44:39 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 25 Sep 2008 17:08:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31895</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 12 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ha53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98905</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>