<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:47:55 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-832/HBASE-832.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-832] Problem with row keys beginnig with characters &lt; than &apos;,&apos; and the region location cache</title>
                <link>https://issues.apache.org/jira/browse/HBASE-832</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We currently have a problem the way we design .META. row keys. When user table row keys begin with characters lesser than &apos;,&apos; like a &apos;$&apos;, any operation will fail when:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;A client has a certain set of regions in cache&lt;/li&gt;
	&lt;li&gt;One region with the faulty row key splits&lt;/li&gt;
	&lt;li&gt;The client receives a request for a row in the split region&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The reason is that it will first get a NSRE then it will try to locate a region using the passed row key. For example: &lt;br/&gt;
Row in META: entities,,1216750777411&lt;br/&gt;
Row passed: entities,$-94f9386f-e235-4cbd-aacc-37210a870991,99999999999999&lt;/p&gt;

&lt;p&gt;The passed row is lesser then the row in .META.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12402396">HBASE-832</key>
            <summary>Problem with row keys beginnig with characters &lt; than &apos;,&apos; and the region location cache</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jdcryans">Jean-Daniel Cryans</assignee>
                                    <reporter username="jdcryans">Jean-Daniel Cryans</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Aug 2008 17:28:38 +0000</created>
                <updated>Sat, 13 Sep 2008 23:22:45 +0000</updated>
                            <resolved>Sun, 31 Aug 2008 05:21:46 +0000</resolved>
                                    <version>0.2.0</version>
                                    <fixVersion>0.2.1</fixVersion>
                    <fixVersion>0.18.0</fixVersion>
                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12622645" author="jdcryans" created="Thu, 14 Aug 2008 19:10:37 +0000"  >&lt;p&gt;Won&apos;t fix for 0.2.1&lt;/p&gt;</comment>
                            <comment id="12622654" author="stack" created="Thu, 14 Aug 2008 19:30:18 +0000"  >&lt;p&gt;For 0.2.1, should we add rejecting row if starts with a byte that is &amp;lt;= &apos;,&apos;?&lt;/p&gt;

&lt;p&gt;My guess is that there is little extant data that has rows with row keys that are &amp;lt;= &apos;,&apos;, else we would have heard about it (table wouldn&apos;t work).&lt;/p&gt;

&lt;p&gt;Minimally, lets add release note that this is a known issue for 0.2.1.&lt;/p&gt;

&lt;p&gt;Good find J-D.&lt;/p&gt;
</comment>
                            <comment id="12622657" author="apurtell" created="Thu, 14 Aug 2008 19:41:57 +0000"  >&lt;p&gt;Of the set of bytes &amp;lt; &apos;,&apos;  &apos;$&apos; and &apos;*&apos; are commonly used for special keys in various applications. &apos;!&apos; is a possibility also. &lt;/p&gt;

&lt;p&gt;Why not use the space character instead of comma? &lt;/p&gt;</comment>
                            <comment id="12622668" author="streamy" created="Thu, 14 Aug 2008 20:06:46 +0000"  >&lt;p&gt;I think it&apos;s a very bad idea to put any kind of constraint on byte[]&apos;s anywhere.&lt;/p&gt;

&lt;p&gt;Moving to byte[] has given the flexibility to put anything you want, wherever you want.  I can use serialized java objects as row keys if I want to.&lt;/p&gt;

&lt;p&gt;Having any kind of reserved characters limits your ability to blindly store binary objects wherever you&apos;d like.  Often the encoding of a binary object is implemented in a library you don&apos;t touch, if it just so happens to be using a reserved byte to start, you&apos;re SOL or stuck doing manually munging to ensure you fit the constraints on what are valid byte[]&apos;s.&lt;/p&gt;</comment>
                            <comment id="12622671" author="stack" created="Thu, 14 Aug 2008 20:18:54 +0000"  >&lt;p&gt;Taking a quick look, inserting into memcache and out to store files, we use HStoreKey.  The comparator in HSK knows how to make sense of our row/column/ts keys.  So, problem is elsewhere in the system; somewhere we are looking at the &apos;row&apos; as raw byte array and we&apos;re using dumb Bytes.BYTE_COMPARATOR when it should be a byte comparator that knows it a HSK and that parses it appropriatlely (i.e going left to right up to the DELIMITER, first compare row component, then parse out the timestamp and the remainder is the column; compare this, then ts).  I wonder if its in our MR classes where we&apos;re using ImmutableBytesWritable?  Perhaps we should be using something &apos;smarter&apos;&lt;/p&gt;</comment>
                            <comment id="12622678" author="stack" created="Thu, 14 Aug 2008 20:37:49 +0000"  >&lt;p&gt;Ignore my comment above.  Its off the mark.  The problem is not full row key sorting.  Its the sort of the row component of a key made of row/column/timestamp.  Issue is in meta where rows are made of the tablename, delimiter, rowname, delimiter, timestamp.  If the rowname in the table has delimiter in it or bytes that are &amp;lt; delimiter, then sort can be off.&lt;/p&gt;
</comment>
                            <comment id="12622698" author="stack" created="Thu, 14 Aug 2008 21:04:34 +0000"  >&lt;p&gt;If region is a &apos;meta&apos; region, could we write row keys with a subclass of HSK named something like MetaHSK?  MetaHSK would not treat row as a byte array but instead do simple parse to pull out the tablename and timestamp components.  Remained would be startkey.  Should be possible to then do compare that is not susceptible to changed ordering just because startkey contains delimiter?&lt;/p&gt;

&lt;p&gt;Might have to have a version for root and another for meta given that the root has rows made of the meta tables rows.&lt;/p&gt;</comment>
                            <comment id="12626211" author="jdcryans" created="Wed, 27 Aug 2008 17:53:08 +0000"  >&lt;p&gt;Getting worse. Here is another symptom:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.hadoop.hbase.regionserver.WrongRegionException: org.apache.hadoop.hbase.regionserver.WrongRegionException: Requested row out of range &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; HRegion web_pages,http:&lt;span class=&quot;code-comment&quot;&gt;//www.altitude737.com/choix_centre.html,1219807997979, startKey=&apos;http://www.altitude737.com/choix_centre.html&apos;, getEndKey()=&apos;http://www.amoll.qc.ca/&apos;, row=&apos;http://www.amoll.qc.ca/%8elections.html&apos;
&lt;/span&gt;	at org.apache.hadoop.hbase.regionserver.HRegion.checkRow(HRegion.java:1703)
	at org.apache.hadoop.hbase.regionserver.HRegion.obtainRowLock(HRegion.java:1759)
	at org.apache.hadoop.hbase.regionserver.HRegion.batchUpdate(HRegion.java:1383)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.batchUpdate(HRegionServer.java:1145)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.hbase.ipc.HbaseRPC$Server.call(HbaseRPC.java:473)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:896)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Made this a blocker for 0.2.1 and 0.18.0&lt;/p&gt;</comment>
                            <comment id="12626314" author="stack" created="Wed, 27 Aug 2008 20:38:47 +0000"  >&lt;p&gt;Ugh.  +1 on fixing for 0.2.1&lt;/p&gt;</comment>
                            <comment id="12626375" author="jdcryans" created="Thu, 28 Aug 2008 00:08:11 +0000"  >&lt;p&gt;I will try to do it the Bigtable-way: build the meta row keys with only the table and the end-row since it is the &quot;,&quot; between the two keys that is problematic.&lt;/p&gt;</comment>
                            <comment id="12626384" author="stack" created="Thu, 28 Aug 2008 00:17:39 +0000"  >&lt;p&gt;J-D: One thing to keep in mind is that going between 0.2.0 and 0.2.1, a migration should not be necessary.  I&apos;m afraid that changing format of key in meta will require migration.&lt;/p&gt;</comment>
                            <comment id="12626601" author="jdcryans" created="Thu, 28 Aug 2008 14:45:32 +0000"  >&lt;p&gt;Yeah, I have it in mind. For 0.2.1, in the release notes, we should specify that this bug is very important and that it will be fixed for 0.3.0&lt;/p&gt;</comment>
                            <comment id="12626717" author="jdcryans" created="Thu, 28 Aug 2008 19:48:17 +0000"  >&lt;p&gt;Patch that attempts at comparing rows from META and ROOT differently. Please review.&lt;/p&gt;</comment>
                            <comment id="12626730" author="jimk" created="Thu, 28 Aug 2008 20:42:44 +0000"  >&lt;p&gt;Reviewed patch. Some issues and questions:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Missing javadoc for @param in HStoreKey, Memcache&lt;/li&gt;
	&lt;li&gt;lines too long in HStoreKey and HStore&lt;/li&gt;
	&lt;li&gt;I am still unclear on why the table name needs to be put in and stripped out for the ROOT and Meta regions. Can you explain?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12626732" author="jimk" created="Thu, 28 Aug 2008 20:45:44 +0000"  >&lt;p&gt;19 javadoc warnings. Run&lt;/p&gt;

&lt;p&gt;ant clean javadoc&lt;/p&gt;
</comment>
                            <comment id="12626775" author="jdcryans" created="Thu, 28 Aug 2008 22:18:46 +0000"  >&lt;p&gt;Fixes javadoc and the timestamp I forgot to check. Would have been critical when comparing the rows of slitted regions in catalog tables. Passes unit tests. Please review.&lt;/p&gt;</comment>
                            <comment id="12626784" author="jimk" created="Thu, 28 Aug 2008 23:05:49 +0000"  >&lt;p&gt;javadoc still incorrect for:&lt;/p&gt;

&lt;p&gt;public Memcache(final long ttl, HRegionInfo regionInfo)&lt;/p&gt;

&lt;p&gt;otherwise +1&lt;/p&gt;</comment>
                            <comment id="12626800" author="clint.morgan" created="Fri, 29 Aug 2008 00:11:04 +0000"  >&lt;p&gt;Hey J-D,&lt;/p&gt;

&lt;p&gt;When working on this, did you get a sense of how easy it would be to add an arbitrary row key comparator (per table)? I&apos;m probably gonna need this (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-661&quot; title=&quot;Allow to specify a user supplied row key comparator for a table &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-661&quot;&gt;&lt;del&gt;HBASE-661&lt;/del&gt;&lt;/a&gt;) in the next few weeks.&lt;/p&gt;

&lt;p&gt;cheers,&lt;/p&gt;</comment>
                            <comment id="12626827" author="jdcryans" created="Fri, 29 Aug 2008 02:50:11 +0000"  >&lt;p&gt;Jim, sorry for the sloppy patch, it wasn&apos;t my best one. I will correct the last javadoc issue then will try it using the 2h MR job on which it fails.&lt;/p&gt;

&lt;p&gt;Clint, I guess further refactoring would make this relatively easy to do. We&apos;ll discuss it later.&lt;/p&gt;</comment>
                            <comment id="12627070" author="stack" created="Fri, 29 Aug 2008 18:59:15 +0000"  >&lt;p&gt;Would suggest that tests do actual full HSK compares rather than just row postions.&lt;/p&gt;

&lt;p&gt;Maybe add not to the data member &apos;tablename&apos; a javadoc that its not serialized as part of HSK (Point at this issue?).&lt;/p&gt;

&lt;p&gt;I should look closer, but does it need to be passed into HSK?  Or does HStoreKey.compareTwoRowKeys not suffice in all cases?&lt;/p&gt;

&lt;p&gt;If you passed HRI instead of table name to HSK, you could do HRI.isMetatable and HRI.isRoottable rather than do the table name compares you&apos;re currently doing.&lt;/p&gt;
</comment>
                            <comment id="12627074" author="jdcryans" created="Fri, 29 Aug 2008 19:08:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would suggest that tests do actual full HSK compares rather than just row postions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean using compareTo?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe add not to the data member &apos;tablename&apos; a javadoc that its not serialized as part of HSK (Point at this issue?).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Indeed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I should look closer, but does it need to be passed into HSK? Or does HStoreKey.compareTwoRowKeys not suffice in all cases?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I passed it when the compareTo method was used. Sometimes in the code it was a row comparison, other times it was a HSK comparison in which I had to make sure that we checked the rows correctly.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If you passed HRI instead of table name to HSK, you could do HRI.isMetatable and HRI.isRoottable rather than do the table name compares you&apos;re currently doing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Indeed.&lt;/p&gt;</comment>
                            <comment id="12627133" author="stack" created="Fri, 29 Aug 2008 22:32:57 +0000"  >&lt;p&gt;Yeah, I mean doing compareTo... Add tests to the testHStoreKey method that take the messy meta keys.&lt;/p&gt;</comment>
                            <comment id="12627257" author="jdcryans" created="Sat, 30 Aug 2008 21:39:30 +0000"  >&lt;p&gt;Cleaner patch, adds a test and uses compareTo. Review please.&lt;/p&gt;</comment>
                            <comment id="12627281" author="stack" created="Sun, 31 Aug 2008 05:21:46 +0000"  >&lt;p&gt;Looks good J-D.  I tested it by doing a decent loading up on cluster and ran all unit tests.  Patch is ugly but we can fix later when we have luxury of a migration (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-859&quot; title=&quot;HStoreKey needs a reworking&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-859&quot;&gt;&lt;del&gt;HBASE-859&lt;/del&gt;&lt;/a&gt;).  Applied trunk and branch.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12389124" name="hbase-832-v1.patch" size="17251" author="jdcryans" created="Thu, 28 Aug 2008 19:48:17 +0000"/>
                            <attachment id="12389128" name="hbase-832-v2.patch" size="17808" author="jdcryans" created="Thu, 28 Aug 2008 22:18:45 +0000"/>
                            <attachment id="12389238" name="hbase-832-v3-trunk.patch" size="17582" author="jdcryans" created="Sat, 30 Aug 2008 21:39:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 14 Aug 2008 19:30:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25426</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 16 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h9pz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98837</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>