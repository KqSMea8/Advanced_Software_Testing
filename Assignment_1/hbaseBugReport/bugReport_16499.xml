<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:14:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16499/HBASE-16499.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16499] slow replication for small HBase clusters</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16499</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;For small clusters 10-20 nodes we recently observed that replication is progressing very slowly when we do bulk writes and there is lot of lag accumulation on AgeOfLastShipped / SizeOfLogQueue. From the logs we observed that the number of threads used for shipping wal edits in parallel comes from the following equation in HBaseInterClusterReplicationEndpoint&lt;/p&gt;

&lt;p&gt;int n = Math.min(Math.min(this.maxThreads, entries.size()/100+1),&lt;br/&gt;
      replicationSinkMgr.getSinks().size());&lt;br/&gt;
... &lt;br/&gt;
      for (int i=0; i&amp;lt;n; i++) &lt;/p&gt;
{
        entryLists.add(new ArrayList&amp;lt;HLog.Entry&amp;gt;(entries.size()/n+1)); &amp;lt;-- batch size
      }
&lt;p&gt;...&lt;br/&gt;
        for (int i=0; i&amp;lt;entryLists.size(); i++) &lt;/p&gt;
{
         .....
            // RuntimeExceptions encountered here bubble up and are handled in ReplicationSource
            pool.submit(createReplicator(entryLists.get(i), i));  &amp;lt;-- concurrency 
            futures++;
          }
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;maxThreads is fixed &amp;amp; configurable and since we are taking min of the three values n gets decided based replicationSinkMgr.getSinks().size() when we have enough edits to replicate&lt;/p&gt;

&lt;p&gt;replicationSinkMgr.getSinks().size() is decided based on &lt;br/&gt;
int numSinks = (int) Math.ceil(slaveAddresses.size() * ratio);&lt;br/&gt;
where ratio is this.ratio = conf.getFloat(&quot;replication.source.ratio&quot;, DEFAULT_REPLICATION_SOURCE_RATIO);&lt;/p&gt;

&lt;p&gt;Currently DEFAULT_REPLICATION_SOURCE_RATIO is set to 10% so for small clusters of size 10-20 RegionServers  the value we get for numSinks and hence n is very small like 1 or 2. This substantially reduces the pool concurrency used for shipping wal edits in parallel effectively slowing down replication for small clusters and causing lot of lag accumulation in AgeOfLastShipped. Sometimes it takes tens of hours to clear off the entire replication queue even after the client has finished writing on the source side. &lt;/p&gt;

&lt;p&gt;We are running tests by varying replication.source.ratio and have seen multi-fold improvement in total replication time (will update the results here). I wanted to propose here that we should increase the default value for replication.source.ratio also so that we have sufficient concurrency even for small clusters. We figured it out after lot of iterations and debugging so probably slightly higher default will save the trouble. &lt;/p&gt;

</description>
                <environment></environment>
        <key id="12999901">HBASE-16499</key>
            <summary>slow replication for small HBase clusters</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="vik.karma">Vikas Vishwakarma</assignee>
                                    <reporter username="vik.karma">Vikas Vishwakarma</reporter>
                        <labels>
                    </labels>
                <created>Thu, 25 Aug 2016 04:32:01 +0000</created>
                <updated>Thu, 1 Dec 2016 07:38:39 +0000</updated>
                                                                            <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="15436336" author="ashish singhi" created="Thu, 25 Aug 2016 05:58:33 +0000"  >&lt;p&gt;We have also observed this in our internal clusters. As the &lt;tt&gt;replication.source.ratio&lt;/tt&gt; value is configurable we just increased its value which was best suited for the cluster.&lt;/p&gt;</comment>
                            <comment id="15437040" author="vik.karma" created="Thu, 25 Aug 2016 15:04:38 +0000"  >&lt;p&gt;true &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ashish+singhi&quot; class=&quot;user-hover&quot; rel=&quot;ashish singhi&quot;&gt;Ashish Singhi&lt;/a&gt;we have also increased the replication.source.ratio in our clusters. I was thinking if the default value is set to too low instead of a reasonable value that should work for most cluster sizes and if we should increase the default also to some extent so that the performance with the default values also is not too bad. Otherwise once we increase  replication.source.ratio it works perfectly ok. &lt;/p&gt;</comment>
                            <comment id="15439368" author="lhofhansl" created="Fri, 26 Aug 2016 16:42:35 +0000"  >&lt;p&gt;When I added the parallelization logic I envisioned that we do not want more than one batch per remote region server, hence the limit in the logic.&lt;/p&gt;

&lt;p&gt;Maybe that assumption wasn&apos;t right either. More and smaller batches will increase usage of the available bandwidth (since HBase RPC is not streaming, it&apos;s hard to make use of the full b/w * latency product).&lt;/p&gt;

&lt;p&gt;Since there are other check in there, for example not to create batches of less then 100 items, or not more than we have threads available I&apos;m in favor increasing the default to something like 25%. So we&apos;ll have one peer picked up to a size of 7 nodes, when we&apos;ll pick 2.&lt;/p&gt;</comment>
                            <comment id="15444635" author="vik.karma" created="Mon, 29 Aug 2016 03:05:07 +0000"  >&lt;p&gt;sure &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; seeing few more cases while running the benchmarks for different cluster size, and cases like both clusters in the same DCs vs in geographically distant DCs, etc. Will update once I have a proper set of benchmark results. &lt;/p&gt;</comment>
                            <comment id="15446349" author="churromorales" created="Mon, 29 Aug 2016 16:26:12 +0000"  >&lt;p&gt;There are quite a few places in the code where we use an absolute minimum as well as a percentage and take the max.  Couldn&apos;t we just do that here.  Something like Max(10, 10% of destination regionservers)?  That wouldn&apos;t change the current behavior for larger clusters using default values either.  &lt;/p&gt;</comment>
                            <comment id="15447847" author="vik.karma" created="Tue, 30 Aug 2016 03:04:29 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=churromorales&quot; class=&quot;user-hover&quot; rel=&quot;churromorales&quot;&gt;churro morales&lt;/a&gt; similar logic is already there in this equation in HBaseInterClusterReplicationEndpoint&lt;/p&gt;

&lt;p&gt;int n = Math.min(Math.min(this.maxThreads, entries.size()/100+1),&lt;br/&gt;
replicationSinkMgr.getSinks().size());&lt;/p&gt;

&lt;p&gt;using max instead of min can be a problem if the cluster size or number of batches available to ship is less than the max constant value. We saw good improvement by increasing replication source ratio for our DR setup and cluster size. I am just trying to verify that it is fine to have a slightly higher ratio in general cases also by testing it against different cluster size setup. Currently backlogged because of setup availability.  Max is limited by this.maxThreads so changing the ratio won&apos;t affect the behavior for large clusters by much in this case also and it gives the fine tuning flexibility for different setups. &lt;/p&gt;
</comment>
                            <comment id="15711200" author="ashish singhi" created="Thu, 1 Dec 2016 07:38:39 +0000"  >&lt;p&gt;Any update here, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vik.karma&quot; class=&quot;user-hover&quot; rel=&quot;vik.karma&quot;&gt;Vikas Vishwakarma&lt;/a&gt; ?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 25 Aug 2016 05:58:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32rkv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>