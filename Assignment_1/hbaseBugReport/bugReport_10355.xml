<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:12:59 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10355/HBASE-10355.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10355] Failover RPC&apos;s from client using region replicas</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10355</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12689126">HBASE-10355</key>
            <summary>Failover RPC&apos;s from client using region replicas</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12682280">HBASE-10070</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nkeywal">Nicolas Liochon</assignee>
                                    <reporter username="enis">Enis Soztutar</reporter>
                        <labels>
                    </labels>
                <created>Thu, 16 Jan 2014 00:05:17 +0000</created>
                <updated>Sat, 21 Feb 2015 23:33:01 +0000</updated>
                            <resolved>Fri, 7 Mar 2014 22:00:48 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>hbase-10070</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13872856" author="stack" created="Thu, 16 Jan 2014 00:08:22 +0000"  >&lt;p&gt;Ask said over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10070&quot; title=&quot;HBase read high-availability using timeline-consistent region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10070&quot;&gt;&lt;del&gt;HBASE-10070&lt;/del&gt;&lt;/a&gt;, on the surface, this seems like a bad idea having RPC know about region replicas.  Will be interested in hearing the why.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13872951" author="enis" created="Thu, 16 Jan 2014 01:53:55 +0000"  >&lt;p&gt;I think we are doing the failover at the HCM level, not the individual RPC level. I&apos;ll take a closer look at &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;&apos;s patch. &lt;/p&gt;</comment>
                            <comment id="13873199" author="nkeywal" created="Thu, 16 Jan 2014 09:43:51 +0000"  >&lt;p&gt;rpc does not really know the replica logic: there is a new callable that is doing multiple rpc calls. We&apos;re not &apos;inside&apos; the rpc layer.&lt;/p&gt;

&lt;p&gt;What alternative do you see?&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;htable level (i.e. a htable composed of different htable)? I tried this, but we don&apos;t need to change most of the htable code, so most of the methods are just delegating. As well, it needs to be done very carefully if you don&apos;t want to duplicate the objects.&lt;/li&gt;
	&lt;li&gt;below the rpc, i.e. inside the rpc layer?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13873640" author="stack" created="Thu, 16 Jan 2014 17:31:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;We&apos;re not &apos;inside&apos; the rpc layer.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK.  Good.  The design doc gave this impression; just ignore my reading of it.&lt;/p&gt;</comment>
                            <comment id="13899917" author="nkeywal" created="Thu, 13 Feb 2014 01:52:26 +0000"  >&lt;p&gt;the patch relies on:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;basically everything else in the 10070 scope&lt;/li&gt;
	&lt;li&gt;interruption like 10472&lt;/li&gt;
	&lt;li&gt;cleanup like 10490&lt;/li&gt;
	&lt;li&gt;and another patch around interruption in RpcClient that I will submit later on.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="13900140" author="nkeywal" created="Thu, 13 Feb 2014 09:01:41 +0000"  >&lt;p&gt;Another dependency btw is that I&apos;m using some jdk 1.7 API.&lt;/p&gt;

&lt;p&gt;This patch is awaiting reviews &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13901036" author="devaraj" created="Fri, 14 Feb 2014 02:19:53 +0000"  >&lt;p&gt;Looks good overall. One question -&lt;br/&gt;
Consider a case where a table is created with three replicas. All the replicas are not assigned (hence, the meta is not updated with the locations yet). Now a client comes in, and the information that he sees would be partial (let&apos;s say location_for_replica_0 and location_for_replica_2 are known). The location for replica_1 would be null. It seems like the client wouldn&apos;t know about the missing location until he refetches the row from the meta (which would not happen until there is activity like a region move). I am talking about the ReplicaRegionServerCallable class. Maybe if the location is null, the client should hit the meta always?&lt;br/&gt;
When we support online schema changes for #replicas, in the case where we reduce the count, we would have to cancel the RPCs that are trying to hit the no-longer-existent replica. Similarly, when we increase the count, we should discover these new replicas.&lt;/p&gt;

&lt;p&gt;One nit is that all the methods/fields that you made public for tests should be annotated with VisibleForTesting.&lt;/p&gt;</comment>
                            <comment id="13901221" author="nkeywal" created="Fri, 14 Feb 2014 08:24:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;the information that he sees would be partial &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hum. Yes, it&apos;s not well managed in the patch as it is. It&apos;s a little bit complex, because the contract of the getLocation is to retry, so the code expects the locations to be good. If we don&apos;t do that, we will have two level of retries (one in getLocation, one in the retrying callable). I can either manage the case explicitly, either getLocation should return a full &amp;amp; good location set.&lt;/p&gt;

&lt;p&gt;On the same  range, if we change dynamically (without disable / enable) the number of replica, the client we would be surprised.&lt;/p&gt;

&lt;p&gt;Lastly, as it is today, we stop on the first &apos;definitive&apos; error: we don&apos;t wait for all replica to fails, we stop when one of the replica says &apos;it does not work&apos;. It&apos;s a trade off, doing differently could make sense as well.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe if the location is null, the client should hit the meta always?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I can do that (force reload).&lt;/p&gt;

&lt;p&gt;About the jdk 1.7, it&apos;s the completion service that is not available on 1.6.&lt;br/&gt;
It&apos;s not a big dependency, but makes the code much simpler and safer.&lt;/p&gt;

&lt;p&gt;We actually didn&apos;t conclude when we discussed 1.7 in this thread, 6 months ago. &lt;a href=&quot;http://search-hadoop.com/m/X9ivp1d7Xoc2&amp;amp;subj=Re+Default+JDK+settings+for+Jenkins+projects&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/X9ivp1d7Xoc2&amp;amp;subj=Re+Default+JDK+settings+for+Jenkins+projects&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13903414" author="nkeywal" created="Mon, 17 Feb 2014 17:56:57 +0000"  >&lt;p&gt;v2:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;continue when it can&apos;t get a region, or if the number of replicas is below expectation&lt;/li&gt;
	&lt;li&gt;compiles with jdk 1.6&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13905853" author="enis" created="Wed, 19 Feb 2014 18:51:59 +0000"  >&lt;p&gt;The patch looks great. &lt;br/&gt;
This patch defines primaryCallTimeout in nanosec, while &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10356&quot; title=&quot;Failover RPC&amp;#39;s for multi-get &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10356&quot;&gt;&lt;del&gt;HBASE-10356&lt;/del&gt;&lt;/a&gt; is in ms. We should fix either that or this. We can append ns or ms to the name of the conf option. &lt;/p&gt;

&lt;p&gt;It looks costly to get these from configuration for every get:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; callTimeout = configuration.getInt(
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can we get this once and save it at initialization. &lt;/p&gt;

&lt;p&gt;Interruption via Future.cancel() seems good. It works with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10472&quot; title=&quot;Manage the interruption in ZKUtil#getData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10472&quot;&gt;&lt;del&gt;HBASE-10472&lt;/del&gt;&lt;/a&gt;, right? I guess CompletionService is also available for jdk6. Are you gonna submit an updated patch? &lt;/p&gt;</comment>
                            <comment id="13905878" author="nkeywal" created="Wed, 19 Feb 2014 19:02:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;We should fix either that or this&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we need micro seconds, at least for testing: a synchronous get takes ~0.2ms on my 1Gb network, so if we want to play with the secondary calls probability with probability different than 0 &amp;amp; 100%, we need it. As well, for end user, it makes send to use values like 50m microseconds: compared to 1ms, it divides the latency by 2. And the perf will be much better on a modern hardware actually.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It works with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10472&quot; title=&quot;Manage the interruption in ZKUtil#getData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10472&quot;&gt;&lt;del&gt;HBASE-10472&lt;/del&gt;&lt;/a&gt;, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, plus &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10525&quot; title=&quot;Allow the client to use a different thread for writing to ease interrupt&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10525&quot;&gt;&lt;del&gt;HBASE-10525&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I guess CompletionService is also available for jdk6&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Actually yes. I was wrong. But the v2 simplifies a little the code compared to the default CompletionService, so I prefer to keep it actually.&lt;/p&gt;</comment>
                            <comment id="13905887" author="nkeywal" created="Wed, 19 Feb 2014 19:04:23 +0000"  >&lt;p&gt;I forgot about this:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;int callTimeout = configuration.getInt(&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;m going to do a v3 to do that;&lt;/p&gt;</comment>
                            <comment id="13906488" author="enis" created="Thu, 20 Feb 2014 02:06:45 +0000"  >&lt;p&gt;While testing this (v1 patch) with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10572&quot; title=&quot;Create an IntegrationTest for region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10572&quot;&gt;&lt;del&gt;HBASE-10572&lt;/del&gt;&lt;/a&gt;, I noticed some of the reader threads are stuck in: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;TimeBoundedMultiThreadedReaderThread_13&quot;&lt;/span&gt; prio=10 tid=0x00007fafd02ed000 nid=0x4a3e waiting on condition [0x00007fafc1799000]
	   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (parking)
		at sun.misc.Unsafe.park(Native Method)
		- parking to wait &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;  &amp;lt;0x00000000bd6d2520&amp;gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
		at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
		at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)
		at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
		at java.util.concurrent.ExecutorCompletionService.take(ExecutorCompletionService.java:193)
		at org.apache.hadoop.hbase.client.RpcRetryingCallerWithFallBack.call(RpcRetryingCallerWithFallBack.java:183)
		- locked &amp;lt;0x00000000bd6d25c0&amp;gt; (a org.apache.hadoop.hbase.client.RpcRetryingCallerWithFallBack)
		at org.apache.hadoop.hbase.client.HTable.get(HTable.java:821)
		at org.apache.hadoop.hbase.util.MultiThreadedReader$HBaseReaderThread.queryKey(MultiThreadedReader.java:286)
		at org.apache.hadoop.hbase.util.MultiThreadedReader$HBaseReaderThread.readKey(MultiThreadedReader.java:247)
		at org.apache.hadoop.hbase.util.MultiThreadedReader$HBaseReaderThread.runReader(MultiThreadedReader.java:190)
		at org.apache.hadoop.hbase.util.MultiThreadedReader$HBaseReaderThread.run(MultiThreadedReader.java:148)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I am still looking into the root cause, but just wanted to give a heads up. Maybe the CompletionService in v2 solves this, but have not checked it yet. &lt;/p&gt;</comment>
                            <comment id="13907197" author="nkeywal" created="Thu, 20 Feb 2014 17:19:03 +0000"  >&lt;p&gt;The v3 takes the comments above into account.&lt;/p&gt;</comment>
                            <comment id="13908518" author="nkeywal" created="Fri, 21 Feb 2014 16:56:40 +0000"  >&lt;p&gt;I don&apos;t think I can commit this until &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10351&quot; title=&quot;LoadBalancer changes for supporting region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10351&quot;&gt;&lt;del&gt;HBASE-10351&lt;/del&gt;&lt;/a&gt; makes it, but is there any comment on the v3 already?&lt;/p&gt;</comment>
                            <comment id="13908673" author="enis" created="Fri, 21 Feb 2014 18:56:42 +0000"  >&lt;p&gt;Agreed, we need &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10351&quot; title=&quot;LoadBalancer changes for supporting region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10351&quot;&gt;&lt;del&gt;HBASE-10351&lt;/del&gt;&lt;/a&gt; before this. I&apos;ll address Sergey&apos;s comments there. I am continuing to test this using &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10572&quot; title=&quot;Create an IntegrationTest for region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10572&quot;&gt;&lt;del&gt;HBASE-10572&lt;/del&gt;&lt;/a&gt;. One issue was that, the after we fire the requests for replicas, and the initial returns back, we interrupt the RPCs. If the RPC happens to be in the getLocationsFromMeta() phase, then we end up removing all the entries going to that server with MetaCache.clearCache(ServerName) (although the server did not fail). This happens quite often: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-02-21 06:19:46,230 DEBUG [htable-pool68-t6] client.RegionServerCallable: org.apache.hadoop.hbase.client.RetriesExhaustedException: Can&apos;t get the location
	at org.apache.hadoop.hbase.client.RpcRetryingCallerWithFallBack.getRegionLocations(RpcRetryingCallerWithFallBack.java:253)
	at org.apache.hadoop.hbase.client.RpcRetryingCallerWithFallBack.access$0(RpcRetryingCallerWithFallBack.java:242)
	at org.apache.hadoop.hbase.client.RpcRetryingCallerWithFallBack$ReplicaRegionServerCallable.prepare(RpcRetryingCallerWithFallBack.java:106)
	at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:120)
	at org.apache.hadoop.hbase.client.RpcRetryingCallerWithFallBack$RetryingRPC.call(RpcRetryingCallerWithFallBack.java:148)
	at org.apache.hadoop.hbase.client.RpcRetryingCallerWithFallBack$RetryingRPC.call(RpcRetryingCallerWithFallBack.java:1)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:722)
Caused by: java.io.InterruptedIOException
	at org.apache.hadoop.hbase.util.ExceptionUtil.asInterrupt(ExceptionUtil.java:62)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getRemoteException(ProtobufUtil.java:297)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getRowOrBefore(ProtobufUtil.java:1528)
	at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.locateRegionInMeta(ConnectionManager.java:1165)
	at org.apache.hadoop.hbase.client.ConnectionManager$HConnectionImplementation.locateRegion(ConnectionManager.java:1038)
	at org.apache.hadoop.hbase.client.RpcRetryingCallerWithFallBack.getRegionLocations(RpcRetryingCallerWithFallBack.java:246)
	... 10 more
Caused by: java.lang.InterruptedException
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
	at org.apache.hadoop.hbase.ipc.RpcClient.call(RpcClient.java:1470)
	at org.apache.hadoop.hbase.ipc.RpcClient.callBlockingMethod(RpcClient.java:1684)
	at org.apache.hadoop.hbase.ipc.RpcClient$BlockingRpcChannelImplementation.callBlockingMethod(RpcClient.java:1740)
	at org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$BlockingStub.get(ClientProtos.java:29240)
	at org.apache.hadoop.hbase.protobuf.ProtobufUtil.getRowOrBefore(ProtobufUtil.java:1524)
	... 13 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following fragment solves the issue for me. Basically we just rethrow InterrruptedIOEx. Can you take a look:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; RegionLocations getRegionLocations(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; useCache)
-      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; RetriesExhaustedException, DoNotRetryIOException {
+      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; RetriesExhaustedException, DoNotRetryIOException, InterruptedIOException {
     RegionLocations rl;
     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
       rl = cConnection.locateRegion(tableName, get.getRow(), useCache, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
+    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (DoNotRetryIOException e) {
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
+    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (RetriesExhaustedException e) {
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
+    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedIOException e) {
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
     } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; DoNotRetryIOException) {
-        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; (DoNotRetryIOException) e;
-      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; RetriesExhaustedException) {
-        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; (RetriesExhaustedException) e;
-      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
-        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RetriesExhaustedException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Can&apos;t get the location&quot;&lt;/span&gt;, e);
-      }
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RetriesExhaustedException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Can&apos;t get the location&quot;&lt;/span&gt;, e);
     }
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rl == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
       &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RetriesExhaustedException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Can&apos;t get the locations&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I am also running into some other problems about &lt;b&gt;a lot&lt;/b&gt; of meta cache entries being evicted although there is no CM running: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2014-02-21 06:55:29,678 DEBUG [htable-pool89-t3] client.ConnectionManager$HConnectionImplementation: locateRegionInMeta parentTable=hbase:meta, metaLocation={region=hbase:meta,,1.1588230740, hostname=hor8n04.gq1.ygridcore.net,60020,1392965421232, seqNum=0}, attempt=4 of 35 failed; retrying after sleep of 1005 because: IPC Client (1480703560) connection to hor8n04.gq1.ygridcore.net/68.142.245.215:60020 from hrt_qa is closing
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Still looking into the root cause : ) &lt;/p&gt;</comment>
                            <comment id="13908711" author="enis" created="Fri, 21 Feb 2014 19:24:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;I am also running into some other problems about a lot of meta cache entries being evicted although there is no CM running&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Scratch that! The root cause turned out to be that, I did not enable &quot;hbase.ipc.client.allowsInterrupt&quot; (from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10525&quot; title=&quot;Allow the client to use a different thread for writing to ease interrupt&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10525&quot;&gt;&lt;del&gt;HBASE-10525&lt;/del&gt;&lt;/a&gt;), thus the rpc cancel interruptions was closing the connections left and right. We should either document this very well, or auto-enable interrupts if this jira is used.  &lt;br/&gt;
Let me run some longer tests before commit. Will return back. &lt;/p&gt;</comment>
                            <comment id="13910141" author="nkeywal" created="Mon, 24 Feb 2014 09:33:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;The following fragment solves the issue for me. Basically we just rethrow InterrruptedIOEx. Can you take a look:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This would work. We need as well to exclude the SocketTimeoutException. This is done by an utility class. So it would become:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; RegionLocations getRegionLocations(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; useCache)
      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; RetriesExhaustedException, DoNotRetryIOException, InterruptedIOException {
    RegionLocations rl;
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      rl = cConnection.locateRegion(tableName, get.getRow(), useCache, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (DoNotRetryIOException e) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (RetriesExhaustedException e) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
      ExceptionUtil.rethrowIfInterrupt(e);
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RetriesExhaustedException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Can&apos;t get the location&quot;&lt;/span&gt;, e);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rl == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RetriesExhaustedException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Can&apos;t get the locations&quot;&lt;/span&gt;);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; rl;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13910643" author="nkeywal" created="Mon, 24 Feb 2014 18:52:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;We should either document this very well, or auto-enable interrupts if this jira is used. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s not easy to do that, because the RpcClient does not really know about the replica.&lt;br/&gt;
Something that we could do however, is to do a single check in HTable: if we have a get with Consistency != Strong, we check the value for allowsInterrupt. If false, we log a warning message. The other option would be to throw an illegalStateException, if we want to say that we support only this option with replica (and it would make sense).&lt;/p&gt;</comment>
                            <comment id="13910688" author="devaraj" created="Mon, 24 Feb 2014 19:17:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;Something that we could do however, is to do a single check in HTable: if we have a get with Consistency != Strong,&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;, wondering if it is possible to set the configuration to have interrupts enabled from the HTable layer and pass it down to the RPC layer.&lt;/p&gt;</comment>
                            <comment id="13910708" author="nkeywal" created="Mon, 24 Feb 2014 19:30:19 +0000"  >&lt;p&gt;The connection is shared between the tables, so you don&apos;t really know: if the first get is on a table that don&apos;t have replica, then the connection will be w/o the separate writer. HTable knows very little about replica today. It only sees something when it receives a get with consistency != strong.&lt;/p&gt;

&lt;p&gt;Note that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10566&quot; title=&quot;cleanup rpcTimeout in the client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10566&quot;&gt;&lt;del&gt;HBASE-10566&lt;/del&gt;&lt;/a&gt; is about being able to have a single path (once the socket timeout it out of the way, we can have a thread pool for the readers and the writers).&lt;/p&gt;</comment>
                            <comment id="13911030" author="stack" created="Tue, 25 Feb 2014 00:12:32 +0000"  >&lt;p&gt;This has to be public?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private RegionLocations locateRegion(final TableName tableName,&lt;br/&gt;
+    @Override&lt;br/&gt;
+    public RegionLocations locateRegion(final TableName tableName,&lt;br/&gt;
       final byte [] row, boolean useCache, boolean retry)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;RpcRetryingCallerWithFallBack doesn&apos;t seem right name for this class... should call out use of Replicas.  ...WithReadReplicas?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+   * - we can be interrupted&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It must have been fun finding all the ugly ways in which an interrupted call can fail (just had this experience over on DFSClient... gave up for now... its not &apos;interruptible&apos; w/o a load of refactor).&lt;/p&gt;

&lt;p&gt;Do something other than an IOE?  +        throw new IOException(&quot;There is no location for replica id #&quot; + id);&lt;/p&gt;

&lt;p&gt;Something that subclasses HBaseIOE?  (Think Benoit).&lt;/p&gt;

&lt;p&gt;Can we avoid HRegion having to know about &apos;replicas&apos;?&lt;/p&gt;

&lt;p&gt;     List&amp;lt;Cell&amp;gt; results = get(get, true);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return Result.create(results, get.isCheckExistenceOnly() ? !results.isEmpty() : null);&lt;br/&gt;
+    boolean stale = !ServerRegionReplicaUtil.isDefaultReplica(this.getRegionInfo());&lt;br/&gt;
+    return Result.create(results, get.isCheckExistenceOnly() ? !results.isEmpty() : null, stale);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is repeated code?  In HRegion and in HRegionServer.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ClientProtos.Result pbr = ProtobufUtil.toResult(existence);&lt;br/&gt;
+        boolean stale = !ServerRegionReplicaUtil.isDefaultReplica(region.getRegionInfo());&lt;br/&gt;
+        ClientProtos.Result pbr = ProtobufUtil.toResult(existence, stale);&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Patch looks good enough to apply to branch.&lt;/p&gt;

</comment>
                            <comment id="13912892" author="nkeywal" created="Wed, 26 Feb 2014 13:39:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;This has to be public?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think so, as it&apos;s in the interface. But it&apos;s in ClusterConnection, not HConnection.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;should call out use of Replicas. ...WithReadReplicas?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok, will do.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Something that subclasses HBaseIOE? (Think Benoit).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Will do as well.&lt;/p&gt;

&lt;p&gt;bq Can we avoid HRegion having to know about &apos;replicas&apos;?&lt;br/&gt;
I don&apos;t know how &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is repeated code? In HRegion and in HRegionServer.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I can move the  !ServerRegionReplicaUtil.isDefaultReplica(this.getRegionInfo()); into HRI?&lt;br/&gt;
Then the code would be &lt;br/&gt;
ClientProtos.Result pbr = ProtobufUtil.toResult(existence, this.getRegionInfo().isDefaultReplica());&lt;br/&gt;
It would be more &quot;object oriented&quot;, like in the 90&apos;&lt;/p&gt;</comment>
                            <comment id="13912993" author="nkeywal" created="Wed, 26 Feb 2014 15:03:27 +0000"  >&lt;p&gt;I&apos;ve also added a patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10018&quot; title=&quot;Remove region location prefetching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10018&quot;&gt;&lt;del&gt;HBASE-10018&lt;/del&gt;&lt;/a&gt;. Hopefully, this will lower the pressure on .meta.&lt;/p&gt;</comment>
                            <comment id="13919630" author="nkeywal" created="Tue, 4 Mar 2014 16:59:29 +0000"  >&lt;p&gt;v4 is the version:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;taking into account the tip of 10070&lt;/li&gt;
	&lt;li&gt;with Enis &amp;amp; Stack comments taken into account.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13920683" author="nkeywal" created="Wed, 5 Mar 2014 09:17:26 +0000"  >&lt;p&gt;This was reviewed before. I changes some stuff in the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10356&quot; title=&quot;Failover RPC&amp;#39;s for multi-get &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10356&quot;&gt;&lt;del&gt;HBASE-10356&lt;/del&gt;&lt;/a&gt; since the previous +1.&lt;br/&gt;
Any issue if I commit this patch as it is in the branch 10070?&lt;/p&gt;</comment>
                            <comment id="13922965" author="devaraj" created="Thu, 6 Mar 2014 19:48:57 +0000"  >&lt;p&gt;Looks good overall. Some minor nits (you can fix on commit).&lt;br/&gt;
1. Remove the unused import in HRegionServer.java&lt;br/&gt;
2. Put a comment in RpcRetryingCallerWithReadReplicas.prepare method on the scenario when location can be null (the place where you throw HBaseIOE).&lt;/p&gt;

&lt;p&gt;I was running the test &lt;br/&gt;
mvn clean -Dtest=TestReplicasClient#testGetNoResultStaleRegionWithReplica test&lt;br/&gt;
but it seems to hang. Could you please check this.&lt;/p&gt;

&lt;p&gt;There are some changes in the patches v3 and v4 to do with the &apos;stale&apos; setting. For example, in v3, there were changes in ProtobufUtil.java and in HRegion.java (look at Footnote below) but in v4 those changes are not present. I went through some missing changes and they already are present in the branch (some of them introduced via &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12628542/10354.add.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12628542/10354.add.patch&lt;/a&gt; and the related comment is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10354?focusedCommentId=13899470&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13899470&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-10354?focusedCommentId=13899470&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13899470&lt;/a&gt;). Please ensure the necessary changes are all there in the latest patch.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Footnote - Stack had commented earlier - &amp;quot;Can we avoid HRegion having to know about &amp;#39;replicas&amp;#39;?&amp;quot; but it seems the branch already has this change.&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="13923028" author="nkeywal" created="Thu, 6 Mar 2014 20:39:00 +0000"  >&lt;p&gt;Nice catch. I have a funny test dependency, because it works when I execute all tests, but not if I execute only this one.&lt;br/&gt;
Will fix.&lt;/p&gt;</comment>
                            <comment id="13923124" author="nkeywal" created="Thu, 6 Mar 2014 21:54:25 +0000"  >&lt;p&gt;v5. Clearing the cache before running the test helps. I need to understand why it helps...&lt;/p&gt;</comment>
                            <comment id="13924387" author="enis" created="Fri, 7 Mar 2014 22:00:48 +0000"  >&lt;p&gt;Nicolas committed this to hbase-10070. Resolving. &lt;/p&gt;</comment>
                            <comment id="14046616" author="enis" created="Sat, 28 Jun 2014 01:47:17 +0000"  >&lt;p&gt;Attaching rebased patch for master that is committed&lt;/p&gt;</comment>
                            <comment id="14046665" author="enis" created="Sat, 28 Jun 2014 02:08:08 +0000"  >&lt;p&gt;Committed to master as part of hbase-10070 branch merge&lt;/p&gt;</comment>
                            <comment id="14046753" author="hudson" created="Sat, 28 Jun 2014 06:13:58 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5245 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5245/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5245/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10355&quot; title=&quot;Failover RPC&amp;#39;s from client using region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10355&quot;&gt;&lt;del&gt;HBASE-10355&lt;/del&gt;&lt;/a&gt; Failover RPC&apos;s from client using region replicas (enis: rev c2f6f479adc9fb108ba69e0407799dbdf5eaefa7)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/BoundedCompletionService.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestReplicasClient.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StorefileRefresherChore.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/client/CoprocessorHConnection.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerWithReadReplicas.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionAdapter.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClusterConnection.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331041" author="enis" created="Sat, 21 Feb 2015 23:33:01 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12680714">HBASE-10018</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12695003">HBASE-10525</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12697910">HBASE-10637</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                            <outwardlinks description="requires">
                                        <issuelink>
            <issuekey id="12689109">HBASE-10348</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12689113">HBASE-10351</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12689125">HBASE-10354</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12652955" name="0017-HBASE-10355-Failover-RPC-s-from-client-using-region-.patch" size="48573" author="enis" created="Sat, 28 Jun 2014 01:47:16 +0000"/>
                            <attachment id="12628647" name="10355.v1.patch" size="38894" author="nkeywal" created="Thu, 13 Feb 2014 01:50:09 +0000"/>
                            <attachment id="12629407" name="10355.v2.patch" size="40109" author="nkeywal" created="Mon, 17 Feb 2014 17:56:17 +0000"/>
                            <attachment id="12630094" name="10355.v3.patch" size="40777" author="nkeywal" created="Thu, 20 Feb 2014 17:18:15 +0000"/>
                            <attachment id="12632532" name="10355.v4.patch" size="41969" author="nkeywal" created="Tue, 4 Mar 2014 16:58:33 +0000"/>
                            <attachment id="12633232" name="10355v5.patch" size="42358" author="nkeywal" created="Thu, 6 Mar 2014 21:52:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Jan 2014 00:08:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>368093</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1rg1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>368398</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>