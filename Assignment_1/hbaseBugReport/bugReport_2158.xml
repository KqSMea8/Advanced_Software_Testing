<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:59:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2158/HBASE-2158.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2158] Change how high/low global limit works; start taking on writes as soon as we dip below high limit rather than block until low limit as we currently do.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2158</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;A Ryan Rawson suggestion.  See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2149&quot; title=&quot;hbase.regionserver.global.memstore.lowerLimit is too low&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2149&quot;&gt;&lt;del&gt;HBASE-2149&lt;/del&gt;&lt;/a&gt; for more context.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12446353">HBASE-2158</key>
            <summary>Change how high/low global limit works; start taking on writes as soon as we dip below high limit rather than block until low limit as we currently do.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Jan 2010 18:40:39 +0000</created>
                <updated>Wed, 7 Sep 2011 17:05:59 +0000</updated>
                            <resolved>Wed, 7 Sep 2011 15:16:38 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12803813" author="jdcryans" created="Fri, 22 Jan 2010 18:44:38 +0000"  >&lt;p&gt;Also we should start flushing the bigger memstores in MemStoreFlusher as soon as we reach the lower limit when the thread doesn&apos;t have anything to flush.&lt;/p&gt;</comment>
                            <comment id="13098581" author="anty" created="Wed, 7 Sep 2011 04:10:26 +0000"  >&lt;p&gt;Currently, the logical is just the same as you wish, write can continue as soon as we dip down high limit.&lt;br/&gt;
we don&apos;t need any change.&lt;/p&gt;</comment>
                            <comment id="13098586" author="sunnygao" created="Wed, 7 Sep 2011 04:23:49 +0000"  >&lt;p&gt;I agree.this issue should be closed.&lt;/p&gt;</comment>
                            <comment id="13098599" author="stack" created="Wed, 7 Sep 2011 05:09:18 +0000"  >&lt;p&gt;Thanks for going back through the issues, looking into this, and figuring it can be closed lads.  What code changed that allows us close this now?&lt;/p&gt;</comment>
                            <comment id="13098627" author="anty" created="Wed, 7 Sep 2011 06:09:00 +0000"  >&lt;p&gt;I don&apos;t known the exact code changed.&lt;br/&gt;
I come across this issue, and I am a little doubt.After looking through the code of hbase-0.90.4, i am sure that the current write path can continue when we dip down the high limit, whatever the low limit is .&lt;br/&gt;
when above low limit( and already cross the high water marker), the flusher will try its best to shrink memory to below the low limit by picking memstore to flush, but it doesn&apos;t blocking write.&lt;/p&gt;</comment>
                            <comment id="13098640" author="stack" created="Wed, 7 Sep 2011 06:24:22 +0000"  >&lt;p&gt;Can you point to where in the code you see what we continue writing as soon as we dip under the high-water mark?  You can use the x-ref tool here: &lt;a href=&quot;http://hbase.apache.org/xref/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/xref/index.html&lt;/a&gt;  Thanks.&lt;/p&gt;</comment>
                            <comment id="13098645" author="sunnygao" created="Wed, 7 Sep 2011 06:31:29 +0000"  >&lt;p&gt;when memory reach the low limit, we should start a emergency Flusher. So I think It is diffcult to reach the high limit and if we reach it ,we will flush one by one.&lt;/p&gt;

&lt;p&gt;if (fqe == null || fqe instanceof WakeupFlushThread) {&lt;br/&gt;
          if (isAboveLowWaterMark()) {&lt;br/&gt;
            LOG.info(&quot;Flush thread woke up with memory above low water.&quot;);&lt;br/&gt;
            if (!flushOneForGlobalPressure()) {&lt;br/&gt;
              // Wasn&apos;t able to flush any region, but we&apos;re above low water mark&lt;br/&gt;
              // This is unlikely to happen, but might happen when closing the&lt;br/&gt;
              // entire server - another thread is flushing regions. We&apos;ll just&lt;br/&gt;
              // sleep a little bit to avoid spinning, and then pretend that&lt;br/&gt;
              // we flushed one, so anyone blocked will check again&lt;br/&gt;
              lock.lock();&lt;br/&gt;
              try &lt;/p&gt;
{
                Thread.sleep(1000);
                flushOccurred.signalAll();
              }
&lt;p&gt; finally &lt;/p&gt;
{
                lock.unlock();
              }
&lt;p&gt;            }&lt;br/&gt;
            // Enqueue another one of these tokens so we&apos;ll wake up again&lt;br/&gt;
            wakeupFlushThread();&lt;br/&gt;
          }&lt;br/&gt;
          continue;&lt;br/&gt;
        }&lt;/p&gt;</comment>
                            <comment id="13098655" author="anty" created="Wed, 7 Sep 2011 06:44:11 +0000"  >&lt;p&gt;stack, and also see &lt;a href=&quot;http://hbase.apache.org/xref/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.html#415&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/xref/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.html#415&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; void reclaimMemStoreMemory()
    {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isAboveHighWaterMark())
        {
            lock.lock();
            &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt;
            {
                &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (isAboveHighWaterMark() &amp;amp;&amp;amp; !server.isStopped())
                {
                    wakeupFlushThread();
                    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt;
                    {
                        &lt;span class=&quot;code-comment&quot;&gt;// we should be able to wait forever, but we&apos;ve seen a
&lt;/span&gt;                        &lt;span class=&quot;code-comment&quot;&gt;// bug where
&lt;/span&gt;                        &lt;span class=&quot;code-comment&quot;&gt;// we miss a notify, so put a 5 second bound on it at
&lt;/span&gt;                        &lt;span class=&quot;code-comment&quot;&gt;// least.
&lt;/span&gt;                        flushOccurred.await(5, TimeUnit.SECONDS);
                    }
                    &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException ie)
                    {
                        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
                    }
                }
            }
            &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt;
            {
                lock.unlock();
            }
        }
        &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isAboveLowWaterMark())
        {
            wakeupFlushThread();
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13098671" author="anty" created="Wed, 7 Sep 2011 07:16:45 +0000"  >&lt;p&gt;when memory usage is above the high limit, the write will be suspended, waiting for the flusher to push down the memory usage by flushing some regions.&lt;br/&gt;
after flusher attempting to flush any region, the write will be notify to check whether it can go on,&lt;br/&gt;
if memory usage is above the high water mark, it will go into sleep again, otherwise, the write continue.&lt;br/&gt;
Hopefully i&apos;m not wrong.&lt;/p&gt;</comment>
                            <comment id="13099014" author="stack" created="Wed, 7 Sep 2011 15:16:38 +0000"  >&lt;p&gt;Closed based on Anty and Gaojinchao&apos;s analysis above.  Thanks for digging in lads.&lt;/p&gt;</comment>
                            <comment id="13099100" author="tlipcon" created="Wed, 7 Sep 2011 17:05:59 +0000"  >&lt;p&gt;This was fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3483&quot; title=&quot;No soft flush trigger on global memstore limit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3483&quot;&gt;&lt;del&gt;HBASE-3483&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12496883">HBASE-3483</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12473830">HBASE-2981</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 22 Jan 2010 18:44:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32432</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 15 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hglz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99953</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>