<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:49:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1002/HBASE-1002.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1002] Coprocessors: Support small query language as filter on server side</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1002</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Improve the usability of filters by making them specifiable or executable using a little query language. &lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;    col(&quot;entry:price&quot;) &amp;gt; 3 &amp;amp;&amp;amp; (col(&quot;entry:name&quot;) = &quot;ABC&quot; || col(&quot;entry:name&quot;) = &quot;XYZ&quot;)&lt;/p&gt;

&lt;p&gt;Can be implemented as a little language compiler that takes filter specifications as input and builds the requisite hierarchy of filter API classes and actions as emitted java code. &lt;/p&gt;

&lt;p&gt;Compiler can be a utility class, something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Scan scan = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Scan();
scan.addFamily(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;entry&quot;&lt;/span&gt;));
&lt;span class=&quot;code-comment&quot;&gt;// ...
&lt;/span&gt;scan.setFilter(Filter.compile(&lt;span class=&quot;code-quote&quot;&gt;&quot;col(\&quot;&lt;/span&gt;entry:price\&quot;) &amp;gt; 3 &amp;amp;&amp;amp; 
(col(\&lt;span class=&quot;code-quote&quot;&gt;&quot;entry:name\&quot;&lt;/span&gt;) =  \&lt;span class=&quot;code-quote&quot;&gt;&quot;ABC\&quot;&lt;/span&gt; || col(\&lt;span class=&quot;code-quote&quot;&gt;&quot;entry:name\&quot;&lt;/span&gt;) = \&lt;span class=&quot;code-quote&quot;&gt;&quot;XYZ\&quot;&lt;/span&gt;&quot;));
&lt;span class=&quot;code-comment&quot;&gt;// ...&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or even something like&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Scan scan = Filter.compileScan(&lt;span class=&quot;code-quote&quot;&gt;&quot;col(\&quot;&lt;/span&gt;entry:price\&quot;) &amp;gt; 3 &amp;amp;&amp;amp; 
(col(\&lt;span class=&quot;code-quote&quot;&gt;&quot;entry:name\&quot;&lt;/span&gt;) =  \&lt;span class=&quot;code-quote&quot;&gt;&quot;ABC\&quot;&lt;/span&gt; || col(\&lt;span class=&quot;code-quote&quot;&gt;&quot;entry:name\&quot;&lt;/span&gt;) = \&lt;span class=&quot;code-quote&quot;&gt;&quot;XYZ\&quot;&lt;/span&gt;&quot;));
&lt;span class=&quot;code-comment&quot;&gt;// ...&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can also be implemented using JRuby snippets sent to the regionserver for execution, but this has troublesome security implications.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12408672">HBASE-1002</key>
            <summary>Coprocessors: Support small query language as filter on server side</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12441373">HBASE-2000</parent>
                                    <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Mon, 17 Nov 2008 19:20:14 +0000</created>
                <updated>Mon, 13 Dec 2010 23:58:30 +0000</updated>
                            <resolved>Mon, 13 Dec 2010 23:58:30 +0000</resolved>
                                                                    <component>Filters</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="12648269" author="apurtell" created="Mon, 17 Nov 2008 19:26:28 +0000"  >&lt;p&gt;Here is a conversation about this on IRC:&lt;/p&gt;

&lt;p&gt;(10:41:16 AM) ffgeek200: are there any thoughts regarding a future query languages for row filters?&lt;br/&gt;
(10:42:43 AM) st^Ack_: ffgeek200: how do you mean?&lt;br/&gt;
(10:44:06 AM) ffgeek200: st^Ack_: ie give me all rows where &quot;(int(col(&quot;entry:price&quot;)) &amp;gt; 3 &amp;amp;&amp;amp; col(&quot;entry:name&quot;)==&quot;ABC&quot; || col(&quot;entry:name&quot;)=&quot;XYZ&quot;&lt;br/&gt;
(10:45:28 AM) apurtell: ffgeek200: filter spec -&amp;gt; little language compiler -&amp;gt; specialized bytecode -&amp;gt; execution on regionserver during scanner traversal ?&lt;br/&gt;
(10:46:11 AM) ffgeek200: apurtell: yes&lt;br/&gt;
(10:46:56 AM) apurtell: ffgeek200: what about filter spec -&amp;gt; little language compiler -&amp;gt; code to build existing (maybe modified a little) filter class heirarchies -&amp;gt; send to regionserver in the current manner?&lt;br/&gt;
(10:49:30 AM) ffgeek200: apurtell: it could be implemented in many ways yes. That is another way. What about something crazy like writing java code that implements a RowFilterInterface method &quot;boolean isFiltered(Row row)&quot;, then serialize that class over the network... let Java deal with compilation since it does that well.&lt;br/&gt;
(10:50:01 AM) st^Ack_: or apurtell, how about a jruby filter? You pass it jruby code, and it runs it on every row?&lt;br/&gt;
(10:50:51 AM) ffgeek200: jruby would work. I remember reading about a similar database and they used server-side javascript for this purpose.&lt;br/&gt;
(10:52:16 AM) apurtell: stack,ffgeek200: jruby snippit is good. was going to reply that java serialization only works if the classes are available at each endpoint (java serialization does not ship code afaik).&lt;br/&gt;
(10:54:37 AM) ffgeek200: apurtell: true. I think that would be cleaner than how it is currently done, trying to munge your row filter to do what you want.&lt;br/&gt;
(10:55:12 AM) st^Ack_: apurtell: yes that the classes would have to be on CLASSPATH on either end of the serialization. jruby script would be better (this jruby suggestion is just your filter spec -&amp;gt; little language compiler -&amp;gt; etc. suggestion generalized)&lt;br/&gt;
(10:56:09 AM) apurtell: ffgeek200,stack: downside to jruby snippet is it is an untrusted code upload to regionserver. that&apos;s why i suggested using existing classes, which cause only restricted/controlled actions to happen in the regionserver. on the other hand jruby snippets can be managed when access control is added in a manner similar to how rdbms controls stored procedures.&lt;br/&gt;
(10:56:52 AM) st^Ack_: apurtell: you are right&lt;br/&gt;
(10:57:08 AM) st^Ack_: very hard preventing jruby snippet running riot&lt;br/&gt;
(10:57:15 AM) apurtell: stack: indeed&lt;br/&gt;
(10:58:13 AM) ffgeek200: apurtell: postgres allows for sprocs to be in pretty much all popular languages, but I&apos;m not sure if it restricts the sprocs.&lt;br/&gt;
(11:00:53 AM) ffgeek200: example of how they do it with ruby: &lt;a href=&quot;http://www.april-child.com/blog/2007/05/10/running-ruby-in-postgresql-on-mac-os-x/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.april-child.com/blog/2007/05/10/running-ruby-in-postgresql-on-mac-os-x/&lt;/a&gt;&lt;br/&gt;
(11:01:42 AM) apurtell: ffeek200: stored procedure access control is rwx by user plus setuid typically, to use a fs metaphor.&lt;br/&gt;
(11:02:02 AM) apurtell: ffgeek200: at least that was what i was referring to.&lt;br/&gt;
(11:03:11 AM) ffgeek200: apurtell: I think it would definitely open a can of worms security-wise. For me it&apos;s fine since I&apos;m in control of everything over here, but others may want restrictions on its usage, maybe they would choose to not compile it in.&lt;br/&gt;
(11:04:25 AM) ffgeek200: no matter what security restrictions you impose, they can of course always sit in a while loop and burn CPU.&lt;br/&gt;
(11:05:33 AM) jgray: ffgeek200: postgres has safe and unsafe integration with other languages for stored procedures&lt;br/&gt;
(11:05:43 AM) apurtell: it does seem to me that a little language compiler that builds hierarchies of filters in the current form is a desirable feature. can be some kind of contrib. common query operators can be supported, and the class implementation server side maintains safety. and anything the &quot;compiler&quot; might do can be constructed by hand as desired (no api changes).&lt;br/&gt;
(11:10:34 AM) ffgeek200: jgray: thanks I forgot about that. apurtell: sounds awesome. I&apos;m biased re: postgres since I think it does a good job of this. What if that little language compiler was done for now, calling it something like hbaseql then later on other languages could be implemented, but the default one is hbaseql.&lt;/p&gt;</comment>
                            <comment id="12867508" author="hammer" created="Fri, 14 May 2010 14:34:04 +0000"  >&lt;p&gt;Note that Google has something similar according to this 2008 article from the SIGMOD Record: &lt;a href=&quot;http://turing.cs.washington.edu/papers/dataprojects-google-sigmodrecord08.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://turing.cs.washington.edu/papers/dataprojects-google-sigmodrecord08.pdf&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12877344" author="larsgeorge" created="Thu, 10 Jun 2010 06:32:59 +0000"  >&lt;p&gt;BTW, I always wondered if a &quot;RhinoFilter&quot; would make sense, i.e. use the Rhino JavaScript engine to interpret the filter rule. I assumed JS is good as far as security is concerned as the context can be limited to just what is needed. I had looked into other Java based solutions like Groovy or Janino. Are they now viable option?&lt;/p&gt;</comment>
                            <comment id="12877346" author="hammer" created="Thu, 10 Jun 2010 06:36:13 +0000"  >&lt;p&gt;Groovy was used in Cassandra for this purpose. I don&apos;t think making people learn Groovy is worthwhile. JavaScript does seem more likely to be used by the web dev crowd.&lt;/p&gt;</comment>
                            <comment id="12971089" author="apurtell" created="Mon, 13 Dec 2010 23:58:30 +0000"  >&lt;p&gt;This issue is subsumed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2396&quot; title=&quot;Coprocessors: Server side dynamic scripting language execution&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2396&quot;&gt;HBASE-2396&lt;/a&gt; and others.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12460852">HBASE-2396</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12431319">HBASE-1696</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 May 2010 14:34:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31943</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 1 week, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d46f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74453</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>