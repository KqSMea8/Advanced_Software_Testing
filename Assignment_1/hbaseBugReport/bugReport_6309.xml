<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:35:37 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6309/HBASE-6309.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6309] [MTTR] Do NN operations outside of the ZK EventThread in SplitLogManager</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6309</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We found this issue during the leap second cataclysm which prompted a distributed splitting of all our logs.&lt;/p&gt;

&lt;p&gt;I saw that none of the RS were splitting after some time while the master was showing that it wasn&apos;t even 30% done. jstack&apos;ing I saw this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&quot;main-EventThread&quot; daemon prio=10 tid=0x00007f6ce46d8800 nid=0x5376 in
Object.wait() [0x00007f6ce2ecb000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.hadoop.ipc.Client.call(Client.java:1093)
        - locked &amp;lt;0x00000005fdd661a0&amp;gt; (a org.apache.hadoop.ipc.Client$Call)
        at org.apache.hadoop.ipc.RPC$Invoker.invoke(RPC.java:226)
        at $Proxy9.rename(Unknown Source)
        at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:82)
        at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:59)
        at $Proxy9.rename(Unknown Source)
        at org.apache.hadoop.hdfs.DFSClient.rename(DFSClient.java:759)
        at org.apache.hadoop.hdfs.DistributedFileSystem.rename(DistributedFileSystem.java:253)
        at org.apache.hadoop.hbase.regionserver.wal.HLogSplitter.moveRecoveredEditsFromTemp(HLogSplitter.java:553)
        at org.apache.hadoop.hbase.regionserver.wal.HLogSplitter.moveRecoveredEditsFromTemp(HLogSplitter.java:519)
        at org.apache.hadoop.hbase.master.SplitLogManager$1.finish(SplitLogManager.java:138)
        at org.apache.hadoop.hbase.master.SplitLogManager.getDataSetWatchSuccess(SplitLogManager.java:431)
        at org.apache.hadoop.hbase.master.SplitLogManager.access$1200(SplitLogManager.java:95)
        at org.apache.hadoop.hbase.master.SplitLogManager$GetDataAsyncCallback.processResult(SplitLogManager.java:1011)
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:571)
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:497)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We are effectively bottlenecking on doing NN operations and whatever else is happening in GetDataAsyncCallback. It was so bad that on our 100 offline cluster it took a few hours for the master to process all the incoming ZK events while the actual splitting took a fraction of that time.&lt;/p&gt;

&lt;p&gt;I&apos;m marking this as critical and against 0.96 but depending on how involved the fix is we might want to backport.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12596847">HBASE-6309</key>
            <summary>[MTTR] Do NN operations outside of the ZK EventThread in SplitLogManager</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="devaraj">Devaraj Das</assignee>
                                    <reporter username="jdcryans">Jean-Daniel Cryans</reporter>
                        <labels>
                    </labels>
                <created>Mon, 2 Jul 2012 23:52:15 +0000</created>
                <updated>Thu, 4 Apr 2013 00:28:39 +0000</updated>
                                            <version>0.92.1</version>
                    <version>0.94.0</version>
                    <version>0.95.2</version>
                                                    <component>MTTR</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13405648" author="ram_krish" created="Tue, 3 Jul 2012 06:10:51 +0000"  >&lt;p&gt;@JD&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6140&quot; title=&quot;Make distributed log splitting faster by changing call site of tmp log renaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6140&quot;&gt;&lt;del&gt;HBASE-6140&lt;/del&gt;&lt;/a&gt; is same as this?&lt;/p&gt;</comment>
                            <comment id="13405969" author="jdcryans" created="Tue, 3 Jul 2012 18:28:01 +0000"  >&lt;p&gt;Hey Ram, yeah it&apos;s pretty much the same although I like my description of the problem better &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;IMO we should move everything that talks to ZK and NN out of that path.&lt;/p&gt;</comment>
                            <comment id="13405976" author="nkeywal" created="Tue, 3 Jul 2012 18:32:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;IMO we should move everything that talks to ZK and NN out of that path.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1...&lt;/p&gt;</comment>
                            <comment id="13406285" author="zjushch" created="Wed, 4 Jul 2012 05:40:39 +0000"  >&lt;p&gt;In current distributed-log-splitting, we will split the logs to a tmp dir.&lt;br/&gt;
How about we directly splitting logs to region dir, so no necessary to do NN operations in finishing task for SplitLogManager.&lt;/p&gt;</comment>
                            <comment id="13406310" author="stack" created="Wed, 4 Jul 2012 06:55:21 +0000"  >&lt;p&gt;@Chunhui What about case where we fail a log splitting... how would the cleanup go?  If into a tmp dir, its easy remove the tmp dir (Otherwise, sounds like a fine idea).&lt;/p&gt;</comment>
                            <comment id="13406316" author="zjushch" created="Wed, 4 Jul 2012 07:03:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;how would the cleanup go?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In HLogSplitter#createWAP&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((tmpname == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &amp;amp;&amp;amp; fs.exists(regionedits)) {
      LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Found existing old edits file. It could be the &quot;&lt;/span&gt;
          + &lt;span class=&quot;code-quote&quot;&gt;&quot;result of a previous failed split attempt. Deleting &quot;&lt;/span&gt;
          + regionedits + &lt;span class=&quot;code-quote&quot;&gt;&quot;, length=&quot;&lt;/span&gt;
          + fs.getFileStatus(regionedits).getLen());
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!fs.delete(regionedits, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;)) {
        LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Failed delete of old &quot;&lt;/span&gt; + regionedits);
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We could also fail a log splitting if using master-local-splitting, the clean up happen in the next splitting as per the above code&lt;/p&gt;</comment>
                            <comment id="13406345" author="stack" created="Wed, 4 Jul 2012 07:54:31 +0000"  >&lt;p&gt;What about the logic in moveRecoveredEditsFromTemp?  It flags corrupted logs and does some other cleanup.  Also seems to find recovered.edits files with a .corrupt ending: see ZKSlitLog.isCorruptFlagFile.... That&apos;d need refactoring and a rename from moveRecoveredEditsFromTemp to &apos;completeLogSplit&apos; or &apos;finish&apos;?&lt;/p&gt;

&lt;p&gt;Otherwise, looking through HLogSplitting and trying to recall issues we&apos;ve run into w/ recovered.edits, I think doing it in place can work.&lt;/p&gt;

&lt;p&gt;Would suggest you look at the region open and replay of recovered.edits stuff too to see if you see any possible issues there (I only went through HLogSplitting).&lt;/p&gt;

&lt;p&gt;(That renaming stuff is pretty heavy duty stuff....but I&apos;d have done the same to cordon off a distributed operation)&lt;/p&gt;

&lt;p&gt;Good stuff Chunhui.&lt;/p&gt;</comment>
                            <comment id="13406353" author="ram_krish" created="Wed, 4 Jul 2012 08:12:35 +0000"  >&lt;p&gt;Currently there are 3 renames in this path.&lt;br/&gt;
The one that renames the temp to recovered.edits path and the next is in archive logs. Here there are 2 one for corrupted ones and the other for archived path.&lt;/p&gt;

&lt;p&gt;In between there are lot of deletes and exists call.  I think we can reduce no of NN operations.  How costly is delete and exists check? I will check on this more.&lt;/p&gt;</comment>
                            <comment id="13406434" author="nkeywal" created="Wed, 4 Jul 2012 10:41:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;How costly is delete and exists check?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;A remote call to the NN, but no socket creation (it&apos;s persistent). There is no cache on the client side, so all exists calls will do the network loop. Exists is pretty fast (not much more cost than the network roundtrip), but it adds a little something to the NN and network workload that can be already high when there is a major failure...&lt;/p&gt;</comment>
                            <comment id="13462745" author="nkeywal" created="Tue, 25 Sep 2012 13:56:28 +0000"  >&lt;p&gt;I&apos;m was having a look at this. Could we have the log archiving done by the regionserver instead of the master? This would lower the work done in the event thread? The only remaining stuff would be the renaming of the region log dir at the end. &lt;/p&gt;

&lt;p&gt;I see one impact: if the same log was processed simultaneously by multiple region server, this archiving could occur in parallel on two different region server. Manageable I think...&lt;/p&gt;</comment>
                            <comment id="13553128" author="devaraj" created="Mon, 14 Jan 2013 21:24:36 +0000"  >&lt;p&gt;I am looking at this one..&lt;/p&gt;</comment>
                            <comment id="13553364" author="devaraj" created="Tue, 15 Jan 2013 01:09:26 +0000"  >&lt;p&gt;How about we queue up the call &lt;span class=&quot;error&quot;&gt;&amp;#91;finishSplitLogFile + params&amp;#93;&lt;/span&gt; in a ZK queue. The master could have a thread that removes finishSplitLogFile calls off this queue and execute them (on a master failure, the queue will still have the pending calls intact). There might be issues with this approach but just wanted to throw it out there while I do more detailed study / prototype.. &lt;/p&gt;</comment>
                            <comment id="13553423" author="zjushch" created="Tue, 15 Jan 2013 02:29:33 +0000"  >&lt;p&gt;I think we don&apos;t need do this now since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6337&quot; title=&quot;[MTTR] Remove renaming tmp log file in SplitLogManager &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6337&quot;&gt;&lt;del&gt;HBASE-6337&lt;/del&gt;&lt;/a&gt; (NN operations are not done in SplitLogManager any more)&lt;/p&gt;</comment>
                            <comment id="13553495" author="stack" created="Tue, 15 Jan 2013 05:16:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt; So, when callback is called, you&apos;d stick the even up in zk queue?  Then in another thread process it?  Queuing an executor to do the NN work would be less than this.  A queue would be good in case server died, yes.  I wonder what else we should be queuing around split log trans?  Would having a Q violate 15.10.4 Invariant: &lt;a href=&quot;http://hbase.apache.org/book.html#developing?&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book.html#developing?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt; That is interesting.  If so, we should be able to just close this?  What you reckon DD?&lt;/p&gt;</comment>
                            <comment id="13553525" author="zjushch" created="Tue, 15 Jan 2013 05:54:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;If so, we should be able to just close this?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes&lt;br/&gt;
Before &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6337&quot; title=&quot;[MTTR] Remove renaming tmp log file in SplitLogManager &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6337&quot;&gt;&lt;del&gt;HBASE-6337&lt;/del&gt;&lt;/a&gt;, SplitLogManager will move lots of RecoveredEdits from temp when finishing a split log task.&lt;br/&gt;
But now we needn&apos;t these movement because RecoveredEdits are created in the region dir by SplitLogWorker, not in a temp dir.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;&lt;br/&gt;
Could you confirm it?&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="13553553" author="devaraj" created="Tue, 15 Jan 2013 06:51:47 +0000"  >&lt;p&gt;Okay, Stack and Chunhui. Will update by tomorrow.&lt;/p&gt;</comment>
                            <comment id="13553935" author="devaraj" created="Tue, 15 Jan 2013 16:09:46 +0000"  >&lt;p&gt;So yeah the majority of the FS operations now is in the HLogSplitter.finishSplitLogFile (and in the archiveLogs it calls internally). I guess its not as bad as it used to be (the factor of #renames reduced from #regions to #logs). Correct me if I am wrong, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On the invariant, yes, we probably should avoid storing the queue in ZK (and just have in memory queue). The master should rebuild the queue after it comes up by making a pass over the logdirs.&lt;/p&gt;

&lt;p&gt;So what do folks think? Should we move the FS operations out of the critical path in SplitLogManager&apos;s event handler? Or leave this fix to some other day?&lt;/p&gt;</comment>
                            <comment id="13553984" author="stack" created="Tue, 15 Jan 2013 16:42:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt; Sounds like, given the above, this is no longer a critical issue.  What say you boss?  We could mark it major?&lt;/p&gt;</comment>
                            <comment id="13554076" author="devaraj" created="Tue, 15 Jan 2013 18:19:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, marked as such..&lt;/p&gt;</comment>
                            <comment id="13554667" author="zjushch" created="Wed, 16 Jan 2013 02:21:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I guess its not as bad as it used to be (the factor of #renames reduced from #regions to #logs)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, it&apos;s so. IMO, we don&apos;t need to fix this issue because now there is only one NN operation inside of the ZK EventThread in SplitLogManager.&lt;/p&gt;

&lt;p&gt;What&apos;s the bottleneck of current distributed-log-split?&lt;br/&gt;
If the whole cluster or many servers are down, there are lots of NN operations because each hlog file will split into many RecoveredEdits files. However,local-log-split only generate one RecoveredEdits file in one region for the whole server hlogs directory&lt;br/&gt;
If we can improve the task assign mechanism on SplitLogManager or task grab mechanism on SplitLogWorker, I think it&apos;s great. e.g. SplitLogWorker could split many hlog files in one time&lt;/p&gt;


</comment>
                            <comment id="13621576" author="stack" created="Thu, 4 Apr 2013 00:28:39 +0000"  >&lt;p&gt;Could still do w/ a fix but not so important any more.   Moving this improvement out of 0.95.0&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12551766">HBASE-5843</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Jul 2012 06:10:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>241884</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 37 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02g5z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12220</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>