<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:07:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3141/HBASE-3141.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3141] Master RPC server needs to be started before an RS can check in</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3141</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Starting up an RPC server is done in two steps.  In the constructor, we instantiate the RPC server.  Then in startServiceThreads() we start() it.&lt;/p&gt;

&lt;p&gt;If someone RPCs in between the instantiation and the start(), it seems that bad things can happen.  We need to make sure this can&apos;t happen and there aren&apos;t any races here.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12478016">HBASE-3141</key>
            <summary>Master RPC server needs to be started before an RS can check in</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ryanobjc">ryan rawson</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Thu, 21 Oct 2010 18:50:24 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:47 +0000</updated>
                            <resolved>Tue, 9 Nov 2010 02:03:41 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12923573" author="stack" created="Thu, 21 Oct 2010 19:10:50 +0000"  >&lt;p&gt;This looks like an issue Todd was playing with a while back where RS hosting .META. would connect to itself to get data from .META. before RPC had been put up.  He put up a sketch patch over here &lt;a href=&quot;http://github.com/toddlipcon/hbase/commit/c1236fca54e25c36561d428b6755a950ca1c208f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/toddlipcon/hbase/commit/c1236fca54e25c36561d428b6755a950ca1c208f&lt;/a&gt;.  In it, he introduces a flag in rpc server  that is set true when rpc has started.  When false, throws exceptions &quot;Not Yet Accepting Connections&quot;. &lt;/p&gt;

&lt;p&gt;Lets make a test that this is actually an issue.  Maybe the early rpc is just handled post listener/responder startup?&lt;/p&gt;</comment>
                            <comment id="12923754" author="kannanm" created="Fri, 22 Oct 2010 04:40:35 +0000"  >&lt;p&gt;We ran into this today during a shutdown/startup:&lt;/p&gt;

&lt;p&gt;In 0.89, things happen in this order in the master code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
In the constructor:
(i) &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.rpcServer = HBaseRPC.getServer(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, a.getBindAddress()... )   &lt;span class=&quot;code-comment&quot;&gt;// instantiate the server..
&lt;/span&gt;(ii) Try to become &lt;span class=&quot;code-quote&quot;&gt;&quot;primary&quot;&lt;/span&gt; master, by writing to zookeeper.
In the run loop:
(iii) startServiceThreads() --&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.rpcServer.start()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Step (ii) blocked indefinitely, as a different master became the primary. At startup, some Region Servers were  trying to report in to this master incorrectly... because the /hbase/master ZK node from previous shutdown hadn&apos;t quite expired &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; and it still had this master&apos;s info.&lt;/p&gt;

&lt;p&gt;What if we simply moved (iii) ahead of (ii) (i.e. start the rpcServer in the constructor itself, before blocking on ZK&apos;s /hbase/master node). &lt;/p&gt;

&lt;p&gt;Todd&apos;s fix seems more elaborate &amp;#8211; is that extra state of &quot;accepting calls&quot; really necessary?&lt;/p&gt;

&lt;p&gt;Hairong has also suggested that   we add timeouts on the HBaseRpc.getProxy() calls. See stack below where the RS was stuck indefinitely on the above master.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

&lt;span class=&quot;code-quote&quot;&gt;&quot;regionserver60020&quot;&lt;/span&gt; prio=10 tid=0x00002aaeb4e5d000 nid=0x1cae in &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [0x000000004264e000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (on object monitor)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
        - waiting on &amp;lt;0x00002aaab7560fa8&amp;gt; (a org.apache.hadoop.hbase.ipc.HBaseClient$Call)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.java:485)
        at org.apache.hadoop.hbase.ipc.HBaseClient.call(HBaseClient.java:732)
        - locked &amp;lt;0x00002aaab7560fa8&amp;gt; (a org.apache.hadoop.hbase.ipc.HBaseClient$Call)
        at org.apache.hadoop.hbase.ipc.HBaseRPC$Invoker.invoke(HBaseRPC.java:252)
        at $Proxy0.getProtocolVersion(Unknown Source)
        at org.apache.hadoop.hbase.ipc.HBaseRPC.getProxy(HBaseRPC.java:408)
        at org.apache.hadoop.hbase.ipc.HBaseRPC.getProxy(HBaseRPC.java:384)
        at org.apache.hadoop.hbase.ipc.HBaseRPC.getProxy(HBaseRPC.java:431)
        at org.apache.hadoop.hbase.ipc.HBaseRPC.waitForProxy(HBaseRPC.java:342)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.getMaster(HRegionServer.java:1210)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.reportForDuty(HRegionServer.java:1227)
        at org.apache.hadoop.hbase.regionserver.HRegionServer.run(HRegionServer.java:432)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:619)

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                            <comment id="12927102" author="streamy" created="Mon, 1 Nov 2010 19:32:34 +0000"  >&lt;p&gt;Patch moves start of service threads to before we put up cluster up flag.  This kind of deals with this issue.&lt;/p&gt;

&lt;p&gt;I think real fix is for RPC server to properly handle/reject any requests when it&apos;s in a weird state between construction and starting.&lt;/p&gt;</comment>
                            <comment id="12927180" author="stack" created="Mon, 1 Nov 2010 22:22:39 +0000"  >&lt;p&gt;I think you need more.  If construction fails, the server will be left up... need to wrap post server start in try/catch that runs shutdown code if exception.&lt;/p&gt;</comment>
                            <comment id="12927216" author="streamy" created="Mon, 1 Nov 2010 23:03:08 +0000"  >&lt;p&gt;@Stack, this change isn&apos;t in constructor.  the ordering change is within finishInitialization() which is called in the run() of HMaster.  We&apos;re already handling exceptions/stopping appropriately at this stage.&lt;/p&gt;</comment>
                            <comment id="12927626" author="stack" created="Tue, 2 Nov 2010 21:41:05 +0000"  >&lt;p&gt;Ryan is going to look at this (Jon is busy the next few days)&lt;/p&gt;</comment>
                            <comment id="12929808" author="ryanobjc" created="Mon, 8 Nov 2010 23:20:59 +0000"  >&lt;p&gt;In the constructor of HMaster we do this call:&lt;/p&gt;


&lt;p&gt;    this.rpcServer = HBaseRPC.getServer(this,&lt;br/&gt;
      new Class&amp;lt;?&amp;gt;[]&lt;/p&gt;
{HMasterInterface.class, HMasterRegionInterface.class}
&lt;p&gt;,&lt;br/&gt;
      a.getBindAddress(), a.getPort(),&lt;br/&gt;
      numHandlers,&lt;br/&gt;
      0, // we dont use high priority handlers in master&lt;br/&gt;
      false, conf,&lt;br/&gt;
      0); // this is a DNC w/o high priority handlers&lt;/p&gt;

&lt;p&gt;The bind to the service ports happens in here.&lt;/p&gt;

&lt;p&gt;In the run() thread we &apos;stall&apos; until we become the primary master, at which point we call finishInitialization() which then starts the rest of the service threads, such as the listener, etc. &lt;/p&gt;

&lt;p&gt;I think the solution here is to start the service threads ASAP, then have a flag which causes the Handler threads to throw instead of service the calls. Then another call that happens later when the master is ready to start getting calls. I&apos;ll post a patch with that in it.&lt;/p&gt;</comment>
                            <comment id="12929821" author="ryanobjc" created="Mon, 8 Nov 2010 23:43:25 +0000"  >&lt;p&gt;here is a patch that starts the rpc thread infrastructure right away, but throws exceptions until the master says &apos;im ready to handle calls&apos;.&lt;/p&gt;</comment>
                            <comment id="12929832" author="streamy" created="Mon, 8 Nov 2010 23:53:26 +0000"  >&lt;p&gt;Is the move of startServiceThreads() necessary?  I think it&apos;s fine to do it before cluster up flag, but just checking, this should work even without that change because RS will get exceptions and retry?&lt;/p&gt;

&lt;p&gt;Also, looks like MasterNotRunningException is imported in HBaseServer but it&apos;s ServerNotRunningException that is thrown.&lt;/p&gt;</comment>
                            <comment id="12929833" author="streamy" created="Mon, 8 Nov 2010 23:55:02 +0000"  >&lt;p&gt;import stuff aside, this seems fine.  would be nice to have some kind of test that this works.&lt;/p&gt;

&lt;p&gt;if you don&apos;t want to do a new unit test, as long as existing unit tests pass i&apos;m +1 to commit.&lt;/p&gt;</comment>
                            <comment id="12929848" author="ryanobjc" created="Tue, 9 Nov 2010 00:23:57 +0000"  >&lt;p&gt;here is my updated patch with unit test&lt;/p&gt;</comment>
                            <comment id="12929850" author="ryanobjc" created="Tue, 9 Nov 2010 00:33:04 +0000"  >&lt;p&gt;unit test etc&lt;/p&gt;</comment>
                            <comment id="12929851" author="streamy" created="Tue, 9 Nov 2010 00:39:03 +0000"  >&lt;p&gt;+1, thanks Ryan.  This should fix &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3142&quot; title=&quot;If a master dies and comes back up before his znode expires, the RS heartbeat can lock up&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3142&quot;&gt;&lt;del&gt;HBASE-3142&lt;/del&gt;&lt;/a&gt; as well.&lt;/p&gt;</comment>
                            <comment id="12929890" author="ryanobjc" created="Tue, 9 Nov 2010 02:03:41 +0000"  >&lt;p&gt;committed!&lt;/p&gt;</comment>
                            <comment id="15017620" author="lars_francke" created="Fri, 20 Nov 2015 12:43:47 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12459118" name="HBASE-3141-2.txt" size="7183" author="ryanobjc" created="Tue, 9 Nov 2010 00:23:57 +0000"/>
                            <attachment id="12459119" name="HBASE-3141-3.txt" size="7295" author="ryanobjc" created="Tue, 9 Nov 2010 00:33:04 +0000"/>
                            <attachment id="12458573" name="HBASE-3141-v1.patch" size="992" author="streamy" created="Mon, 1 Nov 2010 19:32:34 +0000"/>
                            <attachment id="12459110" name="HBASE-3141.txt" size="5794" author="ryanobjc" created="Mon, 8 Nov 2010 23:43:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 21 Oct 2010 19:10:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26670</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hkwf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100648</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>