<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:24:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11608/HBASE-11608.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11608] Add synchronous split</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11608</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Users have been asking for this. We have an internal requirement for this as well.&lt;br/&gt;
The goal is a provide a Admin API (and shell command) so that users can request to split a region or table and get the split completion result synchronously.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12730571">HBASE-11608</key>
            <summary>Add synchronous split</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jinghe">Jerry He</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jul 2014 19:03:57 +0000</created>
                <updated>Mon, 4 Aug 2014 23:50:14 +0000</updated>
                                            <version>0.99.0</version>
                    <version>0.98.5</version>
                                                    <component>Admin</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14078179" author="jinghe" created="Tue, 29 Jul 2014 19:06:11 +0000"  >&lt;p&gt;Linked to an old issue that raised this request.&lt;/p&gt;</comment>
                            <comment id="14078215" author="jinghe" created="Tue, 29 Jul 2014 19:23:12 +0000"  >&lt;p&gt;Carry over the design comment from HBase-2949 so we will continue the discussion here.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Current implementation on the client side&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;In HBaseAdmin.split(), &lt;br/&gt;
1. Input is a region name&lt;br/&gt;
1a. If a split key is given, we will send a split request to the region server hosting the region containing the key. Asynchronous operation.&lt;br/&gt;
2b. If no split key, we will send a split request to the region server hosting the region to split based split policy. Asynchronous operation.&lt;br/&gt;
2. Input is a table name&lt;br/&gt;
1a. If a split key is given, we will send a split request to the region server hosting the region containing the key. Asynchronous operation.&lt;br/&gt;
2b. If no split key, we will send split requests in a loop to (region, rs) pair for all the regions of the table to split based split policy. Asynchronous operation.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Current implementation on the region server side&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;HRegionServer -&amp;gt; RSRpcServices.splitRegion() -&amp;gt; compactSplitThread.requestSplit() --&amp;gt; CompactSplitThread.splits.execute(new SplitRequest())&lt;br/&gt;
CompactSplitThread.splits is a ThreadPoolExecutor.&lt;br/&gt;
SplitRequest is a Runnable that does all the slit work.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Goal&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;Backward compatible, no impact on existing system triggered split, minimum overall impact, more??&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Proposed change on the region server side&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;Provide a synchronous&lt;br/&gt;
compactSplitThread.requestSplitSynchronous() --&amp;gt; CompactSplitThread.splits.submit(new SplitRequest()) and wait for &apos;future&apos; completion.&lt;br/&gt;
SplitRequest currently is a Runnable. &lt;br/&gt;
Possibly change it to Callable&amp;lt;Void&amp;gt; so that we can propagate up any exceptions during split operation&lt;br/&gt;
as we want to get notified any errors/exceptions synchronously as well.&lt;br/&gt;
HRegionServer -&amp;gt; RSRpcServices.splitRegionSynchronous() will use the new requestSplitSynchronous().&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;On the HBaseAdmin side&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;If we go synchronous in HBaseAdmin.split(), one use case scenario will become less efficient. i.e. the 2.b case from above:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;2b. If no split key, we will send split requests in a loop to (region, rs) pair for all the regions of the table to split based split policy.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Because in this case, each (region, rs) pair will be requested serially and synchronously.&lt;br/&gt;
We&apos;ll provide a HBaseAdmin.splitSynchronous() and keep the current asynchronous HBaseAdmin.split(). &lt;br/&gt;
Users are kept aware of the choices they have.&lt;br/&gt;
In the future HBaseAdmin.splitSynchronous() can be improved (e.g. using Global procedure in split regions in parallel).&lt;/p&gt;

&lt;p&gt;This is my initial thinking. &lt;br/&gt;
Your comments please, if this is doable, if there is any concern, if I miss or misunderstand anything. I am sure I do &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14078343" author="ndimiduk" created="Tue, 29 Jul 2014 20:55:38 +0000"  >&lt;p&gt;Nice feature &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jinghe&quot; class=&quot;user-hover&quot; rel=&quot;jinghe&quot;&gt;Jerry He&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How will your future approach handle intermittent connectivity issues between client and RS? Have you looked at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt; ?&lt;/p&gt;</comment>
                            <comment id="14078597" author="jinghe" created="Tue, 29 Jul 2014 23:25:12 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was aware of the grand plan in  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt;, and just went though it again &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How will your future approach handle intermittent connectivity issues between client and RS?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If client issues synchronous split request, the client RPC connection will hold for longer period of time.&lt;/p&gt;

&lt;p&gt;Or do you mean in the future if we want to use Master-coordinated tasks to splt the table synchronously, how do we deal with master and/or RS failures?&lt;/p&gt;</comment>
                            <comment id="14082941" author="ndimiduk" created="Fri, 1 Aug 2014 20:49:28 +0000"  >&lt;p&gt;I was thinking of the case when the connection between client and RS is dropped. When that happens, the result of the split operation can not be discovered, other than by side-effect. There are many other &quot;meta&quot; operations like this where the client cannot know a result except by side-effect. As I understand it, resolving these kinds of issues in a general case is the primary motivation behind &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14085219" author="jinghe" created="Mon, 4 Aug 2014 20:19:30 +0000"  >&lt;p&gt;Yes. &lt;/p&gt;

&lt;p&gt;I was looking at the the current synchronous HBaseAdmin APIs and how they are implemented.   Two different approaches.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;1&lt;/ins&gt;   Inside the API implementation, the first part is to send the request asynchronously. &lt;br/&gt;
   Then the second part loops for the status via a status inquiry (direct RPC inquiry or indirect inquiry thru meta status, etc) until the request is completed.&lt;br/&gt;
   For example,  deleteTable, disableTable and snapshot.&lt;br/&gt;
   The identification used to poll the status is table name, or snapshot name in the above cases.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;2&lt;/ins&gt;   The second approach is a real synchronous call.  The server side will not return until the work is really completed.&lt;br/&gt;
   For example, flush.&lt;/p&gt;

&lt;p&gt;Other HBaseAdmin APIs are asynchronous, for example, the current compact and split API. &lt;br/&gt;
The client only submits the request without waiting for status at all.&lt;/p&gt;

&lt;p&gt;For this JIRA,  the 2nd approach is cleaner.&lt;/p&gt;

&lt;p&gt;We could do the 1st approach.  For example, the client asynchronously submits the split request.&lt;br/&gt;
Then the client loops for the split to complete by polling on the meta status to wait for the parent to split and daughters to come online.&lt;br/&gt;
This is similar to what deleteTable and disableTable do.&lt;br/&gt;
The identification to poll and inquiry the status is the parent region name.  But this approach will be a little messy.&lt;br/&gt;
.&lt;/p&gt;</comment>
                            <comment id="14085250" author="mbertozzi" created="Mon, 4 Aug 2014 20:34:04 +0000"  >&lt;p&gt;the current admin implementation is kind of broken, and since we lack in infrastructure to build proper sync operations overtime we implemented workaround to obtain the sync operation.&lt;/p&gt;

&lt;p&gt;The problems are:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If you have the sync call on the server and the operation is long: 1) you are blocking all the other rpc handlers. 2) in case of failure client side or server side you don&apos;t know the state of the operation.&lt;/li&gt;
	&lt;li&gt;if you use the poll by relying on something like META we are stuck in keeping that execution order and that &quot;META&quot; format to keep the client compatibility. (one solution to avoid this problem is to have something like the &quot;isDone&quot; method for snapshot, where the server gives you the status of the operation. but you end up having tons of &quot;isDone&quot; for each sync operation that you want)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;d say that we should stop adding features can&apos;t be implemented in a straightforward way and that may prevent future rolling upgrade compatibily. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9864&quot; title=&quot;Notifications bus for use by cluster members keeping up-to-date on changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9864&quot;&gt;HBASE-9864&lt;/a&gt; should solve all these problems with long operations and operation across the cluster. &lt;/p&gt;</comment>
                            <comment id="14085436" author="jinghe" created="Mon, 4 Aug 2014 22:51:09 +0000"  >&lt;p&gt;Linked the issues here.  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9864&quot; title=&quot;Notifications bus for use by cluster members keeping up-to-date on changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9864&quot;&gt;HBASE-9864&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10544&quot; title=&quot;Surface completion state of global administrative actions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10544&quot;&gt;HBASE-10544&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12544478">HBASE-5487</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12473043">HBASE-2949</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12695314">HBASE-10544</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12676713">HBASE-9864</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Jul 2014 20:55:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>408644</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 19 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1yb9z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>408642</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>