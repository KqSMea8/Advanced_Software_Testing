<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:16:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4218/HBASE-4218.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4218] Data Block Encoding of KeyValues  (aka delta encoding / prefix compression</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4218</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;A compression for keys. Keys are sorted in HFile and they are usually very similar. Because of that, it is possible to design better compression than general purpose algorithms,&lt;/p&gt;

&lt;p&gt;It is an additional step designed to be used in memory. It aims to save memory in cache as well as speeding seeks within HFileBlocks. It should improve performance a lot, if key lengths are larger than value lengths. For example, it makes a lot of sense to use it when value is a counter.&lt;/p&gt;

&lt;p&gt;Initial tests on real data (key length = ~ 90 bytes , value length = 8 bytes) shows that I could achieve decent level of compression:&lt;br/&gt;
 key compression ratio: 92%&lt;br/&gt;
 total compression ratio: 85%&lt;br/&gt;
 LZO on the same data: 85%&lt;br/&gt;
 LZO after delta encoding: 91%&lt;br/&gt;
While having much better performance (20-80% faster decompression ratio than LZO). Moreover, it should allow far more efficient seeking which should improve performance a bit.&lt;/p&gt;

&lt;p&gt;It seems that a simple compression algorithms are good enough. Most of the savings are due to prefix compression, int128 encoding, timestamp diffs and bitfields to avoid duplication. That way, comparisons of compressed data can be much faster than a byte comparator (thanks to prefix compression and bitfields).&lt;/p&gt;

&lt;p&gt;In order to implement it in HBase two important changes in design will be needed:&lt;br/&gt;
-solidify interface to HFileBlock / HFileReader Scanner to provide seeking and iterating; access to uncompressed buffer in HFileBlock will have bad performance&lt;br/&gt;
-extend comparators to support comparison assuming that N first bytes are equal (or some fields are equal)&lt;/p&gt;

&lt;p&gt;Link to a discussion about something similar:&lt;br/&gt;
&lt;a href=&quot;http://search-hadoop.com/m/5aqGXJEnaD1/hbase+windows&amp;amp;subj=Re+prefix+compression&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/5aqGXJEnaD1/hbase+windows&amp;amp;subj=Re+prefix+compression&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12519171">HBASE-4218</key>
            <summary>Data Block Encoding of KeyValues  (aka delta encoding / prefix compression</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mikhail">Mikhail Bautin</assignee>
                                    <reporter username="jmigdal">Jacek Migdal</reporter>
                        <labels>
                            <label>compression</label>
                    </labels>
                <created>Wed, 17 Aug 2011 19:24:38 +0000</created>
                <updated>Thu, 27 Aug 2015 07:51:42 +0000</updated>
                            <resolved>Sat, 11 Feb 2012 05:50:00 +0000</resolved>
                                    <version>0.94.0</version>
                                    <fixVersion>0.94.0</fixVersion>
                                    <component>io</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>27</watches>
                                                                <comments>
                            <comment id="13086545" author="yuzhihong@gmail.com" created="Wed, 17 Aug 2011 19:49:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;Moreover, it should allow far more efficient seeking which should improve performance a bit.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can performance improvement be quantified ?&lt;/p&gt;</comment>
                            <comment id="13086556" author="jmigdal" created="Wed, 17 Aug 2011 20:00:47 +0000"  >&lt;p&gt;Yes, I plan to measure seek performance within one block.&lt;/p&gt;

&lt;p&gt;I haven&apos;t implement it yet, but I rather expect that it will make seeking and decompressing KeyValues as fast as operating on uncompressed bytes.&lt;/p&gt;

&lt;p&gt;The primary goal is to save memory in buffers.&lt;/p&gt;</comment>
                            <comment id="13086574" author="mcorgan" created="Wed, 17 Aug 2011 20:35:24 +0000"  >&lt;p&gt;Sorry I haven&apos;t chimed in on this in a while, but I&apos;ve made significant progress implementing some of the ideas I mentioned in the discussion you linked to.  Taking a sorted List&amp;lt;KeyValue&amp;gt;, converting to a compressed byte[], and then providing fast mechanisms for reading the byte[] back to KeyValues.  It should work for block indexes and data blocks.&lt;/p&gt;

&lt;p&gt;I don&apos;t think I&apos;ll be able to do the full integration into HBase, but I&apos;m trying to get the code to a point where it&apos;s well designed, tested, and easy (possible) to start working in to the code base.  I&apos;ll try to get it on github in the next couple weeks.  I wish I could dedicate more time, but it&apos;s been a nights/weekends project.&lt;/p&gt;

&lt;p&gt;Here&apos;s a quick storage format overview.  Class names begin with &quot;Pt&quot; for &quot;Prefix Trie&quot;.  &lt;/p&gt;

&lt;p&gt;A block of KeyValues gets converted to a byte[] composed of 5 sections:&lt;/p&gt;

&lt;p&gt;1) PtBlockMeta stores some offsets into the block, the width of some byte-encoded integers, etc.. &lt;a href=&quot;http://pastebin.com/iizJz3f4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pastebin.com/iizJz3f4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) PtRowNodes are the bulk of the complexity.  They store a trie structure for rebuilding the row keys in the block.  Each &quot;Leaf&quot; node has a list of offsets that point to the corresponding columns, timestamps, and data offsets/lengths in that row.  The row data is structured for efficient sequential iteration and/or individual row lookups.  &lt;a href=&quot;http://pastebin.com/cb79N0Ge&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pastebin.com/cb79N0Ge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3) PtColNodes store a trie structure that provides random access to column qualifiers.  A PtRowNode points at one of these and it traverses its parents backwards through the trie to rebuild the full column qualifier.  Important for wide rows.  &lt;a href=&quot;http://pastebin.com/7rsq7epp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pastebin.com/7rsq7epp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4) TimestampDeltas are byte-encoded deltas from the minimum timestamp in the block.  The PtRowNodes contain pointers to these deltas.  The width of all deltas is determined by the longest one.  Supports having all timestamps equal to the minTimestamp resulting in zero storage cost.&lt;/p&gt;

&lt;p&gt;5) A data section made of all data values concatenated together.  The PtRowNodes contain the offsets/lengths.&lt;/p&gt;


&lt;p&gt;My first priority is getting the storage format right.  Then optimizing the read path.  Then the write path.  I&apos;d love to hear any comments, and will continue to work on getting the full code ready.&lt;/p&gt;</comment>
                            <comment id="13086589" author="streamy" created="Wed, 17 Aug 2011 20:58:06 +0000"  >&lt;p&gt;Great stuff, Matt and Jacek!&lt;/p&gt;

&lt;p&gt;I guess solidifying and sufficiently restricting the APIs following HFile v2 being committed will make it so we can support various different HFileBlock encodings.&lt;/p&gt;

&lt;p&gt;Really looking forward to the results from this!&lt;/p&gt;</comment>
                            <comment id="13086615" author="jmigdal" created="Wed, 17 Aug 2011 21:47:30 +0000"  >&lt;p&gt;Matt, I have already implemented a few algorithms which share common interface. I think we can add your method as another one. For the data I tested on, it seemed that stream compression was the best solution. However, the algorithm should be configurable so supporting a few algorithms should not be a problem. &lt;/p&gt;

&lt;p&gt;Basically, I need four methods:&lt;br/&gt;
-compress list of KeyValues (I operate on bytes)&lt;br/&gt;
-uncompress to list of KeyValues&lt;br/&gt;
-find in your structure certain key and return &quot;position&quot;&lt;br/&gt;
-materialize KeyValue on certain &quot;position&quot; and move to the next position&lt;/p&gt;

&lt;p&gt;The only thing that could be challenging for you. I store all the data in ByteBuffer and need a tiny decompression state. That make things like direct buffers trivial to implement. However, As long as you use bunch of Java objects you would be unable to move it off the heap.&lt;/p&gt;

&lt;p&gt;Once we have common interface you would be able to reuse some of my tests and benchmarks. &lt;/p&gt;

&lt;p&gt;Since I work on it almost full time, I could integrate it with HBase. Sooner or later you could add your algorithm. Does it sound good for you?&lt;/p&gt;</comment>
                            <comment id="13086634" author="mcorgan" created="Wed, 17 Aug 2011 22:08:53 +0000"  >&lt;p&gt;That sounds great Jacek.  Let me know how to get the interfaces, tests, and benchmarks when you&apos;re ready to share them.  They would be really helpful.&lt;/p&gt;</comment>
                            <comment id="13086650" author="jmigdal" created="Wed, 17 Aug 2011 22:30:54 +0000"  >&lt;p&gt;So far the implemented interface looks like:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; 
/**
 * Fast compression of KeyValue. It aims to be fast and efficient
 * using assumptions:
 * - the KeyValue are stored sorted by key
 * - we know the structure of KeyValue
 * - the values are iterated always forward from beginning of block
 * - application specific knowledge 
 * 
 * It is designed to work fast enough to be feasible as in memory compression.
 */
public interface DeltaEncoder {
  /**
   * Compress KeyValues and write them to output buffer.
   * @param writeHere Where to write compressed data.
   * @param rawKeyValues Source of KeyValue for compression.
   * @throws IOException If there is an error in writeHere.
   */
  public void compressKeyValue(OutputStream writeHere, ByteBuffer rawKeyValues)
      throws IOException;
  
  /**
   * Uncompress assuming that original size is known.
   * @param source Compressed stream of KeyValues.
   * @param decompressedSize Size in bytes of uncompressed KeyValues.
   * @return Uncompressed block of KeyValues.
   * @throws IOException If there is an error in source.
   * @throws DeltaEncoderToSmallBufferException If specified uncompressed
   *    size is too small.
   */
  public ByteBuffer uncompressKeyValue(DataInputStream source,
      int decompressedSize)
          throws IOException, DeltaEncoderToSmallBufferException;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also need some kind of interface for iterating and seeking. I haven&apos;t got it yet but would like to have something like:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public Iterator&amp;lt;KeyValue&amp;gt; getIterator(ByteBuffer encodedKeyValues);
  public Iterator&amp;lt;KeyValue&amp;gt; getIteratorStartingFrom(ByteBuffer encodedKeyValues, byte[] keyBuffer, int offset, int length);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For me it would work, but for you I might have changing it to something like:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public EncodingIterator getState(ByteBuffer encodedKeyValues);
class EncodingIterator implements Iterator&amp;lt;KeyValue&amp;gt; {
...
  public void seekToBeginning();
  public void seekTo(byte[] keyBuffer, int offset, int length);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I will figure out how we could share the code.&lt;/p&gt;</comment>
                            <comment id="13086704" author="mcorgan" created="Thu, 18 Aug 2011 00:29:10 +0000"  >&lt;p&gt;I should be able to work with ByteBuffer as the backing block data.&lt;/p&gt;

&lt;p&gt;Like you said above, we&apos;ll have to work on smarter iterators and comparators that can do most things without instantiating a full KeyValue in it&apos;s current form.  Sounds like it will be a longer term project to make KeyValue into a more flexible interface, so in the mean time there will be places it has to &quot;cut&quot; a full KeyValue by copying bytes.&lt;/p&gt;</comment>
                            <comment id="13086708" author="streamy" created="Thu, 18 Aug 2011 00:41:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;in the mean time there will be places it has to &quot;cut&quot; a full KeyValue by copying bytes&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed.  There&apos;s some other work going on around slab allocators and object reuse that could be paired with this to ameliorate some of that overhead.&lt;/p&gt;</comment>
                            <comment id="13087538" author="stack" created="Fri, 19 Aug 2011 05:03:51 +0000"  >&lt;p&gt;/me hearts this issue&lt;/p&gt;</comment>
                            <comment id="13087805" author="stack" created="Fri, 19 Aug 2011 17:10:00 +0000"  >&lt;p&gt;I was reading a paper this morning and it was going on about size savings doing variable byte encoding.  Should KV do VB?  At implementation time, using VB made the parse harder so we punted on it.  Maybe now we have smarter fellas in the mix, VB is worth a second look (in this context)?&lt;/p&gt;</comment>
                            <comment id="13088266" author="mcorgan" created="Sat, 20 Aug 2011 20:29:27 +0000"  >&lt;p&gt;I lean towards byte-encoding ints whenever they&apos;re used often enough to have an impact on memory.  KeyValue could probably do better with some VInts.  You can encode 128 values in 1 byte and decode it with just one branch to check if b&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; &amp;lt; 0.  Given the number of other byte comparisons going during reading the key, that doesn&apos;t seem too heavyweight (especially since many of those other byte comparisons are casting the byte to a positive integer before comparing).  If you reserved 2-4 bytes for that same number, then you may be doing even more work.&lt;/p&gt;

&lt;p&gt;One problem with VInt decoders is that sometimes they do bounds checking which can slow things down a lot.  I think validation should be done at write time, and then possibly using a block-level checksum when a block is copied back into memory.  Then assume everything is correct.&lt;/p&gt;

&lt;p&gt;For prefix compression, we&apos;re talking about encoding things at the block level where most of the ints are internal pointers that are less than the block size of 64k, so most ints can fit in 2 bytes.  But it&apos;s important that they be able to grow gracefully when block sizes grow beyond 64k or are configured to be bigger.  I&apos;ve been using two types of encoded integers: VInt and FInt.  FInts are basically an optimization over VInts for cases where you have many ints with the same characteristics, and can therefore store their width at the block level rather than encoding it in every occurrence.&lt;/p&gt;

&lt;p&gt;VInt (variable width int)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;width is not known ahead of time, so must interpret byte-by-byte&lt;/li&gt;
	&lt;li&gt;slower because of branch on each byte, but still pretty fast&lt;/li&gt;
	&lt;li&gt;only 2^7 values/byte, so 2 bytes can hold 16k values&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;FInt (fixed width int)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;width is known ahead of time and stored externally (at block level in PtBlockMeta in this project)&lt;/li&gt;
	&lt;li&gt;an FInt is faster to encode decode because of the lack of if-statements&lt;/li&gt;
	&lt;li&gt;each byte can store 2^8 values, so 2 bytes gets you 64k values (hbase block size)&lt;/li&gt;
	&lt;li&gt;a list of these numbers provides random access.  important for binary searching&lt;/li&gt;
	&lt;li&gt;if encoding the numbers 0-10,000, for example, then VInts will save you 1 byte on the numbers 0-255, but that is a small % savings.  so use FInts for lists of numbers&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;----------------- &lt;/p&gt;

&lt;p&gt;Sidenote: I&apos;ve been meaning to make a CVInt (comparable variable width int) that:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;sorts based on raw bytes even if different widths (good for suffixing hbase row/colQualifier values)&lt;/li&gt;
	&lt;li&gt;to interpret, count the number of leading 1 bits, and that is how many additional bytes there are beyond the first byte&lt;/li&gt;
	&lt;li&gt;bits beyond the first 0 bit comprise the value&lt;/li&gt;
	&lt;li&gt;should also be faster to decode because of fewer branches&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13088827" author="jmigdal" created="Mon, 22 Aug 2011 17:13:07 +0000"  >&lt;p&gt;Regarding variable byte encoding. There is also another option than VInt and FInt: within a block have the same width of int, but it could be different across blocks.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;exploit similarity of data within given block&lt;/li&gt;
	&lt;li&gt;usually have the same size as VInt&lt;/li&gt;
	&lt;li&gt;few branches&lt;/li&gt;
	&lt;li&gt;the key value format is not uniform across all of the data&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Having said that, in many Key Values there are only a few different sizes. That allows even more efficient encoding. On the other hand, when value lengths are getting longer, they vary a lot. But in that case keys are a tiny percent of whole file, so any savings from VB will be insignificant. Your mileage may vary.&lt;/p&gt;</comment>
                            <comment id="13121752" author="mcorgan" created="Thu, 6 Oct 2011 06:13:14 +0000"  >&lt;p&gt;Jacek - have you done anything with the KeyValue/scanner/searching interfaces?  I&apos;m curious to see your approach.  &lt;/p&gt;

&lt;p&gt;Like you, I&apos;m materializing a the iterator&apos;s current cell, but the materialized row/family/qualifier/timestamp/type/value all reside in separate arrays/fields.  The scanner can only materialize one cell at a time, which i think can work long term but doesn&apos;t play well with some of the current scanner interfaces.&lt;/p&gt;

&lt;p&gt;The problem can be dodged by spawning a new array and copying everything into the KeyValue format, but we would see a massive speedup and could possibly eliminate all object instantiation (and furious garbage collection) if we could do comparisons on the intermediate arrays.  I&apos;ve mocked up some cell interfaces and comparators but am wondering what you&apos;ve already got in progress.&lt;/p&gt;

&lt;p&gt;Regarding scanners - Supported operations on a block are next(), previous(), nextRow(), previousRow(), positionAt(KeyValue kv, boolean beforeIfMiss), and some others.  Main problem is that i can&apos;t peek() which is used in the current version of the KeyValue heap, though i&apos;ve mocked an alternate approach without it.  I&apos;m also starting to think that a traditional iterator&apos;s hasNext() method should not be supported so that true streaming can be done and so that blocks don&apos;t need to know about their neighbors.&lt;/p&gt;</comment>
                            <comment id="13123330" author="jiraposter@reviews.apache.org" created="Sat, 8 Oct 2011 00:51:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2308/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Delta encoding for key values.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4218&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/ruby/hbase/admin.rb&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/ruby/hbase/admin.rb&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileReaderV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileReaderV1.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;/a&gt; PRE-CREATION &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;/a&gt; 1180113 &lt;br/&gt;
  &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/a&gt; 1180113 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2308/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Unit tests, dev cluster, shadow...&lt;/p&gt;

&lt;p&gt;Still ongoing.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jacek&lt;/p&gt;
</comment>
                            <comment id="13123333" author="jmigdal" created="Sat, 8 Oct 2011 00:55:37 +0000"  >&lt;p&gt;Delta encoding source code.&lt;/p&gt;</comment>
                            <comment id="13123337" author="jmigdal" created="Sat, 8 Oct 2011 00:58:16 +0000"  >&lt;p&gt;Performance results on production data.&lt;/p&gt;

&lt;p&gt; CopyKeyDeltaEncoder:&lt;br/&gt;
   Compression performance:   1136.33 MB/s (+/- 60.91 MB/s)&lt;br/&gt;
   Decompression performance: 373.29 MB/s (+/- 281.22 MB/s)&lt;br/&gt;
 BitsetKeyDeltaEncoder:&lt;br/&gt;
   Compression performance:   147.57 MB/s (+/- 0.58 MB/s)&lt;br/&gt;
   Decompression performance: 166.78 MB/s (+/- 54.81 MB/s)&lt;br/&gt;
 PrefixKeyDeltaEncoder:&lt;br/&gt;
   Compression performance:   293.94 MB/s (+/- 1.97 MB/s)&lt;br/&gt;
   Decompression performance: 233.61 MB/s (+/- 91.97 MB/s)&lt;br/&gt;
 FastDiffDeltaEncoder:&lt;br/&gt;
   Compression performance:   203.47 MB/s (+/- 0.37 MB/s)&lt;br/&gt;
   Decompression performance: 196.77 MB/s (+/- 43.22 MB/s)&lt;br/&gt;
 DiffKeyDeltaEncoder:&lt;br/&gt;
   Compression performance:   187.74 MB/s (+/- 0.24 MB/s)&lt;br/&gt;
   Decompression performance: 163.13 MB/s (+/- 12.17 MB/s)&lt;br/&gt;
 LZO:&lt;br/&gt;
   Compression performance:   260.35 MB/s (+/- 0.76 MB/s)&lt;br/&gt;
   Decompression performance: 173.45 MB/s (+/- 76.13 MB/s)&lt;br/&gt;
 CopyKeyDeltaEncoder&lt;br/&gt;
   Saved bytes:                  -4&lt;br/&gt;
   Key compression ratio:        -0.00 %&lt;br/&gt;
   All compression ratio:        -0.00 %&lt;br/&gt;
   LZO compressed size:      152019&lt;br/&gt;
   LZO compression ratio:        85.79 %&lt;br/&gt;
 BitsetKeyDeltaEncoder&lt;br/&gt;
   Saved bytes:              747061&lt;br/&gt;
   Key compression ratio:        75.46 %&lt;br/&gt;
   All compression ratio:        69.82 %&lt;br/&gt;
   LZO compressed size:      124438&lt;br/&gt;
   LZO compression ratio:        88.37 %&lt;br/&gt;
 PrefixKeyDeltaEncoder&lt;br/&gt;
   Saved bytes:              831602&lt;br/&gt;
   Key compression ratio:        84.00 %&lt;br/&gt;
   All compression ratio:        77.72 %&lt;br/&gt;
   LZO compressed size:      117285&lt;br/&gt;
   LZO compression ratio:        89.04 %&lt;br/&gt;
 FastDiffDeltaEncoder&lt;br/&gt;
   Saved bytes:              935275&lt;br/&gt;
   Key compression ratio:        94.47 %&lt;br/&gt;
   All compression ratio:        87.41 %&lt;br/&gt;
   LZO compressed size:       94360&lt;br/&gt;
   LZO compression ratio:        91.18 %&lt;br/&gt;
 DiffKeyDeltaEncoder&lt;br/&gt;
   Saved bytes:              909175&lt;br/&gt;
   Key compression ratio:        91.84 %&lt;br/&gt;
   All compression ratio:        84.97 %&lt;br/&gt;
   LZO compressed size:       96597&lt;br/&gt;
   LZO compression ratio:        90.97 %&lt;br/&gt;
 Total KV prefix length:      80000&lt;br/&gt;
 Total key length:           910000&lt;br/&gt;
 Total key redundancy:       781606&lt;br/&gt;
 Total value length:          80000&lt;/p&gt;

&lt;p&gt;DeltaEncodingSeekPerformance&lt;/p&gt;


&lt;p&gt; BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;NONE&apos; inMemory=false&lt;br/&gt;
   Read speed:          63.99 (MB/s)&lt;br/&gt;
   Seeks per second: 54901.21 (#/s)&lt;br/&gt;
 BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;BITSET&apos; inMemory=false&lt;br/&gt;
   Read speed:          46.73 (MB/s)&lt;br/&gt;
   Seeks per second: 13570.50 (#/s)&lt;br/&gt;
 BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;PREFIX&apos; inMemory=false&lt;br/&gt;
   Read speed:          55.88 (MB/s)&lt;br/&gt;
   Seeks per second: 20298.89 (#/s)&lt;br/&gt;
 BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;DIFF&apos; inMemory=false&lt;br/&gt;
   Read speed:          54.39 (MB/s)&lt;br/&gt;
   Seeks per second: 15082.79 (#/s)&lt;br/&gt;
 BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;FAST_DIFF&apos; inMemory=false&lt;br/&gt;
   Read speed:          54.12 (MB/s)&lt;br/&gt;
   Seeks per second: 15432.61 (#/s)&lt;br/&gt;
 BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;NONE&apos; inMemory=true&lt;br/&gt;
   Read speed:          64.37 (MB/s)&lt;br/&gt;
   Seeks per second: 56779.82 (#/s)&lt;br/&gt;
 BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;BITSET&apos; inMemory=true&lt;br/&gt;
   Read speed:          35.42 (MB/s)&lt;br/&gt;
   Seeks per second: 46170.87 (#/s)&lt;br/&gt;
 BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;PREFIX&apos; inMemory=true&lt;br/&gt;
   Read speed:          43.54 (MB/s)&lt;br/&gt;
   Seeks per second: 60108.48 (#/s)&lt;br/&gt;
 BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;DIFF&apos; inMemory=true&lt;br/&gt;
   Read speed:          40.62 (MB/s)&lt;br/&gt;
   Seeks per second: 48779.68 (#/s)&lt;br/&gt;
 BlockDeltaEncoder onDisk=&apos;NONE&apos; inCache=&apos;FAST_DIFF&apos; inMemory=true&lt;br/&gt;
   Read speed:          40.76 (MB/s)&lt;br/&gt;
   Seeks per second: 57291.22 (#/s)&lt;/p&gt;</comment>
                            <comment id="13123366" author="jiraposter@reviews.apache.org" created="Sat, 8 Oct 2011 04:09:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2308/#review2460&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#review2460&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5565&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5565&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be &apos;bytes are required&apos;&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5564&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5564&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The value of i should be included in the exception.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5566&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5566&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can this logic be written without recursion ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5567&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5567&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should this exception be called DeltaEncoderBufferTooSmallException ?&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5568&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5568&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Would arePartsEqual be a better name ?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-08 00:51:01, Jacek Migdal wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2308/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-08 00:51:01)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Delta encoding for key values.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4218&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/ruby/hbase/admin.rb&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/ruby/hbase/admin.rb&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileReaderV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileReaderV1.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2308/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests, dev cluster, shadow...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Still ongoing.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jacek&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13123510" author="jiraposter@reviews.apache.org" created="Sat, 8 Oct 2011 14:30:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2308/#review2466&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#review2466&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I ran unit tests with Jacek&apos;s patch. 1199 unit tests passed. The only one that failed was ServerCustomProtocol, which also seems to fail sporadically without the patch. Without the patch, there are only 1028 tests, so the patch is apparently very well unit-tested.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Mikhail&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-08 00:51:01, Jacek Migdal wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2308/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-08 00:51:01)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Delta encoding for key values.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4218&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/ruby/hbase/admin.rb&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/ruby/hbase/admin.rb&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileReaderV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileReaderV1.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2308/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests, dev cluster, shadow...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Still ongoing.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jacek&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13123576" author="yuzhihong@gmail.com" created="Sun, 9 Oct 2011 00:12:10 +0000"  >&lt;p&gt;For BlockDeltaEncoder.afterBlockCache(), I am not sure if the following matches the logic:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-comment&quot;&gt;// Postcondition: &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isCompaction is set and onDisk is not NONR) or
&lt;/span&gt;  &lt;span class=&quot;code-comment&quot;&gt;//                inMemory is not set -&amp;gt; don;t encode.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13123597" author="yuzhihong@gmail.com" created="Sun, 9 Oct 2011 02:31:14 +0000"  >&lt;p&gt;EmptyBlockDeltaEncoder, CompressionState, BlockDeltaEncoder need license.&lt;/p&gt;</comment>
                            <comment id="13123704" author="yuzhihong@gmail.com" created="Sun, 9 Oct 2011 15:23:06 +0000"  >&lt;p&gt;There seems to be a typo in the comment of KeyValue.java:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  /** Size in bytes of field the row length */
  public static final int FAMILY_LENGTH_SIZE = Bytes.SIZEOF_BYTE;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13123709" author="yuzhihong@gmail.com" created="Sun, 9 Oct 2011 15:40:13 +0000"  >&lt;p&gt;HFileBlockDeltaEncoder.java, RedundantKVGenerator.java, TestBufferedDeltaEncoder.java, TestDeltaEncoders.java need license.&lt;/p&gt;

&lt;p&gt;RedundantKVGenerator ctor has many parameters. Is it possible to use some wrapper to hold the parameters ?&lt;/p&gt;</comment>
                            <comment id="13123785" author="yuzhihong@gmail.com" created="Sun, 9 Oct 2011 21:22:41 +0000"  >&lt;p&gt;For BlockDeltaEncoder.decodeDataBlock():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; HFileBlock decodeDataBlock(HFileBlock block, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; verifyEncoding,
      &lt;span class=&quot;code-object&quot;&gt;short&lt;/span&gt; exceptDeltaEncoderId) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;exceptDeltaEncoderId should be called expectedDeltaEncoderId.&lt;/p&gt;

&lt;p&gt;RuntimeException is thrown in case of IOException. I think decodeDataBlock() can be declared to throw IOException.&lt;/p&gt;</comment>
                            <comment id="13123792" author="yuzhihong@gmail.com" created="Sun, 9 Oct 2011 22:11:27 +0000"  >&lt;p&gt;For BlockDeltaEncoder.inMemory:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; inMemory;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Would encodedInMemory be a better name ? From javadoc in the code, it seems inMemory indicates whether in memory encoding is desired.&lt;/p&gt;

&lt;p&gt;For BlockDeltaEncoder.afterReadFromDiskAndPuttingInCache(),&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (block.getBlockType() == BlockType.ENCODED_DATA) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unexcepted encoding&quot;&lt;/span&gt;);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think block.getDeltaEncodingId() should be included in the exception. Further, can we use a call such as the following to decode the block instead of throwing exception ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
decodeDataBlock(block, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, block.getDeltaEncodingId())
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13123799" author="yuzhihong@gmail.com" created="Sun, 9 Oct 2011 23:12:34 +0000"  >&lt;p&gt;For BlockDeltaEncoder.useEncodedScanner(), why doesn&apos;t isCompaction appear in the second condition on line 227 ?&lt;/p&gt;

&lt;p&gt;TestHFileBlockDeltaEncoder, DeltaEncodingSeekPerformance need license.&lt;/p&gt;

&lt;p&gt;For BitsetKeyDeltaEncoder.uncompressKeyValues(), the IllegalStateException on line 81 should contain source.available() and skipLastBytes.&lt;br/&gt;
BitsetKeyDeltaEncoder.isPartEqual() should be named arePartsEqual().&lt;/p&gt;</comment>
                            <comment id="13127079" author="jiraposter@reviews.apache.org" created="Thu, 13 Oct 2011 22:52:11 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2308/#review2573&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#review2573&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5767&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5767&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nit &lt;span class=&quot;error&quot;&gt;&amp;#91;Coding style&amp;#93;&lt;/span&gt;: space between (byte) and 9.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5769&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5769&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Add a comment about what the following string constants are for (presumably FileInfo keys).&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5768&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5768&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove trailing whitespace here and below.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5770&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5770&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Create a string constant for &quot;NONE&quot;.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5771&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5771&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Use the string constant for &quot;NONE&quot;.&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5772&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5772&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Size of the key length field in bytes&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5773&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5773&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Size of the key type field in bytes&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5774&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5774&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Size of the row length field in bytes&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5775&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5775&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Size of the family length field in bytes&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5776&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5776&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Size of the timestamp field in bytes&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt;&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2308/#comment5777&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/#comment5777&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This needs to use the new constants defined for row length, etc.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Mikhail&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-10-08 00:51:01, Jacek Migdal wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2308/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-10-08 00:51:01)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Delta encoding for key values.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4218&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/main/ruby/hbase/admin.rb&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/main/ruby/hbase/admin.rb&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileReaderV1.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileReaderV1.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;/a&gt; PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/a&gt; 1180113 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2308/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Unit tests, dev cluster, shadow...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Still ongoing.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jacek&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13127185" author="mcorgan" created="Fri, 14 Oct 2011 00:40:55 +0000"  >&lt;p&gt;I&apos;m trying to hook the prefix trie code into this, which is going well enough.&lt;/p&gt;

&lt;p&gt;Testing on some HFileV1 data, i think i&apos;m seeing some double-decoding in HFileReaderV1.java:328.  You encode the block to put in the block cache in blockDeltaEncoder.beforeBlockCache(..), but then go back to using the unencoded version, which triggers a second encoding a few lines later at blockDeltaEncoder.afterReadFromDiskAndPuttingInCache(..).&lt;br/&gt;
Possible change, from:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// Cache the block
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cacheBlock &amp;amp;&amp;amp; blockCache != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        HFileBlock cachedBlock = blockDeltaEncoder.beforeBlockCache(hfileBlock);
        blockCache.cacheBlock(cacheKey, cachedBlock, inMemory);
      }
      hfileBlock = blockDeltaEncoder.afterReadFromDiskAndPuttingInCache(
          hfileBlock, isCompaction);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;to (reuse hfileBlock):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// Cache the block
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cacheBlock &amp;amp;&amp;amp; blockCache != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
    	  hfileBlock = blockDeltaEncoder.beforeBlockCache(hfileBlock);
        blockCache.cacheBlock(cacheKey, hfileBlock, inMemory);
      }
      hfileBlock = blockDeltaEncoder.afterReadFromDiskAndPuttingInCache(
          hfileBlock, isCompaction);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A few other comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I wonder if we could make some of the naming more general than &quot;Delta&quot; encoding since that&apos;s not the only type it can support.  I added a TRIE entry to DeltaEncoderAlgorithms.  Maybe we could call it KeyValueEncoding, DataBlockEncoding, HCellEncoding, BlockEncoding, etc...&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;saw &quot;comparator&quot; spelled &quot;comperator&quot; several places&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;seems like PREFIX is always the winner.  are the others better at certain datasets, or are they just there for comparison?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;i&apos;ve been running the tests on different block sizes from 1KB to 1MB and seeing seeks/s decline from ~300,000/s to 3,000/s because of the sequential access inside a block.  even using 64KB block is ~6x slower than 1KB blocks&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
table,encoding,blockSize,numCells,avgKeyBytes,avgValueBytes,sequentialMB/s,seeks/s,~cycles/seek
Count5s,PREFIX,1KB  ,1338940,85,9,167,323685,  6178
Count5s,PREFIX,4KB  ,1338627,85,9,281,334873,  5972
Count5s,PREFIX,16KB ,1338420,85,9,381,168987, 11835
Count5s,PREFIX,64KB ,1338016,85,9,380, 52781, 37891
Count5s,PREFIX,256KB,1339210,85,9,392, 14203,140810
Count5s,PREFIX,1MB  ,1337318,85,9,371,  3703,539958
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13127238" author="yuzhihong@gmail.com" created="Fri, 14 Oct 2011 02:05:56 +0000"  >&lt;p&gt;I think similar change (as suggested by Matt) for HFileReaderV2.java @ line 279 should be made.&lt;/p&gt;</comment>
                            <comment id="13150166" author="phabricator@reviews.facebook.net" created="Tue, 15 Nov 2011 02:00:51 +0000"  >&lt;p&gt;mbautin requested code review of &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Uploading Jacek&apos;s Delta Encoding patch into Phabricator instead of Reviewboard. The original patch is at &lt;a href=&quot;https://reviews.apache.org/r/2308/diff/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/diff/&lt;/a&gt;. The plan is to address all review comments here, perform the necessary testing, and get this committed into trunk.&lt;/p&gt;

&lt;p&gt;TEST PLAN&lt;br/&gt;
  Unit tests. Distributed load test on a five-node cluster.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileReaderV1.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/p&gt;

&lt;p&gt;MANAGE HERALD DIFFERENTIAL RULES&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/view/differential/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/view/differential/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY DID I GET THIS EMAIL?&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/transcript/927/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/transcript/927/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: use the X-Herald-Rules header to filter Herald messages in your client.&lt;/p&gt;</comment>
                            <comment id="13150197" author="yuzhihong@gmail.com" created="Tue, 15 Nov 2011 02:27:20 +0000"  >&lt;p&gt;I went over some of my earlier comments and found that exceptDeltaEncoderId is still misspelled.&lt;br/&gt;
Please go over my comments.&lt;/p&gt;</comment>
                            <comment id="13150884" author="phabricator@reviews.facebook.net" created="Tue, 15 Nov 2011 23:27:51 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Rebased Jacek&apos;s patch on the recent changes from trunk and resolved conflicts. The code compiles but no testing done yet.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/p&gt;</comment>
                            <comment id="13150903" author="phabricator@reviews.facebook.net" created="Tue, 15 Nov 2011 23:47:51 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Fixing TestHFileBlockDeltaEncoder that was broken by per-table/CF metrics.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/p&gt;</comment>
                            <comment id="13155416" author="phabricator@reviews.facebook.net" created="Tue, 22 Nov 2011 20:38:39 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Rebased on most recent changes in trunk, fixed conflicts. There are failing unit tests, and delta compression is not yet aware of the persistent memstore TS field added in 2856.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderToSmallBufferException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/p&gt;</comment>
                            <comment id="13159022" author="phabricator@reviews.facebook.net" created="Tue, 29 Nov 2011 01:41:39 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Addressed most of Ted&apos;s and my own review comments from &lt;a href=&quot;https://reviews.apache.org/r/2308/diff/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/diff/&lt;/a&gt;. Resolved conflicts with memstoreTS storage, and all unit tests but one pass (TestRollingRestart fails in a weird way, investigating). Also, reading/writing VLongs from/to ByteBuffers (for memstore timestamp serialization) is currently implemented inefficiently.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/p&gt;</comment>
                            <comment id="13159040" author="mikhail" created="Tue, 29 Nov 2011 02:07:54 +0000"  >&lt;p&gt;Attaching the most recent patch for testing on Jenkins. This is still pending cluster testing.&lt;/p&gt;</comment>
                            <comment id="13159048" author="yuzhihong@gmail.com" created="Tue, 29 Nov 2011 02:21:04 +0000"  >&lt;p&gt;HadoopQA isn&apos;t functioning as usual.&lt;br/&gt;
Manual execution of test suite is needed.&lt;/p&gt;</comment>
                            <comment id="13159391" author="phabricator@reviews.facebook.net" created="Tue, 29 Nov 2011 17:39:40 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;  Nice work, Mikhail and Jacek.&lt;/p&gt;

&lt;p&gt;  Please add category to the new tests.&lt;/p&gt;

&lt;p&gt;  Are there performance numbers for various encoders other than Prefix encoder ?&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java:337 As Matt pointed out, the return value should be stored in hfileBlock so that we don&apos;t incur double encoding.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java:305 Similar to the case in HFileReaderV1, return value should be stored in dataBlock.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java:33 Matt suggested alternative names for DeltaEncoding:&lt;br/&gt;
  KeyValueEncoding, DataBlockEncoding, HCellEncoding, BlockEncoding.&lt;/p&gt;

&lt;p&gt;  DataBlockEncoding sounds good.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java:405 Misspelling: comperator should be comparator.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java:65 Javadoc doesn&apos;t match actual class name.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java:53 The tail should read &apos;128 bit encoding&apos;&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java:28 This class is only used locally. It should be an inner class.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java:49 Tail should read &apos;128 bit encoding&apos;&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java:346 Please remove extra blank line.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java:28 Please change this class to inner class.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderBufferTooSmallException.java:22 Should read &apos;which indicates&apos;&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13159531" author="phabricator@reviews.facebook.net" created="Tue, 29 Nov 2011 20:39:39 +0000"  >&lt;p&gt;todd has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;  I only got through a little bit of the giant patch, but it looks well done and decently unit-tested, so I&apos;m +1 once you have some cluster testing results that show it basically works &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;  Test-plan should include an upgrade test from an unpatched HFile v2 format and an HFile v1 (0.90) upgrade&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java:99 seems odd that the type of this is boolean whereas the IN_CACHE one is an Algorithm type. If it&apos;s a requirement that the algo be the same, then maybe rename this one to be DEFAULT_DELTA_ENCODING_IN_MEMORY_ENABLED&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2022 This interface name isn&apos;t quite clear to me, since it doesn&apos;t compare prefixes. Maybe SuffixComparator? Or ComparatorAssumingEqualPrefix (though that&apos;s a bit lengthy)?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:34-42 should use inline HTML to format this right&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:56 s/writeHere/out/g for consistent style&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:69 s/source/in/g&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java:32-35 use HTML &amp;lt;ul&amp;gt;...&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java:90 typo&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java:29 maybe &quot;NoOpDeltaEncoder&quot; is a better name? (it&apos;s not that the block is empty)&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13159587" author="phabricator@reviews.facebook.net" created="Tue, 29 Nov 2011 22:27:39 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;  Thanks for comments, Ted and Todd! I should say right away that all the credits should go to Jacek &amp;#8211; he is the one who implemented the patch, I am just iterating on it so we can get it committed.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13167721" author="phabricator@reviews.facebook.net" created="Mon, 12 Dec 2011 19:51:30 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;  See responses inline. I will follow up with a new version of the diff shortly.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java:65 Removed javadoc comments from these enum items, because they don&apos;t add information.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java:33 Jacek&apos;s delta encoding algorithm names are &lt;/p&gt;
{Bitset,Prefix,Diff,FastDiff}
&lt;p&gt;KeyDeltaEncoder. I don&apos;t see how Matt&apos;s alternative encoding names correspond to these. I will follow up with Matt on the JIRA.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderBufferTooSmallException.java:22 Fixed, thanks!&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java:28 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java:49 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java:346 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java:405 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java:28 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java:53 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/EmptyBlockDeltaEncoder.java:29 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java:337 Fixed. As far as I understand, this fix takes advantage of the fact that delta encoding API is designed to be idempotent (i.e. when we do beforeBlockCache and give the already-encoded block to afterReadFromDiskAndPuttingIntoCache, it will work correctly).&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13167732" author="phabricator@reviews.facebook.net" created="Mon, 12 Dec 2011 19:59:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Updating the diff after addressing Ted and Todd&apos;s comments.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/p&gt;</comment>
                            <comment id="13168087" author="phabricator@reviews.facebook.net" created="Tue, 13 Dec 2011 02:59:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Addressing the rest of Todd&apos;s comments.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/p&gt;</comment>
                            <comment id="13168088" author="mikhail" created="Tue, 13 Dec 2011 02:59:45 +0000"  >&lt;p&gt;Testing on Jenkins.&lt;/p&gt;</comment>
                            <comment id="13168089" author="mikhail" created="Tue, 13 Dec 2011 03:00:15 +0000"  >&lt;p&gt;Testing current version on Jenkins. Not ready to commit yet &amp;#8211; more testing required.&lt;/p&gt;</comment>
                            <comment id="13168165" author="phabricator@reviews.facebook.net" created="Tue, 13 Dec 2011 06:35:32 +0000"  >&lt;p&gt;stack has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;



&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2148 Are this calculations dangerous?  Could they be beyond commonPrefix into unallocated space?&lt;/p&gt;


&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2020 I&apos;m not sure I understand what this is for.   Any chance of an example showing when this would be used?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2156 This code looks like the old comparator code.  We are not duplicating it here are we?  (Thats some ugly code... would be a tradegy having it show up twice)  We should at miminum tie the two together with comments warning no change of one w/o changing other.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:53 I love this.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:89 I wonder if we could use this stuff writing over rpc; it might be too costly compressing but maybe for big KVs..... Anyways.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:158 I love it.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13168935" author="zhihyu@ebaysf.com" created="Wed, 14 Dec 2011 00:57:49 +0000"  >&lt;p&gt;There are two files which need to be refreshed:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1 out of 2 hunks FAILED -- saving rejects to file src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java.rej
14 out of 14 hunks ignored -- saving rejects to file src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java.rej
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13168970" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 01:46:30 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;  Addressing Michael&apos;s comments. A new version of the diff will follow. Running unit tests.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java:99 Renamed to DEFAULT_DELTA_ENCODING_IN_MEMORY_ENABLED.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2022 How about SamePrefixComparator? This means the same thing as the latter but is shorter.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:34-42 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:56 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:69 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java:32-35 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java:90 Fixed.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2020 This extension to the comparator interface is used in BufferedDeltaEncoder to improve performance if the supplied comparator implements this interface. We don&apos;t need to compare the first commonPrefix bytes of the two keys if we already know they are the same.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2148 This is the same as the old comparator code. We are assuming that the two KVs are valid.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2156 I&apos;ve looked into this and indeed saw some code duplication. I refactored the rest of this function into a common one shared between the two comparators.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java:89 I guess we might need to think about a bigger unified compression framework for HFiles, HLogs, and RPC at some point.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13168972" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 01:50:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Addressing Michael&apos;s comments. Also, implemented VLong serialization to/from byte buffers (more precisely, stole it from Hadoop&apos;s WritableUtils) and added a unit test. This is needed to avoid creating wrapper streams every time we need to copy a memstore timestamp.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/CopyKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncodedBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpBlockDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockDeltaEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingSeekPerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DeltaEncodingUtil.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13169613" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 19:37:30 +0000"  >&lt;p&gt;Kannan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java:93 I forget how there ended up being 3 options here. Jacek would have more context here. But I am guessing maybe there should just be 2 options:&lt;/p&gt;

&lt;p&gt;  a) What delta encoding algo is to be used for a CF?&lt;/p&gt;

&lt;p&gt;  b) Whether the encoding is to be in-memory only or on-disk also? &lt;span class=&quot;error&quot;&gt;&amp;#91;This is primarily a testing mode/dev-time option, where one can experiment with different delta encoders without touching on-disk format or risking corrupting on disk data. So most folks should not even have to worry about this option.&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13169621" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 19:43:31 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2036 I think SamePrefixComparator should carry byte[] as type parameter.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2020 How about &apos;avoids redundant comparisons for better performance&apos; ?&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java:35 Missing test category.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java:34 Missing test category.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java:47 Missing test category.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13169741" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 22:01:31 +0000"  >&lt;p&gt;Kannan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:153 perhaps change these too to use the newly introduced constants..&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2130 In this function (compareWithoutRow), is commonPrefix the common part including the &quot;rowkey&quot; portion?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If no, then @line 2119, should you pass commonPrefix - (rowLen + sizeOfShort) instead of commonPrefix&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If yes, then @line 2051, should you pass rowLen + sizeOfShort instead of 0?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13169842" author="mikhail" created="Thu, 15 Dec 2011 00:09:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;Maybe we could call it KeyValueEncoding, DataBlockEncoding, HCellEncoding, BlockEncoding...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Matt: do you have a specific re-naming of delta encoders in mind? Jacek&apos;s original delta encoding algorithm names are &lt;/p&gt;
{Bitset,Prefix,Diff,FastDiff}
&lt;p&gt;KeyDeltaEncoder. How do these correspond to the alternative encoder names you are suggesting?&lt;/p&gt;</comment>
                            <comment id="13169860" author="phabricator@reviews.facebook.net" created="Thu, 15 Dec 2011 00:21:30 +0000"  >&lt;p&gt;stack has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;  More to follow (Sorry for piecemealing this review... )&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java:443 Do all methods up to here belong elsewhere out in a utility class?  CompressedInts or something?  In ByteBufferUtils would be a better place?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13169870" author="mcorgan" created="Thu, 15 Dec 2011 00:26:02 +0000"  >&lt;p&gt;Mikhail - sorry for the confusion.  I was suggesting 4 options for the naming of the overall &quot;Delta Encoding&quot;, not the names of the individual encoders.  I assume the term &quot;delta&quot; comes from the fact that each KV is stored as the difference from the KV before it.&lt;/p&gt;

&lt;p&gt;From what I can tell, this patch accomplishes something more significant than just delta encoding.  It is actually a layer of indirection/decoupling that allows you to have 1 format of block on disk, another format of blocks in the block cache, and still iterate through the KV&apos;s without ever fully decoding the entire block to the unencoded format.  It&apos;s really a general purpose encoding layer.&lt;/p&gt;

&lt;p&gt;Jacek&apos;s 4 codecs were all delta based, but I&apos;ve written a TRIE format where keys are not based on deltas between each other.  Others could write other formats that also are not based on taking deltas between KVs, so i was just pointing out that the name DeltaEncoder is too specific.  &quot;DataBlockEncoding&quot; might be more appropriate.  &quot;BlockEncoding&quot; might be too generic because I think index blocks will need a different strategy, and other block types may never get encoded.&lt;/p&gt;</comment>
                            <comment id="13169894" author="mcorgan" created="Thu, 15 Dec 2011 00:50:51 +0000"  >&lt;p&gt;Another thought I had was that all reading and writing could go through the encoder/decoder.  The current patch leaves the old access path in place and has the DeltaEncoderSeeker on the side.  It would reduce the code base&apos;s complexity if everything passed through the DeltaEncoder and you set DeltaEncoderAlgorithm.NONE if you didn&apos;t want any encoding.  That could be done later though.  Would need to be careful of performance regressions.&lt;/p&gt;</comment>
                            <comment id="13169981" author="stack" created="Thu, 15 Dec 2011 05:53:23 +0000"  >&lt;p&gt;@Matt Thats a reasonable point re: naming and your latter note wondering if all reading/writing could go same path.  Out of interest do you think you could shoehorn your TRIE encoder/decoder into the frame that Jacek has rigged here?&lt;/p&gt;</comment>
                            <comment id="13169987" author="mcorgan" created="Thu, 15 Dec 2011 06:26:56 +0000"  >&lt;p&gt;Shoehorn is probably the right term, but yeah, i got it mostly working a couple months ago.  The fit actually isn&apos;t too bad (though far from ideal) and could be improved over time.  I&apos;ll try to work it into this newest patch in the next few weeks.&lt;/p&gt;</comment>
                            <comment id="13169989" author="stack" created="Thu, 15 Dec 2011 06:38:27 +0000"  >&lt;p&gt;Then I&apos;d say that if you managed to make your trie encoder/decoder fit the deltaencoder framework, it helps your case that the framework name should be broadened beyond deltaencoding only.   Good stuff.&lt;/p&gt;</comment>
                            <comment id="13171648" author="phabricator@reviews.facebook.net" created="Sat, 17 Dec 2011 19:33:30 +0000"  >&lt;p&gt;Kannan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;  some more comments...&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java:65 javadoc fix for the new param &quot;includesMemstoreTS&quot; is needed on a few of these methods.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java:126 little confused with the doc. Could you clarify what happens in the inexact match case: where are we left pointing to for the seekBefore = true and seekBefore=false cases.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java:34 here and a bunch of other places... 128 bit encoding should read 7 bit encoding&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java:475 It seems like we are missing a:&lt;/p&gt;

&lt;p&gt;  keyBuffer = newKeyBuffer;&lt;/p&gt;

&lt;p&gt;  step here after the arrayCopy step.&lt;/p&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java:470 I think the logic here has an unintentional bug.&lt;/p&gt;

&lt;p&gt;  newKeyBufferLength = keyLength * 2;&lt;br/&gt;
  should be:&lt;br/&gt;
  newKeyBufferLength = keyBuffer.length * 2;&lt;/p&gt;

&lt;p&gt;  Otherwise, the check on the subsequent line will always be FALSE.&lt;/p&gt;



&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13171662" author="phabricator@reviews.facebook.net" created="Sat, 17 Dec 2011 20:17:30 +0000"  >&lt;p&gt;Kannan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java:635 Since we are only copying the non-common-suffix part in this case, shouldn&apos;t the offset arguments in both current &amp;amp; previous be current.lastCommonPrefix (instead of 0s)?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java:147 perhaps we add an assertion that the commonLength == 0 for the first key in the block?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13172872" author="phabricator@reviews.facebook.net" created="Tue, 20 Dec 2011 02:53:31 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;  Replying to a part of the comments. Will post a new version when I am done going through all the pending comments. Running tests, too.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java:93 It is possible to use two different delta encodings on disk and in the block cache. So e.g. we could use no delta encoding on disk and only delta-encode in cache. This is the option that we want to use for testing.&lt;/p&gt;

&lt;p&gt;  In addition to that, there is a boolean option, DELTA_ENCODING_IN_MEMORY, probably somewhat confusingly named, that Jacek implemented towards the end of his internship. This option allows to use encoded scanners. I think this might be OK if we rename this option to make it less confusing and document all three of these options.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2020 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:153 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2036 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:2130 commonPrefix does include the rowkey portion, but it is OK to pass zero as commonPrefix at line 2051, because this function will not compare the row anyway. I modified the documentation and got rid of passing lrowlength and rrowlength to this function, replacing them by only one parameter, because they are always equal.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java:443 Moved the above methods to ByteBufferUtils.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java:470 Nice catch! Fixed this (also made sure that newKeyBufferLength is set to at least 1).&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java:475 Yes, nice catch. Added a unit test.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/BufferedDeltaEncoder.java:635 Yes, seems like a bug. Fixed.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13173514" author="phabricator@reviews.facebook.net" created="Tue, 20 Dec 2011 21:25:30 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; Delta encoding for keys in HFile&quot;.&lt;/p&gt;

&lt;p&gt;  Replying to the rest of comments. A new version of the patch will follow.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java:65 Added missing javadoc for includingMemstoreTS.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoder.java:126 seekBefore only matters in case of an exact match. I will update the javadoc.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java:34 Updated.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java:147 Added an assertion.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java:34 Fixed.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestDeltaEncoders.java:47 Fixed (LargeTests &amp;#8211; runs in 2 minutes).&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/deltaencoder/TestBufferedDeltaEncoder.java:34 Fixed (SmallTests).&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java:35 Fixed (SmallTests)&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13173762" author="phabricator@reviews.facebook.net" created="Wed, 21 Dec 2011 01:47:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Addressed new review comments by Kannan and Michael. Also changed the terminology, replacing &quot;delta encoding&quot; with &quot;data block encoding&quot;, as Matt and Ted suggested. Renamed the &quot;delta encoding in memory&quot; option to &quot;encoded seek&quot; which is what it really does. As a result of these changes, the code has moved around considerably.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncodingAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13173788" author="phabricator@reviews.facebook.net" created="Wed, 21 Dec 2011 02:47:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Fixing fully-qualified class name in admin.rb. All unit tests passed, except TestReplication.queueFailover, which is known to be flaky.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncodingAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13173865" author="zhihyu@ebaysf.com" created="Wed, 21 Dec 2011 05:17:10 +0000"  >&lt;p&gt;Thanks for the nice work, Mikhail.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1 out of 1 hunk ignored -- saving rejects to file src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java.rej
1 out of 2 hunks FAILED -- saving rejects to file src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java.rej
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please fix the above conflicts by rebasing against TRUNK.&lt;/p&gt;</comment>
                            <comment id="13174401" author="phabricator@reviews.facebook.net" created="Wed, 21 Dec 2011 20:47:30 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java:42 Should read &apos;have been created&apos;&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java:49 I think delta should be removed here to be consistent with new naming convention&lt;br/&gt;
  I like the javadoc in HColumnDescriptor.java @ line 601 - it is more detailed.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13174584" author="phabricator@reviews.facebook.net" created="Thu, 22 Dec 2011 02:51:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Fixing interaction with cache-on-write (found this during cluster testing). Encoded blocks were cached on write even if data block encoding was turned off in cache. I have extended TestCacheOnWrite to cover various combinations of data block encoding in cache and on disk.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncodingAlgorithms.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13174585" author="mikhail" created="Thu, 22 Dec 2011 02:53:12 +0000"  >&lt;p&gt;Adding a patch generated by &quot;git format-patch --no-prefix&quot;, since those auto-generated by Phabricator do not apply with the patch command for some reason.&lt;/p&gt;</comment>
                            <comment id="13174586" author="phabricator@reviews.facebook.net" created="Thu, 22 Dec 2011 02:53:30 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;/p&gt;

&lt;p&gt;  My most recent update also addresses the two new comments from Ted.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java:42 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java:49 Done.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13174621" author="zhihyu@ebaysf.com" created="Thu, 22 Dec 2011 05:33:56 +0000"  >&lt;p&gt;TestHeapSize.testSizes error should be caused by this JIRA.&lt;br/&gt;
Please adjust heap size accordingly.&lt;/p&gt;</comment>
                            <comment id="13174641" author="phabricator@reviews.facebook.net" created="Thu, 22 Dec 2011 06:17:30 +0000"  >&lt;p&gt;mcorgan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;/p&gt;

&lt;p&gt;  First try at phabricator - hope i&apos;m using it correctly.&lt;/p&gt;

&lt;p&gt;  Found a few minor uses of the delta terminology.  Looking great in general.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java:137 update to DATA_BLOCK_ENCODING&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java:157 should rename deltaAlgo to encoderAlgo?&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java:161 encoderAlgo&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java:162 rename to testDataBlockEncodingWithNormalSeek&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java:171 rename to testDataBlockEncodingWithEncodedSeek&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java:175 majorCompactionWithDataBlockEncoding&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java:850 testDataBlockEncodingMetaData&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13174961" author="phabricator@reviews.facebook.net" created="Thu, 22 Dec 2011 18:47:30 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;/p&gt;

&lt;p&gt;  Replying to Matt&apos;s comments. A new version of the diff will follow.&lt;br/&gt;
  @mcorgan: thanks for reviewing!&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java:137 Done.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java:157 Done.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java:161 Done.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java:171 Done.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java:175 Done.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java:850 Done.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java:162 Done.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13174962" author="phabricator@reviews.facebook.net" created="Thu, 22 Dec 2011 18:51:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Addressing Matt&apos;s comments. Also, renaming DataBlockEncodingAlgorithms to DataBlockEncodings for brevity, and adding a private constructor to that class. All unit tests pass, continuing cluster testing.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncodings.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13174986" author="zhihyu@ebaysf.com" created="Thu, 22 Dec 2011 19:28:24 +0000"  >&lt;p&gt;Patch v12 cannot be applied cleanly:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1 out of 2 hunks FAILED -- saving rejects to file src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java.rej
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then I get compilation error:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.0.2:compile (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;-compile) on project hbase: Compilation failure
[ERROR] /Users/zhihyu/trunk-hbase/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java:[274,44] cannot find symbol
[ERROR] symbol  : variable DELTA_ENCODING
[ERROR] location: class org.apache.hadoop.hbase.regionserver.StoreFile
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13175009" author="phabricator@reviews.facebook.net" created="Thu, 22 Dec 2011 19:49:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Fixing a compile error that Ted saw and TestHeapSize on 32-bit JVM (failure seen on Jenkins).&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncodings.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13175010" author="mikhail" created="Thu, 22 Dec 2011 19:52:40 +0000"  >&lt;p&gt;Appending a new version of patch that should apply using the patch command, compile, and pass TestHeapSize on Jenkins.&lt;/p&gt;</comment>
                            <comment id="13175021" author="hadoopqa" created="Thu, 22 Dec 2011 20:09:56 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12508425/Delta-encoding.patch-2011-12-22_11_52_07.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12508425/Delta-encoding.patch-2011-12-22_11_52_07.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 92 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -142 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 80 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/582//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/582//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/582//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/582//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/582//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/582//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13175258" author="zhihyu@ebaysf.com" created="Fri, 23 Dec 2011 04:00:22 +0000"  >&lt;p&gt;Hadoop QA remembers attachment Id and wouldn&apos;t retest the same attachment.&lt;/p&gt;

&lt;p&gt;Please attach the patch again.&lt;/p&gt;</comment>
                            <comment id="13175605" author="zhihyu@ebaysf.com" created="Fri, 23 Dec 2011 22:41:25 +0000"  >&lt;p&gt;Re-attaching for Hadoop QA test&lt;/p&gt;</comment>
                            <comment id="13175633" author="hadoopqa" created="Sat, 24 Dec 2011 00:59:34 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12508576/Data-block-encoding-2011-12-23.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12508576/Data-block-encoding-2011-12-23.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 92 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -142 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 81 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/592//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/592//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/592//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/592//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/592//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/592//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13175672" author="zhihyu@ebaysf.com" created="Sat, 24 Dec 2011 05:39:55 +0000"  >&lt;p&gt;Only 739 tests were executed, due to:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
#
# There is insufficient memory &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the Java &lt;span class=&quot;code-object&quot;&gt;Runtime&lt;/span&gt; Environment to &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;.
# Native memory allocation (malloc) failed to allocate 32756 bytes &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; ChunkPool::allocate
# An error report file with more information is saved as:
# /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hs_err_pid20773.log
Aborted
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13175742" author="zhihyu@ebaysf.com" created="Sat, 24 Dec 2011 16:09:49 +0000"  >&lt;p&gt;Small and medium tests passed on Mac:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests run: 551, Failures: 0, Errors: 0, Skipped: 1

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 39:54.323s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Running large tests.&lt;/p&gt;

&lt;p&gt;Will integrate if large tests pass.&lt;/p&gt;</comment>
                            <comment id="13175748" author="zhihyu@ebaysf.com" created="Sat, 24 Dec 2011 17:22:37 +0000"  >&lt;p&gt;Large tests passed as well (TestZooKeeper passed when run standalone).&lt;/p&gt;</comment>
                            <comment id="13175770" author="zhihyu@ebaysf.com" created="Sat, 24 Dec 2011 21:28:16 +0000"  >&lt;p&gt;Integrated to TRUNK&lt;/p&gt;

&lt;p&gt;Thanks for the awesome work, Jacek.&lt;/p&gt;

&lt;p&gt;Thanks for the persistence to finish this feature, Mikhail.&lt;/p&gt;

&lt;p&gt;Thanks for the detailed review Kannan.&lt;/p&gt;

&lt;p&gt;Thanks for the suggestions, Matt. &lt;/p&gt;</comment>
                            <comment id="13175787" author="zhihyu@ebaysf.com" created="Sun, 25 Dec 2011 00:23:35 +0000"  >&lt;p&gt;About TRUNK build #2574&lt;/p&gt;

&lt;p&gt;java.lang.OutOfMemoryError in:&lt;br/&gt;
&lt;a href=&quot;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/lastCompletedBuild/testReport/org.apache.hadoop.hbase.io.hfile/TestHFileBlock/testPreviousOffset_1_/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/lastCompletedBuild/testReport/org.apache.hadoop.hbase.io.hfile/TestHFileBlock/testPreviousOffset_1_/&lt;/a&gt;&lt;br/&gt;
and&lt;br/&gt;
&lt;a href=&quot;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/lastCompletedBuild/testReport/org.apache.hadoop.hbase.io.hfile/TestHFileBlock/testConcurrentReading_1_/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/lastCompletedBuild/testReport/org.apache.hadoop.hbase.io.hfile/TestHFileBlock/testConcurrentReading_1_/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I ran TestHFileBlock on MacBook and didn&apos;t reproduce any of the errors.&lt;/p&gt;</comment>
                            <comment id="13175791" author="mikhail" created="Sun, 25 Dec 2011 02:29:32 +0000"  >&lt;p&gt;@Ted: could you please revert the patch for now? It is not ready yet (sorry for not indicating this clearly, I will let you know when it&apos;s good to go). Even though it passes all unit tests, on Thursday I uncovered bugs in data block encoding handling during cluster testing. A simple load test with delta encoding turned on fails as soon as the first store file is written out. I am not sure if Jacek did this kind of testing during his internship, or if this is a new problem that I introduced while iterating on the patch. Furthermore, there is a design problem related to changing the encoding algorithm for an existing CF: if an encoded block has different encoding than what&apos;s configured by the CF, an assertion is thrown. These issues should not be that difficult to fix, though, and I still think the patch is very close to being finished.&lt;/p&gt;</comment>
                            <comment id="13175792" author="zhihyu@ebaysf.com" created="Sun, 25 Dec 2011 02:51:27 +0000"  >&lt;p&gt;Patch reverted off TRUNK.&lt;/p&gt;

&lt;p&gt;Waiting for the problems uncovered in cluster testing to be fixed.&lt;/p&gt;

&lt;p&gt;Also, TestHFileBlock keeps failing.&lt;/p&gt;</comment>
                            <comment id="13175880" author="phabricator@reviews.facebook.net" created="Mon, 26 Dec 2011 03:26:31 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java:294 This method should be made package private.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13176709" author="phabricator@reviews.facebook.net" created="Wed, 28 Dec 2011 17:16:30 +0000"  >&lt;p&gt;mcorgan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;/p&gt;

&lt;p&gt;  I&apos;m porting the TRIE encoding algorithm over to this new patch, so am able to review a little better in eclipse than on review board.  Couple things I&apos;ve noticed so far:&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncodings.java:32 The enum nested in a class is unusual.  Would a more typical approach be to call it DataBlockEncoding (singular) and make that the enum, eliminating the nested &quot;Algorithm&quot;?&lt;/p&gt;

&lt;p&gt;  So you would have DataBlockEncoding.BITSET, etc.&lt;/p&gt;

&lt;p&gt;  This would help elsewhere in the codebase since it will eliminate the confusion with the unfortunately named compression &quot;Algorithm&quot; (GZIP, LZO)&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:121 This method was added before getKeyValueObject(), so I see why it happened this way, but this method should probably be called getKeyValueBuffer() or getKeyValueByteBuffer(), and the below method should be called getKeyValue()&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:134 rename to getKeyValue()&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13176872" author="phabricator@reviews.facebook.net" created="Wed, 28 Dec 2011 22:59:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Addressing Ted&apos;s comment and Matt&apos;s comments.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13176971" author="phabricator@reviews.facebook.net" created="Thu, 29 Dec 2011 03:42:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding (delta encoding)&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Simplifying user-facing data block encoding knobs:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;DATA_BLOCK_ENCODING specifies block encoding type&lt;/li&gt;
	&lt;li&gt;ENCODE_IN_CACHE_ONLY can be set to true to avoid encoding data blocks on disk. This is false by default (i.e. we encode blocks everywhere by default if DATA_BLOCK_ENCODING is specified).&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13176976" author="mikhail" created="Thu, 29 Dec 2011 03:55:56 +0000"  >&lt;p&gt;Just a quick note from an offline conversation with Kannan: we need to support modifying data block encoding column family settings. In the most recent version of the patch (&lt;a href=&quot;https://reviews.facebook.net/D447?vs=&amp;amp;id=3237&amp;amp;whitespace=ignore-all&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447?vs=&amp;amp;id=3237&amp;amp;whitespace=ignore-all&lt;/a&gt;) there are the following user-facing column family settings:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;DATA_BLOCK_ENCODING - specifies data block encoding type or NONE&lt;/li&gt;
	&lt;li&gt;ENCODE_IN_CACHE_ONLY - boolean (false by default). If true, data blocks are only encoded in cache but not on disk&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We removed the &quot;encoded scanner&quot; flag, and we use encoded scanners by default any time we use data block encoding.&lt;/p&gt;

&lt;p&gt;Given the above column family settings, we need to unit-test at least the following transitions:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Switching from no data block encoding to a data block encoding everywhere, and vice versa&lt;/li&gt;
	&lt;li&gt;Switching from no data block encoding to a data block encoding in cache only, and vice versa&lt;/li&gt;
	&lt;li&gt;Flipping the &quot;in cache only&quot; flag but keeping the data block encoding type the same&lt;/li&gt;
	&lt;li&gt;Switching from one data block encoding everywhere to another one&lt;/li&gt;
	&lt;li&gt;Switching from one data block encoding in cache only to another one&lt;/li&gt;
	&lt;li&gt;Switching to a different data block encoding and flipping the &quot;in cache only&quot; flag.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13178279" author="phabricator@reviews.facebook.net" created="Mon, 2 Jan 2012 04:29:30 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Fixed a pretty bad bug in the encoded seeker framework. The state was not restored correctly when going back to the previous key/value for inexact key matches, leading to scanner failure. This only showed up when adding data block encoding to TestMultiColumnScanner.&lt;/p&gt;

&lt;p&gt;  Added data block encoding (only the PREFIX algorithm for now) to TestMiniClusterLoad&lt;/p&gt;
{Sequential,Parallel}
&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;  Cluster testing now works well for PREFIX encoding and either no compression or GZ compression. There are still failures observed in cluster testing for the FAST_DIFF algorithm (and possibly other algorithms) that need to be investigated.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BitsetKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13178282" author="phabricator@reviews.facebook.net" created="Mon, 2 Jan 2012 04:51:30 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  Thanks for the nice work, Mikhail.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BitsetKeyDeltaEncoder.java:48 Good.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:238 Wonderful.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java:115 Should read &apos;they work exactly the same&apos;&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13178284" author="zhihyu@ebaysf.com" created="Mon, 2 Jan 2012 04:58:51 +0000"  >&lt;p&gt;Patch v16 that applies cleanly.&lt;/p&gt;</comment>
                            <comment id="13178290" author="hadoopqa" created="Mon, 2 Jan 2012 05:39:32 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12509029/4218-v16.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12509029/4218-v16.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 104 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -138 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 82 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/650//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/650//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/650//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/650//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/650//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/650//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13178977" author="phabricator@reviews.facebook.net" created="Tue, 3 Jan 2012 19:36:39 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Added another unit test doing a mini-cluster load test with data block encoding turned on. That helped find some bugs similar to those that I observed in 5-node cluster testing, and I added a smaller test reproducing the same bugs (TestEncodedSeekers). Fixed those bugs by correctly restoring additional state when going to previous key/value (previously, only the vanilla BufferedDataBlockEncoder.SeekerState was restored but not algorithm-specific state). I also had to remove BitsetKeyDeltaEncoder for now because I could not fix its encoded seeker yet (it seemed to have some more complicated bugs) but we are not planning to use that algorithm for now.&lt;/p&gt;

&lt;p&gt;  Also, fixed the most recent comment by Ted and TestHFileBlock.testBlockHeapSize failure on a 32-bit JVM (thanks to Ted for pointing that out, too).&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13178991" author="mcorgan" created="Tue, 3 Jan 2012 20:07:42 +0000"  >&lt;p&gt;Mikhail, can you explain the thinking behind the ENCODE_IN_CACHE_ONLY setting, as opposed to the previous ENCODING_IN_MEMORY setting?  I can&apos;t think of a scenario where you&apos;d want to store unencoded values on disk and encode them every time you load a block into memory.  (Would that be for better compression ratios?)  I&apos;d actually think it more likely to have encoded blocks on disk and decode them in memory for faster scans/seeks.&lt;/p&gt;

&lt;p&gt;Anyway, I just thought the separate ENCODING_ON_DISK, and ENCODING_IN_MEMORY settings were not too complicated, and they had the added benefit of letting you encode on disk only.&lt;/p&gt;</comment>
                            <comment id="13179028" author="zhihyu@ebaysf.com" created="Tue, 3 Jan 2012 21:27:45 +0000"  >&lt;p&gt;Reading JIRA description again, it clearly states the goal for this feature:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;It aims to save memory in cache as well as speeding seeks within HFileBlocks.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It is also evident in javadoc:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
* @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the data block encoding algorithm used in block cache and
* optionally on disk
*/
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; DataBlockEncoding getDataBlockEncoding() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Matt&apos;s interpretation is reasonable I think.&lt;/p&gt;</comment>
                            <comment id="13179036" author="mikhail" created="Tue, 3 Jan 2012 21:33:53 +0000"  >&lt;p&gt;@Matt, Ted: the problem with the previous settings was that they were too flexible, and allowed for different encodings in cache and in memory. We definitely don&apos;t want to re-encode a block using a different encoding algorithm after loading it from disk. After a discussion with Kannan we decided that the whole benefit of delta encoding is in encoded scanners and allowing to put more data into cache. If we want to use a compression algorithm on disk but not in cache, it is possible to implement that using the existing compression framework. Furthermore, Jacek found in his experiments that encoded scanners were actually faster than scanners on decoded blocks. Please let me know what use case you have in mind that would require storing decoded blocks in cache and would not allow for efficient scanning over encoded blocks.&lt;/p&gt;</comment>
                            <comment id="13179045" author="stack" created="Tue, 3 Jan 2012 21:42:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;the problem with the previous settings was that they were too flexible, and allowed for different encodings in cache and in memory.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 on removing options if they can make the system seem more complicated.&lt;/p&gt;</comment>
                            <comment id="13179054" author="mcorgan" created="Tue, 3 Jan 2012 21:56:12 +0000"  >&lt;p&gt;Interesting... the testing i&apos;ve been doing shows the delta algorithms to be about half as fast at scanning and seeking than the NONE encoding, which is why I was thinking you&apos;d possibly want the opposite setting (encoded on disk, decoded in memory).  I&apos;ll look at my benchmark again to see if i can figure out the discrepancy.&lt;/p&gt;

&lt;p&gt;I don&apos;t have a strong opinion either way as i&apos;ll probably always run with the same encoding on disk and in memory.  Was mostly curious.&lt;/p&gt;</comment>
                            <comment id="13179057" author="lhofhansl" created="Tue, 3 Jan 2012 21:58:56 +0000"  >&lt;p&gt;+1 on avoiding different encoding on disk vs cache.&lt;br/&gt;
However, since we have all this framework in place, why not also allow it for disk only encoding?&lt;br/&gt;
It is in principle different from the current block based compression, as it can easily take the shape of KeyValues into account.&lt;/p&gt;

&lt;p&gt;Could we have ENCODING, ENCODE_IN_CACHE, and ENCODE_ON_DISK?&lt;/p&gt;</comment>
                            <comment id="13179104" author="zhihyu@ebaysf.com" created="Tue, 3 Jan 2012 22:59:00 +0000"  >&lt;p&gt;@Matt:&lt;br/&gt;
For clarification, did you use recent version of PrefixKeyDeltaEncoder for the scan performance evaluation ?&lt;/p&gt;

&lt;p&gt;I think it is natural for different encoders to show different scan performance.&lt;/p&gt;</comment>
                            <comment id="13179130" author="mcorgan" created="Tue, 3 Jan 2012 23:35:02 +0000"  >&lt;p&gt;Yes, i think i used the most recent version.  I don&apos;t have the code readily available, but can check into it tonight.  &lt;/p&gt;

&lt;p&gt;My main concern from this morning was that the modified settings hid features of already working code (like Lars mentioned) while not really simplifying things too much.  I guess the big problem with having the separate ON_DISK and IN_MEMORY settings is that a user would have to change both of them simultaneously, which is not obvious to a new user.&lt;/p&gt;

&lt;p&gt;One option could be to persist the ENCODING_ON_DISK and ENCODING_IN_MEMORY separately in the HColumnDescriptor no matter what we put in the settings UI.  That way we have the ability to change the user facing settings in the future without having to go through the painful process of versioning the HTableDescriptor (i&apos;m not even sure how that works behind the scenes).  If we did that, I think the simplest setting we could expose to the user would just be ENCODING, and that would set both of the persistent variables to the same thing.&lt;/p&gt;

&lt;p&gt;i hate to overthink it - just might be hard to change once it&apos;s in place&lt;/p&gt;</comment>
                            <comment id="13179153" author="mikhail" created="Wed, 4 Jan 2012 00:08:44 +0000"  >&lt;p&gt;@Matt: what do you call &quot;the settings UI&quot;? I thought HColumnDescriptor was part of the user-visible API, and if we allowed more flexible options there, we would have to fully support them everywhere. &lt;/p&gt;

&lt;p&gt;On the performance issue: HBase is IO-bound for most production workloads, so if we can fit more data into cache, we should get a performance win. Jacek reported that encoded scanners were faster in his experiments, and if they are not, we should optimize them or disable prefix compression for that particular workload. In a CPU-bound situation, one reason encoded scanners could be slower is that the data does not compress well, so delta encoding introduces an unnecessary CPU overhead and does not really save any space in cache. For that type of workload, using prefix compression probably is not the right thing to do.&lt;/p&gt;

&lt;p&gt;Could you please share some more details about the workload in your test? Is it CPU-bound or IO-bound? Is it similar to your envisioned use case for data block encoding? Are you planning to use the PREFIX algorithm or your trie implementation? Does the trie algorithm have the same encoded scanner performance problem?&lt;/p&gt;

&lt;p&gt;@Lars, Matt:&lt;br/&gt;
&quot;We have all the framework in place&quot; and &quot;features or already working code&quot; are relative concepts. The framework still needs to be tweaked to (1) support all real use cases people have in mind; and (2) allow to solidify the existing implementation and test it really well. Jacek&apos;s original patch did not handle switching data block encoding settings in the column family, and I am in the process of modifying the patch to support that. The more flexibility we allow for column family encoding configuration, the more cases we have to test, and the more exotic edge cases we get.&lt;/p&gt;

&lt;p&gt;A couple more notes on supporting switching data block encoding column family settings. Kannan and I discussed this, and we came up with a plan for allowing a seamless migration to a new data block encoding. Blocks read from existing HFiles will still be brought into cache using their original encoding, and we will allow storing a mixture of different data block encodings in the cache. The new encoding configuration will only be applied on flushes and compactions. This is similar to the seamless HFile format upgrade that we have already done successfully.&lt;/p&gt;

&lt;p&gt;Another possible way to simplify things even further could be to get rid of the ENCODE_IN_CACHE_ONLY option completely. We introduced it for testing, but it seems to be causing more trouble than it is worth, and actually slows down patch stabilization and testing. Such &quot;test-mode&quot; encoding would require extra care to avoid using encoding during compactions, because that could actually corrupt on-disk data. I think a better way would be to add more unit tests for various edge cases and transitions for simplified configuration options, and do more synthetic load testing with those. For dark launch cluster it is always possible to take a backup and roll back if a data corruption happens. I still need to discuss that option with Kannan and the rest of our team, but please let me know what you think.&lt;/p&gt;</comment>
                            <comment id="13179161" author="mikhail" created="Wed, 4 Jan 2012 00:27:20 +0000"  >&lt;p&gt;Here is another update after discussing this with Jerry. Actually, the real value of in-cache-only encoding for us is that if we can get a benefit of data block encoding in production faster without risking data corruption, so we still want to support that option. This benefit should come from being able to put more stuff in cache, and (based on Jacek&apos;s experiments, I haven&apos;t confirmed this myself) from faster encoded scanners. We really need to make sure that we don&apos;t go through encoding/decoding on compactions when in-cache-only encoding is enabled, though.&lt;/p&gt;</comment>
                            <comment id="13179166" author="mcorgan" created="Wed, 4 Jan 2012 00:31:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;Blocks read from existing HFiles will still be brought into cache using their original encoding&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;awesome - I was just about to bring that up.  Will be very important for tables that go many days between compactions&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Another possible way to simplify things even further could be to get rid of the ENCODE_IN_CACHE_ONLY option completely&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am leaning towards this as well.  It&apos;s a cool feature for development and testing, but i can&apos;t think of a reason to use it in production.  As you mentioned, it makes more sense to do encoding during flushes and compactions and not during the read path.  Storing unencoded on disk and encoded in memory would make sense for workloads where the average block is read less than once, but that&apos;s pretty uncommon and that scenario is not likely to make good usage of the block cache anyway.&lt;/p&gt;</comment>
                            <comment id="13179172" author="mcorgan" created="Wed, 4 Jan 2012 00:39:01 +0000"  >&lt;p&gt;oops - missed your comment before replying.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;the real value of in-cache-only encoding for us is that if we can get a benefit of data block encoding in production faster without risking data corruption&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;makes sense to me.  sorry for the full-circle discussion!&lt;/p&gt;</comment>
                            <comment id="13179254" author="zhihyu@ebaysf.com" created="Wed, 4 Jan 2012 03:50:36 +0000"  >&lt;p&gt;@Stack, @Matt, @Lars:&lt;br/&gt;
Can I assume that you&apos;re Okay with the formation in the latest patch ?&lt;/p&gt;</comment>
                            <comment id="13179260" author="mcorgan" created="Wed, 4 Jan 2012 04:10:27 +0000"  >&lt;p&gt;It makes sense to me given the background.  Seems like the ENCODE_IN_CACHE_ONLY is more of a caution flag that people can fly until they&apos;re confident their data won&apos;t be corrupted.  Probabaly can be removed at some point down the road.&lt;/p&gt;</comment>
                            <comment id="13179262" author="lhofhansl" created="Wed, 4 Jan 2012 04:17:26 +0000"  >&lt;p&gt;Mikhail&apos;s explanation absolutely makes sense. In fact now I would even prefer to get rid of ENCODE_IN_CACHE_ONLY (am OK with leaving it in too).&lt;/p&gt;</comment>
                            <comment id="13179267" author="zhihyu@ebaysf.com" created="Wed, 4 Jan 2012 04:40:51 +0000"  >&lt;p&gt;Re-attaching latest patch from Mikhail for Hadoop QA.&lt;/p&gt;</comment>
                            <comment id="13179273" author="zhihyu@ebaysf.com" created="Wed, 4 Jan 2012 05:03:16 +0000"  >&lt;p&gt;Removing offending chunk from HFilePerformanceEvaluation.java&lt;/p&gt;</comment>
                            <comment id="13179299" author="hadoopqa" created="Wed, 4 Jan 2012 05:48:44 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12509377/4218.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12509377/4218.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 111 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -138 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 81 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestSplitLogManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/662//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/662//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/662//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/662//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/662//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/662//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13179335" author="phabricator@reviews.facebook.net" created="Wed, 4 Jan 2012 08:16:39 +0000"  >&lt;p&gt;mcorgan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  Trying to review this with an eye on schema changes and compactions.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java:241 What about the situation where regionserver is running for a while with ENCODING_IN_MEMORY=true and block cache gets filled with encoded blocks, and then user does schema change to disable encoding altogether.  Now the block cache may return an old encoded block.  (Assuming online schema change doesn&apos;t invalidate all blocks for a table?)&lt;/p&gt;

&lt;p&gt;  If i&apos;m understanding that correctly, then it shouldn&apos;t be an IllegalStateException but should be handled normally.  It should probably invalidate the encoded block from the block cache if possible, otherwise it will expire normally.  Then it should return null so that HfileReaderV2 knows to go to the filesystem to get the block.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13179349" author="mikhail" created="Wed, 4 Jan 2012 08:47:23 +0000"  >&lt;p&gt;A brief status update. I am in the process of implementing support for column family data block encoding configuration changes. Those changes are coming in the next version of the patch that I will post tomorrow. After discussing this with Kannan, our solution is:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Assign an in-cache data block encoding to every HFile reader. This in-cache encoding is determined as follows:
	&lt;ul&gt;
		&lt;li&gt;If the HFile is not encoded on disk, the in-cache encoding is set to the column family&apos;s DATA_BLOCK_ENCODING.&lt;/li&gt;
		&lt;li&gt;If the HFile is encoded on disk, the in-cache encoding is set to the HFile encoding to avoid the wasted effort of re-encoding blocks for cache.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;When a non-encoded block is loaded from disk, it is encoded using the in-cache encoding and put in cache.&lt;/li&gt;
	&lt;li&gt;When an encoded block is loaded from disk, its encoding is left as is.&lt;/li&gt;
	&lt;li&gt;To reduce the complexity of data block encoding switching, we can include the in-cache encoding type in the block cache key. For example, if ENCODED_IN_CACHE_ONLY is turned on without encoding on disk, and then the encoding is turned off altogether, the cache will be populated with non-encoded blocks (since they will have completely different keys) and encoded blocks will age out from the cache. While this is suboptimal, the implementation is very simple and the common case (when the CF encoding options do not change) is not complicated with unnecessary corner cases.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13179351" author="phabricator@reviews.facebook.net" created="Wed, 4 Jan 2012 08:50:39 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java:241 This is exactly the kind of issue that I am working on fixing right now (to be included in the next update to the patch). More details on the JIRA: &lt;a href=&quot;http://bit.ly/zzncUZ&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bit.ly/zzncUZ&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13179650" author="lhofhansl" created="Wed, 4 Jan 2012 17:12:17 +0000"  >&lt;p&gt;One more thought about ENCODED_IN_CACHE_ONLY (and then I&apos;ll shut up about this)...&lt;/p&gt;

&lt;p&gt;If we ever wanted to extend this in the future and allow disk only encoding, maybe a better way would be to have ENCODING and ENCODE_ON_DISK. ENCODE_ON_DISK (default false) would just be the inverse of what ENCODED_IN_CACHE_ONLY is. That way (if we felt so inclined) we can add ENCODE_IN_CACHE later and allow it to be false.&lt;/p&gt;</comment>
                            <comment id="13179763" author="kannanm" created="Wed, 4 Jan 2012 19:07:28 +0000"  >&lt;p&gt;I also like ENCODE_ON_DISK instead of ENCODE_IN_CACHE_ONLY (with the reverse semantics).&lt;/p&gt;

&lt;p&gt;I would say let&apos;s keep the default for ENCODE_ON_DISK to true though. This is more a testing knob in early stages-- where someone will set it to false before publishing a new data block encoder for general use. By the time end users try this, the code should be robust enough, and the Column Family setting of which data block encoding to use should be ideally the only knob they need to think about.&lt;/p&gt;
</comment>
                            <comment id="13179802" author="mcorgan" created="Wed, 4 Jan 2012 19:41:56 +0000"  >&lt;p&gt;Some food for thought - there is probably more complexity to this down the road.  There are always going to be trade-offs between encoding speed, compression ratio, scan throughput, and seek latency.  These trade-offs can actually be quite huge, like 10x when you start considering things like suffix compression.  I can see having different encodings in the same column family depending on dynamic performance decisions.  For example, use the most compact encoding during major compaction, but use the fastest encoding if memstore flushes are backlogged.&lt;/p&gt;

&lt;p&gt;We probably can&apos;t get it perfect in this first iteration.  Just want to avoid shooting ourselves in the foot as much as possible.&lt;/p&gt;</comment>
                            <comment id="13179813" author="stack" created="Wed, 4 Jan 2012 19:51:03 +0000"  >&lt;p&gt;/me hearts this issue&lt;/p&gt;</comment>
                            <comment id="13179945" author="mikhail" created="Wed, 4 Jan 2012 22:29:32 +0000"  >&lt;p&gt;I think that with an 8K line patch we probably should not try to put more complexity into the first version of delta encoding. We can always make things more complicated later. I like the two-parameter setup: DATA_BLOCK_ENCODING sets the encoding type (on-disk and in-cache by default) and ENCODE_ON_DISK (true by default) allows to use in-cache-only encoding (when explicitly setting ENCODE_ON_DISK=false) and get the benefit of encoding in cache even before we are 100% sure that our encoding algorithms and encoded scanners are stable. If everyone agrees with that, I will finish the patch by (1) adding a unit test for switching data block encoding column family settings; (2) including encoding type in the cache key; and (3) simplifying the HFileDataBlockEncoder interface, since we assume that the &quot;in-memory format&quot; (used by scanners) is always the same as the in-cache format and don&apos;t need methods such as afterReadFromDiskAndPuttingInCache anymore.&lt;/p&gt;</comment>
                            <comment id="13179955" author="mcorgan" created="Wed, 4 Jan 2012 22:56:04 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;I think that with an 8K line patch we probably should not try to put more complexity into the first version of delta encoding.&lt;/p&gt;&lt;/blockquote&gt;Yes, totally agreeing here.  It is a work in progress, and so these settings in this patch don&apos;t have to make perfect sense.  I like the latest DATA_BLOCK_ENCODING=NONE&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; and ENCODE_ON_DISK=true defaults.&lt;/p&gt;

&lt;p&gt;All other comments look sensible.  Have you covered the case where you have encoded blocks in the block cache and are compacting to an unencoded hfile?  You will want to make sure that you are using (not ignoring) the cached blocks.&lt;/p&gt;</comment>
                            <comment id="13179959" author="mikhail" created="Wed, 4 Jan 2012 23:03:39 +0000"  >&lt;p&gt;Actually, I think it is OK to ignore cached encoded blocks on compaction. We can get encoded blocks in cache and have a compaction write an unencoded file in two cases:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Encoding is turned on in cache only. In that case we don&apos;t want to use encoded blocks during compaction at all, because the in-cache-only mode implies that we don&apos;t trust our encoding algorithms 100% and want to guard against possible persistent data corruption.&lt;/li&gt;
	&lt;li&gt;Encoding was turned on (either in cache only or everywhere) and it was turned off entirely. Since this is not a very frequent case, I think we could probably optimize this after the patch is stabilized.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13179960" author="mikhail" created="Wed, 4 Jan 2012 23:04:34 +0000"  >&lt;p&gt;Re-reading my previous post, I want to make an addition: we still use cached encoded blocks when compacting a fully-encoded column family.&lt;/p&gt;</comment>
                            <comment id="13179973" author="mcorgan" created="Wed, 4 Jan 2012 23:18:22 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;I think it is OK to ignore cached encoded blocks on compaction&lt;/p&gt;&lt;/blockquote&gt;The circumstance i was worried about is if you are doing many small flushes and minor compactions.  The blocks to be compacted could mostly be in cache, and you would be ignoring them all.  I guess it doesn&apos;t matter if it&apos;s just for testing, but might give a false impression of performance.&lt;/p&gt;</comment>
                            <comment id="13180931" author="phabricator@reviews.facebook.net" created="Thu, 5 Jan 2012 23:13:38 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Performing the changes described at &lt;a href=&quot;http://bit.ly/zzncUZ&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bit.ly/zzncUZ&lt;/a&gt; and &lt;a href=&quot;http://bit.ly/x5tX9x&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bit.ly/x5tX9x&lt;/a&gt;, and fixing another encoded seek bug in DiffKeyDeltaEncoder. One necessary test that is still to be written is an HFile v1 -&amp;gt; encoded HFile v2 migration test, but that can in principle be done as a separate patch.&lt;/p&gt;

&lt;p&gt;  I will do some additional cluster testing and run a test on Jenkins &amp;#8211; please do not commit yet!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13180937" author="mikhail" created="Thu, 5 Jan 2012 23:16:53 +0000"  >&lt;p&gt;Uploading a patch that should apply clearly.&lt;/p&gt;</comment>
                            <comment id="13180964" author="hadoopqa" created="Fri, 6 Jan 2012 00:01:21 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12509627/Delta-encoding.patch-2012-01-05_15_16_43.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12509627/Delta-encoding.patch-2012-01-05_15_16_43.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 174 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -146 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 83 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/675//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/675//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/675//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/675//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/675//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/675//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13180987" author="mikhail" created="Fri, 6 Jan 2012 00:29:05 +0000"  >&lt;p&gt;The failed tests above pass locally:&lt;/p&gt;

&lt;p&gt;Running org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 120.447 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 216.844 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 79.119 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.mapreduce.TestTableMapReduce&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 95.373 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 67.574 sec&lt;/p&gt;

&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Tests run: 27, Failures: 0, Errors: 0, Skipped: 0&lt;/p&gt;

&lt;p&gt;The patch also works good (so far) in a LoadTestTool 5-node cluster test with LZO compression and PREFIX encoding. I have a couple more minor changes to the patch, so please don&apos;t commit yet.&lt;/p&gt;</comment>
                            <comment id="13180989" author="mikhail" created="Fri, 6 Jan 2012 00:32:14 +0000"  >&lt;p&gt;Fixing an NPE in EncodedSeekPerformanceTest.&lt;/p&gt;</comment>
                            <comment id="13180990" author="phabricator@reviews.facebook.net" created="Fri, 6 Jan 2012 00:33:39 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Fixing an NPE in EncodedSeekPerformanceTest (a test tool).&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13181042" author="mikhail" created="Fri, 6 Jan 2012 01:58:29 +0000"  >&lt;p&gt;Attaching a patch that applies. (A new unit test is coming for HFile v1 to encoded HFile v2 upgrade, so the patch is not final yet.)&lt;/p&gt;</comment>
                            <comment id="13181055" author="hadoopqa" created="Fri, 6 Jan 2012 02:39:35 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12509647/Delta-encoding.patch-2012-01-05_16_31_44_copy.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12509647/Delta-encoding.patch-2012-01-05_16_31_44_copy.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 174 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -146 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 83 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestSplitLogManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/679//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/679//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/679//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/679//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/679//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/679//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13181060" author="phabricator@reviews.facebook.net" created="Fri, 6 Jan 2012 02:49:38 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Adding a new unit test that upgrades from HFile v1 to an HFile v2 with data block encoding turned on, as per Todd&apos;s suggestion.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13181063" author="mikhail" created="Fri, 6 Jan 2012 02:52:22 +0000"  >&lt;p&gt;Adding a test that upgrades from HFile v1 to encoded HFile v2.&lt;/p&gt;</comment>
                            <comment id="13181072" author="hadoopqa" created="Fri, 6 Jan 2012 03:40:52 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12509652/Delta-encoding.patch-2012-01-05_18_50_47.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12509652/Delta-encoding.patch-2012-01-05_18_50_47.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 178 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -146 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 83 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestSplitLogManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/681//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/681//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/681//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/681//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/681//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/681//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13181850" author="zhihyu@ebaysf.com" created="Sat, 7 Jan 2012 04:27:35 +0000"  >&lt;p&gt;Test failure seemed to be caused by resource constraint (&lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/681/testReport/org.apache.hadoop.hbase.io.hfile/TestHFileBlock/testPreviousOffset_1_/):&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/681/testReport/org.apache.hadoop.hbase.io.hfile/TestHFileBlock/testPreviousOffset_1_/):&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.OutOfMemoryError
	at java.util.zip.Inflater.init(Native Method)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;TestHFileBlock passed on MacBook (with -d32 JVM arg).&lt;br/&gt;
TestSplitLogManager passed too.&lt;/p&gt;

&lt;p&gt;@Mikhail:&lt;br/&gt;
Has the latest patch passed cluster testing ?&lt;/p&gt;</comment>
                            <comment id="13182119" author="mikhail" created="Sat, 7 Jan 2012 22:13:28 +0000"  >&lt;p&gt;Attaching a patch rebased on trunk changes.&lt;/p&gt;</comment>
                            <comment id="13182126" author="phabricator@reviews.facebook.net" created="Sat, 7 Jan 2012 22:20:39 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Fixing the -encode_in_cache_only option of LoadTestTool (it is still &quot;encode_in_cache_only&quot;, even though we use ENCODE_ON_DISK in the column family), and rebasing on most recent trunk changes. Unit tests still pass.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13182134" author="mikhail" created="Sat, 7 Jan 2012 22:26:35 +0000"  >&lt;p&gt;@Ted: I was running a load test with LZO compression and PREFIX encoding and everything was fine, but then I switched to encoding in cache only and compactions started failing. I need to look into this.&lt;/p&gt;</comment>
                            <comment id="13185819" author="phabricator@reviews.facebook.net" created="Fri, 13 Jan 2012 20:18:39 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Fixing a critical bug in compactions with cache-on-write turned on when encoding is used in cache only. All unit tests pass. I also did the following cluster test:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Load LZO-compressed, PREFIX-encoded data, encoding on disk&lt;/li&gt;
	&lt;li&gt;Switch encoding on disk off, load some more data&lt;/li&gt;
	&lt;li&gt;Switch encoding on disk back on, load some more data&lt;/li&gt;
	&lt;li&gt;Run a manual compaction&lt;/li&gt;
	&lt;li&gt;Switch encoding type to FAST_DIFF, turn encoding on disk off, load some more data&lt;/li&gt;
	&lt;li&gt;Switch encoding type to DIFF, turn encoding on disk on, load some more data&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;  I kept an eye on the logs throughout the above manipulations and made sure that compaction errors I had seen before (with an unencoded scanner trying to read an encoded block) did not show up.&lt;/p&gt;

&lt;p&gt;  @Kannan: did you want to take another look at the diff?&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestLoadAndSwitchEncodeOnDisk.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13185821" author="mikhail" created="Fri, 13 Jan 2012 20:20:49 +0000"  >&lt;p&gt;Attaching a patch generated using &lt;/p&gt;

&lt;p&gt;git format-patch --no-prefix HEAD^..HEAD&lt;/p&gt;

&lt;p&gt;that can be applied by the normal patch command.&lt;/p&gt;</comment>
                            <comment id="13185834" author="zhihyu@ebaysf.com" created="Fri, 13 Jan 2012 20:41:42 +0000"  >&lt;p&gt;PreCommit build #755:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Running org.apache.hadoop.hbase.io.hfile.TestHFileBlock
Tests run: 16, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 67.298 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13185851" author="phabricator@reviews.facebook.net" created="Fri, 13 Jan 2012 21:04:38 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  Amazing progress.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java:73 encoding is repeated twice.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java:307 Can we include dataBlockEncoder.getEncodingInCache() in the exception message ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13185853" author="hadoopqa" created="Fri, 13 Jan 2012 21:05:41 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510523/Delta-encoding.patch-2012-01-13_12_20_07.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510523/Delta-encoding.patch-2012-01-13_12_20_07.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 182 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -142 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 84 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/755//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/755//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/755//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/755//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/755//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/755//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13186066" author="phabricator@reviews.facebook.net" created="Sat, 14 Jan 2012 02:18:38 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Adding HFileReadWriteTest (from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4516&quot; title=&quot;HFile-level load tester with compaction and random-read workloads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4516&quot;&gt;&lt;del&gt;HBASE-4516&lt;/del&gt;&lt;/a&gt;) and fixing it to work with delta encoding. We can close both JIRAs when this patch is committed.&lt;/p&gt;

&lt;p&gt;  Also extending TestEncodedSeekers to do a compaction and verify that compaction does not cache unencoded blocks in encode-in-cache-only mode, even though it does operate on unencoded blocks in that mode to avoid permanent data corruption in case of a delta encoding bug.&lt;/p&gt;

&lt;p&gt;  @tedyu: I will address your comments in the next version (to follow shortly). Kannan also wants to re-review the patch over the weekend, so please do not commit it yet.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java.rej&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java.rej&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestLoadAndSwitchEncodeOnDisk.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/HFileReadWriteTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13186248" author="zhihyu@ebaysf.com" created="Sat, 14 Jan 2012 16:04:06 +0000"  >&lt;p&gt;Latest patch from Phabricator&lt;/p&gt;</comment>
                            <comment id="13186257" author="hadoopqa" created="Sat, 14 Jan 2012 16:50:20 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510586/4218-2012-01-14.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510586/4218-2012-01-14.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 137 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -140 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 86 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/761//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/761//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/761//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/761//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/761//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/761//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13187878" author="phabricator@reviews.facebook.net" created="Tue, 17 Jan 2012 18:52:39 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Addressing Ted&apos;s comments and removing two .rej files that somehow got into the patch.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestLoadAndSwitchEncodeOnDisk.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/HFileReadWriteTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13187896" author="mikhail" created="Tue, 17 Jan 2012 19:09:44 +0000"  >&lt;p&gt;Appending a patch that can be applied by Hadoop QA.&lt;/p&gt;</comment>
                            <comment id="13187951" author="hadoopqa" created="Tue, 17 Jan 2012 20:01:23 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510876/Delta-encoding-2012-01-17_11_09_09.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510876/Delta-encoding-2012-01-17_11_09_09.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 185 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -140 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 86 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/793//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/793//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/793//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/793//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/793//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/793//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13188169" author="zhihyu@ebaysf.com" created="Wed, 18 Jan 2012 01:20:34 +0000"  >&lt;p&gt;@Kannan, @Mikhail:&lt;br/&gt;
Is the latest patch ready to go ?&lt;/p&gt;</comment>
                            <comment id="13188175" author="mikhail" created="Wed, 18 Jan 2012 01:25:54 +0000"  >&lt;p&gt;@Ted: we are in the process of doing a final review internally. It will probably be a couple more days &amp;#8211; we will post an update.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;br/&gt;
--Mikhail&lt;/p&gt;</comment>
                            <comment id="13188282" author="lhofhansl" created="Wed, 18 Jan 2012 05:30:11 +0000"  >&lt;p&gt;(Just looking through the thread of comments)&lt;/p&gt;

&lt;p&gt;@Matt: When you saw the 50% performance reduction, did your workload fit into the cache (before compression)? One of the ideas here is that because of the compression the cache can hold more KVs, so one would have to measure the reduced scan performance intra-block against more frequent block loads from HDFS.&lt;/p&gt;</comment>
                            <comment id="13188294" author="mcorgan" created="Wed, 18 Jan 2012 06:10:18 +0000"  >&lt;p&gt;I used plenty of memory and a warmup run so that for the measured results all reads were served out of the OS page cache and HBase block cache.  I was trying to measure compression ratio and cpu performance assuming that the data set is very hot and cached nearly 100%.  If you&apos;re IO bound, then that 50% cpu difference shouldn&apos;t matter much, like you said.  It strikes me that bringing IO into the test is really just testing the effective size of the block cache which you can already do by adjusting the block cache size in hbase-site.  CPU efficiency difference would get drowned out.&lt;/p&gt;

&lt;p&gt;A scenario i have where data is 100% cached is chronological log (&quot;event&quot;) data (sharded 16 ways) where the last ~2 days fit in memory.  We add different secondary index tables to the primary table depending on different reports we want to generate.  When scanning those secondary indexes we pull millions of rows from the primary table in random order.  The better the compression, the more days of log events we can hold in memory, and the better the cpu efficiency, the faster we can do the random reads.&lt;/p&gt;</comment>
                            <comment id="13188741" author="phabricator@reviews.facebook.net" created="Wed, 18 Jan 2012 22:10:41 +0000"  >&lt;p&gt;Kannan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  another partial round of comments.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/PrefixKeyDeltaEncoder.java:45 rename offset to prevKeyOffset for clarity.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java:115 has -&amp;gt; have&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/deltaencoder/DeltaEncoderAlgorithms.java:124 DeltaEncoder -&amp;gt; DeltaEncoders&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java:93 Another related question/clarification needed on the spec of this feature...&lt;/p&gt;

&lt;p&gt;  If delta-encoding is on in cache, then is blocksize setting for the CF based on the encoded size or the un-encoded size.&lt;/p&gt;

&lt;p&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;Personally, think the encoded size should be used for the blocksize. But can you clarify either way.&amp;#93;&lt;/span&gt;&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java:196 getDeltaEncodingId() and getDeltaEncodedId() seem to be identical, but for their names.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java:78 operate -&amp;gt; operates&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockDeltaEncoder.java:112 I wasn&apos;t clear what &quot;useEncodedScanner&quot; is meant for. Currently, it seems to be used HFileReaderV1. Could you clarify the purpose of this...&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java:98 remove &quot; in cache&quot;&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:1901 sounds like b.length should be l on this line also.&lt;/p&gt;

&lt;p&gt;  Is this is a pre-existing bug?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java:84 Why 2 * ClassSize.REFERENCE? This change adds one reference to the encoding enum, correct?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java:752 We can use a MutableInteger here to avoid creating lots of Integer objects. But, since this is just for a test, not a big deal.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:30 KeyValue -&amp;gt; KeyValues&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:32 iterated always -&amp;gt; always iterated&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:79 Must the implementation make a deep copy? Or is it legal for the implementation to point to have the returned ByteBuffer point to a byte array in the input &quot;block&quot;?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:129 confusing comment. &quot;same key&quot; as what?&lt;/p&gt;

&lt;p&gt;  Should comment be something like:&lt;/p&gt;

&lt;p&gt;  &quot;Seek to specified key in the block.&quot;&lt;/p&gt;

&lt;p&gt;  ?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:137 blockSeekTo --&amp;gt; seekToKeyInBlock, perhaps?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:87 this logic appears to assume that the target (&quot;this&quot;) we are copying into was positioned at the previous key. No?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13188767" author="phabricator@reviews.facebook.net" created="Wed, 18 Jan 2012 22:36:39 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:130 Should read &apos;array where the key is&apos;&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13188968" author="phabricator@reviews.facebook.net" created="Thu, 19 Jan 2012 07:18:39 +0000"  >&lt;p&gt;gqchen has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  Looks really awesome! A few minor comments after going through PrefixKeyDeltaEncoder. Will continue on the next two algorithms.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java:45 maybe &quot;prevKeyOffset&quot; instead of &quot;offset&quot; is a better name here? It also matches &quot;prevKeyLength&quot;.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:87 Agree with Kannan. probably document it better, or maybe call it &quot;copyFromNextState&quot;?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:129-141 getKey does a deep copy and getValue does a shallow copy. Just wondering what is the motivation.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:146 use KeyValue.ROW_OFFSET instead of 2 * Bytes.SIZEOF_INT?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:206 should we check if previous is valid here as well?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13189623" author="phabricator@reviews.facebook.net" created="Fri, 20 Jan 2012 04:55:39 +0000"  >&lt;p&gt;Kannan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  a few more minor comments. I still have a few more files left to review.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java:45 rename: offset -&amp;gt; prevOffset&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:158 we can avoid this duplication, and instead call the other load of copyToStream, and pass offset = 0.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:192 length name is confusing for 2nd argument. This function can put any long. Rename length -&amp;gt; value; and tmpLength -&amp;gt; tmpValue.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:471 There are 4 overloads of the readCompressedInt().&lt;/p&gt;

&lt;p&gt;  The first 2 work on a 7-bit encoding scheme.&lt;/p&gt;

&lt;p&gt;  The next 2 work on a different format of encoding. These overloads are also unused other than tests. Let&apos;s remove these two overloads.&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13190210" author="phabricator@reviews.facebook.net" created="Sat, 21 Jan 2012 00:10:39 +0000"  >&lt;p&gt;gqchen has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  a few more comments.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:36 7-bit encoding?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java:65 It seems we assume all member variables in &quot;this&quot; should be reset in this function.  Otherwise we will be carrying the  values from two states earlier (prev of prev). Can we document this assumption?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:106 should we do &quot;min(keyLength, previousState.keyLength) - KeyValue.TIMESTAMP_TYPE_SIZE&quot;? If previous key is shorter, we can potentially match into the value area of the previous key. Since during seeking we only materialize key only, can it be a problem?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:141 some comments would be helpful here. This is probably the second time I read this part of the code and everytime I have to pause and think the reason behind this &quot;if&quot; condition.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:156-159 we should move these lines to right above line 164. Otherwise it&apos;s too confusing.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:305-313 It seems state.qualifierLength is not set here. It&apos;s probably not being used. But maybe we can move these code to a function in CompressionState?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13190583" author="phabricator@reviews.facebook.net" created="Sun, 22 Jan 2012 02:41:40 +0000"  >&lt;p&gt;Kannan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  Mikhail &amp;#8211; my final set of comments for this pass of the review. Pretty minor comments only.&lt;/p&gt;

&lt;p&gt;  Haven&apos;t reviewed the test files, and any encoders other than PrefixKey. But I think this is pretty much good to go.&lt;/p&gt;

&lt;p&gt;  When you upload the updated diff, I&apos;ll go ahead and accept.&lt;/p&gt;


&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java:405 we are using readerV1 in some places, and reader in some other places. Sounds like we should get rid of one of them.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java:96 we have fsBlockReader as both as an instance variable and local variable? Can we get rid of the local variable?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java:91 unused.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java:760 &quot;save the unencoded&quot; here should be &quot;save the encoded&quot;, correct?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13191807" author="phabricator@reviews.facebook.net" created="Tue, 24 Jan 2012 01:43:40 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  See responses to some of the comments inline. I will upload a new version of the diff a bit later.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java:98 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java:1901 That&apos;s correct, good catch! Yes, this is a pre-existing bug. Fixed this and added a new test, KeyValue.testCreateKeyValueFromKey, to verify this.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:87 Renamed the method to copyFromNext and the parameter to nextState. Added usage details to the javadoc.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:129-141 The reason for this is that the key is reconstructed by pieces, and the value is stored as-is in the original encoded buffer, so getValue() just provides a reference to a sub-array of the original byte array. I renamed these two seeker interface methods to getKeyDeepCopy() and getValueShallowCopy() for clarity.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:146 Replaced here and at line 1343 in createKeyOnly:&lt;/p&gt;

&lt;p&gt;    public KeyValue createKeyOnly(boolean lenAsVal) {&lt;br/&gt;
      // KV format:  &amp;lt;keylen:4&amp;gt;&amp;lt;valuelen:4&amp;gt;&amp;lt;key:keylen&amp;gt;&amp;lt;value:valuelen&amp;gt;&lt;br/&gt;
      // Rebuild as: &amp;lt;keylen:4&amp;gt;&amp;lt;0:4&amp;gt;&amp;lt;key:keylen&amp;gt;&lt;br/&gt;
      int dataLen = lenAsVal? Bytes.SIZEOF_INT : 0;&lt;br/&gt;
      byte [] newBuffer = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;getKeyLength() + ROW_OFFSET + dataLen&amp;#93;&lt;/span&gt;;&lt;br/&gt;
      System.arraycopy(this.bytes, this.offset, newBuffer, 0,&lt;br/&gt;
          Math.min(newBuffer.length,this.length));&lt;/p&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:206 Good point. If previous is invalid here, then the contract of this function is actually violated, as it cannot go to the previous block. The caller should check if the requested key is the first key of the block and load the previous block if necessary. I added an exception in case previous.isValid() is not true.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java:65 Actually, all member fields except prevOffset are overridden. prevOffset is manipulated directly by encoders/decoders. Added this to the method&apos;s javadoc.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:30 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:32 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:79 All current implementations just wrap a portion of the actual block&apos;s buffer, which makes sense, because we don&apos;t encode the first key. Added this to the method&apos;s javadoc.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13192767" author="phabricator@reviews.facebook.net" created="Wed, 25 Jan 2012 01:32:39 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  Replying to the rest of comments. I will upload another patch shortly.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:130 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:129 Updated this javadoc.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:137 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:36 Done. &quot;128-bit&quot; does not seem to appear anywhere else in the patch.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:106 Good catch! Implemented your suggestion.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:141 Spent quite a bit of time staring at this code to fully understand it, then added some more comments &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;  The difficult part for me was the &quot;else&quot; clause below. It turns out that as the column family length and name follow the row, they would be automatically included in commonPrefix if the whole row matches, so we don&apos;t need to special-case them.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:156-159 The condition on line 163 is FLAG_SAME_VALUE, not FLAG_SAME_TYPE, so moving these lines there would actually change logic. Why exactly are you saying we should move these two lines there?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:305-313 Yes, it appears that we are not using the qualifierLength field during decompression. Moved the state changes from this block to the FastDiffCompressionState.decompressFirstKV method.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java:45 Renamed to prevKeyOffset.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java:84 This actually fixes a pre-existing bug. The previous heapSize() implementation in BlockCacheKey did not take into account the object overhead and the hfileName String reference, and there was no unit test for BlockCacheKey, which I&apos;ve added to TestHeapSize.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java:91 Removed.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java:760 Actually this piece of logic was enabling caching of unencoded blocks. However, as we decided that we don&apos;t care about doing encoding on disk only but not in cache, I am getting rid of this additional logic.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java:405 Actually readerV1 is useful, because it saves us a cast from AbstractHFileReader to HFileReaderV1. But I have now renamed this field to reader to make it look indistinguishable from what happens in the base class.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java:96 The assignment below is an upcast. We use some FSReaderV2-specific methods in the constructor. Renamed the local variable to fsBlockReaderV2 and added a comment for clarity.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java:752 Good point. Leaving as is for now&#8212;the method name clearly says it is for test only. We can optimize this later if necessary.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:158 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:192 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:471 Done.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13192816" author="phabricator@reviews.facebook.net" created="Wed, 25 Jan 2012 02:46:39 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Submitting what will hopefully become the final version of the patch, addressing Kannan&apos;s, Jerry&apos;s, and Ted&apos;s comments. I will still re-run all unit tests both on map-reduce and on the Jenkins server and do some final cluster testing.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestLoadAndSwitchEncodeOnDisk.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/HFileReadWriteTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13192838" author="hadoopqa" created="Wed, 25 Jan 2012 03:28:35 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12511791/D447.25.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12511791/D447.25.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 139 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/850//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/850//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13192901" author="phabricator@reviews.facebook.net" created="Wed, 25 Jan 2012 06:51:40 +0000"  >&lt;p&gt;Kannan has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  +1. Looks great.&lt;/p&gt;

&lt;p&gt;  Jerry-- can you take a look at the updated diff for the parts you reviewed?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13192936" author="mikhail" created="Wed, 25 Jan 2012 08:48:11 +0000"  >&lt;p&gt;Submitting for Jenkins testing. This corresponds to the latest patch on Phabricator: &lt;a href=&quot;https://reviews.facebook.net/D447?vs=&amp;amp;id=4407&amp;amp;whitespace=ignore-all&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447?vs=&amp;amp;id=4407&amp;amp;whitespace=ignore-all&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13192943" author="mikhail" created="Wed, 25 Jan 2012 09:06:00 +0000"  >&lt;p&gt;All unit tests passed (either in parallel on map-reduce, or when I re-ran the failed ones locally).&lt;/p&gt;</comment>
                            <comment id="13192959" author="hadoopqa" created="Wed, 25 Jan 2012 09:46:10 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12511817/Delta-encoding-2012-01-25_00_45_29.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12511817/Delta-encoding-2012-01-25_00_45_29.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 189 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -140 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 161 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/851//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/851//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/851//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/851//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/851//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/851//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13193130" author="phabricator@reviews.facebook.net" created="Wed, 25 Jan 2012 17:14:41 +0000"  >&lt;p&gt;gqchen has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  Looks really good to me!&lt;/p&gt;

&lt;p&gt;  I haven&apos;t finished reviewing DiffKeyDeltaEncoding (another day or so) and might probably have a few minor comments about cosmetic things. But definitely no need to wait for that.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:198 I think the logic is the following:&lt;br/&gt;
  1. if the value not the same, copy the whole value.&lt;br/&gt;
  2. however, if type is also not the same, take advantage of the fact that &quot;type&quot; field is right ahead of &quot;value&quot;, and copy both type and value in one shot.&lt;/p&gt;

&lt;p&gt;  So the code would be like:&lt;/p&gt;

&lt;p&gt;  if ((flag &amp;amp; FLAG_SAME_VALUE) == 0) {&lt;br/&gt;
      if ((flag &amp;amp; FALG_SAME_TYPE) == 0) &lt;/p&gt;
{
         valueOffset -= ...
         valueLength += ...
      }
&lt;p&gt;      ByteBufferUtils.copy...&lt;br/&gt;
  }&lt;/p&gt;

&lt;p&gt;  The headache is if we decide to add one more field between &quot;type&quot; and &quot;value&quot; in the future, this code will be silently broken.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13193148" author="mikhail" created="Wed, 25 Jan 2012 17:33:15 +0000"  >&lt;p&gt;Re-running unit tests that failed on Jenkins:&lt;/p&gt;

&lt;p&gt;Running org.apache.hadoop.hbase.client.TestFromClientSide&lt;br/&gt;
Tests run: 52, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 181.919 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
Tests run: 35, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 195.194 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 223.405 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 78.48 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.mapreduce.TestTableMapReduce&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 97.561 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 67.289 sec&lt;br/&gt;
Running org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;br/&gt;
Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 49.362 sec&lt;/p&gt;

&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Tests run: 122, Failures: 0, Errors: 0, Skipped: 3&lt;/p&gt;</comment>
                            <comment id="13193473" author="phabricator@reviews.facebook.net" created="Thu, 26 Jan 2012 00:29:40 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;br/&gt;
Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;  Addressing Jerry&apos;s comments and rebasing on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5230&quot; title=&quot;Ensure compactions do not cache-on-write data blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5230&quot;&gt;&lt;del&gt;HBASE-5230&lt;/del&gt;&lt;/a&gt; (ensuring that compactions do not cache data blocks on write). All unit tests pass.&lt;/p&gt;

&lt;p&gt;  If there are no objections, I will commit this after final cluster testing.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestLoadAndSwitchEncodeOnDisk.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/HFileReadWriteTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/p&gt;</comment>
                            <comment id="13193475" author="mikhail" created="Thu, 26 Jan 2012 00:32:44 +0000"  >&lt;p&gt;Attaching a patch rebased on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5230&quot; title=&quot;Ensure compactions do not cache-on-write data blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5230&quot;&gt;&lt;del&gt;HBASE-5230&lt;/del&gt;&lt;/a&gt; and addressing Jerry&apos;s new comment.&lt;/p&gt;</comment>
                            <comment id="13193514" author="phabricator@reviews.facebook.net" created="Thu, 26 Jan 2012 02:03:40 +0000"  >&lt;p&gt;Kannan has accepted the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;  excellent!!!!!!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13193534" author="hadoopqa" created="Thu, 26 Jan 2012 02:58:59 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12511917/Delta-encoding-2012-01-25_16_32_14.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12511917/Delta-encoding-2012-01-25_16_32_14.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 189 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -140 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 88 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/852//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/852//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/852//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/852//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/852//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/852//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13193535" author="phabricator@reviews.facebook.net" created="Thu, 26 Jan 2012 03:01:46 +0000"  >&lt;p&gt;mbautin has committed the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding implementation&quot;.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;COMMIT&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/rHBASE1236031&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASE1236031&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13193543" author="hudson" created="Thu, 26 Jan 2012 03:57:24 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2646 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2646/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2646/&lt;/a&gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding&lt;br/&gt;
implementation (Jacek Midgal, Mikhail Bautin)&lt;/p&gt;

&lt;p&gt;Summary:&lt;/p&gt;

&lt;p&gt;Adding a framework that allows to &quot;encode&quot; keys in an HFile data block. We&lt;br/&gt;
support two modes of encoding: (1) both on disk and in cache, and (2) in cache&lt;br/&gt;
only. This is distinct from compression that is already being done in HBase,&lt;br/&gt;
e.g. GZ or LZO. When data block encoding is enabled, we store blocks in cache&lt;br/&gt;
in an uncompressed but encoded form. This allows to fit more blocks in cache&lt;br/&gt;
and reduce the number of disk reads.&lt;/p&gt;

&lt;p&gt;The most common example of data block encoding is delta encoding, where we take&lt;br/&gt;
advantage of the fact that HFile keys are sorted and share a lot of common&lt;br/&gt;
prefixes, and only store the delta between each pair of consecutive keys.&lt;br/&gt;
Initial encoding algorithms implemented are DIFF, FAST_DIFF, and PREFIX.&lt;/p&gt;

&lt;p&gt;This is based on the delta encoding patch developed by Jacek Midgal during his&lt;br/&gt;
2011 summer internship at Facebook. The original patch is available here:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2308/diff/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/diff/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Test Plan: Unit tests. Distributed load test on a five-node cluster.&lt;/p&gt;

&lt;p&gt;Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;Reviewed By: Kannan&lt;/p&gt;

&lt;p&gt;CC: tedyu, todd, mbautin, stack, Kannan, mcorgan, gqchen&lt;/p&gt;

&lt;p&gt;Differential Revision: &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;mbautin : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/hbase/admin.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestLoadAndSwitchEncodeOnDisk.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/HFileReadWriteTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13193554" author="zhihyu@ebaysf.com" created="Thu, 26 Jan 2012 05:04:08 +0000"  >&lt;p&gt;I wonder if we need to increase -Xmx for the tests:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
https:&lt;span class=&quot;code-comment&quot;&gt;//builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/2647/testReport/org.apache.hadoop.hbase.io.hfile/TestHFileBlock/testPreviousOffset_1_/&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I see OutOfMemoryError.&lt;/p&gt;</comment>
                            <comment id="13193564" author="hudson" created="Thu, 26 Jan 2012 05:45:45 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #90 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/90/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/90/&lt;/a&gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; HFile data block encoding framework and delta encoding&lt;br/&gt;
implementation (Jacek Midgal, Mikhail Bautin)&lt;/p&gt;

&lt;p&gt;Summary:&lt;/p&gt;

&lt;p&gt;Adding a framework that allows to &quot;encode&quot; keys in an HFile data block. We&lt;br/&gt;
support two modes of encoding: (1) both on disk and in cache, and (2) in cache&lt;br/&gt;
only. This is distinct from compression that is already being done in HBase,&lt;br/&gt;
e.g. GZ or LZO. When data block encoding is enabled, we store blocks in cache&lt;br/&gt;
in an uncompressed but encoded form. This allows to fit more blocks in cache&lt;br/&gt;
and reduce the number of disk reads.&lt;/p&gt;

&lt;p&gt;The most common example of data block encoding is delta encoding, where we take&lt;br/&gt;
advantage of the fact that HFile keys are sorted and share a lot of common&lt;br/&gt;
prefixes, and only store the delta between each pair of consecutive keys.&lt;br/&gt;
Initial encoding algorithms implemented are DIFF, FAST_DIFF, and PREFIX.&lt;/p&gt;

&lt;p&gt;This is based on the delta encoding patch developed by Jacek Midgal during his&lt;br/&gt;
2011 summer internship at Facebook. The original patch is available here:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2308/diff/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2308/diff/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Test Plan: Unit tests. Distributed load test on a five-node cluster.&lt;/p&gt;

&lt;p&gt;Reviewers: JIRA, tedyu, stack, nspiegelberg, Kannan&lt;/p&gt;

&lt;p&gt;Reviewed By: Kannan&lt;/p&gt;

&lt;p&gt;CC: tedyu, todd, mbautin, stack, Kannan, mcorgan, gqchen&lt;/p&gt;

&lt;p&gt;Differential Revision: &lt;a href=&quot;https://reviews.facebook.net/D447&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;mbautin : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/hbase/admin.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/BROKE_TODO_FIX_TestAcidGuarantees.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestLoadAndSwitchEncodeOnDisk.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapreduce/TestImportExport.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/HFileReadWriteTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/LoadTestTool.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/MultiThreadedWriter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/RestartMetaTest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestLoadTestKVGenerator.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadEncoded.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadParallel.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMiniClusterLoadSequential.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13194408" author="zhihyu@ebaysf.com" created="Fri, 27 Jan 2012 03:42:43 +0000"  >&lt;p&gt;TestHFileBlock was reported as failing by Hadoop QA (@26/Jan/12 02:58) before the checkin.&lt;/p&gt;

&lt;p&gt;Now the test failure appears in every TRUNK build and every Hadoop QA report.&lt;/p&gt;</comment>
                            <comment id="13196219" author="zhihyu@ebaysf.com" created="Mon, 30 Jan 2012 16:51:32 +0000"  >&lt;p&gt;HFileBlock.readBlockDataInternal() has many if else blocks, making it less maintainable.&lt;/p&gt;</comment>
                            <comment id="13196244" author="dhruba" created="Mon, 30 Jan 2012 17:51:22 +0000"  >&lt;p&gt;TestHFileBlock works for me all the time, let me look at the logs produced by HadoopQA.&lt;/p&gt;</comment>
                            <comment id="13204205" author="phabricator@reviews.facebook.net" created="Thu, 9 Feb 2012 02:31:58 +0000"  >&lt;p&gt;mbautin requested code review of &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;89-fb&amp;#93;&lt;/span&gt; Porting HFile data block encoding to 89-fb&quot;.&lt;br/&gt;
Reviewers: Kannan, Karthik, nspiegelberg, gqchen, JIRA&lt;/p&gt;

&lt;p&gt;  This is the 89-fb version of the data block encoding patch D447 (based on Jacek Midgal&apos;s work during his 2011 summer internship at Facebook). The trunk patch has already gone through an extensive review cycle. The purpose of this review is to sanity-check the port and hopefully catch some bugs. Please see the JIRA and the original patch for design/implementation details.&lt;/p&gt;

&lt;p&gt;TEST PLAN&lt;br/&gt;
  Unit tests, dev cluster, deploy and run load test&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1659&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionServerMetrics.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/HFileReadWriteTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;

&lt;p&gt;MANAGE HERALD DIFFERENTIAL RULES&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/view/differential/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/view/differential/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY DID I GET THIS EMAIL?&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/transcript/3549/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/transcript/3549/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: use the X-Herald-Rules header to filter Herald messages in your client.&lt;/p&gt;</comment>
                            <comment id="13204255" author="hadoopqa" created="Thu, 9 Feb 2012 04:54:57 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12513897/D1659.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12513897/D1659.1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 106 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/927//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/927//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13205168" author="phabricator@reviews.facebook.net" created="Fri, 10 Feb 2012 02:25:59 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;89-fb&amp;#93;&lt;/span&gt; Porting HFile data block encoding to 89-fb&quot;.&lt;br/&gt;
Reviewers: Kannan, Karthik, nspiegelberg, gqchen, JIRA&lt;/p&gt;

&lt;p&gt;  Fixing DataBlockEncodingTool. Block-level compression parameter was not being handled correctly.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1659&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionServerMetrics.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/HFileReadWriteTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13205176" author="hadoopqa" created="Fri, 10 Feb 2012 02:32:14 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12514065/D1659.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12514065/D1659.2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 106 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/935//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/935//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13206031" author="zhihyu@ebaysf.com" created="Sat, 11 Feb 2012 05:50:00 +0000"  >&lt;p&gt;With &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5387&quot; title=&quot;Reuse compression streams in HFileBlock.Writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5387&quot;&gt;&lt;del&gt;HBASE-5387&lt;/del&gt;&lt;/a&gt;, this issue can be resolved.&lt;/p&gt;</comment>
                            <comment id="13208709" author="phabricator@reviews.facebook.net" created="Wed, 15 Feb 2012 19:32:58 +0000"  >&lt;p&gt;Kannan has accepted the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;89-fb&amp;#93;&lt;/span&gt; Porting HFile data block encoding to 89-fb&quot;.&lt;/p&gt;

&lt;p&gt;  There is one minor merge conflict inside of comments. Otherwise looks great!&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java:557 some merge conflicts left over here...&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1659&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13209942" author="phabricator@reviews.facebook.net" created="Fri, 17 Feb 2012 00:51:57 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;89-fb&amp;#93;&lt;/span&gt; Porting HFile data block encoding to 89-fb&quot;.&lt;br/&gt;
Reviewers: Kannan, Karthik, nspiegelberg, gqchen, JIRA&lt;/p&gt;

&lt;p&gt;  Addressing Kannan&apos;s comment (removing a merge conflict from a javadoc in HFileBlock).&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1659&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileReader.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCacheKey.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV1.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/HFileWriterV2.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MemStore.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionServerMetrics.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaConfigured.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;br/&gt;
  src/main/ruby/hbase/admin.rb&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestCase.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestAcidGuarantees.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/TestHeapSize.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/RedundantKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestBufferedDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestChangingEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestEncodedSeekers.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/encoding/TestUpgradeFromHFileV1ToEncoding.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheOnWrite.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/mapreduce/TestHFileOutputFormat.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/CreateRandomStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/EncodedSeekPerformanceTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/HFileReadWriteTest.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactSelection.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestCompoundBloomFilter.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestFSErrorsExposed.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestMultiColumnScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestScanWithBloomError.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSeekOptimizations.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/LoadTestKVGenerator.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/p&gt;</comment>
                            <comment id="13209981" author="phabricator@reviews.facebook.net" created="Fri, 17 Feb 2012 02:01:59 +0000"  >&lt;p&gt;mbautin has committed the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;89-fb&amp;#93;&lt;/span&gt; Porting HFile data block encoding to 89-fb&quot;.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D1659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1659&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;COMMIT&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/rHBASEEIGHTNINEFBBRANCH1245291&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASEEIGHTNINEFBBRANCH1245291&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13215404" author="hudson" created="Fri, 24 Feb 2012 05:55:06 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #121 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/121/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/121/&lt;/a&gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5470&quot; title=&quot;Make DataBlockEncodingTool work correctly with no native compression codecs loaded&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5470&quot;&gt;&lt;del&gt;HBASE-5470&lt;/del&gt;&lt;/a&gt; Make DataBlockEncodingTool work correctly with no native&lt;br/&gt;
compression codecs loaded&lt;/p&gt;

&lt;p&gt;Summary:&lt;br/&gt;
DataBlockEncodingTool was fixed as part of porting data block encoding&lt;br/&gt;
(&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt;) to 89-fb&lt;br/&gt;
(&lt;a href=&quot;https://reviews.facebook.net/rHBASEEIGHTNINEFBBRANCH1245291&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASEEIGHTNINEFBBRANCH1245291&lt;/a&gt;,&lt;br/&gt;
&lt;a href=&quot;https://reviews.facebook.net/D1659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1659&lt;/a&gt;). The bug being fixed here appeared when&lt;br/&gt;
using GZ as baseline compression codec but not loading native Hadoop libraries,&lt;br/&gt;
in which case the compressor instance would be null.&lt;/p&gt;

&lt;p&gt;Test Plan:&lt;br/&gt;
Run DataBlockEncoding tool with GZ (no native codecs) and LZO (with native&lt;br/&gt;
codecs) as baseline (Hadoop-level) compression codecs&lt;/p&gt;

&lt;p&gt;Reviewers: JIRA, Kannan, mcorgan, lhofhansl, todd, stack, tedyu&lt;/p&gt;

&lt;p&gt;Reviewed By: tedyu&lt;/p&gt;

&lt;p&gt;Differential Revision: &lt;a href=&quot;https://reviews.facebook.net/D1917&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1917&lt;/a&gt; (Revision 1293057)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
mbautin : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13216331" author="hudson" created="Sat, 25 Feb 2012 06:08:53 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2669 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2669/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2669/&lt;/a&gt;)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5470&quot; title=&quot;Make DataBlockEncodingTool work correctly with no native compression codecs loaded&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5470&quot;&gt;&lt;del&gt;HBASE-5470&lt;/del&gt;&lt;/a&gt; Make DataBlockEncodingTool work correctly with no native&lt;br/&gt;
compression codecs loaded&lt;/p&gt;

&lt;p&gt;Summary:&lt;br/&gt;
DataBlockEncodingTool was fixed as part of porting data block encoding&lt;br/&gt;
(&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4218&quot; title=&quot;Data Block Encoding of KeyValues  (aka delta encoding / prefix compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4218&quot;&gt;&lt;del&gt;HBASE-4218&lt;/del&gt;&lt;/a&gt;) to 89-fb&lt;br/&gt;
(&lt;a href=&quot;https://reviews.facebook.net/rHBASEEIGHTNINEFBBRANCH1245291&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/rHBASEEIGHTNINEFBBRANCH1245291&lt;/a&gt;,&lt;br/&gt;
&lt;a href=&quot;https://reviews.facebook.net/D1659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1659&lt;/a&gt;). The bug being fixed here appeared when&lt;br/&gt;
using GZ as baseline compression codec but not loading native Hadoop libraries,&lt;br/&gt;
in which case the compressor instance would be null.&lt;/p&gt;

&lt;p&gt;Test Plan:&lt;br/&gt;
Run DataBlockEncoding tool with GZ (no native codecs) and LZO (with native&lt;br/&gt;
codecs) as baseline (Hadoop-level) compression codecs&lt;/p&gt;

&lt;p&gt;Reviewers: JIRA, Kannan, mcorgan, lhofhansl, todd, stack, tedyu&lt;/p&gt;

&lt;p&gt;Reviewed By: tedyu&lt;/p&gt;

&lt;p&gt;Differential Revision: &lt;a href=&quot;https://reviews.facebook.net/D1917&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D1917&lt;/a&gt; (Revision 1293057)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
mbautin : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/DataBlockEncodingTool.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13239912" author="zhihyu@ebaysf.com" created="Tue, 27 Mar 2012 20:24:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;To enable, on the column descriptor set DATA_BLOCK_ENCODING to NONE&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Would selection of NONE enable encoding ?&lt;/p&gt;</comment>
                            <comment id="13239920" author="mikhail" created="Tue, 27 Mar 2012 20:36:25 +0000"  >&lt;p&gt;No, DATA_BLOCK_ENCODING=NONE disables encoding, regardless of the value of ENCODE_ON_DISK.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12859531">HBASE-14323</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12507122" name="0001-Delta-encoding-fixed-encoded-scanners.patch" size="387777" author="mikhail" created="Tue, 13 Dec 2011 02:59:45 +0000"/>
                            <attachment id="12508340" name="0001-Delta-encoding.patch" size="418804" author="mikhail" created="Thu, 22 Dec 2011 02:53:12 +0000"/>
                            <attachment id="12510586" name="4218-2012-01-14.txt" size="490263" author="zhihyu@ebaysf.com" created="Sat, 14 Jan 2012 16:04:06 +0000"/>
                            <attachment id="12509029" name="4218-v16.txt" size="416287" author="zhihyu@ebaysf.com" created="Mon, 2 Jan 2012 04:58:51 +0000"/>
                            <attachment id="12509377" name="4218.txt" size="411502" author="zhihyu@ebaysf.com" created="Wed, 4 Jan 2012 05:03:16 +0000"/>
                            <attachment id="12513897" name="ASF.LICENSE.NOT.GRANTED--D1659.1.patch" size="480058" author="phabricator@reviews.facebook.net" created="Thu, 9 Feb 2012 02:31:59 +0000"/>
                            <attachment id="12514065" name="ASF.LICENSE.NOT.GRANTED--D1659.2.patch" size="482458" author="phabricator@reviews.facebook.net" created="Fri, 10 Feb 2012 02:26:00 +0000"/>
                            <attachment id="12514919" name="ASF.LICENSE.NOT.GRANTED--D1659.3.patch" size="482340" author="phabricator@reviews.facebook.net" created="Fri, 17 Feb 2012 00:51:58 +0000"/>
                            <attachment id="12503709" name="ASF.LICENSE.NOT.GRANTED--D447.1.patch" size="379577" author="phabricator@reviews.facebook.net" created="Tue, 15 Nov 2011 02:00:52 +0000"/>
                            <attachment id="12508190" name="ASF.LICENSE.NOT.GRANTED--D447.10.patch" size="381218" author="phabricator@reviews.facebook.net" created="Wed, 21 Dec 2011 02:47:30 +0000"/>
                            <attachment id="12508339" name="ASF.LICENSE.NOT.GRANTED--D447.11.patch" size="397991" author="phabricator@reviews.facebook.net" created="Thu, 22 Dec 2011 02:51:31 +0000"/>
                            <attachment id="12508415" name="ASF.LICENSE.NOT.GRANTED--D447.12.patch" size="397183" author="phabricator@reviews.facebook.net" created="Thu, 22 Dec 2011 18:51:31 +0000"/>
                            <attachment id="12508424" name="ASF.LICENSE.NOT.GRANTED--D447.13.patch" size="397883" author="phabricator@reviews.facebook.net" created="Thu, 22 Dec 2011 19:49:30 +0000"/>
                            <attachment id="12508801" name="ASF.LICENSE.NOT.GRANTED--D447.14.patch" size="396741" author="phabricator@reviews.facebook.net" created="Wed, 28 Dec 2011 22:59:31 +0000"/>
                            <attachment id="12508818" name="ASF.LICENSE.NOT.GRANTED--D447.15.patch" size="394674" author="phabricator@reviews.facebook.net" created="Thu, 29 Dec 2011 03:42:31 +0000"/>
                            <attachment id="12509028" name="ASF.LICENSE.NOT.GRANTED--D447.16.patch" size="416434" author="phabricator@reviews.facebook.net" created="Mon, 2 Jan 2012 04:29:31 +0000"/>
                            <attachment id="12509333" name="ASF.LICENSE.NOT.GRANTED--D447.17.patch" size="411649" author="phabricator@reviews.facebook.net" created="Tue, 3 Jan 2012 19:36:39 +0000"/>
                            <attachment id="12509626" name="ASF.LICENSE.NOT.GRANTED--D447.18.patch" size="424284" author="phabricator@reviews.facebook.net" created="Thu, 5 Jan 2012 23:13:39 +0000"/>
                            <attachment id="12509638" name="ASF.LICENSE.NOT.GRANTED--D447.19.patch" size="424383" author="phabricator@reviews.facebook.net" created="Fri, 6 Jan 2012 00:33:40 +0000"/>
                            <attachment id="12503814" name="ASF.LICENSE.NOT.GRANTED--D447.2.patch" size="365439" author="phabricator@reviews.facebook.net" created="Tue, 15 Nov 2011 23:27:52 +0000"/>
                            <attachment id="12509651" name="ASF.LICENSE.NOT.GRANTED--D447.20.patch" size="429171" author="phabricator@reviews.facebook.net" created="Fri, 6 Jan 2012 02:49:39 +0000"/>
                            <attachment id="12509806" name="ASF.LICENSE.NOT.GRANTED--D447.21.patch" size="429147" author="phabricator@reviews.facebook.net" created="Sat, 7 Jan 2012 22:20:40 +0000"/>
                            <attachment id="12510522" name="ASF.LICENSE.NOT.GRANTED--D447.22.patch" size="448649" author="phabricator@reviews.facebook.net" created="Fri, 13 Jan 2012 20:18:40 +0000"/>
                            <attachment id="12510557" name="ASF.LICENSE.NOT.GRANTED--D447.23.patch" size="490410" author="phabricator@reviews.facebook.net" created="Sat, 14 Jan 2012 02:18:39 +0000"/>
                            <attachment id="12510870" name="ASF.LICENSE.NOT.GRANTED--D447.24.patch" size="484060" author="phabricator@reviews.facebook.net" created="Tue, 17 Jan 2012 18:52:40 +0000"/>
                            <attachment id="12511791" name="ASF.LICENSE.NOT.GRANTED--D447.25.patch" size="498045" author="phabricator@reviews.facebook.net" created="Wed, 25 Jan 2012 02:46:40 +0000"/>
                            <attachment id="12511914" name="ASF.LICENSE.NOT.GRANTED--D447.26.patch" size="498411" author="phabricator@reviews.facebook.net" created="Thu, 26 Jan 2012 00:29:41 +0000"/>
                            <attachment id="12503817" name="ASF.LICENSE.NOT.GRANTED--D447.3.patch" size="366628" author="phabricator@reviews.facebook.net" created="Tue, 15 Nov 2011 23:47:52 +0000"/>
                            <attachment id="12504796" name="ASF.LICENSE.NOT.GRANTED--D447.4.patch" size="334941" author="phabricator@reviews.facebook.net" created="Tue, 22 Nov 2011 20:38:40 +0000"/>
                            <attachment id="12505431" name="ASF.LICENSE.NOT.GRANTED--D447.5.patch" size="365951" author="phabricator@reviews.facebook.net" created="Tue, 29 Nov 2011 01:41:40 +0000"/>
                            <attachment id="12507046" name="ASF.LICENSE.NOT.GRANTED--D447.6.patch" size="368108" author="phabricator@reviews.facebook.net" created="Mon, 12 Dec 2011 19:59:31 +0000"/>
                            <attachment id="12507121" name="ASF.LICENSE.NOT.GRANTED--D447.7.patch" size="368909" author="phabricator@reviews.facebook.net" created="Tue, 13 Dec 2011 02:59:30 +0000"/>
                            <attachment id="12507282" name="ASF.LICENSE.NOT.GRANTED--D447.8.patch" size="378891" author="phabricator@reviews.facebook.net" created="Wed, 14 Dec 2011 01:50:31 +0000"/>
                            <attachment id="12508181" name="ASF.LICENSE.NOT.GRANTED--D447.9.patch" size="381210" author="phabricator@reviews.facebook.net" created="Wed, 21 Dec 2011 01:47:30 +0000"/>
                            <attachment id="12508576" name="Data-block-encoding-2011-12-23.patch" size="418692" author="zhihyu@ebaysf.com" created="Fri, 23 Dec 2011 22:47:45 +0000"/>
                            <attachment id="12510876" name="Delta-encoding-2012-01-17_11_09_09.patch" size="511174" author="mikhail" created="Tue, 17 Jan 2012 19:09:44 +0000"/>
                            <attachment id="12511817" name="Delta-encoding-2012-01-25_00_45_29.patch" size="525665" author="mikhail" created="Wed, 25 Jan 2012 08:48:10 +0000"/>
                            <attachment id="12511917" name="Delta-encoding-2012-01-25_16_32_14.patch" size="525962" author="mikhail" created="Thu, 26 Jan 2012 00:32:43 +0000"/>
                            <attachment id="12508425" name="Delta-encoding.patch-2011-12-22_11_52_07.patch" size="418692" author="mikhail" created="Thu, 22 Dec 2011 19:52:40 +0000"/>
                            <attachment id="12509627" name="Delta-encoding.patch-2012-01-05_15_16_43.patch" size="449651" author="mikhail" created="Thu, 5 Jan 2012 23:16:53 +0000"/>
                            <attachment id="12509637" name="Delta-encoding.patch-2012-01-05_16_31_44.patch" size="449750" author="mikhail" created="Fri, 6 Jan 2012 00:32:14 +0000"/>
                            <attachment id="12509647" name="Delta-encoding.patch-2012-01-05_16_31_44_copy.patch" size="449750" author="mikhail" created="Fri, 6 Jan 2012 01:58:29 +0000"/>
                            <attachment id="12509652" name="Delta-encoding.patch-2012-01-05_18_50_47.patch" size="454779" author="mikhail" created="Fri, 6 Jan 2012 02:52:22 +0000"/>
                            <attachment id="12509805" name="Delta-encoding.patch-2012-01-07_14_12_48.patch" size="454779" author="mikhail" created="Sat, 7 Jan 2012 22:13:28 +0000"/>
                            <attachment id="12510523" name="Delta-encoding.patch-2012-01-13_12_20_07.patch" size="475120" author="mikhail" created="Fri, 13 Jan 2012 20:20:49 +0000"/>
                            <attachment id="12505438" name="Delta_encoding_with_memstore_TS.patch" size="384629" author="mikhail" created="Tue, 29 Nov 2011 02:07:54 +0000"/>
                            <attachment id="12498266" name="open-source.diff" size="347789" author="jmigdal" created="Sat, 8 Oct 2011 00:55:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>47.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 17 Aug 2011 19:49:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33428</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 38 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0164n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4762</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Adds a block compression that stores the diff from the previous key only.  Good for big keys and small value datasets.  Makes writing and scanning slower but because the blocks compressed with this feature stay compressed when in memory up in the block cache, more data is cached.  Off by default (DATA_BLOCK_ENCODING=NONE on column descriptor).  To enable, set DATA_BLOCK_ENCODING to PREFIX, DIFF or FAST_DIFF on the column descriptor.  Set ENCODE_ON_DISK to true on column descriptor to have the encoding in place out in the hfile (on by default).</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>