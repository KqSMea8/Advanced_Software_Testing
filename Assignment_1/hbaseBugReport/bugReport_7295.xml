<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:44:24 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7295/HBASE-7295.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7295] Contention in HBaseClient.getConnection</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7295</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HBaseClient.getConnection() synchronizes on the connections object. We found severe contention on a thrift gateway which was fanning out roughly 3000+ calls per second to hbase region servers. The thrift gateway had 2000+ threads for handling incoming connections. Threads were blocked on the syncrhonized block - we set ipc.pool.size to 200. Since we are using RoundRobin/ThreadLocal pool only - its not necessary to synchronize on connections - it might lead to cases where we might go slightly over the ipc.max.pool.size() but the additional connections would timeout after maxIdleTime - underlying PoolMap connections object is thread safe.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12622834">HBASE-7295</key>
            <summary>Contention in HBaseClient.getConnection</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="varunsharma">Varun Sharma</assignee>
                                    <reporter username="varunsharma">Varun Sharma</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 Dec 2012 00:03:47 +0000</created>
                <updated>Sat, 22 Feb 2014 01:22:18 +0000</updated>
                                            <version>0.94.3</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>16</watches>
                                                                <comments>
                            <comment id="13526040" author="yuzhihong@gmail.com" created="Fri, 7 Dec 2012 00:20:39 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// This is a bug in RoundRobinPool. However unused connections self&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;How hard is it fixing the bug above ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    Pool&amp;lt;V&amp;gt; pool = createPool();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We now always create a new Pool. Is this necessary ?&lt;/p&gt;</comment>
                            <comment id="13526052" author="varunsharma" created="Fri, 7 Dec 2012 00:51:54 +0000"  >&lt;p&gt;I dont know if we can use putIfAbsent() without doing a createPool since thats the value we would want to put. Also I thought that get() and put() combination would do worse than putIfAbsent() in ConcurrentHashMap and would also be less atomic.&lt;/p&gt;

&lt;p&gt;We can fix the bug by making the &quot;put&quot; synchronized so that it updates size and adds at the same time. The get() operation would still not be synchronized and we probably wouldn&apos;t want to synchronize that since we will hit that much more often. The put() will be hit only when we create connections initially or recreate connections.&lt;/p&gt;</comment>
                            <comment id="13526055" author="yuzhihong@gmail.com" created="Fri, 7 Dec 2012 01:00:27 +0000"  >&lt;p&gt;How about calling createPool() once and storing the return value in a singleton ?&lt;br/&gt;
When we call pools.putIfAbsent(key, singleton), we check the return value. If return is null, we create new Pool and store using put(key, newPool). Otherwise we use the pool returned.&lt;/p&gt;</comment>
                            <comment id="13526083" author="varunsharma" created="Fri, 7 Dec 2012 02:05:06 +0000"  >&lt;p&gt;Attached a v2 with updated comments and your feedback,&lt;/p&gt;</comment>
                            <comment id="13526085" author="yuzhihong@gmail.com" created="Fri, 7 Dec 2012 02:09:11 +0000"  >&lt;p&gt;Can you attach patch for trunk so that Hadoop QA can test it ?&lt;/p&gt;</comment>
                            <comment id="13526120" author="yuzhihong@gmail.com" created="Fri, 7 Dec 2012 03:39:12 +0000"  >&lt;p&gt;Patch for trunk.&lt;/p&gt;

&lt;p&gt;Made singletonPool volatile.&lt;/p&gt;</comment>
                            <comment id="13526137" author="hadoopqa" created="Fri, 7 Dec 2012 04:35:46 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12559803/7295-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12559803/7295-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 101 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 23 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestMiniClusterLoadParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestHBaseFsck&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3454//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13526145" author="yuzhihong@gmail.com" created="Fri, 7 Dec 2012 05:03:58 +0000"  >&lt;p&gt;There were so many TestHBaseFsck failures on Jenkins. I was able to reproduce the following:&lt;/p&gt;

&lt;p&gt;testFixAssignmentsAndNoHdfsChecking(org.apache.hadoop.hbase.util.TestHBaseFsck): expected:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;NOT_DEPLOYED, HOLE_IN_REGION_CHAIN&amp;#93;&lt;/span&gt;&amp;gt; but was:&amp;lt;&lt;span class=&quot;error&quot;&gt;&amp;#91;MULTI_DEPLOYED, NOT_DEPLOYED, MULTI_DEPLOYED, NOT_DEPLOYED, HOLE_IN_REGION_CHAIN&amp;#93;&lt;/span&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;However, I saw the following in test output.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2012-12-06 20:51:32,370 WARN  [PRI IPC Server handler 0 on 57913] hdfs.DFSClient$DFSInputStream(2232): &lt;span class=&quot;code-object&quot;&gt;Short&lt;/span&gt; circuit access failed
org.apache.hadoop.security.AccessControlException: org.apache.hadoop.security.AccessControlException: Can&amp;amp;apos;t &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt; with getBlockLocalPathInfo() authorization. The user zhihyu.hfs.0 is not allowed to call getBlockLocalPathInfo
  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
  at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
  at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:95)
  at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:57)
  at org.apache.hadoop.hdfs.DFSClient.getLocalBlockReader(DFSClient.java:513)
  at org.apache.hadoop.hdfs.DFSClient.access$800(DFSClient.java:78)
  at org.apache.hadoop.hdfs.DFSClient$DFSInputStream.blockSeekTo(DFSClient.java:2228)
  at org.apache.hadoop.hdfs.DFSClient$DFSInputStream.read(DFSClient.java:2381)
  at java.io.DataInputStream.readFully(DataInputStream.java:178)
  at java.io.DataInputStream.readFully(DataInputStream.java:152)
  at org.apache.hadoop.hbase.util.FSTableDescriptors.getTableDescriptorModtime(FSTableDescriptors.java:429)
  at org.apache.hadoop.hbase.util.FSTableDescriptors.getTableDescriptorModtime(FSTableDescriptors.java:414)
  at org.apache.hadoop.hbase.util.FSTableDescriptors.get(FSTableDescriptors.java:169)
  at org.apache.hadoop.hbase.util.FSTableDescriptors.get(FSTableDescriptors.java:132)
  at org.apache.hadoop.hbase.regionserver.HRegionServer.openRegion(HRegionServer.java:3403)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
  at java.lang.reflect.Method.invoke(Method.java:597)
  at org.apache.hadoop.hbase.ipc.ProtobufRpcEngine$Server.call(ProtobufRpcEngine.java:356)
  at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1816)
Caused by: org.apache.hadoop.ipc.RemoteException: org.apache.hadoop.security.AccessControlException: Can&amp;amp;apos;t &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt; with getBlockLocalPathInfo() authorization. The user zhihyu.hfs.0 is not allowed to call getBlockLocalPathInfo
  at org.apache.hadoop.hdfs.server.datanode.DataNode.checkBlockLocalPathAccess(DataNode.java:1849)
  at org.apache.hadoop.hdfs.server.datanode.DataNode.getBlockLocalPathInfo(DataNode.java:1859)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
  at java.lang.reflect.Method.invoke(Method.java:597)
  at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:578)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Not sure if the above is related to test failure.&lt;/p&gt;</comment>
                            <comment id="13526209" author="lhofhansl" created="Fri, 7 Dec 2012 07:58:28 +0000"  >&lt;p&gt;0.94.3 has shipped, moving to 0.94.4.&lt;/p&gt;</comment>
                            <comment id="13526211" author="lhofhansl" created="Fri, 7 Dec 2012 08:02:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;Since we are using RoundRobin/ThreadLocal pool only - its not necessary to synchronize on connections&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What if somebody uses the Reusable Pool (which is - or at least was at some point - the default I believe)&lt;/p&gt;</comment>
                            <comment id="13526216" author="varunsharma" created="Fri, 7 Dec 2012 08:11:52 +0000"  >&lt;p&gt;That is disallowed - look at the getPoolType function - we dont allow ReusablePool as an option&lt;/p&gt;</comment>
                            <comment id="13526608" author="hadoopqa" created="Fri, 7 Dec 2012 18:27:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12559803/7295-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12559803/7295-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 101 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 23 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3459//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13526612" author="yuzhihong@gmail.com" created="Fri, 7 Dec 2012 18:31:54 +0000"  >&lt;p&gt;Looks like the test failures were transient.&lt;/p&gt;</comment>
                            <comment id="13526613" author="nkeywal" created="Fri, 7 Dec 2012 18:32:11 +0000"  >&lt;p&gt;Just a question: what&apos;s expected if we have a failure of the region server holding meta, and the x000 threads try to get simultaneously a connection when it comes back? Won&apos;t we have the pool fully taken by connections to meta?&lt;/p&gt;</comment>
                            <comment id="13526632" author="lhofhansl" created="Fri, 7 Dec 2012 18:46:15 +0000"  >&lt;p&gt;I do not think I want to change this behavior in 0.94... Unless there is a very good reason.&lt;/p&gt;</comment>
                            <comment id="13526832" author="yuzhihong@gmail.com" created="Fri, 7 Dec 2012 22:33:45 +0000"  >&lt;p&gt;@Varun:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;it might lead to cases where we might go slightly over the ipc.max.pool.size()&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you give us some quantitative measure for the above ?&lt;/p&gt;</comment>
                            <comment id="13527927" author="varunsharma" created="Mon, 10 Dec 2012 13:40:23 +0000"  >&lt;p&gt;I have attached another version (v3) - now we should not have cases where ipc.max.pool.size will be exceeded. Also, we can undo the PoolMap changes if needed.&lt;/p&gt;

&lt;p&gt;@nicholas - there is one pool per region server - so no, all the connections will not be taken over by META only the ones to the particular regionserver might be.&lt;/p&gt;</comment>
                            <comment id="13527983" author="hadoopqa" created="Mon, 10 Dec 2012 15:02:09 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12560176/7295-0.94-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12560176/7295-0.94-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3472//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3472//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13528020" author="varunsharma" created="Mon, 10 Dec 2012 15:52:37 +0000"  >&lt;p&gt;Attached patch for trunk - I was seeing unrelated BUILD failures though.&lt;/p&gt;</comment>
                            <comment id="13528060" author="yuzhihong@gmail.com" created="Mon, 10 Dec 2012 16:57:40 +0000"  >&lt;p&gt;What command did you use to build trunk ?&lt;br/&gt;
The following command works for me:&lt;/p&gt;

&lt;p&gt;mvn clean package -DskipTests&lt;/p&gt;</comment>
                            <comment id="13528065" author="yuzhihong@gmail.com" created="Mon, 10 Dec 2012 17:02:46 +0000"  >&lt;p&gt;Latest trunk patch looks good.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;// Recheck since another thread might have added a connections.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;a connections&apos; -&amp;gt; &apos;a connection&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; returnPool.put(value);
+    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;nit: &apos;else&apos; can be omitted.&lt;/p&gt;</comment>
                            <comment id="13528066" author="varunsharma" created="Mon, 10 Dec 2012 17:02:47 +0000"  >&lt;p&gt;Hmm, i did &quot;mvn package -DskipTests&quot; - maybe since i switched from 0.94 to trunk - that lead to issues ?&lt;/p&gt;</comment>
                            <comment id="13528073" author="varunsharma" created="Mon, 10 Dec 2012 17:09:55 +0000"  >&lt;p&gt;Attached trunk-v2 with the fixes.&lt;/p&gt;</comment>
                            <comment id="13528083" author="hadoopqa" created="Mon, 10 Dec 2012 17:21:25 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12560197/7295-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12560197/7295-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 101 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 23 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3473//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13528088" author="hadoopqa" created="Mon, 10 Dec 2012 17:35:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12560210/7295-trunk-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12560210/7295-trunk-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 101 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 23 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestSplitTransaction&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3474//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13528138" author="lhofhansl" created="Mon, 10 Dec 2012 18:28:30 +0000"  >&lt;p&gt;Looking at the 0.94, maybe it&apos;s fine to pull it in.&lt;/p&gt;

&lt;p&gt;Comments:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If you do double checked locking on connections, that it needs to be declared volatile in HBaseClient.&lt;/li&gt;
	&lt;li&gt;Why does the singletonPool need to be volatile?&lt;/li&gt;
	&lt;li&gt;Why is putIfAbsent needed now? The locking around this code has not changed. Is that an existing issue?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13528236" author="varunsharma" created="Mon, 10 Dec 2012 20:12:32 +0000"  >&lt;p&gt;Okay - I can completely do away with the PoolMap changes in both the patches. Its not really needed.&lt;/p&gt;

&lt;p&gt;I declared singletonPool volatile because of Ted&apos;s comment way up where he said he made singletonPool volatile. Why do we need to make connections volatile ? Doesn&apos;t that defeat the purpose of double checking. Also, PoolMap should be thread safe.&lt;/p&gt;</comment>
                            <comment id="13528331" author="lhofhansl" created="Mon, 10 Dec 2012 21:54:49 +0000"  >&lt;p&gt;Thanks Varun.&lt;/p&gt;

&lt;p&gt;Double checked locking only works correctly if the checked object/value is declared volatile. Otherwise the JVM is free (1) to reorder the statements and (2) not provide the latest value to the current thread. This describes it reasonably well &lt;a href=&quot;http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html&lt;/a&gt; (you probably saw this, just in case)&lt;/p&gt;

&lt;p&gt;I agree it&apos;ll make it slower again, need to performance test.&lt;/p&gt;</comment>
                            <comment id="13528338" author="varunsharma" created="Mon, 10 Dec 2012 22:01:46 +0000"  >&lt;p&gt;Hi Lars,&lt;/p&gt;

&lt;p&gt;Interesting, I did not know all this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I think correctness is more important. In fact when I completely did away with the synchronized block, I was entering some weird edge cases where an incorrect connection was being returned (like a connection from pool for server A when the call needs to go to server B) - those went away after getting the synchronized block back. So we can make this volatile - it should still incur less overhead since there is no locking overhead at least.&lt;/p&gt;

&lt;p&gt;Lemme prep another set of patches with volatile.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Varun&lt;/p&gt;</comment>
                            <comment id="13528658" author="varunsharma" created="Tue, 11 Dec 2012 04:25:19 +0000"  >&lt;p&gt;Attached another set of patches with no changes to the PoolMap. Makes connections volatile and employs double checked locking.&lt;/p&gt;

&lt;p&gt;Thanks !&lt;/p&gt;</comment>
                            <comment id="13528659" author="hadoopqa" created="Tue, 11 Dec 2012 04:30:09 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12560349/7295-0.94-v5.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12560349/7295-0.94-v5.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3485//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3485//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13528666" author="lhofhansl" created="Tue, 11 Dec 2012 04:56:38 +0000"  >&lt;p&gt;Looks good. Is there any way for you to reproduce the scenario that showed the issue in order to verify that it is fixed now? &lt;br/&gt;
If not that&apos;s fine too, this change is definitely an improvement.&lt;/p&gt;</comment>
                            <comment id="13528669" author="varunsharma" created="Tue, 11 Dec 2012 04:59:56 +0000"  >&lt;p&gt;We are not seeing the contention issues now - not the other issue either. However, we are going to be testing through - so in case, it pops up again, I will report back..&lt;/p&gt;</comment>
                            <comment id="13528703" author="hadoopqa" created="Tue, 11 Dec 2012 05:59:46 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12560350/7295-trunk-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12560350/7295-trunk-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 104 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 23 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3486//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13529483" author="lhofhansl" created="Tue, 11 Dec 2012 23:34:18 +0000"  >&lt;p&gt;Will commit unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13530123" author="ikeda" created="Wed, 12 Dec 2012 17:22:57 +0000"  >&lt;p&gt;It is meaningless to chage the final instance variable PoolMap to volatile, because its effects around ensuring visbility between threads are applied when you get/set the reference itself. Also PoolMap is not thread safe indeed, and we don&apos;t tell what happens from the beginning (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6651&quot; title=&quot;Improve thread safety of HTablePool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6651&quot;&gt;HBASE-6651&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13530128" author="lhofhansl" created="Wed, 12 Dec 2012 17:29:09 +0000"  >&lt;p&gt;Indeed. You&apos;re right of course.&lt;/p&gt;</comment>
                            <comment id="13530138" author="lhofhansl" created="Wed, 12 Dec 2012 17:39:27 +0000"  >&lt;p&gt;In fact I had misread the whole patch (looked to me like we&apos;re checking and rechecking connections, but we&apos;re checking the connection we&apos;re retrieving from connections, hence Ted&apos;s comment about making that volatile).&lt;/p&gt;</comment>
                            <comment id="13530655" author="hadoopqa" created="Thu, 13 Dec 2012 04:02:41 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12560350/7295-trunk-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12560350/7295-trunk-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 104 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 23 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMultiParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3506//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13536173" author="varunsharma" created="Wed, 19 Dec 2012 17:32:35 +0000"  >&lt;p&gt;I cannot really make &quot;connection&quot; volatile since its declared inside the function and hence, the reference can only be assigned to, in a single thread.&lt;/p&gt;</comment>
                            <comment id="13536297" author="lhofhansl" created="Wed, 19 Dec 2012 18:54:59 +0000"  >&lt;p&gt;Yeah, maybe use ConcurrentHashMap.putIfAbsent (I think one of your patches had that). If you find the Connection is in there already at that point just close the newly created one.&lt;/p&gt;

&lt;p&gt;In the end I am somewhat skeptical that this is even an issue. Do you have a matching number of handlers threads at the regionservers? (hbase.regionserver.handler.count)&lt;/p&gt;</comment>
                            <comment id="13543664" author="varunsharma" created="Fri, 4 Jan 2013 07:14:33 +0000"  >&lt;p&gt;No, I don&apos;t have a matching number of handlers on the region server side. Since the thrift proxy is handling 2K connections with approx. 2K threads - we would need 2K handlers on the region server side.&lt;/p&gt;

&lt;p&gt;The dead lock we saw happens on the client side (thrift proxy) and once it happens - traffic to hbase region server drops to 0 so I am not sure if upping the number of handler threads will resolve this issue.&lt;/p&gt;</comment>
                            <comment id="13550929" author="stack" created="Fri, 11 Jan 2013 07:36:00 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt; Work in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7460&quot; title=&quot;Cleanup client connection layers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7460&quot;&gt;&lt;del&gt;HBASE-7460&lt;/del&gt;&lt;/a&gt; could fix this when it removes the cache of clients?&lt;/p&gt;</comment>
                            <comment id="13551490" author="ghelmling" created="Fri, 11 Jan 2013 20:18:40 +0000"  >&lt;p&gt;The &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7460&quot; title=&quot;Cleanup client connection layers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7460&quot;&gt;&lt;del&gt;HBASE-7460&lt;/del&gt;&lt;/a&gt; changes don&apos;t directly touch the internal HBaseClient PoolMap of connection instances.  What it&apos;s changing instead by removing the ClientCache is making there be a 1-1 correlation for each HConnectionManager.HConnectionImplementation instance and a HBaseClient instance.  HBaseClient internally, in the current version at least, remains intact.&lt;/p&gt;</comment>
                            <comment id="13558485" author="lhofhansl" created="Mon, 21 Jan 2013 02:27:01 +0000"  >&lt;p&gt;Removing from 0.94. Pull back in if you disagree.&lt;/p&gt;</comment>
                            <comment id="13602025" author="varunsharma" created="Thu, 14 Mar 2013 04:50:40 +0000"  >&lt;p&gt;I would like to revive this issue. We have been running with this patch for over a month now. Just to recap on the patch, we had contention issues at one of our thrift proxy(s). The proxy does the following:&lt;/p&gt;

&lt;p&gt;python client(s) &amp;lt;&lt;del&gt;&amp;gt; Thrift Proxy &amp;lt;&lt;/del&gt;&amp;gt; HBase&lt;/p&gt;

&lt;p&gt;The Proxy upto thousands of calls per second. However there are certain calls which result in multi operations - these operations generate 30 calls for every single call (which are upto 200-300 per second) - so basically this requires locking the pool of connections, thousands of times per second - once for each fanout call.&lt;/p&gt;

&lt;p&gt;I have not rerun the tests yet against the most current 0.94 release but I would like to pull it back into 0.94 (since we have tested it in production for a while now).&lt;/p&gt;

&lt;p&gt;Varun&lt;/p&gt;</comment>
                            <comment id="13602557" author="hadoopqa" created="Thu, 14 Mar 2013 18:41:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12573740/7295-trunk-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12573740/7295-trunk-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4817//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13603655" author="varunsharma" created="Fri, 15 Mar 2013 18:32:37 +0000"  >&lt;p&gt;I also ran the test for 0.94 - those passed (there was one test which was failing both with and without the commit).&lt;/p&gt;</comment>
                            <comment id="13605586" author="yuzhihong@gmail.com" created="Mon, 18 Mar 2013 20:27:15 +0000"  >&lt;p&gt;I ran TestRowProcessorEndpoint with trunk patch v4 and it passed.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13605621" author="lhofhansl" created="Mon, 18 Mar 2013 20:55:05 +0000"  >&lt;p&gt;I know we went through this before, but just making the PoolMap volatile does not make the implementation thread safe.&lt;/p&gt;</comment>
                            <comment id="13605664" author="varunsharma" created="Mon, 18 Mar 2013 21:23:52 +0000"  >&lt;p&gt;Lars,&lt;/p&gt;

&lt;p&gt;I maybe forgetting but is it because of the edge cases with PoolMap thread safety or is it the Connection object thread safety or is it because of the double checked locking issue in general ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Varun&lt;/p&gt;</comment>
                            <comment id="13605711" author="lhofhansl" created="Mon, 18 Mar 2013 21:54:36 +0000"  >&lt;p&gt;Double checked locking is fine when the variable checked in declared volatile (i.e. ensure proper read/write memory barriers).&lt;br/&gt;
Here PoolMap itself would have to be thread-safe, which - as far as I know - it is not.&lt;/p&gt;

&lt;p&gt;Also in the uncontended case an access to a volatile is not significantly cheaper than a synchronized statement, so I doubt that even if it was correct it would actually improve the situation ... Unless you see extremely high contention on this lock.&lt;/p&gt;

&lt;p&gt;Do you have sample code that can reproduce the problem? Until then I&apos;m -1 on this change. (sorry)&lt;/p&gt;</comment>
                            <comment id="13605729" author="stack" created="Mon, 18 Mar 2013 22:11:33 +0000"  >&lt;p&gt;This doesn&apos;t make sense:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; PoolMap&amp;lt;ConnectionId, Connection&amp;gt; connections;
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;volatile&lt;/span&gt; PoolMap&amp;lt;ConnectionId, Connection&amp;gt; connections;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is &lt;a href=&quot;http://en.wikipedia.org/wiki/Double-checked_locking&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/Double-checked_locking&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No weird errors/connection fails in your thrift gateway?&lt;/p&gt;

&lt;p&gt;PoolMap looks like it is backed by a concurrent hash map which would be fine on the gets, etc., but the iterations are not synchronized (I don&apos;t see connections being iterated but they probably are someplace if I looked more).&lt;/p&gt;

&lt;p&gt;We committed a double-check locking around block cache a while ago: &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12553266/5898-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12553266/5898-v4.txt&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13605838" author="varunsharma" created="Tue, 19 Mar 2013 00:06:44 +0000"  >&lt;p&gt;We are not seeing any issues on the thrift gateway anymore.&lt;/p&gt;

&lt;p&gt;@lars : I can try comparing volatile and synchronized accesses to the PoolMap of type ReusablePool&lt;br/&gt;
@stack : We do iterate over connections in HBaseClient when we try to close down the HBaseClient or stop it&lt;/p&gt;
</comment>
                            <comment id="13621517" author="stack" created="Wed, 3 Apr 2013 23:34:39 +0000"  >&lt;p&gt;Moving out of 0.95; patch is still under discussion.  Can pull it back in when gets resolved.&lt;/p&gt;</comment>
                            <comment id="13639262" author="varunsharma" created="Tue, 23 Apr 2013 17:17:57 +0000"  >&lt;p&gt;I attached two files comparing performance of volatile and synchronized simulating a behaviour similar to HBaseClient using a PoolMap&amp;lt;String, String&amp;gt;&lt;/p&gt;

&lt;p&gt;The tests basically run 1000 threads which issue 10000 calls and each call performs an operation on PoolMap 30 times. So 300 million times.&lt;/p&gt;

&lt;p&gt;Results&lt;br/&gt;
1) Synchronized - 90 seconds&lt;br/&gt;
2) Volatile - 16 seconds&lt;/p&gt;

&lt;p&gt;As you can see, volatile is almost an order of magnitude faster.&lt;/p&gt;

&lt;p&gt;That said, it seems like we can do this kind of locking almost 3 million times per second on a simple computer which is, for most cases, enough.&lt;/p&gt;</comment>
                            <comment id="13909020" author="mubarakseyed" created="Sat, 22 Feb 2014 00:10:17 +0000"  >&lt;p&gt;Is there any update on this issue? Thanks.&lt;/p&gt;</comment>
                            <comment id="13909105" author="lhofhansl" created="Sat, 22 Feb 2014 01:18:10 +0000"  >&lt;p&gt;I haven&apos;t seen any convincing evidence that this is an issue.&lt;br/&gt;
Do you have seen this issue &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mubarakseyed&quot; class=&quot;user-hover&quot; rel=&quot;mubarakseyed&quot;&gt;Mubarak Seyed&lt;/a&gt;? Do you have a stack trace?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12559790" name="7295-0.94-v2.txt" size="3587" author="varunsharma" created="Fri, 7 Dec 2012 02:03:35 +0000"/>
                            <attachment id="12560176" name="7295-0.94-v3.txt" size="2890" author="varunsharma" created="Mon, 10 Dec 2012 13:35:27 +0000"/>
                            <attachment id="12560196" name="7295-0.94-v4.txt" size="2899" author="varunsharma" created="Mon, 10 Dec 2012 15:52:37 +0000"/>
                            <attachment id="12560349" name="7295-0.94-v5.txt" size="1572" author="varunsharma" created="Tue, 11 Dec 2012 04:27:22 +0000"/>
                            <attachment id="12559771" name="7295-0.94.txt" size="2972" author="varunsharma" created="Fri, 7 Dec 2012 00:05:45 +0000"/>
                            <attachment id="12560210" name="7295-trunk-v2.txt" size="2980" author="varunsharma" created="Mon, 10 Dec 2012 17:09:42 +0000"/>
                            <attachment id="12560350" name="7295-trunk-v3.txt" size="1625" author="varunsharma" created="Tue, 11 Dec 2012 05:00:29 +0000"/>
                            <attachment id="12560348" name="7295-trunk-v3.txt" size="1625" author="varunsharma" created="Tue, 11 Dec 2012 04:25:19 +0000"/>
                            <attachment id="12573740" name="7295-trunk-v4.txt" size="1736" author="varunsharma" created="Thu, 14 Mar 2013 17:39:39 +0000"/>
                            <attachment id="12560197" name="7295-trunk.txt" size="3001" author="varunsharma" created="Mon, 10 Dec 2012 15:52:37 +0000"/>
                            <attachment id="12559803" name="7295-trunk.txt" size="3502" author="yuzhihong@gmail.com" created="Fri, 7 Dec 2012 03:39:12 +0000"/>
                            <attachment id="12580077" name="TestSynchronized.java" size="1465" author="varunsharma" created="Tue, 23 Apr 2013 17:14:30 +0000"/>
                            <attachment id="12580078" name="TestVolatile.java" size="1454" author="varunsharma" created="Tue, 23 Apr 2013 17:14:30 +0000"/>
                            <attachment id="12580079" name="synchronized_output.txt" size="29000" author="varunsharma" created="Tue, 23 Apr 2013 17:14:30 +0000"/>
                            <attachment id="12580080" name="volatile_output.txt" size="28808" author="varunsharma" created="Tue, 23 Apr 2013 17:14:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 7 Dec 2012 00:20:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>296406</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 42 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1495z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>232948</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>