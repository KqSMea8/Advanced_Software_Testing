<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:49:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14070/HBASE-14070.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14070] Hybrid Logical Clocks for HBase</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14070</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HBase and Phoenix uses systems physical clock (PT) to give timestamps to events (read and writes). This works mostly when the system clock is strictly monotonically increasing and there is no cross-dependency between servers clocks. However we know that leap seconds, general clock skew and clock drift are in fact real. &lt;/p&gt;

&lt;p&gt;This jira proposes using Hybrid Logical Clocks (HLC) as an implementation of hybrid physical clock + a logical clock. HLC is best of both worlds where it keeps causality relationship similar to logical clocks, but still is compatible with NTP based physical system clock. HLC can be represented in 64bits. &lt;/p&gt;

&lt;p&gt;A design document is attached and also can be found here: &lt;br/&gt;
&lt;a href=&quot;https://docs.google.com/document/d/1LL2GAodiYi0waBz5ODGL4LDT4e_bXy8P9h6kWC05Bhw/edit#&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.google.com/document/d/1LL2GAodiYi0waBz5ODGL4LDT4e_bXy8P9h6kWC05Bhw/edit#&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12844853">HBASE-14070</key>
            <summary>Hybrid Logical Clocks for HBase</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="3" iconUrl="https://issues.apache.org/jira/images/icons/statuses/inprogress.png" description="This issue is being actively worked on at the moment by the assignee.">In Progress</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="saitejar">Sai Teja Ranuva</assignee>
                                    <reporter username="enis">Enis Soztutar</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Jul 2015 02:22:26 +0000</created>
                <updated>Wed, 16 Nov 2016 22:11:51 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>25</watches>
                                                                                                            <comments>
                            <comment id="14625796" author="stack" created="Tue, 14 Jul 2015 04:32:10 +0000"  >&lt;p&gt;Very nice write up Enis. Left a few comments. Thanks.&lt;/p&gt;</comment>
                            <comment id="14626566" author="davelatham" created="Tue, 14 Jul 2015 16:12:21 +0000"  >&lt;p&gt;This looks awesome.  Thanks, Enis.  I also left some comments and questions in the GDoc.&lt;/p&gt;</comment>
                            <comment id="14627333" author="apurtell" created="Wed, 15 Jul 2015 00:18:55 +0000"  >&lt;p&gt;I&apos;m leaving comments in the doc too. Let me download as word doc when done and attach to the issue to snapshot the discussion there. &lt;/p&gt;</comment>
                            <comment id="14627358" author="apurtell" created="Wed, 15 Jul 2015 00:51:15 +0000"  >&lt;p&gt;I think this could be considered an important enough improvement, especially if a table property defaulting to off, to go into master (2.0) and a future branch-1 minor release. Let&apos;s have that discussion.&lt;/p&gt;</comment>
                            <comment id="14628824" author="enis" created="Wed, 15 Jul 2015 21:57:00 +0000"  >&lt;p&gt;There are very good comments and discussions happening at the doc. Thanks everyone for chiming in. It seems that there is consensus to proceed with this approach. Things that needs the next level of details are, how to land it, how to keep BC, handling migration and gradually moving to using HLC and keeping &quot;happened before&quot; relationships.&lt;/p&gt;

&lt;p&gt;I have been working on a prototype which can be the core patch in a subtask. That should give us some solid ground to see how we can do follow up work (region assignment, etc). &lt;/p&gt;</comment>
                            <comment id="14632350" author="lhofhansl" created="Sat, 18 Jul 2015 09:36:44 +0000"  >&lt;p&gt;Nice writeup.&lt;/p&gt;

&lt;p&gt;What about replication? Are we trying to order events between clusters? I assume we won&apos;t: On the sink we just apply edits at the timestamps &lt;em&gt;at which they happened&lt;/em&gt;, which may be in the past. So I think replication does not need special consideration.&lt;/p&gt;

&lt;p&gt;What we could do is sending current PT,LT along with each replication RPC and thus keep the HLCs of the source and sink server in sync.&lt;/p&gt;</comment>
                            <comment id="14639732" author="enis" created="Fri, 24 Jul 2015 00:28:45 +0000"  >&lt;p&gt;I&apos;ve put up a patch which contains the core logic and client level APIs as well as the semantics for how we can introduce clocks per table for existing and new HBase tables. &lt;/p&gt;

&lt;p&gt;The javadoc for the timestamp class &lt;a href=&quot;https://reviews.apache.org/r/36753/diff/1#2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/36753/diff/1#2&lt;/a&gt; contains most of the semantics.&lt;/p&gt;

&lt;p&gt;Please check whether Timestamp / Clock APIs and new semantics makes sense. I am especially open to suggestions around how we can encapsulate this in the client API, how to make it compatible with existing tables and applications, and what does the migration might look like. &lt;/p&gt;</comment>
                            <comment id="14639735" author="enis" created="Fri, 24 Jul 2015 00:31:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;What about replication? Are we trying to order events between clusters? I assume we won&apos;t: On the sink we just apply edits at the timestamps at which they happened, which may be in the past. So I think replication does not need special consideration.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sorry I missed this. For replication, the timestamps from cells should just update the Clock of the node. In that case, there is no special handling. Since we always carry the PT+LT components in the timestamps with cells, it is just a matter of doing a receive event per cell in writes from replication. &lt;/p&gt;
</comment>
                            <comment id="14640214" author="stack" created="Fri, 24 Jul 2015 09:43:17 +0000"  >&lt;p&gt;I put a comment in the doc asking how time and sequenceid relate. If time were by region rather than by regionserver, HLC time could be the sequenceid as I see it.&lt;/p&gt;

&lt;p&gt;Dave Latham followed up with a suggestion on how we might deal with clients that set the timestamp explicitly that may be more generally applicable.&lt;/p&gt;</comment>
                            <comment id="14640219" author="stack" created="Fri, 24 Jul 2015 09:49:53 +0000"  >&lt;p&gt;Nice javadoc&lt;/p&gt;

&lt;p&gt;&quot;Timestamps from cells should always be interpreted by the table&apos;s Timestamp type so that timestamps given by HBase servers can be converted to wall clock.&quot;&lt;/p&gt;

&lt;p&gt;This implies Cell is no longer standalone. It needs a context so its timestamp is interpreted appropriately.&lt;/p&gt;
</comment>
                            <comment id="14641376" author="enis" created="Sat, 25 Jul 2015 03:35:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;I put a comment in the doc asking how time and sequenceid relate. If time were by region rather than by regionserver, HLC time could be the sequenceid as I see it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed that it will be a nice way of simplification. We are a multi-value database with client settable timestamps and ordering is timestamp-first then seqId. If we want to merge these, it should not be client settable and replication cannot work the way it does today. Current proposal does not propose that we change the HBase semantics at that level. But it also does not prevent it in any way if we want to follow that approach. Once core HLC classes are there, it should be much easy to build. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This implies Cell is no longer standalone. It needs a context so its timestamp is interpreted appropriately.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;True. You can still get the 64-bit timestamp from Cell without Timestamp class. Only if you want to interpret it as wall clock time, you need Timestamp class. &lt;/p&gt;</comment>
                            <comment id="15196527" author="stack" created="Wed, 16 Mar 2016 00:19:12 +0000"  >&lt;p&gt;Just to  note the importance of this effort.&lt;/p&gt;

&lt;p&gt;Was chatting w/ the mighty &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmspaggi&quot; class=&quot;user-hover&quot; rel=&quot;jmspaggi&quot;&gt;Jean-Marc Spaggiari&lt;/a&gt;. He asked what happens if two writes at same exact coordinates agreeing in all but sequenceid. Well, they make it into the system but you are unable to read them out thereafter. The *ColumnTrackers drop edits with same timestamp though different sequenceid. Dataloss. Could plumb sequenceid all through the system as we&apos;ve talked of doing, or just make it easier all around and go this route.&lt;/p&gt;</comment>
                            <comment id="15196676" author="eclark" created="Wed, 16 Mar 2016 03:04:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Could plumb sequenceid all through the system as we&apos;ve talked of doing, or just make it easier all around and go this route.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The tracker just drops the older sequence id. It doesn&apos;t drop both. So putting sequence id through everything would be a pretty big behavioral change as there&apos;s no other way to replace a cell at a timestamp.&lt;/p&gt;</comment>
                            <comment id="15196699" author="stack" created="Wed, 16 Mar 2016 03:43:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;The tracker just drops the older sequence id. It doesn&apos;t drop both. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I should have been more clear. These are two legit edits that just happen to arrive at the same time. Let them be Puts that we&apos;d want to aggregate at read time for example.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So putting sequence id through everything would be a pretty big behavioral change as there&apos;s no other way to replace a cell at a timestamp.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Delete and then Put at the explicit coordinate only now that sequenceid is respected, you can actually overwrite the delete.&lt;/p&gt;</comment>
                            <comment id="15355829" author="saitejar" created="Wed, 29 Jun 2016 21:30:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; Any reason why Timestamp.java file is put in hbase-client module as opposed to hbase-common ? (Referring to the code in the review board link above)&lt;/p&gt;</comment>
                            <comment id="15378304" author="saitejar" created="Thu, 14 Jul 2016 20:27:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; Referring to the Description on RB link. Why are Meta Tables not HLC ? What is the reason for it ?&lt;/p&gt;</comment>
                            <comment id="15378383" author="enis" created="Thu, 14 Jul 2016 21:09:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;Referring to the Description on RB link. Why are Meta Tables not HLC ? What is the reason for it ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it is a typo on my end. It should have read: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Meta table is &lt;b&gt;now&lt;/b&gt; HLC and all tables by default are HLC.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The patch contains this: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    metaDescriptor.setTimestampType(Timestamp.HLC);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15378409" author="saitejar" created="Thu, 14 Jul 2016 21:19:58 +0000"  >&lt;p&gt;Thank you for the clarification.&lt;/p&gt;</comment>
                            <comment id="15378417" author="saitejar" created="Thu, 14 Jul 2016 21:26:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; &lt;br/&gt;
Referring to description in RB link - &quot;TTL works with HLC timestamps and SYSTEM timestamps&quot;.&lt;/p&gt;

&lt;p&gt;I feel TTL might not work well with HLC, as there could be a message with much greater PT than the current system time, say a second (but less than max delta we set), which can take the HLC physical time forward. If you read the time the HLC time before the message was received and after the message was received, the difference will be inflated by one second. &lt;br/&gt;
Can you clarify this aspect ?&lt;/p&gt;</comment>
                            <comment id="15378828" author="saitejar" created="Fri, 15 Jul 2016 04:24:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; &lt;br/&gt;
Again, Referring to description in the RB link.&lt;br/&gt;
&quot;Undo updates to meta with local clock&quot;&lt;/p&gt;

&lt;p&gt;My understanding of why timestamps were assigned by the local clock in the first place was to guard against the possible network reordering of delete region, add region which might lead to add region to meta getting eclipsed. &lt;/p&gt;

&lt;p&gt;In case my understanding is right, why are we undoing the local timestamps updates to meta table? and does HLC help in this in any way ?&lt;/p&gt;
</comment>
                            <comment id="15379841" author="enis" created="Fri, 15 Jul 2016 18:24:17 +0000"  >&lt;p&gt;I am not sure what is the concern. TTL is usually set in hours, or more likely days. Having a ~1 second fuzziness in TTL should not be a correctness concern. &lt;/p&gt;</comment>
                            <comment id="15379859" author="enis" created="Fri, 15 Jul 2016 18:30:34 +0000"  >&lt;p&gt;There were 2 issues before. 1 was the case you mentioned that, and the other is that a regionserver&apos;s local clock can be behind so that the update to meta is eclipsed by earlier puts with higher timestamp. With new master code, all operations to meta are strictly serialized by the master. The regionservers never update meta themselves. So delere-after-put should not be a problem if master guarantees that delete RPC is finished before the put RPC is sent. &lt;/p&gt;</comment>
                            <comment id="15379899" author="saitejar" created="Fri, 15 Jul 2016 18:49:14 +0000"  >&lt;p&gt;I feel it is better to use HLC time in places where we are interested(like puts, deletes etc), for places where difference in time is needed rather than the exact time., physical time can be used.&lt;br/&gt;
1. This saves us from some contention as HLC.getCurrentTime is synchronized(This could be significant because, I see that currentTime is being called everywhere in the code for setting names of files to finding difference in time etc)&lt;br/&gt;
2. Also clears any fuzziness in time difference(insignificant with TTL in hours)&lt;/p&gt;</comment>
                            <comment id="15384889" author="saitejar" created="Tue, 19 Jul 2016 21:27:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;br/&gt;
Is there a reason why we are introducing System Monotonic clock apart from HLC clock ?&lt;br/&gt;
Do we need it anywhere specifically ? Can we not use HLC in places where we might use System Monotonic ? I feel it might be better to have clock implementations that will be used. &lt;/p&gt;</comment>
                            <comment id="15384935" author="enis" created="Tue, 19 Jul 2016 21:54:21 +0000"  >&lt;p&gt;I think so. System monotonic clock will be fully compatible with the existing data, and we need the monotonicly non-decreasing semantics to be available. If existing data and applications use the timestamp explicitly (for example table already has TTL), etc, then we cannot change the table to be HLC. For those tables, we still want a monotonic clock for correctness. &lt;/p&gt;</comment>
                            <comment id="15384936" author="stack" created="Tue, 19 Jul 2016 21:55:11 +0000"  >&lt;p&gt;@enis knows better but I&apos;d think SYSTEM clock is the one we&apos;d drop. SYSTEM_MONOTONIC is superior to raw SYSTEM in that it doesn&apos;t go backward. We&apos;d use this in 2.0 rather than plain SYSTEM.&lt;/p&gt;</comment>
                            <comment id="15384958" author="stack" created="Tue, 19 Jul 2016 22:03:24 +0000"  >&lt;p&gt;Don&apos;t worry about #1 for now (I&apos;m sorry &amp;#8211; the paranoia is my fault).&lt;/p&gt;

&lt;p&gt;And on TTL, we just had a chat and it should be fine w/ HLC.&lt;/p&gt;</comment>
                            <comment id="15384963" author="saitejar" created="Tue, 19 Jul 2016 22:07:34 +0000"  >&lt;p&gt;Thank you for your insights and suggestions.&lt;br/&gt;
I think it makes sense to drop System time as suggested.&lt;/p&gt;</comment>
                            <comment id="15385006" author="enis" created="Tue, 19 Jul 2016 22:39:28 +0000"  >&lt;p&gt;We still need three algorithms implemented: &lt;br/&gt;
(1) HLC &lt;br/&gt;
(2) System time with monotonically non-decreasing &lt;br/&gt;
(3) Leave the timestamps alone, I know what I am doing from client side (basically tephra / omid, etc). Mainly current implementation (if client supplied use it, otherwise use wall clock). &lt;/p&gt;

&lt;p&gt;I think I was using SYSTEM as a name for algorithm (3), but changed that to CUSTOM to be more descriptive. &lt;/p&gt;</comment>
                            <comment id="15478493" author="saitejar" created="Fri, 9 Sep 2016 22:40:03 +0000"  >&lt;p&gt;The document(Current Status of HLC - google doc) contains the current status of the project with some details of the decisions made in the process. It also contains the work that is yet to be done. &lt;br/&gt;
Open to comments.&lt;/p&gt;</comment>
                            <comment id="15478593" author="saitejar" created="Fri, 9 Sep 2016 23:12:21 +0000"  >&lt;p&gt;The patch - HBase-14070.master.001.patch contains the current unfinished changes for the&lt;br/&gt;
 HLC project. A document describing current state of the work and work yet to&lt;br/&gt;
 be done is attached in the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14070&quot; title=&quot;Hybrid Logical Clocks for HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14070&quot;&gt;HBASE-14070&lt;/a&gt;. It is present in the links section of this JIRA, it is named Current Status of HLC. &lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;WorkDone&quot;&gt;&lt;/a&gt;Work Done&lt;/h2&gt;
&lt;p&gt;Timestamp Enum Class with all the methods with the tests&lt;br/&gt;
Clock Class supporting three clock types with the tests&lt;br/&gt;
HLC clock updates during recovery and replication&lt;br/&gt;
Clock per Region Server notion&lt;br/&gt;
TTL and Time to Purge work well across all Clock Types&lt;br/&gt;
Most of the time related tests are parameterized to run against all the three clock types.&lt;br/&gt;
Test cases setting timestamps in Put were changed so that timestamp is not set with the help of manual environment edge&lt;br/&gt;
The tests were run with HLC as default clock type of the tables and most of the bugs have been removed. There is still some work to be done to get all the tests passed.&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;WorkYettodone&quot;&gt;&lt;/a&gt;Work Yet to done&lt;/h2&gt;
&lt;p&gt;Time range should be dealt with as per section 3.3&lt;br/&gt;
A check, for HLC and System Monotonic tables, disallowing clients to set the timestamps in the server side and not on the client side (Keep Client dumb)&lt;br/&gt;
Currently, still some test cases are flaky, some are failing. Need to clear them.&lt;br/&gt;
HLC clock should be updates for more events such open, close regions etc. as per various use cases. Deciding which events we should track is important.&lt;br/&gt;
Bulk Loads need to be thought upon. Mechanism to ensure that the bulk loaded files are having correct timestamp types. If we can have the highest timestamp of all the cells, we can update the local clock with it. This is something to think about.&lt;br/&gt;
Test cases written currently are very local, need to write some integration tests which tests the HLC clock properties w.r.t recovery, replication and more.&lt;/p&gt;

&lt;p&gt;Currently some of the tests were rewritten using manual environment edge to get around the problem of not setting timestamps for HLC tables. A suggestion was made by Stack and Enis to not use environment edge in the clocks. Instead have a pluggable manual clock in place of Environment Edge.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12985433">HBASE-16148</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12608179">HBASE-6833</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12657206">HBASE-8927</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12677177">HBASE-9879</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12845408">PHOENIX-2124</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12844013">HBASE-14054</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12677877">HBASE-9905</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12827851" name="HBASE-14070.master.001.patch" size="290987" author="saitejar" created="Fri, 9 Sep 2016 22:28:13 +0000"/>
                            <attachment id="12745365" name="HybridLogicalClocksforHBaseandPhoenix.docx" size="24759" author="apurtell" created="Wed, 15 Jul 2015 00:45:41 +0000"/>
                            <attachment id="12745165" name="HybridLogicalClocksforHBaseandPhoenix.pdf" size="342202" author="enis" created="Tue, 14 Jul 2015 02:25:29 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12985433">HBASE-16148</subtask>
                            <subtask id="12988439">HBASE-16210</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Jul 2015 04:32:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            13 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2h7sf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>