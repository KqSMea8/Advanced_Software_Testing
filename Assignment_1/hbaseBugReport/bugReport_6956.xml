<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:41:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6956/HBASE-6956.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6956] Do not return back to HTablePool closed connections</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6956</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Sometimes we see a lot of Exception about closed connections:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation@553fd068 closed
org.apache.hadoop.hbase.client.ClosedConnectionException: org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation@553fd068 closed
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After investigation we assumed that it occurs because closed connection returns back into HTablePool. &lt;/p&gt;

&lt;p&gt;For our opinion best solution is  check whether the table is closed in method HTablePool.putTable and if true don&apos;t add it into the queue and release such HTableInterface.&lt;/p&gt;

&lt;p&gt;But unfortunatly right now there are no access to HTable#closed field through HTableInterface&lt;/p&gt;</description>
                <environment></environment>
        <key id="12610541">HBASE-6956</key>
            <summary>Do not return back to HTablePool closed connections</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="iyurinok">Igor Yurinok</reporter>
                        <labels>
                    </labels>
                <created>Fri, 5 Oct 2012 10:10:52 +0000</created>
                <updated>Wed, 16 Nov 2016 22:30:55 +0000</updated>
                            <resolved>Wed, 16 Nov 2016 22:30:53 +0000</resolved>
                                    <version>0.90.6</version>
                                                    <component>Client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13472779" author="stack" created="Tue, 9 Oct 2012 21:41:47 +0000"  >&lt;p&gt;You have a patch Igor?&lt;/p&gt;</comment>
                            <comment id="13487006" author="shengjie_min" created="Tue, 30 Oct 2012 16:52:50 +0000"  >&lt;p&gt;I still have this issue even in 0.92.1. any updates?&lt;/p&gt;</comment>
                            <comment id="13487013" author="zhihyu@ebaysf.com" created="Tue, 30 Oct 2012 16:59:46 +0000"  >&lt;p&gt;For putTable(), I see this javadoc:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /**
   * This method is not needed anymore, clients should call
   * HTableInterface.close() rather than returning the tables to the pool
   * 
   * @param table
   *          the proxy table user got from pool
   * @deprecated
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void putTable(HTableInterface table) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;@Igor, @Shengjie:&lt;br/&gt;
Can you tell us whether you followed the above suggestion ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13487037" author="shengjie_min" created="Tue, 30 Oct 2012 17:31:55 +0000"  >&lt;p&gt;In my case I am using HTablePool, my understanding is the following:&lt;/p&gt;

&lt;p&gt;so when the hbase query comes,&lt;/p&gt;

&lt;p&gt;if pool is avaiable:&lt;br/&gt;
    I get a PooledHtable instance, once I am done with query, I call HtablePool.PooledHtable.close(), it will return PooledHtable instance to the pool.&lt;br/&gt;
if pool is out:&lt;br/&gt;
    I get a normal Htable instance, once I am done with query, I call Htable.close(), it will just release Htable instance.&lt;/p&gt;

&lt;p&gt;I have no clue why I ended up having closed HConnectionImplementation in the pool.&lt;/p&gt;
</comment>
                            <comment id="13491169" author="amuraru" created="Tue, 6 Nov 2012 03:09:13 +0000"  >&lt;p&gt;I&apos;m seeing a similar stack trace when using HTablePool:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.RuntimeException: java.io.IOException: org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation@5c429be9 closed
        at org.apache.hadoop.hbase.client.HTableFactory.createHTableInterface(HTableFactory.java:38) ~[hbase-0.92.2-26.jar:0.92.2-26]
        at org.apache.hadoop.hbase.client.HTablePool.createHTable(HTablePool.java:268) ~[hbase-0.92.2-26.jar:0.92.2-26]
        at org.apache.hadoop.hbase.client.HTablePool.findOrCreateTable(HTablePool.java:198) ~[hbase-0.92.2-26.jar:0.92.2-26]
        at org.apache.hadoop.hbase.client.HTablePool.getTable(HTablePool.java:173) ~[hbase-0.92.2-26.jar:0.92.2-26]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The issue is not with a closed HTable instance returned back to the pool.&lt;br/&gt;
Instead, following my investigation it is caused by the shared &lt;b&gt;HConnection&lt;/b&gt; instance being closed. &lt;br/&gt;
Once you get into this state - the HTablePool#getTable() will always fail and never recover.&lt;/p&gt;

&lt;p&gt;A possible fix is to drop the HConnection used by HTablePool#getTable() in case of an IOException. &lt;br/&gt;
Not trivial though as it is created based on a private Configuration instance in the pool &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.connection = HConnectionManager.getConnection(conf)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A more brutal way of escaping this state is to drop the pool altogether a create a new one (not really doable in all cases depending on the usage)&lt;/p&gt;

&lt;p&gt;I&apos;ll try to come up with a patch to clean up the faulty HConnection and keep the pool up.&lt;/p&gt;</comment>
                            <comment id="13491365" author="shengjie_min" created="Tue, 6 Nov 2012 10:28:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=amuraru&quot; class=&quot;user-hover&quot; rel=&quot;amuraru&quot;&gt;Adrian Muraru&lt;/a&gt;what version you are using?&lt;/p&gt;</comment>
                            <comment id="13491367" author="amuraru" created="Tue, 6 Nov 2012 10:40:00 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shengjie_min&quot; class=&quot;user-hover&quot; rel=&quot;shengjie_min&quot;&gt;shengjie min&lt;/a&gt; 0.92.2&lt;/p&gt;</comment>
                            <comment id="13507345" author="bbaugher" created="Fri, 30 Nov 2012 14:19:45 +0000"  >&lt;p&gt;We have also ran into this issue specifically during major failure of the cluster (i.e. hmaster, zookeeper, regionservers are down).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=amuraru&quot; class=&quot;user-hover&quot; rel=&quot;amuraru&quot;&gt;Adrian Muraru&lt;/a&gt; did you manage to find a good way to flush a bad table from your pool when the connection becomes closed?&lt;/p&gt;</comment>
                            <comment id="13507353" author="iyurinok" created="Fri, 30 Nov 2012 14:33:47 +0000"  >&lt;p&gt;We implemented our own HTableFactory and HTable which able to check whether connection closed:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HumbleHTableFactory &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; HTableInterfaceFactory {

    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HTableInterface createHTableInterface(Configuration config, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] tableName) {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HumbleHTable(config, tableName);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ioe) {
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(ioe);
        }
    }

    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void releaseHTableInterface(HTableInterface table) {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            table.close();
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ioe) {
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(ioe);
        }
    }

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HumbleHTable &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; HTable {

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Log log = LogFactory.getLog(HumbleHTable.class);

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HumbleHTable(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(tableName);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HumbleHTable(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] tableName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(tableName);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HumbleHTable(Configuration conf, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(conf, tableName);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HumbleHTable(Configuration conf, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] tableName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(conf, tableName);
    }

    /**
     * Harmless clean-up - HConnection isn&apos;t touched. Only the executor pool is shut down
     *
     * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
     */
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void close() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isClosed()) {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
        }
        flushCommits();
        ExecutorService pool = getPool();
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (pool != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            pool.shutdown();
        }
        setClosed();
    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isClosed() {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getSuperField(&lt;span class=&quot;code-quote&quot;&gt;&quot;closed&quot;&lt;/span&gt;).getBoolean(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
            log.error(e);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
        }
    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void setClosed() {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            getSuperField(&lt;span class=&quot;code-quote&quot;&gt;&quot;closed&quot;&lt;/span&gt;).setBoolean(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
            log.error(e);
        }
    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; ExecutorService getPool() {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (ExecutorService) getSuperField(&lt;span class=&quot;code-quote&quot;&gt;&quot;pool&quot;&lt;/span&gt;).get(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
            log.error(e);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
        }
    }

    /**
     * Loads stuff from the parent class via reflection
     */
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Field getSuperField(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fieldName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; NoSuchFieldException {
        Field field = HTable.class.getDeclaredField(fieldName);
        field.setAccessible(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; field;
    }

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13507413" author="stack" created="Fri, 30 Nov 2012 16:21:59 +0000"  >&lt;p&gt;This seems like an ugly enough oversight on our part.  Any chance of a patch to address it?  Could we change HConnection Interface to make it easier getting a new one &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=amuraru&quot; class=&quot;user-hover&quot; rel=&quot;amuraru&quot;&gt;Adrian Muraru&lt;/a&gt;?  (I like the name of your class &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=iyurinok&quot; class=&quot;user-hover&quot; rel=&quot;iyurinok&quot;&gt;Igor Yurinok&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="13507634" author="mkwhitacre" created="Fri, 30 Nov 2012 20:37:31 +0000"  >&lt;p&gt;Igor, can you explain how you are detecting the connection is closed?  Your isClosed() method only checks to see if the HTable boolean value has been closed which is independent of the HConnection.  &lt;/p&gt;

&lt;p&gt;Additionally why do you avoid trying to close the HConnection by informing the HConnectionManager that the connection is stale?&lt;/p&gt;

&lt;p&gt;The last question is how does this solve the problem of evicting HTableInterface instances from the pool that are no longer valid?  Altering the HTableInterfaceFactory + HTableInterface implementation only solves the problem of new instances needed to be created.&lt;/p&gt;</comment>
                            <comment id="13507639" author="amuraru" created="Fri, 30 Nov 2012 20:45:35 +0000"  >&lt;p&gt;There is an ongoing discussion on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6580&quot; title=&quot;Deprecate HTablePool in favor of HConnection.getTable(...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6580&quot;&gt;&lt;del&gt;HBASE-6580&lt;/del&gt;&lt;/a&gt; addressing this issue, a broader scope but would resolve the broken HConnection discussed here.&lt;br/&gt;
The agreement there was to deprecate HTablePool and rely on lightweight (read cheap) HTable (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4805&quot; title=&quot;Allow better control of resource consumption in HTable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4805&quot;&gt;&lt;del&gt;HBASE-4805&lt;/del&gt;&lt;/a&gt;) retrieved from a new HConnection#getTable()&lt;/p&gt;

&lt;p&gt;I have a patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6580&quot; title=&quot;Deprecate HTablePool in favor of HConnection.getTable(...)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6580&quot;&gt;&lt;del&gt;HBASE-6580&lt;/del&gt;&lt;/a&gt; that proposes a new HTableInterfaceFactory :&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12554094/HBASE-6580_v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12554094/HBASE-6580_v1.patch&lt;/a&gt;&lt;br/&gt;
and can be used as a custom factory when creating the HTablePool &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.hadoop.hbase.client.HTablePool.HTablePool(Configuration config, int maxSize, HTableInterfaceFactory tableFactory)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15671878" author="stack" created="Wed, 16 Nov 2016 22:30:54 +0000"  >&lt;p&gt;No longer a problem. We don&apos;t do connections in the 0.90-way.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12604707">HBASE-6651</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12603384">HBASE-6580</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Oct 2012 21:41:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>242879</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i030rb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15556</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>