<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:15:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4014/HBASE-4014.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4014] Coprocessors: Flag the presence of coprocessors in logged exceptions</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4014</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;For some initial triage of bug reports for core versus for deployments with loaded coprocessors, we need something like the Linux kernel&apos;s taint flag, and list of linked in modules that show up in the output of every OOPS, to appear above or below exceptions that appear in the logs.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12511113">HBASE-4014</key>
            <summary>Coprocessors: Flag the presence of coprocessors in logged exceptions</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ekoontz">Eugene Koontz</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 Jun 2011 17:24:31 +0000</created>
                <updated>Fri, 20 Nov 2015 11:53:50 +0000</updated>
                            <resolved>Mon, 26 Sep 2011 00:50:05 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13052691" author="apurtell" created="Tue, 21 Jun 2011 17:33:31 +0000"  >&lt;p&gt;We just need a concurrent update safe &lt;tt&gt;Set&amp;lt;? extends Coprocessor&amp;gt;&lt;/tt&gt; in the global scope of the regionserver and master that gets updated whenever a CoprocessorHost is created during HRegion load.&lt;/p&gt;

&lt;p&gt;There is no need to worry about removing listed CPs if all tables for which a CP was loaded are disabled or if all relevant regions move off a RegionServer; currently once a CP is loaded the classes remain resident in the JVM even if no active instances. (Class unloading is tricky. We&apos;ve decided to not do it for CPs unless there is a compelling reason.)&lt;/p&gt;</comment>
                            <comment id="13052702" author="apurtell" created="Tue, 21 Jun 2011 17:42:51 +0000"  >&lt;p&gt;To log the taint and current CP load state, modify implementers of &lt;a href=&quot;http://hbase.apache.org/apidocs/org/apache/hadoop/hbase/Abortable.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Abortable&lt;/a&gt; to do so in &lt;tt&gt;abort()&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="13052707" author="apurtell" created="Tue, 21 Jun 2011 17:49:49 +0000"  >&lt;p&gt;Pulling into 0.92&lt;/p&gt;</comment>
                            <comment id="13055131" author="ekoontz" created="Sun, 26 Jun 2011 18:00:49 +0000"  >&lt;p&gt;The main point of the patch is to modify hooks in MasterCoprocessorHost and RegionCoprocessorHost (the hooks are: prePut, postPut, ..etc) to catch any exceptions thrown by hosted coprocessors. The catch {} block aborts the hosting process (either master or regionserver) with an error message describing what coprocessors were being hosted for later analysis.&lt;/p&gt;</comment>
                            <comment id="13055145" author="apurtell" created="Sun, 26 Jun 2011 18:29:43 +0000"  >&lt;p&gt;@Eugene Your patch doesn&apos;t do what was described in earlier comments on this issue. Instead it tidies up how exception handling is done in the coprocessor framework. But actually I think it achieves the intent here without touching code &quot;outside&quot; the coprocessor framework as a bonus, so I&apos;m happy to +1 this approach. &lt;/p&gt;

&lt;p&gt;But you cannot catch all exceptions and abort. This breaks AccessController for example &amp;#8211; with this patch in place an &lt;tt&gt;AccessDeniedException&lt;/tt&gt; would abort the RegionServer or Master process. There are many valid cases where a coprocessor will want to throw an exception back to the client. Instead, you should:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Replace all instances of &lt;tt&gt;catch (Exception e)&lt;/tt&gt; with &lt;tt&gt;catch (Throwable t)&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Rethrow any &lt;tt&gt;java.lang.IOException&lt;/tt&gt; or subclass thereof, testing with the instanceof operator.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Otherwise call &lt;tt&gt;abort()&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This perpetuates the HBase idiom that &lt;tt&gt;IOException&lt;/tt&gt; is special and all user exceptions must be subclassed from it in order for HBase to do the right thing, but that is already baked into the code in many places.&lt;/p&gt;</comment>
                            <comment id="13055714" author="ekoontz" created="Mon, 27 Jun 2011 19:39:28 +0000"  >&lt;p&gt;improved patch that addresses Andrew Purtell&apos;s comments: distinguishes between IOExceptions (should be handled by client, not a server abort) and other Throwables (should cause a server abort).&lt;/p&gt;</comment>
                            <comment id="13055722" author="jiraposter@reviews.apache.org" created="Mon, 27 Jun 2011 20:05:47 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 0a1fb2a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java 4800bea &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a98117f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java ab16880 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyCoprocessor.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13056932" author="jiraposter@reviews.apache.org" created="Wed, 29 Jun 2011 01:14:28 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review927&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review927&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1990&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1990&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is it better to add a toString() to environment classes? It will be useful for other cases. &lt;/p&gt;

&lt;p&gt;    Here:&lt;br/&gt;
    coprocessorSetAsString += env.toString();&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1991&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1991&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Append a space after the comma?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1992&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1992&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    how about using a flag in the above loop to determine whether to insert a comma or not? so you don&apos;t need the indexof()+substring() here. &lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1993&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1993&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    According to coding style guideline: avoid lines longer than 80 characters.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1994&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1994&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I may miss something here: why they have to be treated differently? Any problem if we throw other IOE here? &lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1995&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1995&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Like above, why there are 2 different handlers here. From the perspective of cp application developers, they may expect to see all exceptions handled the same for all hooks. &lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1996&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1996&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    white spaces. &lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyCoprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1999&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1999&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Rename it to BuggyRegionObserver to avoid confusion?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2002&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2002&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    2011 instead of 2010?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2001&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    space between parameters?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2000&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2000&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    empty lines. &lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1997&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1997&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do you need to override all the method from the abstract class? I think you only need to override postCreateTable(). &lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment1998&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment1998&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Rename it to BuggyMasterObserver to avoid confusion?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Mingjie&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-06-27 20:04:21, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-06-27 20:04:21)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 0a1fb2a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java 4800bea &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a98117f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java ab16880 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyCoprocessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13057432" author="jiraposter@reviews.apache.org" created="Wed, 29 Jun 2011 19:52:28 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-06-29 19:51:58.240813)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 0a1fb2a &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java 4800bea &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a98117f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java ab16880 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyCoprocessor.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13057608" author="jiraposter@reviews.apache.org" created="Thu, 30 Jun 2011 04:25:28 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review933&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review933&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2009&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2009&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please add timeout parameter, e.g.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;@Test&lt;br/&gt;
    +  @Test (timeout=300000)&lt;/li&gt;
&lt;/ul&gt;



&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-06-29 19:51:58, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-06-29 19:51:58)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 0a1fb2a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java 4800bea &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a98117f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java ab16880 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyCoprocessor.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13065541" author="ekoontz" created="Thu, 14 Jul 2011 21:18:23 +0000"  >&lt;p&gt;Address Mingjie Lai&apos;s review at :  &lt;a href=&quot;https://reviews.apache.org/r/969&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13065550" author="ekoontz" created="Thu, 14 Jul 2011 21:30:00 +0000"  >&lt;p&gt;Add timeouts for tests for this issue (thanks to Ted Yu).&lt;/p&gt;</comment>
                            <comment id="13065611" author="jiraposter@reviews.apache.org" created="Thu, 14 Jul 2011 23:40:01 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for all your comments, Mingjie. Please see new patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; here: &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12486509/HBASE-4014.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12486509/HBASE-4014.patch&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 547&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21686#file21686line547&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21686#file21686line547&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is it better to add a toString() to environment classes? It will be useful for other cases. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Here:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     coprocessorSetAsString += env.toString();&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Mingjie, added in next version of patch.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 548&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21686#file21686line548&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21686#file21686line548&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Append a space after the comma?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Mingjie, added in next version of patch.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 551&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21686#file21686line551&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21686#file21686line551&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     how about using a flag in the above loop to determine whether to insert a comma or not? so you don&apos;t need the indexof()+substring() here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Mingjie, added a counter to compare with the set&apos;s size to accomplish this.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 559&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21686#file21686line559&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21686#file21686line559&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     According to coding style guideline: avoid lines longer than 80 characters.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Mingjie; fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 91&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21687#file21687line91&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21687#file21687line91&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I may miss something here: why they have to be treated differently? Any problem if we throw other IOE here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Mingjie,&lt;br/&gt;
Many coprocessor hooks (e.g. preMove() and postMove()) throw UnknownRegionException (rather than the more general IOException) to communicate errors to the client because they were written to match the exception type thrown by their corresponding main action (e.g. HMasterInterface.move() throws UnknownRegionException, therefore preMove() and postMove() throw this also.).&lt;/p&gt;

&lt;p&gt;I had to write handleCoprocessorThrowableAsUnknownRegionException() for these hooks. It&apos;s arguable that coprocessors should all be declared to throw IOException, in which case, we would not need handleCoprocessorThrowableAsUnknownRegionException().&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java, line 193&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21688#file21688line193&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21688#file21688line193&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Like above, why there are 2 different handlers here. From the perspective of cp application developers, they may expect to see all exceptions handled the same for all hooks.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In this case, some Regionserver coprocessor hooks, for example, postClose(), are declared to &lt;b&gt;NOT&lt;/b&gt; throw exceptions: handleCoprocessorThrowableNoRethrow() handles those cases. Non-IOException throwables should be treated as fatal coprocessor bugs and should cause the regionserver to abort.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java, line 1174&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21688#file21688line1174&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21688#file21688line1174&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     white spaces.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry, will have to fix that later when I have a better git tool that shows whitespace better.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyCoprocessor.java, line 27&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21690#file21690line27&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21690#file21690line27&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Rename it to BuggyRegionObserver to avoid confusion?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed, thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 2&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line2&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     2011 instead of 2010?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed, thanks; also fixed the same in TestRegionServerCoprocessorException.java.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 57&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line57&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line57&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     space between parameters?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed, thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 67&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line67&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line67&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     empty lines.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed, thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 93&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line93&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line93&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do you need to override all the method from the abstract class? I think you only need to override postCreateTable().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, removed unneeded overrides. Still need postStartMaster() and start() (in addition to postCreateTable()).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-06-29 01:14:09, Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 94&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line94&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line94&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Rename it to BuggyMasterObserver to avoid confusion?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, renamed according to your suggestion.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review927&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review927&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-07-14 23:39:07, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-07-14 23:39:07)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java 54ccd6f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java 4fa82c0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6af0ecf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java 7f19c72 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestClockSkewDetection.java c571227 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java fc05e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java aa48c22 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java dd5dc3e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13065612" author="jiraposter@reviews.apache.org" created="Thu, 14 Jul 2011 23:40:03 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-07-14 23:39:07.065843)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Addresses Mingjie Lai&apos;s and Ted Yu&apos;s comments.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java 54ccd6f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java 4fa82c0 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6af0ecf &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java 7f19c72 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestClockSkewDetection.java c571227 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java fc05e47 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java aa48c22 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java dd5dc3e &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13071514" author="jiraposter@reviews.apache.org" created="Wed, 27 Jul 2011 05:15:10 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1198&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1198&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Some comments below Eugene.  This thing looks useful and almost done.  Lets get it in!&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2606&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2606&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do we need to add this?  Doesn&apos;t every object inherit Object and so have a toString?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2607&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2607&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do you think this needed Eugene?  Is coprocessors a List?  What if you toString&apos;d it?  Maybe&apos;ll do right thing (with square bracket delimiters rather than curly&apos;s but that might be ok)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2608&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2608&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats masterServices?  I think it subclasses Server?  If you do getServerName or something, that&apos;ll give you something better than &apos;master&apos;.  It&apos;ll include port and startcode which could be important debugging (more important for the RS case than for Master but could be important if multimasters).&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2610&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2610&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nice comment&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2609&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2609&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Abort seems radical&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2611&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2611&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The convention is to put } catch &lt;/p&gt;
{ on the one line rather than line break after the }
&lt;p&gt; (no biggie)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2612&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2612&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2613&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2613&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We are importing but we don&apos;t seem to use the imports, is that so?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2614&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2614&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is there any diff in the above changes?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2615&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2615&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Same here&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2616&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2616&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    No need for these extra new lines&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2617&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2617&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Unused import?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2618&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2618&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Added line we don&apos;t need?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2619&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2619&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Unused import&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestClockSkewDetection.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2620&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2620&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Unused import?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2621&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2621&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Unused import?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2622&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2622&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Unused import?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2623&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2623&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Addition of commented out code&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2624&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2624&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Unused import&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-07-14 23:39:07, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-07-14 23:39:07)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java 54ccd6f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java 4fa82c0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6af0ecf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java 7f19c72 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestClockSkewDetection.java c571227 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java fc05e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java aa48c22 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java dd5dc3e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13073820" author="jiraposter@reviews.apache.org" created="Mon, 1 Aug 2011 22:08:48 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-08-01 22:08:27.772297)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Addressed Michael Stack&apos;s comments.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13073821" author="jiraposter@reviews.apache.org" created="Mon, 1 Aug 2011 22:08:50 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Some comments below Eugene.  This thing looks useful and almost done.  Lets get it in!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thank you Michael for looking at this!&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java, line 54&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25643#file25643line54&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25643#file25643line54&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do we need to add this?  Doesn&apos;t every object inherit Object and so have a toString?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, Michael; you are right. Removed this unnecessary declaration.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 578&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25644#file25644line578&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25644#file25644line578&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do you think this needed Eugene?  Is coprocessors a List?  What if you toString&apos;d it?  Maybe&apos;ll do right thing (with square bracket delimiters rather than curly&apos;s but that might be ok)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Michael, coprocessors is an o.a.h.h.util.SortedCopyOnWriteSet, whose toString() returns :&lt;/p&gt;

&lt;p&gt;&quot;org.apache.hadoop.hbase.util.SortedCopyOnWriteSet@4d441b16&quot; (or a similar memory location after the @-sign. &lt;/p&gt;

&lt;p&gt;Thus the need for a string serialization method like &quot;coprocessorSetAsString()&quot;. &lt;/p&gt;

&lt;p&gt;Perhaps this should be moved to an (overriding) SortedCopyOnWriteSet&apos;s toString()? I am happy to make a sub-JIRA to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; if you think so.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 81&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line81&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line81&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Whats masterServices?  I think it subclasses Server?  If you do getServerName or something, that&apos;ll give you something better than &apos;master&apos;.  It&apos;ll include port and startcode which could be important debugging (more important for the RS case than for Master but could be important if multimasters).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct; masterServices is an instance of MasterServices, which subclasses Server. &lt;/p&gt;

&lt;p&gt;I think you&apos;re right that the port and startcode are important. &lt;/p&gt;

&lt;p&gt;But note that abortServiceWithCoprocessorInfo() &lt;b&gt;does&lt;/b&gt; show serverName.getServerName() in its output, (so it shows the port and startcode as you recomend).&lt;/p&gt;

&lt;p&gt;On the other hand, getServerName() doesn&apos;t show what &lt;b&gt;role&lt;/b&gt; the server plays: is it a master or a regionserver? It seems to me this should be part of the abort message, too.&lt;/p&gt;

&lt;p&gt;So here&apos;s an example of an entire abort message on the master side:&lt;/p&gt;

&lt;p&gt;Aborting service: master running on : 192.168.0.136,56238,1312228544878 because coprocessor: org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorException$BuggyMasterObserver@1658fe12 threw an exception: java.lang.NullPointerException. Loaded coprocessors are: &lt;/p&gt;
{class org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorException$BuggyMasterObserver}

&lt;p&gt;How does that look to you?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 87&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line87&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line87&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Nice comment&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thank you! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 112&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line112&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Abort seems radical&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmm..is it? The point of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; is to catch buggy coprocessors by aborting the coprocessor host (the master or regionserver) with as much information as possible so that the bug in the coprocessor can be fixed. For example, BuggyMasterObserver (in TestMasterCoprocessorException.java) tries to dereference a null pointer.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 237&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line237&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line237&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     The convention is to put } catch { on the one line rather than line break after the } (no biggie)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thank you; fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java, line 26&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25647#file25647line26&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25647#file25647line26&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     We are importing but we don&apos;t seem to use the imports, is that so?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are right: removed unused &quot;import o.a.h.h.coprocessor.Coprocessor;&quot; as well as &quot;import o.a.h.h.coprocessor.CoprocessorHost;&quot;.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 65&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25651#file25651line65&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25651#file25651line65&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     No need for these extra new lines&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thank you for catching that; removed extra new lines.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java, line 36&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25653#file25653line36&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25653#file25653line36&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Unused import?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks; removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java, line 279&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25653#file25653line279&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25653#file25653line279&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Added line we don&apos;t need?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks; removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java, line 49&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25654#file25654line49&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25654#file25654line49&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Unused import&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks; removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/master/TestClockSkewDetection.java, line 34&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25655#file25655line34&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25655#file25655line34&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Unused import?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks; removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java, line 37&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25656#file25656line37&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25656#file25656line37&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Unused import?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks; removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java, line 39&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25657#file25657line39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25657#file25657line39&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Unused import?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks; removed. I should have caught all these before review; not sure how they crept in. Will try to be more careful.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java, line 219&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25657#file25657line219&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25657#file25657line219&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Addition of commented out code&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks; removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java, line 43&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25658#file25658line43&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25658#file25658line43&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Unused import&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks; removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java, line 353&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25648#file25648line353&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25648#file25648line353&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is there any diff in the above changes?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;These are a couple of typos in ZooKeeperWatcher.java that I noticed incidentally - I will file a separate JIRA for these and remove from patch.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-07-27 05:14:19, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java, line 227&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25649#file25649line227&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25649#file25649line227&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Same here&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Another incidental typo - will note &amp;amp; fix in the above separate JIRA and remove from this patch.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1198&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1198&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-07-14 23:39:07, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-07-14 23:39:07)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java 54ccd6f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java 4fa82c0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6af0ecf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java 7f19c72 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestClockSkewDetection.java c571227 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java fc05e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java aa48c22 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java dd5dc3e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13073822" author="jiraposter@reviews.apache.org" created="Mon, 1 Aug 2011 22:08:53 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-06-30 04:23:35, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 246&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line246&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/1/?file=21691#file21691line246&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Please add timeout parameter, e.g.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     -  @Test&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     +  @Test (timeout=300000)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Ted, added timeouts of 30 seconds (30000) per test in both TestMasterCoprocessorException.java and TestRegionServerCoprocessorException.java. This amount is sufficient to pass all tests on my dev laptop.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review933&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review933&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-07-14 23:39:07, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-07-14 23:39:07)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java 54ccd6f &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java 4fa82c0 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java 6af0ecf &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestActiveMasterManager.java 7f19c72 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestClockSkewDetection.java c571227 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestLogsCleaner.java fc05e47 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java aa48c22 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java dd5dc3e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13073981" author="jiraposter@reviews.apache.org" created="Mon, 1 Aug 2011 22:52:39 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1256&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1256&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2887&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2887&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Reading description of this JIRA, I don&apos;t see abortion as part of the requirement.&lt;br/&gt;
    Shall we introduce debug mode for coprocessors. When debug mode is enabled, we abort.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-01 22:08:27, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-01 22:08:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13076022" author="jiraposter@reviews.apache.org" created="Tue, 2 Aug 2011 04:17:27 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-01 22:52:20, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 112&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line112&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Reading description of this JIRA, I don&apos;t see abortion as part of the requirement.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Shall we introduce debug mode for coprocessors. When debug mode is enabled, we abort.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Ted,&lt;br/&gt;
A configuration option sounds like a good idea to me - what shall we call it?&lt;/p&gt;

&lt;p&gt;something like (2 of them, one for master, one for RS) :&lt;/p&gt;

&lt;p&gt;hbase.master.abort_on_cp_error&lt;br/&gt;
hbase.regionserver.abort_on_cp_error&lt;/p&gt;

&lt;p&gt;if true, abort (as in this patch currently)&lt;br/&gt;
if false, print LOG.error() with the identical message that&apos;s printed by the abort.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1256&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1256&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-08-01 22:08:27, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-01 22:08:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13076031" author="jiraposter@reviews.apache.org" created="Tue, 2 Aug 2011 04:30:27 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1260&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1260&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2891&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2891&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Would one such config option be enough instead of two ? My reasoning is that debug mode is a cluster wide mode.&lt;/p&gt;

&lt;p&gt;    We shouldn&apos;t mix dot and underscore in the name of config. How about hbase.coproc.error.aborts.server ?&lt;/p&gt;

&lt;p&gt;    When the option is false, we need to prevent flooding log file with LOG.error()&lt;/p&gt;

&lt;p&gt;    We have two choices for the above scenario.&lt;/p&gt;

&lt;p&gt;    1. use some counter to reduce frequency of LOG.error()&lt;br/&gt;
    2. we can remove the offending coprocessor&lt;/p&gt;

&lt;p&gt;    Although the second choice implies a new config option. So I would choose option 1.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-01 22:08:27, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-01 22:08:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13076045" author="jiraposter@reviews.apache.org" created="Tue, 2 Aug 2011 05:39:27 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1261&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1261&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Sorry for the belated review.&lt;/p&gt;

&lt;p&gt;The additional explicit error handling around coprocessor invocations here is good, but I think this is still missing part of the intent of the original bug description.  I&apos;m concerned about aborts that happen not just resulting directly from unhandled exceptions in coprocessor code, but from bad coprocessor behavior that eventually triggers an abort from within core &lt;em&gt;HBase&lt;/em&gt; code.  This could be a memory leak in the coprocessor that eventually triggers an OOME that only shows up in reading in the next RPC request, or something that corrupts internal state or data structures.  As a result, I think it&apos;s equally important that the loaded coprocessor set be logged &lt;em&gt;within&lt;/em&gt; HMaster.abort() and HRegionServer.abort(), in all cases.  So I don&apos;t think logging from the CoprocessorHost implementations is sufficient.&lt;/p&gt;

&lt;p&gt;For HRegionServer at least, since RegionCoprocessorHost is associated at the HRegion level, this would need a distinct set of all coprocessor classes that have been loaded in that region server&apos;s lifetime, accessible at the top (server) level.  (I thought we discussed this at some point, but can&apos;t find those comments &amp;#8211; maybe I&apos;m hearing voices?)  I think a simple singleton would work, with something like an internal HashSet and an add(String coprocessorClass) method that&apos;s called on coprocessor load.  The same would work on HMaster, though it&apos;s not strictly necessary since only a single MasterCoprocessorHost instance is created at the HMaster level.  But consistency in implementation here is probably good.  The number of CoprocessorHost types we have may increase if new Observer types are added.&lt;/p&gt;

&lt;p&gt;I think what&apos;s here is good, with only some minor nits on naming. But I think the above enhancement is pretty critical to add.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2892&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2892&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I saw in previous comments that this is needed because SortedCopyOnWriteSet doesn&apos;t implement toString().  So why not make SortedCopyOnWriteSet implement toString()?  Seems cleaner to me and more generic/reusable.&lt;/p&gt;

&lt;p&gt;    Wherever this is implemented, use a StringBuilder to create the string to return, not repeated string concatenation.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2894&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2894&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Awfully long name, maybe just abortServer()?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2895&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2895&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This and the following method names are awfully long.  It&apos;s just personal preference, but I like to keep things shorter.&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment2893&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment2893&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Minor nit, but why have this as a separate top-level class?  Seems like it could just be an inner class in TestRegionServerCoprocessorException same way that the BuggyMasterObserver is an inner class in TestMasterCoprocessorException.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-01 22:08:27, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-01 22:08:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c2b3558 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13080340" author="jiraposter@reviews.apache.org" created="Sat, 6 Aug 2011 03:21:28 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-08-06 03:19:56.568419)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This version finally implements the original intent &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;, which is to store loaded coprocessor names within the server instances (HMaster and HRegionServer). The coprocessor names are stored in a static (singleton) HashSet&amp;lt;String&amp;gt; per Gary&apos;s recommendation, on both HMaster and HRegionServer, for consistency.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 8beeb68 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterServices.java 7d9fd9d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 23225d7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c44da73 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java 03df574 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java ab12968 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13080490" author="jiraposter@reviews.apache.org" created="Sun, 7 Aug 2011 00:05:27 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-02 04:28:39, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 112&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/2/?file=25645#file25645line112&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Would one such config option be enough instead of two ? My reasoning is that debug mode is a cluster wide mode.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     We shouldn&apos;t mix dot and underscore in the name of config. How about hbase.coproc.error.aborts.server ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     When the option is false, we need to prevent flooding log file with LOG.error()&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     We have two choices for the above scenario.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     1. use some counter to reduce frequency of LOG.error()&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     2. we can remove the offending coprocessor&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Although the second choice implies a new config option. So I would choose option 1.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Ted, Regarding &quot;hbase.coproc.error.aborts.server&quot; : I thought that config options were supposed to be kind of like namespaces or packages. That is, each segment of the path describes a meaningful scope. For example &quot;hbase.coproc&quot; should contain all config options related to coprocessors. But &quot;aborts&quot; and &quot;server&quot; together mean a single thing i.e. &quot;the server should abort on error&quot;, so it seems to me that it should be &quot;abortsserver&quot; (which I find harder to read than &quot;aborts-server&quot; or &quot;aborts_server&quot;).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1260&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1260&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-08-06 03:19:56, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-06 03:19:56)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 8beeb68 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterServices.java 7d9fd9d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 23225d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c44da73 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java 03df574 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java ab12968 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13081171" author="jiraposter@reviews.apache.org" created="Mon, 8 Aug 2011 20:31:27 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1326&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1326&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;For the loaded list of coprocessors, I think it would be better to invert the setup you have here.  Store these as a simple static variable in CoprocessorHost.  This is really part of the CP framework and it belongs there more than it belongs in HMaster or HRegionServer.  In addition, the MasterServices and RegionServerServices changes then become unnecessary.  Using a static variable will lump everything together in the mini-cluster setups used by the tests (since master and region servers run together in the same jvm), but I don&apos;t think this is a problem.  You&apos;ll also need to use a synchronized set to properly handle concurrent loading of CPs when regions open on a RS, but again I don&apos;t think this will ultimately be much overhead as the set is only accessed on CP load and server abort.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3006&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3006&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think CoprocessorHost should have a static HashSet&amp;lt;String&amp;gt; for the loaded coprocessor class names.  Then add a static method to access the property:&lt;/p&gt;

&lt;p&gt;    public static HashSet&amp;lt;String&amp;gt; getLoadedCoprocessors();&lt;/p&gt;

&lt;p&gt;    Then HMaster.abort() and HRegionServer.abort() just need to call CoprocessorHost.getLoadedCoprocessors() when logging.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3007&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3007&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Move into CoprocessorHost&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterServices.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3008&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3008&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    -1.  This doesn&apos;t belong in MasterServices.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3011&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3011&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Duplicates same method in MasterCoprocessorHost?  Move to CoprocessorHost and then you only need one implementation.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3009&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3009&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    -1.  This doesn&apos;t belong in RegionServerServices, it&apos;s part of the cp framework.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3010&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    By moving loaded coprocessor set to CoprocessorHost, you don&apos;t need this anymore.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-06 03:19:56, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-06 03:19:56)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 8beeb68 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterServices.java 7d9fd9d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 23225d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c44da73 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java 03df574 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java ab12968 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13081353" author="jiraposter@reviews.apache.org" created="Tue, 9 Aug 2011 01:20:27 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-08-09 01:18:57.289734)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Thanks again to Gary for his reviews.&lt;/p&gt;

&lt;p&gt;-Moved HashSet&amp;lt;String&amp;gt; of coprocessor names into a static member of CoprocessorHost, out of HMaster and HRegionServer.&lt;br/&gt;
-add CoprocessorHost.getLoadedCoprocessors() to read this set, and addToLoadedCPs(), a synchronized method to add to this set.&lt;br/&gt;
-moved handleCoprocessorThrowable() into CoprocessorHost from MasterCoprocessorHost and RegionCoprocessorHost, since it&apos;s the same in both.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 8beeb68 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterServices.java 7d9fd9d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 23225d7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c44da73 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java 03df574 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java ab12968 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13081354" author="jiraposter@reviews.apache.org" created="Tue, 9 Aug 2011 01:20:30 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-08 20:31:00, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java, line 81&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/4/?file=30999#file30999line81&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/4/?file=30999#file30999line81&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     -1.  This doesn&apos;t belong in RegionServerServices, it&apos;s part of the cp framework.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-08 20:31:00, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java, line 134&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/4/?file=31000#file31000line134&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/4/?file=31000#file31000line134&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     By moving loaded coprocessor set to CoprocessorHost, you don&apos;t need this anymore.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-08 20:31:00, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java, line 220&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/4/?file=30998#file30998line220&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/4/?file=30998#file30998line220&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Duplicates same method in MasterCoprocessorHost?  Move to CoprocessorHost and then you only need one implementation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;moved up to CoprocessorHost. handleCoprocessorThrowable() calls Coprocessor.abortServer() in some cases (depending on the type of the Throwable param). MasterCoprocessorHost and RegionCoprocessorHost() override abortServer() to pass along their respective services information to the abort message.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-08 20:31:00, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterServices.java, line 67&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/4/?file=30996#file30996line67&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/4/?file=30996#file30996line67&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     -1.  This doesn&apos;t belong in MasterServices.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-08 20:31:00, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 186&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/4/?file=30994#file30994line186&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/4/?file=30994#file30994line186&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Move into CoprocessorHost&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;moved.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-08 20:31:00, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 71&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/4/?file=30993#file30993line71&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/4/?file=30993#file30993line71&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think CoprocessorHost should have a static HashSet&amp;lt;String&amp;gt; for the loaded coprocessor class names.  Then add a static method to access the property:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     public static HashSet&amp;lt;String&amp;gt; getLoadedCoprocessors();&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Then HMaster.abort() and HRegionServer.abort() just need to call CoprocessorHost.getLoadedCoprocessors() when logging.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Added this HashSet to CoprocessorHost and reader method getLoadedCoprocessors() and writer method addToLoadedCPs().&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1326&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1326&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-08-06 03:19:56, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-06 03:19:56)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 8beeb68 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterServices.java 7d9fd9d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 23225d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c44da73 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 8ffa086 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java 03df574 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 78e7d62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java ab12968 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13081356" author="jiraposter@reviews.apache.org" created="Tue, 9 Aug 2011 01:26:26 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-08-09 01:24:48.983396)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Updated patch: please ignore previous diff revision 5.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 8beeb68 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 23225d7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c44da73 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13082732" author="jiraposter@reviews.apache.org" created="Wed, 10 Aug 2011 22:49:27 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-08-10 22:48:08.053908)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;change title to be more informative: show JIRA title&lt;/p&gt;


&lt;p&gt;Summary (updated)&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 8beeb68 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 23225d7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c44da73 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13084479" author="jiraposter@reviews.apache.org" created="Fri, 12 Aug 2011 23:47:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1433&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1433&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Nice work, Eugene.  I think we&apos;re getting close.  Just two suggested improvements below.&lt;/p&gt;

&lt;p&gt;The main question still open to debate, I think, is whether or not aborting the server on unhandled exceptions is appropriate.&lt;/p&gt;

&lt;p&gt;On the one hand, aborting takes the fail-fast approach and makes buggy coprocessors much more visible.  It&apos;s a lot more likely that a bug will be noticed and fixed if it brings down a region server!&lt;/p&gt;

&lt;p&gt;On the other hand, I think coprocessors already pose enough of a stability risk to a cluster.  I think we should be working to minimize that by containing the impact that a buggy coprocessor can have.  If they coprocessor really wants or needs to trigger an abort, it can already do so, since (Master|RegionServer)Services extend Server, which extends Abortable.&lt;/p&gt;

&lt;p&gt;I think I&apos;d be more in favor of removing the coprocessor from the active set (we should make this as visible as possible so it&apos;s clear the coprocessor is no longer &quot;active&quot;), or at least wrapping the exception in a DoNotRetryIOException and communicating it back to the client?  Maybe both?&lt;/p&gt;

&lt;p&gt;I guess I&apos;d be okay with a configuration option to abort on error (I think a single config option is sufficient), as long as it&apos;s disabled by default.  But that would still imply we need some other handling when the option is disabled.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3299&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I would just synchronize the set here:&lt;/p&gt;

&lt;p&gt;    Set&amp;lt;String&amp;gt; coprocessorNames = Collections.synchronizedSet(new HashSet&amp;lt;String&amp;gt;());&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3300&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3300&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If you move this into loadInstance() then you don&apos;t have to duplicate it elsewhere, since all the other load methods wind up calling that.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-10 22:48:08, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-10 22:48:08)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 8beeb68 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 23225d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c44da73 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13084524" author="jiraposter@reviews.apache.org" created="Sat, 13 Aug 2011 03:41:27 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-12 23:46:30, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Nice work, Eugene.  I think we&apos;re getting close.  Just two suggested improvements below.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; The main question still open to debate, I think, is whether or not aborting the server on unhandled exceptions is appropriate.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; On the one hand, aborting takes the fail-fast approach and makes buggy coprocessors much more visible.  It&apos;s a lot more likely that a bug will be noticed and fixed if it brings down a region server!&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; On the other hand, I think coprocessors already pose enough of a stability risk to a cluster.  I think we should be working to minimize that by containing the impact that a buggy coprocessor can have.  If they coprocessor really wants or needs to trigger an abort, it can already do so, since (Master|RegionServer)Services extend Server, which extends Abortable.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I think I&apos;d be more in favor of removing the coprocessor from the active set (we should make this as visible as possible so it&apos;s clear the coprocessor is no longer &quot;active&quot;), or at least wrapping the exception in a DoNotRetryIOException and communicating it back to the client?  Maybe both?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I guess I&apos;d be okay with a configuration option to abort on error (I think a single config option is sufficient), as long as it&apos;s disabled by default.  But that would still imply we need some other handling when the option is disabled.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I like Gary&apos;s reasoning here.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1433&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1433&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-08-10 22:48:08, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-10 22:48:08)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 18ba6e7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 8beeb68 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 23225d7 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java c44da73 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13092019" author="jiraposter@reviews.apache.org" created="Fri, 26 Aug 2011 20:41:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-08-26 20:41:07.342851)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Address Gary&apos;s comments on review board:&lt;/p&gt;

&lt;p&gt;-remove misbehaving coprocessors from coprocessors set.&lt;br/&gt;
-add and use hbase.cprocessor.abort_on_error flag.&lt;br/&gt;
-set hbase.coprocessor.abort_on_error to true for tests.&lt;br/&gt;
-document usage of hbase.coprocessor.abort_on_error in hbase-default.xml (defaults to false).&lt;br/&gt;
-using synchronizedSet for coprocessorNames.&lt;br/&gt;
-move body of addToLoadedCPs to loadInstance().&lt;/p&gt;

&lt;p&gt;Also:&lt;br/&gt;
-simplify implementation and improve documentation of special-purpose handleThrowableXX() methods in MasterCoprocessorHost and RegionCoprocessorHost()&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 7a3ac1d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 92d5dbb &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 58f0350 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 53645ce &lt;br/&gt;
  src/main/resources/hbase-default.xml 2c8f44b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13092032" author="jiraposter@reviews.apache.org" created="Fri, 26 Aug 2011 20:53:29 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-08-26 20:52:06.866941)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Just a small change from last patch: only remove buggy coprocessor from active set if we&apos;re not aborting (i.e. default situation, when abort_on_error==false). &lt;/p&gt;

&lt;p&gt;No reason to change any coprocessor state otherwise, since we are aborting the service.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 7a3ac1d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 92d5dbb &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 58f0350 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 53645ce &lt;br/&gt;
  src/main/resources/hbase-default.xml 2c8f44b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13092372" author="jiraposter@reviews.apache.org" created="Sat, 27 Aug 2011 19:54:37 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1673&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1673&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3809&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3809&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I would write:&lt;br/&gt;
    new HashSet&amp;lt;String&amp;gt;()&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3810&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3810&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be abort(s)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3811&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3811&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Javadoc is very nice.&lt;br/&gt;
    Please reformat the paragraph so that they&lt;br/&gt;
    &apos;re within 80 characters.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3812&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3812&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is there need to use two javadoc blocks ?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3815&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3815&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Line too long.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3817&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3817&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Currently there is no config parameter with _ in its name in hbase-default.xml&lt;/p&gt;

&lt;p&gt;    I think a better name would be hbase.coprocessor.abort.onerror or hbase.coprocessor.onerror.abort&lt;/p&gt;

&lt;p&gt;    Or, we can name this parameter hbase.coprocessor.policy.onerror whose values can be abort or removecoproc&lt;/p&gt;

&lt;p&gt;    Just throw out some suggestions.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3814&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3814&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This and the above else is not necessary - exception (handling) would form natural barrier. This is a matter of style, so it is minor.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3816&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3816&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We should document the behavior w.r.t. fatal error in release notes.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3813&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3813&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Line too long.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3818&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3818&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The call below seems to be a static method call. cpHost is assigned in finishInitialization().&lt;br/&gt;
    If your intention is to return empty string before cpHost is initialized in finishInitialization(), please say so in javadoc.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3819&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3819&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    A better name might be handleCoprocessorUnknownRegion&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3820&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3820&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Long lines in this area.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3821&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3821&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think the period after Ignoring is not needed.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-26 20:52:06, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-26 20:52:06)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 7a3ac1d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 92d5dbb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 58f0350 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 53645ce &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13093277" author="jiraposter@reviews.apache.org" created="Mon, 29 Aug 2011 22:43:37 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1667&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1667&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I think there&apos;s still one important tweak to the exception handling &amp;#8211; if we trigger a server abort on a coprocessor exception, we should make sure that an exception is thrown back to the client.  Otherwise there&apos;s no indication on the client side that any problem occurred.&lt;/p&gt;

&lt;p&gt;Other than that, there are some style problems throughout the patch to clean up:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;brace alignment: should be &quot;} else 
{&quot; and &quot;}
&lt;p&gt; catch (...) &lt;/p&gt;
{&quot; -- on same line as closing brace
- spaces follow commas in method parameters: &quot;method(arg1, arg2)&quot;
- limit lines to 80 chars
- some unnecessary empty lines


src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java
&amp;lt;https://reviews.apache.org/r/969/#comment3747&amp;gt;

    Combine into a single comment?



src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java
&amp;lt;https://reviews.apache.org/r/969/#comment3743&amp;gt;

    Move up to prev line:  }
&lt;p&gt; else {&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3759&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3759&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think the name of the config variable should be hbase.coprocessor.abortonerror.  No other hbase configuration property uses underscores in the name.&lt;/p&gt;

&lt;p&gt;    Also, you can just use:&lt;br/&gt;
    if (conf.getBoolean(&quot;hbase.coprocessor.abortonerror&quot;, false)) {&lt;/p&gt;

&lt;p&gt;    since CoprocessorHost has it&apos;s own instance-level Configuration reference.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3760&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3760&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Move up to prev line&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3837&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3837&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This should be below the else block so it&apos;s always thrown.&lt;/p&gt;

&lt;p&gt;    In the case the region server is aborted, we actually want an exception to come back to the client.  Otherwise we&apos;re burying the error and the client just assumes the operation succeeded, which is bad.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3762&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3762&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be on prev line&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3766&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3766&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Args should have a space after a comma&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3761&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3761&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be on prev line&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3763&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3763&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Empty line&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3764&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3764&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Empty line&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3765&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3765&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Prev line&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3767&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3767&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Limit lines to 80 char&lt;/p&gt;

&lt;p&gt;    hookName isn&apos;t used here, do we need it?  Stack trace will point to the method name anyway.&lt;/p&gt;



&lt;p&gt;src/main/resources/hbase-default.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3768&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3768&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    As stated above, I think it should be hbase.coprocessor.abortonerror&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3769&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3769&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should this check the type of exception that&apos;s expected?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3835&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3835&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Does this really need to be a thread?  Why not just do the put synchronously?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment3836&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment3836&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If the put triggers a RS abort, I think we should be expecting an exception here.  Wouldn&apos;t we want to make sure it&apos;s thrown to notify the client of the error?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-26 20:52:06, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-26 20:52:06)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 7a3ac1d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 92d5dbb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 58f0350 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 53645ce &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13098276" author="jiraposter@reviews.apache.org" created="Tue, 6 Sep 2011 19:09:10 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-09-06 19:08:59.899924)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Addresses comments from Ted Yu and Gary Helmling. Conformant to HBase conventions for line lengths and curly brace positioning.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 3f60653 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 8ff6e62 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 5796413 &lt;br/&gt;
  src/main/resources/hbase-default.xml 2c8f44b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13098279" author="jiraposter@reviews.apache.org" created="Tue, 6 Sep 2011 19:11:09 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-12 23:46:30, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Nice work, Eugene.  I think we&apos;re getting close.  Just two suggested improvements below.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; The main question still open to debate, I think, is whether or not aborting the server on unhandled exceptions is appropriate.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; On the one hand, aborting takes the fail-fast approach and makes buggy coprocessors much more visible.  It&apos;s a lot more likely that a bug will be noticed and fixed if it brings down a region server!&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; On the other hand, I think coprocessors already pose enough of a stability risk to a cluster.  I think we should be working to minimize that by containing the impact that a buggy coprocessor can have.  If they coprocessor really wants or needs to trigger an abort, it can already do so, since (Master|RegionServer)Services extend Server, which extends Abortable.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I think I&apos;d be more in favor of removing the coprocessor from the active set (we should make this as visible as possible so it&apos;s clear the coprocessor is no longer &quot;active&quot;), or at least wrapping the exception in a DoNotRetryIOException and communicating it back to the client?  Maybe both?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I guess I&apos;d be okay with a configuration option to abort on error (I think a single config option is sufficient), as long as it&apos;s disabled by default.  But that would still imply we need some other handling when the option is disabled.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I like Gary&apos;s reasoning here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Gary and Michael for your comments. Latest patch defines a new config option hbase.coprocessor.abort_on_error, which defaults to false. &lt;/p&gt;

&lt;p&gt;CoprocessorHost#handleCoprocessorThrowable() removes the buggy coprocessor from its active set of coprocesors.&lt;/p&gt;

&lt;p&gt;As Gary said, a coprocessor author can explicitly code their coprocessor to abort if they want to. On the other hand, coprocessor authors might like to develop or test without having to explicitly take care of this, so perhaps hbase.coprocessor.abort_on_error=true would be useful for them to define.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-12 23:46:30, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 71&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/6/?file=31373#file31373line71&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/6/?file=31373#file31373line71&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I would just synchronize the set here:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Set&amp;lt;String&amp;gt; coprocessorNames = Collections.synchronizedSet(new HashSet&amp;lt;String&amp;gt;());&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed, thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-12 23:46:30, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 106&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/6/?file=31373#file31373line106&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/6/?file=31373#file31373line106&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If you move this into loadInstance() then you don&apos;t have to duplicate it elsewhere, since all the other load methods wind up calling that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;moved to loadInstance(), thanks.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1433&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1433&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-06 19:08:59, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-06 19:08:59)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 3f60653 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 8ff6e62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 5796413 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13098280" author="jiraposter@reviews.apache.org" created="Tue, 6 Sep 2011 19:11:11 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 74&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line74&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line74&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I would write:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     new HashSet&amp;lt;String&amp;gt;()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed, thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 222&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line222&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should be abort(s)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changed to &quot;if server (master or regionserver) aborts.&quot;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 607&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line607&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line607&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Javadoc is very nice.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Please reformat the paragraph so that they&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &apos;re within 80 characters.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 614&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line614&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line614&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is there need to use two javadoc blocks ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Consolidated to one block.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 631&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line631&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line631&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Line too long.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 633&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line633&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line633&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Currently there is no config parameter with _ in its name in hbase-default.xml&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think a better name would be hbase.coprocessor.abort.onerror or hbase.coprocessor.onerror.abort&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Or, we can name this parameter hbase.coprocessor.policy.onerror whose values can be abort or removecoproc&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Just throw out some suggestions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changed to &quot;hbase.coprocessor.abortonerror&quot; per Gary&apos;s suggestion.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 637&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line637&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line637&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This and the above else is not necessary - exception (handling) would form natural barrier. This is a matter of style, so it is minor.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Removed extraneous else &lt;/p&gt;
{..}
&lt;p&gt; here.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 640&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line640&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line640&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Line too long.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed, thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 638&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line638&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line638&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     We should document the behavior w.r.t. fatal error in release notes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d be happy to help with the release notes: something like:&lt;/p&gt;

&lt;p&gt;&quot;A loaded coprocessor which throws a Throwable that is not an IOException will be removed from the active coprocessor set. A LOG.error() will be written in the the affected service&apos;s log file describing which coprocessor threw the error and what the error was that caused the coprocessor to be removed. This is the default behavior, but if the configuration property &apos;hbase.coprocessor.abortonerror&apos; is set to true, then the service hosting the erroneous coprocessor will be aborted, which may be useful in testing and development environments.&quot;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/HMaster.java, line 1200&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36018#file36018line1200&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36018#file36018line1200&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     The call below seems to be a static method call. cpHost is assigned in finishInitialization().&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If your intention is to return empty string before cpHost is initialized in finishInitialization(), please say so in javadoc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Added comment : &quot;The set of loaded coprocessors is stored in a static set. Since it&apos;s&lt;br/&gt;
statically allocated, it does not require that HMaster&apos;s cpHost be&lt;br/&gt;
initialized prior to accessing it.&quot; Also made getLoadedCoprocessors() static since it simply calls a static method itself. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 91&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line91&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line91&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     A better name might be handleCoprocessorUnknownRegion&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changed to handleCoprocessorUnknownRegion, thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 103&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line103&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line103&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Long lines in this area.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-27 19:52:59, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 106&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line106&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line106&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the period after Ignoring is not needed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1673&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1673&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-06 19:08:59, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-06 19:08:59)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 3f60653 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 8ff6e62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 5796413 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13098281" author="jiraposter@reviews.apache.org" created="Tue, 6 Sep 2011 19:11:13 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I think there&apos;s still one important tweak to the exception handling &amp;#8211; if we trigger a server abort on a coprocessor exception, we should make sure that an exception is thrown back to the client.  Otherwise there&apos;s no indication on the client side that any problem occurred.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Other than that, there are some style problems throughout the patch to clean up:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; - brace alignment: should be &quot;} else {&quot; and &quot;} catch (...) {&quot; -- on same line as closing brace
bq.  &amp;gt; - spaces follow commas in method parameters: &quot;method(arg1, arg2)&quot;
bq.  &amp;gt; - limit lines to 80 chars
bq.  &amp;gt; - some unnecessary empty lines

Hi Gary, thanks for your comments. All style problems have been fixed in my latest patch. 

Throwing an exception back to the client if the server aborts is a good idea, but I&apos;m having difficulties implementing this. If the server throws an exception, then it can&apos;t abort and if it aborts, then it&apos;s too late for it to throw an exception back to the client. Perhaps the server could communicate to the client that it&apos;s going to abort in some other way?


bq.  On 2011-08-29 22:42:09, Gary Helmling wrote:
bq.  &amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 615
bq.  &amp;gt; &amp;lt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line615&amp;gt;
bq.  &amp;gt;
bq.  &amp;gt;     Combine into a single comment?

Fixed, thanks.


bq.  On 2011-08-29 22:42:09, Gary Helmling wrote:
bq.  &amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 626
bq.  &amp;gt; &amp;lt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line626&amp;gt;
bq.  &amp;gt;
bq.  &amp;gt;     Move up to prev line:  } else {&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 633&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line633&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line633&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the name of the config variable should be hbase.coprocessor.abortonerror.  No other hbase configuration property uses underscores in the name.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Also, you can just use:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     if (conf.getBoolean(&quot;hbase.coprocessor.abortonerror&quot;, false)) {&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     since CoprocessorHost has it&apos;s own instance-level Configuration reference.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changed to &quot;hbase.coprocessor.abortonerror&quot;, also using your more concise &quot;conf.getBoolean()&quot; syntax; thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 636&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line636&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line636&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Move up to prev line&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 640&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line640&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36017#file36017line640&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This should be below the else block so it&apos;s always thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     In the case the region server is aborted, we actually want an exception to come back to the client.  Otherwise we&apos;re burying the error and the client just assumes the operation succeeded, which is bad.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this is the same difficulty with the server not being able to both throw an exception and abort.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 97&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line97&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line97&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should be on prev line&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 99&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line99&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Args should have a space after a comma&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 101&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line101&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line101&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should be on prev line&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 107&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line107&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line107&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Empty line&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 109&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line109&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line109&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Empty line&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 123&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line123&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36019#file36019line123&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Prev line&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java, line 207&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36021#file36021line207&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36021#file36021line207&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Limit lines to 80 char&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     hookName isn&apos;t used here, do we need it?  Stack trace will point to the method name anyway.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed line length and removed unneeded &quot;hookName&quot; parameter.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/resources/hbase-default.xml, line 729&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36022#file36022line729&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36022#file36022line729&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     As stated above, I think it should be hbase.coprocessor.abortonerror&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 83&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36023#file36023line83&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36023#file36023line83&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should this check the type of exception that&apos;s expected?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Added exception type-checking and comments regarding the NullPointerException (expected: test passes) versus IOException (unexpected: test fails).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java, line 68&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36024#file36024line68&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36024#file36024line68&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Does this really need to be a thread?  Why not just do the put synchronously?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good point; removed thread and simply doing the put synchronously, thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-29 22:42:09, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java, line 85&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/8/?file=36024#file36024line85&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/8/?file=36024#file36024line85&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If the put triggers a RS abort, I think we should be expecting an exception here.  Wouldn&apos;t we want to make sure it&apos;s thrown to notify the client of the error?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As above, if the server is configured to abort (as in this test), then it can&apos;t throw an exception since if it did, it can&apos;t abort.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1667&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1667&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-06 19:08:59, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-06 19:08:59)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 3f60653 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 8ff6e62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 5796413 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13099208" author="jiraposter@reviews.apache.org" created="Wed, 7 Sep 2011 18:54:09 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-02 05:38:49, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 578&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/3/?file=29401#file29401line578&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/3/?file=29401#file29401line578&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I saw in previous comments that this is needed because SortedCopyOnWriteSet doesn&apos;t implement toString().  So why not make SortedCopyOnWriteSet implement toString()?  Seems cleaner to me and more generic/reusable.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Wherever this is implemented, use a StringBuilder to create the string to return, not repeated string concatenation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I ended up removing the toString() implementation from SortedCopyOnWriteSet since I am simply storing the coprocessor names (not the whole CoprocessorEnvironment). Thank you for the StringBuilder suggestion, though.  &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-02 05:38:49, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 594&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/3/?file=29401#file29401line594&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/3/?file=29401#file29401line594&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Awfully long name, maybe just abortServer()?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Shortened to abortServer(); thanks for this.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-02 05:38:49, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java, line 80&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/3/?file=29402#file29402line80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/3/?file=29402#file29402line80&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This and the following method names are awfully long.  It&apos;s just personal preference, but I like to keep things shorter.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Shortened to abortServer() also; thanks.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-02 05:38:49, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/BuggyRegionObserver.java, line 27&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/3/?file=29404#file29404line27&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/3/?file=29404#file29404line27&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Minor nit, but why have this as a separate top-level class?  Seems like it could just be an inner class in TestRegionServerCoprocessorException same way that the BuggyMasterObserver is an inner class in TestMasterCoprocessorException.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Moved to interior of TestRegionServerCoprocessorException.java, thanks.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1261&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1261&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-06 19:08:59, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-06 19:08:59)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 3f60653 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 8ff6e62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 5796413 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13100798" author="jiraposter@reviews.apache.org" created="Thu, 8 Sep 2011 23:48:08 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1805&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1805&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Thanks, Eugene.  Almost there I think!  Just a couple comments on the tests.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment4147&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment4147&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This should default to false.&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment4192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment4192&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Does this need to be a separate thread?  Can the contents of the run() method just be inline in testExceptionFromCoprocessorWhenCreatingTable()?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment4193&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment4193&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do we need this test?  If we&apos;re already doing the same tests in TestMasterObserver, it doesn&apos;t seem like it.  Has anything been added to this method that we need?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment4194&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment4194&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Name should be something like testExceptionDuringPut?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-09-06 19:08:59, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-06 19:08:59)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 3f60653 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 8ff6e62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 5796413 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13106704" author="ekoontz" created="Fri, 16 Sep 2011 18:56:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; will take advantage of the simplification that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4420&quot; title=&quot;MasterObserver preMove() and postMove() should throw IOException instead of UnknownRegionException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4420&quot;&gt;&lt;del&gt;HBASE-4420&lt;/del&gt;&lt;/a&gt; provides, namely, that preMove() and postMove() now throw IOException rather than specifically UnknownRegionException.&lt;/p&gt;</comment>
                            <comment id="13109086" author="jiraposter@reviews.apache.org" created="Tue, 20 Sep 2011 23:34:08 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-09-20 23:33:04.074472)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;-Address Gary&apos;s last review:&lt;br/&gt;
 -Set hbase.coprocessor.abortonerror defaults to false.&lt;br/&gt;
 -Remove separate threads in tests where possible.&lt;br/&gt;
 -Remove redundant testStarted() : it does not differ from the same test in TestMasterObserver.&lt;br/&gt;
 -fix name of test&lt;/p&gt;

&lt;p&gt;-Simplified patch as allowed by Gary&apos;s committal of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4420&quot; title=&quot;MasterObserver preMove() and postMove() should throw IOException instead of UnknownRegionException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4420&quot;&gt;&lt;del&gt;HBASE-4420&lt;/del&gt;&lt;/a&gt;: MasterObserver&apos;s preMove() and postMove() are now declared to &lt;br/&gt;
throw an IOException now.&lt;/p&gt;

&lt;p&gt;-Split existing two tests: TestRegionServerCoprocessorException.java and TestMasterCoprocessorException.java each into two tests to test new configuration setting of hbase.coprocessor.abortonerror, so four total tests now:&lt;/p&gt;

&lt;p&gt;1. TestRegionServerCoprocessorExceptionWithAbort.java  (hbase.coprocessor.abortonerror=true)&lt;br/&gt;
2. TestRegionServerCoprocessorExceptionWithRemove.java (hbase.coprocessor.abortonerror=false)&lt;br/&gt;
3. TestRegionServerCoprocessorExceptionWithAbort.java  (hbase.coprocessor.abortonerror=true)&lt;br/&gt;
4. TestRegionServerCoprocessorExceptionWithRemove.java (hbase.coprocessor.abortonerror=false)&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 06bf814 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java 0c95017 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java bff1f6c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a6cf6a8 &lt;br/&gt;
  src/main/resources/hbase-default.xml 2c8f44b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13109087" author="jiraposter@reviews.apache.org" created="Tue, 20 Sep 2011 23:34:10 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-08 23:46:17, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java, line 638&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/9/?file=38128#file38128line638&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/9/?file=38128#file38128line638&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This should default to false.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed; please see latest patch.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-08 23:46:17, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 67&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/9/?file=38134#file38134line67&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/9/?file=38134#file38134line67&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Does this need to be a separate thread?  Can the contents of the run() method just be inline in testExceptionFromCoprocessorWhenCreatingTable()?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In my testing, if the server (master or regionserver) aborts, it seems like the client becomes unresponsive and the test times out and fails. However, if I create a separate thread, the main thread can terminate properly and the test passes. &lt;/p&gt;

&lt;p&gt;I removed the separate Threads for the two tests where an abort is not expected (TestMasterCoprocessorExceptionWithRemove.java and TestRegionServerExceptionWithRemove.java).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-08 23:46:17, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java, line 156&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/9/?file=38134#file38134line156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/9/?file=38134#file38134line156&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do we need this test?  If we&apos;re already doing the same tests in TestMasterObserver, it doesn&apos;t seem like it.  Has anything been added to this method that we need?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are right; removed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-08 23:46:17, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java, line 89&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/diff/9/?file=38135#file38135line89&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff/9/?file=38135#file38135line89&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Name should be something like testExceptionDuringPut?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Renamed; thanks.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review1805&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review1805&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-06 19:08:59, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-06 19:08:59)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 3f60653 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java aa930f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 8ff6e62 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java 5796413 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorException.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13109810" author="jiraposter@reviews.apache.org" created="Wed, 21 Sep 2011 19:29:09 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review2007&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review2007&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Looks good to me, assuming the added tests all pass.  There are some tweaks we could make to the tests, but I could do that on commit, if that&apos;s okay with you.&lt;/p&gt;


&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment4526&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment4526&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I would use BuggyMasterObserver.class.getName().  It&apos;ll survive any class renames without having the manually edit the string here.&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment4525&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment4525&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    can just use fail() here&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment4527&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment4527&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Might be easier to just check HRegionServer.isAborted() on the RS hosting the table region, now that we have that?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/969/#comment4528&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#comment4528&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Could probably also just check HRegionServer.isAborted() here instead of doing the ZK watching?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-09-20 23:33:04, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-20 23:33:04)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 06bf814 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java 0c95017 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java bff1f6c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a6cf6a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13109822" author="jiraposter@reviews.apache.org" created="Wed, 21 Sep 2011 19:51:09 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-21 19:29:12, Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Looks good to me, assuming the added tests all pass.  There are some tweaks we could make to the tests, but I could do that on commit, if that&apos;s okay with you.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Gary, please feel free to make the changes to the tests on commit.&lt;br/&gt;
-Eugene&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Eugene&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review2007&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review2007&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-20 23:33:04, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-20 23:33:04)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 06bf814 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java 0c95017 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java bff1f6c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a6cf6a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13113098" author="jiraposter@reviews.apache.org" created="Fri, 23 Sep 2011 01:39:26 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-09-23 01:39:08.251129)&lt;/p&gt;


&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Updated patch that addresses Gary&apos;s remarks:&lt;br/&gt;
-use fail() rather than assertFalse(..,true);&lt;br/&gt;
-use RegionServer.isAborted() rather than Zookeeper Watches.&lt;br/&gt;
-use X.class.getName() to get coprocessor&apos;s names to improve test robustness.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;

&lt;p&gt;The general gist here is to wrap each of &lt;/p&gt;
{Master,RegionServer}
&lt;p&gt;CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;

&lt;p&gt;&quot;try &lt;/p&gt;
{ ... }
&lt;p&gt; catch (Throwable e) &lt;/p&gt;
{ handleCoprocessorThrowable(e) }
&lt;p&gt;&quot;&lt;/p&gt;

&lt;p&gt;block. &lt;/p&gt;

&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;

&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 06bf814 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java 0c95017 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java bff1f6c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a6cf6a8 &lt;br/&gt;
  src/main/resources/hbase-default.xml 2c8f44b &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;patch includes two tests:&lt;/p&gt;

&lt;p&gt;TestMasterCoprocessorException.java&lt;br/&gt;
TestRegionServerCoprocessorException.java&lt;/p&gt;

&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Eugene&lt;/p&gt;
</comment>
                            <comment id="13113654" author="jiraposter@reviews.apache.org" created="Fri, 23 Sep 2011 18:49:25 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/969/#review2046&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/#review2046&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Latest patch looks good.  Thanks for the test changes Eugene.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-09-23 01:39:08, Eugene Koontz wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/969/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-23 01:39:08)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase, Gary Helmling and Mingjie Lai.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The general gist here is to wrap each of {Master,RegionServer}CoprocessorHost&apos;s coprocessor call inside a &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot;try { ... } catch (Throwable e) { handleCoprocessorThrowable(e) }&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;block. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;handleCoprocessorThrowable() is responsible for either passing &apos;e&apos; along to the client (if &apos;e&apos; is an IOException) or, otherwise, aborting the service (Regionserver or Master).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The abort message contains a list of the loaded coprocessors for crash analysis.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4014&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java 4e492e1 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/HMaster.java 06bf814 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java 0c95017 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java bff1f6c &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java a6cf6a8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/969/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/969/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;patch includes two tests:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestMasterCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestRegionServerCoprocessorException.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;both tests pass in my build environment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Eugene&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13113888" author="yuzhihong@gmail.com" created="Sat, 24 Sep 2011 04:02:04 +0000"  >&lt;p&gt;From Eugene:&lt;br/&gt;
Every test passed except TestLogRolling:&lt;br/&gt;
&lt;a href=&quot;http://pastebin.com/wcsRnnhW&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pastebin.com/wcsRnnhW&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TestLogRolling.testLogRollOnPipelineRestart failed in TRUNK build 2246.&lt;/p&gt;

&lt;p&gt;So there was no regression.&lt;/p&gt;

&lt;p&gt;+1 on latest patch.&lt;/p&gt;</comment>
                            <comment id="13113989" author="hudson" created="Sat, 24 Sep 2011 14:41:37 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2250 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2250/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2250/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; Coprocessors: Flag the presence of coprocessors in logged exceptions(Eugene Koontz)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13114010" author="hudson" created="Sat, 24 Sep 2011 17:06:39 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2251 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2251/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2251/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; revert due to a failed test&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13114040" author="streamy" created="Sat, 24 Sep 2011 18:36:34 +0000"  >&lt;p&gt;What&apos;s the status of this?&lt;/p&gt;</comment>
                            <comment id="13114125" author="yuzhihong@gmail.com" created="Sun, 25 Sep 2011 03:51:15 +0000"  >&lt;p&gt;Since Jonathan asked, I felt that I must give an answer on the same day.&lt;br/&gt;
Here is my analysis for why TestRegionServerCoprocessorExceptionWithAbort failed occasionally.&lt;/p&gt;

&lt;p&gt;The following call would create 25 regions for the test table:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    TEST_UTIL.createMultiRegions(table, TEST_FAMILY);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If we look at HBaseTestingUtility:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public static final byte[][] KEYS = {
    HConstants.EMPTY_BYTE_ARRAY, Bytes.toBytes(&quot;bbb&quot;),
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can see that the row in the test&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;      final byte[] ROW = Bytes.toBytes(&quot;bbb&quot;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;actually doesn&apos;t belong to the first region.&lt;/p&gt;

&lt;p&gt;This means regionServer which we were waiting for may not host the region where NPE happened.&lt;br/&gt;
I modified the above line slightly and the test passed reliably:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;      final byte[] ROW = Bytes.toBytes(&quot;aaa&quot;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13114160" author="ghelmling" created="Sun, 25 Sep 2011 06:35:33 +0000"  >&lt;p&gt;Ted, I feel the better option is to not call createMultiRegions() and to not bother to launch multiple region servers in the mini cluster for this test.  There is nothing in it that requires them.&lt;/p&gt;

&lt;p&gt;I have been running all 4 test with adjustments repeatedly today.  I will commit.&lt;/p&gt;</comment>
                            <comment id="13114163" author="hudson" created="Sun, 25 Sep 2011 06:42:58 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2255 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2255/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2255/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;  Coprocessors: Flag the presence of coprocessors in logged&lt;br/&gt;
               exceptions (Eugene Koontz)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13114168" author="yuzhihong@gmail.com" created="Sun, 25 Sep 2011 07:14:50 +0000"  >&lt;p&gt;@Gary:&lt;br/&gt;
When I discovered why the original TestRegionServerCoprocessorExceptionWithAbort failed indeterministically, I thought about the same idea. However, I kept the formation that Eugene created and used the approach described above.&lt;br/&gt;
In current formation, we could have asserted that the other region server was left intact.&lt;/p&gt;

&lt;p&gt;However, I fully respect your decision.&lt;br/&gt;
Let me bring 0.92 on par with TRUNK. You can determine the final formation.&lt;/p&gt;</comment>
                            <comment id="13114212" author="hudson" created="Sun, 25 Sep 2011 10:54:44 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #19 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/19/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/19/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; is marked as Improvement&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt;  Coprocessors: Flag the presence of coprocessors in logged&lt;br/&gt;
               exceptions (Eugene Koontz)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/coprocessor/TestMasterCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13114234" author="hudson" created="Sun, 25 Sep 2011 12:53:27 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2257 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2257/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2257/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; is marked as Improvement&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13114405" author="ghelmling" created="Mon, 26 Sep 2011 00:11:31 +0000"  >&lt;p&gt;@Ted,&lt;/p&gt;

&lt;p&gt;I didn&apos;t realize in my last comment that you had already committed this to trunk again.  Please note when you perform commits in JIRA so we can all be on the same page.  Please also attach the patches that you committed.&lt;/p&gt;

&lt;p&gt;If all tests are passing now, can we close this issue?  I think it&apos;s seen enough changes.  If we want to make further test improvements, I think those should go in a separate JIRA.&lt;/p&gt;</comment>
                            <comment id="13114418" author="yuzhihong@gmail.com" created="Mon, 26 Sep 2011 00:48:57 +0000"  >&lt;p&gt;This was the patch I applied.&lt;br/&gt;
I only changed 6 characters based on Eugene&apos;s last patch.&lt;/p&gt;</comment>
                            <comment id="13114419" author="yuzhihong@gmail.com" created="Mon, 26 Sep 2011 00:50:05 +0000"  >&lt;p&gt;Thanks for the patch Eugene.&lt;/p&gt;

&lt;p&gt;Thanks for the review Gary.&lt;/p&gt;</comment>
                            <comment id="13114422" author="streamy" created="Mon, 26 Sep 2011 01:03:56 +0000"  >&lt;p&gt;Ted, why is this JIRA scattered over so many commits?  And the commit message is a non-standard format (the first line is: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4014&quot; title=&quot;Coprocessors: Flag the presence of coprocessors in logged exceptions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4014&quot;&gt;&lt;del&gt;HBASE-4014&lt;/del&gt;&lt;/a&gt; is marked as Improvement).  I&apos;ve been trying to build some tools to help keep track of and in sync with the Apache repos but this kind of stuff makes it very difficult.&lt;/p&gt;</comment>
                            <comment id="13114426" author="yuzhihong@gmail.com" created="Mon, 26 Sep 2011 01:14:00 +0000"  >&lt;p&gt;@Jonathan:&lt;br/&gt;
I guess you have seen the entry for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4449&quot; title=&quot;LoadIncrementalHFiles should be able to handle CFs with blooms&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4449&quot;&gt;&lt;del&gt;HBASE-4449&lt;/del&gt;&lt;/a&gt; here:&lt;br/&gt;
&lt;a href=&quot;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/2247/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/2247/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Was that of the standard form ?&lt;/p&gt;

&lt;p&gt;For the line you mentioned above, I initially put 4014 in the wrong category. I will be more careful next time.&lt;/p&gt;</comment>
                            <comment id="15016078" author="lars_francke" created="Fri, 20 Nov 2015 11:53:50 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12529164">HBASE-4690</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12523378">HBASE-4420</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12532084">HBASE-4832</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12496429" name="4014.final" size="79517" author="yuzhihong@gmail.com" created="Mon, 26 Sep 2011 00:48:57 +0000"/>
                            <attachment id="12489795" name="HBASE-4014.patch" size="67032" author="ekoontz" created="Tue, 9 Aug 2011 01:42:13 +0000"/>
                            <attachment id="12486513" name="HBASE-4014.patch" size="73823" author="ekoontz" created="Thu, 14 Jul 2011 21:30:00 +0000"/>
                            <attachment id="12486509" name="HBASE-4014.patch" size="73778" author="ekoontz" created="Thu, 14 Jul 2011 21:18:23 +0000"/>
                            <attachment id="12483992" name="HBASE-4014.patch" size="67901" author="ekoontz" created="Mon, 27 Jun 2011 19:39:27 +0000"/>
                            <attachment id="12483861" name="HBASE-4014.patch" size="66650" author="ekoontz" created="Sun, 26 Jun 2011 18:01:24 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 26 Jun 2011 18:00:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3389</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hozb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101309</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>