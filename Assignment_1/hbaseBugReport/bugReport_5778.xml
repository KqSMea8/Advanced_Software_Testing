<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:30:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5778/HBASE-5778.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5778] Fix HLog compression&apos;s incompatibilities</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5778</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I ran some tests to verify if WAL compression should be turned on by default.&lt;/p&gt;

&lt;p&gt;For a use case where it&apos;s not very useful (values two order of magnitude bigger than the keys), the insert time wasn&apos;t different and the CPU usage 15% higher (150% CPU usage VS 130% when not compressing the WAL).&lt;/p&gt;

&lt;p&gt;When values are smaller than the keys, I saw a 38% improvement for the insert run time and CPU usage was 33% higher (600% CPU usage VS 450%). I&apos;m not sure WAL compression accounts for all the additional CPU usage, it might just be that we&apos;re able to insert faster and we spend more time in the MemStore per second (because our MemStores are bad when they contain tens of thousands of values).&lt;/p&gt;

&lt;p&gt;Those are two extremes, but it shows that for the price of some CPU we can save a lot. My machines have 2 quads with HT, so I still had a lot of idle CPUs.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12550753">HBASE-5778</key>
            <summary>Fix HLog compression&apos;s incompatibilities</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jdcryans">Jean-Daniel Cryans</assignee>
                                    <reporter username="jdcryans">Jean-Daniel Cryans</reporter>
                        <labels>
                    </labels>
                <created>Thu, 12 Apr 2012 22:17:36 +0000</created>
                <updated>Wed, 4 Sep 2013 00:14:50 +0000</updated>
                            <resolved>Fri, 21 Dec 2012 05:59:28 +0000</resolved>
                                                    <fixVersion>0.94.4</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>16</watches>
                                                                <comments>
                            <comment id="13252922" author="jdcryans" created="Thu, 12 Apr 2012 22:20:18 +0000"  >&lt;p&gt;I believe only this line is needed.&lt;/p&gt;</comment>
                            <comment id="13252924" author="tlipcon" created="Thu, 12 Apr 2012 22:22:17 +0000"  >&lt;p&gt;Do we have this in hbase-default.xml as well? if not, +1&lt;/p&gt;</comment>
                            <comment id="13252927" author="jdcryans" created="Thu, 12 Apr 2012 22:25:47 +0000"  >&lt;p&gt;It&apos;s not in there, do we want it since we turn it on? Or do we act like we always had it? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13252939" author="lhofhansl" created="Thu, 12 Apr 2012 22:39:41 +0000"  >&lt;p&gt;+1 on patch&lt;/p&gt;</comment>
                            <comment id="13252947" author="stack" created="Thu, 12 Apr 2012 22:57:27 +0000"  >&lt;p&gt;+1  Add release note w/ how to turn it off&lt;/p&gt;</comment>
                            <comment id="13252976" author="hudson" created="Thu, 12 Apr 2012 23:43:36 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2749 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2749/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2749/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;  Turn on WAL compression by default (Revision 1325566)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13253001" author="hudson" created="Fri, 13 Apr 2012 00:11:55 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #109 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/109/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/109/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;  Turn on WAL compression by default (Revision 1325567)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13253053" author="lhofhansl" created="Fri, 13 Apr 2012 01:53:27 +0000"  >&lt;p&gt;I see a bunch of suspicious test failures now:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.NegativeArraySizeException
	at org.apache.hadoop.hbase.regionserver.wal.HLogKey.readFields(HLogKey.java:305)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13253058" author="lhofhansl" created="Fri, 13 Apr 2012 02:01:51 +0000"  >&lt;p&gt;Yeah... The failures in TestHLog are because of this. Need to rollback or figure out what the problem is. Probably test related.&lt;/p&gt;</comment>
                            <comment id="13253061" author="lhofhansl" created="Fri, 13 Apr 2012 02:14:44 +0000"  >&lt;p&gt;TestHLog.testAppendClose() uses this to read back the WALEdits:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// Make sure you can read all the content
&lt;/span&gt;    SequenceFile.Reader reader
      = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SequenceFile.Reader(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.fs, walPath, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.conf);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Well, dah, that does not work.&lt;/p&gt;</comment>
                            <comment id="13253063" author="lhofhansl" created="Fri, 13 Apr 2012 02:17:57 +0000"  >&lt;p&gt;Then there&apos;s FaultySequenceFileLogReader, which does not do the right thing.&lt;/p&gt;</comment>
                            <comment id="13253065" author="lhofhansl" created="Fri, 13 Apr 2012 02:25:40 +0000"  >&lt;p&gt;Have a fix for TestHLog, working on TestHLogSplit&lt;/p&gt;</comment>
                            <comment id="13253087" author="yuzhihong@gmail.com" created="Fri, 13 Apr 2012 03:55:41 +0000"  >&lt;p&gt;Is this what you had for TestHLog ?&lt;/p&gt;</comment>
                            <comment id="13253091" author="lhofhansl" created="Fri, 13 Apr 2012 04:02:00 +0000"  >&lt;p&gt;Similar... There&apos;re some other issues. I&apos;ll have a patch soon.&lt;/p&gt;</comment>
                            <comment id="13253092" author="lhofhansl" created="Fri, 13 Apr 2012 04:06:44 +0000"  >&lt;p&gt;Fixes the issues I found. It&apos;s not too surprising that a compressed HLog is a bit more suseptible to corruption as there is less redundancy.&lt;/p&gt;</comment>
                            <comment id="13253093" author="lhofhansl" created="Fri, 13 Apr 2012 04:07:27 +0000"  >&lt;p&gt;Running through HadoopQA to see if there are other problems left.&lt;/p&gt;</comment>
                            <comment id="13253107" author="yuzhihong@gmail.com" created="Fri, 13 Apr 2012 04:53:47 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IndexOutOfBoundsException iobe) {
+        &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; can happen with a corrupted file, fall through
&lt;/span&gt;+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we should note down the cause of failure to retrieve dictionary entry and provide clearer message in the IOE below:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (entry == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
         &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Missing dictionary entry &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; index &quot;&lt;/span&gt;
             + dictIdx);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13253110" author="hadoopqa" created="Fri, 13 Apr 2012 04:57:22 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522527/5778-addendum.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522527/5778-addendum.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMultiSlaveReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMasterReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1507//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1507//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1507//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1507//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1507//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1507//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13253118" author="lhofhansl" created="Fri, 13 Apr 2012 05:16:30 +0000"  >&lt;p&gt;mvn failed with an OOME. Let&apos;s revert this change, until we track these issues down.&lt;/p&gt;</comment>
                            <comment id="13253127" author="yuzhihong@gmail.com" created="Fri, 13 Apr 2012 05:32:29 +0000"  >&lt;p&gt;The remaining issue is about how the replication sink correctly decompresses WAL.&lt;br/&gt;
From test output, I saw:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.io.EOFException
  at java.io.DataInputStream.readFully(DataInputStream.java:180)
  at org.apache.hadoop.hbase.KeyValue.readFields(KeyValue.java:2243)
  at org.apache.hadoop.hbase.KeyValue.readFields(KeyValue.java:2249)
  at org.apache.hadoop.hbase.regionserver.wal.WALEdit.readFields(WALEdit.java:129)
  at org.apache.hadoop.hbase.regionserver.wal.HLog$Entry.readFields(HLog.java:1700)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For replication sink, there is no CompressionContext in HLog$Entry which can be used to perform decompression.&lt;/p&gt;

&lt;p&gt;I agree the change should be reverted.&lt;/p&gt;</comment>
                            <comment id="13253138" author="hudson" created="Fri, 13 Apr 2012 05:54:44 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #169 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/169/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/169/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;  Turn on WAL compression by default (Revision 1325566)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13253454" author="stack" created="Fri, 13 Apr 2012 15:26:05 +0000"  >&lt;p&gt;I backed it out of 0.94 and trunk.&lt;/p&gt;</comment>
                            <comment id="13253522" author="hudson" created="Fri, 13 Apr 2012 16:37:21 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2752 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2752/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2752/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Turn on WAL compression by default (Revision 1325801)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13253528" author="hudson" created="Fri, 13 Apr 2012 16:44:09 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #113 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/113/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/113/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Turn on WAL compression by default: REVERT (Revision 1325803)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13253529" author="jdcryans" created="Fri, 13 Apr 2012 16:44:43 +0000"  >&lt;p&gt;Sorry for all the trouble guys, I thought the feature was more tested than that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13253540" author="lhofhansl" created="Fri, 13 Apr 2012 16:54:52 +0000"  >&lt;p&gt;NP... I thought it was ready.&lt;br/&gt;
I am surprised that ReplicationSink has a problem, as it is the ReplicationSource that reads from the HLog.&lt;/p&gt;</comment>
                            <comment id="13253546" author="zhihyu@ebaysf.com" created="Fri, 13 Apr 2012 17:05:13 +0000"  >&lt;p&gt;In the release notes for 0.94.0, we need to note that WAL compression must be disabled in order for replication to work.&lt;/p&gt;</comment>
                            <comment id="13253588" author="lhofhansl" created="Fri, 13 Apr 2012 18:04:41 +0000"  >&lt;p&gt;I still don&apos;t understand why this is a problem with replication. J-D do you have any insights?&lt;/p&gt;</comment>
                            <comment id="13253611" author="jdcryans" created="Fri, 13 Apr 2012 18:29:05 +0000"  >&lt;p&gt;I haven&apos;t had a look, but I&apos;d guess that if we&apos;re reading files that are being written then we don&apos;t have access to the dict.&lt;/p&gt;</comment>
                            <comment id="13253614" author="lhofhansl" created="Fri, 13 Apr 2012 18:31:31 +0000"  >&lt;p&gt;Oh I see. The KVs are only decompressed when read.&lt;/p&gt;</comment>
                            <comment id="13253615" author="hudson" created="Fri, 13 Apr 2012 18:32:50 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #9 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/9/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/9/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Turn on WAL compression by default: REVERT (Revision 1325803)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;  Turn on WAL compression by default (Revision 1325567)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13253636" author="hadoopqa" created="Fri, 13 Apr 2012 18:39:55 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522527/5778-addendum.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522527/5778-addendum.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestWALPlayer&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestClassLoading&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1515//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1515//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1515//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1515//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1515//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1515//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13253750" author="hudson" created="Fri, 13 Apr 2012 21:06:56 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #170 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/170/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/170/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Turn on WAL compression by default (Revision 1325801)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13253995" author="lhofhansl" created="Sat, 14 Apr 2012 05:47:15 +0000"  >&lt;p&gt;This fundamentally break replication.&lt;/p&gt;

&lt;p&gt;The problem above is actually that the HLogKey and WALEdit after being read from a compressed HLog have the compression context set, and hence this will be used to compress them when sent over the wire to the sink. Of course the sink does not know how to uncompress.&lt;/p&gt;

&lt;p&gt;So I just set the compression context to null in ReplicationSource.&lt;/p&gt;

&lt;p&gt;With that hurdle out of the way, I find that seeking to a specific position in the HLog (the position stored in ZK) does not work, because the dictionary is not build up (compressed HLogs always need to read from the beginning).&lt;/p&gt;

&lt;p&gt;Not sure how to fix the 2nd part.&lt;/p&gt;</comment>
                            <comment id="13254136" author="zhihyu@ebaysf.com" created="Sat, 14 Apr 2012 15:32:24 +0000"  >&lt;p&gt;I think ReplicationSource now has the additional responsibility of shipping dictionaries to replication sink.&lt;br/&gt;
We just need to find a clean way of exposing SequenceFileLogWriter.compressionContext to ReplicationSource.&lt;/p&gt;</comment>
                            <comment id="13254204" author="lhofhansl" created="Sat, 14 Apr 2012 21:21:18 +0000"  >&lt;p&gt;@Ted: Unfortunately it is not as simple as that. As I tried to explain above, the ReplicationSource reads from the WAL files at offsets that are stored in ZK. This does not work any longer, as you can no longer start reading the WAL at an offset. The files need to be read from the beginning to build up the dictionary.&lt;/p&gt;</comment>
                            <comment id="13255203" author="jdcryans" created="Tue, 17 Apr 2012 00:15:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;The files need to be read from the beginning to build up the dictionary.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Aren&apos;t the dictionary entries spread out in the log? If so, it should be possible to slowly build it up as we tail the log (that&apos;s another feature that&apos;s broken, tailing).&lt;/p&gt;

&lt;p&gt;Then if you replay so WAL from another region server, for the first log you&apos;d read from the beginning in order to build up the dict then when you hit the offset that&apos;s in ZK you start shipping.&lt;/p&gt;</comment>
                            <comment id="13255214" author="lhofhansl" created="Tue, 17 Apr 2012 00:37:50 +0000"  >&lt;p&gt;If we could tail the logs it would work. We just cannot seek into an HLog in the middle and start reading from it.&lt;/p&gt;</comment>
                            <comment id="13255225" author="jdcryans" created="Tue, 17 Apr 2012 00:49:08 +0000"  >&lt;p&gt;I think everything is fine then &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13255230" author="lhofhansl" created="Tue, 17 Apr 2012 00:55:16 +0000"  >&lt;p&gt;Hmm... Then that does not explain what I saw. I saw the ReplicationSource trying to read from a position in the file (indicated by ZK) and then the read failing because the dictionary was not built up.&lt;/p&gt;</comment>
                            <comment id="13277939" author="lhofhansl" created="Thu, 17 May 2012 16:25:39 +0000"  >&lt;p&gt;Unscheduling for now.&lt;/p&gt;</comment>
                            <comment id="13279927" author="li" created="Mon, 21 May 2012 02:26:58 +0000"  >&lt;p&gt;How far can replication lag behind our writes? If we can guarantee that an entry won&apos;t be evicted before replication, we can simply consult the main dictionary to decompress it.&lt;/p&gt;</comment>
                            <comment id="13279939" author="lhofhansl" created="Mon, 21 May 2012 03:21:26 +0000"  >&lt;p&gt;We do that guarantee (J-D, please correct me if I&apos;m wrong).&lt;br/&gt;
The problem - I think - is that replication directly seeks to the position indicated in ZK and starts playing logs from there. That would not longer be possible, instead we&apos;d have to start from the beginning of the WAL file and scan all the way to the position that we want to replicate.&lt;br/&gt;
Again, I think that is what the problem is, J-D will probably know more here.&lt;/p&gt;</comment>
                            <comment id="13280311" author="jdcryans" created="Mon, 21 May 2012 17:54:59 +0000"  >&lt;p&gt;I don&apos;t see how in theory the seek can be a problem when tail&apos;ing a log from the start since we read the whole file. The only case where it will need to be handled differently is when a region server needs to replicate a log that another RS started working on but died. In that case we can just read the file up to the last seek position but don&apos;t replicate anything.&lt;/p&gt;</comment>
                            <comment id="13492873" author="jdcryans" created="Thu, 8 Nov 2012 01:15:05 +0000"  >&lt;p&gt;Attaching a first pass on making replication and HLog compression best buddies (here against 0.94).&lt;/p&gt;

&lt;p&gt;Most of the changes are leaks since I need the context all over the place.&lt;/p&gt;

&lt;p&gt;The meatier part is keeping track of the context in ReplicationSource. Basically we get a new one the first time we read the HLog then we just keep passing it back. I made sure to set the context to null when sending &lt;tt&gt;WALEdits&lt;/tt&gt; to the sink.&lt;/p&gt;

&lt;p&gt;The second part was managing the missing dict entries when recovering a log with a last known position. I could think of a few solutions:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Reset the last known position back to 0 and resend all the edits. Basically this ignores the problem.&lt;/li&gt;
	&lt;li&gt;Add a &quot;fast forward&quot; method in the code to just read the file up to the last known position.&lt;/li&gt;
	&lt;li&gt;Introduce new checks in order to read the log from 0 (using the normal code path) but then skip all the entries until we get to the last known position.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I implemented the last one. It adds a lot of new things to track which I don&apos;t like but it should be &quot;correct&quot;.&lt;/p&gt;

&lt;p&gt;I also added a new test which is just enabling WAL compression on TestReplication&apos;s master cluster. Everything passes.&lt;/p&gt;</comment>
                            <comment id="13492967" author="yuzhihong@gmail.com" created="Thu, 8 Nov 2012 05:30:58 +0000"  >&lt;p&gt;Is the goal to turn on WAL compression by default ?&lt;br/&gt;
If so, do you plan to address the test failure mentioned @ 13/Apr/12 02:53 ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testAppendClose(org.apache.hadoop.hbase.regionserver.wal.TestHLog)  Time elapsed: 0.104 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.lang.NegativeArraySizeException
  at org.apache.hadoop.hbase.regionserver.wal.HLogKey.readFields(HLogKey.java:303)
  at org.apache.hadoop.io.SequenceFile$Reader.next(SequenceFile.java:1894)
  at org.apache.hadoop.io.SequenceFile$Reader.next(SequenceFile.java:1934)
  at org.apache.hadoop.hbase.regionserver.wal.TestHLog.testAppendClose(TestHLog.java:483)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13493434" author="jdcryans" created="Thu, 8 Nov 2012 19:36:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;If so, do you plan to address the test failure mentioned @ 13/Apr/12 02:53 ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Eventually I&apos;d like to turn it on by default but I was mostly interested in making replication work first.&lt;/p&gt;

&lt;p&gt;So I took a look at testAppendClose and it was a simple matter of changing the reader to use the one that HBase provides. In that regard I&apos;d say that the test was doing something wrong. The effect was that the SF reader, knowing nothing about compression, couldn&apos;t read compressed HLog entries.&lt;/p&gt;

&lt;p&gt;This v2 patch fixes the test for when WAL compression is enabled.&lt;/p&gt;</comment>
                            <comment id="13493453" author="stack" created="Thu, 8 Nov 2012 19:54:42 +0000"  >&lt;p&gt;Adding compression context to the general HLog Interface seems incorrect to me.  This kinda of thing will not make sense for all implementations of HLog.   We are going against the effort which tries to turn HLog into an Interface with this patch as is.&lt;/p&gt;

&lt;p&gt;Ditto on ReplicationSource having to know anything about HLog compression, carrying compression context (This seems &apos;off&apos; having to do this in ReplicationSource --&amp;gt; +import org.apache.hadoop.hbase.regionserver.wal.CompressionContext&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.  What happens if HLog has a different kind of compression than our current type?  All will break?&lt;/p&gt;

&lt;p&gt;This seems wrong having to do this over in ReplicationSource:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;// If we&apos;re compressing logs and the oldest recovered log&apos;s last position is greater
&lt;/span&gt;+        &lt;span class=&quot;code-comment&quot;&gt;// than 0, we need to rebuild the dictionary up to that point without replicating
&lt;/span&gt;+        &lt;span class=&quot;code-comment&quot;&gt;// the edits again. The rebuilding part is simply done by reading the log.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Why can&apos;t the internal implementation do the skipping if dictionary is empty and we are at an offset &amp;gt; 0?&lt;/p&gt;

&lt;p&gt;Rather than passing compression context to SequenceFileLogReader, can we not have a CompressedSequenceLogReader and internally it manages compression contexts not letting them outside of CSLR?&lt;/p&gt;</comment>
                            <comment id="13495958" author="jdcryans" created="Tue, 13 Nov 2012 04:56:15 +0000"  >&lt;p&gt;Second pass, probably a stepping stone.&lt;/p&gt;

&lt;p&gt;Adds a &lt;tt&gt;ReplicationHLogReader&lt;/tt&gt; that hides all the dirtiness from HLog and its compression functionality. Right now it&apos;s only a dumb extraction of code from &lt;tt&gt;ReplicationSource&lt;/tt&gt; and it doesn&apos;t take care of any exception handling. It also has weird semantics like finishCurrentFile not closing the reader.&lt;/p&gt;

&lt;p&gt;Still passes the tests.&lt;/p&gt;</comment>
                            <comment id="13495959" author="jdcryans" created="Tue, 13 Nov 2012 04:58:46 +0000"  >&lt;p&gt;Attaching a patch that includes the new files, doh.&lt;/p&gt;</comment>
                            <comment id="13497443" author="stack" created="Wed, 14 Nov 2012 21:04:49 +0000"  >&lt;p&gt;This is better.  Here&apos;s some comments:&lt;/p&gt;

&lt;p&gt;Does CompressionContext class have to be public?  Can it stay pkg private?  You&apos;ll have to move your new class into wal package but that seems fine to me.&lt;/p&gt;

&lt;p&gt;Does the base Reader interface have to know about a compression context?  Can this not be internal to the implementation?&lt;/p&gt;

&lt;p&gt;You call it ReplicationHLogReader but is it a replication only class?  If so, it does not belong in regionserver package but over in replication package.&lt;/p&gt;

&lt;p&gt;My sense though is that this is a generally useful WAL reader?  One that can do compressed or non-compressed WAL?  One that can be used by replication but also by fellas who want to index hbase, etc.&lt;/p&gt;

&lt;p&gt;Missing a license&lt;/p&gt;

&lt;p&gt;Can it be in the wal package?  Then don&apos;t have to open up so much of HLog?&lt;/p&gt;

&lt;p&gt;Its unfortunate that you can&apos;t tell its a compressed wal from reading say some magic or metadata at the head of the file.  It seems a bit broke consulting configuration.&lt;/p&gt;

&lt;p&gt;Yeah, why can&apos;t an implementation of HLog.Reader manage the compression context internally?  Why it have to be out here in this ReplicationHLogReader class?  Afterall, isn&apos;t the dictionary reconstructed on read?  You don&apos;t save it around?&lt;/p&gt;

&lt;p&gt;So, a HLog.ReaderFactory that looks at configuration and returns a HLog.Reader that either does compressed or not by looking at configs?&lt;/p&gt;

&lt;p&gt;Is this right:&lt;/p&gt;

&lt;p&gt;+    if (entry != null) {&lt;br/&gt;
+      entry.setCompressionContext(null);&lt;/p&gt;

</comment>
                            <comment id="13497528" author="jdcryans" created="Wed, 14 Nov 2012 22:16:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;Does CompressionContext class have to be public? Can it stay pkg private? You&apos;ll have to move your new class into wal package but that seems fine to me.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;My sense though is that this is a generally useful WAL reader? One that can do compressed or non-compressed WAL? One that can be used by replication but also by fellas who want to index hbase, etc.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Can it be in the wal package? Then don&apos;t have to open up so much of HLog?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;re right that it can be a generally useful WAL reader, for users that need to be able to seek directly into newly open files without having to scan everything that comes before if compression is on. Right now its API is tailored to replication&apos;s need, we could make it more general but, unless we have another use case for it right now, I don&apos;t see the point.&lt;/p&gt;

&lt;p&gt;So I&apos;ll move it to wal and rename the class/methods a bit.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Does the base Reader interface have to know about a compression context? Can this not be internal to the implementation?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Until HDFS lets us tail a file under construction we need to pass the dict back when opening the file.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Yeah, why can&apos;t an implementation of HLog.Reader manage the compression context internally? Why it have to be out here in this ReplicationHLogReader class? Afterall, isn&apos;t the dictionary reconstructed on read? You don&apos;t save it around?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It would be fine if we didn&apos;t have to:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;seek into a file we never read before (after a region server died and we pick up the queue)&lt;/li&gt;
	&lt;li&gt;reopen files in order to tail them (when normally replicating)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We could augment HLog.Reader to support reopening of files, basically push down the stuff is doing ReplicationHLogReader even more. That way we could hide all the dirty details? I haven&apos;t thought about modifying that before.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Missing a license&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh thanks.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Its unfortunate that you can&apos;t tell its a compressed wal from reading say some magic or metadata at the head of the file. It seems a bit broke consulting configuration.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good point, it would simplify a lot of things. HLog compression was implemented at the HLog.Entry level though so technically it&apos;s not even the WAL itself that&apos;s compressed. My next comment shows what that means.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is this right:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, if you keep the compression context in there it&apos;ll replicate the HLog.Entry[] compressed with a dictionary that the slave has no knowledge of. I had this comment in my first patch and I think I forgot to move it over:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;// Setting it to null prevents from sending compressed edits that the sink wouldn&apos;t parse&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13498987" author="jdcryans" created="Fri, 16 Nov 2012 18:15:20 +0000"  >&lt;p&gt;This v4 of the patch pushes down the handling of reopened compressed files down to SequenceFileLogReader. The two main changes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;SequenceFileLogReader needs a way to be reused across multiple open/seek/close cycles. For this I added a method called &quot;reopen&quot;. The name might be confusing.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ReplicationSource used to just bluntly reopen whatever currentPath is, but now this doesn&apos;t work with SFLR being kept around. To fix it I had to add a little dance in ReplicationHLogReader to verify if the path given was different (although still for the same file that was moved to .oldlogs).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The HLog and Replication tests pass.&lt;/p&gt;</comment>
                            <comment id="13527669" author="stack" created="Mon, 10 Dec 2012 00:46:37 +0000"  >&lt;p&gt;reopen may not be too bad.  You have to explain the difference between a reopen and a getReader somewhere... as is there is none.  I don&apos;t think it would take much to explain why you&apos;d reopen (would &apos;reset&apos; be a better name as in &apos;resetting the reader&apos;... as to what it does reseting is implementation specific... If it is a compressed WAL, then we&apos;d reopen the file... if not compressed, the reset is a noop &amp;#8211; right?)?&lt;/p&gt;

&lt;p&gt;ReplicationHLogReader does not implement WAL HLog.Reader interface.  Should it?&lt;/p&gt;

&lt;p&gt;This javadoc is on the wrong method:&lt;/p&gt;

&lt;p&gt;+   * if a positionToSkipTo was specified, this method will take care of seeking there&lt;/p&gt;

&lt;p&gt;I think this patch is almost there.&lt;/p&gt;

</comment>
                            <comment id="13528430" author="jdcryans" created="Mon, 10 Dec 2012 23:31:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;You have to explain the difference between a reopen and a getReader somewhere...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can do.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If it is a compressed WAL, then we&apos;d reopen the file... if not compressed, the reset is a noop&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Getting a new WALReader on a file that&apos;s being written to will let us see the new length, so it&apos;s not a noop. Will add comments on that.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This javadoc is on the wrong method:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually that method used to have a positionToSkipTo paramater but yeah, removing.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think this patch is almost there.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for your patience and guidance.&lt;/p&gt;</comment>
                            <comment id="13528589" author="jdcryans" created="Tue, 11 Dec 2012 01:43:18 +0000"  >&lt;p&gt;Attaching new patch with the following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added the comments that were missing&lt;/li&gt;
	&lt;li&gt;Removed some stale javadoc&lt;/li&gt;
	&lt;li&gt;Renamed ReplicationHLogReader to ReplicationHLogReaderManager since it&apos;s really what it is and it doesn&apos;t need to implement HLog.Reader&lt;/li&gt;
	&lt;li&gt;Fixed an unrelated bug in TestReplication where in testDisableInactivePeer the second cluster was restarted with only 1 RS, it meant that in queueFailover() we couldn&apos;t kill a RS from that cluster. It was dying on IndexArrayOutOfBoundException but never killed the test.&lt;/li&gt;
	&lt;li&gt;Fixed another bug in TestReplication, I saw queueFailover() failing even tho replication was still happening. Strangely the &quot;i&quot; seemed to have 2 different lives. I extracted that variable and verified that it&apos;s working. The test does have a junit-level timeout so while(true) is safe here.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13531371" author="stack" created="Thu, 13 Dec 2012 19:34:07 +0000"  >&lt;p&gt;On commit fix this comment:&lt;/p&gt;

&lt;p&gt;&quot;+   * Get a reader for the WAL. If you are reading from a file that&apos;s being written to&lt;br/&gt;
+   * and need to reopen it multiple times, use &lt;/p&gt;
{@link HLog.Reader#reset()}
&lt;p&gt; instead of this method&lt;br/&gt;
+   * then just seek back to the last known good position.&quot;&lt;/p&gt;

&lt;p&gt;It has too much about the implementation... &lt;/p&gt;

&lt;p&gt;This comment on reset is good... maybe use some of it:&lt;/p&gt;

&lt;p&gt;+    // Resetting the reader lets us see newly added data if the file is being written to&lt;br/&gt;
+    // We also keep the same compressionContext which was previously populated for this file&lt;/p&gt;


&lt;p&gt;Or the stuff in openReader is good.... too... makes sense&lt;/p&gt;

&lt;p&gt;+1 on commit&lt;/p&gt;</comment>
                            <comment id="13532715" author="jdcryans" created="Fri, 14 Dec 2012 22:10:11 +0000"  >&lt;p&gt;Patch I want to commit to 0.94, I refreshed it again and fixed one other thing regarding the ReplicationSource.currentSize attribute because it wasn&apos;t set properly and refreshed.&lt;/p&gt;

&lt;p&gt;The patch for trunk enables HLog compression by default and removes the compression-related tests. I&apos;m currently running all the tests.&lt;/p&gt;</comment>
                            <comment id="13532765" author="yuzhihong@gmail.com" created="Fri, 14 Dec 2012 22:58:54 +0000"  >&lt;p&gt;TestWALReplayCompressed passes with the rest of trunk patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Running org.apache.hadoop.hbase.regionserver.wal.TestWALReplayCompressed
2012-12-14 14:56:28.308 java[85149:1903] Unable to load realm mapping info from SCDynamicStore
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 65.388 sec
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Shall we keep this test ?&lt;/p&gt;</comment>
                            <comment id="13532766" author="jdcryans" created="Fri, 14 Dec 2012 23:02:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;Shall we keep this test ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;TestWALReplayCompressed is TestWALReplay with compression enabled which in trunk will now be default, so it would be redundant to keep it.&lt;/p&gt;</comment>
                            <comment id="13532772" author="yuzhihong@gmail.com" created="Fri, 14 Dec 2012 23:10:31 +0000"  >&lt;p&gt;Thanks for the reminder, J-D.&lt;br/&gt;
My question becomes: shall we introduce TestWALReplayUncompressed ?&lt;br/&gt;
Running the patch on Linux I got:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testSimplePutDelete(org.apache.hadoop.hbase.replication.TestMasterReplication)  Time elapsed: 0.12 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: Waited too much time &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; put replication
  at org.junit.Assert.fail(Assert.java:93)
  at org.apache.hadoop.hbase.replication.TestMasterReplication.putAndWait(TestMasterReplication.java:276)
  at org.apache.hadoop.hbase.replication.TestMasterReplication.testSimplePutDelete(TestMasterReplication.java:213)
queueFailover(org.apache.hadoop.hbase.replication.TestReplication)  Time elapsed: 0.119 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: Waited too much time &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; queueFailover replication. Waited 17533ms.
  at org.junit.Assert.fail(Assert.java:93)
  at org.apache.hadoop.hbase.replication.TestReplication.queueFailover(TestReplication.java:765)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For ReplicationHLogReaderManager.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class ReplicationHLogReaderManager {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please add annotation for audience and stability.&lt;br/&gt;
For readNextAndSetPosition():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Get the next entry, returned and also added in the array
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please phase the above line so that it is easier to understand.&lt;/p&gt;</comment>
                            <comment id="13532783" author="yuzhihong@gmail.com" created="Fri, 14 Dec 2012 23:24:07 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HLog.Entry readNextAndSetPosition(HLog.Entry[] entriesArray, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; currentNbEntries) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
...
+    HLog.Entry entry = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.repLogReader.readNextAndSetPosition(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.entriesArray, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.currentNbEntries);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;nit: line too long.&lt;/p&gt;</comment>
                            <comment id="13532784" author="jdcryans" created="Fri, 14 Dec 2012 23:25:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;My question becomes: shall we introduce TestWALReplayUncompressed&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That makes sense.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Running the patch on Linux I got:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If you change SLEEP_TIME for 1500, does it still fail? If not, that&apos;s the IPV6 problem.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Please add annotation for audience and stability.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, forgot about that.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Please phase the above line so that it is easier to understand.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It works the same way as reader.next, is there anything in particular you think needs more explanation?&lt;/p&gt;</comment>
                            <comment id="13532795" author="yuzhihong@gmail.com" created="Fri, 14 Dec 2012 23:42:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;is there anything in particular you think needs more explanation?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If you change SLEEP_TIME for 1500, does it still fail? If not, that&apos;s the IPV6 problem.&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Running org.apache.hadoop.hbase.replication.TestMasterReplication
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 80.499 sec
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13532840" author="jdcryans" created="Sat, 15 Dec 2012 00:43:31 +0000"  >&lt;p&gt;Turns out the patch fails in trunk with TestHLogSplit on 4 tests. Probably code that is getting messy with the HLog internals and is not expecting compression. Investigating.&lt;/p&gt;</comment>
                            <comment id="13532866" author="jdcryans" created="Sat, 15 Dec 2012 01:29:37 +0000"  >&lt;p&gt;Figured it.&lt;/p&gt;

&lt;p&gt;First there&apos;s Compressor.uncompressIntoArray that doesn&apos;t protect itself against bad dict indexes. It comes out as an IndexOutOfBoundsException and kills log splitting.&lt;/p&gt;

&lt;p&gt;Then there&apos;s FaultySequenceFileLogReader that doesn&apos;t speak compression and basically just needs to pass the compressionContext down to the HLog.Entry else it fails on a NegativeArraySizeException.&lt;/p&gt;

&lt;p&gt;The test passes now with those fixes. Will post new patches later.&lt;/p&gt;</comment>
                            <comment id="13533212" author="stack" created="Sun, 16 Dec 2012 00:00:12 +0000"  >&lt;p&gt;Good finds &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt;. Sounds like WAL compression could do w/ some more testing especially if it becomes default in 0.96.&lt;/p&gt;</comment>
                            <comment id="13535641" author="jdcryans" created="Wed, 19 Dec 2012 04:59:18 +0000"  >&lt;p&gt;New patches for 0.94 and trunk that pass TestHLogSplit and I also added TestHLogSplitCompressed for 0.94. I also incorporated Ted&apos;s comments.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Sounds like WAL compression could do w/ some more testing especially if it becomes default in 0.96.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed although the same can be said of many other features in trunk. May I suggest we commit this then open new jiras if other issues are found during further testing?&lt;/p&gt;</comment>
                            <comment id="13535650" author="ram_krish" created="Wed, 19 Dec 2012 05:22:32 +0000"  >&lt;p&gt;@JD&lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/hbase-dev/201205.mbox/%3C00bc01cd31e6$7caf1320$760d3960$%25vasudevan@huawei.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/hbase-dev/201205.mbox/%3C00bc01cd31e6$7caf1320$760d3960$%25vasudevan@huawei.com%3E&lt;/a&gt;.&lt;br/&gt;
Do we still get the OOME with WAL compression?&lt;/p&gt;</comment>
                            <comment id="13535665" author="stack" created="Wed, 19 Dec 2012 05:36:31 +0000"  >&lt;p&gt;I&apos;m ok w/ committing it but I think it should be off in 0.96.  It looks too flakey to be on by default (thanks for the OOME reminder Ram).&lt;/p&gt;</comment>
                            <comment id="13536029" author="hadoopqa" created="Wed, 19 Dec 2012 15:25:14 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12561641/HBASE-5778-0.94-v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12561641/HBASE-5778-0.94-v7.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3611//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3611//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13536047" author="jdcryans" created="Wed, 19 Dec 2012 15:41:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; I wasn&apos;t aware of it so I guess it&apos;s still an issue. Will open a Jira.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; Ok thanks, also I&apos;ll change the title.&lt;/p&gt;</comment>
                            <comment id="13536479" author="jdcryans" created="Wed, 19 Dec 2012 22:19:23 +0000"  >&lt;p&gt;Changing the title to reflect what&apos;s being committed. Trunk won&apos;t have compression on and it will keep the compression tests (plus new ones). I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7391&quot; title=&quot;Review/improve HLog compression&amp;#39;s memory consumption&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7391&quot;&gt;&lt;del&gt;HBASE-7391&lt;/del&gt;&lt;/a&gt; for the OOME.&lt;/p&gt;</comment>
                            <comment id="13536484" author="jdcryans" created="Wed, 19 Dec 2012 22:25:15 +0000"  >&lt;p&gt;Committed to branch and trunk, will continue working on making HLog compression better in other jiras. Thanks everyone for the comments, testing, and reviewing.&lt;/p&gt;</comment>
                            <comment id="13536586" author="hudson" created="Wed, 19 Dec 2012 23:36:21 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #646 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/646/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/646/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;  Fix HLog compression&apos;s incompatibilities (Revision 1424172)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13536618" author="lhofhansl" created="Thu, 20 Dec 2012 00:02:38 +0000"  >&lt;p&gt;TestReplicationWithCompression is timing out it seems (also happens locally).&lt;/p&gt;</comment>
                            <comment id="13536625" author="hudson" created="Thu, 20 Dec 2012 00:15:22 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3640 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3640/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3640/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;  Fix HLog compression&apos;s incompatibilities (Revision 1424174)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13536639" author="jdcryans" created="Thu, 20 Dec 2012 00:26:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; It doesn&apos;t for me, also it passed on &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3640/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3640/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It&apos;s like the ipv4 fix didn&apos;t work for you and Ted? Like if you set SLEEP_TIME to 1500 does it always pass?&lt;/p&gt;</comment>
                            <comment id="13536648" author="lhofhansl" created="Thu, 20 Dec 2012 00:56:49 +0000"  >&lt;p&gt;What SLEEP_TIME is this?&lt;/p&gt;

&lt;p&gt;Also failed on 0.94 jenkins, let&apos;s wait for the next 0.94 build.&lt;br/&gt;
TestReplication also fails locally. I&apos;m trying on another machine now.&lt;/p&gt;</comment>
                            <comment id="13536655" author="apurtell" created="Thu, 20 Dec 2012 01:04:26 +0000"  >&lt;p&gt;I&apos;ve found I need to add -Djava.net.preferIPv4Stack=true on the Maven command line if running tests individually with &apos;mvn test -Dtest=foo&apos;. Maybe that&apos;s it? &lt;/p&gt;

&lt;p&gt;Furthermore, with recent Hadoop 1.0.x or 1.1.x no test that requires the HDFS minicluster will start up without this on my Ubuntu 12 laptop. It looks to me like a rat hole of increasing depth.&lt;/p&gt;

&lt;p&gt;Edit: Wrong species of problem &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13536685" author="lhofhansl" created="Thu, 20 Dec 2012 01:53:26 +0000"  >&lt;p&gt;I tried on two machines with two different JVMs with or without this setting passed on the command line, in all cases both TestReplicationWithCompression and TestReplication time out.&lt;/p&gt;

&lt;p&gt;Something&apos;s up &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13536696" author="hudson" created="Thu, 20 Dec 2012 02:13:22 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #304 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/304/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/304/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;  Fix HLog compression&apos;s incompatibilities (Revision 1424174)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13536733" author="jdcryans" created="Thu, 20 Dec 2012 03:25:28 +0000"  >&lt;p&gt;Bumped TestReplication&apos;s SLEEP_TIME to 1.5s to see if this is really just the ipv4 issue.&lt;/p&gt;</comment>
                            <comment id="13536784" author="yuzhihong@gmail.com" created="Thu, 20 Dec 2012 05:12:09 +0000"  >&lt;p&gt;From &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3641/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3641/&lt;/a&gt;, TestReplicationWithCompression tests failed.&lt;/p&gt;</comment>
                            <comment id="13537032" author="jdcryans" created="Thu, 20 Dec 2012 14:14:46 +0000"  >&lt;p&gt;I have a long flight today, I&apos;ll try to repro, but it passes all the time for me.&lt;/p&gt;</comment>
                            <comment id="13537184" author="lhofhansl" created="Thu, 20 Dec 2012 17:37:43 +0000"  >&lt;p&gt;If I revert this change TestReplication always passes locally in 0.94, whereas with this patch is never passed (so far - and it did pass only once in many runs with the increased SLEEP_TIME).&lt;/p&gt;

&lt;p&gt;I would be more comfortable if the patch was reverted from 0.94. I know this is frustrating, but I would like to spin 0.94.4 soon (hopefully by tomorrow). We can put this back into 0.94.5.&lt;/p&gt;</comment>
                            <comment id="13537252" author="apurtell" created="Thu, 20 Dec 2012 18:47:53 +0000"  >&lt;p&gt;TestReplication was flapping on a private Jenkins at a previous employer over a span of 6 months. We triaged the problem by increasing SLEEP_TIME and by increasing the number of retries. The result still was not 100% effective.&lt;/p&gt;

&lt;p&gt;TestReplication sets up two miniclusters and runs replication between them. Whenever we change replication itself, the master, HTable/HConnection, etc., etc., the timing of various actions changes underneath it through complex interactions. Maybe we should move this out of LargeTests into an integration test instead?&lt;/p&gt;</comment>
                            <comment id="13537266" author="yuzhihong@gmail.com" created="Thu, 20 Dec 2012 19:03:29 +0000"  >&lt;p&gt;I ran TestReplication locally and it failed on second run:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testVerifyRepJob(org.apache.hadoop.hbase.replication.TestReplication)  Time elapsed: 16.781 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: Waited too much time &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; truncate
  at org.junit.Assert.fail(Assert.java:93)
  at org.apache.hadoop.hbase.replication.TestReplication.setUp(TestReplication.java:180)
...
queueFailover(org.apache.hadoop.hbase.replication.TestReplication)  Time elapsed: 14.587 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: Waited too much time &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; truncate
  at org.junit.Assert.fail(Assert.java:93)
  at org.apache.hadoop.hbase.replication.TestReplication.setUp(TestReplication.java:180)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If I remember correctly, testVerifyRepJob used to pass.&lt;/p&gt;</comment>
                            <comment id="13537313" author="lhofhansl" created="Thu, 20 Dec 2012 19:53:09 +0000"  >&lt;p&gt;Ok. Now it&apos;s failing locally again, even with patch reverted. Sigh.&lt;br/&gt;
Let&apos;s not revert then. I triggered another 0.94 jenkins build.&lt;/p&gt;</comment>
                            <comment id="13537318" author="lhofhansl" created="Thu, 20 Dec 2012 19:56:13 +0000"  >&lt;p&gt;I also do not see anything obvious in the patch that would cause new problems in the tests.&lt;/p&gt;</comment>
                            <comment id="13537352" author="lhofhansl" created="Thu, 20 Dec 2012 20:21:35 +0000"  >&lt;p&gt;Fact is, since this patch we did not have single jenkins run where these tests did not fail.&lt;/p&gt;

&lt;p&gt;So here&apos;s what I am going to do. I&apos;ll revert this from 0.94, to see whether the tests pass.&lt;br/&gt;
If they don&apos;t we&apos;re none the wiser. If they do, we can regroup for 0.94.5.&lt;/p&gt;

&lt;p&gt;Unless I hear objections I&apos;ll do that within the next hour or so.&lt;/p&gt;</comment>
                            <comment id="13537369" author="stack" created="Thu, 20 Dec 2012 20:48:37 +0000"  >&lt;p&gt;+1 on trying anything to get a green test.&lt;/p&gt;

&lt;p&gt;+1 on test replication going over to integration tests.  Even when it does fail, only J-D can make sense of it (smile).  It has found issues in the past though....&lt;/p&gt;</comment>
                            <comment id="13537374" author="lhofhansl" created="Thu, 20 Dec 2012 21:00:59 +0000"  >&lt;p&gt;LOL... I reverted but now @%#^#$ Jenkins is down. I can&apos;t win.&lt;/p&gt;</comment>
                            <comment id="13537378" author="yuzhihong@gmail.com" created="Thu, 20 Dec 2012 21:07:02 +0000"  >&lt;p&gt;I think Jenkins is on vacation again, Lars &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13537413" author="apurtell" created="Thu, 20 Dec 2012 21:54:21 +0000"  >&lt;p&gt;Given the above logic, I think the revert is the right call.&lt;/p&gt;</comment>
                            <comment id="13537421" author="hudson" created="Thu, 20 Dec 2012 22:07:12 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #650 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/650/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/650/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Revert, to check on test failures potentially caused by this. (Revision 1424702)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13537436" author="lhofhansl" created="Thu, 20 Dec 2012 22:26:52 +0000"  >&lt;p&gt;Latest run still failed in TestReplication.queueFailover and is despite the increase SLEEP_TIME that I did not revert. Hmm... &lt;/p&gt;</comment>
                            <comment id="13537511" author="lhofhansl" created="Thu, 20 Dec 2012 23:44:34 +0000"  >&lt;p&gt;The other changes that coincided with the failures are: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7331&quot; title=&quot;Add access control for region open and close, row locking, and stopping the regionserver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7331&quot;&gt;&lt;del&gt;HBASE-7331&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7374&quot; title=&quot;Expose master table operations for coprocessors by way of MasterServices&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7374&quot;&gt;&lt;del&gt;HBASE-7374&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
I&apos;ll try reverting those locally.&lt;/p&gt;</comment>
                            <comment id="13537532" author="apurtell" created="Fri, 21 Dec 2012 00:08:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; I&apos;m -1 on reverting those changes for a flapper. Of course if there&apos;s a real issue exposed here, that&apos;s a different story.&lt;/p&gt;</comment>
                            <comment id="13537544" author="lhofhansl" created="Fri, 21 Dec 2012 00:22:48 +0000"  >&lt;p&gt;Didn&apos;t mean to revert them from SVN, just trying it locally.&lt;/p&gt;

&lt;p&gt;TestReplication.queueFailover has now failed in 6 consecutive runs (since 645) and has not failed a single time in the 20 runs prior.&lt;/p&gt;

&lt;p&gt;Something&apos;s up and we should not just write it off at this being a flapper.&lt;/p&gt;

&lt;p&gt;I think this patch should be reapplied, though. It did not cause this problem I think.&lt;/p&gt;</comment>
                            <comment id="13537546" author="apurtell" created="Fri, 21 Dec 2012 00:24:35 +0000"  >&lt;p&gt;I went one commit further back and TestReplication#queueFailover just hung for me:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ git checkout 0ee8b7b  # HBASE-7357
$ mvn -PlocalTests clean test -Dtest=TestReplication -Djava.net.preferIPv4Stack=true
[...]
Tests run: 10, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 448.042 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!

Results :

Tests in error: 
  queueFailover(org.apache.hadoop.hbase.replication.TestReplication): test timed out after 300000 milliseconds
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;jstack shows I think an HTable waiting for a region to open which doesn&apos;t.&lt;/p&gt;</comment>
                            <comment id="13537547" author="apurtell" created="Fri, 21 Dec 2012 00:25:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;Something&apos;s up and we should not just write it off at this being a flapper.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I agree, that&apos;s why I clarified my comment with an edit. Sorry for any confusion. &lt;/p&gt;</comment>
                            <comment id="13537548" author="apurtell" created="Fri, 21 Dec 2012 00:26:26 +0000"  >&lt;p&gt;Let me try a bisect.&lt;/p&gt;</comment>
                            <comment id="13537571" author="lhofhansl" created="Fri, 21 Dec 2012 00:51:43 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;. Might even be an env issue on jenkins. I find that successful run on my machine takes 245s or so, I can see it taken longer on a virtual env. Maybe up the timeout from 300s to 360s?&lt;/p&gt;

&lt;p&gt;I assume there&apos;re no objections reapplying this patch.&lt;/p&gt;</comment>
                            <comment id="13537573" author="apurtell" created="Fri, 21 Dec 2012 00:52:52 +0000"  >&lt;p&gt;It may take a while. I got a fast failure on head of branch-0.94 but then a clean run on the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7331&quot; title=&quot;Add access control for region open and close, row locking, and stopping the regionserver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7331&quot;&gt;&lt;del&gt;HBASE-7331&lt;/del&gt;&lt;/a&gt; after a failure on the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7357&quot; title=&quot;HBaseClient and HBaseServer should use hbase.security.authentication when negotiating authentication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7357&quot;&gt;&lt;del&gt;HBASE-7357&lt;/del&gt;&lt;/a&gt; one. Looks like I&apos;ll want up to 100 iterations for every checkout...&lt;/p&gt;</comment>
                            <comment id="13537577" author="lhofhansl" created="Fri, 21 Dec 2012 00:58:01 +0000"  >&lt;p&gt;Wow, that&apos;ll take a bit.&lt;/p&gt;</comment>
                            <comment id="13537588" author="apurtell" created="Fri, 21 Dec 2012 01:03:16 +0000"  >&lt;p&gt;Yeah I will have to settle for just a few repetitions until there&apos;s a candidate.&lt;/p&gt;</comment>
                            <comment id="13537609" author="lhofhansl" created="Fri, 21 Dec 2012 01:44:14 +0000"  >&lt;p&gt;queueFailover does not appear to fail (for me, locally) when run its own&lt;/p&gt;</comment>
                            <comment id="13537700" author="lhofhansl" created="Fri, 21 Dec 2012 05:59:28 +0000"  >&lt;p&gt;I reapplied the patch.&lt;/p&gt;</comment>
                            <comment id="13537735" author="hudson" created="Fri, 21 Dec 2012 07:44:34 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #652 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/652/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/652/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Reapply, Test failures not caused by this. Sorry for the noise. (Revision 1424810)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13537920" author="hudson" created="Fri, 21 Dec 2012 14:17:11 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #87 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/87/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/87/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Reapply, Test failures not caused by this. Sorry for the noise. (Revision 1424810)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Revert, to check on test failures potentially caused by this. (Revision 1424702)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;  Fix HLog compression&apos;s incompatibilities (Revision 1424172)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13544427" author="hudson" created="Sat, 5 Jan 2013 00:42:29 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #10 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/10/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/10/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Reapply, Test failures not caused by this. Sorry for the noise. (Revision 1424810)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; Revert, to check on test failures potentially caused by this. (Revision 1424702)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;  Fix HLog compression&apos;s incompatibilities (Revision 1424172)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/Compressor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/FaultySequenceFileLogReader.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplitCompressed.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationWithCompression.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13756493" author="liushaohui" created="Tue, 3 Sep 2013 10:28:35 +0000"  >&lt;p&gt;HLog compression is also incompatible in replication from a cluster with hLog compression to a peer cluster without &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;How to solve this problem?&lt;/p&gt;</comment>
                            <comment id="13756904" author="jdcryans" created="Tue, 3 Sep 2013 18:47:47 +0000"  >&lt;p&gt;Upgrade? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13757285" author="lhofhansl" created="Wed, 4 Sep 2013 00:14:50 +0000"  >&lt;p&gt;Heh &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Why would that be the case, though. We&apos;re reading the HLogs on the source and replicate to the slave via RPC, whether or not the logs were compressed at the source should make no difference, no?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12602372">HBASE-6533</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12527516">HBASE-4608</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12522527" name="5778-addendum.txt" size="3335" author="lhofhansl" created="Fri, 13 Apr 2012 04:06:43 +0000"/>
                            <attachment id="12522526" name="5778.addendum" size="1009" author="yuzhihong@gmail.com" created="Fri, 13 Apr 2012 03:55:40 +0000"/>
                            <attachment id="12552694" name="HBASE-5778-0.94-v2.patch" size="12862" author="jdcryans" created="Thu, 8 Nov 2012 19:36:27 +0000"/>
                            <attachment id="12553270" name="HBASE-5778-0.94-v3.patch" size="20195" author="jdcryans" created="Tue, 13 Nov 2012 04:58:46 +0000"/>
                            <attachment id="12553808" name="HBASE-5778-0.94-v4.patch" size="19400" author="jdcryans" created="Fri, 16 Nov 2012 18:15:20 +0000"/>
                            <attachment id="12560333" name="HBASE-5778-0.94-v5.patch" size="21266" author="jdcryans" created="Tue, 11 Dec 2012 01:43:18 +0000"/>
                            <attachment id="12561042" name="HBASE-5778-0.94-v6.patch" size="21805" author="jdcryans" created="Fri, 14 Dec 2012 22:10:11 +0000"/>
                            <attachment id="12561641" name="HBASE-5778-0.94-v7.patch" size="26175" author="jdcryans" created="Wed, 19 Dec 2012 04:59:18 +0000"/>
                            <attachment id="12552584" name="HBASE-5778-0.94.patch" size="11682" author="jdcryans" created="Thu, 8 Nov 2012 01:15:05 +0000"/>
                            <attachment id="12561043" name="HBASE-5778-trunk-v6.patch" size="23025" author="jdcryans" created="Fri, 14 Dec 2012 22:10:11 +0000"/>
                            <attachment id="12561640" name="HBASE-5778-trunk-v7.patch" size="25195" author="jdcryans" created="Wed, 19 Dec 2012 04:59:18 +0000"/>
                            <attachment id="12522498" name="HBASE-5778.patch" size="769" author="jdcryans" created="Thu, 12 Apr 2012 22:20:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 12 Apr 2012 22:22:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>235617</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 15 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00rx3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2455</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>