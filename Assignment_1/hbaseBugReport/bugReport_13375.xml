<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:42:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13375/HBASE-13375.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13375] Provide HBase superuser higher priority over other users in the RPC handling</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13375</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt; annotates Master RPCs so that RegionServer RPCs are treated with a higher priority compared to user RPCs (and they are handled by a separate set of handlers, etc.). It may be good to stretch this to users too - hbase superuser (configured via hbase.superuser) gets higher priority over other users in the RPC handling. That way the superuser can always perform administrative operations on the cluster even if all the normal priority handlers are occupied (for example, we had a situation where all the master&apos;s handlers were tied up with many simultaneous createTable RPC calls from multiple users and the master wasn&apos;t able to perform any operations initiated by the admin). (Discussed this some with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=elserj&quot; class=&quot;user-hover&quot; rel=&quot;elserj&quot;&gt;Josh Elser&lt;/a&gt;).&lt;br/&gt;
Does this make sense to others?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12787254">HBASE-13375</key>
            <summary>Provide HBase superuser higher priority over other users in the RPC handling</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mantonov">Mikhail Antonov</assignee>
                                    <reporter username="devaraj">Devaraj Das</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Apr 2015 05:15:00 +0000</created>
                <updated>Thu, 22 Sep 2016 00:10:02 +0000</updated>
                            <resolved>Sun, 24 May 2015 18:13:43 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.2.0</fixVersion>
                                    <component>IPC/RPC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>16</watches>
                                                                <comments>
                            <comment id="14390008" author="ashish singhi" created="Wed, 1 Apr 2015 05:26:19 +0000"  >&lt;p&gt;Sounds good to me.&lt;/p&gt;</comment>
                            <comment id="14391331" author="elserj" created="Wed, 1 Apr 2015 20:01:16 +0000"  >&lt;p&gt;One more specific point that was noted was that, without preemption built in, there isn&apos;t a way to ensure a strong bound on the number of RPC handlers in use. Providing an unbounded number of handlers might be sufficient if it can be adequately restricted  (to prevent some denial of service attack &amp;#8211; malicious or unintentional).&lt;/p&gt;

&lt;p&gt;With a good preemption strategy, we can still ensure a nice upper bound on resources and availability, but, until we get there, we&apos;d have to provide some unbounded resource pool to get this kind of availability.&lt;/p&gt;

&lt;p&gt;IMO, this makes sense to me &amp;#8211; just wanted to make sure the implications were clear.&lt;/p&gt;</comment>
                            <comment id="14392136" author="mantonov" created="Thu, 2 Apr 2015 04:47:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;That way the superuser can always perform administrative operations&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;administrative ops should be already served with Admin QoS, so I guess you mean - &quot;when superuser wants to just do a scan, or some digging&quot;?&lt;/p&gt;</comment>
                            <comment id="14392379" author="mantonov" created="Thu, 2 Apr 2015 08:32:58 +0000"  >&lt;p&gt;(made fairly trivial patch, just need to write test)&lt;/p&gt;

&lt;p&gt;Just seems like we&apos;d need to make SimpleRpcScheduler to pass RpcServer.Call.remoteUser to PriorityFunction#getPriority. Looks ok to me.&lt;/p&gt;</comment>
                            <comment id="14393527" author="devaraj" created="Thu, 2 Apr 2015 21:54:15 +0000"  >&lt;p&gt;I am wondering if we should just handle the RegionServer rpcs this way as well (and avoid the annotations for now, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt;)? Two classes of users gets elevated priority at the master - the user regionservers runs as, and the superuser (in deployments i have seen, the two are the same). Thoughts?&lt;/p&gt;</comment>
                            <comment id="14393559" author="mantonov" created="Thu, 2 Apr 2015 22:06:59 +0000"  >&lt;p&gt;Hm. That&apos;d probably simplify the things and number of checks in the implementation of PriorityFunction. Just that looks like a bit different kinds of operations to me, in the jira you&apos;re referring to we are elevating priority of calls lik&#1091; reportRegionStateTransition().. not all calls from RS to master may need to have high QoS and clog the according threadpool, and with annotations we have the fine way to control that, right?&lt;/p&gt;

&lt;p&gt;(for users - I think yeah, there are just 2 lists of superusers and supergroups (as returned from VisibilityUtils, basically Pair&amp;lt;List&amp;lt;String&amp;gt;, List&amp;lt;String), and users running RS is always included there, regardless of what&apos;s in hbase.superuser property)&lt;/p&gt;
</comment>
                            <comment id="14394238" author="mantonov" created="Fri, 3 Apr 2015 09:26:41 +0000"  >&lt;p&gt;here&apos;s patch (i thought at first it&apos;d be just simple to pass RpcServer.Call in PriorityFunction, but current visibility in this subclass doesn&apos;t allow it..so passing UGI instead)&lt;/p&gt;</comment>
                            <comment id="14394319" author="hadoopqa" created="Fri, 3 Apr 2015 11:37:48 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12709201/HBASE-13375-v0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12709201/HBASE-13375-v0.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit d8b10656d00779e194c3caca118995136babce99.&lt;br/&gt;
  ATTACHMENT ID: 12709201&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 12 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.util.TestHBaseFsck.testRegionDeployedNotInHdfs(TestHBaseFsck.java:1876)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testValidLingeringSplitParent(TestHBaseFsck.java:1764)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testLingeringSplitParent(TestHBaseFsck.java:1651)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testHbckWithExcessReplica(TestHBaseFsck.java:780)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testQuarantineCorruptHFile(TestHBaseFsck.java:2158)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testQuarantineMissingHFile(TestHBaseFsck.java:2226)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testFixHdfsHolesNotWorkingWithNoHdfsChecking(TestHBaseFsck.java:2088)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testHBaseFsckClean(TestHBaseFsck.java:491)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestAdmin2.testCreateBadTables(TestAdmin2.java:152)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13550//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13550//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13550//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13550//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13550//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13550//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13550//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13550//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14394781" author="ashish singhi" created="Fri, 3 Apr 2015 17:59:49 +0000"  >&lt;p&gt;IMO we should provide the same priority to the user we get from master and regionserver principal in a kerberos cluster as we provide for superuser. what say ? &lt;/p&gt;

&lt;p&gt;Patch looks good to me. Can we also add code coverage for super groups.&lt;/p&gt;</comment>
                            <comment id="14394835" author="mantonov" created="Fri, 3 Apr 2015 18:21:25 +0000"  >&lt;p&gt;Thanks for review!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;IMO we should provide the same priority to the user we get from master and regionserver principal in a kerberos cluster as we provide for superuser. what say ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmm, unix user which runs current server is always added to the list of superusers, and internal communications between RSs and HM are already served &lt;br/&gt;
with high (or admin) QoS. Is that what you meant?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can we also add code coverage for super groups.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure, will add.&lt;/p&gt;</comment>
                            <comment id="14394888" author="ashish singhi" created="Fri, 3 Apr 2015 18:41:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is that what you meant?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. Thanks for clarifying.&lt;/p&gt;</comment>
                            <comment id="14394927" author="mantonov" created="Fri, 3 Apr 2015 18:59:17 +0000"  >&lt;p&gt;let me retry this v0 patch to check if zombie failure is genuine..Looks like it is.&lt;/p&gt;</comment>
                            <comment id="14394961" author="srikanth235" created="Fri, 3 Apr 2015 19:27:48 +0000"  >&lt;p&gt;Looks like getSystemAndSuperUsers have more wider applicability besides VC. What do you think of moving it to sayd hbase-common module?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; superUsers =
+        VisibilityUtils.getSystemAndSuperUsers(rpcServices.getConfiguration()).getFirst();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14395109" author="mantonov" created="Fri, 3 Apr 2015 21:27:22 +0000"  >&lt;p&gt;Agreed it might have wider applicability than just visibility labels controllers. Though all current usages seems to be only in hbase-server module (with little probability of this code to be reused on client side, for example &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ), so I think maybe just leave it in hbase-server for now, unless the need to move it in the upstream module becomes more clear?&lt;/p&gt;</comment>
                            <comment id="14395276" author="srikanth235" created="Fri, 3 Apr 2015 23:42:08 +0000"  >&lt;p&gt;Do you think groups can be null (checked code but doesn&apos;t look like it)? And also, can remoteUgi be null?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] groups = remoteUgi.getGroupNames();
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (groups != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; groups.length &amp;gt; 0) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is it worth to create a local variable for &lt;tt&gt;getSystemAndSuperUsers()&lt;/tt&gt;?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; superUsers =
+        VisibilityUtils.getSystemAndSuperUsers(rpcServices.getConfiguration()).getFirst();
+      List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; superGroups =
+        VisibilityUtils.getSystemAndSuperUsers(rpcServices.getConfiguration()).getSecond();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14395619" author="mantonov" created="Sat, 4 Apr 2015 07:57:46 +0000"  >&lt;p&gt;Thanks for taking a look!&lt;/p&gt;

&lt;p&gt;I think groups are never null (rather empty list), and remoteUgi is never null as far as I saw, but for some tests it&apos;s just convenient to be able to pass nulls without having to think about mocks, plus having additional NPE check doesn&apos;t hurt I think &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I can remove these checks if you think they&apos;re really unnecessary here.&lt;/p&gt;

&lt;p&gt;I&apos;m thinking to move the call to VisibilityUtil to constructor and have these 2 lists as fields, as that seems relatively hot codepath.&lt;/p&gt;

&lt;p&gt;The problem is that TestHBaseFsck failure is genuine, I&apos;ll debug it, so cancelled the patch. Will look more into that tomorrow.&lt;/p&gt;
</comment>
                            <comment id="14395834" author="srikanth235" created="Sat, 4 Apr 2015 17:27:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;I can remove these checks if you think they&apos;re really unnecessary here.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The thing with null checks is they hide bigger issues (if any). So, please remove them unless you have a valid reason.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;m thinking to move the call to VisibilityUtil to constructor and have these 2 lists as fields, as that seems relatively hot codepath.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Good call.&lt;/p&gt;</comment>
                            <comment id="14481839" author="mantonov" created="Mon, 6 Apr 2015 20:09:55 +0000"  >&lt;p&gt;Got busy with other stuff last days.. Should be able to get to it today or tomorrow.&lt;/p&gt;</comment>
                            <comment id="14484112" author="mantonov" created="Tue, 7 Apr 2015 21:36:51 +0000"  >&lt;p&gt;Hm, what I found debugging TestHBaseFsck#testHBaseFsck.&lt;/p&gt;

&lt;p&gt;Test itself runs just fine. If I go into AnnotationReadingPriorityFunction#getPriority, and add there at first line:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;if (true) return HConstants.ADMIN_QOS;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;things fail with exception:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-04-07 14:35:49,843 WARN  [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-313] client.ConnectionImplementation(1740): Checking master connection
com.google.protobuf.ServiceException: org.apache.hadoop.hbase.ipc.CallTimeoutException: callId: 2 methodName: IsMasterRunning param {TODO: class org.apache.hadoop.hbase.protobuf.generated.MasterProtos$IsMasterRunningRequest}
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient.callBlockingMethod(AbstractRpcClient.java:223)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient$BlockingRpcChannelImplementation.callBlockingMethod(AbstractRpcClient.java:287)
	at org.apache.hadoop.hbase.protobuf.generated.MasterProtos$MasterService$BlockingStub.isMasterRunning(MasterProtos.java:50206)
	at org.apache.hadoop.hbase.client.ConnectionImplementation$MasterServiceState.isMasterRunning(ConnectionImplementation.java:1028)
	at org.apache.hadoop.hbase.client.ConnectionImplementation.isKeepAliveMasterConnectedAndRunning(ConnectionImplementation.java:1733)
	at org.apache.hadoop.hbase.client.ConnectionImplementation.getKeepAliveMasterService(ConnectionImplementation.java:1385)
	at org.apache.hadoop.hbase.client.MasterCallable.prepare(MasterCallable.java:38)
	at org.apache.hadoop.hbase.client.RpcRetryingCallerImpl.callWithRetries(RpcRetryingCallerImpl.java:115)
	at org.apache.hadoop.hbase.client.HBaseAdmin.executeCallable(HBaseAdmin.java:3704)
	at org.apache.hadoop.hbase.client.HBaseAdmin.getTableDescriptorsByTableName(HBaseAdmin.java:2646)
	at org.apache.hadoop.hbase.util.HBaseFsck.getHTableDescriptors(HBaseFsck.java:3167)
	at org.apache.hadoop.hbase.util.HBaseFsck.getTables(HBaseFsck.java:3158)
	at org.apache.hadoop.hbase.util.HBaseFsck.reportTablesInFlux(HBaseFsck.java:1040)
	at org.apache.hadoop.hbase.util.HBaseFsck.onlineConsistencyRepair(HBaseFsck.java:636)
	at org.apache.hadoop.hbase.util.HBaseFsck.onlineHbck(HBaseFsck.java:671)
	at org.apache.hadoop.hbase.util.hbck.HbckTestingUtil.doFsck(HbckTestingUtil.java:69)
	at org.apache.hadoop.hbase.util.hbck.HbckTestingUtil.doFsck(HbckTestingUtil.java:43)
	at org.apache.hadoop.hbase.util.hbck.HbckTestingUtil.doFsck(HbckTestingUtil.java:38)
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testHBaseFsck(TestHBaseFsck.java:205)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
Caused by: org.apache.hadoop.hbase.ipc.CallTimeoutException: callId: 2 methodName: IsMasterRunning param {TODO: class org.apache.hadoop.hbase.protobuf.generated.MasterProtos$IsMasterRunningRequest}
	at org.apache.hadoop.hbase.ipc.AsyncRpcClient.call(AsyncRpcClient.java:235)
	at org.apache.hadoop.hbase.ipc.AbstractRpcClient.callBlockingMethod(AbstractRpcClient.java:213)
	... 27 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That&apos;s not right. Mentioned change might have affected latency/throughput, but not correctness I&apos;d say.&lt;/p&gt;</comment>
                            <comment id="14484119" author="mantonov" created="Tue, 7 Apr 2015 21:40:46 +0000"  >&lt;p&gt;(by test itself runs fine, i meant without this patch being applied)&lt;/p&gt;</comment>
                            <comment id="14484458" author="devaraj" created="Wed, 8 Apr 2015 00:47:57 +0000"  >&lt;p&gt;I agree that it&apos;s weird. Without the patch and with the change in getPriority, does it fail similarly?&lt;/p&gt;</comment>
                            <comment id="14484461" author="mantonov" created="Wed, 8 Apr 2015 00:50:14 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt; see the discussion to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt;, I think we nailed it down.&lt;/p&gt;</comment>
                            <comment id="14484502" author="mantonov" created="Wed, 8 Apr 2015 01:21:44 +0000"  >&lt;p&gt;Yes, without this patch if all calls get routed as admin QoS, this test starts failing.&lt;/p&gt;</comment>
                            <comment id="14486509" author="mantonov" created="Thu, 9 Apr 2015 01:36:31 +0000"  >&lt;p&gt;Updated patch. Removed unnecessary checks, moved calls to VisibilityUtils to constructor, fixed TestAdmin2 and TestHBaseFsck by setting hbase.regionserver.metahandler.count to 40.&lt;/p&gt;

&lt;p&gt;Let&apos;s see.&lt;/p&gt;</comment>
                            <comment id="14486608" author="hadoopqa" created="Thu, 9 Apr 2015 02:43:03 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724101/HBASE-13375-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724101/HBASE-13375-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e2a90a71143f480621ccd935a0b9477d7ee4016f.&lt;br/&gt;
  ATTACHMENT ID: 12724101&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 22 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13635//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13635//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13635//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13635//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13635//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13635//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13635//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13635//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14486791" author="mantonov" created="Thu, 9 Apr 2015 06:07:39 +0000"  >&lt;p&gt;reattaching the same patch to kick hadoop-qa, previous failure seemed spurious&lt;/p&gt;</comment>
                            <comment id="14487049" author="hadoopqa" created="Thu, 9 Apr 2015 09:39:54 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724149/HBASE-13375-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724149/HBASE-13375-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 80dbf06651e527ec0421ce51e4712ffb2f1d078b.&lt;br/&gt;
  ATTACHMENT ID: 12724149&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 22 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestProcessBasedCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportExport&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.oozie.test.MiniHCatServer$1.run(MiniHCatServer.java:137)&lt;br/&gt;
	at org.apache.oozie.test.XTestCase$MiniClusterShutdownMonitor.run(XTestCase.java:1071)&lt;br/&gt;
	at org.apache.oozie.test.XDataTestCase.writeToFile(XDataTestCase.java:1206)&lt;br/&gt;
	at org.apache.oozie.test.XDataTestCase.getCoordConf(XDataTestCase.java:1197)&lt;br/&gt;
	at org.apache.oozie.test.XDataTestCase.createCoordAction(XDataTestCase.java:694)&lt;br/&gt;
	at org.apache.oozie.test.XDataTestCase.createCoordAction(XDataTestCase.java:638)&lt;br/&gt;
	at org.apache.oozie.executor.jpa.TestCoordActionGetForTimeoutJPAExecutor.testCoordActionGet(TestCoordActionGetForTimeoutJPAExecutor.java:54)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13643//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13643//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13643//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13643//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13643//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13643//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13643//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13643//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14487081" author="mantonov" created="Thu, 9 Apr 2015 10:17:25 +0000"  >&lt;p&gt;Oozie tests don&apos;t like right. &lt;/p&gt;

&lt;p&gt;Also this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failed tests: 
org.apache.hadoop.hbase.util.TestProcessBasedCluster.testHomePath(org.apache.hadoop.hbase.util.TestProcessBasedCluster)
  Run 1: TestProcessBasedCluster.testHomePath:92 /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build%402/hbase-server/pom.xml does not exist
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Doesn&apos;t look right. Issue with jenkins?&lt;/p&gt;</comment>
                            <comment id="14487614" author="elserj" created="Thu, 9 Apr 2015 16:28:39 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; priorityByAnnotation = annotatedQos.get(methodName);
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (priorityByAnnotation != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; priorityByAnnotation;
     }
+
+    &lt;span class=&quot;code-comment&quot;&gt;// all requests executed by &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt; users have high QoS
&lt;/span&gt;+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isExecutedBySuperUser(remoteUgi)) {
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; HConstants.ADMIN_QOS;
+    }
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just noting that decision tree for determining priority of a call is:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Annotation on RPC method implementation&lt;/li&gt;
	&lt;li&gt;Super users&lt;/li&gt;
	&lt;li&gt;Everyone else&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I think this is fine presently, but, if additional prioritization gets added via the QosAnnotation, this could have unexpected outcomes. For example, if we would get to a point where all methods are annotated (explicitly define &quot;normal&quot; or &quot;low&quot; priorities), superusers would suddenly get thrown in the default bucket. Not a big concern since I don&apos;t think that&apos;s on the radar, but I thought I&apos;d mention it anyways. Otherwise, everything looks good to me!&lt;/p&gt;</comment>
                            <comment id="14487847" author="mantonov" created="Thu, 9 Apr 2015 18:20:37 +0000"  >&lt;p&gt;Yeah, you&apos;re right. This possible behavior is actually sitting there right now without a patch though? Now we&apos;re checking that rpc is access to system table (qos 200) after we check annotations (which means, manually setting annotation on certain rpc overrides access to system table?).&lt;/p&gt;

&lt;p&gt;I think what&apos;s there works for simplified case like - &quot;it&apos;s standard call priority, unless 1) or 2) or 3)&quot;. And beyond that we might want to specify in what order we check the rules. What do you guys think?&lt;/p&gt;</comment>
                            <comment id="14487851" author="mantonov" created="Thu, 9 Apr 2015 18:21:24 +0000"  >&lt;p&gt;retrying the same patch again&lt;/p&gt;</comment>
                            <comment id="14488235" author="hadoopqa" created="Thu, 9 Apr 2015 20:44:08 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724285/HBASE-13375-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724285/HBASE-13375-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1deadb60d1a684cbc1a45cfeb6eee176ad93958f.&lt;br/&gt;
  ATTACHMENT ID: 12724285&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 22 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13651//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13651//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13651//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13651//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13651//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13651//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13651//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13651//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14488251" author="elserj" created="Thu, 9 Apr 2015 20:53:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;Now we&apos;re checking that rpc is access to system table (qos 200) after we check annotations (which means, manually setting annotation on certain rpc overrides access to system table?).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good point. I didn&apos;t read down far enough to catch that the first time around. Reading it fully, I agree with your assessment.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And beyond that we might want to specify in what order we check the rules&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I can easily see some kind of &quot;formal&quot; rule-based approach to this (rather then how the conditionals fall), but I&apos;m not quite certain it&apos;s necessary at this point. Future work could include per-user/group priority delegation, but, aside from that, I&apos;m failing to come up with anything more that could be added which would create more complexity that a more elegant priority-function would ultimately simplify.&lt;/p&gt;</comment>
                            <comment id="14494826" author="mantonov" created="Tue, 14 Apr 2015 20:38:25 +0000"  >&lt;p&gt;Attaching patch v2, with default metahandler count raised to 20.&lt;/p&gt;</comment>
                            <comment id="14495102" author="hadoopqa" created="Tue, 14 Apr 2015 23:08:01 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12725373/HBASE-13375-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12725373/HBASE-13375-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 4f151444b58ae85b93f76254961358932e0ffb9b.&lt;br/&gt;
  ATTACHMENT ID: 12725373&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 22 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13702//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13702//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13702//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13702//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13702//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13702//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13702//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13702//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14495122" author="mantonov" created="Tue, 14 Apr 2015 23:21:21 +0000"  >&lt;p&gt;Ok, raising default number of metahandler threads seems to worked. Any feedback on latest patch?&lt;/p&gt;</comment>
                            <comment id="14495433" author="devaraj" created="Wed, 15 Apr 2015 00:32:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; do we know why the test failed with fewer handlers?&lt;/p&gt;</comment>
                            <comment id="14495441" author="elserj" created="Wed, 15 Apr 2015 00:34:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt; see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351?focusedCommentId=14494848&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14494848&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-13351?focusedCommentId=14494848&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14494848&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14497431" author="elserj" created="Thu, 16 Apr 2015 01:29:14 +0000"  >&lt;p&gt;+1 (non-binding)&lt;/p&gt;</comment>
                            <comment id="14497725" author="mantonov" created="Thu, 16 Apr 2015 08:29:53 +0000"  >&lt;p&gt;Yeah, that&apos;s as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=elserj&quot; class=&quot;user-hover&quot; rel=&quot;elserj&quot;&gt;Josh Elser&lt;/a&gt; said.  I guess the discussion of the same or very similar issues was spread across 2 these jiras, so let me link them.&lt;/p&gt;</comment>
                            <comment id="14500154" author="mantonov" created="Fri, 17 Apr 2015 16:39:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=srikanth235&quot; class=&quot;user-hover&quot; rel=&quot;srikanth235&quot;&gt;Srikanth Srungarapu&lt;/a&gt; any comments, feedbacks on latest patch?&lt;/p&gt;</comment>
                            <comment id="14500156" author="mantonov" created="Fri, 17 Apr 2015 16:40:04 +0000"  >&lt;p&gt;Thanks for review!&lt;/p&gt;</comment>
                            <comment id="14500225" author="devaraj" created="Fri, 17 Apr 2015 17:22:23 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14502787" author="anoop.hbase" created="Mon, 20 Apr 2015 13:32:38 +0000"  >&lt;p&gt;It looks odd to use VisibilityUtils APIs in AnnotationReadingPriorityFunction. Can we move this out from VisibilityUtils and all refer to that common place?&lt;br/&gt;
Or else see the comments from Andy at tail of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10619&quot; title=&quot;Don&amp;#39;t allow non super users to do DDL ops on system tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10619&quot;&gt;HBASE-10619&lt;/a&gt;. We tend to keep the superUsers and superGroups as members in multiple places now.  Think of having it in one place?  What do you think?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;int level = priority.getPriority(call.getHeader(), call.param, call.getRemoteUser());&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Or use call.getRequestUser()?&lt;/p&gt;</comment>
                            <comment id="14504133" author="mantonov" created="Tue, 21 Apr 2015 01:36:36 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; agree. Also, VU#getSystemAndSuperUsers() methods is named a bit strange (what&apos;s the difference between system and super users?) and as noted in referenced jira, returns pair of 2 lists, which is weird too. This method was just the most handy on I found.&lt;/p&gt;

&lt;p&gt;Do you want this refactoring to be in this patch, or better in separate jira? I can make it in this patch, just probably it would be little bigger as some tests/signatures would change, or I can do it in another jira.&lt;/p&gt;</comment>
                            <comment id="14504134" author="mantonov" created="Tue, 21 Apr 2015 01:37:28 +0000"  >&lt;p&gt;as the codebase might overlap, cc-ing &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14504304" author="anoop.hbase" created="Tue, 21 Apr 2015 04:34:13 +0000"  >&lt;p&gt;IMO it can be done now as using VisibilityUtil in places like core server area like QoS look bit strange. &lt;br/&gt;
Yes as it is becoming used by many areas of code, now we can better the method name and signature. &lt;/p&gt;</comment>
                            <comment id="14504308" author="anoop.hbase" created="Tue, 21 Apr 2015 04:35:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;what&apos;s the difference between system and super users?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Super users are those which come from the xml configuration where as the system user is the user who started the server process. All these considered as super users of HBase. Make sense?  But we can make the name simple getSuperUsers() and just add doc that it include which all users.&lt;/p&gt;</comment>
                            <comment id="14504309" author="mantonov" created="Tue, 21 Apr 2015 04:36:45 +0000"  >&lt;p&gt;Right. Will update the patch later today, incorporating the feedback. Going to make these collection static fields of User class with lazy loading from conf (as that was the idea in other jira - makes sense to me).&lt;/p&gt;</comment>
                            <comment id="14505278" author="apurtell" created="Tue, 21 Apr 2015 17:04:40 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Let&apos;s use one method in User or another class in the security package (but User seems good to me) for extracting the list of superusers from configuration and use this everywhere. Please don&apos;t have it return a pair of lists &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;</comment>
                            <comment id="14506172" author="mantonov" created="Wed, 22 Apr 2015 01:09:13 +0000"  >&lt;p&gt;Here&apos;s updated patch to look at.&lt;/p&gt;

&lt;p&gt;Some small notes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I tried to move getActiveUser() to User as well, but that depends on RpcServer which is part of ipc module&lt;/li&gt;
	&lt;li&gt;TestAccessController and TestAccessController2 look confusing a bit &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14506342" author="hadoopqa" created="Wed, 22 Apr 2015 03:33:28 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12727084/HBASE-13375-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12727084/HBASE-13375-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 07b8a7b264bc6d91fa63243b2e9cd5527176a6f5.&lt;br/&gt;
  ATTACHMENT ID: 12727084&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDistributedLogReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithCustomVisLabService&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithSLGStack&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13765//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13765//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13765//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13765//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13765//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13765//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13765//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13765//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14506495" author="anoop.hbase" created="Wed, 22 Apr 2015 06:10:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;if (User.isSuperUser(user, conf)) &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can we have isSuperUser () method as an instance method so no need to pass the user?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;String group = User.getGroupName(Bytes.toString(user));&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am not sure whethere this method realy fits in User class.  This is a util method which strips @ from the name.  &lt;/p&gt;

&lt;p&gt;User#getSuperGroups&lt;br/&gt;
if (superGroups == null) {&lt;br/&gt;
	superGroups = new ArrayList&amp;lt;&amp;gt;();&lt;/p&gt;

&lt;p&gt;Instead we can create a local List first, add all items to that and set it to the static variable at once? &lt;br/&gt;
Same in getSuperUesrs&lt;/p&gt;</comment>
                            <comment id="14506525" author="mantonov" created="Wed, 22 Apr 2015 06:36:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can we have isSuperUser () method as an instance method so no need to pass the user?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, shouldn&apos;t be any reasons why we can&apos;t.&lt;/p&gt;

&lt;p&gt;Regarding these 2 methods - as it looks no, we don&apos;t need to make them public at all. Nobody really needs to lookup the list of superusers, what callers like AC or VC or similar code needs is just User#isSuperUser() call. So I think I can just have 1 protected method to lazily load/parse them to 2 lists. &lt;/p&gt;
</comment>
                            <comment id="14506526" author="mantonov" created="Wed, 22 Apr 2015 06:36:59 +0000"  >&lt;p&gt;s/as it looks no/as it looks now&lt;/p&gt;</comment>
                            <comment id="14506530" author="mantonov" created="Wed, 22 Apr 2015 06:38:27 +0000"  >&lt;p&gt;(I guess I shouldn&apos;t say &quot;nobody&quot;, as it sounds a bit like &quot;nobody needs more than 640k of ram&quot; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, but nothing in current master as it seems)&lt;/p&gt;</comment>
                            <comment id="14507487" author="mantonov" created="Wed, 22 Apr 2015 17:29:23 +0000"  >&lt;p&gt;Looks like to provide instance method isSuperUser ()  we need to either do static &lt;/p&gt;
{new Configuration(); ..}
&lt;p&gt; initialization, or call initialization method in some place like UserProvider#instantiate. Former is perhaps more reliable.&lt;/p&gt;</comment>
                            <comment id="14509498" author="mantonov" created="Thu, 23 Apr 2015 18:12:26 +0000"  >&lt;p&gt;I changed the code as discussed, and moved initialization to UserProvider, but that caused a lot of test failures around visibility labels, as current user is being automatically marked as superuser in inappropriate places &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; keep looking.&lt;/p&gt;</comment>
                            <comment id="14512133" author="mantonov" created="Sat, 25 Apr 2015 01:04:24 +0000"  >&lt;p&gt;v4, fixed test failure I&apos;ve seen before, incorporated feedback from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14512223" author="hadoopqa" created="Sat, 25 Apr 2015 03:59:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12728110/HBASE-13375-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12728110/HBASE-13375-v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit cd83d39fb4f50db901b699ba5470b5f709c95c69.&lt;br/&gt;
  ATTACHMENT ID: 12728110&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 28 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.cli.CLITestHelper.testAll(CLITestHelper.java:319)&lt;br/&gt;
	at org.apache.hadoop.cli.TestHDFSCLI.testAll(TestHDFSCLI.java:104)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13809//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13809//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13809//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13809//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13809//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13809//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13809//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13809//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14512236" author="mantonov" created="Sat, 25 Apr 2015 04:12:00 +0000"  >&lt;p&gt;That zombie doesn&apos;t look related.&lt;/p&gt;</comment>
                            <comment id="14514582" author="mantonov" created="Mon, 27 Apr 2015 18:11:00 +0000"  >&lt;p&gt;Any feedback on the latest patch? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=elserj&quot; class=&quot;user-hover&quot; rel=&quot;elserj&quot;&gt;Josh Elser&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14516220" author="ndimiduk" created="Tue, 28 Apr 2015 02:35:40 +0000"  >&lt;p&gt;Ping reviewers. Good for 1.1.0?&lt;/p&gt;</comment>
                            <comment id="14516223" author="elserj" created="Tue, 28 Apr 2015 02:41:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;Any feedback on the latest patch&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Looks fine to me!&lt;/p&gt;</comment>
                            <comment id="14516405" author="ndimiduk" created="Tue, 28 Apr 2015 05:30:08 +0000"  >&lt;p&gt;This and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt; both go together?&lt;/p&gt;</comment>
                            <comment id="14516523" author="anoop.hbase" created="Tue, 28 Apr 2015 06:39:34 +0000"  >&lt;p&gt;loadSuperUsers(Configuration conf)&lt;br/&gt;
Whether we need lazy loading in isSuperUser that an explicit loadSuperUsers call.  The explicit call look dangerous as what if this is missed in one process?  Are we doing the load in RS and HM?&lt;br/&gt;
When lazy loading we have to pass the Conf to isSuperUser by the way.&lt;/p&gt;

&lt;p&gt;Still I am not liking these methods in User.java&lt;br/&gt;
getGroupName(String aclKey) &lt;br/&gt;
isGroupPrincipal(String name) &lt;/p&gt;

&lt;p&gt;Rest all coming good.&lt;/p&gt;</comment>
                            <comment id="14516525" author="mantonov" created="Tue, 28 Apr 2015 06:41:45 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; generally yes. I think they might share a bit code as we hit the same problem with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=elserj&quot; class=&quot;user-hover&quot; rel=&quot;elserj&quot;&gt;Josh Elser&lt;/a&gt;, so when one of them is committed, the other might need one more rebase.&lt;/p&gt;

&lt;p&gt;When &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13565&quot; title=&quot;Create metrics for RPC requests routed through different thread pools&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13565&quot;&gt;HBASE-13565&lt;/a&gt; is ready, that would be the work in the same direction..&lt;/p&gt;</comment>
                            <comment id="14516543" author="mantonov" created="Tue, 28 Apr 2015 06:58:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; - thanks for review!&lt;/p&gt;

&lt;p&gt;Before this change we had multiple place when we init super users lists (access controller, TableAuthManager, and several label services in coprocessor-related environment. After this re-consolidation we&apos;ve got one place where we keep/load them, but we still need to call this initialization from somethere passing in proper Conf object.&lt;/p&gt;

&lt;p&gt;Since these super users/groups lists only make sense inside server processes, and we own codebase for them, I think that shouldn&apos;t be dangerous - if we were to forget to init this list in some process, it would just fail and we&apos;d fix the bug.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When lazy loading we have to pass the Conf to isSuperUser by the way.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hm? I think you mentioned before - &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Can we have isSuperUser () method as an instance method so no need to pass the user?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So that was the approach I took. Seems reasonable to me.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Still I am not liking these methods in User.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Why? After moving super users lists in this class they seem to belong here, as we need the methods to parse user names available in this class, and it&apos;s in hbase-common. Previously they lived in AccessControlLists, which is in hbase-server..so module dependencies get involved.&lt;/p&gt;
</comment>
                            <comment id="14516550" author="mantonov" created="Tue, 28 Apr 2015 07:01:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;Are we doing the load in RS and HM?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ib HRS constructor, near the place we initialize user provider in this class. So HM should reuse that.&lt;/p&gt;</comment>
                            <comment id="14516616" author="anoop.hbase" created="Tue, 28 Apr 2015 08:02:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;isSuperUser () method as an instance method &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sorry I missed conf param there..&lt;/p&gt;

&lt;p&gt;Abt the groups related methods in User..  These are utility kind of methods as per our way of specifying group name (with @ prefix)..  That is why I was thinking whether User is a correct place. Do we have any Util place where this can better sit?  From User.java also we can refer the util.. Am not sure where/whether we have any such Util. &lt;/p&gt;</comment>
                            <comment id="14518024" author="mantonov" created="Tue, 28 Apr 2015 20:50:38 +0000"  >&lt;p&gt;If we pass conf param to isSuperUser() method, we would compile list of superusers inside this method by extracting user/group names from this Conf param and adding current user (as per UserProvider) to the list, right?&lt;/p&gt;

&lt;p&gt;I kind of wanted to avoid that, thinking that it&apos;d be better to initialize these lists at server bootstrap (since it&apos;s not going to change in runtime after server startup, is it?) and use these pre-compiled lists later. What do you think?&lt;/p&gt;

&lt;p&gt;Regarding Util class for these 2 methods - looks like we don&apos;t have suitable class for that now. We have UserProvider, but it&apos;s not quite Utils class..&lt;/p&gt;</comment>
                            <comment id="14518374" author="ndimiduk" created="Tue, 28 Apr 2015 23:52:03 +0000"  >&lt;p&gt;Conversation not looking conclusive. Kicking this one out of 1.1. If someone feels strongly otherwise, please act accordingly in the next couple hours.&lt;/p&gt;</comment>
                            <comment id="14520373" author="mantonov" created="Wed, 29 Apr 2015 22:03:19 +0000"  >&lt;p&gt;I think there&apos;s just few points left which need to be agreed upon/clarified and look forward for more feedback/ideas on how the patch could be improved.&lt;/p&gt;</comment>
                            <comment id="14521168" author="yeqi" created="Thu, 30 Apr 2015 09:02:28 +0000"  >&lt;p&gt;Usually HBase is used in a multi-tenant style. Superuser is not always the top-priority tenant but sysadmin, so it&apos;s better to define priority based on tenant.&lt;/p&gt;</comment>
                            <comment id="14522433" author="mantonov" created="Thu, 30 Apr 2015 22:55:20 +0000"  >&lt;p&gt;Being able to define rpc priority based on the tenant group would be useful options (might be already covered by rpc throttling and quotes?), but perhaps it&apos;s further advancement?&lt;/p&gt;

&lt;p&gt;The way I see it though, superuser should have higher priority than any tenant, so (s)he can always use separate rpc thread pool to perform cluster maintenance tasks.&lt;/p&gt;</comment>
                            <comment id="14522434" author="mantonov" created="Thu, 30 Apr 2015 22:56:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; what do you think on my last comment on method signatures and the moment when we parse Configuration?&lt;/p&gt;</comment>
                            <comment id="14522436" author="devaraj" created="Thu, 30 Apr 2015 22:57:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;The way I see it though, superuser should have higher priority than any tenant, so (s)he can always use separate rpc thread pool to perform cluster maintenance tasks&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agree.&lt;/p&gt;</comment>
                            <comment id="14526304" author="yeqi" created="Mon, 4 May 2015 06:22:46 +0000"  >&lt;p&gt;Opps, RPC Throttling and quotas can meet the requirements. I forgot this feature is already there. Then it&apos;s ok&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14526305" author="yeqi" created="Mon, 4 May 2015 06:22:50 +0000"  >&lt;p&gt;Opps, RPC Throttling and quotas can meet the requirements. I forgot this feature is already there. Then it&apos;s ok&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14535634" author="mantonov" created="Fri, 8 May 2015 21:44:30 +0000"  >&lt;p&gt;I&apos;ll rebase current patch as is, this one is rotten a bit now.&lt;/p&gt;</comment>
                            <comment id="14544573" author="mantonov" created="Thu, 14 May 2015 23:07:43 +0000"  >&lt;p&gt;Rebased patch over changes made in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14544781" author="hadoopqa" created="Fri, 15 May 2015 02:07:47 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12732998/HBASE-13375-v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12732998/HBASE-13375-v5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 9ba7337ac82d13b22a1b0c40edaba7873c0bd795.&lt;br/&gt;
  ATTACHMENT ID: 12732998&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +        priority.getPriority(RequestHeader.newBuilder().setMethodName(methodName).build(), null, user));&lt;br/&gt;
+    checkMethod(conf, &quot;Multi&quot;, HConstants.NORMAL_QOS, qosFunction, MultiRequest.getDefaultInstance());&lt;br/&gt;
+    checkMethod(conf, reportFuncName, HConstants.SYSTEMTABLE_QOS, qosFunction, metaTransitionRequest);&lt;br/&gt;
+    checkMethod(conf, &quot;Multi&quot;, HConstants.NORMAL_QOS, qosFunction, MultiRequest.getDefaultInstance());&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDistributedLogReplay&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithCustomVisLabService&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithSLGStack&lt;br/&gt;
                  org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDefaultVisLabelService&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14050//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14050//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14050//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14050//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14050//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14050//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14050//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14050//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14544811" author="mantonov" created="Fri, 15 May 2015 02:40:59 +0000"  >&lt;p&gt;Ouch. Somehow initialization code in HRegionServer was lost after rebase.  Fixed in v6, fixed long lines too.&lt;/p&gt;

&lt;p&gt;Pinging &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14544891" author="hadoopqa" created="Fri, 15 May 2015 04:11:26 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12733044/HBASE-13375-v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12733044/HBASE-13375-v6.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 9ba7337ac82d13b22a1b0c40edaba7873c0bd795.&lt;br/&gt;
  ATTACHMENT ID: 12733044&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestQosFunction&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14054//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14054//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14054//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14054//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14054//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14054//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14054//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14054//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14545212" author="mantonov" created="Fri, 15 May 2015 09:32:28 +0000"  >&lt;p&gt;v7, fixed broken test. Let&apos;s see how it goes.&lt;/p&gt;</comment>
                            <comment id="14545405" author="hadoopqa" created="Fri, 15 May 2015 12:16:58 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12733095/HBASE-13375-v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12733095/HBASE-13375-v7.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 9ba7337ac82d13b22a1b0c40edaba7873c0bd795.&lt;br/&gt;
  ATTACHMENT ID: 12733095&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 32 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14057//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14057//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14057//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14057//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14057//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14057//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14057//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14057//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14550757" author="stack" created="Tue, 19 May 2015 16:51:23 +0000"  >&lt;p&gt;Reviewers, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=elserj&quot; class=&quot;user-hover&quot; rel=&quot;elserj&quot;&gt;Josh Elser&lt;/a&gt;, what you all think of the latest &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; patch? Skimming, it LGTM... good progress. Needs a nice release note I&apos;d say describing new config additions.&lt;/p&gt;</comment>
                            <comment id="14551802" author="anoop.hbase" created="Wed, 20 May 2015 04:42:43 +0000"  >&lt;p&gt;My only concerns were util methods added to User class.  These are group related stuff. &lt;br/&gt;
getGroupName(String aclKey) &lt;br/&gt;
isGroupPrincipal(String name)&lt;br/&gt;
I am -0 for that.&lt;/p&gt;

&lt;p&gt;Or can we move them to a new AuthenticationUtil or so? If this new class can be like a non util thing (some better name we need), we can even move the super user check also there. (isSuperUser(User)).   We can make this singleton and instantiate once passing the configuration.  That way we can even keep the User class untouched and no static variables( List of super users) addition..   What all think abt this?&lt;/p&gt;</comment>
                            <comment id="14551803" author="elserj" created="Wed, 20 May 2015 04:43:25 +0000"  >&lt;p&gt;LGTM (non-binding), I&apos;d say. One nit jumped out at me&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isSuperUser()
+    &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (superUsers == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || superGroups == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Super users/&lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt; groups lists haven&apos;t been initialized properly,&quot;&lt;/span&gt;);
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We&apos;re not doing any IO here, so an IOException is a little weird to throw. Not a huge issue (given how often IOException gets misused anyways).&lt;/p&gt;</comment>
                            <comment id="14552093" author="mantonov" created="Wed, 20 May 2015 10:16:17 +0000"  >&lt;p&gt;Speaking of the proper place for these 2 methods - I would agree that they may not be totally coherent with the User class scope, but, from practical standpoint, I&apos;m not sure I see any apparently better way. These method were moved here from AccessConstorlLists class, which is in hbase-server module and isn&apos;t accessible from places like hbase-common. I&apos;m somewhat reluctant to create new AuthenticationUtil class just to put there 2 one-liner methods (also - getGroupName() for example is basically producing a substring of another string - that&apos;s not really &quot;authentication&quot; functionality).&lt;/p&gt;

&lt;p&gt;Speaking of the Jira at more high level - this one started as optimization RPC priority handling, then is was found that the way we retrieve list of super user isn&apos;t the best one (VisibilityUtils it was originally), and then in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10619&quot; title=&quot;Don&amp;#39;t allow non super users to do DDL ops on system tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10619&quot;&gt;HBASE-10619&lt;/a&gt; it was pointed out that we have 4 or 5 places where we parse and cache this information and it&apos;d be better to reimplement it to keep this information in one place (User class was proposed). So I did these changes here, and I think &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10619&quot; title=&quot;Don&amp;#39;t allow non super users to do DDL ops on system tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10619&quot;&gt;HBASE-10619&lt;/a&gt; is now blocked &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; waiting for changes in that part of API.&lt;/p&gt;

&lt;p&gt;So I&apos;m thinking maybe we could move on with the implementation in latest patch to this jira, that would also unblock &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10619&quot; title=&quot;Don&amp;#39;t allow non super users to do DDL ops on system tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10619&quot;&gt;HBASE-10619&lt;/a&gt;, and open another jira if needed to discuss whether we should create AuthenticationUtil class, and if yes, should it be a singleton or not etc?&lt;/p&gt;</comment>
                            <comment id="14552104" author="anoop.hbase" created="Wed, 20 May 2015 10:27:04 +0000"  >&lt;p&gt;A static method to Public User class ( loadSuperUsers(Configuration conf) ) is also a worrying thing. Any way as I said am just -0. If others feel +1 pls go ahead with commit.&lt;/p&gt;</comment>
                            <comment id="14552166" author="anoop.hbase" created="Wed, 20 May 2015 11:38:05 +0000"  >&lt;p&gt;This is what new class I thought&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class Authentication** { &lt;span class=&quot;code-comment&quot;&gt;// Not getting a name
&lt;/span&gt;
&lt;span class=&quot;code-comment&quot;&gt;//singleton instance
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; superUsers, superGroups;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; initialize(Configuration){
 &lt;span class=&quot;code-comment&quot;&gt;// initialize &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt; user/group lists here
&lt;/span&gt;}

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; getInstance() {
  &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; RTE when called before initialize
&lt;/span&gt;}

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isSuperUser(User){

}

&lt;span class=&quot;code-comment&quot;&gt;//Group related utils.
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; isGroup()
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; getGroupName()

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14553611" author="anoop.hbase" created="Thu, 21 May 2015 04:39:33 +0000"  >&lt;p&gt;This jira has diverted attention from actual item..  Sorry abt that.  As we had to add methods to Public exposed User class was bit more careful.  So a viable solution is NOT to go with refactoring as part of this Jira. We can do that in another issue and then will handle &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10619&quot; title=&quot;Don&amp;#39;t allow non super users to do DDL ops on system tables&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10619&quot;&gt;HBASE-10619&lt;/a&gt;.  I can take up that new issue or if you would like to I can assign you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;.&lt;br/&gt;
The patch before I have added comment &quot;Do not use Visibility util APIs&quot; only will commit.  We had +1s for that.&lt;br/&gt;
Any objections Mikhail?  If you are busy, I will do the rebase and do commit.&lt;br/&gt;
Thanks for the perseverance man.&lt;/p&gt;</comment>
                            <comment id="14553689" author="mantonov" created="Thu, 21 May 2015 06:10:22 +0000"  >&lt;p&gt;Yeah, that makes sense I think. &lt;/p&gt;

&lt;p&gt;Let me rebase and post here the old patch (actually there were few improvements not related to superusers handling in latest versions so I want to port them to old patch), and then I can tear apart the v7 patch here  to take the code we need to change anyway and make a new patch for the new refactoring jira (would you create one?).&lt;/p&gt;</comment>
                            <comment id="14553698" author="anoop.hbase" created="Thu, 21 May 2015 06:18:43 +0000"  >&lt;p&gt;Thanks.&lt;br/&gt;
Ya I can create that Jira. If you wish I will assign you. Else I can work on that. np.&lt;/p&gt;
</comment>
                            <comment id="14554901" author="mantonov" created="Thu, 21 May 2015 19:19:00 +0000"  >&lt;p&gt;Thanks, I can pick it up (hope to reuse portions of code from this patch).&lt;/p&gt;</comment>
                            <comment id="14557270" author="mantonov" created="Sat, 23 May 2015 10:33:46 +0000"  >&lt;p&gt;here&apos;s rebased patch, based on v2&lt;/p&gt;</comment>
                            <comment id="14557304" author="anoop.hbase" created="Sat, 23 May 2015 12:06:50 +0000"  >&lt;p&gt;	      superUsers = new HashSet&amp;lt;&amp;gt;(VisibilityUtils.getSystemAndSuperUsers(&lt;br/&gt;
	        rpcServices.getConfiguration()).getFirst());&lt;br/&gt;
	      superGroups =new HashSet&amp;lt;&amp;gt;(VisibilityUtils.getSystemAndSuperUsers(&lt;br/&gt;
	        rpcServices.getConfiguration()).getSecond());&lt;br/&gt;
Why call API two times? Get once and use.&lt;/p&gt;

&lt;p&gt;user.getGroupNames() can be null?&lt;/p&gt;

&lt;p&gt;I can fix these on commit.  Will wait for a QA report on latest patch.  Thanks Mikhail.&lt;/p&gt;</comment>
                            <comment id="14557330" author="hadoopqa" created="Sat, 23 May 2015 13:17:49 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12735005/HBASE-13375-v8.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12735005/HBASE-13375-v8.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e93e1ea73c6ce5f632636c613068ddd877ebb60d.&lt;br/&gt;
  ATTACHMENT ID: 12735005&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +        priority.getPriority(RequestHeader.newBuilder().setMethodName(methodName).build(), null, user));&lt;br/&gt;
+    checkMethod(conf, &quot;Multi&quot;, HConstants.NORMAL_QOS, qosFunction, MultiRequest.getDefaultInstance());&lt;br/&gt;
+    checkMethod(conf, reportFuncName, HConstants.SYSTEMTABLE_QOS, qosFunction, metaTransitionRequest);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14161//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14161//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14161//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14161//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14161//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14161//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14161//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14161//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14557396" author="anoop.hbase" created="Sat, 23 May 2015 15:45:35 +0000"  >&lt;p&gt;V9 patch fixed 2 minor comments and long line comments.   This is what I pushed to master..&lt;br/&gt;
The patch is NOT applying to branch-1 and have many conflicts. Mind preparing one for branch-1 &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14557399" author="anoop.hbase" created="Sat, 23 May 2015 15:48:51 +0000"  >&lt;p&gt;Plan to commit this to branch-1 also.&lt;br/&gt;
branch-1.0 and branch-1.1 ?  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14557406" author="hadoopqa" created="Sat, 23 May 2015 15:59:43 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12735021/HBASE-13375-v9.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12735021/HBASE-13375-v9.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f28e3952905592c6cc3c6c07b2509795e1210e70.&lt;br/&gt;
  ATTACHMENT ID: 12735021&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 14 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14162//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14162//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14557470" author="hudson" created="Sat, 23 May 2015 18:51:32 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6512 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6512/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6512/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375&quot; title=&quot;Provide HBase superuser higher priority over other users in the RPC handling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13375&quot;&gt;&lt;del&gt;HBASE-13375&lt;/del&gt;&lt;/a&gt; Provide HBase superuser higher priority over other users in the RPC handling. (Mikhail Antonov) (anoopsamjohn: rev f28e3952905592c6cc3c6c07b2509795e1210e70)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterPriorityRpc.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQosFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestPriorityRpc.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/PriorityFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14557571" author="mantonov" created="Sat, 23 May 2015 23:24:34 +0000"  >&lt;p&gt;Thanks Anoop, I&apos;ll make patch for 1.0 and 1.1 tonight.&lt;/p&gt;</comment>
                            <comment id="14557621" author="mantonov" created="Sun, 24 May 2015 03:59:20 +0000"  >&lt;p&gt;Just noticed that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt; only went to 1.1.1 and 1.2, but not 1.0, so I think this one should follow the same path?&lt;/p&gt;</comment>
                            <comment id="14557676" author="mantonov" created="Sun, 24 May 2015 08:18:16 +0000"  >&lt;p&gt;Rebased v9 to branch 1.1, I believe it should also apply to 1.2. I guess we don&apos;t really need that for branch-1.0?&lt;/p&gt;</comment>
                            <comment id="14557706" author="hadoopqa" created="Sun, 24 May 2015 10:59:54 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12735058/HBASE-13375-v9-branch-1.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12735058/HBASE-13375-v9-branch-1.1.patch&lt;/a&gt;&lt;br/&gt;
  against branch-1.1 branch at commit f28e3952905592c6cc3c6c07b2509795e1210e70.&lt;br/&gt;
  ATTACHMENT ID: 12735058&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 3801 checkstyle errors (more than the master&apos;s current 3799 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14165//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14557745" author="anoop.hbase" created="Sun, 24 May 2015 14:05:42 +0000"  >&lt;p&gt;As of now I plan to commit this to branch-1 only (ie. 1.2.0)  Need +1 signal from RMs to include to patch branches branch-1.0 and/or branch-1.1&lt;/p&gt;</comment>
                            <comment id="14557770" author="anoop.hbase" created="Sun, 24 May 2015 16:00:25 +0000"  >&lt;p&gt;Pushed to branch-1 also.  Pls let me know you prefer this for branch-1.1 , branch-1.0  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14557809" author="apurtell" created="Sun, 24 May 2015 18:07:38 +0000"  >&lt;p&gt;PriorityFunction is LP/Evolving(COPROC, PHOENIX). That interface has  one method signature and this patch changes it, so by definition will break all users. I don&apos;t want this as-is on 0.98 and our compatibility guidelines (&lt;a href=&quot;https://hbase.apache.org/book.html#hbase.versioning&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hbase.apache.org/book.html#hbase.versioning&lt;/a&gt;) don&apos;t allow this kind of change on a patch release of branch-1.0 or branch-1.1 as-is either. This kind of change would be ok for the next minor release (1.2) or master. &lt;/p&gt;

&lt;p&gt;The original &apos;getPriority&apos; method in PriorityFunction is defined as:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getPriority(RequestHeader header, Message param);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Why not leave it in place and add a new user-aware method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getPriority(RequestHeader header, Message param, User user);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then we can detect when an implementer of PriorityFunction has the user-aware getPriority method and call it if available. If not, we call the old method. There will be no compatibility issues.&lt;/p&gt;</comment>
                            <comment id="14557810" author="apurtell" created="Sun, 24 May 2015 18:10:03 +0000"  >&lt;p&gt;We could resolve this issue now that it&apos;s been committed already for the next 1.x patch release and master? Could do the above suggestion in a backport JIRA for older branches if someone wants it there.&lt;/p&gt;</comment>
                            <comment id="14557813" author="anoop.hbase" created="Sun, 24 May 2015 18:13:44 +0000"  >&lt;p&gt;Agree with you Andy. That is why I thought keep in 1.2 and 2.0 only.  If required we can open backport Jira.&lt;/p&gt;</comment>
                            <comment id="14557819" author="hudson" created="Sun, 24 May 2015 18:42:10 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2 #101 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/101/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/101/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375&quot; title=&quot;Provide HBase superuser higher priority over other users in the RPC handling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13375&quot;&gt;&lt;del&gt;HBASE-13375&lt;/del&gt;&lt;/a&gt; Provide HBase superuser higher priority over other users in the RPC handling. (Mikhail Antonov) (anoopsamjohn: rev 2542a38e217a5089c678faa9f8818db4c0c553a2)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/PriorityFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestPriorityRpc.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQosFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterPriorityRpc.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14557938" author="mantonov" created="Mon, 25 May 2015 02:47:06 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;. I&apos;ll make the patch for backporting if anyone is interested in getting this change in any branch earlier than 1.2. Let me also add a release note here.&lt;/p&gt;</comment>
                            <comment id="14560436" author="enis" created="Wed, 27 May 2015 05:33:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;PriorityFunction is LP/Evolving(COPROC, PHOENIX). That interface has one method signature and this patch changes it, so by definition will break all users. I don&apos;t want this as-is on 0.98 and our compatibility guidelines (&lt;a href=&quot;https://hbase.apache.org/book.html#hbase.versioning&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hbase.apache.org/book.html#hbase.versioning&lt;/a&gt;) don&apos;t allow this kind of change on a patch release of branch-1.0 or branch-1.1 as-is either. This kind of change would be ok for the next minor release (1.2) or master.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed with the analysis for 1.0 and 1.1. This is a great addition for 1.2+ though. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="13006699">HBASE-16676</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12832354">HBASE-13755</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12786293">HBASE-13351</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12697367">HBASE-10619</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                            <outwardlinks description="breaks">
                                        <issuelink>
            <issuekey id="12941453">HBASE-15315</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12709201" name="HBASE-13375-v0.patch" size="13953" author="mantonov" created="Fri, 3 Apr 2015 09:26:41 +0000"/>
                            <attachment id="12724285" name="HBASE-13375-v1.patch" size="18402" author="mantonov" created="Thu, 9 Apr 2015 18:21:24 +0000"/>
                            <attachment id="12724149" name="HBASE-13375-v1.patch" size="18402" author="mantonov" created="Thu, 9 Apr 2015 06:07:39 +0000"/>
                            <attachment id="12724101" name="HBASE-13375-v1.patch" size="18402" author="mantonov" created="Thu, 9 Apr 2015 01:36:31 +0000"/>
                            <attachment id="12725373" name="HBASE-13375-v2.patch" size="19347" author="mantonov" created="Tue, 14 Apr 2015 20:38:25 +0000"/>
                            <attachment id="12727084" name="HBASE-13375-v3.patch" size="50419" author="mantonov" created="Wed, 22 Apr 2015 01:09:13 +0000"/>
                            <attachment id="12728110" name="HBASE-13375-v4.patch" size="50677" author="mantonov" created="Sat, 25 Apr 2015 01:04:24 +0000"/>
                            <attachment id="12732998" name="HBASE-13375-v5.patch" size="51035" author="mantonov" created="Thu, 14 May 2015 23:07:43 +0000"/>
                            <attachment id="12733044" name="HBASE-13375-v6.patch" size="52434" author="mantonov" created="Fri, 15 May 2015 02:40:59 +0000"/>
                            <attachment id="12733095" name="HBASE-13375-v7.patch" size="52889" author="mantonov" created="Fri, 15 May 2015 09:32:28 +0000"/>
                            <attachment id="12735005" name="HBASE-13375-v8.patch" size="20016" author="mantonov" created="Sat, 23 May 2015 10:33:46 +0000"/>
                            <attachment id="12735058" name="HBASE-13375-v9-branch-1.1.patch" size="20255" author="mantonov" created="Sun, 24 May 2015 08:18:16 +0000"/>
                            <attachment id="12735021" name="HBASE-13375-v9.patch" size="19470" author="anoop.hbase" created="Sat, 23 May 2015 15:45:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 1 Apr 2015 05:26:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 29 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i27mof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This JIRA modifies the signature of PriorityFunction#getPriority() method to also take request user as a parameter; all RPC requests sent by super users (as determined by cluster configuration) are executed with Admin QoS.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>