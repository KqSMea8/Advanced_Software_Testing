<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:39:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6758/HBASE-6758.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6758] [replication] The replication-executor should make sure the file that it is replicating is closed before declaring success on that file</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6758</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I have seen cases where the replication-executor would lose data to replicate since the file hasn&apos;t been closed yet. Upon closing, the new data becomes visible. Before that happens the ZK node shouldn&apos;t be deleted in ReplicationSourceManager.logPositionAndCleanOldLogs. Changes need to be made in ReplicationSource.processEndOfFile as well (currentPath related).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12607103">HBASE-6758</key>
            <summary>[replication] The replication-executor should make sure the file that it is replicating is closed before declaring success on that file</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="devaraj">Devaraj Das</assignee>
                                    <reporter username="devaraj">Devaraj Das</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Sep 2012 17:52:56 +0000</created>
                <updated>Mon, 23 Sep 2013 18:30:43 +0000</updated>
                            <resolved>Fri, 19 Oct 2012 19:11:07 +0000</resolved>
                                                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13456848" author="devaraj" created="Mon, 17 Sep 2012 07:04:19 +0000"  >&lt;p&gt;Attaching a patch for 0.92. The main idea is that at the beginning of the main loop in replication executor&apos;s run method, it is checked whether the file pointed to by getCurrentPath is presently in use by the WAL for writing. If so, all the methods that are invoked later on in the present iteration of the loop skips those operations that would remove the file from the ZK queue, or, consider a file has been completely replicated.&lt;/p&gt;

&lt;p&gt;With this patch, I haven&apos;t observed failures in TestReplication.queueFailover (for the reason mentioned in the jira Description) for 100s of runs.&lt;/p&gt;</comment>
                            <comment id="13457068" author="yuzhihong@gmail.com" created="Mon, 17 Sep 2012 14:59:26 +0000"  >&lt;p&gt;@Devaraj:&lt;br/&gt;
Thanks for your effort.&lt;br/&gt;
I got the following at compilation time:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] /home/hduser/92/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java:[317,11] readAllEntriesToReplicateOrNextFile(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;) in org.apache.hadoop.hbase.replication.regionserver.ReplicationSource cannot be applied to ()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do you see similar error ?&lt;/p&gt;</comment>
                            <comment id="13457097" author="stack" created="Mon, 17 Sep 2012 15:45:28 +0000"  >&lt;p&gt;Rather than change all new Replication invocations to take a null, why not override the Replication constructor?  Your patch would be smaller.&lt;/p&gt;

&lt;p&gt;Could there be issues with isFileInUse in multithreaded context?  Should currentFilePath be an atomic reference so all threads see the changes when they happen?  Do you think this an issue?&lt;/p&gt;

&lt;p&gt;Do we have to pass in an HRegionServer instance into ReplicationSourceManager?  Can it be one of the Interfaces Server or RegionServerServices?  Or looking at why you need it, you want it because you want to get at HLog instance.  Can we not pass this?  Or better, an Interface that has isFileInUse on it?&lt;/p&gt;

&lt;p&gt;Currently, you are passing an HRegionServer Instance to ReplicationSourceManager to which is added a public method that exposes the HRegionServer instance on which we invoke the getWAL method to call isFileInUse.  We&apos;re adding a bit of tangle.&lt;/p&gt;

&lt;p&gt;Otherwise, I love the fact that you are figuring bugs and fixes in replication just using the test.  Painful I&apos;d imagine.  Great work.&lt;/p&gt;
</comment>
                            <comment id="13457156" author="devaraj" created="Mon, 17 Sep 2012 17:08:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhihyu%40ebaysf.com&quot; class=&quot;user-hover&quot; rel=&quot;zhihyu@ebaysf.com&quot;&gt;Ted Yu&lt;/a&gt; Not sure why you got a compilation error. Will look..&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; Thanks for the detailed comments. Here are the responses.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Rather than change all new Replication invocations to take a null, why not override the Replication constructor? Your patch would be smaller.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I had considered that but it didn&apos;t seem adding a new constructor is justified in the long run. There probably are no consumers of the constructor outside HBase, etc., and adding another constructor means new code to take care of, etc. So although it makes the patch bigger, I think it&apos;s okay..&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Could there be issues with isFileInUse in multithreaded context? Should currentFilePath be an atomic reference so all threads see the changes when they happen? Do you think this an issue?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There shouldn&apos;t be any multithreading issues here. Each ReplicationExecutor thread has its own copy of everything (including currentFilePath), and the getters/setters are in the same thread context.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do we have to pass in an HRegionServer instance into ReplicationSourceManager? Can it be one of the Interfaces Server or RegionServerServices? Or looking at why you need it, you want it because you want to get at HLog instance. Can we not pass this? Or better, an Interface that has isFileInUse on it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I tried to pass the HLog instance to Replication&apos;s constructor call within HRegionServer. But the code is kind of tangled up. HRegionServer instantiates a Replication object (in setupWALAndReplication). HLog is instantiated in instantiateHLog, and the constructor of HLog invokes rollWriter. If the Replication object was not registered prior to rollWriter call, things don&apos;t work (which means the Replication object needs to be constructed first but the HLog instance is not available yet). I tried fixing it but then I ran into other issues...&lt;/p&gt;

&lt;p&gt;But yeah, I like the interface idea. Will try to refactor the code in that respect.&lt;/p&gt;</comment>
                            <comment id="13457194" author="jdcryans" created="Mon, 17 Sep 2012 17:57:11 +0000"  >&lt;p&gt;My understanding of this patch is that it reduces the race condition but it still leaves a small window eg you can take the &quot;fileNotInUse&quot; snapshot, get &quot;false&quot;, and the moment after that the log could roll. If this is correct, I&apos;m not sure it&apos;s worth the added complexity.&lt;/p&gt;

&lt;p&gt;It seems to me this is a case where we&apos;d need to lock HLog.cacheFlushLock for the time we read the log to be 100% sure log rolling doesn&apos;t happen. This has multiple side effects like delaying flushes and log rolls for a few ms while replication is reading the log. It would also require having a way to get to the WAL from ReplicationSource.&lt;/p&gt;

&lt;p&gt;&amp;lt;blue skying&amp;gt;While I&apos;m thinking about this, it just occurred to me that when we read a log that&apos;s not being written to then we don&apos;t need the open/close file dance since the new data is already available. Possible optimization here!&amp;lt;/blue skying&amp;gt;&lt;/p&gt;

&lt;p&gt;Anyways, one solution I can think of that doesn&apos;t involve leaking HRS into replication would be giving the log a &quot;second chance&quot;. Basically if you get an EOF, flip the secondChance bit. If it&apos;s on then you don&apos;t get rid of that log yet. Reset the bit when you loop back to read, now if there was new data added you should get it else go to the next log.&lt;/p&gt;</comment>
                            <comment id="13457296" author="devaraj" created="Mon, 17 Sep 2012 20:39:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; Thanks for looking. Responses below.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;My understanding of this patch is that it reduces the race condition but it still leaves a small window eg you can take the &quot;fileNotInUse&quot; snapshot, get &quot;false&quot;, and the moment after that the log could roll. If this is correct, I&apos;m not sure it&apos;s worth the added complexity.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think there is ever that window. The replication executor thread picks up a path that the LogRoller puts in the replicator&apos;s queue BEFORE the log roll happens (and the HLog constructor puts the first path before the replication executor starts). The replication executor is always trailing, and so when the HLog guy says that a path is not in use (being written to), it seems to me a fact that it indeed is not being written to and any writes that ever happened was in the past. Also note that the currentPath is reset AFTER a log roll, which is kind of delayed..&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It seems to me this is a case where we&apos;d need to lock HLog.cacheFlushLock for the time we read the log to be 100% sure log rolling doesn&apos;t happen. This has multiple side effects like delaying flushes and log rolls for a few ms while replication is reading the log. It would also require having a way to get to the WAL from ReplicationSource.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I tried my best to avoid taking that crucial lock!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Anyways, one solution I can think of that doesn&apos;t involve leaking HRS into replication would be giving the log a &quot;second chance&quot;. Basically if you get an EOF, flip the secondChance bit. If it&apos;s on then you don&apos;t get rid of that log yet. Reset the bit when you loop back to read, now if there was new data added you should get it else go to the next log.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I considered some variant of this. However, I gave it up and took a more conservative approach - make sure that the replication-executor thread gets at least one pass at a CLOSED file. All other solutions seemed incomplete to me and prone to races...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; forgot to answer one of your previous questions.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Should currentFilePath be an atomic reference so all threads see the changes when they happen?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think volatile suffices for the use case here.&lt;/p&gt;</comment>
                            <comment id="13457342" author="jdcryans" created="Mon, 17 Sep 2012 21:20:14 +0000"  >&lt;p&gt;I see, all that double-negation (eg !fileNotInUse) confused me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;So in layman&apos;s terms, your patch short circuits all the checks to change the current path if we know for sure that the file we are replicating from is being written to. The side effect is that we won&apos;t quit the current file unless it has aged right? &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The replication executor is always trailing, and so when the HLog guy says that a path is not in use (being written to), it seems to me a fact that it indeed is not being written to and any writes that ever happened was in the past.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;FWIW that might not be totally true, at least in 0.94 HLog.postLogRoll is called before HLog.cleanupCurrentWriter which does issue a sync().&lt;/p&gt;
</comment>
                            <comment id="13457437" author="devaraj" created="Mon, 17 Sep 2012 22:44:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;I see, all that double-negation (eg !fileNotInUse) confused me&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry about that. I&apos;ll see if I can change it to single negation &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So in layman&apos;s terms, your patch short circuits all the checks to change the current path if we know for sure that the file we are replicating from is being written to. The side effect is that we won&apos;t quit the current file unless it has aged right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes .. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;FWIW that might not be totally true, at least in 0.94 HLog.postLogRoll is called before HLog.cleanupCurrentWriter which does issue a sync().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t get this, JD. Could you please clarify a bit more? Given the fact that the currentPath would be updated only after the call to cleanupCurrentWriter, I don&apos;t see a difference in the behavior between 0.92 and 0.94... (maybe I am missing something though).&lt;/p&gt;</comment>
                            <comment id="13457500" author="devaraj" created="Tue, 18 Sep 2012 00:23:12 +0000"  >&lt;p&gt;Updated patch. Uses RegionServerServices instead of HRegionServer. Also, renames the variable fileNotInUse to fileInUse to make the code more readable.&lt;/p&gt;</comment>
                            <comment id="13457502" author="devaraj" created="Tue, 18 Sep 2012 00:30:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;Otherwise, I love the fact that you are figuring bugs and fixes in replication just using the test. Painful I&apos;d imagine. Great work.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, Stack. Yes, I have burnt some midnight oil on these issues. Fun though.&lt;/p&gt;</comment>
                            <comment id="13457526" author="yuzhihong@gmail.com" created="Tue, 18 Sep 2012 01:18:12 +0000"  >&lt;p&gt;@Devaraj:&lt;br/&gt;
I tried your patch v2 and I still got:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
queueFailover(org.apache.hadoop.hbase.replication.TestReplication)  Time elapsed: 86.817 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
java.lang.AssertionError: Waited too much time &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; queueFailover replication. Waited 41973ms.
  at org.junit.Assert.fail(Assert.java:93)
  at org.apache.hadoop.hbase.replication.TestReplication.queueFailover(TestReplication.java:666)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I will attach some test output momentarily.&lt;/p&gt;</comment>
                            <comment id="13457998" author="devaraj" created="Tue, 18 Sep 2012 17:55:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; Hey thanks for taking the patch for a spin.&lt;/p&gt;

&lt;p&gt;Talk about races! Here it seems like the splitter didn&apos;t complete within the expected time, and the replication didn&apos;t happen for some data. &lt;/p&gt;

&lt;p&gt;Here are the relevant log snippets (look for &quot;considering dumping&quot; where the file got dropped before the splitter completed). But in this case, the issue can be addressed by increasing the number of retries (which is already configurable). The patch attached here doesn&apos;t attempt to solve this problem.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;
2012-09-17 18:13:03,665 WARN  [ReplicationExecutor-0.replicationSource,2-sea-lab-0,41831,1347930742751] regionserver.ReplicationSource(555): 2-sea-lab-0,41831,1347930742751 Got:
java.io.IOException: File from recovered queue is nowhere to be found
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSource.openReader(ReplicationSource.java:537)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSource.run(ReplicationSource.java:304)
Caused by: java.io.FileNotFoundException: File does not exist: hdfs://localhost:41196/user/hduser/hbase/.oldlogs/sea-lab-0%2C41831%2C1347930742751.1347930771911
        at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:517)
        at org.apache.hadoop.fs.FileSystem.getLength(FileSystem.java:796)
        at org.apache.hadoop.io.SequenceFile$Reader.&amp;amp;lt;init&amp;amp;gt;(SequenceFile.java:1475)
        at org.apache.hadoop.io.SequenceFile$Reader.&amp;amp;lt;init&amp;amp;gt;(SequenceFile.java:1470)
        at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader$WALReader.&amp;amp;lt;init&amp;amp;gt;(SequenceFileLogReader.java:58)
        at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader.init(SequenceFileLogReader.java:166)
        at org.apache.hadoop.hbase.regionserver.wal.HLog.getReader(HLog.java:689)
        at org.apache.hadoop.hbase.replication.regionserver.ReplicationSource.openReader(ReplicationSource.java:503)
        ... 1 more

2012-09-17 18:13:03,665 WARN  [ReplicationExecutor-0.replicationSource,2-sea-lab-0,41831,1347930742751] regionserver.ReplicationSource(559): Waited too long for this file, considering dumping

2012-09-17 18:13:03,665 INFO  [ReplicationExecutor-0.replicationSource,2-sea-lab-0,41831,1347930742751] regionserver.ReplicationSourceManager(365): Done with the recovered queue 2-sea-lab-0,41831,1347930742751

2012-09-17 18:13:04,305 DEBUG [main-EventThread] wal.HLogSplitter(657): Archived processed log hdfs://localhost:41196/user/hduser/hbase/.logs/sea-lab-0,41831,1347930742751-splitting/sea-lab-0%2C41831%2C1347930742751.1347930771911 to hdfs://localhost:41196/user/hduser/hbase/.oldlogs/sea-lab-0%2C41831%2C1347930742751.1347930771911

2012-09-17 18:13:04,306 INFO  [main-EventThread] master.SplitLogManager(392): Done splitting /1/splitlog/hdfs%3A%2F%2Flocalhost%3A41196%2Fuser%2Fhduser%2Fhbase%2F.logs%2Fsea-lab-0%2C41831%2C1347930742751-splitting%2Fsea-lab-0%252C41831%252C1347930742751.1347930771911

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13460648" author="stack" created="Fri, 21 Sep 2012 17:41:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt; What you think of Ted comment above boss?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; Any comment on this patch?&lt;/p&gt;</comment>
                            <comment id="13460664" author="devaraj" created="Fri, 21 Sep 2012 18:01:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; I have already responded to Ted&apos;s comment. In summary, the problem is that the log-splitter couldn&apos;t complete its work soon enough, and hence the file wasn&apos;t moved to .oldlogs soon enough. The replicator did the maxRetries and gave up. So this is a different issue (and maybe solved by increasing the value of maxRetries in the config.)&lt;/p&gt;</comment>
                            <comment id="13462074" author="devaraj" created="Mon, 24 Sep 2012 20:15:01 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; could you please have a look at the recent patch. Thanks!&lt;/p&gt;</comment>
                            <comment id="13465595" author="devaraj" created="Fri, 28 Sep 2012 13:35:49 +0000"  >&lt;p&gt;Patch rebased for trunk. &lt;/p&gt;

&lt;p&gt;I have tested the patch for 0.92 (attached earlier) on real clusters. Seemed to work just fine.&lt;/p&gt;</comment>
                            <comment id="13465644" author="hadoopqa" created="Fri, 28 Sep 2012 14:36:03 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12546989/6758-trunk-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12546989/6758-trunk-1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 149 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSide&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2959//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13468728" author="jdcryans" created="Wed, 3 Oct 2012 18:33:40 +0000"  >&lt;p&gt;I really don&apos;t like that we have to pass down another instance of HRS (through RegionServerServices). The fact that we&apos;re now doing this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Replication(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.fs, logdir, oldLogDir): &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Replication(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.fs, logdir, oldLogDir, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;): &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;is making me sad. Also it leaks all over the code. It seems to me that there should be another way to handle this just in ReplicationSource.&lt;/p&gt;

&lt;p&gt;At the moment I&apos;d be +1 for commit only to trunk and on commit this logging will need to cleaned up:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;File &quot;&lt;/span&gt; + getCurrentPath() + &lt;span class=&quot;code-quote&quot;&gt;&quot; in use&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is ok with you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13468751" author="devaraj" created="Wed, 3 Oct 2012 19:13:45 +0000"  >&lt;p&gt;Thanks, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; for looking at the patch. Actually, upon looking at the RegionServerServices interface closely, I see that it extends the Server interface. So the problem you pointed out could be addressed by making the affected constructors and methods (the ones that I changed to have the new RegionServerServices argument) to have only RegionServerServices instead of Server/Stoppable instances.&lt;/p&gt;

&lt;p&gt;Will submit a patch soon. Hope that will look better.&lt;/p&gt;</comment>
                            <comment id="13468762" author="stack" created="Wed, 3 Oct 2012 19:33:03 +0000"  >&lt;p&gt;Can we not pass down RegionServerServices?  Can we pass a narrow Interface instead?&lt;/p&gt;
</comment>
                            <comment id="13468800" author="devaraj" created="Wed, 3 Oct 2012 20:30:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can we not pass down RegionServerServices? Can we pass a narrow Interface instead?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think we can (I can pull out the getWAL() method from the interface RegionServerServices into a new interface and have RegionServerServices extend that..). But in that case we will pass two instances of HRS still (as pointed out by JD earlier). But thinking about it, that probably makes downstream methods&apos; abstractions cleaner (when compared with the approach of having them accept a fat interface).&lt;/p&gt;</comment>
                            <comment id="13468986" author="devaraj" created="Wed, 3 Oct 2012 23:43:02 +0000"  >&lt;p&gt;In the trunk case, I think something better can be done (and the interface changes can be avoided). Replication.postLogRoll could do the enqueue of the new path in the ReplicationSource&apos;s queue. The Replication.preLogRoll would do everything else (creating ZK entries, etc.) except the enqueuing of the path in the queue.. &lt;/p&gt;

&lt;p&gt;The postLogRoll is currently called before the writer is reset (to &lt;em&gt;nextWriter&lt;/em&gt;) in FSHLog.rollWriter. I propose that it be called after the writer is reset. That in my opinion seems to be a more precise place for calling postLogRoll..&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13469003" author="devaraj" created="Thu, 4 Oct 2012 00:04:38 +0000"  >&lt;p&gt;This patch demonstrates what I said in my last comment. This looks cute to me (the same approach can be used in 0.94 as well).&lt;/p&gt;</comment>
                            <comment id="13469009" author="devaraj" created="Thu, 4 Oct 2012 00:06:59 +0000"  >&lt;p&gt;In case it is not clear what&apos;s the deal with delaying the enqueueing of the new WAL file, the problem described in this jira happens because the new WAL file is enqueued too early (before the last WAL file is closed).&lt;/p&gt;</comment>
                            <comment id="13469063" author="hadoopqa" created="Thu, 4 Oct 2012 01:32:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12547636/6758-trunk-2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12547636/6758-trunk-2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 83 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.backup.example.TestZooKeeperTableArchiveClient&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestAtomicOperation&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2999//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13469834" author="devaraj" created="Thu, 4 Oct 2012 23:30:43 +0000"  >&lt;p&gt;Attaching a more complete patch based on the new approach .. The changes done to ReplicationSource.java in the earlier patch to do with &quot;fileInUse&quot; is still needed here (I renamed the variable &quot;fileInUse&quot; to be more reflective of what it actually is used for though).&lt;/p&gt;</comment>
                            <comment id="13469841" author="zhihyu@ebaysf.com" created="Thu, 4 Oct 2012 23:42:44 +0000"  >&lt;p&gt;Thanks for your continued effort, Devaraj.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  void prelogRoll(Path newLog) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think the &apos;l&apos; of &apos;log&apos; should be capitalized.&lt;br/&gt;
Same here:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  void postlogRoll(Path newLog) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;nit: since the following line is modified, please add space after if:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(readAllEntriesToReplicateOrNextFile()) {
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(readAllEntriesToReplicateOrNextFile(fileInUse)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please add javadoc for the new parameter:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   /**
    * Do the shipping logic
    */
-  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void shipEdits() {
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void shipEdits(&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; fileInUse) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13469850" author="devaraj" created="Thu, 4 Oct 2012 23:58:25 +0000"  >&lt;p&gt;Thanks, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt; for looking. I will incorporate your comments in the next version of the patch (once I hear back from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; and/or &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13469930" author="hadoopqa" created="Fri, 5 Oct 2012 00:53:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12547851/6758-trunk-3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12547851/6758-trunk-3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 81 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3010//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13472982" author="jdcryans" created="Wed, 10 Oct 2012 04:30:07 +0000"  >&lt;p&gt;The last time I played around postLogRoll in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3515&quot; title=&quot;[replication] ReplicationSource can miss a log after RS comes out of GC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3515&quot;&gt;&lt;del&gt;HBASE-3515&lt;/del&gt;&lt;/a&gt;, I found that we must ensure that we have that log up in ZK before we start writing to it because it would be possible for writers to append and at the same time not be able to add the log in ZK because the session timed out. &lt;/p&gt;

&lt;p&gt;The current code blocks talking to ZK.&lt;/p&gt;</comment>
                            <comment id="13473005" author="devaraj" created="Wed, 10 Oct 2012 05:44:32 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt;, this patch doesn&apos;t change that behavior at all (new log is put up in ZK before the log is being written to, and blocks talking to ZK..). This patch only changes the postLogRoll placement and that deterministically ensures the previous log file is really closed before enqueuing the new log for replication. The code changes in the replicator thread (ReplicationSource.java) makes sure that the entire iteration of the loop &quot;sees&quot; a closed log file at least once (and hence takes care of the problem reported in the jira).&lt;/p&gt;</comment>
                            <comment id="13473419" author="jdcryans" created="Wed, 10 Oct 2012 18:03:03 +0000"  >&lt;p&gt;Ah I see, I didn&apos;t fully grok the new preRoll/postRoll dance in my first review. That&apos;s clever.&lt;/p&gt;

&lt;p&gt;My one last concern before committing would be what happens when we are able to compute a new HLog name and put it up in ZK, but then fail to create the HLog and the RS dies. Will the recovered queue hang or will it abandon that HLog? FWIW there&apos;s another jira regarding that problem but this could be a new failure case.&lt;/p&gt;</comment>
                            <comment id="13473566" author="devaraj" created="Wed, 10 Oct 2012 21:11:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;Ah I see, I didn&apos;t fully grok the new preRoll/postRoll dance in my first review. That&apos;s clever.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool. Thanks for taking a pass at this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Will the recovered queue hang or will it abandon that HLog? FWIW there&apos;s another jira regarding that problem but this could be a new failure case.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The change done to the placement of the postLogRoll call in the patch will not affect recovered queues. This will only affect files that the RS in question is creating himself. The changes in ReplicationSource.java will only take effect for non-recovered files (there is a check &lt;em&gt;!this.queueRecovered&lt;/em&gt; before setting &lt;em&gt;currentWALisBeingWrittenTo&lt;/em&gt; to true).. So I think we are covered (please let me know if I missed something or misunderstood your concern).&lt;/p&gt;

&lt;p&gt;I&apos;ll submit a patch shortly with the nits pointed out by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt; fixed.&lt;/p&gt;</comment>
                            <comment id="13473577" author="devaraj" created="Wed, 10 Oct 2012 21:28:14 +0000"  >&lt;p&gt;Addresses the comments from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13473580" author="jdcryans" created="Wed, 10 Oct 2012 21:31:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;please let me know if I missed something or misunderstood your concern&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Consider this scenario. First this runs:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Path newPath = computeFilename();&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then with your patch we add this file in ZK during:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;i.preLogRoll(oldPath, newPath);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Now let&apos;s say HDFS becomes unavailable or the RS fails and never gets to this line:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;HLog.Writer nextWriter = this.createWriterInstance(fs, newPath, conf);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You end up with a log tracked in ZK that doesn&apos;t exist. This RS&apos;s queue will be recovered by another RS that will eventually try to read from that non-existing file. My concern is how we&apos;re going to treat that file.&lt;/p&gt;</comment>
                            <comment id="13473593" author="devaraj" created="Wed, 10 Oct 2012 21:49:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt;, this sequence of events could happen currently too, isn&apos;t it? The lines of code that I moved are to do with postLogRoll which happens after the sequence that you are talking about. This problem exists with/without this patch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You end up with a log tracked in ZK that doesn&apos;t exist. This RS&apos;s queue will be recovered by another RS that will eventually try to read from that non-existing file. My concern is how we&apos;re going to treat that file.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To answer your question, I think the RS that picks this queue up will dump the file after a couple of retries (since the file doesn&apos;t exist and will never show up in the recovered logs directory).&lt;/p&gt;</comment>
                            <comment id="13473647" author="jdcryans" created="Wed, 10 Oct 2012 23:00:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;The lines of code that I moved are to do with postLogRoll which happens after the sequence that you are talking about. This problem exists with/without this patch.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I disagree. Right now we add the log in ZK under postLogRoll() and createWriterInstance will run before that so the file should exist at least.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think the RS that picks this queue up will dump the file after a couple of retries&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah the fact that it&apos;s the last file and that the multiplier would go to the max and that it&apos;s a recovered queue should take care of that.&lt;/p&gt;</comment>
                            <comment id="13473670" author="devaraj" created="Wed, 10 Oct 2012 23:20:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;I disagree. Right now we add the log in ZK under postLogRoll() and createWriterInstance will run before that so the file should exist at least.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah! and Ooops! I forgot about the fact that I changed the code to have preLogRoll not be ignored in the replication handler. Sorry, all the time I was thinking about the change in the placement of the call to postLogRoll.. So yes, it could happen that the logfile is up in ZK before the file exists but it appears (as we just discussed in the previous comments) that the issue would take care of itself (the RS that picks this file would dump it after some retries)...&lt;/p&gt;</comment>
                            <comment id="13473701" author="hadoopqa" created="Wed, 10 Oct 2012 23:47:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12548635/6758-trunk-4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12548635/6758-trunk-4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 81 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 5 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.backup.example.TestZooKeeperTableArchiveClient&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3030//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13476313" author="devaraj" created="Mon, 15 Oct 2012 18:04:13 +0000"  >&lt;p&gt;IMO the last patch is good to go. Is there anything pending from my end on this issue?&lt;/p&gt;</comment>
                            <comment id="13478667" author="jdcryans" created="Thu, 18 Oct 2012 04:53:48 +0000"  >&lt;p&gt;Committed to trunk. Thanks for your patience and patch Devaraj.&lt;/p&gt;</comment>
                            <comment id="13478677" author="devaraj" created="Thu, 18 Oct 2012 05:14:18 +0000"  >&lt;p&gt;Thanks, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt;, for the reviews. Party time &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13478695" author="lhofhansl" created="Thu, 18 Oct 2012 05:41:54 +0000"  >&lt;p&gt;0.94? Looks like a good fix to backport.&lt;/p&gt;</comment>
                            <comment id="13478714" author="devaraj" created="Thu, 18 Oct 2012 06:14:30 +0000"  >&lt;p&gt;This should mostly be applicable on 0.94 straightaway..&lt;/p&gt;</comment>
                            <comment id="13478732" author="hudson" created="Thu, 18 Oct 2012 06:43:21 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3455 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3455/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3455/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6758&quot; title=&quot;[replication] The replication-executor should make sure the file that it is replicating is closed before declaring success on that file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6758&quot;&gt;&lt;del&gt;HBASE-6758&lt;/del&gt;&lt;/a&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;replication&amp;#93;&lt;/span&gt; The replication-executor should make sure the file&lt;br/&gt;
            that it is replicating is closed before declaring success on that&lt;br/&gt;
            file (Devaraj Das via JD) (Revision 1399517)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13478925" author="hudson" created="Thu, 18 Oct 2012 11:46:06 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #226 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/226/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/226/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6758&quot; title=&quot;[replication] The replication-executor should make sure the file that it is replicating is closed before declaring success on that file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6758&quot;&gt;&lt;del&gt;HBASE-6758&lt;/del&gt;&lt;/a&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;replication&amp;#93;&lt;/span&gt; The replication-executor should make sure the file&lt;br/&gt;
            that it is replicating is closed before declaring success on that&lt;br/&gt;
            file (Devaraj Das via JD) (Revision 1399517)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jdcryans : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/Replication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13479418" author="lhofhansl" created="Thu, 18 Oct 2012 22:10:45 +0000"  >&lt;p&gt;0.94 patch. The trunk patch applied with some fuzz, and FSHlog does not exist in 0.94.&lt;/p&gt;</comment>
                            <comment id="13479450" author="lhofhansl" created="Thu, 18 Oct 2012 22:54:43 +0000"  >&lt;p&gt;any objections/concerns with committing this to 0.94?&lt;/p&gt;</comment>
                            <comment id="13479471" author="jdcryans" created="Thu, 18 Oct 2012 23:21:10 +0000"  >&lt;p&gt;+1 if it&apos;s tested on a cluster.&lt;/p&gt;</comment>
                            <comment id="13479474" author="stack" created="Thu, 18 Oct 2012 23:27:59 +0000"  >&lt;p&gt;Is that a non-change in Index: src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java?&lt;/p&gt;

&lt;p&gt;Good by me committing to 0.94.&lt;/p&gt;</comment>
                            <comment id="13479479" author="lhofhansl" created="Thu, 18 Oct 2012 23:30:37 +0000"  >&lt;p&gt;@Stack: Possibly, that&apos;s what the 0.96 patch does too &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13479484" author="stack" created="Thu, 18 Oct 2012 23:38:52 +0000"  >&lt;p&gt;Better include it then when you apply to 0.94 (I can&apos;t see a diff... not even white space)&lt;/p&gt;</comment>
                            <comment id="13479491" author="lhofhansl" created="Thu, 18 Oct 2012 23:48:39 +0000"  >&lt;p&gt;What diff are you looking at? The diff in HLog moves a block of code around.&lt;/p&gt;</comment>
                            <comment id="13479499" author="stack" created="Thu, 18 Oct 2012 23:51:56 +0000"  >&lt;p&gt;That would explain it (I missed that it was a move... its been at least a week since I reviewed patches... forgive me).&lt;/p&gt;</comment>
                            <comment id="13479625" author="lhofhansl" created="Fri, 19 Oct 2012 05:26:49 +0000"  >&lt;p&gt;Leaving open because it&apos;s not committed to 0.94.&lt;br/&gt;
(Can also file a separate porting issue if folks would prefer that)&lt;/p&gt;</comment>
                            <comment id="13480276" author="devaraj" created="Fri, 19 Oct 2012 19:11:07 +0000"  >&lt;p&gt;I&apos;d like to leave this issue &apos;closed&apos;. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7017&quot; title=&quot;Backport &amp;quot;[replication] The replication-executor should make sure the file that it is replicating is closed before declaring success on that file&amp;quot; to 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7017&quot;&gt;&lt;del&gt;HBASE-7017&lt;/del&gt;&lt;/a&gt; is the jira for 0.94 backport. Thanks!&lt;/p&gt;</comment>
                            <comment id="13775088" author="stack" created="Mon, 23 Sep 2013 18:30:43 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12612758">HBASE-7017</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12549769" name="6758-0.94.txt" size="9065" author="lhofhansl" created="Thu, 18 Oct 2012 22:10:45 +0000"/>
                            <attachment id="12545368" name="6758-1-0.92.patch" size="12898" author="devaraj" created="Mon, 17 Sep 2012 07:04:19 +0000"/>
                            <attachment id="12545499" name="6758-2-0.92.patch" size="18749" author="devaraj" created="Tue, 18 Sep 2012 00:23:12 +0000"/>
                            <attachment id="12546989" name="6758-trunk-1.patch" size="20234" author="devaraj" created="Fri, 28 Sep 2012 13:35:49 +0000"/>
                            <attachment id="12547636" name="6758-trunk-2.patch" size="3200" author="devaraj" created="Thu, 4 Oct 2012 00:04:38 +0000"/>
                            <attachment id="12547851" name="6758-trunk-3.patch" size="8801" author="devaraj" created="Thu, 4 Oct 2012 23:30:43 +0000"/>
                            <attachment id="12548635" name="6758-trunk-4.patch" size="9244" author="devaraj" created="Wed, 10 Oct 2012 21:28:14 +0000"/>
                            <attachment id="12545512" name="TEST-org.apache.hadoop.hbase.replication.TestReplication.xml" size="2918739" author="yuzhihong@gmail.com" created="Tue, 18 Sep 2012 01:20:49 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 17 Sep 2012 14:59:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>239550</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00r4n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2327</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>