<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:43:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-407/HBASE-407.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-407] Client should cache region locations in an LRU structure</title>
                <link>https://issues.apache.org/jira/browse/HBASE-407</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Instead of keeping the region locations cached client side in a TreeMap, we should use an LRU mechanism to help manage memory more dynamically.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12387842">HBASE-407</key>
            <summary>Client should cache region locations in an LRU structure</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bryanduxbury">Bryan Duxbury</assignee>
                                    <reporter username="bryanduxbury">Bryan Duxbury</reporter>
                        <labels>
                    </labels>
                <created>Tue, 5 Feb 2008 01:17:35 +0000</created>
                <updated>Fri, 22 Aug 2008 21:13:07 +0000</updated>
                            <resolved>Wed, 13 Feb 2008 19:31:10 +0000</resolved>
                                                    <fixVersion>0.2.0</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12567179" author="bryanduxbury" created="Fri, 8 Feb 2008 20:01:00 +0000"  >&lt;p&gt;Talking with Stack, instead of an LRU mechanism, we could use Java soft references instead in the existing map structure. This would be a really easy way to make the cached region locations disappear when memory was short.&lt;/p&gt;</comment>
                            <comment id="12567180" author="stack" created="Fri, 8 Feb 2008 20:01:11 +0000"  >&lt;p&gt; Made this issue major priority rather than minor.  Since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-406&quot; title=&quot;Remove HTable and HConnection close methods&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-406&quot;&gt;&lt;del&gt;HBASE-406&lt;/del&gt;&lt;/a&gt; was committed, this issue becomes more important.  Before 406, folks had a coarse means of managing the cache.  Now they have none.&lt;/p&gt;</comment>
                            <comment id="12567199" author="bryanduxbury" created="Fri, 8 Feb 2008 20:50:15 +0000"  >&lt;p&gt;First shot. Tests pass locally, but almost assuredly do not cover nulled references code.&lt;/p&gt;</comment>
                            <comment id="12567273" author="jimk" created="Sat, 9 Feb 2008 02:42:40 +0000"  >&lt;p&gt;Code review:&lt;/p&gt;

&lt;p&gt;Unused imports, remove:&lt;br/&gt;
java.util.ArrayList&lt;br/&gt;
java.util.Set&lt;/p&gt;

&lt;p&gt;Potential null pointer access at line 295&lt;/p&gt;

&lt;p&gt;Missing javadoc for public methods at lines 303, 308&lt;/p&gt;

&lt;p&gt;Line 629: unchecked conversion. Can this be fixed using Java generics?&lt;/p&gt;</comment>
                            <comment id="12567278" author="bryanduxbury" created="Sat, 9 Feb 2008 04:11:51 +0000"  >&lt;p&gt;Used a generic when creating my SoftReference on 629, and removed extra imports.&lt;/p&gt;

&lt;p&gt;As far as the unchecked null, do you mean on the server.close(scannerId) line? I don&apos;t agree. It&apos;s not going to try and close the scanner unless it managed to open one, which means that server has to be not null to get the scannerId in the first place.&lt;/p&gt;</comment>
                            <comment id="12567728" author="stack" created="Mon, 11 Feb 2008 17:57:50 +0000"  >&lt;p&gt;You can&apos;t use ReferenceMap from commons collections because you want a SortedMap and ReferenceMap ?  Want me to make a little test to ensure this SoftReference value is actually working (I&apos;d force the JVM to head for an OOME and add a ReferenceQueue implementation to the SortReference constructor and log its dequeues).&lt;/p&gt;

&lt;p&gt;Otherwise, for the future, would suggest that you put together declarations and assignments as in:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -116,7 +115,8 @@

     &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; HRegionLocation rootRegionLocation;

-    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Map&amp;lt;Text, SortedMap&amp;lt;Text, HRegionLocation&amp;gt;&amp;gt; cachedRegionLocations;
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Map&amp;lt;Text, SortedMap&amp;lt;Text, 
+      SoftReference&amp;lt;HRegionLocation&amp;gt;&amp;gt;&amp;gt; cachedRegionLocations;

     /**
      * constructor
@@ -147,7 +147,8 @@
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.masterChecked = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;

       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.cachedRegionLocations =
-        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConcurrentHashMap&amp;lt;Text, SortedMap&amp;lt;Text, HRegionLocation&amp;gt;&amp;gt;();
+        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConcurrentHashMap&amp;lt;Text, SortedMap&amp;lt;Text, 
+          SoftReference&amp;lt;HRegionLocation&amp;gt;&amp;gt;&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;i.e. do private Map&amp;lt;Text, SortedMap&amp;lt;Text,  SoftReference&amp;lt;HRegionLocation&amp;gt;&amp;gt;&amp;gt; cachedRegionLocations = new ConcurrentHashMap&amp;lt;Text, SortedMap&amp;lt;Text, SoftReference&amp;lt;HRegionLocation&amp;gt;&amp;gt;&amp;gt;();&lt;/p&gt;

&lt;p&gt;You might also be able to make cachedRegionLocations &apos;final&apos; too.&lt;/p&gt;

&lt;p&gt;These are for sure safe:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          HRegionLocation rl = tableLocations.get(row).get();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            matchingRegions.get(matchingRegions.lastKey()).get();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Otherwise, patch looks great.&lt;/p&gt;
</comment>
                            <comment id="12567733" author="bryanduxbury" created="Mon, 11 Feb 2008 18:11:00 +0000"  >&lt;p&gt;Yes, I need a SortedMap, not a HashMap, to be able to search for the correct regions by name.&lt;/p&gt;

&lt;p&gt;I don&apos;t know if we need to spend very much time verifying that SoftRefence works as we expect it to, but it might make sense to push the client to an OOM situation so that we can make sure the logic of nulled references works correctly. I wouldn&apos;t call it a priority.&lt;/p&gt;

&lt;p&gt;I chose to declare the cachedRegionLocations and instantiate it separately for cosmetic reasons - who wants to see that many generics in one blob? Is there an advantage to making it final?&lt;/p&gt;

&lt;p&gt;Are you asking if it&apos;s definitely safe to pull references out of the tableLocations map? I&apos;d say yes, because we check if the map contains them first. The SoftReference itself will always be not null at that point, it&apos;s the get() result that can be null.&lt;/p&gt;</comment>
                            <comment id="12567738" author="stack" created="Mon, 11 Feb 2008 18:22:08 +0000"  >&lt;p&gt;I think we should spend the time verifying SoftReferences are working the way you expect because then we can use them elsewhere with some confidence.  I&apos;ll take a look B.&lt;/p&gt;

&lt;p&gt;Hey, if you&apos;re going to have a mess &amp;#8211; have it in one place rather than distributed (smile).&lt;/p&gt;

&lt;p&gt;Yeah, finals are good.  They serve as hints to compiler and allows it take optimal paths that it would otherwise be wary making (I have no numbers &amp;#8211; just citing &quot;the literature&quot;).&lt;/p&gt;</comment>
                            <comment id="12568269" author="bryanduxbury" created="Tue, 12 Feb 2008 18:21:54 +0000"  >&lt;p&gt;This patch adds a new utility class, SoftSortedMap, and uses that instead of SoftReferences directly. Otherwise, the functionality is unchanged.&lt;/p&gt;</comment>
                            <comment id="12568277" author="stack" created="Tue, 12 Feb 2008 18:42:59 +0000"  >&lt;p&gt;Remove unnecessary SoftReference import in HConnetionManager&lt;/p&gt;

&lt;p&gt;Put declaration and assignment of cachedRegionLocations onto the one line (w/ final qualifier (if possible &amp;#8211; maybe its not... I can&apos;t see just looking at this patch)&lt;/p&gt;

&lt;p&gt;Does this comment and the nulling code that follows still apply --&amp;gt; // since we&apos;re using SoftReferences now, it&apos;s possible this possible .... &lt;br/&gt;
Doesn&apos;t your new fancy SoftSortedMap handle all that stuff internally? (This comment and code is in two places &amp;#8211; make a method?)&lt;/p&gt;

&lt;p&gt;In the article on a cache map, there was also a test.  Did you try your new SSM against the test?&lt;/p&gt;

&lt;p&gt;I wonder if this safe:&lt;/p&gt;

&lt;p&gt;+  public V get(Object key) &lt;/p&gt;
{                                                                                                                                 |~                                                                                                                                                            
+    checkReferences();                                                                                                                                       |~                                                                                                                                                            
+    return internalMap.get(key).get();                                                                                                                       |~                                                                                                                                                            
+  }
&lt;p&gt;  &lt;/p&gt;

&lt;p&gt;Whats to stop the GC running between call to checkReference and execution of the internalMap.get?&lt;/p&gt;

&lt;p&gt;Same for the remove, contains, etc.  &lt;/p&gt;

&lt;p&gt;Here is how its done in the apache commons collections ReferenceMap:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; get(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; key) {                                                                                                                           |
        purgeBeforeRead();                                                                                                                                    |/**
        Entry entry = getEntry(key);                                                                                                                          | * Annotation
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (entry == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {                                                                                                                                  | */
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;                                                                                                                                      |struct Annotation {
        }                                                                                                                                                     |  1:string family,
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; entry.getValue();                                                                                                                              |  2:i32 index = -1,
    }  
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This logging will only prove annoying, I predict: +    LOG.debug(&quot;Done cleaning up references.&quot;);   ... and the one before it.  At lease output some stats?&lt;/p&gt;

&lt;p&gt;Otherwise, patch looks great&lt;/p&gt;
</comment>
                            <comment id="12568293" author="bryanduxbury" created="Tue, 12 Feb 2008 18:58:45 +0000"  >&lt;p&gt;Removed unneeded imports and comments from HConnectionManager, moved declaration of cachedRegionLocations all to one place. &lt;/p&gt;

&lt;p&gt;Cleaned bookend debug logging from SoftSortedMap, and improved get and remove so that they can handle nulls better. &lt;/p&gt;

&lt;p&gt;If the GC nulls a reference between checkReferences and the actual get, it doesn&apos;t matter; the SoftValue will still be in the map, and get() will return null. However, I wasn&apos;t taking into account the situation when the key being checked for actually wasn&apos;t in the map, so that could have let to some NPEs.&lt;/p&gt;</comment>
                            <comment id="12568324" author="bryanduxbury" created="Tue, 12 Feb 2008 21:38:01 +0000"  >&lt;p&gt;This version adds the missing license header to SoftSortedMap.java and a javadoc class comment.&lt;/p&gt;</comment>
                            <comment id="12568328" author="stack" created="Tue, 12 Feb 2008 21:48:00 +0000"  >&lt;p&gt;+1 on this patch (On IRC you said you&apos;d try running the little test to see that things are working right).  After that, commit it yourself &amp;#8211; now you can.&lt;/p&gt;</comment>
                            <comment id="12568357" author="bryanduxbury" created="Tue, 12 Feb 2008 23:31:30 +0000"  >&lt;p&gt;This version contains a little test to show that SoftSortedMap actually decreases in size when there&apos;s memory usage. It probably needs to be varied by the heap size your system has.&lt;/p&gt;</comment>
                            <comment id="12568360" author="stack" created="Tue, 12 Feb 2008 23:35:05 +0000"  >&lt;p&gt;+1 on final version of patch (includes test).&lt;/p&gt;</comment>
                            <comment id="12568691" author="bryanduxbury" created="Wed, 13 Feb 2008 19:31:10 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12375137" name="407-v2.patch" size="6758" author="bryanduxbury" created="Sat, 9 Feb 2008 04:11:50 +0000"/>
                            <attachment id="12375400" name="407-v3.patch" size="10221" author="bryanduxbury" created="Tue, 12 Feb 2008 18:21:54 +0000"/>
                            <attachment id="12375406" name="407-v4.patch" size="9475" author="bryanduxbury" created="Tue, 12 Feb 2008 18:58:45 +0000"/>
                            <attachment id="12375413" name="407-v5.patch" size="10497" author="bryanduxbury" created="Tue, 12 Feb 2008 21:38:01 +0000"/>
                            <attachment id="12375426" name="407-v6.patch" size="12355" author="bryanduxbury" created="Tue, 12 Feb 2008 23:31:30 +0000"/>
                            <attachment id="12375110" name="407.patch" size="6527" author="bryanduxbury" created="Fri, 8 Feb 2008 20:50:15 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 8 Feb 2008 20:01:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31684</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 45 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0h74n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98417</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>