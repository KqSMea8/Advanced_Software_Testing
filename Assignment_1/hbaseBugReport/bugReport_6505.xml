<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:37:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6505/HBASE-6505.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6505] Allow shared RegionObserver state</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6505</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description></description>
                <environment></environment>
        <key id="12601280">HBASE-6505</key>
            <summary>Allow shared RegionObserver state</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Thu, 2 Aug 2012 22:39:11 +0000</created>
                <updated>Thu, 2 May 2013 02:29:55 +0000</updated>
                            <resolved>Sun, 5 Aug 2012 02:38:24 +0000</resolved>
                                                    <fixVersion>0.94.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13427721" author="lhofhansl" created="Thu, 2 Aug 2012 23:18:17 +0000"  >&lt;p&gt;Might just be as simple as this.&lt;br/&gt;
Is the putIfAbsent huh had I did necessary to guard concurrent initialization of multiple instances of the same class?&lt;/p&gt;

&lt;p&gt;Generally, what can one do with statics in coprocesors? Table CP are loaded by as many classloaders as there are different jar files to load them from, right? So statics would not work.&lt;/p&gt;</comment>
                            <comment id="13427732" author="apurtell" created="Thu, 2 Aug 2012 23:33:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;Generally, what can one do with statics in coprocesors?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think that should be discouraged.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Table CP are loaded by as many classloaders as there are different jar files to load them from, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6308&quot; title=&quot;Coprocessors should be loaded in a custom ClassLoader to prevent dependency conflicts with HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6308&quot;&gt;&lt;del&gt;HBASE-6308&lt;/del&gt;&lt;/a&gt; goes in we can build on it as needed. I guess I should add a test for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6308&quot; title=&quot;Coprocessors should be loaded in a custom ClassLoader to prevent dependency conflicts with HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6308&quot;&gt;&lt;del&gt;HBASE-6308&lt;/del&gt;&lt;/a&gt; and get it in.&lt;/p&gt;</comment>
                            <comment id="13427733" author="apurtell" created="Thu, 2 Aug 2012 23:34:07 +0000"  >&lt;p&gt;Patch looks good to me but I could only skim because I have to run to board a flight now.&lt;/p&gt;</comment>
                            <comment id="13427734" author="lhofhansl" created="Thu, 2 Aug 2012 23:40:02 +0000"  >&lt;p&gt;Happy landings &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; you mention that the CoprocessorHost should clean up when the CP can&apos;t (because it threw an exception and is blacklisted). I see if I can add this here.&lt;/p&gt;

&lt;p&gt;I&apos;m open for a better name than &quot;classData&quot; for the shared data structure.&lt;/p&gt;</comment>
                            <comment id="13428327" author="lhofhansl" created="Fri, 3 Aug 2012 19:49:17 +0000"  >&lt;p&gt;Updated patch.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;performs cleanup when a coprocessor is blacklisted&lt;/li&gt;
	&lt;li&gt;changed shared map name to &quot;sharedData&quot;&lt;/li&gt;
	&lt;li&gt;change shareData API to ConcurrentMap (rather than just Map) to set the right expectation for a using CP (i.e. no synchronization needed, etc)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Should be good to go.&lt;/p&gt;</comment>
                            <comment id="13428404" author="lhofhansl" created="Fri, 3 Aug 2012 21:48:40 +0000"  >&lt;p&gt;Looking for some reviewers &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13428405" author="zhihyu@ebaysf.com" created="Fri, 3 Aug 2012 21:48:57 +0000"  >&lt;p&gt;Since the sharedData map resides per region, can we introduce some mechanism to limit the amount of heap they consume ?&lt;/p&gt;</comment>
                            <comment id="13428426" author="lhofhansl" created="Fri, 3 Aug 2012 22:25:00 +0000"  >&lt;p&gt;The sharedData map resides per CP class per RegionServer (not per region).&lt;/p&gt;

&lt;p&gt;I would not be able to come up with any good limit here, other then saying: &quot;It depends on what the coprocessor is trying to do&quot;.&lt;br/&gt;
It should be up to the coprocessor to be a good citizen (this goes back to the discussion that coprocessors are an HBase extension mechanism).&lt;/p&gt;</comment>
                            <comment id="13428443" author="hadoopqa" created="Fri, 3 Aug 2012 23:00:29 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12539090/6505-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12539090/6505-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestAssignmentManager&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestAccessController&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2499//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13428494" author="ghelmling" created="Sat, 4 Aug 2012 00:21:54 +0000"  >&lt;p&gt;minor nit: in RegionCoprocessorHost.createEnvironment()&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+      if (tmp != null) 
+        classData = tmp;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;should have braces.&lt;/p&gt;

&lt;p&gt;Otherwise +1 from me.&lt;/p&gt;

&lt;p&gt;I was pondering the constraint of having the shared data map be keyed by String and whether it would be better to Object keys, but that could lead to attempts to key data by byte[] with unexpected results, so constraining to Strings might be good.&lt;/p&gt;</comment>
                            <comment id="13428529" author="apurtell" created="Sat, 4 Aug 2012 01:55:21 +0000"  >&lt;p&gt;+1 looks good Lars.&lt;/p&gt;</comment>
                            <comment id="13428530" author="lhofhansl" created="Sat, 4 Aug 2012 02:05:31 +0000"  >&lt;p&gt;Thanks Gary and Andy.&lt;br/&gt;
Was thinking about Object keys too, but came to the same conclusion.&lt;br/&gt;
Will add the braces. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13428550" author="lhofhansl" created="Sat, 4 Aug 2012 03:40:07 +0000"  >&lt;p&gt;Actually while trying to write a test for this to ensure that the maps for multiple instances of the same CP class are identical, I found that they are in fact not.&lt;/p&gt;

&lt;p&gt;A new RegionCoprocessorHost is created for each region (see HRegion.&amp;lt;init&amp;gt;), not per RegionServer as I had assumed, defeating the purpose of what I had in mind.&lt;/p&gt;

&lt;p&gt;Back to the drawing board. The sharedDataMap could be made part of RegionServerServices, instead (and thus reside with the RegionServer).&lt;/p&gt;</comment>
                            <comment id="13428554" author="apurtell" created="Sat, 4 Aug 2012 04:36:31 +0000"  >&lt;p&gt;Yes that is my fault I Should have thought of that. But rather than RegionServerServices how about the CoprocessorHosts sharing a singleton map?&lt;/p&gt;</comment>
                            <comment id="13428556" author="lhofhansl" created="Sat, 4 Aug 2012 04:45:48 +0000"  >&lt;p&gt;NP, and yes a singleton map is better than RegionServerServices.&lt;/p&gt;</comment>
                            <comment id="13428559" author="lhofhansl" created="Sat, 4 Aug 2012 04:57:58 +0000"  >&lt;p&gt;Is it safe to key the sharedDataMap with Class&amp;lt;?&amp;gt;? It&apos;s possible that the same class is loaded with different class loaders in different regions, right?&lt;br/&gt;
So I should probably key that map with a String (which would Class.getName()).&lt;/p&gt;

&lt;p&gt;Then the next interesting thing: When an Environment is blacklisted, it is only that environment, is it then safe to remove the classes part from the sharedDataMap (since there might be other instance of the same class, but loaded from a different class loader).&lt;/p&gt;</comment>
                            <comment id="13428562" author="apurtell" created="Sat, 4 Aug 2012 05:24:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;So I should probably key that map with a String (which would Class.getName()).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Makes sense.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When an Environment is blacklisted, it is only that environment, is it then safe to remove the classes part from the sharedDataMap (since there might be other instance of the same class, but loaded from a different class loader).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thinking on this, perhaps we can defer that until CPs can actually be unloaded. Blacklisting is only a half measure. If I&apos;ve seen in an RS log that a CP has been blacklisted my thinking is it&apos;s time to cycle the RS. Who knows what damage has been done. And attempts to limit heap usage of the map don&apos;t make much sense IMO for the same reason, the CP could leak objects directly.&lt;/p&gt;

&lt;p&gt;Edit: But if you agree, would be good to include a comment to this effect near the map.&lt;/p&gt;</comment>
                            <comment id="13428565" author="apurtell" created="Sat, 4 Aug 2012 05:28:18 +0000"  >&lt;p&gt;And maybe we&apos;ll not get around to making CPs unloadable. I don&apos;t want to accidentally put that out there as a design priority. I don&apos;t think we have a use case for that. Instead I&apos;d prefer the external coprocessor host route: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4047&quot; title=&quot;[Coprocessors] Generic external process host&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4047&quot;&gt;HBASE-4047&lt;/a&gt;. I haven&apos;t started implementing due to having other priorities, but that is IMO the way to go for practical and effective resource management in a CP architecture. Unloading is (handwave) a kill -9, with reaping of all resources by the OS.&lt;/p&gt;</comment>
                            <comment id="13428569" author="lhofhansl" created="Sat, 4 Aug 2012 06:09:32 +0000"  >&lt;p&gt;Thanks Andy.&lt;br/&gt;
I do have a new patch that uses a ReferenceMap (from the common collections library) with hard keys and weak values (where the key would be the class name and the value be the class&apos;s map).&lt;br/&gt;
As long as at least one RegionEnvironment exists to hold on to its reference of its map the reference will not be removed from the ReferenceMap (and thus can be shared by other RegionEnvironment for the same class), which is exactly what we want here (and much better than reference counting). When it happens that all Envs for a specific class are blacklisted they will eventually be garbage collected, which then allows the map entry to be collected.&lt;/p&gt;

&lt;p&gt;Patch with test coming momentarily.&lt;/p&gt;

&lt;p&gt;If you think that part is overkill and just makes it harder to understand - which might very well be the case, I can easily revert back to the model I had before.&lt;/p&gt;</comment>
                            <comment id="13428572" author="lhofhansl" created="Sat, 4 Aug 2012 06:16:06 +0000"  >&lt;p&gt;New patch:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;uses static strong-key/weak-value ReferenceMap as sharedDataMap&lt;/li&gt;
	&lt;li&gt;uses classnames as keys&lt;/li&gt;
	&lt;li&gt;has a test the verifies that sharedData maps are in fact identical&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13428577" author="hadoopqa" created="Sat, 4 Aug 2012 07:11:45 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12539141/6505-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12539141/6505-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestClassLoading&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2505//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13428642" author="apurtell" created="Sat, 4 Aug 2012 17:25:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;If you think that part is overkill and just makes it harder to understand - which might very well be the case, I can easily revert back to the model I had before.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No objections to trying a bit harder. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; The code is not more difficult to understand IMO. TaskMonitor uses weak references also so it&apos;s not novel for the code base either.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;

</comment>
                            <comment id="13428674" author="lhofhansl" created="Sat, 4 Aug 2012 20:28:13 +0000"  >&lt;p&gt;I&apos;m having a hard time proving in a test that all references are indeed correctly released upon blacklisting and the entry is removed from the sharedDataMap. Will investigate a bit more with an additional test.&lt;/p&gt;</comment>
                            <comment id="13428679" author="lhofhansl" created="Sat, 4 Aug 2012 21:13:29 +0000"  >&lt;p&gt;Argghhh... Forgot that string constants are interned (and hence are identical), that why my test did not work correctly.&lt;/p&gt;</comment>
                            <comment id="13428680" author="lhofhansl" created="Sat, 4 Aug 2012 21:27:40 +0000"  >&lt;p&gt;Same patch, better test.&lt;br/&gt;
Also verifies that the class specific portion the sharedDataMap indeed becomes eligible for collection when all Environments for this class have been blacklisted.&lt;br/&gt;
(The test needed to be changed slightly so that it itself would not hold on to the shared data).&lt;/p&gt;

&lt;p&gt;I ran TestClassLoading locally, passes fine.&lt;br/&gt;
Now I think this is good to go... Seriously &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13428690" author="hadoopqa" created="Sat, 4 Aug 2012 22:22:35 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12539161/6505-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12539161/6505-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitLogWorker&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestAssignmentManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2508//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13428697" author="zhihyu@ebaysf.com" created="Sat, 4 Aug 2012 23:04:06 +0000"  >&lt;p&gt;Looks good overall.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; removeEnvironment(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; CoprocessorEnvironment env) {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; coprocessors.remove(env);
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above method is only called once. Can the method be inlined ?&lt;/p&gt;</comment>
                            <comment id="13428765" author="lhofhansl" created="Sun, 5 Aug 2012 02:01:07 +0000"  >&lt;p&gt;Thanks Ted. A previous patch had specific cleanup logic in subclasses of CoprocessorHost. The latest patch doesn&apos;t (it&apos;s deferred to the GC now). I left it in, because I thought it useful to have a removeEnvironment method that mirror createEnvironment and can be overridden in subclasses.&lt;/p&gt;

&lt;p&gt;You&apos;re right, though, it&apos;s not needed... will remove before commit.&lt;/p&gt;</comment>
                            <comment id="13428767" author="lhofhansl" created="Sun, 5 Aug 2012 02:07:07 +0000"  >&lt;p&gt;I ran the 3 failed tests from last HadoopQA run locally. They all pass.&lt;br/&gt;
Going to commit soon.&lt;/p&gt;</comment>
                            <comment id="13428768" author="lhofhansl" created="Sun, 5 Aug 2012 02:12:42 +0000"  >&lt;p&gt;Final trunk patch.&lt;br/&gt;
(also added a missing JarFile.close())&lt;/p&gt;</comment>
                            <comment id="13428770" author="lhofhansl" created="Sun, 5 Aug 2012 02:31:01 +0000"  >&lt;p&gt;0.94 patch&lt;/p&gt;</comment>
                            <comment id="13428774" author="lhofhansl" created="Sun, 5 Aug 2012 02:38:25 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96&lt;/p&gt;</comment>
                            <comment id="13428775" author="lhofhansl" created="Sun, 5 Aug 2012 02:38:35 +0000"  >&lt;p&gt;Thanks for the reviews.&lt;/p&gt;</comment>
                            <comment id="13428781" author="hadoopqa" created="Sun, 5 Aug 2012 03:13:17 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12539171/6505-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12539171/6505-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2509//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13428791" author="hudson" created="Sun, 5 Aug 2012 03:51:50 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #383 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/383/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/383/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6505&quot; title=&quot;Allow shared RegionObserver state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6505&quot;&gt;&lt;del&gt;HBASE-6505&lt;/del&gt;&lt;/a&gt; Allow shared RegionObserver state (Revision 1369515)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13428793" author="hudson" created="Sun, 5 Aug 2012 03:54:37 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3197 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3197/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3197/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6505&quot; title=&quot;Allow shared RegionObserver state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6505&quot;&gt;&lt;del&gt;HBASE-6505&lt;/del&gt;&lt;/a&gt; Allow shared RegionObserver state (Revision 1369516)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13428835" author="hudson" created="Sun, 5 Aug 2012 11:40:41 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #122 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/122/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/122/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6505&quot; title=&quot;Allow shared RegionObserver state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6505&quot;&gt;&lt;del&gt;HBASE-6505&lt;/del&gt;&lt;/a&gt; Allow shared RegionObserver state (Revision 1369516)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13439520" author="hudson" created="Wed, 22 Aug 2012 13:48:09 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #48 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/48/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/48/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6505&quot; title=&quot;Allow shared RegionObserver state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6505&quot;&gt;&lt;del&gt;HBASE-6505&lt;/del&gt;&lt;/a&gt; Allow shared RegionObserver state (Revision 1369515)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13448303" author="hudson" created="Wed, 5 Sep 2012 00:57:14 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #7 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6505&quot; title=&quot;Allow shared RegionObserver state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6505&quot;&gt;&lt;del&gt;HBASE-6505&lt;/del&gt;&lt;/a&gt; Allow shared RegionObserver state (Revision 1369515)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13624723" author="stack" created="Sun, 7 Apr 2013 05:16:46 +0000"  >&lt;p&gt;Fix up after bulk move overwrote some 0.94.2 fix versions w/ 0.95.0 (Noticed by Lars Hofhansl)&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12558659">HBASE-6137</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12601164">HBASE-6496</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12539172" name="6505-0.94.txt" size="13974" author="lhofhansl" created="Sun, 5 Aug 2012 02:31:01 +0000"/>
                            <attachment id="12539171" name="6505-trunk.txt" size="15058" author="lhofhansl" created="Sun, 5 Aug 2012 02:12:42 +0000"/>
                            <attachment id="12539090" name="6505-v2.txt" size="6966" author="lhofhansl" created="Fri, 3 Aug 2012 19:49:17 +0000"/>
                            <attachment id="12539141" name="6505-v3.txt" size="13371" author="lhofhansl" created="Sat, 4 Aug 2012 06:16:05 +0000"/>
                            <attachment id="12539161" name="6505-v4.txt" size="15666" author="lhofhansl" created="Sat, 4 Aug 2012 21:27:40 +0000"/>
                            <attachment id="12538972" name="6505.txt" size="5298" author="lhofhansl" created="Thu, 2 Aug 2012 23:18:17 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Aug 2012 23:33:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>248630</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 36 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i09xc7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>55842</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>