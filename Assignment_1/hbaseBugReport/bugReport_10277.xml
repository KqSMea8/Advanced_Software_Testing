<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:12:14 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10277/HBASE-10277.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10277] refactor AsyncProcess</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10277</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;AsyncProcess currently has two patterns of usage, one from HTable flush w/o callback and with reuse, and one from HCM/HTable batch call, with callback and w/o reuse. In the former case (but not the latter), it also does some throttling of actions on initial submit call, limiting the number of outstanding actions per server.&lt;br/&gt;
The latter case is relatively straightforward. The former appears to be error prone due to reuse - if, as javadoc claims should be safe, multiple submit calls are performed without waiting for the async part of the previous call to finish, fields like hasError become ambiguous and can be used for the wrong call; callback for success/failure is called based on &quot;original index&quot; of an action in submitted list, but with only one callback supplied to AP in ctor it&apos;s not clear to which submit call the index belongs, if several are outstanding.&lt;/p&gt;

&lt;p&gt;I was going to add support for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10070&quot; title=&quot;HBase read high-availability using timeline-consistent region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10070&quot;&gt;&lt;del&gt;HBASE-10070&lt;/del&gt;&lt;/a&gt; to AP, and found that it might be difficult to do cleanly.&lt;/p&gt;

&lt;p&gt;It would be nice to normalize AP usage patterns; in particular, separate the &quot;global&quot; part (load tracking) from per-submit-call part.&lt;br/&gt;
Per-submit part can more conveniently track stuff like initialActions, mapping of indexes and retry information, that is currently passed around the method calls.&lt;br/&gt;
&lt;del&gt;I am not sure yet, but maybe sending of the original index to server in &quot;ClientProtos.MultiAction&quot; can also be avoided.&lt;/del&gt; Cannot be avoided because the API to server doesn&apos;t have one-to-one correspondence between requests and responses in an individual call to multi (retries/rearrangement have nothing to do with it)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12687283">HBASE-10277</key>
            <summary>refactor AsyncProcess</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sershe">Sergey Shelukhin</assignee>
                                    <reporter username="sershe">Sergey Shelukhin</reporter>
                        <labels>
                    </labels>
                <created>Sat, 4 Jan 2014 00:36:03 +0000</created>
                <updated>Sat, 21 Feb 2015 23:31:56 +0000</updated>
                            <resolved>Thu, 6 Feb 2014 01:13:56 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13867435" author="sershe" created="Fri, 10 Jan 2014 02:25:41 +0000"  >&lt;p&gt;Here&apos;s the initial patch... that took much longer than I thought.&lt;br/&gt;
The main goal was moving out the context for one call, while preserving the strange semantics for HTable::put calls.&lt;/p&gt;

&lt;p&gt;So most of AP logic is moved into AsyncRequestSet, which is created per submit/submitAll call. AP itself can now be reused not just for puts but also for regular batch calls from HTable, and even for multiple tables potentially; however, it cannot be reused in HCM where custom pool is used, and in some generic methods. &lt;br/&gt;
The (ugly) behavior for HTable where e.g. next put will give you errors from previous put was lovingly preserved.&lt;br/&gt;
Also got rid of callback that was mostly used for tests, tests can check results without it.&lt;/p&gt;

&lt;p&gt;I ran some perf test using YCSB and table with write-dropping coproc (so the measured perf is client only), and see a bit of perf regression for put-only workload. I am guessing this is due to allocation that was added. I wasn&apos;t able to get much useful info from YourKit though, it claims the impact of AP on either run in negligible, both CPU and wall clock. I may investigate further. Probably this perf difference will not be noticeable on real requests (remains to be tested).&lt;/p&gt;</comment>
                            <comment id="13867493" author="enis" created="Fri, 10 Jan 2014 04:40:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; FYI. &lt;/p&gt;</comment>
                            <comment id="13867511" author="hadoopqa" created="Fri, 10 Jan 2014 05:14:29 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12622325/HBASE-10277.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12622325/HBASE-10277.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12622325&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +          // This action failed before creating ars. Add it to retained but do not add to submit list.&lt;br/&gt;
+                             Throwable error, long backOffTime, boolean willRetry, String startTime){&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestCatalogJanitor&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8382//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13868855" author="apurtell" created="Sat, 11 Jan 2014 19:11:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;The (ugly) behavior for HTable where e.g. next put will give you errors from previous put was lovingly preserved.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To my mind this is a serious problem because the application is getting incorrect feedback on what operation actually failed.&lt;/p&gt;</comment>
                            <comment id="13869762" author="sershe" created="Mon, 13 Jan 2014 18:00:25 +0000"  >&lt;p&gt;I started the mailing thread on this. &lt;/p&gt;</comment>
                            <comment id="13871439" author="stack" created="Wed, 15 Jan 2014 00:50:50 +0000"  >&lt;p&gt;Thanks for having a go at this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt;.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The (ugly) behavior for HTable where e.g. next put will give you errors from previous put was lovingly preserved.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Smile.&lt;/p&gt;

&lt;p&gt;Radical!&lt;/p&gt;

&lt;p&gt;Here are a couple of comments:&lt;/p&gt;

&lt;p&gt;Could AsyncRequests be done as a &apos;Future&apos;?  Seems to have a bunch in common.&lt;/p&gt;

&lt;p&gt;We have something called Set but it does not implement java.util.Set: &lt;/p&gt;

&lt;p&gt;+  protected class AsyncRequestSet implements AsyncRequests {&lt;/p&gt;

&lt;p&gt;We make an ap and a multiap each time?&lt;/p&gt;

&lt;p&gt;+    ap = new AsyncProcess&amp;lt;Object&amp;gt;(connection, pool, configuration, rpcCallerFactory, true);&lt;br/&gt;
+    multiAp = new AsyncProcess&amp;lt;Object&amp;gt;(connection, pool, configuration, rpcCallerFactory, false);&lt;/p&gt;

&lt;p&gt;Batch should return an array of objects?&lt;/p&gt;

&lt;p&gt;+    Object[] results = new Object&lt;span class=&quot;error&quot;&gt;&amp;#91;actions.size()&amp;#93;&lt;/span&gt;;&lt;br/&gt;
+    batch(actions, results);&lt;br/&gt;
+    return results;&lt;/p&gt;

&lt;p&gt;Then you can do return batch(actions, new Object&lt;span class=&quot;error&quot;&gt;&amp;#91;actions.size()&amp;#93;&lt;/span&gt;);&lt;/p&gt;

&lt;p&gt;Needs a closer review.&lt;/p&gt;

&lt;p&gt;Whats our &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; think?&lt;/p&gt;</comment>
                            <comment id="13872639" author="nkeywal" created="Wed, 15 Jan 2014 21:41:04 +0000"  >&lt;p&gt;It&apos;s on my plate &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I&apos;m going to do the review. Thanks for working on this Sergey.&lt;/p&gt;</comment>
                            <comment id="13876520" author="nkeywal" created="Mon, 20 Jan 2014 15:39:01 +0000"  >&lt;p&gt;It&apos;s a difficult patch to read:&lt;br/&gt;
1) Some changes are cosmetics: some protected becomes private, some &quot;this.&quot; are removed. I&apos;m not against these changes, but it makes the real meat more difficult to find.&lt;br/&gt;
2) The javadoc has not been updated, so when the code differs from the javadoc, the reader has to sort out himself if it&apos;s just that the javadoc is now out dated or if there is a regression.&lt;br/&gt;
I haven&apos;t yet reviewed it globally, but here is a set of questions/comments.&lt;/p&gt;

&lt;p&gt;AsyncProcess#submit. Why does it take a tableName? Does it mean that an AsyncProcess can now be shared between Tables?&lt;/p&gt;

&lt;p&gt;AsyncRequestSet#waitUntilDone&lt;br/&gt;
Same responsibility as AsyncProcess#waitUntilDone, but less features (no logs. These logs are useful).&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;It would be nice to normalize AP usage patterns; in particular, separate the &quot;global&quot; part (load tracking) from per-submit-call part.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This part should go in HConnection, as we should manage the load tracking globally and not only for a single call. Iit would be a change in bahavior compared to the 0.94, but I think we should do it. Would it make you life easier here?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I ran some perf test using YCSB and table with write-dropping coproc&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Great, really. We should do that much more often...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Probably this perf difference will not be noticeable on real requests (remains to be tested).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Let me be more pessimistic here &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also got rid of callback that was mostly used for tests, tests can check results without it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;m not a big fan of this part of the change. Callbacks can be reused in different context (for example to have a different policy, such as ignoring errors as in HTableMultiplexer). As well, we now have a hardRetryLimit, but this attribute is used only in tests.&lt;/p&gt;


&lt;p&gt;More globally, This patch allows to reuse a single AsyncProcess between independant streams of writes. Would that be necessary if it was cheaper to create ? The cost is reading the configuration, as when we do a HTable#get and create a RegionServerCallable. The problem is that with this patch, we still create a AsyncProcess in some cases, for example on the batchCallback path...&lt;/p&gt;</comment>
                            <comment id="13876760" author="sershe" created="Mon, 20 Jan 2014 19:28:22 +0000"  >
&lt;blockquote&gt;&lt;p&gt;Could AsyncRequests be done as a &apos;Future&apos;? Seems to have a bunch in common.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;ll take a look at it... it&apos;s more like a multi-future. Maybe even FutureTask can be used.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We have something called Set but it does not implement java.util.Set:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Will fix.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We make an ap and a multiap each time?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Once per HTable. The difference is the mode of operation - the &quot;legacy&quot; mode or the normal one.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Batch should return an array of objects?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It does? Don&apos;t quite understand the comment. Some of the existing interfaces accept the array for results that fill it. Backward compat.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;1) Some changes are cosmetics: some protected becomes private, some &quot;this.&quot; are removed. I&apos;m not against these changes, but it makes the real meat more difficult to find.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Removing &quot;this.&quot; is not cosmetic (at least in the cases I am aware of) - methods moved to a non-static nested class, there&apos;s no more &quot;this.&quot;.&lt;br/&gt;
Changing to private can be removed, although it&apos;s a good change to have.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2) The javadoc has not been updated, so when the code differs from the javadoc, the reader has to sort out himself if it&apos;s just that the javadoc is now out dated or if there is a regression. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Will update.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;AsyncProcess#submit. Why does it take a tableName? Does it mean that an AsyncProcess can now be shared between Tables?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;AsyncRequestSet#waitUntilDone&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Same responsibility as AsyncProcess#waitUntilDone, but less features (no logs. These logs are useful).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Some logs were preserved. &lt;br/&gt;
Previous waitUntilDone had two wait conditions and loops in an effort not to loop often, whereas only one seems to be necessary, so I don&apos;t think features were lost... I can add more logs.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This part should go in HConnection, as we should manage the load tracking globally and not only for a single call. Iit would be a change in bahavior compared to the 0.94, but I think we should do it. Would it make you life easier here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It may, actually... but HTable uses AP directly. In fact batch calls from HCM currently don&apos;t use throttling at all (it calls &quot;submitAll&quot;), so only HTable-direct-usage uses this code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Probably this perf difference will not be noticeable on real requests (remains to be tested).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Let me be more pessimistic here .&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, I&apos;d probably need to test. I was not able to figure out what exactly is the cause of slowdown - YourKit gives very low % numbers for AP, CPU or wall clock, and almost identical between old and equivalent new methods across runs.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Also got rid of callback that was mostly used for tests, tests can check results without it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;m not a big fan of this part of the change. Callbacks can be reused in different context (for example to have a different policy, such as ignoring errors as in HTableMultiplexer). As well, we now have a hardRetryLimit, but this attribute is used only in tests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Callback was already only used for tests, for practical purposes (also for array filling, but that is no longer necessary).&lt;br/&gt;
I am not a big fan of having test-oriented code in production code; thus I replaced the only necessary test usage (stopping retries) with a field. I wanted to get rid of that too, but that would be too convoluted it seems.&lt;br/&gt;
When we have a scenario to use some callback, we can add it, under YAGNI principle &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;More globally, This patch allows to reuse a single AsyncProcess between independant streams of writes. Would that be necessary if it was cheaper to create ? The cost is reading the configuration, as when we do a HTable#get and create a RegionServerCallable.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The main reason is to have well-defined context for single call for &quot;normal&quot; (as opposed to HTable cross-put stuff) usage pattern. So for example replica calls could group requests differently and synchronize/populate the same result, cancel other calls when they are no longer useful, etc.&lt;br/&gt;
It also separates the two patterns better (by ctor argument); see potential problems outlined in JIRA description.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The problem is that with this patch, we still create a AsyncProcess in some cases, for example on the batchCallback path...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, that is due to ability to pass a custom execution pool (could be changed to accomodate it by making pool per request, but I am not sure it&apos;s necessary...) and limitations of java generics + current result type handling (AP will have to be per result type). IIRC most of these paths are deprecated.&lt;/p&gt;
</comment>
                            <comment id="13877390" author="nkeywal" created="Tue, 21 Jan 2014 11:11:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;Does it mean that an AsyncProcess can now be shared between Tables?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yes&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This seems great. Would it be possible then to have a single AsyncProcess per HConnection, shared between the different htables objects? This would make&lt;br/&gt;
Side question: would it make sense to use the multiget path for a single get, instead of having two different paths?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When we have a scenario to use some callback, we can add it, under YAGNI principle &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The scenario is already there: it&apos;s how to manage the errors with the write buffer. I didn&apos;t want to make the interface public (as once it&apos;s public you should not change it), but at the end of the day, the callback is the most obvious solution to the problem. Having it here sets a base for the discussion. If your patch allows to have a common resource management per HTable, I&apos;m happy to lose the callbacks as a side effect of the patch, but having both would be better imho.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;IIRC most of these paths are deprecated.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What&apos;s deprecated is mainly that the batch interfaces were in HConnection instead of HTable. The Object[] is ugly, but is still the &apos;recommended&apos; way.&lt;/p&gt;</comment>
                            <comment id="13878076" author="sershe" created="Wed, 22 Jan 2014 00:42:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;This seems great. Would it be possible then to have a single AsyncProcess per HConnection, shared between the different htables objects? This would make&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not for &quot;legacy&quot; mode, because then the cross-put behavior will also be cross-HTable.&lt;br/&gt;
For individual requests, yeah, that can be done.&lt;br/&gt;
Also the sentence appears to be unfinished.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Side question: would it make sense to use the multiget path for a single get, instead of having two different paths?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, that is possible, but it is in scope of different JIRA.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The scenario is already there: it&apos;s how to manage the errors with the write buffer. I didn&apos;t want to make the interface public (as once it&apos;s public you should not change it), but at the end of the day, the callback is the most obvious solution to the problem. Having it here sets a base for the discussion. If your patch allows to have a common resource management per HTable, I&apos;m happy to lose the callbacks as a side effect of the patch, but having both would be better imho.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can you elaborate on the error management? Right now the patch preserves the cross-put-errors mode for HTable, without the callback.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;What&apos;s deprecated is mainly that the batch interfaces were in HConnection instead of HTable. The Object[] is ugly, but is still the &apos;recommended&apos; way&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, for these paths and without the custom pool is where we reuse the same AsyncProcess.&lt;/p&gt;</comment>
                            <comment id="13878100" author="stack" created="Wed, 22 Jan 2014 01:03:16 +0000"  >&lt;p&gt;Pardon the dumb question: Why we need to support &apos;legacy&apos; behavior?   Strip it?&lt;/p&gt;</comment>
                            <comment id="13878106" author="sershe" created="Wed, 22 Jan 2014 01:16:17 +0000"  >&lt;p&gt;94 compat... HTable put is currently async but does not have any means to return errors. flushCommits can flush multiple puts. Errors are eventually thrown thru some put call or flushCommits. We can either break HTable::put interface (doesn&apos;t seem viable), make put-s sync and add separate async put (that is possible but may also be surprising), or remove old pattern from AP, but keep track of all the puts inside HTable itself, and aggregate all errors only when flushCommits is called, for example (with some client performance loss because multiple requests will be tracked on higher level than in AP). &lt;br/&gt;
Overall, I can see merit in scenario where you do bunch of puts and then flush... it could be replaced with user issuing multi-puts explicitly, but now that API is such as it is, we cannot simply remove it I think. Maybe the 3rd approach above is viable, if we add some javadocs/notes.&lt;br/&gt;
What do you think?&lt;/p&gt;</comment>
                            <comment id="13878111" author="stack" created="Wed, 22 Jan 2014 01:24:24 +0000"  >&lt;p&gt;So, this redo has to be backportable to 0.94?  Or you mean that the 0.94 APIs must work as they did in 0.94 though you are in a 0.96+ context?&lt;/p&gt;

&lt;p&gt;Which is option #3?  I do not see a #3 above.  Do you mean &apos;remove old pattern from AP&apos;?  If so, that sounds good to me.  AP is done &apos;right&apos; (but you have to add hackery to handle the ugly stuff a while).  Old API is deprecated and IMO, it is find if deprecated API loses perf &amp;#8211; it is incentive to move to the new way.&lt;/p&gt;
</comment>
                            <comment id="13878137" author="sershe" created="Wed, 22 Jan 2014 01:46:18 +0000"  >&lt;p&gt;Yeah, I mean the API behavior compat; not backporting.&lt;br/&gt;
Options are (inserting numbers into the above)&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;(1) either break HTable::put interface (doesn&apos;t seem viable), (2) make put-s sync and add separate async put (that is possible but may also be surprising), or (3) remove old pattern from AP, but keep track of all the puts inside HTable itself, and aggregate all errors only when flushCommits is called, for example (with some client performance loss because multiple requests will be tracked on higher level than in AP). &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;HTable::put is not deprecated though, it just has very idiosyncratic behavior compared to &quot;usual&quot; sync, async or batching APIs.&lt;/p&gt;
</comment>
                            <comment id="13878208" author="sershe" created="Wed, 22 Jan 2014 03:27:54 +0000"  >&lt;p&gt;Updated patch. Updated javadoc, addressed some of the comments below; removed generic arg from top-level asyncprocess; so asyncprocess can be shared more. Will address that in next iteration&lt;/p&gt;</comment>
                            <comment id="13878276" author="hadoopqa" created="Wed, 22 Jan 2014 05:24:20 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12624266/HBASE-10277.01.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12624266/HBASE-10277.01.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12624266&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +          // This action failed before creating ars. Add it to retained but do not add to submit list.&lt;br/&gt;
+                             Throwable error, long backOffTime, boolean willRetry, String startTime){&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestCatalogJanitor&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8487//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13878494" author="nkeywal" created="Wed, 22 Jan 2014 10:23:40 +0000"  >&lt;p&gt;For #3, flushCommit may be not called before close time. The write buffer manage the size of the message for the user, it allows him to stream its writes to the HTable. The issue here is really the error management., the feature itself is nice when everything works properly.&lt;/p&gt;

&lt;p&gt;I would propose an option #4: add a callback for error management. If the callback is set, we use it. If not, we raise an exception as we used to do. We could as well stream the gets/increments.... as the puts, and use a callback to return the result as well. This would save the creation of the Object[], and it would make the interface consistent. The code itself is already there imho. We can consider that changing the HTable semantic is for another jira btw, as you like.&lt;/p&gt;</comment>
                            <comment id="13879329" author="sershe" created="Wed, 22 Jan 2014 23:13:57 +0000"  >&lt;p&gt;Callback for each put call would still need to be maintained separately for each put call, and if you need results (like from get) you&apos;d still need to have place to store them. Current patch bypasses the creation of Object[] when results are not needed, e.g. for streaming puts. Previous code does the same thing, but the Object[] for get was still created inside the callback object.&lt;br/&gt;
One problem with current callback is that as soon as you have multiple submits the index argument to callback becomes ambiguous, so you no longer know for which action you receive the error or result. So, HCM batch code creates AP for each single submit, that way it knows the index is always from that submit when the callback populates the array; and HTable just doesn&apos;t use callback for streaming puts because it doesn&apos;t need the results... if HTable were to use current callback for error management (or streaming gets when you need results and there are multiple submit calls), it becomes a real problem.&lt;/p&gt;

&lt;p&gt;We can instead add /per-call/ callback in the context. It&apos;s a hybrid between #3 and #4; AP can avoid global error support; we can add async call with callback to HTable which would use the &quot;regular&quot; path; current streaming put can have the same semantics but maintain the contexts in HTable rather than AP. Let me think more about the latter case.&lt;/p&gt;</comment>
                            <comment id="13885846" author="sershe" created="Wed, 29 Jan 2014 21:41:03 +0000"  >&lt;p&gt;rebased patch on top of recent changes; removed some stub code for replicas that is not necessary in this patch; also restructured sendMultiAction to be able to get rid of needing initial actions array for retries.&lt;/p&gt;

&lt;p&gt;I think this patch should be ready and reusing AP more can be done in a separate patch.&lt;/p&gt;</comment>
                            <comment id="13885851" author="sershe" created="Wed, 29 Jan 2014 21:43:15 +0000"  >&lt;p&gt;RB at &lt;a href=&quot;https://reviews.apache.org/r/17510/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/17510/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13886187" author="sershe" created="Thu, 30 Jan 2014 02:15:39 +0000"  >&lt;p&gt;fix some test-specific issues with mocks, and nullref exception in coproc connection&lt;/p&gt;</comment>
                            <comment id="13886232" author="hadoopqa" created="Thu, 30 Jan 2014 04:03:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12626043/HBASE-10277.03.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12626043/HBASE-10277.03.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12626043&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +          // This action failed before creating ars. Add it to retained but do not add to submit list.&lt;br/&gt;
+                    &quot; Retrying. Server is &quot; + server.getServerName() + &quot;, tableName=&quot; + tableName, t);&lt;br/&gt;
+                             Throwable error, long backOffTime, boolean willRetry, String startTime){&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.encoding.TestChangingEncoding&lt;br/&gt;
                  org.apache.hadoop.hbase.rest.client.TestRemoteTable&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestHRegionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.rest.TestGetAndPutResource&lt;br/&gt;
                  org.apache.hadoop.hbase.rest.TestDeleteRow&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.io.encoding.TestEncodedSeekers.testEncodedSeeker(TestEncodedSeekers.java:129)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHCM.testMulti(TestHCM.java:858)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8558//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13887400" author="sershe" created="Fri, 31 Jan 2014 02:45:09 +0000"  >&lt;p&gt;I think I know what the issue is with these tests... I will probably fix tomorrow, or later today; the patch is still ready for review &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13887420" author="sershe" created="Fri, 31 Jan 2014 03:17:59 +0000"  >&lt;p&gt;fix&lt;/p&gt;</comment>
                            <comment id="13887478" author="hadoopqa" created="Fri, 31 Jan 2014 05:14:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12626252/HBASE-10277.04.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12626252/HBASE-10277.04.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12626252&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +          // This action failed before creating ars. Add it to retained but do not add to submit list.&lt;br/&gt;
+                    &quot; Retrying. Server is &quot; + server.getServerName() + &quot;, tableName=&quot; + tableName, t);&lt;br/&gt;
+                             Throwable error, long backOffTime, boolean willRetry, String startTime){&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.io.encoding.TestEncodedSeekers.testEncodedSeeker(TestEncodedSeekers.java:129)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8564//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13888063" author="sershe" created="Fri, 31 Jan 2014 19:39:35 +0000"  >&lt;p&gt;TestEncodedSeekers stuff happens in other JIRAs and is probably unrelated&lt;/p&gt;</comment>
                            <comment id="13890965" author="sershe" created="Tue, 4 Feb 2014 18:20:50 +0000"  >&lt;p&gt;Minor feedback from RB, rebase the patch.&lt;br/&gt;
Wrt moving error management for streaming mode out of AsyncProcess, for example into HTable, I think it might hurt performance because HTable will have to manage all these objects. Let me try to think if this can be avoided. &lt;/p&gt;

&lt;p&gt;Patch still ready &lt;del&gt;for +1&lt;/del&gt; er, I mean for review &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13891116" author="hadoopqa" created="Tue, 4 Feb 2014 20:01:16 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12626923/HBASE-10277.05.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12626923/HBASE-10277.05.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12626923&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +          // This action failed before creating ars. Add it to retained but do not add to submit list.&lt;br/&gt;
+                    &quot; Retrying. Server is &quot; + server.getServerName() + &quot;, tableName=&quot; + tableName, t);&lt;br/&gt;
+                             Throwable error, long backOffTime, boolean willRetry, String startTime){&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8591//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13891152" author="nkeywal" created="Tue, 4 Feb 2014 20:20:21 +0000"  >&lt;p&gt;I published the review. My comments are cosmetic mainly, we discussed all the main points previously. I&apos;m +1 (with my comments taken into account obviously ;- ). Thanks, Sergey.&lt;/p&gt;</comment>
                            <comment id="13891410" author="sershe" created="Tue, 4 Feb 2014 23:17:28 +0000"  >&lt;p&gt;Address Nicolas&apos; feedback from RB, and one TODO, now AP is shared in HConnection, I added an option to have pool either in AP or in individual request&lt;/p&gt;</comment>
                            <comment id="13891422" author="enis" created="Tue, 4 Feb 2014 23:33:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;Wrt moving error management for streaming mode out of AsyncProcess, for example into HTable, I think it might hurt performance because HTable will have to manage all these objects. Let me try to think if this can be avoided.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok, we can address that as a follow up if there is benefit in abstracting that away. &lt;/p&gt;

&lt;p&gt;One small question in RB, other than that I&apos;m +1 as well. &lt;/p&gt;</comment>
                            <comment id="13891455" author="sershe" created="Tue, 4 Feb 2014 23:49:17 +0000"  >&lt;p&gt;I will file a follow-up JIRA. Responded on RB, but it now gives me errors, not sure if it got posted. The answer is &quot;yes&quot;.&lt;/p&gt;</comment>
                            <comment id="13891572" author="hadoopqa" created="Wed, 5 Feb 2014 01:27:58 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12627021/HBASE-10277.06.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12627021/HBASE-10277.06.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12627021&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 3 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +   * See &lt;/p&gt;
{@link #submit(ExecutorService, TableName, List, boolean, org.apache.hadoop.hbase.client.coprocessor.Batch.Callback, boolean)}
&lt;p&gt;.&lt;br/&gt;
+      boolean atLeastOne, Batch.Callback&amp;lt;CResult&amp;gt; callback, boolean needResults) throws InterruptedIOException {&lt;br/&gt;
+          // This action failed before creating ars. Add it to retained but do not add to submit list.&lt;br/&gt;
+   * See &lt;/p&gt;
{@link #submitAll(ExecutorService, TableName, List, org.apache.hadoop.hbase.client.coprocessor.Batch.Callback, Object[])}
&lt;p&gt;.&lt;br/&gt;
+                    &quot; Retrying. Server is &quot; + server.getServerName() + &quot;, tableName=&quot; + tableName, t);&lt;br/&gt;
+                             Throwable error, long backOffTime, boolean willRetry, String startTime){&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestCatalogJanitor&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8598//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13891584" author="sershe" created="Wed, 5 Feb 2014 01:40:19 +0000"  >&lt;p&gt;probably another mock-related failure... let me investigate&lt;/p&gt;</comment>
                            <comment id="13891597" author="sershe" created="Wed, 5 Feb 2014 01:56:25 +0000"  >&lt;p&gt;yeah NPE because mocj doesn&apos;t override newly added reusable AP. I&apos;ll see what can be done, probably just create new API in the mock. I&apos;d assume +1s would stand with that change, so I&apos;d commit late today or tomorrow&lt;/p&gt;</comment>
                            <comment id="13891659" author="sershe" created="Wed, 5 Feb 2014 03:28:17 +0000"  >&lt;p&gt;test code fix&lt;/p&gt;</comment>
                            <comment id="13891822" author="hadoopqa" created="Wed, 5 Feb 2014 05:44:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12627062/HBASE-10277.07.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12627062/HBASE-10277.07.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12627062&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +   * See &lt;/p&gt;
{@link #submit(ExecutorService, TableName, List, boolean, org.apache.hadoop.hbase.client.coprocessor.Batch.Callback, boolean)}
&lt;p&gt;.&lt;br/&gt;
+      boolean atLeastOne, Batch.Callback&amp;lt;CResult&amp;gt; callback, boolean needResults) throws InterruptedIOException {&lt;br/&gt;
+          // This action failed before creating ars. Add it to retained but do not add to submit list.&lt;br/&gt;
+   * See &lt;/p&gt;
{@link #submitAll(ExecutorService, TableName, List, org.apache.hadoop.hbase.client.coprocessor.Batch.Callback, Object[])}
&lt;p&gt;.&lt;br/&gt;
+                    &quot; Retrying. Server is &quot; + server.getServerName() + &quot;, tableName=&quot; + tableName, t);&lt;br/&gt;
+                             Throwable error, long backOffTime, boolean willRetry, String startTime){&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8600//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13892662" author="hudson" created="Wed, 5 Feb 2014 22:29:32 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #4889 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4889/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4889/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10277&quot; title=&quot;refactor AsyncProcess&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10277&quot;&gt;&lt;del&gt;HBASE-10277&lt;/del&gt;&lt;/a&gt; refactor AsyncProcess (sershe: rev 1564832)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RetriesExhaustedWithDetailsException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ResponseConverter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/CoprocessorHConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/HConnectionTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13892769" author="enis" created="Wed, 5 Feb 2014 23:50:38 +0000"  >&lt;p&gt;Sergey did you commit this? An update would have been nice. Also there seems to be javadoc warnings. Can you do an addendum patch for fixing those. &lt;/p&gt;</comment>
                            <comment id="13892770" author="enis" created="Wed, 5 Feb 2014 23:52:24 +0000"  >&lt;p&gt;Can you also resolve the issue. &lt;/p&gt;</comment>
                            <comment id="13892829" author="hudson" created="Thu, 6 Feb 2014 00:34:44 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK-on-Hadoop-1.1 #80 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/80/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/80/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10277&quot; title=&quot;refactor AsyncProcess&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10277&quot;&gt;&lt;del&gt;HBASE-10277&lt;/del&gt;&lt;/a&gt; refactor AsyncProcess (sershe: rev 1564832)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RetriesExhaustedWithDetailsException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ResponseConverter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestAsyncProcess.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/client/CoprocessorHConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/HConnectionTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13892838" author="sershe" created="Thu, 6 Feb 2014 00:36:41 +0000"  >&lt;p&gt;javadoc addendum&lt;/p&gt;</comment>
                            <comment id="13892876" author="enis" created="Thu, 6 Feb 2014 01:10:53 +0000"  >&lt;p&gt;+1 on addendum. Thanks Sergey! &lt;/p&gt;</comment>
                            <comment id="13892879" author="sershe" created="Thu, 6 Feb 2014 01:13:56 +0000"  >&lt;p&gt;committed to trunk, w/addendum to fix javadoc warnings&lt;/p&gt;</comment>
                            <comment id="13893110" author="hudson" created="Thu, 6 Feb 2014 06:52:00 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #4893 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4893/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4893/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10277&quot; title=&quot;refactor AsyncProcess&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10277&quot;&gt;&lt;del&gt;HBASE-10277&lt;/del&gt;&lt;/a&gt; refactor AsyncProcess ADDENDUM fix javadoc warnings (sershe: rev 1565031)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13893199" author="hudson" created="Thu, 6 Feb 2014 09:18:10 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK-on-Hadoop-1.1 #81 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/81/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/81/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10277&quot; title=&quot;refactor AsyncProcess&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10277&quot;&gt;&lt;del&gt;HBASE-10277&lt;/del&gt;&lt;/a&gt; refactor AsyncProcess ADDENDUM fix javadoc warnings (sershe: rev 1565031)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14330889" author="enis" created="Sat, 21 Feb 2015 23:31:56 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12689127">HBASE-10356</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12693267">HBASE-10468</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12627258" name="HBASE-10277-addendum.patch" size="949" author="sershe" created="Thu, 6 Feb 2014 00:36:41 +0000"/>
                            <attachment id="12624266" name="HBASE-10277.01.patch" size="100536" author="sershe" created="Wed, 22 Jan 2014 03:27:54 +0000"/>
                            <attachment id="12625979" name="HBASE-10277.02.patch" size="102206" author="sershe" created="Wed, 29 Jan 2014 21:41:03 +0000"/>
                            <attachment id="12626043" name="HBASE-10277.03.patch" size="108345" author="sershe" created="Thu, 30 Jan 2014 02:15:39 +0000"/>
                            <attachment id="12626252" name="HBASE-10277.04.patch" size="108927" author="sershe" created="Fri, 31 Jan 2014 03:17:59 +0000"/>
                            <attachment id="12626923" name="HBASE-10277.05.patch" size="109000" author="sershe" created="Tue, 4 Feb 2014 18:20:50 +0000"/>
                            <attachment id="12627021" name="HBASE-10277.06.patch" size="111816" author="sershe" created="Tue, 4 Feb 2014 23:17:28 +0000"/>
                            <attachment id="12627062" name="HBASE-10277.07.patch" size="111962" author="sershe" created="Wed, 5 Feb 2014 03:28:17 +0000"/>
                            <attachment id="12622325" name="HBASE-10277.patch" size="96568" author="sershe" created="Fri, 10 Jan 2014 02:25:41 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 10 Jan 2014 04:40:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>366281</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1r4yf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>366592</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>