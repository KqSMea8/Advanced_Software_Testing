<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:32:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5991/HBASE-5991.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5991] Introduce sequential ZNode based read/write locks </title>
                <link>https://issues.apache.org/jira/browse/HBASE-5991</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is a continuation of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5494&quot; title=&quot;Introduce a zk hosted table-wide read/write lock so only one table operation at a time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5494&quot;&gt;&lt;del&gt;HBASE-5494&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Currently table-level write locks have been implemented using non-sequential ZNodes as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5494&quot; title=&quot;Introduce a zk hosted table-wide read/write lock so only one table operation at a time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5494&quot;&gt;&lt;del&gt;HBASE-5494&lt;/del&gt;&lt;/a&gt; and committed to 89-fb branch. This issue is to track converting the table-level locks to sequential ZNodes and supporting read-write locks, as to solve the issue of preventing schema changes during region splits or merges.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12554949">HBASE-5991</key>
            <summary>Introduce sequential ZNode based read/write locks </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="avf">Alex Feinberg</assignee>
                                    <reporter username="avf">Alex Feinberg</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 May 2012 18:20:18 +0000</created>
                <updated>Sat, 8 Dec 2012 00:18:50 +0000</updated>
                            <resolved>Sat, 8 Dec 2012 00:18:29 +0000</resolved>
                                                    <fixVersion>0.89-fb</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="13397811" author="zhihyu@ebaysf.com" created="Wed, 20 Jun 2012 19:47:13 +0000"  >&lt;p&gt;@Alex:&lt;br/&gt;
Are you working on this issue ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13408801" author="zhihyu@ebaysf.com" created="Sat, 7 Jul 2012 22:44:35 +0000"  >&lt;p&gt;I seems Alex is not working on this.&lt;/p&gt;</comment>
                            <comment id="13408832" author="avf" created="Sun, 8 Jul 2012 02:08:51 +0000"  >&lt;p&gt;Hi Ted,&lt;/p&gt;

&lt;p&gt;Sorry, I haven&apos;t followed up on this &amp;#8211; I have been busy.&lt;/p&gt;

&lt;p&gt;Yes, I still intend to do work on this. Unless you&apos;ve started working on it, I can finish it: I&apos;ve already started and have a design in mind.&lt;/p&gt;</comment>
                            <comment id="13421057" author="jesse_yates" created="Tue, 24 Jul 2012 00:30:21 +0000"  >&lt;p&gt;@Alex not to press too much, but any progress? Over on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6055&quot; title=&quot;Offline Snapshots in HBase 0.96&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6055&quot;&gt;&lt;del&gt;HBASE-6055&lt;/del&gt;&lt;/a&gt; it would be really nice to not just have locks on master operations, but full-fledged table metadata and/or read/write locks. That way an operation that spans regionservers could lock a table (checkable at the regionserver as well), preventing things like: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;splits&lt;/li&gt;
	&lt;li&gt;merges&lt;/li&gt;
	&lt;li&gt;region reassignment&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Also, it would be nice if the lock would be flexible enough to be  used to lock a table down to a read-only state (so any writes get blocked/regjected until the table is unlocked).  I think something along the lines of what was up in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5494&quot; title=&quot;Introduce a zk hosted table-wide read/write lock so only one table operation at a time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5494&quot;&gt;&lt;del&gt;HBASE-5494&lt;/del&gt;&lt;/a&gt; would be the right way to go (leased based lock control and watcher in ZK), perhaps with the addition of some lock listeners. &lt;/p&gt;

&lt;p&gt;If you are busy with other stuff, I&apos;d be glad to work on it.&lt;/p&gt;</comment>
                            <comment id="13421070" author="avf" created="Tue, 24 Jul 2012 00:53:23 +0000"  >&lt;p&gt;Hi Jesse,&lt;/p&gt;

&lt;p&gt;1) Re: progress &amp;#8211; I have another issue I am working on this week (related to log splitting) &amp;#8211; but let me see if I can shuffle things around and get this finished this week (I&apos;ll let you know an ETA): I&apos;ll let you know (at the latest) sometime tomorrow (hopefully earlier) if I can get this done this week. If not, I&apos;ll let you know so you could work on this.&lt;/p&gt;

&lt;p&gt;2) Re: locking the table to read only &amp;#8211; Sequential locks let us introduce read-write lock for metadata, so I think it will also be possible to introduce a write lock for data itself. Good suggestion.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Alex&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13421072" author="avf" created="Tue, 24 Jul 2012 00:56:32 +0000"  >&lt;p&gt;Just spoke to Liyin about this &amp;#8211; I&apos;ll work on this week and will post an update (and hopefully a diff) by Thursday. &lt;/p&gt;</comment>
                            <comment id="13422437" author="avf" created="Wed, 25 Jul 2012 17:28:59 +0000"  >&lt;p&gt;Working on this right now.&lt;/p&gt;</comment>
                            <comment id="13422458" author="jesse_yates" created="Wed, 25 Jul 2012 17:54:07 +0000"  >&lt;p&gt;@Alex Sweet, looking forward to it.&lt;/p&gt;</comment>
                            <comment id="13422909" author="avf" created="Thu, 26 Jul 2012 05:42:23 +0000"  >&lt;p&gt;Mostly done in terms of implementing the locks itself based on the recipe (with recoverable zooKeeper). Should have this integrated into HMaster (in place of my DistributedLock code) and have a diff ready soon.&lt;/p&gt;</comment>
                            <comment id="13423686" author="avf" created="Fri, 27 Jul 2012 05:34:24 +0000"  >&lt;p&gt;Got tests for write lock passing (verifying that write locks excludes other writers). Now writing test for read locks (verifying that write locks exclude readers, but that readers do not exclude other reads). &lt;/p&gt;

&lt;p&gt;After that the tasks are to integrate misc functionality (printing information on lock owners) into the code, clean up, and then replace DistributedLock with WriteLock and run full end-to-end tests. Will put up a diff once this is done. &lt;/p&gt;</comment>
                            <comment id="13424190" author="avf" created="Fri, 27 Jul 2012 22:22:53 +0000"  >&lt;p&gt;All unit tests for exclusion functionality passing. Few issues remaining in handling custom specified timeouts. Will iron out and post a diff early next week.&lt;/p&gt;</comment>
                            <comment id="13427143" author="avf" created="Thu, 2 Aug 2012 06:41:48 +0000"  >&lt;p&gt;Unit test with custom timeout passing. Now working to integrate this and preparing a diff.&lt;/p&gt;</comment>
                            <comment id="13427796" author="avf" created="Fri, 3 Aug 2012 01:30:46 +0000"  >&lt;p&gt;Integrated and fully working. Will add Javadoc and put up a diff shortly.&lt;/p&gt;</comment>
                            <comment id="13428379" author="avf" created="Fri, 3 Aug 2012 21:02:46 +0000"  >&lt;p&gt;Here is the Phabricator diff (since Phabricator/JIRA integration seems to be broken at the moment).&lt;/p&gt;</comment>
                            <comment id="13428382" author="avf" created="Fri, 3 Aug 2012 21:03:47 +0000"  >&lt;p&gt;(Please disregard last comment, wrong diff linked.)&lt;/p&gt;</comment>
                            <comment id="13439028" author="avf" created="Tue, 21 Aug 2012 20:52:24 +0000"  >&lt;p&gt;Attaching a link to the phabricator diff.&lt;/p&gt;</comment>
                            <comment id="13492570" author="mbertozzi" created="Wed, 7 Nov 2012 18:23:18 +0000"  >&lt;p&gt;Hey &lt;span class=&quot;error&quot;&gt;&amp;#91;~afeinberg&amp;#93;&lt;/span&gt;, what is the status of this patch?&lt;br/&gt;
expecially in relation to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5494&quot; title=&quot;Introduce a zk hosted table-wide read/write lock so only one table operation at a time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5494&quot;&gt;&lt;del&gt;HBASE-5494&lt;/del&gt;&lt;/a&gt; (prevent multiple table level operation)&lt;br/&gt;
In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5494&quot; title=&quot;Introduce a zk hosted table-wide read/write lock so only one table operation at a time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5494&quot;&gt;&lt;del&gt;HBASE-5494&lt;/del&gt;&lt;/a&gt; all the master methods are synchronous but in trunk createTable(), deleteTable() &amp;amp; co are asynchronous... any thoughts on how/where to handle the unlock? &lt;/p&gt;</comment>
                            <comment id="13492584" author="avf" created="Wed, 7 Nov 2012 18:49:52 +0000"  >&lt;p&gt;Hi Matteo,&lt;/p&gt;

&lt;p&gt;It&apos;s committed to 89-fb. Stack is working to port this to trunk. &lt;/p&gt;

&lt;p&gt;Re: asynchronous. I&apos;ll have to take a look at trunk first, but couldn&apos;t unlock be done using a callback/ListenableFuture (in which case the unlock will be in both .onFailure() and .onSuccess())?&lt;/p&gt;</comment>
                            <comment id="13510096" author="enis" created="Tue, 4 Dec 2012 23:08:13 +0000"  >&lt;p&gt;Phabricator indicates that it has been committed to 0.89-fb. I&apos;m working on a trunk port for this. &lt;/p&gt;</comment>
                            <comment id="13510103" author="avf" created="Tue, 4 Dec 2012 23:14:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; Nice, thanks for jumping into this! Make sure to sync up with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; &amp;#8211; he also wanted to work on protobuf conversion/trunk patch.&lt;/p&gt;</comment>
                            <comment id="13510129" author="stack" created="Tue, 4 Dec 2012 23:46:56 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;~afeinberg&amp;#93;&lt;/span&gt; Hey boss... we&apos;re sitting in same room at the moment (hbase hackathon going on up here in SF).&lt;/p&gt;</comment>
                            <comment id="13510139" author="enis" created="Tue, 4 Dec 2012 23:57:43 +0000"  >&lt;p&gt;Backporting this (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5991&quot; title=&quot;Introduce sequential ZNode based read/write locks &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5991&quot;&gt;&lt;del&gt;HBASE-5991&lt;/del&gt;&lt;/a&gt;) and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5494&quot; title=&quot;Introduce a zk hosted table-wide read/write lock so only one table operation at a time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5494&quot;&gt;&lt;del&gt;HBASE-5494&lt;/del&gt;&lt;/a&gt; to trunk. &lt;br/&gt;
The rational for the read-write lock is that the master-initiate operations (enable/disable, modify, add/remove column) and region splits should not happen in parallel. However, multiple region splits can happen concurrently, so using a read/write lock for the table makes sense. All the table operations initiated from the master take a write lock. And the region splits take a read lock. &lt;/p&gt;

&lt;p&gt;In this patch, we will only be doing the master write lock parts. I&apos;ll open another issue to track the read locks for region splits. &lt;/p&gt;

&lt;p&gt;One discussion that happened offline in todays HBase hackaton was to use the curator library from netflix, which already has (supposedly) correct implementations for many zookeeper recipes (&lt;a href=&quot;https://github.com/Netflix/curator&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Netflix/curator&lt;/a&gt;). The 89-fb patch already contains a read/write zk lock that is implemented from the zk recipe in pseudo-code, so we have to chose one way or the other. &lt;/p&gt;

&lt;p&gt;I can go ahead and rebase this patch with the Curator&apos;s version to see whether we can go with it. If we want to continue the discussion on whether to go with curator or not, we can alternatively create a separate jira. &lt;/p&gt;</comment>
                            <comment id="13510158" author="avf" created="Wed, 5 Dec 2012 00:12:02 +0000"  >&lt;p&gt;Oh great! Didn&apos;t know there was a hackathon going on.&lt;/p&gt;

&lt;p&gt;I actually looked at curator code, but found it a bit overkill for this specific use case (particularly because we already had an implementation of the recovery logic in RecoveringZooKeeper &amp;#8211; so we&apos;d either have to migrate wholesale or keep two implementations of the same code). I did borrow a few ideas from there (even though I didn&apos;t follow the exact logic used, I believe), however, so it wasn&apos;t purely from the wiki + scratch. &lt;/p&gt;

&lt;p&gt;After I wrote this patch, we&apos;ve also open sourced a library that Puma and several other apps use to handle ZK. They use a slightly different version of RecoveringZooKeeper, however, that doesn&apos;t embed additional information into the data (like we do).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/jcommon/tree/master/zookeeper/src/main/java/com/facebook/zookeeper&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/facebook/jcommon/tree/master/zookeeper/src/main/java/com/facebook/zookeeper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are implementations of different recipes there as well. I have no strong preference on which part is better, there&apos;s a lot I like about curator (I would seriously consider using it for something I start from scratch). I&apos;d just avoid having multiple implementations of the same ZK abstraction in the codebase.&lt;/p&gt;

&lt;p&gt;One approach could be to just implement the interfaces with curator and then run this through the unit tests. &lt;/p&gt;

&lt;p&gt;Good luck! Feel free to put me on the diff(s). I am even more excited about what could now be done on top of these abstractions.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;af&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13510162" author="stack" created="Wed, 5 Dec 2012 00:27:41 +0000"  >&lt;p&gt;Thanks for the jcommon pointer Alex.  Studying it now....&lt;/p&gt;

&lt;p&gt;Agree on avoiding multiple implementations.  We&apos;re talking 0.96, the singularity, and thinking if we are going to switch, this is the time to do it.  Need a good reason to make the change or as Jon Hsieh says, 3 or 4 good medium size reasons... Talking about it at hackathon.&lt;/p&gt;</comment>
                            <comment id="13510937" author="enis" created="Wed, 5 Dec 2012 23:51:08 +0000"  >&lt;p&gt;@Alex thats for the pointers and the feedback. jcommons seems interesting, but one motivator for curator was that it already has reentrant read/write lock, barriers (for hbase snapshots), and queues (for log splitting?). I did not see those recipes in jcommons.&lt;/p&gt;

&lt;p&gt;With your patch already having locks, John&apos;s barrier implementation, and the rest of the stuff, there is definitely less reason to switch, but agreed with Stack in that this is the perfect time to switch, if we chose to &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;One approach could be to just implement the interfaces with curator and then run this through the unit tests.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed. That was my intention as well. &lt;/p&gt;</comment>
                            <comment id="13526916" author="enis" created="Sat, 8 Dec 2012 00:17:47 +0000"  >&lt;p&gt;I&apos;ve created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7305&quot; title=&quot;ZK based Read/Write locks for table operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7305&quot;&gt;&lt;del&gt;HBASE-7305&lt;/del&gt;&lt;/a&gt; to continue the discussion and patch there. The forward port started diverging, especially if we do the curator stuff. &lt;/p&gt;</comment>
                            <comment id="13526917" author="enis" created="Sat, 8 Dec 2012 00:18:29 +0000"  >&lt;p&gt;Closing this, since it has been committed to 89-fb&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12622994">HBASE-7305</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Jun 2012 19:47:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>239202</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 1 week, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0azzz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>62110</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>