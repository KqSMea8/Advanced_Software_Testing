<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:38:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6621/HBASE-6621.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6621] Reduce calls to Bytes.toInt</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6621</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Bytes.toInt shows up quite often in a profiler run.&lt;br/&gt;
It turns out that one source is HFileReaderV2$ScannerV2.getKeyValue().&lt;/p&gt;

&lt;p&gt;Notice that we call the KeyValue(byte[], int) constructor, which forces the constructor to determine its size by reading some of the header information and calculate the size. In this case, however, we already know the size (from the call to readKeyValueLen), so we could just use that.&lt;/p&gt;

&lt;p&gt;In the extreme case of 10000&apos;s of columns this noticeably reduces CPU. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12604148">HBASE-6621</key>
            <summary>Reduce calls to Bytes.toInt</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Aug 2012 23:49:00 +0000</created>
                <updated>Sun, 7 Apr 2013 04:50:08 +0000</updated>
                            <resolved>Tue, 21 Aug 2012 17:06:58 +0000</resolved>
                                                    <fixVersion>0.94.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13438335" author="lhofhansl" created="Tue, 21 Aug 2012 00:02:12 +0000"  >&lt;p&gt;Simple patch.&lt;br/&gt;
currKeyLen and currValueLen are up to date (and they are in fact used in the getKey() and getValue() methods.&lt;br/&gt;
This patch uses them in getKeyValue() as well, and hence avoids two Bytes.toInt conversion for each read KV during scanning.&lt;/p&gt;</comment>
                            <comment id="13438351" author="lhofhansl" created="Tue, 21 Aug 2012 00:24:45 +0000"  >&lt;p&gt;The 2nd observation is that since we also know the keyLength of the KV already in HFileReaderV2, we might as well pass it to the created KV, further reducing calls to Bytes.toInt().&lt;/p&gt;</comment>
                            <comment id="13438354" author="lhofhansl" created="Tue, 21 Aug 2012 00:26:17 +0000"  >&lt;p&gt;With these two changes Bytes.toInt is no longer the top 40 (or so) methods. (used to be in the top ten)&lt;/p&gt;</comment>
                            <comment id="13438356" author="lhofhansl" created="Tue, 21 Aug 2012 00:28:13 +0000"  >&lt;p&gt;Combined patch to make use of the information the HScannerV2 already has.&lt;/p&gt;</comment>
                            <comment id="13438358" author="stack" created="Tue, 21 Aug 2012 00:29:47 +0000"  >&lt;p&gt;+1 on patch.  Simple.&lt;/p&gt;</comment>
                            <comment id="13438364" author="lhofhansl" created="Tue, 21 Aug 2012 00:48:12 +0000"  >&lt;p&gt;One more observation. KeyValue.getType() is called a lot. Caching that byte provides a nice benefit. In my test is tickles another few percent CPU away.&lt;br/&gt;
ScannerV2.&lt;/p&gt;
{next|getKeyValue|readKeyValueLen}
&lt;p&gt; now represent a large percentage of the overall CPU (about 60%), which is the way we want it.&lt;/p&gt;

&lt;p&gt;I&apos;ll add that to the patch.&lt;/p&gt;

&lt;p&gt;@Stack: Did you look at the initial patch or V2?&lt;/p&gt;</comment>
                            <comment id="13438368" author="lhofhansl" created="Tue, 21 Aug 2012 00:51:28 +0000"  >&lt;p&gt;Adds the caching of type.&lt;br/&gt;
(If that should be a different change, we can just integrate v2 here)&lt;/p&gt;</comment>
                            <comment id="13438379" author="lhofhansl" created="Tue, 21 Aug 2012 01:28:07 +0000"  >&lt;p&gt;Thinking now that maybe the v3 portion should be separate as it actually changes the storage patterns of KeyValue. The changes in v2 cannot lead to worse performance than before in any scenario.&lt;/p&gt;

&lt;p&gt;If there are no objections I&apos;ll commit v2 soon (after Stack confirmed that he in fact +1&apos;ed v2 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;</comment>
                            <comment id="13438415" author="zhihyu@ebaysf.com" created="Tue, 21 Aug 2012 02:42:55 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; length &amp;lt;code&amp;gt;length&amp;lt;/code&amp;gt;, and a know &amp;lt;code&amp;gt;keyLength&amp;lt;/code&amp;gt;.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;know&apos; -&amp;gt; &apos;known&apos;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Use with caution.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can you tell us what caution should be taken ?&lt;/p&gt;</comment>
                            <comment id="13438420" author="lhofhansl" created="Tue, 21 Aug 2012 02:51:42 +0000"  >&lt;p&gt;Ahh, will correct the spelling. The caution is that if you pass in the wrong length of the key you&apos;ll get unpredictable results.&lt;/p&gt;</comment>
                            <comment id="13438428" author="lhofhansl" created="Tue, 21 Aug 2012 03:32:19 +0000"  >&lt;p&gt;v4 is like v2 with Ted&apos;s comments addressed (the note caution in the comment was pointless, since the same would happen when the wrong length is specified).&lt;/p&gt;</comment>
                            <comment id="13438429" author="lhofhansl" created="Tue, 21 Aug 2012 03:32:48 +0000"  >&lt;p&gt;I doubt this is going to break anything, but let&apos;s get a hadoop qa run.&lt;/p&gt;</comment>
                            <comment id="13438430" author="tlipcon" created="Tue, 21 Aug 2012 03:33:01 +0000"  >&lt;p&gt;Do you have benchmark results showing an improvement in actual scan speed?&lt;/p&gt;

&lt;p&gt;When I looked into scan performance with oprofile a few months back, I found the same as you &amp;#8211; that a lot of time was spent in these calls. But when I also added cache miss counters to the profile, I found the reason was cache misses, not the actual CPU usage of the function. So caching them would just shift around the cache miss to the next access of the cache line elsewhere, without actually improving total performance.&lt;/p&gt;</comment>
                            <comment id="13438445" author="lhofhansl" created="Tue, 21 Aug 2012 04:16:46 +0000"  >&lt;p&gt;@Todd: I assume you are referring to v3 of the patch? (the part where I suggest caching the type of the KV and a new byte member)  I had the same about this just being a bogus profiler indicator.&lt;/p&gt;

&lt;p&gt;v4 (and v2) does not cache information, it just uses the information that the HFileScanner already collected anyway (length and key length) and avoids calculating it again - it cannot make things worse. I saw a real life improvement with it. I&apos;ll quantify it.&lt;/p&gt;</comment>
                            <comment id="13438450" author="hadoopqa" created="Tue, 21 Aug 2012 04:39:44 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12541708/6621-0.96-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12541708/6621-0.96-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2635//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13438474" author="lhofhansl" created="Tue, 21 Aug 2012 05:59:23 +0000"  >&lt;p&gt;I will admit that the improvement is hard to separate from the GC noise. According to the profiler it should save a about 5%.&lt;/p&gt;

&lt;p&gt;When I average out the scan times on the client and let it run for a while I do see about 2% improvement... Hmm. (note this for v4, with no additional new caching in KeyValue)&lt;/p&gt;

&lt;p&gt;I will also try with a filter that filters everything to eliminate variance in the driving client.&lt;/p&gt;</comment>
                            <comment id="13438491" author="lhofhansl" created="Tue, 21 Aug 2012 06:46:43 +0000"  >&lt;p&gt;Using a qualifier filter that just filters each qualifier (to eliminate variance from the network and the driver client), I see 7.30ms vs 7.65ms per, a ~4% improvement.&lt;/p&gt;

&lt;p&gt;This was a repeated get of a row with 200.000 columns, all of which are filtered by a QualifierFilter (i.e. all KVs are read at the server, but none are returned to the client).&lt;/p&gt;</comment>
                            <comment id="13438787" author="tlipcon" created="Tue, 21 Aug 2012 15:04:45 +0000"  >&lt;p&gt;Oops, yea, I missed the fact that the caching was removed again in the later patches. The change makes sense to me.&lt;/p&gt;</comment>
                            <comment id="13438793" author="stack" created="Tue, 21 Aug 2012 15:16:44 +0000"  >&lt;p&gt;I +1&apos;d v2 Lars.  v4 looks good to me.&lt;/p&gt;</comment>
                            <comment id="13438862" author="lhofhansl" created="Tue, 21 Aug 2012 17:06:58 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96.&lt;/p&gt;</comment>
                            <comment id="13438864" author="lhofhansl" created="Tue, 21 Aug 2012 17:07:16 +0000"  >&lt;p&gt;Thanks for the reviews.&lt;/p&gt;</comment>
                            <comment id="13438921" author="hudson" created="Tue, 21 Aug 2012 18:10:12 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #411 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/411/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/411/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6621&quot; title=&quot;Reduce calls to Bytes.toInt&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6621&quot;&gt;&lt;del&gt;HBASE-6621&lt;/del&gt;&lt;/a&gt; Reduce calls to Bytes.toInt (Revision 1375665)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13438944" author="hudson" created="Tue, 21 Aug 2012 18:59:38 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3250 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3250/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3250/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6621&quot; title=&quot;Reduce calls to Bytes.toInt&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6621&quot;&gt;&lt;del&gt;HBASE-6621&lt;/del&gt;&lt;/a&gt; Reduce calls to Bytes.toInt (Revision 1375663)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13439085" author="lhofhansl" created="Tue, 21 Aug 2012 21:56:24 +0000"  >&lt;p&gt;Here&apos;s another observation. In ScanQueryMatcher.match we have this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] bytes = kv.getBuffer();
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset = kv.getOffset();
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; initialOffset = offset;

    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; keyLength = Bytes.toInt(bytes, offset, Bytes.SIZEOF_INT);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point the passed kv already has its keyLength cached. So we can use &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; keyLength = kv.getKeyLength();&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; instead a save a few more cycles.&lt;br/&gt;
This has measurable effect with many columns (~3%).&lt;/p&gt;

&lt;p&gt;A simple 1-line change. Any opposition doing this here as well, or should I open a new issue.&lt;/p&gt;</comment>
                            <comment id="13439145" author="hudson" created="Tue, 21 Aug 2012 23:29:15 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #141 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/141/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/141/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6621&quot; title=&quot;Reduce calls to Bytes.toInt&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6621&quot;&gt;&lt;del&gt;HBASE-6621&lt;/del&gt;&lt;/a&gt; Reduce calls to Bytes.toInt (Revision 1375663)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13439500" author="hudson" created="Wed, 22 Aug 2012 13:48:08 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #48 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/48/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/48/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6621&quot; title=&quot;Reduce calls to Bytes.toInt&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6621&quot;&gt;&lt;del&gt;HBASE-6621&lt;/del&gt;&lt;/a&gt; Reduce calls to Bytes.toInt (Revision 1375665)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13448326" author="hudson" created="Wed, 5 Sep 2012 00:57:15 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #7 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6621&quot; title=&quot;Reduce calls to Bytes.toInt&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6621&quot;&gt;&lt;del&gt;HBASE-6621&lt;/del&gt;&lt;/a&gt; Reduce calls to Bytes.toInt (Revision 1375665)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13624671" author="stack" created="Sun, 7 Apr 2013 04:50:08 +0000"  >&lt;p&gt;Fix up after bulk move overwrote some 0.94.2 fix versions w/ 0.95.0 (Noticed by Lars Hofhansl)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12541684" name="6621-0.96-v2.txt" size="1811" author="lhofhansl" created="Tue, 21 Aug 2012 00:28:13 +0000"/>
                            <attachment id="12541688" name="6621-0.96-v3.txt" size="3124" author="lhofhansl" created="Tue, 21 Aug 2012 00:51:28 +0000"/>
                            <attachment id="12541708" name="6621-0.96-v4.txt" size="1788" author="lhofhansl" created="Tue, 21 Aug 2012 03:32:19 +0000"/>
                            <attachment id="12541676" name="6621-0.96.txt" size="746" author="lhofhansl" created="Tue, 21 Aug 2012 00:02:12 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 Aug 2012 00:29:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>242547</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 36 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02vlb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14719</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>