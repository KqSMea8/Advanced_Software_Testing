<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:04:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2755/HBASE-2755.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2755] Duplicate assignment of a region after region server recovery</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2755</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;After a region server recovery, some regions may get assigned to duplicate region servers.&lt;/p&gt;

&lt;p&gt;Note: I am based on a slightly older trunk (prior to the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2694&quot; title=&quot;Move RS to Master region open/close messaging into ZooKeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2694&quot;&gt;&lt;del&gt;HBASE-2694&lt;/del&gt;&lt;/a&gt;). Nevertheless, I think &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2694&quot; title=&quot;Move RS to Master region open/close messaging into ZooKeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2694&quot;&gt;&lt;del&gt;HBASE-2694&lt;/del&gt;&lt;/a&gt; doesn&apos;t address this case.&lt;/p&gt;

&lt;p&gt;Scenario:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Three region server setup (store285,286,287), with about 500 regions in the table overall.&lt;/li&gt;
	&lt;li&gt;kill -9 and restart one of the region servers (store286).&lt;/li&gt;
	&lt;li&gt;The 170 odd regions in the failed region server got assigned out. But two of the regions got assigned to multiple region servers.&lt;/li&gt;
	&lt;li&gt;Looking at the log entries for one such region, it appears that there is some race condition that happens between the ProcessRegionOpen (a RegionServerOperation) and BaseScanner which causes the BaseScanner to think this region needs to be reassigned.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Relevant Logs:&lt;/p&gt;

&lt;p&gt;Master detects that the server start message (from the restarted RS) is from a server it already knows about, but startcode is different. So, it triggers server recovery. Alternatively, the recovery will be triggered by ZNODE expiry in some cases depending on which ever event (restart of RS or Znode expiry) happens first. After that it does logs splits etc. for the failed RS; it then also removes the old region server/startcode from the deadservers map.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2010-06-17 10:26:06,420 INFO org.apache.hadoop.hbase.master.ServerManager: Server start rejected; we already have 10.138.95.182:60020 registered; existingServer=serverName=store286.xyz.com,60020,1276629467680, load=(requests=22, regions=171, usedHeap=6549, maxHeap=11993), newServer=serverName=store286.xyz.com,60020,1276795566511, load=(requests=0, regions=0, usedHeap=0, maxHeap=0)
2010-06-17 10:26:06,420 INFO org.apache.hadoop.hbase.master.ServerManager: Triggering server recovery; existingServer looks stale
2010-06-17 10:26:06,420 DEBUG org.apache.hadoop.hbase.master.ServerManager: Added=store286.xyz.com,60020,1276629467680 to dead servers, added shutdown processing operation

... split log processing...

2010-06-17 10:29:51,317 DEBUG org.apache.hadoop.hbase.master.RegionServerOperation: Removed store286.xyz.com,60020,1276629467680 from deadservers Map
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What follows is the relevant log snippet for one of the regions that gets double assigned.&lt;/p&gt;

&lt;p&gt;Master tries to assign the region to store285. &lt;/p&gt;

&lt;p&gt;At 10:30:20,006, in ProcessRegionOpen, we update META with information about the new assignment. However, just around the same time, BaseScanner processes this entry (at 10:30:20,009), but finds that the region is still assigned to the old region server. There have been some fixes for double assignment in BaseScanner because BaseScanner might be doing a stale read depending on when it started. But looks like there is still another hole left.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2010-06-17 10:30:10,186 INFO org.apache.hadoop.hbase.master.RegionManager: Assigning region test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. to store285.xyz.com,60020,1276629468460

2010-06-17 10:30:11,701 INFO org.apache.hadoop.hbase.master.ServerManager: Processing MSG_REPORT_PROCESS_OPEN: test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. from store285.xyz.com,60020,1276629468460; 8 of
2010-06-17 10:30:12,800 INFO org.apache.hadoop.hbase.master.ServerManager: Processing MSG_REPORT_PROCESS_OPEN: test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. from store285.xyz.com,60020,1276629468460; 7 of
2010-06-17 10:30:13,905 INFO org.apache.hadoop.hbase.master.ServerManager: Processing MSG_REPORT_PROCESS_OPEN: test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. from store285.xyz.com,60020,1276629468460; 6 of
...
2010-06-17 10:30:20,001 INFO org.apache.hadoop.hbase.master.ServerManager: Processing MSG_REPORT_OPEN: test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. from store285.xyz.com,60020,1276629468460; 1 of 3
2010-06-17 10:30:20,001 INFO org.apache.hadoop.hbase.master.RegionServerOperation: test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. open on store285.xyz.com,60020,1276629468460
2010-06-17 10:30:20,006 INFO org.apache.hadoop.hbase.master.RegionServerOperation: Updated row test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. in region .META.,,1 with startcode=1276629468460, server=store285.xyz.com:60020
2010-06-17 10:30:20,009 DEBUG org.apache.hadoop.hbase.master.BaseScanner: Current assignment of test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. is not valid;  serverAddress=store286.xyz.com:60020, startCode=1276629467680 unknown.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point BaseScanner calls &quot;this.master.getRegionManager().setUnassigned(info, true)&quot; to set the region to be unassigned (even though it is assigned to store285). And later, this region is given to another region server (store287).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2010-06-17 10:30:20,581 INFO org.apache.hadoop.hbase.master.RegionManager: Assigning region test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. to store287.xyz.com,60020,1276629468678
2010-06-17 10:30:25,525 INFO org.apache.hadoop.hbase.master.ServerManager: Processing MSG_REPORT_OPEN: test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. from store287.xyz.com,60020,1276629468678; 6 of 6
2010-06-17 10:30:25,531 INFO org.apache.hadoop.hbase.master.RegionServerOperation: test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. open on store287.xyz.com,60020,1276629468678
2010-06-17 10:30:25,534 INFO org.apache.hadoop.hbase.master.RegionServerOperation: Updated row test1,9301760000,1276657884012.acff724037d739bab9af61e3edef0cc9. in region .META.,,1 with startcode=1276629468678, server=store287.xyz.com:60020
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</description>
                <environment></environment>
        <key id="12467417">HBASE-2755</key>
            <summary>Duplicate assignment of a region after region server recovery</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="streamy">Jonathan Gray</assignee>
                                    <reporter username="kannanm">Kannan Muthukkaruppan</reporter>
                        <labels>
                    </labels>
                <created>Sat, 19 Jun 2010 21:29:41 +0000</created>
                <updated>Tue, 22 Mar 2011 01:34:09 +0000</updated>
                            <resolved>Fri, 30 Jul 2010 05:02:54 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12880573" author="kannanm" created="Sun, 20 Jun 2010 00:04:09 +0000"  >&lt;p&gt;The race condition is as follows:&lt;/p&gt;

&lt;p&gt;ProcessRegionOpen (in Master) thread: In process()&lt;/p&gt;

&lt;p&gt;Note: This is invoked on the master when a Region Server sends a&lt;br/&gt;
message to the master indicating it has successfully opened a region.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
#a. Updates META to put newly-available region&apos;s location
#b. &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt;(master.getRegionManager()) {
      remove region from regionsInTransition list.
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;BaseScanner Thread: In checkAssigned():&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
#c. Gets/reads regions current info from META (potentially stale).
    The info is stored in serverName (which the hostname/port/startcode).

#d. &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt;(master.getRegionManager()) {

      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (regionIsInTransition() ||
          regionIsFromDeadServer(serverName)) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;; &amp;lt;--- we don&apos;t come here...
      }

      storedInfo = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.getServerManager().getServerInfo(serverName);

      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (storedInfo == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        Log(&lt;span class=&quot;code-quote&quot;&gt;&quot;Current assignment of &amp;lt;region&amp;gt; is not valid&quot;&lt;/span&gt;);
        set region to unassigned;
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So if sequence of events is #c, #a, #b, #d then we will end up with this&lt;br/&gt;
double assignment condition.&lt;/p&gt;

&lt;p&gt;In #d, we don&apos;t early exit via the &quot;return&quot; in the first if check because the&lt;br/&gt;
region has already been removed from the regionsInTransition list during&lt;br/&gt;
step #b, and also the serverName (corresponding to the crashed region&lt;br/&gt;
server) has also been removed from the dead servers map much&lt;br/&gt;
earlier (@ 10:29:51,317).&lt;/p&gt;</comment>
                            <comment id="12880977" author="stack" created="Tue, 22 Jun 2010 00:35:53 +0000"  >&lt;p&gt;Its as though we should update meta while the &apos;synchronized(master.getRegionManager()) {&apos; is held... same for reading (This is probably liable to deadlock though).&lt;/p&gt;</comment>
                            <comment id="12881835" author="stack" created="Wed, 23 Jun 2010 19:13:46 +0000"  >&lt;p&gt;@Jon and Karthik, you fellas consious of this one?  The &apos;regions-in-transition&apos; effectively has moved to zk in your new master code.  How you going to prevent the above happening in your code base?  (In current code base, the update of meta must be done under lock on master.regionManager).  &lt;/p&gt;</comment>
                            <comment id="12881836" author="stack" created="Wed, 23 Jun 2010 19:15:09 +0000"  >&lt;p&gt;Assigning Jon to take a look..&lt;/p&gt;</comment>
                            <comment id="12882040" author="streamy" created="Thu, 24 Jun 2010 04:55:50 +0000"  >&lt;p&gt;Yeah we had a conversation about this offline.  ZK-based transitions should definitely cover this.  We went through the specific scenario.  Patches on that stuff coming soon.&lt;/p&gt;</comment>
                            <comment id="12893444" author="jdcryans" created="Thu, 29 Jul 2010 00:25:47 +0000"  >&lt;p&gt;Running 0.89.20100726, I hit that bug just when I started my little 8 nodes cluster (that uses a 5 nodes ZK ensemble hosted elsewhere) that has about 550 regions. When I disabled my table, 2 regions were left assigned (because they were already double assigned). One thing special about my configuration is that base scanner scans every 30 seconds instead of 60. Here&apos;s the evidence that it took the master a long time to even assign the region after figuring it was unassigned:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2010-07-28 15:05:18,585 DEBUG org.apache.hadoop.hbase.master.BaseScanner: Current assignment of TestTable,0030543447,1277496465702.4f30002dbe81eeb4c0a11892f4af8033. is not valid;  
serverAddress=sv2borg172:60020, startCode=1277492567399 unknown.
2010-07-28 15:05:18,586 DEBUG org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper: Creating UNASSIGNED region 4f30002dbe81eeb4c0a11892f4af8033 in state = M2ZK_REGION_OFFLINE
2010-07-28 15:05:18,588 DEBUG org.apache.hadoop.hbase.master.HMaster: Event NodeCreated with state SyncConnected with path /hbase-master/UNASSIGNED/4f30002dbe81eeb4c0a11892f4af8033
2010-07-28 15:05:18,588 DEBUG org.apache.hadoop.hbase.master.ZKMasterAddressWatcher: Got event NodeCreated with path /hbase-master/UNASSIGNED/4f30002dbe81eeb4c0a11892f4af8033
2010-07-28 15:05:18,588 DEBUG org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper: &amp;lt;sv2borg169,sv2borg167,sv2borg166,sv2borg165,sv2borg164:/hbase-
master,org.apache.hadoop.hbase.master.HMaster&amp;gt;Created ZNode /hbase-master/UNASSIGNED/4f30002dbe81eeb4c0a11892f4af8033 in ZooKeeper
2010-07-28 15:05:18,588 DEBUG org.apache.hadoop.hbase.master.ZKUnassignedWatcher: ZK-EVENT-PROCESS: Got zkEvent NodeCreated state:SyncConnected path:/hbase-
master/UNASSIGNED/4f30002dbe81eeb4c0a11892f4af8033
2010-07-28 15:05:18,590 DEBUG org.apache.hadoop.hbase.master.RegionManager: Created/updated UNASSIGNED zNode TestTable,0030543447,1277496465702.4f30002dbe81eeb4c0a11892f4af8033.
 in state M2ZK_REGION_OFFLINE
2010-07-28 15:05:18,590 DEBUG org.apache.hadoop.hbase.master.ZKUnassignedWatcher: Got event type [ M2ZK_REGION_OFFLINE ] for region 4f30002dbe81eeb4c0a11892f4af8033
2010-07-28 15:05:44,314 INFO org.apache.hadoop.hbase.master.RegionManager: Assigning region TestTable,0030543447,1277496465702.4f30002dbe81eeb4c0a11892f4af8033. to 
sv2borg173,60020,1280354711806
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that, the actual updating of .META. happened almost as the same time when the BaseScanner was looking at that row and double assignment happened. This issue was always there, but it looks like assigning regions takes a lot longer than before (I&apos;ve ran a lot of cluster with the base scanner scanning every 5 seconds in the past). I would guess that this is because of the new ZK calls, which are done synchronously at the moment.&lt;/p&gt;

&lt;p&gt;I expect that anyone running with the default 60 seconds sleep but with 2-3x the number of regions will get double assignment too.&lt;/p&gt;</comment>
                            <comment id="12893451" author="jdcryans" created="Thu, 29 Jul 2010 00:44:45 +0000"  >&lt;p&gt;I&apos;m thinking that checkAssigned should check if the region is in transition before anything else. Something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  
    &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.getRegionManager()) {
      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; wasInTransition = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.getRegionManager().
        regionIsInTransition(info.getRegionNameAsString());
    }
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; serverName = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; sa = hostnameAndPort;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; sc = startCode;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (sa == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || sa.length() &amp;lt;= 0) {
      &lt;span class=&quot;code-comment&quot;&gt;// Scans are sloppy.  They cache a row internally so may have data that
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// is a little stale.  Make sure that &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; sure &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; serverAddress is &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;.
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// We are trying to avoid &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt;-assignments.  See hbase-1784.
&lt;/span&gt;      Get g = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(info.getRegionName());
      g.addFamily(HConstants.CATALOG_FAMILY);
      Result r = regionServer.get(meta.getRegionName(), g);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (r != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !r.isEmpty()) {
        sa = getServerAddress(r);
        sc = getStartCode(r);
      }
    }
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (sa != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; sa.length() &amp;gt; 0) {
      serverName = HServerInfo.getServerName(sa, sc);
    }
    HServerInfo storedInfo = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.getRegionManager()) {
      /* We don&apos;t assign regions that are offline, in transition or were on
       * a dead server. Regions that were on a dead server will get reassigned
       * by ProcessServerShutdown
       */
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (info.isOffline() || wasInTransition ||
          (serverName != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.getServerManager().isDead(serverName))) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
      }
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (serverName != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        storedInfo = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.getServerManager().getServerInfo(serverName);
      }

      &lt;span class=&quot;code-comment&quot;&gt;// If we can&apos;t find the HServerInfo, then add it to the list of
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;//  unassigned regions.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (storedInfo == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        &lt;span class=&quot;code-comment&quot;&gt;// The current assignment is invalid
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
          LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Current assignment of &quot;&lt;/span&gt; + info.getRegionNameAsString() +
            &lt;span class=&quot;code-quote&quot;&gt;&quot; is not valid; &quot;&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot; serverAddress=&quot;&lt;/span&gt; + sa +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;, startCode=&quot;&lt;/span&gt; + sc + &lt;span class=&quot;code-quote&quot;&gt;&quot; unknown.&quot;&lt;/span&gt;);
        }
        &lt;span class=&quot;code-comment&quot;&gt;// Now get the region assigned
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.getRegionManager().setUnassigned(info, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You could even log if the value was different.&lt;/p&gt;</comment>
                            <comment id="12893486" author="kannanm" created="Thu, 29 Jul 2010 03:22:16 +0000"  >&lt;p&gt;Was looking at your proposal. What about this scenario?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
#1) Say RS1/TS1 hosting R died.
#2) META still has RS1/TS1 listed &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; R.
#3) Master: detects crash, asks RS2 to open R. Puts R in regionsInTransition. Removes RS1/TS1 from deadServers map.
#4) RS2 reports back that region has been opened.
#5) BaseScanner: Say, BaseScanner kicks off a scan of META
#6) Master: RS2 reports back to master than region has been opened, and Master:ProcessRegionOpen() 
    a) updates META with RS2/TS2 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; R.
    b) And removes the region from regionsInTransition.
#7) BaseScanner: invokes checkAssigned(R). This will get passed RS1/TS1 since scan started before META was upda
#8) (With the proposed change) wasInTransition will still be &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; (because of #6b).
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So it will still go ahead and assign the region to a new RS. Correct?&lt;/p&gt;</comment>
                            <comment id="12893502" author="kannanm" created="Thu, 29 Jul 2010 04:35:43 +0000"  >&lt;p&gt;Posted a plausible patch here. &lt;/p&gt;


&lt;p&gt;Haven&apos;t uploaded formally into the JIRA, since I haven&apos;t actually test the code yet.&lt;/p&gt;


</comment>
                            <comment id="12893503" author="kannanm" created="Thu, 29 Jul 2010 04:36:29 +0000"  >&lt;p&gt;Oops. Forgot to add the link:&lt;br/&gt;
&lt;a href=&quot;http://pastebin.com/raw.php?i=MgY8CUBw&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pastebin.com/raw.php?i=MgY8CUBw&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12893507" author="stack" created="Thu, 29 Jul 2010 05:11:29 +0000"  >&lt;p&gt;Here&apos;s a version of Kannan&apos;s patch that applies to TRUNK.  I just tried it a few times and seems to work w/ small table (10M rows &amp;#8211; 65 regions) doing a few retarts and a disable/enable?  Let me make a bigger table and test.&lt;/p&gt;

&lt;p&gt;J-D, you can sink the RC now that it looks like between Kannan and you we have a fix that will hold us over till Jon master big patch shows its face (smile)&lt;/p&gt;</comment>
                            <comment id="12893740" author="jdcryans" created="Thu, 29 Jul 2010 17:57:44 +0000"  >&lt;p&gt;Kannan&apos;s patch fixes the issue for me, and I also tested with a smaller base scanner sleep and twice as many regions.&lt;/p&gt;

&lt;p&gt;Assignment seems a lot slower tho.&lt;/p&gt;</comment>
                            <comment id="12893781" author="kannanm" created="Thu, 29 Jul 2010 19:10:41 +0000"  >&lt;p&gt;FYI. I got one unit test diff in my run yesterday with the patch.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-------------------------------------------------------------------------------
Test set: org.apache.hadoop.hbase.regionserver.wal.TestLogRolling
-------------------------------------------------------------------------------
Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 61.669 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
testLogRollOnDatanodeDeath(org.apache.hadoop.hbase.regionserver.wal.TestLogRolling)  Time elapsed: 1.226 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
org.apache.hadoop.hbase.TableExistsException: org.apache.hadoop.hbase.TableExistsException: TestLogRolling
        at org.apache.hadoop.hbase.master.HMaster.createTable(HMaster.java:828)
        at org.apache.hadoop.hbase.master.HMaster.createTable(HMaster.java:792)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I still need to see if it is related to the patch, or if the above is an unrelated intermittent issue. &lt;/p&gt;

&lt;p&gt;----------&lt;/p&gt;

&lt;p&gt;With regards to assignment being a &quot;lot&quot; slower... we are doing one extra META get on assignment.&lt;br/&gt;
Not sure why that should make it a &lt;b&gt;lot&lt;/b&gt; slower. But (re)assignments are fairly uncommon in a running system;&lt;br/&gt;
so this shouldn&apos;t hurt the normal codepaths at all.&lt;/p&gt;



</comment>
                            <comment id="12893821" author="kannanm" created="Thu, 29 Jul 2010 21:06:51 +0000"  >&lt;p&gt;The TestHLogRolling diff is unrelated. It is happening in my env&lt;br/&gt;
even  without the patch. I think it is safe to ignore that as far as &lt;br/&gt;
this JIRA is concerned.&lt;/p&gt;</comment>
                            <comment id="12893822" author="jdcryans" created="Thu, 29 Jul 2010 21:09:02 +0000"  >&lt;p&gt;You&apos;re not hallucinating butterflies, hudson saw it too &lt;a href=&quot;http://hudson.zones.apache.org/hudson/job/HBase-TRUNK/1411/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hudson.zones.apache.org/hudson/job/HBase-TRUNK/1411/testReport/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12893930" author="stack" created="Fri, 30 Jul 2010 04:56:33 +0000"  >&lt;p&gt;I&apos;ve tested start/stop and disable/enable (though it never really works &amp;#8211; enable sort of does) and patch works for me.  Going to commit.  Will roll new RC.&lt;/p&gt;</comment>
                            <comment id="12893932" author="jdcryans" created="Fri, 30 Jul 2010 04:58:30 +0000"  >&lt;p&gt;+1.&lt;/p&gt;</comment>
                            <comment id="12893934" author="stack" created="Fri, 30 Jul 2010 05:02:53 +0000"  >&lt;p&gt;Committed to 0.89.20100726 and TRUNK.  Thanks for patch Kannan.  Thanks for review and testing J-D.&lt;/p&gt;</comment>
                            <comment id="13009505" author="stack" created="Tue, 22 Mar 2011 01:34:09 +0000"  >&lt;p&gt;This was applied a while back.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12450793" name="bs.txt" size="3076" author="stack" created="Thu, 29 Jul 2010 05:11:29 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 22 Jun 2010 00:35:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26447</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 39 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hj33:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100354</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>