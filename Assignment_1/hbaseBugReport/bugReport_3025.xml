<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:06:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3025/HBASE-3025.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3025] Coprocessor based simple access control</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3025</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Thanks for the clarification Jeff which reminds me to edit this issue.&lt;/p&gt;

&lt;p&gt;Goals of this issue&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Client access to HBase is authenticated&lt;/li&gt;
	&lt;li&gt;User data is private unless access has been granted&lt;/li&gt;
	&lt;li&gt;Access to data can be granted at a table or per column family basis.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Non-Goals of this issue&lt;/p&gt;

&lt;p&gt;The following items will be left out of the initial implementation for simplicity:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Row-level or per value (cell) This would require broader changes for storing the ACLs inline with rows. It&apos;s still a future goal, but would slow down the initial implementation considerably.&lt;/li&gt;
	&lt;li&gt;Push down of file ownership to HDFS While table ownership seems like a useful construct to start with (at least to lay the groundwork for future changes), making HBase act as table owners when interacting with HDFS would require more changes. In additional, while HDFS file ownership would make applying quotas easy, and possibly make bulk imports more straightforward, it&apos;s not clean it would offer a more secure setup. We&apos;ll leave this to evaluate in a later phase.&lt;/li&gt;
	&lt;li&gt;HBase managed &quot;roles&quot; as collections of permissions We will not model &quot;roles&quot; internally in HBase to begin with. We will instead allow group names to be granted permissions, which will allow some external modeling of roles via group memberships. Groups will be created and manipulated externally to HBase.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;While the assignment of permissions to roles and roles to users (or other roles) allows a great deal of flexibility in security policy, it would add complexity to the initial implementation. &lt;/p&gt;

&lt;p&gt;After the initial implementation, which will appear on this issue, we will evaluate the addition of role definitions internal to HBase in a new JIRA. In this scheme, administrators could assign permissions specifying HDFS groups, and additionally HBase roles. HBase roles would be created and manipulated internally to HBase, and would appear distinct from HDFS groups via some syntactic sugar. HBase role definitions will be allowed to reference other HBase role definitions. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12474775">HBASE-3025</key>
            <summary>Coprocessor based simple access control</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12431322">HBASE-1697</parent>
                                    <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Sep 2010 00:03:41 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:21 +0000</updated>
                            <resolved>Sat, 19 Nov 2011 00:32:31 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>25</watches>
                                                                <comments>
                            <comment id="12913705" author="ekoontz" created="Wed, 22 Sep 2010 18:31:54 +0000"  >&lt;p&gt;removed &apos;blocks&apos;; seems to strong - but at least it&apos;s related to hbase-1697.&lt;/p&gt;</comment>
                            <comment id="12913707" author="ekoontz" created="Wed, 22 Sep 2010 18:32:39 +0000"  >&lt;p&gt;s/to strong/too strong/&lt;/p&gt;</comment>
                            <comment id="12915678" author="hammer" created="Tue, 28 Sep 2010 09:18:38 +0000"  >&lt;p&gt;For those who don&apos;t know, RBAC stands for &quot;Role-Based Access Control&quot;&lt;/p&gt;</comment>
                            <comment id="12915893" author="apurtell" created="Tue, 28 Sep 2010 19:39:23 +0000"  >&lt;p&gt;Update terminology as suggested by comments on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3045&quot; title=&quot;Extend HBASE-3025 into a role based access control model using &amp;quot;HBase groups&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3045&quot;&gt;&lt;del&gt;HBASE-3045&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12916817" author="apurtell" created="Fri, 1 Oct 2010 07:54:54 +0000"  >&lt;p&gt;Attached is a first cut at a coprocessor based access controller. It requires the patches pending for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt;, and has additional dependency on secure Hadoop classes. Therefore we expect this to be developed in a feature branch until HBase compilation and operation on secure vs. nonsecure Hadoop flavors can be made seamless.&lt;/p&gt;

&lt;p&gt;Package documentation will be forthcoming.&lt;/p&gt;

&lt;p&gt;This access controller coprocessor should be associated with all tables as a system extension. (These are coprocessors listed in hbase-site.xml and loaded into the regionserver at an early time. See package docs in the patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt; for more information pertaining to coprocessors specifically.) &lt;/p&gt;

&lt;p&gt;Permissions for user tables are stored in a new &lt;tt&gt;acl:&lt;/tt&gt; family in META. The access controller is active on META and user tables. When active on META, the access controller mirrors the contents of this family into a znode tree in zookeeper and updates the mirrored permissions information when values in &lt;tt&gt;acl:&lt;/tt&gt; are added, changed, or deleted. When active on user tables, the access controller reads the permissions for its table from the appropriate znode, caches them, and sets a watch on the znode, updating the local cache whenever the znode data changes. The &lt;tt&gt;acl:&lt;/tt&gt; family in META serves as persistent storage for access policy and as the canonical interface for defining access permissions. ZooKeeper serves to immediately and atomically propagate policy changes into the local permissions caches of all nodes in the cluster. For the typical user operation neither META nor ZooKeeper need be consulted when determining if a user has sufficient access privilege; up to date information will be found in the local cache. &lt;/p&gt;

&lt;p&gt;A new shell command, &lt;tt&gt;grant&lt;/tt&gt;, is added to support granting or revoking specific rights to tables. This is accomplished by puts or deletes into the new &lt;tt&gt;acl:&lt;/tt&gt; family in META. &lt;/p&gt;

&lt;p&gt;When tables are created the current (creating) user is given ownership of it. A table owner has full access to the table and can grant additional access. Ownership is tracked using an attribute of HTableDescriptor. Therefore currently a table must be disabled and modified to change ownership. &lt;/p&gt;

&lt;p&gt;This patch also contains a small modification to HMaster that introduces the concept of &lt;em&gt;superuser&lt;/em&gt;, a specially privileged principal defined via configuration variable, or by default the principal under which the Master or RegionServer processes are running. (Currently, for proper functioning of the cluster, the superuser must be the principal under which the processes are running.) Only the superuser can modify a table descriptor. This prevents a user from arbitrarily reassigning ownership and therefore bypassing access control. We may keep the superuser concept or replace it with an explicit ALTER permission. Perhaps even only the superuser should be allowed to enable and disable tables, though this patch does not at present prevent any user from taking those actions. &lt;/p&gt;</comment>
                            <comment id="12916818" author="apurtell" created="Fri, 1 Oct 2010 08:02:14 +0000"  >&lt;p&gt;Regarding the Master, more work needs to be done to disallow a user from taking administrative actions on other user&apos;s tables, such as enable/disable/drop. We only made one modification to the Master as a suggestion for one design option. With coprocessors its easy to encapsulate access control related changes to regionserver function. However, the coprocessor framework is a regionserver only feature. We don&apos;t as of yet have a similar extension framework for the Master. Therefore we need to consider one, or follow through with defining a concept of ownership and restrictions on administrative actions that can be taken by owners vs non-owners.&lt;/p&gt;</comment>
                            <comment id="12916825" author="apurtell" created="Fri, 1 Oct 2010 08:27:17 +0000"  >&lt;p&gt;Regarding ZooKeeper, access is not controlled currently in a HBase installation. We are considering developing a Kerberos auth plugin for ZooKeeper, at which point ACLs can be set on znodes containing table permissions to prevent unprivileged users from subverting access control.&lt;/p&gt;</comment>
                            <comment id="12988972" author="egogames" created="Tue, 1 Feb 2011 00:23:07 +0000"  >&lt;p&gt;Do the current implementation support other types of securities such as Public/Private Key, RSA, Authorization, Session, Communication, Certification, and Data Integrity?&lt;/p&gt;

&lt;p&gt;Or, is it true that once the client entered his access password, he gains access to all the data that he is permitted to read/write.&lt;/p&gt;</comment>
                            <comment id="12989333" author="ghelmling" created="Tue, 1 Feb 2011 19:01:19 +0000"  >&lt;p&gt;Authentication is currently limited to Kerberos (v5), same as Hadoop security.  PKI (and SSL certificate) authentication is not supported.&lt;/p&gt;

&lt;p&gt;HBase RPC encryption is supported via a configuration parameter (with options for integrity or confidentiality).  RPC connections support mutual authentication of endpoints.&lt;/p&gt;

&lt;p&gt;Authorization is the core feature of this issue.  Authorization of data access and operations is performed based on access control lists configured per table or per column family.  Once the client has authenticated with a region server, the client will be able to perform read/write operations on tables/column families to which the client is granted access, as defined by the access control lists.  Attempts to read/write data which have not been allowed will throw an AccessDeniedException.&lt;/p&gt;</comment>
                            <comment id="12989430" author="ghelmling" created="Tue, 1 Feb 2011 22:42:24 +0000"  >&lt;p&gt;Updated preview patch for security features.  Incorporates proper checking of master operations by implementing MasterObserver.&lt;/p&gt;</comment>
                            <comment id="12989528" author="stack" created="Wed, 2 Feb 2011 06:11:16 +0000"  >&lt;p&gt;I was going to take a look at the patch then saw its 300k.  Will be back later after the popcorn is done (smile).  Good on you Gary.&lt;/p&gt;</comment>
                            <comment id="12989529" author="stack" created="Wed, 2 Feb 2011 06:11:52 +0000"  >&lt;p&gt;I was going to take a look at the patch then saw its 300k.  Will be back later after the popcorn is done (smile).  Good on you Gary.&lt;/p&gt;</comment>
                            <comment id="12990308" author="egogames" created="Thu, 3 Feb 2011 21:14:12 +0000"  >&lt;p&gt;Hi Gary,&lt;/p&gt;

&lt;p&gt;Thanks for your quick reply.&lt;br/&gt;
One more question, do you know anyone implementing auditing log for HBase security?&lt;br/&gt;
Seems the Hadoop security has already implemented such feature.&lt;/p&gt;</comment>
                            <comment id="12990310" author="egogames" created="Thu, 3 Feb 2011 21:17:19 +0000"  >&lt;p&gt;Hi Gary,&lt;/p&gt;

&lt;p&gt;Forgot to ask this other question:&lt;br/&gt;
Can both user and program gain access to data in the current access control implementation?&lt;/p&gt;</comment>
                            <comment id="12990336" author="ghelmling" created="Thu, 3 Feb 2011 22:13:05 +0000"  >&lt;p&gt;@Joey,&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2014&quot; title=&quot;[DAC] Audit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2014&quot;&gt;HBASE-2014&lt;/a&gt; for audit logging.  It is not yet implemented, but we will be getting to it in the near future.&lt;/p&gt;</comment>
                            <comment id="13005379" author="apurtell" created="Thu, 10 Mar 2011 22:56:12 +0000"  >&lt;p&gt;Bringing into 0.92.&lt;/p&gt;</comment>
                            <comment id="13047578" author="stack" created="Fri, 10 Jun 2011 22:45:55 +0000"  >&lt;p&gt;Moving out of 0.92.0. Pull it back in if you think different.&lt;/p&gt;</comment>
                            <comment id="13105912" author="timosa" created="Fri, 16 Sep 2011 06:59:16 +0000"  >&lt;p&gt;What are the plans and schedule related to this feature? Will it be included in 0.92?&lt;/p&gt;</comment>
                            <comment id="13106643" author="apurtell" created="Fri, 16 Sep 2011 18:06:46 +0000"  >&lt;p&gt;This feature has three dependencies:&lt;/p&gt;

&lt;p&gt;1) Coprocessor framework &amp;#8211; In HBase 0.92&lt;/p&gt;

&lt;p&gt;2) Secure RPC engine &amp;#8211; Because we don&apos;t pass the user in current HBase RPC requests, not in HBase 0.92 (yet)&lt;/p&gt;

&lt;p&gt;3) Secure ZooKeeper - Integrated in ZooKeeper trunk as &lt;a href=&quot;https://issues.apache.org/jira/browse/ZOOKEEPER-938&quot; title=&quot;Support Kerberos authentication of clients.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ZOOKEEPER-938&quot;&gt;&lt;del&gt;ZOOKEEPER-938&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If all the dependencies are available, this feature can be made available with a simple patch.&lt;/p&gt;</comment>
                            <comment id="13113604" author="toffer" created="Fri, 23 Sep 2011 17:48:30 +0000"  >&lt;p&gt;Hi, With this access control scheme, what is the recommended way of doing bulk imports? We are looking to have a secured version of hbase on our shared clusters and bulk import will be largely the method data will be fed into hbase.&lt;/p&gt;
</comment>
                            <comment id="13113670" author="jiraposter@reviews.apache.org" created="Fri, 23 Sep 2011 19:15:26 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;

&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;AccessController -&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/li&gt;
	&lt;li&gt;implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlLists.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControllerProtocol.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/rbac/Permission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/rbac/TablePermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/rbac/UserPermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/rbac/SecureTestUtil.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessController.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestTablePermissions.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestZKPermissionsWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 46a1a3d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 699a5f5 &lt;br/&gt;
  src/main/resources/hbase-default.xml 2c8f44b &lt;br/&gt;
  src/main/ruby/hbase.rb 4d27191 &lt;br/&gt;
  src/main/ruby/hbase/admin.rb b244ffe &lt;br/&gt;
  src/main/ruby/hbase/hbase.rb beb2450 &lt;br/&gt;
  src/main/ruby/hbase/security.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell.rb 9a47600 &lt;br/&gt;
  src/main/ruby/shell/commands.rb a352c2e &lt;br/&gt;
  src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/table_permission.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 4d7ee22 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;
</comment>
                            <comment id="13115708" author="jiraposter@reviews.apache.org" created="Tue, 27 Sep 2011 16:59:45 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review2077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review2077&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Looks good. The majority of my comments have to do with inconsistent logging practice.&lt;/p&gt;


&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlFilter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4718&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4718&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Could be stated better.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4719&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4719&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    No.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4720&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4720&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Comment needs updating.&lt;/p&gt;




&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4721&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4721&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can we make this 1?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4775&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4775&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Debug logging should go to LOG not AUDITLOG&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4782&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4782&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be INFO or TRACE level? TRACE makes more sense to me.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4776&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4776&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Debug logging should go to LOG not AUDITLOG&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4779&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4779&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be INFO or TRACE level? TRACE makes more sense to me.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4795&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4795&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should something go to AUDITLOG here?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4797&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4797&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should hasFamilyQualifierPermission log to AUDITLOG? It is used in places to make decisions &amp;#8211; an exception is thrown directly or not.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4783&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4783&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Another one of these was sent to AUDITLOG above. Do the same here? Should be INFO or TRACE level? TRACE makes more sense to me.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4786&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4786&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Ultimately users should be allowed to enable or disable their own tables, but only after such operations don&apos;t carry as much systemic risk as they do currently.&lt;/p&gt;

&lt;p&gt;    In that case, CREATE permission and an ownership check could follow the test for ADMIN permission.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4787&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4787&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    As above&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4791&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4791&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be logged with ERROR?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4799&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Would it be clearer then to call permissionGranted() something like hasColumnsPermission() ? Just a random thought.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4803&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4803&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should this go to AUDITLOG? At INFO or TRACE level? My preference is TRACE.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4804&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4804&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should this go to AUDITLOG? At INFO or TRACE level? My preference is TRACE.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/Permission.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4807&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What if instead we check for version 0 and throw an IllegalArgumentException if so? Technically, it is an invalid request if it contains an unrecognizable action code. Skipping this check if version &amp;gt; 0 would be a way to handle new perms while not accepting incorrect input otherwise.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4813&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4813&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Maybe we can call this &quot;.auth.&quot;? We don&apos;t really have an RBAC implementation yet. Likewise for the package name for all of this stuff? Just a random thought.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4815&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4815&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Isn&apos;t this an error?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4816&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4816&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be at DEBUG level&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4814&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4814&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I wonder if there is some way we can check if a secure variant of ZooKeeper is running, and refuse to initialize if not.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4823&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4823&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Shouldn&apos;t we propagate ZK exceptions upward? or at least convert them to IOE and throw those? Otherwise the permission cache is silently at risk of being out of sync with the ACL table.&lt;/p&gt;

&lt;p&gt;    The safest thing to do is force a region close by bubbling up an exception from the coprocessor. This assumes that the coprocessor framework or regionserver will trigger a region close if it receives an unhandled exception from coprocessor code, and that this won&apos;t down the whole regionserver.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4825&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4825&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    As above&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4826&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4826&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    As above&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4827&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4827&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    As above&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment4829&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment4829&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes I agree this makes sense here, for convenience in setting ownership through the existing alter functionality.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-09-23 19:14:20, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-23 19:14:20)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 46a1a3d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 699a5f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb b244ffe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/table_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 4d7ee22 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13115868" author="jiraposter@reviews.apache.org" created="Tue, 27 Sep 2011 20:07:45 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 98&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line98&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line98&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can we make this 1?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sure&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 192&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Debug logging should go to LOG not AUDITLOG&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The idea was that all authorization decisions should be separated into audit log.  Here we&apos;re allowing access, so AUDITLOG seemed to make sense.  I agree that this still needs to be cleaned up a lot.  Maybe all audit logging should be done up in requirePermission() with authorization result?  At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 200&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line200&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line200&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should be INFO or TRACE level? TRACE makes more sense to me.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, can use trace for all audit log decisions.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 208&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line208&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line208&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Debug logging should go to LOG not AUDITLOG&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is an authorization decision since we&apos;re returning true below.  We can make this trace level, and improve the format, but I think AUDITLOG (if enabled) should contain a single message per request on why the request was allowed or denied.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 274&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line274&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line274&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should be INFO or TRACE level? TRACE makes more sense to me.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;will change to trace.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 354&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line354&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line354&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should something go to AUDITLOG here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Failure should already have been recorded in AUDITLOG via logDenied().  Agree that moving AUDITLOG messages up here with consistent format would be clearer, but will require some restructuring of return value from permissionGranted() so that some context specific reason can be pulled back up for logging.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 366&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line366&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line366&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should hasFamilyQualifierPermission log to AUDITLOG? It is used in places to make decisions &amp;#8211; an exception is thrown directly or not.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, agree, we should either log to AUDITLOG at decision points here or consistently move the AUDITLOG logging up a level out of permissionGranted() and hasFamilyQualifierPermission().&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 375&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line375&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line375&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Another one of these was sent to AUDITLOG above. Do the same here? Should be INFO or TRACE level? TRACE makes more sense to me.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agree, should go to AUDITLOG at trace.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 590&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line590&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line590&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should be logged with ERROR?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sure&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 856&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line856&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should this go to AUDITLOG? At INFO or TRACE level? My preference is TRACE.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, agree.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/Permission.java, line 174&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45406#file45406line174&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45406#file45406line174&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What if instead we check for version 0 and throw an IllegalArgumentException if so? Technically, it is an invalid request if it contains an unrecognizable action code. Skipping this check if version &amp;gt; 0 would be a way to handle new perms while not accepting incorrect input otherwise.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, seems safer to throw an exception here than to ignore invalid input.  What about throwing an IOException (to tie in to existing error handling)?&lt;/p&gt;

&lt;p&gt;We could potentially trap the VersionMismatchException from VersionedWritable to allow skip and continue when reading newer versions of Permission with potentially added Action codes.  Would need to think about what kind of errors that would expose us to.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java, line 47&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line47&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line47&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Maybe we can call this &quot;.auth.&quot;? We don&apos;t really have an RBAC implementation yet. Likewise for the package name for all of this stuff? Just a random thought.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah &quot;rbac&quot; here and in package name is a misnomer.  How about using &quot;access&quot; instead?  &quot;auth&quot; seems ambiguous to me as it could mean &quot;authentication&quot; or &quot;authorization&quot;.  JDK uses &quot;auth&quot; in javax.security.auth and claims it&apos;s for both, but seems like that and sub-packages are more &quot;authentication&quot; related to me.  Hadoop uses &quot;authorize&quot; for a similar package to this.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Isn&apos;t this an error?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, and in this context a pretty bad one, as it probably means region server initiated RPCs won&apos;t work or will be denied.  We should probably let the IOE escape here...&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java, line 59&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line59&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line59&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I wonder if there is some way we can check if a secure variant of ZooKeeper is running, and refuse to initialize if not.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;My thinking has been to handle all secure ZooKeeper changes separately.  So I&apos;d prefer to handle any check here as part of that.&lt;/p&gt;

&lt;p&gt;I do think it&apos;s reasonable to run AccessController with only SIMPLE auth and no secure ZooKeeper.  It&apos;s not secure but could still be useful (we currently use this setup for tests).&lt;/p&gt;

&lt;p&gt;We could complain loudly to give an indication that you have a security hole though.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java, line 77&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line77&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line77&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Shouldn&apos;t we propagate ZK exceptions upward? or at least convert them to IOE and throw those? Otherwise the permission cache is silently at risk of being out of sync with the ACL table.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     The safest thing to do is force a region close by bubbling up an exception from the coprocessor. This assumes that the coprocessor framework or regionserver will trigger a region close if it receives an unhandled exception from coprocessor code, and that this won&apos;t down the whole regionserver.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, shouldn&apos;t just be swallowing this.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review2077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review2077&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-23 19:14:20, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-23 19:14:20)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 46a1a3d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 699a5f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb b244ffe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/table_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 4d7ee22 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13115869" author="jiraposter@reviews.apache.org" created="Tue, 27 Sep 2011 20:09:45 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Looks good. The majority of my comments have to do with inconsistent logging practice.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for the review.  I&apos;ll post an update with some cleanups and some reworking of the AUDITLOG handling.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review2077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review2077&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-23 19:14:20, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-23 19:14:20)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 46a1a3d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 699a5f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb b244ffe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/table_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 4d7ee22 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13115897" author="jiraposter@reviews.apache.org" created="Tue, 27 Sep 2011 20:38:45 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 192&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Debug logging should go to LOG not AUDITLOG&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The idea was that all authorization decisions should be separated into audit log.  Here we&apos;re allowing access, so AUDITLOG seemed to make sense.  I agree that this still needs to be cleaned up a lot.  Maybe all audit logging should be done up in requirePermission() with authorization result?  At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe all audit logging should be done up in requirePermission() with authorization result?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d argue for TRACE&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java, line 47&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line47&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line47&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Maybe we can call this &quot;.auth.&quot;? We don&apos;t really have an RBAC implementation yet. Likewise for the package name for all of this stuff? Just a random thought.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yeah &quot;rbac&quot; here and in package name is a misnomer.  How about using &quot;access&quot; instead?  &quot;auth&quot; seems ambiguous to me as it could mean &quot;authentication&quot; or &quot;authorization&quot;.  JDK uses &quot;auth&quot; in javax.security.auth and claims it&apos;s for both, but seems like that and sub-packages are more &quot;authentication&quot; related to me.  Hadoop uses &quot;authorize&quot; for a similar package to this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&quot;access&quot; sounds good to me.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Isn&apos;t this an error?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yes, and in this context a pretty bad one, as it probably means region server initiated RPCs won&apos;t work or will be denied.  We should probably let the IOE escape here...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agree.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/Permission.java, line 174&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45406#file45406line174&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45406#file45406line174&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What if instead we check for version 0 and throw an IllegalArgumentException if so? Technically, it is an invalid request if it contains an unrecognizable action code. Skipping this check if version &amp;gt; 0 would be a way to handle new perms while not accepting incorrect input otherwise.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yeah, seems safer to throw an exception here than to ignore invalid input.  What about throwing an IOException (to tie in to existing error handling)?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;We could potentially trap the VersionMismatchException from VersionedWritable to allow skip and continue when reading newer versions of Permission with potentially added Action codes.  Would need to think about what kind of errors that would expose us to.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;What about throwing an IOException (to tie in to existing error handling)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Throwing an IOE sounds good.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We could potentially trap the VersionMismatchException from VersionedWritable to allow skip and continue when reading newer versions of Permission with potentially added Action codes. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think that is reasonable, with something logged at WARN level. The idea here is to ride over a rolling restart. Would not see long term operation with mismatching versions.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java, line 59&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line59&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line59&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I wonder if there is some way we can check if a secure variant of ZooKeeper is running, and refuse to initialize if not.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;My thinking has been to handle all secure ZooKeeper changes separately.  So I&apos;d prefer to handle any check here as part of that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I do think it&apos;s reasonable to run AccessController with only SIMPLE auth and no secure ZooKeeper.  It&apos;s not secure but could still be useful (we currently use this setup for tests).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;We could complain loudly to give an indication that you have a security hole though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;I do think it&apos;s reasonable to run AccessController with only SIMPLE auth and no secure ZooKeeper.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d argue only for test cases, and we can make provisions for tests to add an undocumented configuration property to that effect.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We could complain loudly to give an indication that you have a security hole though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Complaining loudly is good to do in any case except when unit tests want to do something.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review2077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review2077&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-23 19:14:20, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-23 19:14:20)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 46a1a3d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 699a5f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb b244ffe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/table_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 4d7ee22 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13140719" author="jiraposter@reviews.apache.org" created="Tue, 1 Nov 2011 00:19:32 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Isn&apos;t this an error?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yes, and in this context a pretty bad one, as it probably means region server initiated RPCs won&apos;t work or will be denied.  We should probably let the IOE escape here...&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Agree.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Letting the IOException from getCurrent() escape and throwing an exception if the returned user is null.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java, line 113&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line113&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45407#file45407line113&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should be at DEBUG level&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlFilter.java, line 37&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45402#file45402line37&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45402#file45402line37&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Could be stated better.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlLists.java, line 98&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45403#file45403line98&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45403#file45403line98&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Comment needs updating.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 98&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line98&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line98&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Can we make this 1?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;sure&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 192&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Debug logging should go to LOG not AUDITLOG&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The idea was that all authorization decisions should be separated into audit log.  Here we&apos;re allowing access, so AUDITLOG seemed to make sense.  I agree that this still needs to be cleaned up a lot.  Maybe all audit logging should be done up in requirePermission() with authorization result?  At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Maybe all audit logging should be done up in requirePermission() with authorization result?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Sounds good.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d argue for TRACE&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Reworked the audit logging to happen in requirePermission(), so we get a single log message per auth check indicating success or failure, with a more consistent format.  Result is logged to AUDITLOG at trace level.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 366&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line366&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line366&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should hasFamilyQualifierPermission log to AUDITLOG? It is used in places to make decisions &amp;#8211; an exception is thrown directly or not.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yes, agree, we should either log to AUDITLOG at decision points here or consistently move the AUDITLOG logging up a level out of permissionGranted() and hasFamilyQualifierPermission().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;With moving the audit logging up to requirePermission(), logging to AUDITLOG here would be redundant.  Removing the existing log message.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 375&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line375&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line375&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Another one of these was sent to AUDITLOG above. Do the same here? Should be INFO or TRACE level? TRACE makes more sense to me.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Agree, should go to AUDITLOG at trace.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Removing as redundant with the checking in permissionGranted() and AUDITLOG logging performed in requirePermission().&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 497&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line497&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line497&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Ultimately users should be allowed to enable or disable their own tables, but only after such operations don&apos;t carry as much systemic risk as they do currently.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     In that case, CREATE permission and an ownership check could follow the test for ADMIN permission.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Noted&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 590&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line590&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line590&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should be logged with ERROR?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;sure&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 832&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line832&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line832&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should this go to AUDITLOG? At INFO or TRACE level? My preference is TRACE.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 856&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line856&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line856&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should this go to AUDITLOG? At INFO or TRACE level? My preference is TRACE.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yes, agree.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java, line 77&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line77&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line77&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Shouldn&apos;t we propagate ZK exceptions upward? or at least convert them to IOE and throw those? Otherwise the permission cache is silently at risk of being out of sync with the ACL table.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     The safest thing to do is force a region close by bubbling up an exception from the coprocessor. This assumes that the coprocessor framework or regionserver will trigger a region close if it receives an unhandled exception from coprocessor code, and that this won&apos;t down the whole regionserver.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yes, shouldn&apos;t just be swallowing this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ZooKeeperListener defined methods don&apos;t throw any exceptions, so logging and aborting on KeeperExceptions here instead.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java, line 59&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line59&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45410#file45410line59&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I wonder if there is some way we can check if a secure variant of ZooKeeper is running, and refuse to initialize if not.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;My thinking has been to handle all secure ZooKeeper changes separately.  So I&apos;d prefer to handle any check here as part of that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I do think it&apos;s reasonable to run AccessController with only SIMPLE auth and no secure ZooKeeper.  It&apos;s not secure but could still be useful (we currently use this setup for tests).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;We could complain loudly to give an indication that you have a security hole though.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; I do think it&apos;s reasonable to run AccessController with only SIMPLE auth and no secure ZooKeeper.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d argue only for test cases, and we can make provisions for tests to add an undocumented configuration property to that effect.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; We could complain loudly to give an indication that you have a security hole though.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Complaining loudly is good to do in any case except when unit tests want to do something.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I will add this into a separate patch handling ZooKeeper authentication.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review2077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review2077&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-23 19:14:20, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-23 19:14:20)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/rbac/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/rbac/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 46a1a3d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 699a5f5 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 2c8f44b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb b244ffe &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/table_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java 4d7ee22 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13140723" author="jiraposter@reviews.apache.org" created="Tue, 1 Nov 2011 00:27:32 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-01 00:26:37.040678)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Updated patch addressing review comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;cleaned up audit logging of authorization decisions.  Logging now occurs in AccessController.requirePermission(), with a single audit log entry per authorization decision.&lt;/li&gt;
	&lt;li&gt;audit logging uses a more consistent format&lt;/li&gt;
	&lt;li&gt;KeeperExceptions in ZKPermissionWatcher now trigger aborts where necessary, instead of logging and dropping the exceptions.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;

&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;AccessController -&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/li&gt;
	&lt;li&gt;implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;br/&gt;
  src/main/resources/hbase-default.xml 3785533 &lt;br/&gt;
  src/main/ruby/hbase.rb 4d27191 &lt;br/&gt;
  src/main/ruby/hbase/admin.rb 61e04d8 &lt;br/&gt;
  src/main/ruby/hbase/hbase.rb beb2450 &lt;br/&gt;
  src/main/ruby/hbase/security.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell.rb 9a47600 &lt;br/&gt;
  src/main/ruby/shell/commands.rb a352c2e &lt;br/&gt;
  src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;
</comment>
                            <comment id="13140890" author="jiraposter@reviews.apache.org" created="Tue, 1 Nov 2011 03:44:32 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 192&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Debug logging should go to LOG not AUDITLOG&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The idea was that all authorization decisions should be separated into audit log.  Here we&apos;re allowing access, so AUDITLOG seemed to make sense.  I agree that this still needs to be cleaned up a lot.  Maybe all audit logging should be done up in requirePermission() with authorization result?  At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Maybe all audit logging should be done up in requirePermission() with authorization result?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Sounds good.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d argue for TRACE&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Reworked the audit logging to happen in requirePermission(), so we get a single log message per auth check indicating success or failure, with a more consistent format.  Result is logged to AUDITLOG at trace level.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is there TRACE level in our commons interface?  I believe it just maps to DEBUG?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review2077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review2077&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-01 00:26:37, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 00:26:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13140913" author="jiraposter@reviews.apache.org" created="Tue, 1 Nov 2011 04:32:32 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 192&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Debug logging should go to LOG not AUDITLOG&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The idea was that all authorization decisions should be separated into audit log.  Here we&apos;re allowing access, so AUDITLOG seemed to make sense.  I agree that this still needs to be cleaned up a lot.  Maybe all audit logging should be done up in requirePermission() with authorization result?  At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Maybe all audit logging should be done up in requirePermission() with authorization result?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Sounds good.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d argue for TRACE&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Reworked the audit logging to happen in requirePermission(), so we get a single log message per auth check indicating success or failure, with a more consistent format.  Result is logged to AUDITLOG at trace level.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Is there TRACE level in our commons interface?  I believe it just maps to DEBUG?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Commons-logging source for 1.1.1 claims that with log4j &amp;gt;= 1.2.12, trace level is supported.  Prior to that it&apos;s mapped to debug.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review2077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review2077&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-01 00:26:37, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 00:26:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13141611" author="jiraposter@reviews.apache.org" created="Tue, 1 Nov 2011 21:19:32 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-01 21:18:27.775440)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Fixed the security class package names (o.a.h.h.security.rbac -&amp;gt; o.a.h.h.security.access) in src/main/ruby/hbase/security.rb&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;

&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;AccessController -&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/li&gt;
	&lt;li&gt;implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;br/&gt;
  src/main/resources/hbase-default.xml 3785533 &lt;br/&gt;
  src/main/ruby/hbase.rb 4d27191 &lt;br/&gt;
  src/main/ruby/hbase/admin.rb 61e04d8 &lt;br/&gt;
  src/main/ruby/hbase/hbase.rb beb2450 &lt;br/&gt;
  src/main/ruby/hbase/security.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell.rb 9a47600 &lt;br/&gt;
  src/main/ruby/shell/commands.rb a352c2e &lt;br/&gt;
  src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;
</comment>
                            <comment id="13141659" author="jiraposter@reviews.apache.org" created="Tue, 1 Nov 2011 21:57:32 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-27 16:58:47, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/rbac/AccessController.java, line 192&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/1/?file=45404#file45404line192&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Debug logging should go to LOG not AUDITLOG&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The idea was that all authorization decisions should be separated into audit log.  Here we&apos;re allowing access, so AUDITLOG seemed to make sense.  I agree that this still needs to be cleaned up a lot.  Maybe all audit logging should be done up in requirePermission() with authorization result?  At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Maybe all audit logging should be done up in requirePermission() with authorization result?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Sounds good.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; At the very least we need a consistent format and consistent logging levels for messages (trace, right?).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d argue for TRACE&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Reworked the audit logging to happen in requirePermission(), so we get a single log message per auth check indicating success or failure, with a more consistent format.  Result is logged to AUDITLOG at trace level.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Is there TRACE level in our commons interface?  I believe it just maps to DEBUG?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Commons-logging source for 1.1.1 claims that with log4j &amp;gt;= 1.2.12, trace level is supported.  Prior to that it&apos;s mapped to debug.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh.  We need TRACE bad.  We have 1.2.16 log4j.  Have you seen TRACE logs Gary?  If so, that&apos;d make me happy.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review2077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review2077&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13144417" author="jiraposter@reviews.apache.org" created="Fri, 4 Nov 2011 22:29:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3057&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3057&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;



&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment6817&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment6817&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Would 1 slave be sufficient?&lt;/p&gt;



&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment6818&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment6818&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should we wait for the ACL table to become available here?&lt;/p&gt;

&lt;p&gt;    I&apos;ve seen this after making changes that alter connection setup timing:&lt;/p&gt;

&lt;p&gt;    org.apache.hadoop.hbase.TableNotFoundException: &lt;em&gt;acl&lt;/em&gt;&lt;br/&gt;
    	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegionInMeta(HConnectionManager.java:863)&lt;br/&gt;
    	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:732)&lt;br/&gt;
    	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:697)&lt;br/&gt;
    	at org.apache.hadoop.hbase.client.HTable.&amp;lt;init&amp;gt;(HTable.java:196)&lt;br/&gt;
    	at org.apache.hadoop.hbase.client.HTable.&amp;lt;init&amp;gt;(HTable.java:152)&lt;br/&gt;
    	at org.apache.hadoop.hbase.security.rbac.TestAccessController.setupBeforeClass(TestAccessController.java:95)&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13144479" author="jiraposter@reviews.apache.org" created="Sat, 5 Nov 2011 00:19:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-04 22:29:08, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java, line 66&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55459#file55459line66&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55459#file55459line66&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Would 1 slave be sufficient?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, no reason for more than 1.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-04 22:29:08, Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java, line 87&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55460#file55460line87&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55460#file55460line87&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should we wait for the ACL table to become available here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I&apos;ve seen this after making changes that alter connection setup timing:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     org.apache.hadoop.hbase.TableNotFoundException: &lt;em&gt;acl&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegionInMeta(HConnectionManager.java:863)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:732)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.locateRegion(HConnectionManager.java:697)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     	at org.apache.hadoop.hbase.client.HTable.&amp;lt;init&amp;gt;(HTable.java:196)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     	at org.apache.hadoop.hbase.client.HTable.&amp;lt;init&amp;gt;(HTable.java:152)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     	at org.apache.hadoop.hbase.security.rbac.TestAccessController.setupBeforeClass(TestAccessController.java:95)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, will make sure we wait until it&apos;s available.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3057&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3057&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13149226" author="stack" created="Sun, 13 Nov 2011 06:04:51 +0000"  >&lt;p&gt;This is in way of 0.92 release.&lt;/p&gt;</comment>
                            <comment id="13149227" author="jiraposter@reviews.apache.org" created="Sun, 13 Nov 2011 06:05:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3187&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3187&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;About 1/4 way through.  Will pick up again in morning.&lt;/p&gt;


&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7008&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7008&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is it on whenever I&apos;m doing access control?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7009&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7009&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Interesting&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7010&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is &lt;em&gt;acl&lt;/em&gt; a good name?   I hate &lt;del&gt;ROOT&lt;/del&gt; and then .META.  Its dumb.  All catalog tables should look the same.  &lt;del&gt;ROOT&lt;/del&gt; will likely go away soon.  That would tend to rule the name be .ACL.  But then leading off w/ a dot is a bit of a pain especially when you copy it local filesystem (it won&apos;t show in listings).  On other hand, maybe thats ok... makes it special.  And our &lt;b&gt;special&lt;/b&gt; dirs tend to lead off with a &apos;.&apos; as in &apos;.logs&apos;., etc.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7011&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7011&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We ensure a user can&apos;t have a &apos;@&quot; prefix I presume (haven&apos;t read all the code yet).&lt;/p&gt;




&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7012&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7012&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is great.  Nice.  Clean.  What happens if we ever want to do cell-level?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7013&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7013&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I&apos;d suggest you set an example with this new table and instead of having the cf be &apos;info&apos;, instead have it be &apos;l&apos; as short for lists (you are giving an example by having short cf names).&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7014&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If no family qualifier, we are granting perm on whole table?  Thats ok?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7015&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7015&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should we check family is not null?  Doesn&apos;t a qualifier have to have a family to qualify?  This should be inside the family check?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7016&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7016&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Ok good.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7017&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7017&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Usually space either side of operators as in &apos;int i = 0&apos; rather than &apos;int i=0&apos;.  Etc.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7018&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7018&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Oh, a byte per action?  Thats grand.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7019&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7019&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should it throw exception?&lt;/p&gt;

&lt;p&gt;    Should we read for an ACL first and not write a delete if none present (throwing exception if nothing to delete)?&lt;/p&gt;

&lt;p&gt;    I think I know why no effect&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7020&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7020&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    When I do this?  And what happens if perms are edited subsequently?  Are they considered?&lt;/p&gt;

&lt;p&gt;    Or is this method for testing like the one that follows?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7021&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7021&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We&apos;re doing the ACL table, not .META.  This a stale comment?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7022&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7022&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Stale comment?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7023&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7023&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Just point at class comment rather than dup it here?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7024&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7024&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Probably have to do that over in core master classes.  Its there we are guaranteeing root up before meta...&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7025&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is a bit of a pain having to make a String of it then going back to byte arrays after parse.   It&apos;ll do...  Maybe add a TODO: about making this more efficient.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7026&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7026&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Strings?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7027&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7027&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Don&apos;t have to flush or close the BAOS?  It probably does flush/close when you call toByteArray?  Over in Writables#getBytes we do something similar to this.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7028&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7028&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Sweet&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7029&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7029&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    These should all be finals?  This an immutable data structure?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7030&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7030&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What is diff between toContextString and toString?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7031&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7031&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats an aclregion?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7032&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7032&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We load on start of the controller?  Then if access is subsequently edited, its done via the controller only?  It updates its internal state as well as the acl table?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7034&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7034&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ok&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7035&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7035&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Its a pain isn&apos;t it that we are using Writables serializing to znodes.  It&apos;d be more human friendly doing json... but that we can do later.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7036&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7036&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What happens now?   Table is wide open for access?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13149234" author="apurtell" created="Sun, 13 Nov 2011 06:41:51 +0000"  >&lt;p&gt;I&apos;ll sort out the disposition of this and the other two patches with Gary next week. With any luck we&apos;ll get them committed next week as well.&lt;/p&gt;</comment>
                            <comment id="13149337" author="jiraposter@reviews.apache.org" created="Sun, 13 Nov 2011 19:47:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3191&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3191&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;This is great.&lt;/p&gt;


&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7055&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7055&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    These are expensive calls now that tableinfo has been removed from HRI (IIRC); I don&apos;t think there caching going on.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7056&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7056&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I like the way this is done; a data structure w/ all the detail on why the fail or pass&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7057&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7057&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this on every &apos;action&apos;?  Will this become annoying?  Loads of spew in logs?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7058&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7058&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good; good feedback on why the access failed&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7059&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7059&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You might in future do this method comment as the javadoc on the @return param&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7061&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7061&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    So, requirePermission will  not find a controlling user &amp;#8211; here we are assigning current user as controlling (controlling user has to make the table?)&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7062&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7062&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    BaseRegionObserver doesn&apos;t noop in this case?  Do we need this empty method?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7063&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7063&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is not a good name for a boolean.   Shouldn&apos;t it be aclRegion?  isAclRegion is the name of the method that checks the boolean is true.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7064&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7064&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Oh, so these are independent?  You could NOT have perms on family but JUST on an individual cf+qualifier combo?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7065&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7065&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7066&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7066&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Only controlling user can scan?  The person who created the table (or the group I suppose?)&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7067&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This code is duplicated.  Could be a private method?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7068&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7068&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nice (an audit log)&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7069&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7069&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Since it throws exception if fails &amp;#8211; and I guess you want to do this because the IOE will have lots of info on the why &amp;#8211; then this method might as well be void rather than boolean return?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7070&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7070&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Fix this first sentence... reads wrong?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7071&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7071&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nice documentation&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7072&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7072&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    static?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7073&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7073&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You need this?  Else its a read-only class.  Just create new instance if want to change Actions?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7074&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7074&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why we have TablePermission pollution in this base Permission class?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7075&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7075&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do we need a hash method?  Same for other Permission objects?&lt;/p&gt;



&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7076&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7076&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You have to have the &apos;access&apos; subpackage under security?  What else beside this access stuff would be in the package?  (just wondering if we are down too deep in the packaging &amp;#8211; if we could come up one).&lt;/p&gt;



&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7077&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7077&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Could you put all these tests into one test class so only one cluster spin-up to test access?  If too hard, don&apos;t worry... just asking.&lt;/p&gt;

&lt;p&gt;    Or maybe not... it looks like you are getting good use out of your cluster spinup in this test &amp;#8211; nice test.&lt;/p&gt;



&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7078&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7078&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Great test.  Comprehensive.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13149338" author="jiraposter@reviews.apache.org" created="Sun, 13 Nov 2011 19:47:52 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3192&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;You running this at TM G?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13149340" author="jiraposter@reviews.apache.org" created="Sun, 13 Nov 2011 19:53:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:24, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; You running this at TM G?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;An earlier iteration of this code is in production. AccessController is essentially the same. The plan is to upstream 3025, the RPC changes, and secure ZooKeeper integration, then pull the resulting 0.92 release back in to a future production environment.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3192&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13149342" author="jiraposter@reviews.apache.org" created="Sun, 13 Nov 2011 20:03:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 06:04:14, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 214&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line214&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line214&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What happens now?   Table is wide open for access?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not necessarily, if previous permissions were applied successfully, the previous permissions are still up in the ZK mirror and active across the cluster. However, it is an unresolved matter what should be done here. Take the table offline is one option, essentially forcing a &quot;reboot&quot; of access control across the cluster for the table in question. Would be disruptive.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 06:04:14, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 209&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line209&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line209&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Its a pain isn&apos;t it that we are using Writables serializing to znodes.  It&apos;d be more human friendly doing json... but that we can do later.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Concur&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 06:04:14, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java, line 475&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55450#file55450line475&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55450#file55450line475&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Don&apos;t have to flush or close the BAOS?  It probably does flush/close when you call toByteArray?  Over in Writables#getBytes we do something similar to this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Closing a ByteArrayOutputStream has no effect according to &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/io/ByteArrayOutputStream.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/6/docs/api/java/io/ByteArrayOutputStream.html&lt;/a&gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 06:04:14, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java, line 427&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55450#file55450line427&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55450#file55450line427&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is a bit of a pain having to make a String of it then going back to byte arrays after parse.   It&apos;ll do...  Maybe add a TODO: about making this more efficient.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is some friction we see in several places in HBase code. byte[] is a really generic and efficient representation, but String contains many useful methods that Byte (or Bytes) lack.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3187&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3187&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13149371" author="jiraposter@reviews.apache.org" created="Sun, 13 Nov 2011 21:33:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3197&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3197&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7093&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7093&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    HRegion was returned from e.getRegion().&lt;br/&gt;
    The getTableDesc() returns HTD directly.&lt;br/&gt;
      public HTableDescriptor getTableDesc() &lt;/p&gt;
{
        return this.htableDescriptor;
      }



&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150721" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 19:51:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 238&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line238&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line238&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     These are expensive calls now that tableinfo has been removed from HRI (IIRC); I don&apos;t think there caching going on.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think the HRegionInfo version is the expensive one (doing the HDFS read).  For HRegion, this is just returning the HTD instance, so seems like it should be okay...&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 344&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line344&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line344&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this on every &apos;action&apos;?  Will this become annoying?  Loads of spew in logs?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, that&apos;s going to get pretty noisy.  Since we have the audit logging, I think we can just remove this.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 498&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line498&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line498&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     BaseRegionObserver doesn&apos;t noop in this case?  Do we need this empty method?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is from MasterObserver &amp;#8211; need to implement these since java doesn&apos;t give us multiple inheritance.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 482&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line482&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line482&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     So, requirePermission will  not find a controlling user &amp;#8211; here we are assigning current user as controlling (controlling user has to make the table?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&quot;getControllingUser&quot; is a poor name &amp;#8211; it&apos;s really more the &quot;active user&quot;: the remote user in an rpc request, otherwise the currently logged in user for the process.  I&apos;ll change the name.&lt;/p&gt;

&lt;p&gt;We could use the same method here (I think this code just predates that).  I&apos;ll update.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 676&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line676&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line676&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Oh, so these are independent?  You could NOT have perms on family but JUST on an individual cf+qualifier combo?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 798&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line798&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line798&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Only controlling user can scan?  The person who created the table (or the group I suppose?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Anyone with read access can scan (getControllingUser is just poorly named &amp;#8211; see above).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 865&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line865&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line865&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This code is duplicated.  Could be a private method?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java, line 37&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55452#file55452line37&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55452#file55452line37&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Since it throws exception if fails &amp;#8211; and I guess you want to do this because the IOE will have lots of info on the why &amp;#8211; then this method might as well be void rather than boolean return?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Updated grant and revoke to both have void return type (depends on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4784&quot; title=&quot;Void return types not handled correctly for CoprocessorProtocol methods&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4784&quot;&gt;&lt;del&gt;HBASE-4784&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java, line 116&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55453#file55453line116&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55453#file55453line116&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Why we have TablePermission pollution in this base Permission class?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Incomplete refactoring.  Fixed.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java, line 43&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55452#file55452line43&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55452#file55452line43&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Fix this first sentence... reads wrong?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 651&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line651&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line651&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is not a good name for a boolean.   Shouldn&apos;t it be aclRegion?  isAclRegion is the name of the method that checks the boolean is true.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changed to aclRegion.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java, line 41&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55453#file55453line41&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55453#file55453line41&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     static?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nested enums are implicitly static&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java, line 94&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55453#file55453line94&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55453#file55453line94&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You need this?  Else its a read-only class.  Just create new instance if want to change Actions?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, good point.  This was only used in tests, which were easily fixed, so I&apos;ve removed it.  The class is now immutable (except for writable).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java, line 95&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55456#file55456line95&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55456#file55456line95&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do we need a hash method?  Same for other Permission objects?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Added hashCode() for Permission, TablePermission, and UserPermission&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3191&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3191&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-01 21:18:27, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-01 21:18:27)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java bb67e53 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 3785533 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 61e04d8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150723" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 19:55:51 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-15 19:54:02.538497)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Updated patch addressing review comments.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;

&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;AccessController -&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/li&gt;
	&lt;li&gt;implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;br/&gt;
  src/main/resources/hbase-default.xml 6f98f5d &lt;br/&gt;
  src/main/ruby/hbase.rb 4d27191 &lt;br/&gt;
  src/main/ruby/hbase/admin.rb 17cc891 &lt;br/&gt;
  src/main/ruby/hbase/hbase.rb beb2450 &lt;br/&gt;
  src/main/ruby/hbase/security.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell.rb 9a47600 &lt;br/&gt;
  src/main/ruby/shell/commands.rb a352c2e &lt;br/&gt;
  src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;
</comment>
                            <comment id="13150758" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 20:48:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 06:04:14, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java, line 475&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55450#file55450line475&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55450#file55450line475&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Don&apos;t have to flush or close the BAOS?  It probably does flush/close when you call toByteArray?  Over in Writables#getBytes we do something similar to this.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Closing a ByteArrayOutputStream has no effect according to &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/io/ByteArrayOutputStream.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/6/docs/api/java/io/ByteArrayOutputStream.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3187&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3187&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-15 19:54:02, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-15 19:54:02)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 17cc891 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150759" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 20:50:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java, line 238&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line238&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55451#file55451line238&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     These are expensive calls now that tableinfo has been removed from HRI (IIRC); I don&apos;t think there caching going on.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I think the HRegionInfo version is the expensive one (doing the HDFS read).  For HRegion, this is just returning the HTD instance, so seems like it should be okay...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-13 19:47:04, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java, line 41&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3/?file=55453#file55453line41&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3/?file=55453#file55453line41&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     static?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Nested enums are implicitly static&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3191&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3191&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-15 19:54:02, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-15 19:54:02)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 17cc891 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150773" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 21:01:52 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3276&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3276&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Patch looks good to go.  Some fixups to do on commit below.&lt;/p&gt;


&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7327&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7327&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You didn&apos;t want to change name of table?&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7328&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7328&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Thanks&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7330&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7330&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is easier to understand.&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7332&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7332&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove this on commit&lt;/p&gt;



&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7331&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7331&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove this on commit&lt;/p&gt;



&lt;p&gt;src/main/resources/hbase-default.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7333&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7333&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This looks like its leakage from another issue altogether&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-15 19:54:02, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-15 19:54:02)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 17cc891 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150857" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 22:45:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 21:01:17, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java, line 80&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3-4/?file=55450#file55450line80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3-4/?file=55450#file55450line80&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You didn&apos;t want to change name of table?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Doesn&apos;t seem currently possible to use &quot;.ACL.&quot; without changing HTableDescriptor constructors to allow bypassing the isLegalTableName() check?  Unless we define a static ACL_TABLEDESC variable in HTD so we can use the protected constructor (same as .META. and &lt;del&gt;ROOT&lt;/del&gt;).  But doing that seems to violate the separation of concerns to me.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 21:01:17, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/resources/hbase-default.xml, line 132&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3-4/?file=55466#file55466line132&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3-4/?file=55466#file55466line132&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This looks like its leakage from another issue altogether&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ugh, no idea where this came from.  Thanks for catching, I&apos;ll strip it out.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3276&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3276&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-15 19:54:02, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-15 19:54:02)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 17cc891 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150860" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 22:51:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 21:01:17, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/resources/hbase-default.xml, line 132&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3-4/?file=55466#file55466line132&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3-4/?file=55466#file55466line132&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This looks like its leakage from another issue altogether&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ugh, no idea where this came from.  Thanks for catching, I&apos;ll strip it out.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Weird, the section highlighted here is not actually in my patch.  Just a trunk change that reviewboard is showing as different from the previous patch uploaded?&lt;/p&gt;

&lt;p&gt;The actual hbase-default.xml change is:&lt;/p&gt;

&lt;p&gt;+    &amp;lt;name&amp;gt;zookeeper.znode.acl.parent&amp;lt;/name&amp;gt;&lt;br/&gt;
+    &amp;lt;value&amp;gt;acl&amp;lt;/value&amp;gt;&lt;br/&gt;
+    &amp;lt;description&amp;gt;Root ZNode for access control lists.&amp;lt;/description&amp;gt;&lt;br/&gt;
+  &amp;lt;/property&amp;gt;&lt;br/&gt;
+  &lt;br/&gt;
+  &amp;lt;property&amp;gt;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3276&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3276&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-15 19:54:02, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-15 19:54:02)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 17cc891 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150871" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 23:07:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 21:01:17, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/resources/hbase-default.xml, line 132&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3-4/?file=55466#file55466line132&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3-4/?file=55466#file55466line132&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This looks like its leakage from another issue altogether&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ugh, no idea where this came from.  Thanks for catching, I&apos;ll strip it out.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Weird, the section highlighted here is not actually in my patch.  Just a trunk change that reviewboard is showing as different from the previous patch uploaded?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The actual hbase-default.xml change is:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;+    &amp;lt;name&amp;gt;zookeeper.znode.acl.parent&amp;lt;/name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;+    &amp;lt;value&amp;gt;acl&amp;lt;/value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;+    &amp;lt;description&amp;gt;Root ZNode for access control lists.&amp;lt;/description&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;+  &amp;lt;/property&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;+  &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;+  &amp;lt;property&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No problem.  Long as you commit the right stuff (smile).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 21:01:17, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java, line 80&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3-4/?file=55450#file55450line80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3-4/?file=55450#file55450line80&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You didn&apos;t want to change name of table?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Doesn&apos;t seem currently possible to use &quot;.ACL.&quot; without changing HTableDescriptor constructors to allow bypassing the isLegalTableName() check?  Unless we define a static ACL_TABLEDESC variable in HTD so we can use the protected constructor (same as .META. and &lt;del&gt;ROOT&lt;/del&gt;).  But doing that seems to violate the separation of concerns to me.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&quot; But doing that seems to violate the separation of concerns to me.&quot;&lt;/p&gt;

&lt;p&gt;This is a &apos;catalog&apos; table?  Non-user table?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3276&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3276&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-15 19:54:02, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-15 19:54:02)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 17cc891 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150885" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 23:27:52 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 21:01:17, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java, line 80&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3-4/?file=55450#file55450line80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3-4/?file=55450#file55450line80&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You didn&apos;t want to change name of table?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Doesn&apos;t seem currently possible to use &quot;.ACL.&quot; without changing HTableDescriptor constructors to allow bypassing the isLegalTableName() check?  Unless we define a static ACL_TABLEDESC variable in HTD so we can use the protected constructor (same as .META. and &lt;del&gt;ROOT&lt;/del&gt;).  But doing that seems to violate the separation of concerns to me.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot; But doing that seems to violate the separation of concerns to me.&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is a &apos;catalog&apos; table?  Non-user table?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The separation that Gary refers to is between security specific implementation detail and the core code.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3276&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3276&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-15 19:54:02, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-15 19:54:02)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 17cc891 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13150888" author="jiraposter@reviews.apache.org" created="Tue, 15 Nov 2011 23:31:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-15 21:01:17, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java, line 80&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/3-4/?file=55450#file55450line80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/3-4/?file=55450#file55450line80&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You didn&apos;t want to change name of table?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Doesn&apos;t seem currently possible to use &quot;.ACL.&quot; without changing HTableDescriptor constructors to allow bypassing the isLegalTableName() check?  Unless we define a static ACL_TABLEDESC variable in HTD so we can use the protected constructor (same as .META. and &lt;del&gt;ROOT&lt;/del&gt;).  But doing that seems to violate the separation of concerns to me.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&quot; But doing that seems to violate the separation of concerns to me.&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is a &apos;catalog&apos; table?  Non-user table?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Andrew Purtell wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The separation that Gary refers to is between security specific implementation detail and the core code.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK.  I did not get that.  I can live w/ this table name.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3276&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3276&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-15 19:54:02, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-15 19:54:02)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 17cc891 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13152221" author="jiraposter@reviews.apache.org" created="Thu, 17 Nov 2011 18:48:52 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-11-17 18:48:44.147139)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Minor update removing javadoc lines as commented by Stack.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;

&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;AccessController -&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/li&gt;
	&lt;li&gt;implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;br/&gt;
  security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;br/&gt;
  security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;br/&gt;
  src/main/resources/hbase-default.xml 6f98f5d &lt;br/&gt;
  src/main/ruby/hbase.rb 4d27191 &lt;br/&gt;
  src/main/ruby/hbase/admin.rb 33cd208 &lt;br/&gt;
  src/main/ruby/hbase/hbase.rb beb2450 &lt;br/&gt;
  src/main/ruby/hbase/security.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell.rb 9a47600 &lt;br/&gt;
  src/main/ruby/shell/commands.rb a352c2e &lt;br/&gt;
  src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;br/&gt;
  src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;
</comment>
                            <comment id="13152437" author="jiraposter@reviews.apache.org" created="Thu, 17 Nov 2011 23:11:52 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3333&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3333&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;I looked at diff between 4 and 5.  Seems fine to me.  Some comments below.&lt;/p&gt;


&lt;p&gt;src/main/ruby/hbase/admin.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7444&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7444&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Did you fix this in another separate patch?&lt;/p&gt;



&lt;p&gt;src/main/ruby/hbase/security.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7445&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7445&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This seems like pretty important change.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-17 18:48:44, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-17 18:48:44)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 33cd208 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13152712" author="jiraposter@reviews.apache.org" created="Fri, 18 Nov 2011 07:51:51 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-11-17 23:10:15, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/ruby/hbase/admin.rb, line 348&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/4-5/?file=58485#file58485line348&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/4-5/?file=58485#file58485line348&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Did you fix this in another separate patch?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This just seems like the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4793&quot; title=&quot;HBase shell still using deprecated methods removed in HBASE-4436&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4793&quot;&gt;&lt;del&gt;HBASE-4793&lt;/del&gt;&lt;/a&gt; change peeking through when comparing diff 4 and diff 5.  Not sure why review board shows it, but it&apos;s in trunk, not my patch.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-11-17 23:10:15, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/ruby/hbase/security.rb, line 74&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/diff/4-5/?file=58487#file58487line74&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff/4-5/?file=58487#file58487line74&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This seems like pretty important change.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I should have called this out.  Wasn&apos;t sure if it was already in the previous patch.  This is how I stumbled across &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4793&quot; title=&quot;HBase shell still using deprecated methods removed in HBASE-4436&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4793&quot;&gt;&lt;del&gt;HBASE-4793&lt;/del&gt;&lt;/a&gt; in the first place.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3333&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3333&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-11-17 18:48:44, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-17 18:48:44)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 33cd208 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13152713" author="ghelmling" created="Fri, 18 Nov 2011 07:55:42 +0000"  >&lt;p&gt;Latest patch from review board for testing.&lt;/p&gt;</comment>
                            <comment id="13152749" author="hadoopqa" created="Fri, 18 Nov 2011 09:50:36 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12504183/HBASE-3025_5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12504183/HBASE-3025_5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 10 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 60 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestShell&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/291//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/291//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/291//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/291//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/291//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/291//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13153021" author="stack" created="Fri, 18 Nov 2011 18:25:50 +0000"  >&lt;p&gt;The TestAdmin was because of this patch Gary (The TestShell seems to have come in w/ the HTable changes yesterday of Lars?)&lt;/p&gt;</comment>
                            <comment id="13153040" author="ghelmling" created="Fri, 18 Nov 2011 18:46:33 +0000"  >&lt;p&gt;Hmm, the TestAdmin failure might be due to HConnectionKey changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt;?  The error is:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.hadoop.hbase.ZooKeeperConnectionException: An error is preventing HBase from connecting to ZooKeeper
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.getZooKeeperWatcher(HConnectionManager.java:1266)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.setupZookeeperTrackers(HConnectionManager.java:568)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.&amp;lt;init&amp;gt;(HConnectionManager.java:559)
	at org.apache.hadoop.hbase.client.HConnectionManager.getConnection(HConnectionManager.java:183)
	at org.apache.hadoop.hbase.client.HBaseAdmin.&amp;lt;init&amp;gt;(HBaseAdmin.java:110)
	at org.apache.hadoop.hbase.client.HBaseAdmin.checkHBaseAvailable(HBaseAdmin.java:1523)
	at org.apache.hadoop.hbase.client.TestAdmin.testCheckHBaseAvailableClosesConnection(TestAdmin.java:1416)
...
Caused by: java.io.IOException: Too many open files
	at sun.nio.ch.IOUtil.initPipe(Native Method)
	at sun.nio.ch.EPollSelectorImpl.&amp;lt;init&amp;gt;(EPollSelectorImpl.java:49)
	at sun.nio.ch.EPollSelectorProvider.openSelector(EPollSelectorProvider.java:18)
	at java.nio.channels.Selector.open(Selector.java:209)
	at org.apache.zookeeper.ClientCnxn.&amp;lt;init&amp;gt;(ClientCnxn.java:160)
	at org.apache.zookeeper.ClientCnxn.&amp;lt;init&amp;gt;(ClientCnxn.java:331)
	at org.apache.zookeeper.ZooKeeper.&amp;lt;init&amp;gt;(ZooKeeper.java:377)
	at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.&amp;lt;init&amp;gt;(RecoverableZooKeeper.java:82)
	at org.apache.hadoop.hbase.zookeeper.ZKUtil.connect(ZKUtil.java:102)
	at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.&amp;lt;init&amp;gt;(ZooKeeperWatcher.java:131)
	at org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.&amp;lt;init&amp;gt;(ZooKeeperWatcher.java:105)
	at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.getZooKeeperWatcher(HConnectionManager.java:1262)
	... 38 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looking into it and will see if I can repro.  I&apos;ve been getting no failures locally.&lt;/p&gt;</comment>
                            <comment id="13153068" author="stack" created="Fri, 18 Nov 2011 19:29:03 +0000"  >&lt;p&gt;hadoopqa is failing some tests because of &apos;too many open files&apos;  Its failing distributedlogsplitting for same reason.  I&apos;d say its not your patch.&lt;/p&gt;</comment>
                            <comment id="13153181" author="jiraposter@reviews.apache.org" created="Fri, 18 Nov 2011 22:22:57 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2041/#review3365&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#review3365&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/ruby/hbase/admin.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2041/#comment7545&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/#comment7545&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is duplicated code from a merge somewhere along the way.  I&apos;ll remove on commit.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-11-17 18:48:44, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2041/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-11-17 18:48:44)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch implements access control list based authorization of HBase operations.  The patch depends on the currently posted patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2742&quot; title=&quot;Provide strong authentication with a secure RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2742&quot;&gt;&lt;del&gt;HBASE-2742&lt;/del&gt;&lt;/a&gt; (secure RPC engine).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Key parts of the implementation are:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessControlLists - encapsulates storage of permission grants in a metadata table (&quot;&lt;em&gt;acl&lt;/em&gt;&quot;).  This differs from previous implementation where the &quot;.META.&quot; table was used to store permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* AccessController - &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements MasterObserver and RegionObserver, performing authorization checks in each of the preXXX() hooks.  If authorization fails, an AccessDeniedException is thrown.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;- implements AccessControllerProtocol as a coprocessor endpoint to provide RPC methods for granting, revoking and listing permissions.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* ZKPermissionWatcher (and TableAuthManager) - synchronizes ACL entries and updates throughout the cluster nodes using ZK.  ACL entries are stored in per-table znodes as /hbase/acl/tablename.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Additional ruby shell scripts providing the &quot;grant&quot;, &quot;revoke&quot; and &quot;user_permission&quot; commands&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* Support for a new OWNER attribute in HTableDescriptor.  I could separate out this change into a new JIRA for discussion, but I don&apos;t see it as currently useful outside of security.  Alternately, I could handle the OWNER attribute completely in AccessController without changing HTD, but that would make interaction via hbase shell a bit uglier.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3025&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java 99875b8 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java 8a40762 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java 4c5e844 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 6f98f5d &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase.rb 4d27191 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/admin.rb 33cd208 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/hbase.rb beb2450 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/hbase/security.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell.rb 9a47600 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands.rb a352c2e &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/grant.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/revoke.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/ruby/shell/commands/user_permission.rb PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2041/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2041/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13153246" author="stack" created="Fri, 18 Nov 2011 23:57:19 +0000"  >&lt;p&gt;You want more reviews Gary?&lt;/p&gt;</comment>
                            <comment id="13153262" author="ghelmling" created="Sat, 19 Nov 2011 00:27:45 +0000"  >&lt;p&gt;Attaching final patch.  Only change is removal of a small amount of duplicated code in previous patch from admin.rb.&lt;/p&gt;</comment>
                            <comment id="13153267" author="hadoopqa" created="Sat, 19 Nov 2011 00:32:30 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12504305/HBASE-3025_6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12504305/HBASE-3025_6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 10 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/299//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/299//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13153268" author="ghelmling" created="Sat, 19 Nov 2011 00:32:31 +0000"  >&lt;p&gt;Committed to 0.92 branch and trunk.  Thanks again for the reviews.&lt;/p&gt;</comment>
                            <comment id="13153366" author="hudson" created="Sat, 19 Nov 2011 03:35:34 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #145 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/145/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/145/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;  Security: coprocessor based access control&lt;/p&gt;

&lt;p&gt;garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/test/java/org/apache/hadoop/hbase/security/access&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/hbase.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/hbase/admin.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/hbase/hbase.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/hbase/security.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/shell.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/shell/commands.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/shell/commands/grant.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/shell/commands/revoke.rb&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/ruby/shell/commands/user_permission.rb&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13153404" author="hudson" created="Sat, 19 Nov 2011 06:18:37 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2459 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2459/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2459/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;  Security: coprocessor based access control&lt;/p&gt;

&lt;p&gt;garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access/AccessControllerProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/test/java/org/apache/hadoop/hbase/security/access&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/test/java/org/apache/hadoop/hbase/security/access/SecureTestUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessControlFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/test/java/org/apache/hadoop/hbase/security/access/TestTablePermissions.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/security/src/test/java/org/apache/hadoop/hbase/security/access/TestZKPermissionsWatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/hbase.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/hbase/admin.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/hbase/hbase.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/hbase/security.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/shell.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/shell/commands.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/shell/commands/grant.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/shell/commands/revoke.rb&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/ruby/shell/commands/user_permission.rb&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13153410" author="lhofhansl" created="Sat, 19 Nov 2011 06:31:00 +0000"  >&lt;p&gt;Is there a step-by-step guide somewhere on how to set this up?&lt;/p&gt;</comment>
                            <comment id="13193415" author="apurtell" created="Wed, 25 Jan 2012 22:54:42 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4990&quot; title=&quot;Document secure HBase setup&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4990&quot;&gt;&lt;del&gt;HBASE-4990&lt;/del&gt;&lt;/a&gt;. Destined for the site manual. The piece I have left to do is a capture of an example shell session. I have such a capture but it&apos;s led to follow on jiras that need to be resolved for 0.92.1&lt;/p&gt;</comment>
                            <comment id="15017498" author="lars_francke" created="Fri, 20 Nov 2015 12:43:21 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12431322">HBASE-1697</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12495156">HBASE-3435</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12441378">HBASE-2001</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12500976">HBASE-3615</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12480698">ZOOKEEPER-938</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12461439">HBASE-2418</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12467142">HBASE-2742</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12475312">HBASE-3045</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12456090" name="HBASE-3025.1.patch" size="92522" author="apurtell" created="Fri, 1 Oct 2010 07:55:11 +0000"/>
                            <attachment id="12504183" name="HBASE-3025_5.patch" size="194390" author="ghelmling" created="Fri, 18 Nov 2011 07:55:42 +0000"/>
                            <attachment id="12504305" name="HBASE-3025_6.patch" size="193505" author="ghelmling" created="Sat, 19 Nov 2011 00:27:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 Sep 2010 18:31:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19508</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d487:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74461</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This is part of an overall implementation of security features for HBase.  This issue adds a new AccessController coprocessor which, when enabled, performs authorization checks on all cluster operations, using stored access control lists.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>