<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:48:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-883/HBASE-883.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-883] Secondary Indexes</title>
                <link>https://issues.apache.org/jira/browse/HBASE-883</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I&apos;m working on a secondary index impl. The basic idea is to maintain a separate table per index.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12404278">HBASE-883</key>
            <summary>Secondary Indexes</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="apurtell">Andrew Purtell</assignee>
                                    <reporter username="clint.morgan">Clint Morgan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Sep 2008 22:08:20 +0000</created>
                <updated>Thu, 2 May 2013 02:29:17 +0000</updated>
                            <resolved>Wed, 19 Nov 2008 00:46:39 +0000</resolved>
                                                    <fixVersion>0.19.0</fixVersion>
                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12630689" author="clint.morgan" created="Fri, 12 Sep 2008 22:11:53 +0000"  >&lt;p&gt;In progress, incomplete, version with a working test. The test should be enough to communicate the API and semantics. Feedback welcomed.&lt;/p&gt;</comment>
                            <comment id="12630692" author="clint.morgan" created="Fri, 12 Sep 2008 22:16:34 +0000"  >&lt;p&gt;Need to specify per-table row key comparator &lt;/p&gt;</comment>
                            <comment id="12630694" author="clint.morgan" created="Fri, 12 Sep 2008 22:19:49 +0000"  >&lt;p&gt;I&apos;m on vacation next week, but plan to wrap this up the week after.&lt;/p&gt;</comment>
                            <comment id="12634648" author="stack" created="Thu, 25 Sep 2008 21:56:26 +0000"  >&lt;p&gt;Hey Clint:&lt;/p&gt;

&lt;p&gt;Highlevel, talk on the list has made mention of secondary indices done using lucene rather than keeping a second table.  Because of this, one suggestion to consider &amp;#8211; non-binding, just a suggestion &amp;#8211; is that you might include the type of your secondary index &amp;#8211; i.e. table index &amp;#8211; when naming classes, etc.  For example, IndexedRegionServer should perhaps become TableIndexedRegionServer (bit of a mouthful &amp;#8211; maybe you have a better name) or maybe better, just change your package name &amp;#8211; use tableindexed or tindexed instead of indexed &amp;#8211; so its clear how your secondary index is implemented.&lt;/p&gt;

&lt;p&gt;In HTD:&lt;/p&gt;

&lt;p&gt;+ Is this inclusion intentional: &apos;+  public static final String ROW_KEY_COMPARATOR = &quot;ROW_KEY_COMPARATOR&quot;;&apos;?  Is this leak from another patch?  Same for HSK.java.... and setRowKeyComparator in HTD, etc.&lt;br/&gt;
+ You have to copy &apos;+  static private byte[] format(final int number) {&apos; from PerformanceEvaluation because its inaccessible?  I&apos;d suggest change access on PE so you don&apos;t have to duplicate.&lt;/p&gt;

&lt;p&gt;... more to follow&lt;/p&gt;</comment>
                            <comment id="12634700" author="stack" created="Thu, 25 Sep 2008 23:47:53 +0000"  >&lt;p&gt;+ This looks like it could soon become annoying &apos;+        LOG.info(&quot;Index [&quot; + indexSpec.getIndexId()&apos;... should be DEBUG-level at least.&lt;br/&gt;
+ How can we make it so you don&apos;t have to do this to HTD:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, IndexSpecification&amp;gt; indexes =
+    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, IndexSpecification&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It pollutes HTD with indices.  Should we add a map that subclasses such as this Indexer can stuff things like indexes into?  Rather than have each specialization add to HTD?&lt;br/&gt;
+ More pollution from another patch: WritableComparator.java... and besides, ain&apos;t this up in hadoop?  And ReverseByteArrayComparator.  (These new classes are lacking licenses).&lt;/p&gt;

&lt;p&gt;I didn&apos;t try it but patch looks generally good to me. &lt;/p&gt;

&lt;p&gt;One thought is that this fancy feature really should be an option on default hbase.  Creating your table, it&apos;d be an option spec&apos;ing secondary indices.  But that can wait.  Lets do it this way where its as a subclass first.  If the demand, we can move it back into core hbase.&lt;/p&gt;

</comment>
                            <comment id="12634941" author="clint.morgan" created="Fri, 26 Sep 2008 17:38:54 +0000"  >
&lt;p&gt;Thanks for the review, responded to most of it:&lt;/p&gt;

&lt;p&gt;The stuff dealing with RowKeyCompartors is my half-arse attempt at&lt;br/&gt;
661. It seems to work but I have not tried it when regions start to&lt;br/&gt;
split, which i think is where the issues will arise. &lt;/p&gt;

&lt;p&gt;I need RowKeyComparators, because some indexes (those that go in&lt;br/&gt;
reverse order, or deserialize the index keys (column values from base&lt;br/&gt;
table) to order by EG long values) need to sort non-lexicographically.&lt;/p&gt;

&lt;p&gt;This WritableComparator is diff that the one in hadoop. Mine just brings the&lt;br/&gt;
two interfaces together, while the hadoop version is a general class&lt;br/&gt;
for comparing byte[]s.&lt;/p&gt;

&lt;p&gt;Made PerfEval.fomat public&lt;/p&gt;

&lt;p&gt;Changed package names to tableindexed&lt;/p&gt;

&lt;p&gt;Regards including the index specs in HTD, it made sense to me. I see&lt;br/&gt;
the pollution concern, but indexes seem like a fundamental part of the&lt;br/&gt;
tables meta-data. I can rework in subsequent patch If need be.&lt;/p&gt;

&lt;p&gt;This version has transactional tables/regions inherit from the&lt;br/&gt;
indexed tables/regions. This will allow the index updates to have&lt;br/&gt;
proper transactional behavior (when updated as part of a transaction).&lt;/p&gt;

&lt;p&gt;I&apos;ve tested this in my object-datastore layer above hbase, and passes some basic&lt;br/&gt;
tests. There is a reasonable deal of logic that goes into the&lt;br/&gt;
RowKeyGenerator as it must carefully build the index keys to get the&lt;br/&gt;
desired ordering. I&apos;m building my index keys prefixed with the same&lt;br/&gt;
prefix used in the original keys to maintain &quot;sharding&quot;. This&lt;br/&gt;
way I can do an quick index scan for data from a give domain (EG, for&lt;br/&gt;
a specific customer).&lt;/p&gt;</comment>
                            <comment id="12635901" author="clint.morgan" created="Tue, 30 Sep 2008 23:26:39 +0000"  >&lt;p&gt;Latest version, fixed bug related to index maintenance, added a minimal package.html doc&lt;/p&gt;</comment>
                            <comment id="12636094" author="clint.morgan" created="Wed, 1 Oct 2008 16:54:52 +0000"  >&lt;p&gt;There was an index maintenance bug introduced in last patch, this fixes it.&lt;/p&gt;

&lt;p&gt;(IndexedRegion:123) oldEntry.getValue() -&amp;gt; oldEntry.getKey()&lt;/p&gt;</comment>
                            <comment id="12638787" author="apurtell" created="Sat, 11 Oct 2008 19:13:25 +0000"  >&lt;p&gt;Hi Clint. Does it have to be that transaction classes inherit from index classes? Is it possible to have transactions without indexes? Wouldn&apos;t having the index classes inherit from the transactional ones accomplish the same thing? Or am I missing something?&lt;/p&gt;</comment>
                            <comment id="12640603" author="clint.morgan" created="Fri, 17 Oct 2008 18:02:31 +0000"  >&lt;p&gt;Andrew: you&apos;re right that I don&apos;t need to have the transactional stuff inherit from the indexed stuff. My intuition to do this came from the need to have transactional logic happen first, and then the indexing stuff only happen as a transaction is successfully committed. However, I can make this work with the normal polymorphic mechanism...&lt;/p&gt;

&lt;p&gt;This patch does that, as well as address a couple of performance issues I found with profiling.&lt;/p&gt;</comment>
                            <comment id="12640731" author="apurtell" created="Sat, 18 Oct 2008 01:53:24 +0000"  >&lt;p&gt;+1 after HBase-880 goes in and fixups are made. Being able to ordering a scan on/by a secondary index is an important feature for HBase users, and it&apos;s great that you&apos;ve done the heavy lifting for the rest of us Clint. If another means for indexing tables is added later, the appropriate refactoring can be done at that time to make everything make sense and play together. &lt;/p&gt;</comment>
                            <comment id="12642321" author="clint.morgan" created="Thu, 23 Oct 2008 22:09:09 +0000"  >&lt;p&gt;Latest version. Completes the support for deletes, fixes a spelling mistake.&lt;/p&gt;</comment>
                            <comment id="12643131" author="stack" created="Tue, 28 Oct 2008 04:44:15 +0000"  >&lt;p&gt;Clint: Secondary indexes run on top of a transactional hbase?  Thats needed because insert into secondary is transactional with primary table?  This patch makes some changes to a few core classes but they are a few only and they look like they do not require migration scripts because the classes migrate themselves.  I like the package.html documentation.&lt;/p&gt;

&lt;p&gt;Has anyone else tried Clint&apos;s patch?  Does it work for them?&lt;/p&gt;</comment>
                            <comment id="12643372" author="clint.morgan" created="Tue, 28 Oct 2008 23:40:54 +0000"  >&lt;p&gt;&amp;gt;&amp;gt; Secondary indexes run on top of a transactional hbase? Thats needed because insert into secondary is transactional with primary table?&lt;/p&gt;

&lt;p&gt;Yeah thats correct. I want transactional behavior to happen first, then indexes get updated iff a transaction is committed. &lt;/p&gt;</comment>
                            <comment id="12643548" author="stack" created="Wed, 29 Oct 2008 17:48:11 +0000"  >&lt;p&gt;Lets add this to 0.19.0.&lt;/p&gt;</comment>
                            <comment id="12643744" author="stack" created="Thu, 30 Oct 2008 05:12:42 +0000"  >&lt;p&gt;Clint:&lt;/p&gt;

&lt;p&gt;This won&apos;t work, right:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    } 
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (regionInfo != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; regionInfo.getTableDesc().getRowKeyComparator() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; regionInfo.getTableDesc().getRowKeyComparator().compare(rowA, rowB);
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;i.e. a table-specific comparator. Since the .META. and &lt;del&gt;ROOT&lt;/del&gt; use different comparator, there is going to be a disagreement, someday.&lt;/p&gt;

&lt;p&gt;Remove it from above and from HTableDescriptor?&lt;/p&gt;

&lt;p&gt;Minor: The below should be wrapped in an if (LOG.isDebugEnable()) check:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Index [&quot;&lt;/span&gt; + indexSpec.getIndexId() + &lt;span class=&quot;code-quote&quot;&gt;&quot;] adding &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; entry [&quot;&lt;/span&gt;
+        + Bytes.toString(indexUpdate.getRow()) + &lt;span class=&quot;code-quote&quot;&gt;&quot;] &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; row [&quot;&lt;/span&gt;
+        + Bytes.toString(row) + &lt;span class=&quot;code-quote&quot;&gt;&quot;]&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Otherwise you&apos;re paying string creation and then just throwing it all way when running at INFO level.&lt;/p&gt;

&lt;p&gt;Minor: Can you not do putAll below?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(IndexSpecification index : indexes) {
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.indexes.put(index.getIndexId(), index);
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Minor: Missing javadoc on this class&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class ReverseByteArrayComparator &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; WritableComparator&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt; {

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Minor: All data members in IndexSpecification look like they should be final; IndexSpecification looks immutable.&lt;/p&gt;

&lt;p&gt;Minor: When in hbase-land, its better to use HbaseObjectWritable rather than ObjectWritable.  You&apos;ll get a little performance boost.  You&apos;ll likely have to add new codes for your new classes; see head of HbaseObjectWritable.&lt;/p&gt;

&lt;p&gt;On above, the minor&apos;s are not important.  Just FYI.  I do think that removing the comparator important because could propagate wrong impression &amp;#8211; that an table-specific comparator is a possibility (unless you know something I don&apos;t).&lt;/p&gt;

&lt;p&gt;Thanks Clint.&lt;/p&gt;</comment>
                            <comment id="12644413" author="apurtell" created="Fri, 31 Oct 2008 19:51:06 +0000"  >&lt;p&gt;We have a maintenance window this afternoon. I&apos;ll take the opportunity to set this up for indefinite use on our &quot;big&quot; 25 node cluster. There&apos;s one thing we do in particular where I&apos;d like to change the result ordering of a scanner using a secondary index. Will report back if there are any problems.&lt;/p&gt;</comment>
                            <comment id="12644456" author="apurtell" created="Fri, 31 Oct 2008 23:01:52 +0000"  >&lt;p&gt;o.a.h.h.client.tableindexed.IndexScanner.ScannerWrapper needs next(int).&lt;/p&gt;

&lt;p&gt;A suggestion:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

    /** {@inheritDoc} */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; RowResult next() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        RowResult[] result = next(1);
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (result == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || result.length &amp;lt; 1)
          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result[0];
    }

    /** {@inheritDoc} */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; RowResult[] next(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; nbRows) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      RowResult[] indexResult = indexScanner.next(nbRows);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (indexResult == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
      }
      RowResult[] result = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RowResult[indexResult.length];
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; indexResult.length; i++) {
        RowResult row = indexResult[i];
        &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] baseRow = row.get(INDEX_BASE_ROW_COLUMN).getValue();
        LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;next index row [&quot;&lt;/span&gt; + Bytes.toString(row.getRow())
            + &lt;span class=&quot;code-quote&quot;&gt;&quot;] -&amp;gt; base row [&quot;&lt;/span&gt; + Bytes.toString(baseRow) + &lt;span class=&quot;code-quote&quot;&gt;&quot;]&quot;&lt;/span&gt;);
        HbaseMapWritable&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], Cell&amp;gt; colValues =
          &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HbaseMapWritable&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], Cell&amp;gt;();
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (columns != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; columns.length &amp;gt; 0) {
          LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Going to base table &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; remaining columns&quot;&lt;/span&gt;);
          RowResult baseResult = IndexedTable.&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getRow(baseRow, columns);
          colValues.putAll(baseResult);
        }
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Entry&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], Cell&amp;gt; entry : row.entrySet()) {
          &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] col = entry.getKey();
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (HStoreKey.matchingFamily(INDEX_COL_FAMILY_NAME, col)) {
            &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
          }
          colValues.put(col, entry.getValue());
        }
        result[i] = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RowResult(baseRow, colValues);
      }
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result;
    }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12644462" author="apurtell" created="Fri, 31 Oct 2008 23:34:20 +0000"  >&lt;p&gt;Another suggestion is to remove the @inheritDoc tag at o.a.h.h.client.tableindexed.IndexedTable.java:56 to fix a javadoc warning. &lt;/p&gt;</comment>
                            <comment id="12648203" author="stack" created="Mon, 17 Nov 2008 17:44:06 +0000"  >&lt;p&gt;Moving out of 0.19 unless Clint shows up soon addressing Andrew&apos;s feedback.&lt;/p&gt;</comment>
                            <comment id="12648214" author="apurtell" created="Mon, 17 Nov 2008 17:57:52 +0000"  >&lt;p&gt;Attached updated patch that addresses all of my comments. I&apos;ve been running this privately for some time without problems.&lt;/p&gt;</comment>
                            <comment id="12648216" author="apurtell" created="Mon, 17 Nov 2008 17:58:34 +0000"  >&lt;p&gt;I can walk this through. &lt;/p&gt;</comment>
                            <comment id="12648217" author="stack" created="Mon, 17 Nov 2008 18:03:13 +0000"  >&lt;p&gt;Want to commit it to TRUNK then Andrew?&lt;br/&gt;
St.Ack&lt;/p&gt;</comment>
                            <comment id="12648244" author="apurtell" created="Mon, 17 Nov 2008 18:49:29 +0000"  >&lt;p&gt;Committed to TRUNK. Passed all local tests.&lt;/p&gt;</comment>
                            <comment id="12648809" author="stack" created="Tue, 18 Nov 2008 23:28:54 +0000"  >&lt;p&gt;Andrew, I want to backout the stuff around comparators.  I made a comment above but the committed patch still had them in there.  They don&apos;t work, is my understanding, and as is, they are responsible for about 18% of the allocations on jgrays HRS.&lt;/p&gt;</comment>
                            <comment id="12648810" author="stack" created="Tue, 18 Nov 2008 23:29:16 +0000"  >&lt;p&gt;Reopening until I back out comparators.&lt;/p&gt;</comment>
                            <comment id="12648819" author="stack" created="Tue, 18 Nov 2008 23:51:28 +0000"  >&lt;p&gt;Backed out custom comparators; resolving issue again.&lt;/p&gt;</comment>
                            <comment id="12648820" author="apurtell" created="Tue, 18 Nov 2008 23:53:18 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="12648828" author="apurtell" created="Wed, 19 Nov 2008 00:09:40 +0000"  >&lt;p&gt;Third time will be the charm. We took out the custom comparators because we can see them acting as a tax on the rest of HRS: 5-10% CPU, 20% of all object allocation (on a jgray server). But the custom comparators are used to reverse a test to provide descending sort orders. For now we&apos;ll degrade the secondary index capability somewhat by fixing it up to work without the custom comparators, hence no descending sort ordering. &lt;/p&gt;</comment>
                            <comment id="12648837" author="clint.morgan" created="Wed, 19 Nov 2008 00:26:33 +0000"  >&lt;p&gt;Thanks for pushing this through guys, I&apos;ve been working on some other things. Sorry for lack of response...&lt;/p&gt;

&lt;p&gt;WRT the custom comparator &quot;tax&quot;. Was this with the latest version of the patch? You pay the tax even when no customer comparator is set? Because I noticed a similar issue in older version of patch and fixed it (in 17/Oct/08 patch).&lt;/p&gt;

&lt;p&gt;But anyway, that impl of custom comparators does not work due to META issues that stack mentioned above...&lt;/p&gt;</comment>
                            <comment id="12648844" author="apurtell" created="Wed, 19 Nov 2008 00:46:39 +0000"  >&lt;p&gt;Committed fixes as described in previous comment to trunk. Passes all local tests.&lt;/p&gt;</comment>
                            <comment id="12648849" author="stack" created="Wed, 19 Nov 2008 00:52:36 +0000"  >&lt;p&gt;Thanks for checking in Clint.  Thanks for fixing Andrew.&lt;/p&gt;</comment>
                            <comment id="13064259" author="ekoontz" created="Wed, 13 Jul 2011 00:47:26 +0000"  >&lt;p&gt;related to the comment that stack added on 25/Sep/08 21:56 &lt;/p&gt;

&lt;p&gt;&quot;talk on the list has made mention of secondary indices done using lucene rather than keeping a second table.&quot;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12498553">HBASE-3529</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12397399">HBASE-661</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12404084">HBASE-880</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12394076" name="hbase-883.patch" size="61145" author="apurtell" created="Mon, 17 Nov 2008 17:57:52 +0000"/>
                            <attachment id="12392758" name="hbase-883.patch" size="62813" author="clint.morgan" created="Thu, 23 Oct 2008 22:09:09 +0000"/>
                            <attachment id="12392367" name="hbase-883.patch" size="60593" author="clint.morgan" created="Fri, 17 Oct 2008 18:02:31 +0000"/>
                            <attachment id="12391297" name="hbase-883.patch" size="63651" author="clint.morgan" created="Wed, 1 Oct 2008 16:54:52 +0000"/>
                            <attachment id="12391242" name="hbase-883.patch" size="63653" author="clint.morgan" created="Tue, 30 Sep 2008 23:26:39 +0000"/>
                            <attachment id="12391034" name="hbase-883.patch" size="58924" author="clint.morgan" created="Fri, 26 Sep 2008 17:38:54 +0000"/>
                            <attachment id="12390039" name="hbase-883.patch" size="41887" author="clint.morgan" created="Fri, 12 Sep 2008 22:11:53 +0000"/>
                            <attachment id="12394201" name="secondary.patch" size="3359" author="stack" created="Tue, 18 Nov 2008 23:28:54 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 25 Sep 2008 21:56:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31886</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 23 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ha1b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>98888</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>