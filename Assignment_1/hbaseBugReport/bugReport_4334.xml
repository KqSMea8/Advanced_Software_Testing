<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:17:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4334/HBASE-4334.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4334] HRegion.get never validates row</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4334</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;If a client gets confused (possibly by a hole in .META., see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4333&quot; title=&quot;Client does not check for holes in .META.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4333&quot;&gt;&lt;del&gt;HBASE-4333&lt;/del&gt;&lt;/a&gt;), it may send a request to the wrong region.  Paths through put, delete, incrementColumnValue, and checkAndMutate all call checkRow either directly or indirectly (through getLock).  But get apparently does not.  This can result in returning an incorrect empty result instead of a WrongRegionException.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12521499">HBASE-4334</key>
            <summary>HRegion.get never validates row</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="jpallas">Joe Pallas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Sep 2011 21:47:36 +0000</created>
                <updated>Fri, 20 Nov 2015 11:54:48 +0000</updated>
                            <resolved>Tue, 4 Oct 2011 22:32:41 +0000</resolved>
                                    <version>0.90.4</version>
                                    <fixVersion>0.92.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13118290" author="lhofhansl" created="Fri, 30 Sep 2011 19:07:48 +0000"  >&lt;p&gt;I think the best way here is to check the startRow in HRegion.getScanner(...) that would cover gets and scans. No scan can reach a region server without the startRow set.&lt;/p&gt;</comment>
                            <comment id="13118325" author="stack" created="Fri, 30 Sep 2011 19:39:29 +0000"  >&lt;p&gt;Sounds good Lars.  I bet that this bubbles up a bunch of complaints, complaints that are legit but that we just rode over clueless in the past.&lt;/p&gt;</comment>
                            <comment id="13118600" author="lhofhansl" created="Sat, 1 Oct 2011 00:35:43 +0000"  >&lt;p&gt;Simple patch with a simple test.&lt;br/&gt;
Not happy that tests call into HRegion with Scan without startKey set. C&apos;est la vie.&lt;/p&gt;</comment>
                            <comment id="13118668" author="stack" created="Sat, 1 Oct 2011 04:55:29 +0000"  >&lt;p&gt;This bit looks strange to me Lars:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// start row can be empty in tests, so allow &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; that
&lt;/span&gt;+    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] startRow = scan.getStartRow();
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (startRow != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !Bytes.equals(startRow, HConstants.EMPTY_START_ROW)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Its like tests get dispensation.  Should we fix the tests?&lt;/p&gt;

&lt;p&gt;Otherwise patch looks good to me.&lt;/p&gt;</comment>
                            <comment id="13118689" author="lhofhansl" created="Sat, 1 Oct 2011 06:00:20 +0000"  >&lt;p&gt;Sigh... I think you&apos;re right. Probably a lot of tests to fix.&lt;/p&gt;</comment>
                            <comment id="13118691" author="lhofhansl" created="Sat, 1 Oct 2011 06:19:24 +0000"  >&lt;p&gt;Actually it looks like only a single test was misbehaving... Fixed that. Now.&lt;br/&gt;
Will run the whole suite and then post the new patch.&lt;/p&gt;</comment>
                            <comment id="13118692" author="lhofhansl" created="Sat, 1 Oct 2011 06:25:08 +0000"  >&lt;p&gt;New patch... Running tests now.&lt;/p&gt;</comment>
                            <comment id="13118918" author="lhofhansl" created="Sat, 1 Oct 2011 22:05:46 +0000"  >&lt;p&gt;In turns out that coprocessor can - legitimately - call HRegion.getScanner(Scan) without specifying a startkey. That works because coprocessors are already region scoped. AggregateImplementation does that for example.&lt;/p&gt;

&lt;p&gt;There are various alternatives:&lt;br/&gt;
1. add getScanner(..., boolean check) that avoid that check. Coprocessors can then call that method.&lt;br/&gt;
2. Force coprocessor to set the start key. (i.e. just fail here too)&lt;br/&gt;
3. Handle gets and scans separately. Intercept scanners in HRegionServer.openScanner and do the check there.&lt;br/&gt;
4. Have RegionCoprocessorInterface return a wrapper of HRegion, where getScanner(...) would call would call an internal method avoiding the check. This would require extracting an interface for HRegion. Or maybe a RegionServices interface.&lt;br/&gt;
5. Just check whether the scanner intersects (includes containing) the region. Works fine for gets. Won&apos;t catch all cases for scans.&lt;/p&gt;

&lt;p&gt;#1 and #2 are not obvious to the implementer of a coprocessor.&lt;/p&gt;

&lt;p&gt;Leaning towards #3.&lt;/p&gt;</comment>
                            <comment id="13118920" author="yuzhihong@gmail.com" created="Sat, 1 Oct 2011 22:14:30 +0000"  >&lt;p&gt;+1 on option 3 above. &lt;/p&gt;</comment>
                            <comment id="13118942" author="lhofhansl" created="Sun, 2 Oct 2011 01:50:08 +0000"  >&lt;p&gt;Ran all tests. Got this:&lt;br/&gt;
Tests run: 1021, Failures: 0, Errors: 0, Skipped: 21&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; BUILD ERROR&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Failure or timeout&lt;/p&gt;

&lt;p&gt;So all passed, but something is hanging.&lt;br/&gt;
jStack shows various shutdown related issued. So I do not think this is related to this change.&lt;/p&gt;</comment>
                            <comment id="13118943" author="lhofhansl" created="Sun, 2 Oct 2011 01:50:37 +0000"  >&lt;p&gt;This is the change.&lt;/p&gt;</comment>
                            <comment id="13118948" author="yuzhihong@gmail.com" created="Sun, 2 Oct 2011 01:59:58 +0000"  >&lt;p&gt;Usually shutdown hook should exit after certain time.&lt;br/&gt;
It would be helpful to know what processes don&apos;t exit after prolonged period of time.&lt;br/&gt;
Patch v3 looks good.&lt;/p&gt;</comment>
                            <comment id="13119458" author="lhofhansl" created="Mon, 3 Oct 2011 18:16:11 +0000"  >&lt;p&gt;There&apos;s a thread on the mailing about a similar issue:&lt;br/&gt;
we are experiencing a strange behavior in some tests we are currently performing. What we are seeing is that scans on a table that is being written to at the same time sometimes end prematurely, with no error. This seems to be heavily dependent on the write pattern.&lt;/p&gt;

&lt;p&gt;We&apos;ve been able to reproduce the issue with the standard hbase tools:&lt;/p&gt;

&lt;p&gt;in a terminal run:&lt;/p&gt;

&lt;p&gt;OLDV=0; OLDT=0; while true; do NEWV=`hbase shell count_testtable | head -1 | cut -d&apos; &apos; -f1`; NEWT=`date +%s`; echo $NEWV &quot; -&amp;gt; &quot; $(((NEWV - OLDV) / (NEWT - OLDT))) &quot;msg/s&quot;; OLDV=$NEWV; OLDT=$NEWT; done&lt;/p&gt;

&lt;p&gt;where the contents of the file count_testtable are:&lt;/p&gt;

&lt;p&gt;count &apos;TestTable&apos;, INTERVAL =&amp;gt; 100000000, CACHE =&amp;gt; 10000&lt;br/&gt;
exit&lt;/p&gt;

&lt;p&gt;This counts the rows in the TestTable repeatedly showing the number of rows and the delta rows per second inserted. In the hbase shell count is implemented as a full scan with a filter on the row key.&lt;/p&gt;

&lt;p&gt;Meanwhile, in another terminal do:&lt;/p&gt;

&lt;p&gt;hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --rows=20000 randomWrite 5&lt;/p&gt;

&lt;p&gt;and when over:&lt;/p&gt;

&lt;p&gt;hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --rows=20000 sequentialWrite 5&lt;/p&gt;

&lt;p&gt;On the scan terminal we are seeing results similar to:&lt;/p&gt;

&lt;p&gt;0  -&amp;gt;  0 msg/s&lt;br/&gt;
45552  -&amp;gt;  5694 msg/s &amp;lt;=== randomWrite starts&lt;br/&gt;
63284  -&amp;gt;  2955 msg/s&lt;br/&gt;
63284  -&amp;gt;  0 msg/s  &amp;lt;=== randomWrite ends&lt;br/&gt;
58829  -&amp;gt;  -636 msg/s &amp;lt;=== sequentialWrite starts&lt;br/&gt;
88764  -&amp;gt;  3741 msg/s&lt;br/&gt;
100000  -&amp;gt;  802 msg/s&lt;br/&gt;
100000  -&amp;gt;  0 msg/s &amp;lt;=== sequentialWrite ends&lt;/p&gt;

&lt;p&gt;As you can see in the fifth row the count is lower than expected (resulting on a negative inserts/sec).&lt;/p&gt;

&lt;p&gt;You may need to try a couple of times or tweak the number of rows to insert to see the problem.&lt;/p&gt;</comment>
                            <comment id="13119459" author="lhofhansl" created="Mon, 3 Oct 2011 18:16:49 +0000"  >&lt;p&gt;Wanna commit this Ted?&lt;/p&gt;</comment>
                            <comment id="13119490" author="stack" created="Mon, 3 Oct 2011 18:43:57 +0000"  >&lt;p&gt;+1 on patch&lt;/p&gt;</comment>
                            <comment id="13119491" author="stack" created="Mon, 3 Oct 2011 18:44:16 +0000"  >&lt;p&gt;Should this go into 0.90 too?&lt;/p&gt;</comment>
                            <comment id="13119586" author="lhofhansl" created="Mon, 3 Oct 2011 20:45:24 +0000"  >&lt;p&gt;Probably... Maybe let it bake in 0.92/trunk for a bit?&lt;/p&gt;</comment>
                            <comment id="13119710" author="yuzhihong@gmail.com" created="Mon, 3 Oct 2011 22:52:27 +0000"  >&lt;p&gt;Integrated to 0.92 and TRUNK.&lt;/p&gt;

&lt;p&gt;Thanks for the patch Lars.&lt;/p&gt;

&lt;p&gt;Thanks for the review Michael.&lt;/p&gt;</comment>
                            <comment id="13119741" author="hudson" created="Mon, 3 Oct 2011 23:25:27 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #41 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/41/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/41/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4334&quot; title=&quot;HRegion.get never validates row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4334&quot;&gt;&lt;del&gt;HBASE-4334&lt;/del&gt;&lt;/a&gt; HRegion.get never validates row (Lars H)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13120536" author="stack" created="Tue, 4 Oct 2011 22:32:42 +0000"  >&lt;p&gt;Resolving.  Was applied to 0.92 branch and to trunk.  Thanks Lars.&lt;/p&gt;</comment>
                            <comment id="15016323" author="lars_francke" created="Fri, 20 Nov 2015 11:54:48 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12497269" name="4334-v2.txt" size="3486" author="lhofhansl" created="Sat, 1 Oct 2011 06:25:07 +0000"/>
                            <attachment id="12497388" name="4334-v3.txt" size="4508" author="lhofhansl" created="Sun, 2 Oct 2011 01:50:37 +0000"/>
                            <attachment id="12497249" name="4334.txt" size="3312" author="lhofhansl" created="Sat, 1 Oct 2011 00:35:43 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 30 Sep 2011 19:07:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27264</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hqhb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101552</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>