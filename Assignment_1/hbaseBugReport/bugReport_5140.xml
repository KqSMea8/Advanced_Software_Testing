<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:25:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5140/HBASE-5140.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5140] TableInputFormat subclass to allow N number of splits per region during MR jobs</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5140</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In regards to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5138&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-5138&lt;/a&gt; I am working on a patch for the TableInputFormat class that overrides getSplits in order to generate N number of splits per regions and/or N number of splits per job. The idea is to convert the startKey and endKey for each region from byte[] to BigDecimal, take the difference, divide by N, convert back to byte[] and generate splits on the resulting values. Assuming your keys are fully distributed this should generate splits at nearly the same number of rows per split. Any suggestions on this issue are welcome.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12537571">HBASE-5140</key>
            <summary>TableInputFormat subclass to allow N number of splits per region during MR jobs</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jbwyme">Josh Wymer</reporter>
                        <labels>
                            <label>mapreduce</label>
                            <label>split</label>
                    </labels>
                <created>Fri, 6 Jan 2012 18:59:39 +0000</created>
                <updated>Thu, 12 Jun 2014 04:11:11 +0000</updated>
                            <resolved>Sun, 8 Jun 2014 21:40:57 +0000</resolved>
                                    <version>0.90.4</version>
                                                    <component>mapreduce</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                    <timeoriginalestimate seconds="259200">72h</timeoriginalestimate>
                            <timeestimate seconds="259200">72h</timeestimate>
                                        <comments>
                            <comment id="13181536" author="zhihyu@ebaysf.com" created="Fri, 6 Jan 2012 19:17:11 +0000"  >&lt;p&gt;We should consider the amount of computing involved in the map/reduce tasks.&lt;br/&gt;
The assumption expressed in the description may not be satisfied in various scenarios.&lt;/p&gt;

&lt;p&gt;I think we can provide abstraction over key space partitioning by introducing an interface.&lt;br/&gt;
The BigDecimal idea would be one implementation.&lt;/p&gt;</comment>
                            <comment id="13181550" author="jbwyme" created="Fri, 6 Jan 2012 19:33:02 +0000"  >&lt;p&gt;We also talked about other methods such as using the first 8 bytes of the keys and converting to a long. This could indeed be solved by an interface.&lt;/p&gt;</comment>
                            <comment id="13181565" author="jbwyme" created="Fri, 6 Jan 2012 20:11:33 +0000"  >&lt;p&gt;One glaring issue is the lack of start &amp;amp; end keys for one region tables. To get the start key we could do a quick scan of the first row and get the key. For the last region of a table, I&apos;m not sure how we&apos;ll handle determining the end key other than setting it to the max size of whatever data type (e.g. long) we are using for the split calculations. Any suggestions other than this?&lt;/p&gt;</comment>
                            <comment id="13181572" author="zhihyu@ebaysf.com" created="Fri, 6 Jan 2012 20:31:59 +0000"  >&lt;p&gt;I suggest utilizing this method in HTable:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Pair&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][],&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][]&amp;gt; getStartEndKeys() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;i.e. start and end keys returned by the above method are passed to the splitter interface.&lt;/p&gt;</comment>
                            <comment id="13181579" author="jbwyme" created="Fri, 6 Jan 2012 20:49:54 +0000"  >&lt;p&gt;Correct but for example on a table with one region, getStartEndKeys() returns two empty byte[]. The last region (or only region) for the table will return empty byte[] as the end key allowing the scan to scan to the end of the table. Therefore, we don&apos;t know the upper bound byte[] to use in order to determine the long (or int, etc) value we want to use for split calculations. So we must either have an efficient way to get the last key in this case or arbitrarily set the long to it&apos;s max value (since in any case nothing could be higher) and use that number to make the calculations. This obviously won&apos;t work for unbound data types like BigDecimal and is a partial solution at best.&lt;/p&gt;</comment>
                            <comment id="13181582" author="mingma" created="Fri, 6 Jan 2012 20:55:20 +0000"  >&lt;p&gt;Is it the same as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4063&quot; title=&quot;Improve TableInputFormat to allow application to configure the number of mappers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4063&quot;&gt;HBASE-4063&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13181604" author="zhihyu@ebaysf.com" created="Fri, 6 Jan 2012 21:07:36 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/MAPREDUCE-1220&quot; title=&quot;Implement an in-cluster LocalJobRunner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAPREDUCE-1220&quot;&gt;&lt;del&gt;MAPREDUCE-1220&lt;/del&gt;&lt;/a&gt;, referenced in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4063&quot; title=&quot;Improve TableInputFormat to allow application to configure the number of mappers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4063&quot;&gt;HBASE-4063&lt;/a&gt;, has been resolved against hadoop 0.23.&lt;br/&gt;
So we cannot use it at the moment.&lt;/p&gt;

&lt;p&gt;@Josh:&lt;br/&gt;
I believe the single region scenario is the degenerate case.&lt;br/&gt;
Using max value for long should be fine for that case.&lt;br/&gt;
The best practice is to presplit when creating the table.&lt;/p&gt;</comment>
                            <comment id="13182876" author="jdcryans" created="Mon, 9 Jan 2012 22:35:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;The best practice is to presplit when creating the table.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this jira is valid for cases where the regions are so big (GBs) that one would benefit from having multiple mappers per region. &lt;/p&gt;</comment>
                            <comment id="13182923" author="jbwyme" created="Mon, 9 Jan 2012 23:26:55 +0000"  >&lt;p&gt;This change introduces two new properties: hbase.mapreduce.splitsPerRegion and hbase.mapreduce.splitKeyBytePrecision. &lt;/p&gt;

&lt;p&gt;Setting hbase.mapreduce.splitsPerRegion to anything &amp;gt; 1 will result in each region being split into that number of splits. If nothing is passed or 1 is passed, the TableInputFormat will execute as usual (one split per region). &lt;/p&gt;

&lt;p&gt;The splitKeyBytePrecision determines the byte length (64 by default) to use when generating a max value byte array in the case that the region&apos;s end key is of zero length (e.g. the region that contains the last row). This is required to try and &quot;guess&quot; at split distributions for that region. If keys are fully distributed, this should result in fairly equal splits.&lt;/p&gt;

&lt;p&gt;The Bytes.split utility is used to split the range between the start and end keys n number of times.&lt;/p&gt;</comment>
                            <comment id="13182930" author="hadoopqa" created="Mon, 9 Jan 2012 23:33:32 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12509974/Added_functionality_to_split_n_times_per_region_on_mapreduce_jobs.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12509974/Added_functionality_to_split_n_times_per_region_on_mapreduce_jobs.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/711//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/711//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13183070" author="jbwyme" created="Tue, 10 Jan 2012 04:45:27 +0000"  >&lt;p&gt;Another try at the patch with a unit test included and a method refactored. Used hbase trunk to build this patch.&lt;/p&gt;</comment>
                            <comment id="13183087" author="hadoopqa" created="Tue, 10 Jan 2012 05:27:42 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510006/Added_functionality_to_TableInputFormat_that_allows_splitting_of_regions.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510006/Added_functionality_to_TableInputFormat_that_allows_splitting_of_regions.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 80 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestTableMapReduce&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/712//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/712//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/712//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/712//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/712//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/712//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13183109" author="jbwyme" created="Tue, 10 Jan 2012 06:29:54 +0000"  >&lt;p&gt;Added check for null result in scan for first row and closed the scanner in a finally.&lt;/p&gt;</comment>
                            <comment id="13183119" author="hadoopqa" created="Tue, 10 Jan 2012 07:07:13 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12510012/Added_functionality_to_TableInputFormat_that_allows_splitting_of_regions.patch.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12510012/Added_functionality_to_TableInputFormat_that_allows_splitting_of_regions.patch.1&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -151 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 80 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/713//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/713//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/713//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/713//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/713//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/713//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13220725" author="rajesh.balamohan" created="Fri, 2 Mar 2012 06:37:02 +0000"  >&lt;p&gt;@Josh - Thanks for this patch.&lt;/p&gt;

&lt;p&gt;for loop within getSplits() generates the splits with the help of generateRegionSplits(). However, the returned list&amp;lt;InputSplit&amp;gt; is not added back to &quot;List&amp;lt;InputSplit&amp;gt; splits = new ArrayList&amp;lt;InputSplit&amp;gt;(keys.getFirst().length);&quot;&lt;/p&gt;
</comment>
                            <comment id="14021391" author="apurtell" created="Sun, 8 Jun 2014 21:40:57 +0000"  >&lt;p&gt;Stale issue. Reopen if still relevant.&lt;/p&gt;</comment>
                            <comment id="14026369" author="dkoch" created="Tue, 10 Jun 2014 11:59:12 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Stale issue. Reopen if still relevant.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why is this deemed irrelevant? Is there new functionality in recent HBase versions which supersedes this class? By the way, in method &lt;tt&gt;getMaxByteArrayValue&lt;/tt&gt; the array value assignment should read:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
bytes[i] = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;) 0xff;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14028806" author="apurtell" created="Thu, 12 Jun 2014 04:11:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;Why is this deemed irrelevant?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No activity since March 2012. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12512914">HBASE-4063</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12510006" name="Added_functionality_to_TableInputFormat_that_allows_splitting_of_regions.patch" size="8991" author="jbwyme" created="Tue, 10 Jan 2012 04:45:27 +0000"/>
                            <attachment id="12510012" name="Added_functionality_to_TableInputFormat_that_allows_splitting_of_regions.patch.1" size="9554" author="jbwyme" created="Tue, 10 Jan 2012 06:29:54 +0000"/>
                            <attachment id="12509974" name="Added_functionality_to_split_n_times_per_region_on_mapreduce_jobs.patch" size="7157" author="jbwyme" created="Mon, 9 Jan 2012 23:27:41 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Jan 2012 19:17:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>223077</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 27 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hsuv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101937</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Used the 0.90 branch for the patch but code looks compatible in trunk as well (with one deprecated method)</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>mapreduce splits tableinputformat</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>