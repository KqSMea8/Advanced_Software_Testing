<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:48:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7725/HBASE-7725.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7725] Add ability to create custom compaction request</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7725</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;You can request that a compaction be started, but you can&apos;t be sure when that compaction request completes. This is a simple update to the CompactionRequest interface and the compact-split thread on the RS that doesn&apos;t actually impact the RS exposed interface.&lt;/p&gt;

&lt;p&gt;This is particularly useful for CPs so they can control starting/running a compaction.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Update - Better description (3/20/13):&lt;/b&gt; &lt;br/&gt;
Enable coprocessors to submit custom compaction requests. &lt;/p&gt;

&lt;p&gt;This compaction request is used (if not null) through the entire compaction process. If no custom compaction request is submitted (its null - the normal case) then we we build a new compaction request via the usual mechanisms in the Store. &lt;/p&gt;

&lt;p&gt;Adding this mechanism is particularly useful when &apos;special&apos; compactions are desired and you want to do things like: only change certain files for a particularly requested compaction or follow a single compaction through the queue.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12630058">HBASE-7725</key>
            <summary>Add ability to create custom compaction request</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jesse_yates">Jesse Yates</assignee>
                                    <reporter username="jesse_yates">Jesse Yates</reporter>
                        <labels>
                    </labels>
                <created>Thu, 31 Jan 2013 01:32:02 +0000</created>
                <updated>Sat, 23 Mar 2013 04:53:22 +0000</updated>
                            <resolved>Thu, 28 Feb 2013 00:33:52 +0000</resolved>
                                    <version>0.94.6</version>
                    <version>0.95.0</version>
                                    <fixVersion>0.94.6</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>Compaction</component>
                    <component>Coprocessors</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13567236" author="jesse_yates" created="Thu, 31 Jan 2013 01:35:43 +0000"  >&lt;p&gt;Attaching version for 0.94. I&apos;ll do trunk if people are onboard &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13567321" author="yuzhihong@gmail.com" created="Thu, 31 Jan 2013 03:42:12 +0000"  >&lt;p&gt;Can you show us how the latch would be used ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13567324" author="jesse_yates" created="Thu, 31 Jan 2013 03:55:23 +0000"  >&lt;p&gt;Attaching simple example file of using the finished latch on a compactionRequest. Essentially, I want to trigger a compaction and make sure I know when it finishes because I want to setup a special compaction policy, but I don&apos;t know when the compaction will run or which one is running or if the one I requested is done yet.&lt;/p&gt;

&lt;p&gt;I had considered making &quot;compactRegionAndBlockUntilDone&quot; a method on HRegionServer that we could just call, but that meant updating RegionServerServices and slightly reworking the calls there that request compactions to just drop the return values (keeping the async nature). So we could move it in there, but since its a small case, I don&apos;t know if its worth it yet &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13567343" author="yuzhihong@gmail.com" created="Thu, 31 Jan 2013 04:17:22 +0000"  >&lt;p&gt;Example makes sense to me.&lt;/p&gt;</comment>
                            <comment id="13567445" author="lhofhansl" created="Thu, 31 Jan 2013 08:01:02 +0000"  >&lt;p&gt;Lgtm&lt;/p&gt;</comment>
                            <comment id="13569268" author="lhofhansl" created="Fri, 1 Feb 2013 23:50:15 +0000"  >&lt;p&gt;Discussing this a bit further with Jesse. In addition to this for our use case it would be extremely helpful if we could attach some meta-data (or attributes) to a CompactionRequest and have that available in the coprocessor hooks. At least in preCompactScannerOpen, but probably also in preCompact, postCompact, preCompactSelection, postCompactSelection.&lt;/p&gt;

&lt;p&gt;(The goal is to custom compaction instances in the compaction queue, seems easiest to do this with coprocessors this way.)&lt;/p&gt;</comment>
                            <comment id="13569271" author="lhofhansl" created="Fri, 1 Feb 2013 23:50:52 +0000"  >&lt;p&gt;And we&apos;d need that in 0.94 if we wanted to go that route.&lt;/p&gt;</comment>
                            <comment id="13569295" author="yuzhihong@gmail.com" created="Sat, 2 Feb 2013 00:18:31 +0000"  >&lt;p&gt;Sounds reasonable.&lt;/p&gt;

&lt;p&gt;This would go to 0.94.6, right ?&lt;/p&gt;</comment>
                            <comment id="13569308" author="jesse_yates" created="Sat, 2 Feb 2013 00:32:13 +0000"  >&lt;p&gt;Attaching patch of what it would look like with also passing along attributes.&lt;/p&gt;</comment>
                            <comment id="13569327" author="yuzhihong@gmail.com" created="Sat, 2 Feb 2013 00:51:59 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; List&amp;lt;CompactionRequest&amp;gt; requestCompaction(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HRegion r, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; why,
+      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; attribute) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Parameter name should be attributes, right ?&lt;/p&gt;

&lt;p&gt;Would the attributes be String or Map ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; List&amp;lt;CompactionRequest&amp;gt; requestCompaction(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HRegion r, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; why,
+      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; p, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; attributes) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+    List&amp;lt;CompactionRequest&amp;gt; requests = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;CompactionRequest&amp;gt;(r.getStores().size());
     &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(Store s : r.getStores().values()) {
-      requestCompaction(r, s, why, p);
+      CompactionRequest cr = requestCompaction(r, s, why, p, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Looks like attributes parameter isn&apos;t passed on.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; The created {@link CompactionRequest CompactionRequests} or an empty list &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; no
+   *         compactions were started
    * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
    */
-  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void requestCompaction(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HRegion r, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; why) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;CompactionRequest&amp;gt; requestCompaction(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HRegion r, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; why)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think the requests would be queued. So please modify the @return.&lt;/p&gt;

&lt;p&gt;It would be nice to put trunk patch on review board.&lt;/p&gt;</comment>
                            <comment id="13569330" author="jesse_yates" created="Sat, 2 Feb 2013 00:59:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;Parameter name should be attributes, right ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yup.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Would the attributes be String or Map ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;String will lead to munging and map will often be too heavy weight. I don&apos;t want to force it - this is an internal hook, so you know what you are passing - you can cast it when you get it. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Looks like attributes parameter isn&apos;t passed on.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good catch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think the requests would be queued. So please modify the @return.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Definitely.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It would be nice to put trunk patch on review board.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Its, unfortunately, going to be more than a little bit different. But yeah, I&apos;ll post one up soon&lt;/p&gt;</comment>
                            <comment id="13569331" author="jesse_yates" created="Sat, 2 Feb 2013 00:59:35 +0000"  >&lt;p&gt;Attaching patch addressing Ted&apos;s comments and catching a couple hooks I missed the first time around.&lt;/p&gt;</comment>
                            <comment id="13571791" author="jesse_yates" created="Tue, 5 Feb 2013 22:10:32 +0000"  >&lt;p&gt;Attaching trunk patch and on review board: &lt;a href=&quot;https://reviews.apache.org/r/9312/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/9312/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13572014" author="jesse_yates" created="Wed, 6 Feb 2013 01:10:37 +0000"  >&lt;p&gt;Updated trunk patch. I&apos;d like to commit this soon (end of the week at the latest), unless there are any objections.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13572225" author="stack" created="Wed, 6 Feb 2013 06:51:42 +0000"  >&lt;p&gt;Patch looks good to me.  Mr Component Chief &lt;span class=&quot;error&quot;&gt;&amp;#91;~adp&amp;#93;&lt;/span&gt;, what you reckon sir?&lt;/p&gt;</comment>
                            <comment id="13573767" author="sershe" created="Thu, 7 Feb 2013 18:46:05 +0000"  >&lt;p&gt;left some non-blocking comments in /r/. I am assuming Stack meant &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; in the last comment? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13573792" author="apurtell" created="Thu, 7 Feb 2013 19:07:33 +0000"  >&lt;p&gt;I think downcasting is a code smell and should be avoided unless necessary. &lt;/p&gt;

&lt;p&gt;This is not necessarily better: What about passing the CompactionRequest through the CP hooks and making it so the CompactionRequest type can be extended?&lt;/p&gt;</comment>
                            <comment id="13573795" author="jesse_yates" created="Thu, 7 Feb 2013 19:09:12 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt;! Since I&apos;ve got +1s from stack and Ted (and it looks like &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sershe&quot; class=&quot;user-hover&quot; rel=&quot;sershe&quot;&gt;Sergey Shelukhin&lt;/a&gt; blessing too?), I&apos;m planning on committing v1 to trunk and 0.94 tonight, unless there are any objections.&lt;/p&gt;</comment>
                            <comment id="13573796" author="apurtell" created="Thu, 7 Feb 2013 19:10:12 +0000"  >&lt;p&gt;Fine, -1.&lt;/p&gt;

&lt;p&gt;Consider the above. Then let&apos;s talk.&lt;/p&gt;</comment>
                            <comment id="13573833" author="jesse_yates" created="Thu, 7 Feb 2013 19:32:51 +0000"  >&lt;p&gt;I&apos;d need to control a compaction request from inception to execution. Looking at the way we make compactions, there are the pre/postCompactSelection which would need to get the attributes. Then we could definitely add a hook at the end where we can override the compactionRequest:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
...
&lt;span class=&quot;code-comment&quot;&gt;// everything went better than expected. create a compaction request
&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; pri = getCompactPriority(priority);
ret = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CompactionRequest(region, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, filesToCompact, isMajor, pri,
  compactionAttributes);
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
...
&lt;span class=&quot;code-comment&quot;&gt;// everything went better than expected. create a compaction request
&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; pri = getCompactPriority(priority);
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (region.getCoprocessorHost() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
  ret = region.getCoprocessorHost().preCompactionRequest(region, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, filesToCompact, isMajor, pri, compactionAttributes)
}
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(ret == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;){
ret = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CompactionRequest(region, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, filesToCompact, isMajor, pri, compactionAttributes);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then we&apos;d just have to pass in the compaction request to all the compaction CP hooks, rather than the compactionAttributes object so we can handle special case compaction setup (for methods like preCompactScannerOpen and preCompact). &lt;/p&gt;

&lt;p&gt;So the same overall usage and layout, but we don&apos;t need to modify CompactionRequest and let people add their own finish hooks and store attributes if the want.&lt;/p&gt;

&lt;p&gt;I dig it Andrew. Sound reasonable to everyone else?&lt;/p&gt;</comment>
                            <comment id="13573837" author="apurtell" created="Thu, 7 Feb 2013 19:36:10 +0000"  >&lt;p&gt;I do like it better, thanks for listening, +0.&lt;/p&gt;</comment>
                            <comment id="13573840" author="sershe" created="Thu, 7 Feb 2013 19:39:58 +0000"  >&lt;p&gt;hmm, allowing the user to create compaction requests seems more dangerous to me than having an opaque context/attributes.&lt;br/&gt;
The latter is a common pattern when calling plugins that cannot preserve information across calls.&lt;/p&gt;</comment>
                            <comment id="13573844" author="sershe" created="Thu, 7 Feb 2013 19:42:51 +0000"  >&lt;p&gt;Another alternative, uglier but with more general applicability, is to create some ID for the operation and pass it to coprocessor methods if they belong to the same logical operation. If coprocessor has its own context, it can manage it, for example in a Map.&lt;/p&gt;</comment>
                            <comment id="13573860" author="jesse_yates" created="Thu, 7 Feb 2013 19:54:31 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Another alternative, uglier but with more general applicability, is to create some ID for the operation and pass it to coprocessor methods if they belong to the same logical operation. If coprocessor has its own context, it can manage it, for example in a Map.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This would be far better managed as a set of attributes attached to a CompactionRequest. Generally, you aren&apos;t going to start a compaction from one of the generic RegionObserver methods, so its going to be an Endpoint, which mean another class, so you then need to keep a static Map shared across the classes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;allowing the user to create compaction requests seems more dangerous to me than having an opaque context/attributes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, but CPs are inherently more dangerous. They are there for you people able to futz around with the internals and come with no warranty &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; In our use case, we will probably just subclass the exsiting CompactionRequest and add the things that I added in the attached patches (v0, v1). I think adding this subclass would be a reasonable inclusion, at the least in the hbase-examples module, if not in the standard directories.&lt;/p&gt;</comment>
                            <comment id="13573861" author="apurtell" created="Thu, 7 Feb 2013 19:54:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;allowing the user to create compaction requests seems more dangerous to me than having an opaque context/attributes&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see it as being more powerful, and a bit better structured. This is Coprocessors, dangerous is implied.&lt;/p&gt;</comment>
                            <comment id="13573866" author="sershe" created="Thu, 7 Feb 2013 20:03:01 +0000"  >&lt;p&gt;Hmm, sure. +1. CompactionRequest then also needs InterfaceAudience, and ctor cannot be removed later.&lt;/p&gt;</comment>
                            <comment id="13573870" author="jesse_yates" created="Thu, 7 Feb 2013 20:07:20 +0000"  >&lt;p&gt;Not necessarily - we already have a couple cases where we override an InterfaceAudience.Private. See RegionCoprocessorHost# postScannerOpen(final Scan scan, RegionScanner s), which returns a RegionScanner.&lt;/p&gt;</comment>
                            <comment id="13573871" author="apurtell" created="Thu, 7 Feb 2013 20:10:36 +0000"  >&lt;p&gt;We don&apos;t have consensus on if interface annotations are applicable to coprocessors. I&apos;d be cool with LimitedPrivate(&lt;/p&gt;
{&quot;coprocessors&quot;}
&lt;p&gt;) and Evolving. &lt;/p&gt;</comment>
                            <comment id="13574738" author="sershe" created="Fri, 8 Feb 2013 19:07:18 +0000"  >&lt;p&gt;So, is there consensus on letting coproc to subclass CompactionRequest? I&apos;m curious to look at the code change involved, for some other purpose &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13574742" author="jesse_yates" created="Fri, 8 Feb 2013 19:10:08 +0000"  >&lt;p&gt;That&apos;s what I was thinking - posted an update to RB with what the refactor looks like.&lt;/p&gt;</comment>
                            <comment id="13574969" author="apurtell" created="Fri, 8 Feb 2013 23:59:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;So, is there consensus on letting coproc to subclass CompactionRequest&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13574997" author="sershe" created="Sat, 9 Feb 2013 00:34:27 +0000"  >&lt;p&gt;posted responses on /r/, btw&lt;/p&gt;</comment>
                            <comment id="13578094" author="sershe" created="Thu, 14 Feb 2013 01:54:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jesse_yates&quot; class=&quot;user-hover&quot; rel=&quot;jesse_yates&quot;&gt;Jesse Yates&lt;/a&gt; do you want to commit soonish? I already made some cleanup of compaction request that can cause minor merge, bigger changes are afoot, just want to avoid big conflicts. Thanks!&lt;/p&gt;</comment>
                            <comment id="13578103" author="jesse_yates" created="Thu, 14 Feb 2013 02:18:58 +0000"  >&lt;p&gt;Yeah, I&apos;ll get on it. got a little sidetracked at the office, but I&apos;ll try to post the updated version on RB tonight/tomorrow am. Thanks for the heads up.&lt;/p&gt;</comment>
                            <comment id="13578594" author="jesse_yates" created="Thu, 14 Feb 2013 19:38:09 +0000"  >&lt;p&gt;Attaching updated patch (on trunk + Sergey&apos;s comments). Also posted on RB.&lt;/p&gt;</comment>
                            <comment id="13578934" author="sershe" created="Fri, 15 Feb 2013 04:10:04 +0000"  >&lt;p&gt;I don&apos;t think I understand why we have to  make attributes visible to HBase code.&lt;br/&gt;
For example, when we call this:&lt;br/&gt;
            server.compactSplitThread.requestCompaction(region, store, &quot;Recursive enqueue&quot;, attributes);&lt;br/&gt;
we are inside old CompactionRequest, so we could just pass &quot;this&quot; instead of attributes all the way down, and coproc would get attributes if it needs to. That way HBase code doesn&apos;t even have to know attributes exist inside coproc-subclasses CompactionRequest.&lt;br/&gt;
And coproc has to cast in this case anyway, either CR to subclass, or Object to specific attribute type.&lt;br/&gt;
But, this shouldn&apos;t be blocking, so +1&lt;/p&gt;</comment>
                            <comment id="13579000" author="jesse_yates" created="Fri, 15 Feb 2013 06:55:47 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I don&apos;t think I understand why we have to make attributes visible to HBase code.&lt;br/&gt;
For example, when we call this:&lt;br/&gt;
server.compactSplitThread.requestCompaction(region, store, &quot;Recursive enqueue&quot;, attributes);&lt;br/&gt;
we are inside old CompactionRequest, so we could just pass &quot;this&quot; instead of attributes all the way down, and coproc would get attributes if it needs to. That way HBase code doesn&apos;t even have to know attributes exist inside coproc-subclasses CompactionRequest.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The question to me came down to be whether the re-enque is supposed to be a &apos;new&apos; compaction request or a re-attempt at the same compaction. In the existing code, its a brand new compaction request that just happens to be on the same region and store. &lt;/p&gt;

&lt;p&gt;So, do we pass along the original attributes or do we make it a &apos;system created&apos; compaction, separate from the original request?&lt;/p&gt;

&lt;p&gt;My inclination was to pass the same attributes back along again. Therefore, for example, the CP that creates the CompactionRequest can check the attributes and make a decision as to whether or not it should modify the compaction (&quot;Oh, I already made this request! That means I need to ...&quot;). Likely, you aren&apos;t going to want to do anything again, but this is a bit more logic and knowledge of the compaction architecture than most people are going to want to deal with (&quot;What, why am I getting this request again! The one I ran is done!&quot;). But this is CPs and you are supposed to have the rope to hang yourself &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The flip side is that we consider this a &apos;system&apos; compaction separate from the user requested one and just pass in null attributes. This is nice in that its cleaner (no leaked attributes) and logically is a different operation from the original one that that client started. For instance, suppose the client starts a compaction, but their compaction doesn&apos;t do actually change the number of files. If we have a blocking number of store files we could re-enque that compaction as a regular system operation.&lt;/p&gt;

&lt;p&gt;Thoughts? I could go either way.&lt;/p&gt;</comment>
                            <comment id="13579283" author="apurtell" created="Fri, 15 Feb 2013 16:15:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;Therefore, for example, the CP that creates the CompactionRequest can check the attributes and make a decision as to whether or not it should modify the compaction (&quot;Oh, I already made this request! That means I need to ...&quot;).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Or define a Comparator for CompactionRequest and have the CP extend that too as needed when extending CR?&lt;/p&gt;

&lt;p&gt;Should not need generic Object attributes as parameter to preCompactRequest and may not need generic Object attributes to pre/postCompactSelection if we pass in the nascent CompactionRequest reference there too, but no strong feeling about this either way.&lt;/p&gt;</comment>
                            <comment id="13579286" author="apurtell" created="Fri, 15 Feb 2013 16:18:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;The flip side is that we consider this a &apos;system&apos; compaction separate from the user requested one and just pass in null attributes. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I do think you should avoid having to make this distinction.&lt;/p&gt;</comment>
                            <comment id="13579415" author="jesse_yates" created="Fri, 15 Feb 2013 19:02:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;may not need generic Object attributes to pre/postCompactSelection in if we pass in the nascent CompactionRequest reference there too&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I worry that we will start to pervert the compactionRequest creation logic for what is a relatively rare case - a user requested compaction via a CP (or at least that was the original intent, not sure what everyone will do with this). &lt;/p&gt;

&lt;p&gt;But an interesting idea (and another refactor &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. So instead of passing in the attributes you pass in a compaction request to the CompactSplitThread? Something like, &quot;if the request is null we do the usual logic and build the request only after we get through all the selection logic in HStore. If not null, we apply the same logic, but set attributes on the compaction request (e.g. the store files to compact) on the passed in request&quot;? That certainly gets me what I need (controlled compactions) and hides the attribute business all the way down.&lt;/p&gt;

&lt;p&gt;Is that what you were getting at? I like it Andrew. &lt;/p&gt;</comment>
                            <comment id="13579417" author="jesse_yates" created="Fri, 15 Feb 2013 19:04:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;I do think you should avoid having to make this distinction.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why? If we initiate a compaction and it does some stuff and then the system needs to go about doing its usual compaction business (its still has too many store files) then it ought to be able to. If you want to stop it, then you can hook into the usual compaction request creation mechansim. Am I missing something?&lt;/p&gt;</comment>
                            <comment id="13579512" author="apurtell" created="Fri, 15 Feb 2013 21:25:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;That certainly gets me what I need (controlled compactions) and hides the attribute business all the way down. Is that what you were getting at?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I do think you should avoid having to make this distinction.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Why?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I mean the (minor) extra cognitive load of figuring out if a CR is a system CR or user CR or why the difference.&lt;/p&gt;</comment>
                            <comment id="13579592" author="jesse_yates" created="Fri, 15 Feb 2013 23:29:19 +0000"  >&lt;p&gt;Attaching updated patch based on Andrew&apos;s comments. Also posted to RB.&lt;/p&gt;</comment>
                            <comment id="13579599" author="sershe" created="Fri, 15 Feb 2013 23:39:36 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13579632" author="apurtell" created="Sat, 16 Feb 2013 00:26:28 +0000"  >&lt;p&gt;+1 patch looks good. Minor nit for on commit is the javadoc: &quot;custom compaction request&quot; -&amp;gt; &quot;compaction request&quot;. May or may not be custom, right?&lt;/p&gt;</comment>
                            <comment id="13579642" author="jesse_yates" created="Sat, 16 Feb 2013 00:50:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;Minor nit for on commit is the javadoc: &quot;custom compaction request&quot; -&amp;gt; &quot;compaction request&quot;. May or may not be custom, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, could also be null for pre/postCompactSelection.&lt;/p&gt;</comment>
                            <comment id="13579644" author="jesse_yates" created="Sat, 16 Feb 2013 00:50:55 +0000"  >&lt;p&gt;I&apos;d like to commit soon (this weekend) to get Sergey rolling on his compaction work, unless there are objections...?&lt;/p&gt;</comment>
                            <comment id="13579700" author="lhofhansl" created="Sat, 16 Feb 2013 04:03:33 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Wanna a simple (hopefully) test that tracks a CompactionRequest through the queue?&lt;/p&gt;</comment>
                            <comment id="13580748" author="jesse_yates" created="Mon, 18 Feb 2013 18:23:22 +0000"  >&lt;p&gt;Attaching patch with test (thanks for the suggestion &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;!). Had to do a little patch to HRegionServer so it could be mocked out in the test - wrapping the direct access to the compactSplitThread in a getter (3 lines).&lt;/p&gt;

&lt;p&gt;I&apos;d like to commit on Tuesday.&lt;/p&gt;</comment>
                            <comment id="13580770" author="apurtell" created="Mon, 18 Feb 2013 18:54:35 +0000"  >&lt;p&gt;This looks good.&lt;/p&gt;

&lt;p&gt;+1 if the new test passes&lt;/p&gt;</comment>
                            <comment id="13580806" author="hadoopqa" created="Mon, 18 Feb 2013 19:57:07 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12569835/hbase-7725-v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12569835/hbase-7725-v5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestLoadAndSwitchEncodeOnDisk&lt;br/&gt;
                  org.apache.hadoop.hbase.io.encoding.TestChangingEncoding&lt;br/&gt;
                  org.apache.hadoop.hbase.backup.TestHFileArchiving&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSideWithCoprocessor&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestCompactionState&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestShell&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestFromClientSide3&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4455//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13580816" author="apurtell" created="Mon, 18 Feb 2013 20:26:45 +0000"  >&lt;p&gt;-1 Some NPEs out of compaction code:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Caused by: org.apache.hadoop.ipc.RemoteException: java.io.IOException: java.lang.NullPointerException
	at org.apache.hadoop.hbase.regionserver.CompactSplitThread.requestCompaction(CompactSplitThread.java:217)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.compactRegion(HRegionServer.java:3633)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13580920" author="jesse_yates" created="Tue, 19 Feb 2013 00:28:12 +0000"  >&lt;p&gt;Attaching patch with the fix (Forgot an else and just dropped through the if :-/).&lt;/p&gt;

&lt;p&gt;Failed tests passed locally. Lets try this again...&lt;/p&gt;</comment>
                            <comment id="13580950" author="hadoopqa" created="Tue, 19 Feb 2013 01:33:24 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12569873/hbase-7725-v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12569873/hbase-7725-v6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestHLog&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4457//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13581495" author="jesse_yates" created="Tue, 19 Feb 2013 18:20:42 +0000"  >&lt;p&gt;Looks like the test failures are unrelated and it passes locally.&lt;/p&gt;</comment>
                            <comment id="13581498" author="apurtell" created="Tue, 19 Feb 2013 18:22:44 +0000"  >&lt;p&gt;The test failures are due to this:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;java.net.BindException: Problem binding to localhost/127.0.0.1:42113 : Address already in use
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;+1 for commit, thanks Jesse!&lt;/p&gt;</comment>
                            <comment id="13581756" author="jesse_yates" created="Tue, 19 Feb 2013 23:35:14 +0000"  >&lt;p&gt;Cool, thanks Andy! I&apos;m planning to commmit this evening then, unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13582614" author="jesse_yates" created="Wed, 20 Feb 2013 22:43:58 +0000"  >&lt;p&gt;Submitted to trunk. Working on a patch for 0.94&lt;/p&gt;</comment>
                            <comment id="13582688" author="yuzhihong@gmail.com" created="Thu, 21 Feb 2013 00:01:41 +0000"  >&lt;p&gt;Jesse: the following javadoc warnings may have been caused by your checkin.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[WARNING] Javadoc Warnings
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/Compactor.java:51: warning - @param argument &lt;span class=&quot;code-quote&quot;&gt;&quot;filesToCompact&quot;&lt;/span&gt; is not a parameter name.
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/DefaultCompactor.java:51: warning - Tag @link: can&apos;t find compact(Collection, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;) in org.apache.hadoop.hbase.regionserver.compactions.DefaultCompactor
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java:178: warning - Tag @link: can&apos;t find postCompactSelection(ObserverContext, Store, ImmutableList, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;) in org.apache.hadoop.hbase.coprocessor.RegionObserver
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java:153: warning - Tag @link: can&apos;t find preCompactSelection(ObserverContext, Store, List, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;) in org.apache.hadoop.hbase.coprocessor.RegionObserver
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java:178: warning - @param argument &lt;span class=&quot;code-quote&quot;&gt;&quot;compactionAttributes&quot;&lt;/span&gt; is not a parameter name.
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java:233: warning - @param argument &lt;span class=&quot;code-quote&quot;&gt;&quot;request&quot;&lt;/span&gt; is not a parameter name.
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java:283: warning - @param argument &lt;span class=&quot;code-quote&quot;&gt;&quot;request&quot;&lt;/span&gt; is not a parameter name.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can you attach an addendum to fix them ?&lt;/p&gt;</comment>
                            <comment id="13582709" author="jesse_yates" created="Thu, 21 Feb 2013 00:21:48 +0000"  >&lt;p&gt;Oh, yeah. thanks Ted - getting right on it.&lt;/p&gt;</comment>
                            <comment id="13582728" author="yuzhihong@gmail.com" created="Thu, 21 Feb 2013 00:37:50 +0000"  >&lt;p&gt;While you&apos;re composing addendum, do you mind wrapping long lines ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   *             {@link #preCompact(ObserverContext, Store, InternalScanner, ScanType, CompactionRequest)}
...
+   *             {@link #preCompactScannerOpen(ObserverContext, Store, List, ScanType, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;, InternalScanner, CompactionRequest)}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13582732" author="jesse_yates" created="Thu, 21 Feb 2013 00:42:07 +0000"  >&lt;p&gt;They don&apos;t wrap naturally - the method name should all be the same line.&lt;/p&gt;</comment>
                            <comment id="13582890" author="hudson" created="Thu, 21 Feb 2013 04:01:34 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3887 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3887/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3887/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7725&quot; title=&quot;Add ability to create custom compaction request&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7725&quot;&gt;&lt;del&gt;HBASE-7725&lt;/del&gt;&lt;/a&gt;: Add ability to create custom compaction request (Revision 1448449)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jyates : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactionRequestor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CompactionRequest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/Compactor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/DefaultCompactor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13582900" author="hudson" created="Thu, 21 Feb 2013 04:26:16 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #413 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/413/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/413/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7725&quot; title=&quot;Add ability to create custom compaction request&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7725&quot;&gt;&lt;del&gt;HBASE-7725&lt;/del&gt;&lt;/a&gt;: Add ability to create custom compaction request (Revision 1448449)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jyates : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CompactionRequestor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CompactionRequest.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/Compactor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/DefaultCompactor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13582961" author="jesse_yates" created="Thu, 21 Feb 2013 06:30:14 +0000"  >&lt;p&gt;Attaching addendum for fixing the javadoc issues + line size. thanks for the catch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="13582983" author="hadoopqa" created="Thu, 21 Feb 2013 07:31:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570269/hbase-7725-addenum.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570269/hbase-7725-addenum.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4481//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13583338" author="jesse_yates" created="Thu, 21 Feb 2013 16:40:50 +0000"  >&lt;p&gt;Fat fingered eclipse - lets try with (hopefully) a better addendum&lt;/p&gt;</comment>
                            <comment id="13583377" author="hadoopqa" created="Thu, 21 Feb 2013 17:49:21 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570324/hbase-7725-addenum-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570324/hbase-7725-addenum-v1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4483//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13583382" author="yuzhihong@gmail.com" created="Thu, 21 Feb 2013 17:58:22 +0000"  >&lt;p&gt;+1 on addendum.&lt;/p&gt;</comment>
                            <comment id="13583454" author="jesse_yates" created="Thu, 21 Feb 2013 19:21:59 +0000"  >&lt;p&gt;Committed addendum to trunk.&lt;/p&gt;</comment>
                            <comment id="13583698" author="hudson" created="Fri, 22 Feb 2013 00:00:25 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3889 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3889/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3889/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7725&quot; title=&quot;Add ability to create custom compaction request&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7725&quot;&gt;&lt;del&gt;HBASE-7725&lt;/del&gt;&lt;/a&gt;: Add ability to create custom compaction request - ADDENDUM: fix javadocs (Revision 1448778)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jyates : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/Compactor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/DefaultCompactor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13583908" author="hudson" created="Fri, 22 Feb 2013 04:34:13 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #415 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/415/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/415/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7725&quot; title=&quot;Add ability to create custom compaction request&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7725&quot;&gt;&lt;del&gt;HBASE-7725&lt;/del&gt;&lt;/a&gt;: Add ability to create custom compaction request - ADDENDUM: fix javadocs (Revision 1448778)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jyates : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/Compactor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/DefaultCompactor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13586626" author="jesse_yates" created="Tue, 26 Feb 2013 02:04:21 +0000"  >&lt;p&gt;Attaching patch for 0.94 based on the trunk version. TestCompaction and the above tests seem to pass locally.&lt;/p&gt;

&lt;p&gt;I&apos;d like to commit on Wednesday (3/27) unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13586634" author="hadoopqa" created="Tue, 26 Feb 2013 02:12:00 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12570912/hbase-7725_0.94-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12570912/hbase-7725_0.94-v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4546//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4546//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13586760" author="lhofhansl" created="Tue, 26 Feb 2013 04:57:52 +0000"  >&lt;p&gt;+1 on 0.94 patch.&lt;/p&gt;</comment>
                            <comment id="13587810" author="jesse_yates" created="Wed, 27 Feb 2013 00:52:56 +0000"  >&lt;p&gt;Updating patch with slight bug fix (added to the wrong list in one of the CompactSplitThread#requestCompaction) and adding a test to make sure it doesn&apos;t happen again. &lt;/p&gt;

&lt;p&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7947&quot; title=&quot;Custom compaction requests should have test for adding to wrong list&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7947&quot;&gt;&lt;del&gt;HBASE-7947&lt;/del&gt;&lt;/a&gt; to add the same test to 0.95/trunk&lt;/p&gt;</comment>
                            <comment id="13587832" author="hadoopqa" created="Wed, 27 Feb 2013 01:17:06 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12571100/hbase-7725_0.94-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12571100/hbase-7725_0.94-v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4564//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4564//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13588971" author="jesse_yates" created="Thu, 28 Feb 2013 00:34:28 +0000"  >&lt;p&gt;Committed to 0.94.6 - closing issue.&lt;/p&gt;</comment>
                            <comment id="13589082" author="hudson" created="Thu, 28 Feb 2013 02:19:46 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #868 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/868/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/868/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7725&quot; title=&quot;Add ability to create custom compaction request&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7725&quot;&gt;&lt;del&gt;HBASE-7725&lt;/del&gt;&lt;/a&gt;: Add ability to create custom compaction request (Revision 1451057)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jyates : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/CompactionRequestor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Compactor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CompactionRequest.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13589290" author="hudson" created="Thu, 28 Feb 2013 07:32:17 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #113 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/113/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/113/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7725&quot; title=&quot;Add ability to create custom compaction request&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7725&quot;&gt;&lt;del&gt;HBASE-7725&lt;/del&gt;&lt;/a&gt;: Add ability to create custom compaction request (Revision 1451057)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jyates : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/CompactionRequestor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Compactor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CompactionRequest.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13593186" author="hudson" created="Tue, 5 Mar 2013 07:52:15 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #12 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/12/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/12/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7725&quot; title=&quot;Add ability to create custom compaction request&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7725&quot;&gt;&lt;del&gt;HBASE-7725&lt;/del&gt;&lt;/a&gt;: Add ability to create custom compaction request (Revision 1451057)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jyates : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/CompactionRequestor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Compactor.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CompactionRequest.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12632311">HBASE-7843</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12567292" name="example.java" size="3034" author="jesse_yates" created="Thu, 31 Jan 2013 03:55:23 +0000"/>
                            <attachment id="12570324" name="hbase-7725-addenum-v1.patch" size="5504" author="jesse_yates" created="Thu, 21 Feb 2013 16:40:50 +0000"/>
                            <attachment id="12570269" name="hbase-7725-addenum.patch" size="5412" author="jesse_yates" created="Thu, 21 Feb 2013 06:30:14 +0000"/>
                            <attachment id="12568099" name="hbase-7725-v0.patch" size="42785" author="jesse_yates" created="Tue, 5 Feb 2013 22:10:32 +0000"/>
                            <attachment id="12568144" name="hbase-7725-v1.patch" size="42776" author="jesse_yates" created="Wed, 6 Feb 2013 01:10:37 +0000"/>
                            <attachment id="12569371" name="hbase-7725-v3.patch" size="91832" author="jesse_yates" created="Thu, 14 Feb 2013 19:38:09 +0000"/>
                            <attachment id="12569613" name="hbase-7725-v4.patch" size="54972" author="jesse_yates" created="Fri, 15 Feb 2013 23:29:19 +0000"/>
                            <attachment id="12569835" name="hbase-7725-v5.patch" size="58836" author="jesse_yates" created="Mon, 18 Feb 2013 18:23:22 +0000"/>
                            <attachment id="12569873" name="hbase-7725-v6.patch" size="58856" author="jesse_yates" created="Tue, 19 Feb 2013 00:28:12 +0000"/>
                            <attachment id="12567277" name="hbase-7725_0.94-v0.patch" size="8505" author="jesse_yates" created="Thu, 31 Jan 2013 01:35:43 +0000"/>
                            <attachment id="12570912" name="hbase-7725_0.94-v3.patch" size="54380" author="jesse_yates" created="Tue, 26 Feb 2013 02:04:21 +0000"/>
                            <attachment id="12571100" name="hbase-7725_0.94-v4.patch" size="56518" author="jesse_yates" created="Wed, 27 Feb 2013 00:52:56 +0000"/>
                            <attachment id="12567684" name="hbase-7725_with-attributes-0.94-v0.patch" size="37068" author="jesse_yates" created="Sat, 2 Feb 2013 00:32:13 +0000"/>
                            <attachment id="12567687" name="hbase-7725_with-attributes-0.94-v1.patch" size="44527" author="jesse_yates" created="Sat, 2 Feb 2013 00:59:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 31 Jan 2013 03:42:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>310554</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 41 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1hlfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>310899</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Enable coprocessors to submit custom compaction requests.&lt;br/&gt;
&lt;br/&gt;
This compaction request is used (if not null) through the entire compaction process. If no custom compaction request is submitted (its null - the normal case) then we we build a new compaction request via the usual mechanisms in the Store.&lt;br/&gt;
&lt;br/&gt;
Adding this mechanism is particularly useful when &amp;#39;special&amp;#39; compactions are desired and you want to do things like: only change certain files for a particularly requested compaction or follow a single compaction through the queue.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>