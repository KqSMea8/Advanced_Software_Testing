<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:26:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11803/HBASE-11803.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11803] Programming model for reverse scan is confusing</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11803</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The reverse scan is a very nice feature in HBase. We leverage it in Apache Phoenix 4.1 when possible and see a huge boost in performance over re-ordering the result set ourselves.&lt;/p&gt;

&lt;p&gt;However, the way in which you have to adjust the start/stop key is confusing. Our use case is that we have a scan that needs to be done and we&apos;ve calculated an inclusive start row and an exclusive stop row. This is the way region boundaries are which is convenient as they can easily be intersected against the scan stop/start row. When we use a reverse scan, we are forced to switch the start and stop row values of the scan &lt;b&gt;and&lt;/b&gt; adjust the byte values from inclusive to exclusive and from exclusive to inclusive. The former is not too bad, as you can just add a zero byte, but the latter is problematic. You can decrease the last byte by one, but you need to add an indeterminate 0xFF bytes to ensure you&apos;re not including a row unintentionally.&lt;/p&gt;

&lt;p&gt;IMHO, it would be much cleaner to just keep the start/stop row as is and just set  call the Scan.setReversed(true) method.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12735981">HBASE-11803</key>
            <summary>Programming model for reverse scan is confusing</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="yuzhihong@gmail.com">Ted Yu</assignee>
                                    <reporter username="jamestaylor">James Taylor</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Aug 2014 04:28:14 +0000</created>
                <updated>Tue, 26 Aug 2014 09:43:46 +0000</updated>
                                            <version>0.98.1</version>
                                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="14106657" author="zjushch" created="Fri, 22 Aug 2014 09:15:00 +0000"  >&lt;p&gt;Now, we have the InclusiveStopFilter to make the stop row inclusive.&lt;br/&gt;
If add a new ExclusiveStartFilter, I think your problem could be fixed.&lt;/p&gt;</comment>
                            <comment id="14107060" author="ndimiduk" created="Fri, 22 Aug 2014 16:42:57 +0000"  >&lt;p&gt;I think adding the ExclusiveStartFilter and configuring the scan to use them both when setReversed(true) would alleviate James&apos;s woes.&lt;/p&gt;</comment>
                            <comment id="14107108" author="jamestaylor" created="Fri, 22 Aug 2014 17:13:26 +0000"  >&lt;p&gt;Thanks for the workaround - sounds like it might be a bit more expensive to have a couple of extra filters rather than calculating the row key up front.&lt;/p&gt;

&lt;p&gt;Am I the only one who thinks this is more complicated than it needs to be? That&apos;s really my main point.&lt;/p&gt;</comment>
                            <comment id="14107960" author="yuzhihong@gmail.com" created="Sat, 23 Aug 2014 10:17:58 +0000"  >&lt;p&gt;Should the creation of ExclusiveStartFilter be done in separate JIRA ?&lt;/p&gt;</comment>
                            <comment id="14108058" author="apurtell" created="Sat, 23 Aug 2014 17:21:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;You can decrease the last byte by one, but you need to add an indeterminate 0xFF bytes to ensure you&apos;re not including a row unintentionally.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;An early version of the reverse scan patch did this and made the number of 0xFF bytes to use a site configuration option. That&apos;s not acceptable. The number of bytes needed is indeterminate from the client API&apos;s perspective. It will vary by application keying strategy. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should the creation of ExclusiveStartFilter be done in separate JIRA ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think that is necessary. We could do something in the context of this issue like:&lt;br/&gt;
1. Add ExclusiveStartFilter&lt;br/&gt;
2. Add a static helper method in Scan like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Scan makeReversed(Scan scan)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(or choose a better name) that takes a forward scan and makes all necessary transformations such as setting the reversed flag, swapping start and end rows, adding the ExclusiveStartFilter. &lt;/p&gt;</comment>
                            <comment id="14108064" author="yuzhihong@gmail.com" created="Sat, 23 Aug 2014 17:27:38 +0000"  >&lt;p&gt;Sounds like a plan.&lt;/p&gt;

&lt;p&gt;I can come up with a patch if James is good with the proposal.&lt;/p&gt;</comment>
                            <comment id="14108074" author="jamestaylor" created="Sat, 23 Aug 2014 18:01:02 +0000"  >&lt;p&gt;Thanks for all the ideas, feedback, and workarounds everyone - much appreciated. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The number of bytes needed is indeterminate from the client API&apos;s perspective. It will vary by application keying strategy.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is a very good point. I &lt;em&gt;think&lt;/em&gt; I&apos;ve reasoned out that from a Phoenix POV, adding a single 0xFF byte is sufficient.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We could do something in the context of this issue like add a static helper method in Scan that makes all the necessary transformations&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;From an API POV, I think this would be an improvement. Phoenix will likely stick with what it&apos;s doing now for a couple of reasons: 1) we wouldn&apos;t want to introduce a runtime dependency on a later 0.98 HBase version for an issue we&apos;ve already worked around, and 2) I&apos;d worry that there&apos;s unnecessary overhead in adding Filters (unnecessary in that if I can reason out how many 0xFF bytes to add to prevent any issues).&lt;/p&gt;

&lt;p&gt;My reason for filing the JIRA is more around just giving my two cents on where I think HBase APIs can be improved. Phoenix hides all the complexity and nuances of using the HBase API by providing a well understood SQL API on top of it (that&apos;s part of it&apos;s value). Please take/leave my feedback as you see fit.&lt;/p&gt;

&lt;p&gt;Ideally, it&apos;d be nice if HBase had a KeyRange class that includes: byte[] lowerRange, boolean lowerInclusive, byte[] upperRange, boolean upperInclusive. Then Scan would contain a KeyRange. I realize this is likely infeasible to change in HBase at the point, though.  Maybe in 2.0? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14108081" author="yuzhihong@gmail.com" created="Sat, 23 Aug 2014 18:18:45 +0000"  >&lt;p&gt;Adding ExclusiveStartFilter would benefit users who use reverse scan directly.&lt;/p&gt;

&lt;p&gt;Should I proceed with Andrew&apos;s plan in this JIRA ?&lt;/p&gt;</comment>
                            <comment id="14108085" author="apurtell" created="Sat, 23 Aug 2014 18:31:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;James Taylor&amp;#93;&lt;/span&gt; Ideally, it&apos;d be nice if HBase had a KeyRange class that includes: byte[] lowerRange, boolean lowerInclusive, byte[] upperRange, boolean upperInclusive. Then Scan would contain a KeyRange. I realize this is likely infeasible to change in HBase at the point, though. Maybe in 2.0?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If done such that we have new getters and setters for Scan for KeyRange while keeping current Scan methods in a backwards compatible way (with some deprecation), I don&apos;t see why that change couldn&apos;t go in on branch-1 - although that&apos;s &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&apos;s call - or even 0.98. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Ted Yu&amp;#93;&lt;/span&gt; Adding ExclusiveStartFilter would benefit users who use reverse scan directly.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Ted Yu&amp;#93;&lt;/span&gt; Should I proceed with Andrew&apos;s plan in this JIRA ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good, let&apos;s look at a patch&lt;/p&gt;</comment>
                            <comment id="14108089" author="apurtell" created="Sat, 23 Aug 2014 18:38:53 +0000"  >&lt;p&gt;When adding makeReversed (or whatever the method name ends up being), consider updating the Javadoc for all methods it uses to transform the scan to mention makeReversed as the preferred way to set up a reverse scan. &lt;/p&gt;</comment>
                            <comment id="14108100" author="jamestaylor" created="Sat, 23 Aug 2014 19:24:11 +0000"  >&lt;p&gt;One question/confirmation, just want to confirm: will the existing usage of scan.setReversed(boolean) still work as is (i.e. not automatically triggering the new logic in makeReversed() that&apos;ll add those filters, etc.)?&lt;/p&gt;</comment>
                            <comment id="14108114" author="apurtell" created="Sat, 23 Aug 2014 19:48:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;One question/confirmation, just want to confirm: will the existing usage of scan.setReversed(boolean) still work as is (i.e. not automatically triggering the new logic in makeReversed() that&apos;ll add those filters, etc.)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s the intent. We&apos;ll double check this at review James.&lt;/p&gt;</comment>
                            <comment id="14108245" author="yuzhihong@gmail.com" created="Sun, 24 Aug 2014 03:37:36 +0000"  >&lt;p&gt;Initial patch to get feedback.&lt;/p&gt;

&lt;p&gt;During debugging, I found that InclusiveStopFilter wasn&apos;t designed to work with reversed scan - fixed.&lt;br/&gt;
I am open to the naming of the static method - makeReversedExcludingStartRow.&lt;/p&gt;

&lt;p&gt;Added a test in TestReversibleScanners which helped me find some bugs.&lt;/p&gt;</comment>
                            <comment id="14108728" author="enis" created="Mon, 25 Aug 2014 04:45:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;If done such that we have new getters and setters for Scan for KeyRange while keeping current Scan methods in a backwards compatible way (with some deprecation), I don&apos;t see why that change couldn&apos;t go in on branch-1 - although that&apos;s Enis Soztutar&apos;s call - or even 0.98.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sounds like a good idea. A range with explicit inclusion for boundaries will make client API cleaner. &lt;/p&gt;</comment>
                            <comment id="14109288" author="yuzhihong@gmail.com" created="Mon, 25 Aug 2014 16:42:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjushch&quot; class=&quot;user-hover&quot; rel=&quot;zjushch&quot;&gt;chunhui shen&lt;/a&gt;:&lt;br/&gt;
What&apos;s the opinion on the current filter-based implementation ?&lt;/p&gt;</comment>
                            <comment id="14110551" author="zjushch" created="Tue, 26 Aug 2014 09:43:46 +0000"  >&lt;p&gt;Patch lgtm...&lt;/p&gt;

&lt;p&gt;A small comment:&lt;br/&gt;
ExclusiveStartFilter#filterRowKey could return false directly after one comparison.  I mean caching the comparison result and return the cached result for next calls&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12663966" name="11803-v1.txt" size="50511" author="yuzhihong@gmail.com" created="Sun, 24 Aug 2014 14:54:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 22 Aug 2014 09:15:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 16 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1z7tj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Phoenix</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>