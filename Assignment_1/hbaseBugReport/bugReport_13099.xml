<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:39:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13099/HBASE-13099.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13099] Scans as in DynamoDB</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13099</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;cc: &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; - as discussed offline.&lt;/p&gt;

&lt;p&gt;DynamoDB has a very simple way to manage scans server side:&lt;br/&gt;
&lt;cite&gt;citation&lt;/cite&gt;&lt;br/&gt;
The data returned from a Query or Scan operation is limited to 1 MB; this means that if you scan a table that has more than 1 MB of data, you&apos;ll need to perform another Scan operation to continue to the next 1 MB of data in the table.&lt;/p&gt;

&lt;p&gt;If you query or scan for specific attributes that match values that amount to more than 1 MB of data, you&apos;ll need to perform another Query or Scan request for the next 1 MB of data. To do this, take the LastEvaluatedKey value from the previous request, and use that value as the ExclusiveStartKey in the next request. This will let you progressively query or scan for new data in 1 MB increments.&lt;/p&gt;

&lt;p&gt;When the entire result set from a Query or Scan has been processed, the LastEvaluatedKey is null. This indicates that the result set is complete (i.e. the operation processed the &#8220;last page&#8221; of data).&lt;br/&gt;
&lt;cite&gt;citation&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;This means that there is no state server side: the work is done client side.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12777463">HBASE-13099</key>
            <summary>Scans as in DynamoDB</summary>
                <type id="13" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Brainstorming</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="nkeywal">Nicolas Liochon</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 Feb 2015 09:37:24 +0000</created>
                <updated>Thu, 26 Feb 2015 14:36:18 +0000</updated>
                                                                            <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>19</watches>
                                                                <comments>
                            <comment id="14336521" author="stack" created="Wed, 25 Feb 2015 14:17:12 +0000"  >&lt;p&gt;We use state of Result (null, empty) to flag on client side state of scan. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jonathan.lawlor&quot; class=&quot;user-hover&quot; rel=&quot;jonathan.lawlor&quot;&gt;Jonathan Lawlor&lt;/a&gt; is adding &apos;partial&apos; flag on result now to do &apos;chunking&apos;, to indicate the Result is a partial on the row which a client probably doesn&apos;t care about but the running Scan does (this flag is overloaded).&lt;/p&gt;

&lt;p&gt;Where would we tag on the LastEvaluatedKey?  Would it just be the last KV in the Result?  Could client-side scan read this and use it going back to the server?&lt;/p&gt;

&lt;p&gt;Would be good disconnecting client and server.&lt;/p&gt;

&lt;p&gt;On serverside, when a lease expires, we do this to clean up outstanding region scanners:&lt;/p&gt;

&lt;p&gt;    @Override&lt;br/&gt;
    public synchronized void close() {&lt;br/&gt;
      if (storeHeap != null) &lt;/p&gt;
{
        storeHeap.close();
        storeHeap = null;
      }
&lt;p&gt;      if (joinedHeap != null) &lt;/p&gt;
{
        joinedHeap.close();
        joinedHeap = null;
      }
&lt;p&gt;      // no need to synchronize here.&lt;br/&gt;
      scannerReadPoints.remove(this);&lt;br/&gt;
      this.filterClosed = true;&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;Probably need to keep the above or at least revisit too.  A timer on scanner serverside with returning after we&apos;ve done &quot;10 seconds&quot; or &quot;1MB&quot; is coming up in issues elsewhere. The serverside lease-checking facility might be the place to do this &amp;#8211; it already tries to clean up expired serverside scanners. It could on a period check outstanding scans for where they are.  Probably better to just rip out this lease checking thing and move the checks into the region scanner itself; it will know where it is and so rather than have foreign thread interrupt, interrupt itself (works unless scanner gets stuck &amp;#8211; but I&apos;d guess Lease interrupting running scanner probably don&apos;t work either).&lt;/p&gt;</comment>
                            <comment id="14336928" author="jonathan.lawlor" created="Wed, 25 Feb 2015 18:32:04 +0000"  >&lt;p&gt;Interesting idea. This seems like it would make the client-server interaction during Scans much cleaner. Instead of assuming that the server understands the state that the Client thinks it is in, it would be much more explicit, along the lines of &quot;I am in this state, give me these Results&quot;.&lt;/p&gt;

&lt;p&gt;We would probably want the LastEvaluatedKey to be an extra parameter in the RPC response, rather than assumed to be the last KV in the Result. I think this would be preferable because it is possible that keys further down in the table were evaluated but filtered out. If we assume it to be the last KV in the Result we may find that we are constantly rescanning KV&apos;s that were previously excluded, only to find out that they will still be excluded.&lt;/p&gt;

&lt;p&gt;Moving the state from the server to the client would require adding more parameters into the RPC response. As mentioned above, LastEvaluatedKey would likely be one of the parameters. Another parameter would likely be the MVCC read point that is currently maintained within the RegionScanner.&lt;/p&gt;

&lt;p&gt;While this would make the interactions cleaner, I wonder how this would affect the performance of Scans. How I am currently imagining this (correct me if I&apos;m wrong), it seems like we would incur an extra overhead on each scan due to the extra initialization required server side. On each scan RPC we would need to create a new RegionScanner, setup the key value heaps, seek to the correct row, and then potentially filter out the key values that we have already evaluated. This overhead is currently avoided by sending along the open scanner id from the client to the server so that the already setup scanner just continues where it left off.&lt;/p&gt;

&lt;p&gt;If the move to client-side-state could be done without incurring any performance loss, I think this would be a great improvement that would make scans easier to understand.&lt;/p&gt;</comment>
                            <comment id="14337017" author="enis" created="Wed, 25 Feb 2015 19:18:38 +0000"  >&lt;p&gt;I think we may have to keep at least some state in the server, even if we do a cell-based scanner. Our contract is per-row atomicity, so we have to keep track of: &lt;br/&gt;
1. read point while scanning inside a row. &lt;br/&gt;
2. low watermark for the read points across all &quot;open&quot; scanners for the region. &lt;/p&gt;

&lt;p&gt;(1) can even be extended to be a region based contract if we consider atomic updates cross-row using the MultiRowMutationEndpoint. (2) is needed for effectively getting rid of seqId&apos;s of cells in hfiles. &lt;/p&gt;

&lt;p&gt;We keep (1) in the server side right now, and we use the row-based scanner contract for (1). The client either gets the whole row, or not. The scanner can be restarted across rows, which changes the scanner read point, but it is fine since there is no guarantees across rows for visibility (excluding single region multi-row transactions). &lt;/p&gt;

&lt;p&gt;From a semantics point of view, (1) can be achieved with sending the read point to the client everytime a scan is started within a region. The client will keep track of 1 read point per region. Any subsequent scans performed from the client in the region will also send this read point to the server so that the scan does not see partial data. (2) can be solved by either not deleting seqId&apos;s of cells in hfiles (which we do to optimize disk usage), or keeping track of all open scanners&apos; read points which requires still some state (even though very small) in the server. &lt;/p&gt;</comment>
                            <comment id="14338032" author="lhofhansl" created="Thu, 26 Feb 2015 07:05:55 +0000"  >&lt;p&gt;That&apos;s what small scans do (in a nutshell), when they are not small &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;That does mean that at every 1mb chunk we need to reseek all {region|store|storeFile}Scanners. I.e. the server state allows us to avoid the expensive seeking each RPC. Maybe with 1mb chunks it does not matter. (but you can pull 1mb over 1ge in &amp;lt; 10ms, which is less then the seek time of an HDD).&lt;/p&gt;

&lt;p&gt;Some of the chunking logic we get with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12976&quot; title=&quot;Set default value for hbase.client.scanner.max.result.size&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12976&quot;&gt;&lt;del&gt;HBASE-12976&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14338467" author="nkeywal" created="Thu, 26 Feb 2015 14:36:18 +0000"  >&lt;p&gt;The 1mb could be changed / made configurable.&lt;/p&gt;

&lt;p&gt;The scan could finish if we are at the end of a row and one of these conditions is met:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;we already have more than XX Mb and&lt;/li&gt;
	&lt;li&gt;the scan has been running for more than YY seconds&lt;/li&gt;
	&lt;li&gt;the scan reached the end of a region&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This could simplify some code, and make the server less sensitive to client issues.&lt;/p&gt;

&lt;p&gt;This would allow to remove the small scan code in the client as well (and, for all the clients that are doing small scans w/o setting this small flag, it would be faster).&lt;/p&gt;


</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 25 Feb 2015 14:17:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i260tz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>