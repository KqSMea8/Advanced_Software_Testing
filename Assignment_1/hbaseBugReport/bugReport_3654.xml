<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:12:00 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3654/HBASE-3654.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3654] Weird blocking between getOnlineRegion and createRegionLoad</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3654</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Saw this when debugging something else:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

&lt;span class=&quot;code-quote&quot;&gt;&quot;regionserver60020&quot;&lt;/span&gt; prio=10 tid=0x00007f538c1c0000 nid=0x4c7 runnable [0x00007f53931da000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: RUNNABLE
	at org.apache.hadoop.hbase.regionserver.Store.getStorefilesIndexSize(Store.java:1380)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.createRegionLoad(HRegionServer.java:916)
	- locked &amp;lt;0x0000000672aa0a00&amp;gt; (a java.util.concurrent.ConcurrentSkipListMap)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.buildServerLoad(HRegionServer.java:767)
	- locked &amp;lt;0x0000000656f62710&amp;gt; (a java.util.HashMap)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.tryRegionServerReport(HRegionServer.java:722)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.run(HRegionServer.java:591)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)

&lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Reader 9 on port 60020&quot;&lt;/span&gt; prio=10 tid=0x00007f538c1be000 nid=0x4c6 waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; monitor entry [0x00007f53932db000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: BLOCKED (on object monitor)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.getFromOnlineRegions(HRegionServer.java:2295)
	- waiting to lock &amp;lt;0x0000000656f62710&amp;gt; (a java.util.HashMap)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.getOnlineRegion(HRegionServer.java:2307)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.getRegion(HRegionServer.java:2333)
	at org.apache.hadoop.hbase.regionserver.HRegionServer$QosFunction.isMetaRegion(HRegionServer.java:379)
	at org.apache.hadoop.hbase.regionserver.HRegionServer$QosFunction.apply(HRegionServer.java:422)
	at org.apache.hadoop.hbase.regionserver.HRegionServer$QosFunction.apply(HRegionServer.java:361)
	at org.apache.hadoop.hbase.ipc.HBaseServer.getQosLevel(HBaseServer.java:1126)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Connection.processData(HBaseServer.java:982)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Connection.readAndProcess(HBaseServer.java:946)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Listener.doRead(HBaseServer.java:522)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Listener$Reader.run(HBaseServer.java:316)
	- locked &amp;lt;0x0000000656e60068&amp;gt; (a org.apache.hadoop.hbase.ipc.HBaseServer$Listener$Reader)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
...

&lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Reader 0 on port 60020&quot;&lt;/span&gt; prio=10 tid=0x00007f538c08b000 nid=0x4bd waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; monitor entry [0x00007f5393be4000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: BLOCKED (on object monitor)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.getFromOnlineRegions(HRegionServer.java:2295)
	- waiting to lock &amp;lt;0x0000000656f62710&amp;gt; (a java.util.HashMap)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.getOnlineRegion(HRegionServer.java:2307)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.getRegion(HRegionServer.java:2333)
	at org.apache.hadoop.hbase.regionserver.HRegionServer$QosFunction.isMetaRegion(HRegionServer.java:379)
	at org.apache.hadoop.hbase.regionserver.HRegionServer$QosFunction.apply(HRegionServer.java:422)
	at org.apache.hadoop.hbase.regionserver.HRegionServer$QosFunction.apply(HRegionServer.java:361)
	at org.apache.hadoop.hbase.ipc.HBaseServer.getQosLevel(HBaseServer.java:1126)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Connection.processData(HBaseServer.java:982)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Connection.readAndProcess(HBaseServer.java:946)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Listener.doRead(HBaseServer.java:522)
	at org.apache.hadoop.hbase.ipc.HBaseServer$Listener$Reader.run(HBaseServer.java:316)
	- locked &amp;lt;0x0000000656e635c8&amp;gt; (a org.apache.hadoop.hbase.ipc.HBaseServer$Listener$Reader)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All the readers are blocked! I have the feeling something much better could be done.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12501544">HBASE-3654</key>
            <summary>Weird blocking between getOnlineRegion and createRegionLoad</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="iamknome">Subbu M Iyer</assignee>
                                    <reporter username="jdcryans">Jean-Daniel Cryans</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Mar 2011 04:09:24 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:39 +0000</updated>
                            <resolved>Thu, 24 Mar 2011 20:26:53 +0000</resolved>
                                    <version>0.90.1</version>
                                    <fixVersion>0.90.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13007346" author="tlipcon" created="Wed, 16 Mar 2011 04:21:30 +0000"  >&lt;p&gt;I&apos;ve seen this contention too, but never bothered to look into how to fix it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13007348" author="jdcryans" created="Wed, 16 Mar 2011 04:37:01 +0000"  >&lt;p&gt;Could we cache the answers instead of going to match against the online regions every time?&lt;/p&gt;</comment>
                            <comment id="13007349" author="tlipcon" created="Wed, 16 Mar 2011 04:40:00 +0000"  >&lt;p&gt;Probably? or switch onlineRegions to be some kind of copy-on-write like structure, since onlineRegions changes very infrequently&lt;/p&gt;</comment>
                            <comment id="13007350" author="jdcryans" created="Wed, 16 Mar 2011 04:49:19 +0000"  >&lt;p&gt;Makes sense, as always Todd &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;So I&apos;m debugging a MR job that does tons and tons of Gets in each task and we decided to debug the latency of each query since we weren&apos;t able to figure out the slowness (I see in the jstacks the Get on the client side but never on the RS). Turns out 99% of the Gets are done in 0-1ms and then it jumps over to 170ms for the rest. I suspect that&apos;s due to this contention.&lt;/p&gt;</comment>
                            <comment id="13007481" author="yuzhihong@gmail.com" created="Wed, 16 Mar 2011 14:12:59 +0000"  >&lt;p&gt;Shall we use ConcurrentHashMap ? From javadoc:&lt;br/&gt;
However, even though all operations are thread-safe, retrieval operations do not entail locking.&lt;/p&gt;</comment>
                            <comment id="13007551" author="stack" created="Wed, 16 Mar 2011 16:52:21 +0000"  >&lt;p&gt;getOnlineRegions is doing a clone under lock (then a sort outside of the lock).  CopyOnWrite sounds good to me though online regions data structure is used all over the place; would need to make sure the odd iteration of a stale view is ok.&lt;/p&gt;</comment>
                            <comment id="13007566" author="yuzhihong@gmail.com" created="Wed, 16 Mar 2011 17:06:02 +0000"  >&lt;p&gt;From javadoc of ConcurrentHashMap (&lt;a href=&quot;http://www.docjar.com/html/api/java/util/concurrent/ConcurrentHashMap.java.html):&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.docjar.com/html/api/java/util/concurrent/ConcurrentHashMap.java.html):&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1023        * &amp;lt;p&amp;gt;The view&apos;s &amp;lt;tt&amp;gt;iterator&amp;lt;/tt&amp;gt; is a &lt;span class=&quot;code-quote&quot;&gt;&quot;weakly consistent&quot;&lt;/span&gt; iterator
 1024        * that will never &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; {@link ConcurrentModificationException},
 1025        * and guarantees to traverse elements as they existed upon
 1026        * construction of the iterator, and may (but is not guaranteed to)
 1027        * reflect any modifications subsequent to construction.
 1028        */
 1029       &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;Map.Entry&amp;lt;K,V&amp;gt;&amp;gt; entrySet() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13008670" author="iamknome" created="Fri, 18 Mar 2011 23:10:39 +0000"  >&lt;p&gt;Any thoughts on how can I reproduce this issue on my local cluster? &lt;/p&gt;

&lt;p&gt;(Just add a long sleep in the getOnlineRegions and simulate a bulk Get?)&lt;/p&gt;

&lt;p&gt;+1 for using a copy-on-write DS for onlineRegions if it&apos;s safer to do so given our circumstances.&lt;/p&gt;</comment>
                            <comment id="13008828" author="stack" created="Sat, 19 Mar 2011 21:13:39 +0000"  >&lt;p&gt;Subbu:  Might be hard to repro.  You could try adding a bunch of regions to a regionserver in unit test &amp;#8211; they probably don&apos;t have to have data in them, just exist &amp;#8211; and then have a thread calling buildServerLoad and others doing getOnlineRegions.  You will have to change the access on buildServerLoad to get access to it; making it package private would be fine.  If you can&apos;t pull on it in tests, you might have to add a public method to the HRS that tests use (a subclass of actual HRS that adds stuff not available in default HRS just for the sake of testing).&lt;/p&gt;</comment>
                            <comment id="13009991" author="iamknome" created="Wed, 23 Mar 2011 04:10:02 +0000"  >&lt;p&gt;1. Created a dummy class with two API&apos;s. getOnlineRegions and buildServerReport, which exactly&lt;br/&gt;
mimic our HREgionServer.getOnlineRegions and HRS.buildServerLoad.&lt;br/&gt;
(i.e, both operate on a Hashmap under a sync lock)&lt;/p&gt;

&lt;p&gt;2. Created 20 threads with 10 threads hitting getOnlineRegions and 10 hitting buildServerLoad in a&lt;br/&gt;
loops for 100 times. (just to simulate and recreate the locked reader&apos;s scenario that JD reported)&lt;/p&gt;

&lt;p&gt;3. Ran the test and captured the thread dump for the following scenarios with onlineRegions&lt;br/&gt;
   represented as:&lt;br/&gt;
                a. HashMap, and Synchronized on HashMap (as it is today)&lt;br/&gt;
                b. ConcurrentHashMap with no synchronization.&lt;br/&gt;
                c. ConcurrentSkipListMap with no sync&lt;br/&gt;
                d. CopyOnWriteList&lt;/p&gt;

&lt;p&gt;4. I could reproduce the lock scenario that JD reported in all the scenarions 3a,3b,and 3c.&lt;br/&gt;
   in case of 3c I do seeblocked threads waiting at &lt;br/&gt;
at java.util.concurrent.ConcurrentSkipListMap$EntryIterator.next and in case of 3b at&lt;br/&gt;
at java.util.concurrent.ConcurrentHashMap$EntryIterator.next(ConcurrentHashMap.java:1163)&lt;br/&gt;
   and case of 3d has no blocked thread except for one thread&lt;br/&gt;
   blocked at at java.util.Arrays.copyOf(Arrays.java:2760) during getOnlineRegions call.&lt;/p&gt;

&lt;p&gt;5. I have attached all the thread dumps for your review.  &lt;/p&gt;</comment>
                            <comment id="13010004" author="stack" created="Wed, 23 Mar 2011 05:37:53 +0000"  >&lt;p&gt;Excellent work.  So, 3.d blocks too for long periods of time but just doing copy of regions?  Maybe we can get rid of the copy?&lt;/p&gt;</comment>
                            <comment id="13010139" author="yuzhihong@gmail.com" created="Wed, 23 Mar 2011 14:24:28 +0000"  >&lt;p&gt;@Subbu:&lt;br/&gt;
Can you post the source code of your test ?&lt;/p&gt;</comment>
                            <comment id="13010557" author="stack" created="Thu, 24 Mar 2011 05:07:23 +0000"  >&lt;p&gt;@Subbu The java.util.Arrays.copyOf(Arrays.java:2760) is code you added to case 3d copying out of the CopyOnWrite datastructure?  Are you going to make a patch or should one of us?  Thanks.&lt;/p&gt;</comment>
                            <comment id="13010558" author="iamknome" created="Thu, 24 Mar 2011 05:09:25 +0000"  >&lt;p&gt;I am seeing that most of the cases threads getting blocked at &lt;br/&gt;
   java.lang.Thread.State: BLOCKED (on object monitor)&lt;br/&gt;
	at java.util.Arrays.copyOf(Arrays.java:2760)&lt;br/&gt;
	at java.util.Arrays.copyOf(Arrays.java:2734)&lt;br/&gt;
	at java.util.ArrayList.ensureCapacity(ArrayList.java:167)&lt;br/&gt;
	at java.util.ArrayList.add(ArrayList.java:351)&lt;/p&gt;

&lt;p&gt;So, though, using a CHM or CSKLM might offer increased throughput, we might still see thread blocks during our ArrayList.add in getOnlineRegions and buildServerReport calls. &lt;/p&gt;

&lt;p&gt;1) As a starter shall we change the HM to CHM or CSKLM as it might offer some immediate relief from this blocking issue although not 100%?&lt;/p&gt;

&lt;p&gt;2) Stack: We definitely need to see how we can avoid this copy as we are going to hit that next after 1.&lt;/p&gt;

&lt;p&gt;I am working on a patch with both the variants and will post it by tomorrow.&lt;/p&gt;

&lt;p&gt;Ted: I have attached my sample test program above. Please let me know if I have missed anything.&lt;/p&gt;


</comment>
                            <comment id="13010559" author="iamknome" created="Thu, 24 Mar 2011 05:09:58 +0000"  >&lt;p&gt;Stack: I am on the patch. will post it ASAP.&lt;/p&gt;</comment>
                            <comment id="13010572" author="stack" created="Thu, 24 Mar 2011 06:20:28 +0000"  >&lt;p&gt;I see. You can&apos;t use CopyOnWriteArrayList/Set because online regions is a Map.  I also see that we are hitting the Arrays.copyOf because we are not presizing the ArrayList.  Duh.  CSKLM has this to say about getting its size though:&lt;/p&gt;

&lt;p&gt;&quot;Beware that, unlike in most collections, the size method is not a constant-time operation. Because of the asynchronous nature of these maps, determining the current number of elements requires a traversal of the elements. Additionally, the bulk operations putAll, equals, and clear are not guaranteed to be performed atomically. For example, an iterator operating concurrently with a putAll operation might view only some of the added elements.&quot;&lt;/p&gt;

&lt;p&gt;So getting size might be a little expensive, but probably way cheaper than resizing and array multiple times.&lt;/p&gt;

&lt;p&gt;We don&apos;t need a sorted list so CHM would look like the better way to go?&lt;/p&gt;

&lt;p&gt;Thanks for working on this Subbu.&lt;/p&gt;
</comment>
                            <comment id="13010668" author="iamknome" created="Thu, 24 Mar 2011 13:39:46 +0000"  >&lt;p&gt;Stack:&lt;/p&gt;

&lt;p&gt;You are right on that we could eliminate or minimize the blockings at Arrays.copyOf if we could appropriately pre-size our AL. I will explore on the feasibility of that.   &lt;/p&gt;

&lt;p&gt;I am attaching first draft of two versions of patch. One using CHM for onlineRegions and other COWAL. &lt;/p&gt;

&lt;p&gt;I am running the tests now. I will also address all code checkstyle issues if any.  &lt;/p&gt;</comment>
                            <comment id="13010747" author="iamknome" created="Thu, 24 Mar 2011 16:23:51 +0000"  >&lt;p&gt;Please ignore my earlier patch for COWAL. Accidentally submitted incorrect file. Sorry for that.&lt;/p&gt;</comment>
                            <comment id="13010749" author="iamknome" created="Thu, 24 Mar 2011 16:29:09 +0000"  >&lt;p&gt;Stack: &lt;/p&gt;

&lt;p&gt;Also initialized the AL so we should not see the blocking due to Arrays.copyOf at least for getOnlineRegions calls (which is the hotspot). The array list sizing issue may not be an issue during buildServerLoad as we may not have multiple concurrent threads trying to do this.&lt;/p&gt;

&lt;p&gt;I will run the load tests with my dummy mock class to confirm this. &lt;/p&gt;</comment>
                            <comment id="13010811" author="streamy" created="Thu, 24 Mar 2011 18:14:19 +0000"  >&lt;p&gt;I&apos;m late to the conversation, but have also seen contention on the onlineRegion map.  Changing to CHM helped.&lt;/p&gt;</comment>
                            <comment id="13010834" author="streamy" created="Thu, 24 Mar 2011 18:43:51 +0000"  >&lt;p&gt;This is the change I would recommend.  Changes onlineRegions to a CHM and removes the synchronization on the get.&lt;/p&gt;</comment>
                            <comment id="13010885" author="yuzhihong@gmail.com" created="Thu, 24 Mar 2011 20:07:06 +0000"  >&lt;p&gt;+1 on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3654&quot; title=&quot;Weird blocking between getOnlineRegion and createRegionLoad&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3654&quot;&gt;&lt;del&gt;HBASE-3654&lt;/del&gt;&lt;/a&gt;-ConcurrentHashMap-RemoveGetSync.patch&lt;/p&gt;</comment>
                            <comment id="13010892" author="stack" created="Thu, 24 Mar 2011 20:21:57 +0000"  >&lt;p&gt;@Subbu Very nice.  Let me apply &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12474500/HBASE-3654_Weird_blocking_getOnlineRegions_and_createServerLoad_-_ConcurrentHM.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12474500/HBASE-3654_Weird_blocking_getOnlineRegions_and_createServerLoad_-_ConcurrentHM.patch&lt;/a&gt;.  Its like Jon&apos;s only you do the cleanup removing synchronizations.  Its interesting that we had locks around adding and removing regions but we &lt;b&gt;shouldn&apos;t&lt;/b&gt; need them anymore.  Lets see.&lt;/p&gt;</comment>
                            <comment id="13010893" author="stack" created="Thu, 24 Mar 2011 20:23:16 +0000"  >&lt;p&gt;It looks like that locking stuff has been removed in TRUNK anyways.&lt;/p&gt;</comment>
                            <comment id="13010895" author="stack" created="Thu, 24 Mar 2011 20:26:53 +0000"  >&lt;p&gt;Committed branch and trunk.  Thanks for the nice investigative work and the thorough patch Subbu&lt;/p&gt;</comment>
                            <comment id="13010901" author="streamy" created="Thu, 24 Mar 2011 20:34:40 +0000"  >&lt;p&gt;Still seemed to make sense to synchronize around other sections, but I guess it&apos;s okay.  I felt like I had a reason to keep the other stuff synchronized but don&apos;t see it right now.&lt;/p&gt;</comment>
                            <comment id="13010913" author="yuzhihong@gmail.com" created="Thu, 24 Mar 2011 20:49:18 +0000"  >&lt;p&gt;I think we should be a bit cautious about this method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HServerLoad.RegionLoad createRegionLoad(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; encodedRegionName) {
    HRegion r = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    r = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.onlineRegions.get(encodedRegionName);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; createRegionLoad(r);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which is called in regionserver.jsp:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (HRegionInfo r: onlineRegions) { 
        HServerLoad.RegionLoad load = regionServer.createRegionLoad(r.getEncodedName());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The region for encodedRegionName may not be in this.onlineRegions when createRegionLoad() executes.&lt;br/&gt;
I think we should check whether HRegion r is null in createRegionLoad() above.&lt;/p&gt;</comment>
                            <comment id="13010919" author="stack" created="Thu, 24 Mar 2011 21:01:16 +0000"  >&lt;p&gt;@Ted Is that added by Subbu&apos;s patch?&lt;/p&gt;</comment>
                            <comment id="13010925" author="yuzhihong@gmail.com" created="Thu, 24 Mar 2011 21:09:39 +0000"  >&lt;p&gt;Subbu&apos;s patch only removed synchronization. But the above potential issue existed before that change.&lt;br/&gt;
A bigger problem could be due to this change:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getNumberOfOnlineRegions() {
     &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; size = -1;
-    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.onlineRegions) {
-      size = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.onlineRegions.size();
+    size = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.onlineRegions.size();
-    }
     &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; size;
   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;because it is used in: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HRegionInfo[] getRegionsAssignment() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
-    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.onlineRegions) {
-      HRegionInfo [] regions = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HRegionInfo[getNumberOfOnlineRegions()];
-      Iterator&amp;lt;HRegion&amp;gt; ite = onlineRegions.values().iterator();
-      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; ite.hasNext(); i++) {
-        regions[i] = ite.next().getRegionInfo();
-      }
-      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; regions;
-    }
+    HRegionInfo [] regions = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HRegionInfo[getNumberOfOnlineRegions()];
+    Iterator&amp;lt;HRegion&amp;gt; ite = onlineRegions.values().iterator();
+    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; ite.hasNext(); i++) {
+      regions[i] = ite.next().getRegionInfo();
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Due to currently relaxed locking, regions array could be 1 (or more) elements shorter than what onlineRegions.values() contains. This could lead to ArrayIndexOutOfBoundsException.&lt;/p&gt;

&lt;p&gt;We should at least add a check after iterator assignment that this.onlineRegions.size() is the same as before iterator assignment.&lt;/p&gt;</comment>
                            <comment id="13010930" author="yuzhihong@gmail.com" created="Thu, 24 Mar 2011 21:19:17 +0000"  >&lt;p&gt;It turns out that getRegionsAssignment() isn&apos;t used in any .java, .jsp or .rb file.&lt;br/&gt;
Codebase compiles after removing it.&lt;/p&gt;</comment>
                            <comment id="13010933" author="stack" created="Thu, 24 Mar 2011 21:25:57 +0000"  >&lt;p&gt;@Ted Nice one Ted.  I removed the method in trunk and branch.&lt;/p&gt;</comment>
                            <comment id="13010935" author="iamknome" created="Thu, 24 Mar 2011 21:27:11 +0000"  >&lt;p&gt;Ted:&lt;/p&gt;

&lt;p&gt;Good one. I will submit a patch for createRegionLoad with additional Null check as you pointed out and will also remove getRegionsAssignment as its no longer used?  &lt;/p&gt;</comment>
                            <comment id="13010941" author="yuzhihong@gmail.com" created="Thu, 24 Mar 2011 21:29:29 +0000"  >&lt;p&gt;@Subbu please base your next patch on current trunk code.&lt;br/&gt;
Also run all unit tests.&lt;br/&gt;
I am running unit tests on my laptop.&lt;/p&gt;</comment>
                            <comment id="13010951" author="iamknome" created="Thu, 24 Mar 2011 21:47:09 +0000"  >&lt;p&gt;Ted:&lt;/p&gt;

&lt;p&gt;Yes. Sure. Thanks for your review and comments. I did kick-off all the tests last night, but for some reason they were consistently failing at TestMultipleTimeStamps. Will try to troubleshoot/fix that issue this evening. thanks again.   &lt;/p&gt;</comment>
                            <comment id="13010956" author="yuzhihong@gmail.com" created="Thu, 24 Mar 2011 21:56:08 +0000"  >&lt;p&gt;Good job Subbu&lt;/p&gt;

&lt;p&gt;TestMultipleTimestamps failure may be an indication of potential problem.&lt;br/&gt;
It passes on my laptop.&lt;br/&gt;
If it fails again, please attach the following two files to this ticket:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.hadoop.hbase.client.TestMultipleTimestamps-output.txt
org.apache.hadoop.hbase.client.TestMultipleTimestamps.txt
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13011261" author="iamknome" created="Fri, 25 Mar 2011 16:26:34 +0000"  >&lt;p&gt;1. Added the null check for createRegionLoad.&lt;br/&gt;
2. Pre sized the size of ArrayList to onlineRegions.size during getOnlineRegions call to minimize the locking &lt;br/&gt;
   at java.util.Arrays.copyOf(Arrays.java:2734).&lt;/p&gt;</comment>
                            <comment id="13011275" author="yuzhihong@gmail.com" created="Fri, 25 Mar 2011 16:42:26 +0000"  >&lt;p&gt;Thanks for the continuing effort.&lt;br/&gt;
For item 2, we should also add check against null pointer in regionserver.jsp:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        HServerLoad.RegionLoad load = regionServer.createRegionLoad(r.getEncodedName());
...
    &amp;lt;td&amp;gt;&amp;lt;%= load.toString() %&amp;gt;&amp;lt;/td&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13011408" author="stack" created="Fri, 25 Mar 2011 20:39:49 +0000"  >&lt;p&gt;I committed your addition Subbu and Ted, I did as you suggested in same commit:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Index: src/main/resources/hbase-webapps/regionserver/regionserver.jsp
===================================================================
--- src/main/resources/hbase-webapps/regionserver/regionserver.jsp      (revision 1085553)
+++ src/main/resources/hbase-webapps/regionserver/regionserver.jsp      (working copy)
@@ -56,7 +56,7 @@
  %&amp;gt;
 &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%= r.getRegionNameAsString() %&amp;gt;&amp;lt;/td&amp;gt;
     &amp;lt;td&amp;gt;&amp;lt;%= Bytes.toStringBinary(r.getStartKey()) %&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;%= Bytes.toStringBinary(r.getEndKey()) %&amp;gt;&amp;lt;/td&amp;gt;
-    &amp;lt;td&amp;gt;&amp;lt;%= load.toString() %&amp;gt;&amp;lt;/td&amp;gt;
+    &amp;lt;td&amp;gt;&amp;lt;%= load == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;? &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;: load.toString() %&amp;gt;&amp;lt;/td&amp;gt;
     &amp;lt;/tr&amp;gt;
 &amp;lt;%   } %&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks lads.  Good stuff.&lt;/p&gt;</comment>
                            <comment id="13011477" author="hudson" created="Fri, 25 Mar 2011 23:10:27 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1814 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/HBase-TRUNK/1814/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/HBase-TRUNK/1814/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3654&quot; title=&quot;Weird blocking between getOnlineRegion and createRegionLoad&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3654&quot;&gt;&lt;del&gt;HBASE-3654&lt;/del&gt;&lt;/a&gt; Weird blocking between getOnlineRegion and createRegionLoad; Added more to Subbu and Ted extras&lt;/p&gt;</comment>
                            <comment id="15017583" author="lars_francke" created="Fri, 20 Nov 2015 12:43:39 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12474369" name="ConcurrentHM" size="15064" author="iamknome" created="Wed, 23 Mar 2011 04:17:29 +0000"/>
                            <attachment id="12474370" name="ConcurrentSKLM" size="13508" author="iamknome" created="Wed, 23 Mar 2011 04:17:30 +0000"/>
                            <attachment id="12474371" name="CopyOnWrite" size="9599" author="iamknome" created="Wed, 23 Mar 2011 04:17:30 +0000"/>
                            <attachment id="12474541" name="HBASE-3654-ConcurrentHashMap-RemoveGetSync.patch" size="1047" author="streamy" created="Thu, 24 Mar 2011 18:43:51 +0000"/>
                            <attachment id="12474501" name="HBASE-3654_Weird_blocking_getOnlineRegions_and_createServerLoad_-_COWAL.patch" size="14906" author="iamknome" created="Thu, 24 Mar 2011 13:40:56 +0000"/>
                            <attachment id="12474525" name="HBASE-3654_Weird_blocking_getOnlineRegions_and_createServerLoad_-_COWAL1.patch" size="15155" author="iamknome" created="Thu, 24 Mar 2011 16:23:51 +0000"/>
                            <attachment id="12474500" name="HBASE-3654_Weird_blocking_getOnlineRegions_and_createServerLoad_-_ConcurrentHM.patch" size="13557" author="iamknome" created="Thu, 24 Mar 2011 13:40:56 +0000"/>
                            <attachment id="12474627" name="HBASE-3654_Weird_blocking_getOnlineRegions_and_createServerLoad_-_ConcurrentHM1.patch" size="988" author="iamknome" created="Fri, 25 Mar 2011 16:26:49 +0000"/>
                            <attachment id="12474470" name="TestOnlineRegions.java" size="4767" author="iamknome" created="Thu, 24 Mar 2011 05:10:34 +0000"/>
                            <attachment id="12474372" name="hashmap" size="8555" author="iamknome" created="Wed, 23 Mar 2011 04:17:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 16 Mar 2011 04:21:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26964</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hn8f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101026</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>