<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:17:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10772/HBASE-10772.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10772] Use ByteRanges instead of ByteBuffers in BlockCache</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10772</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Try replacing the BBs with Byte Ranges in Block cache.  See if this can be done in a pluggable way.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12701877">HBASE-10772</key>
            <summary>Use ByteRanges instead of ByteBuffers in BlockCache</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12685275">HBASE-10191</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Mon, 17 Mar 2014 12:09:24 +0000</created>
                <updated>Wed, 22 Jul 2015 05:34:28 +0000</updated>
                            <resolved>Wed, 22 Jul 2015 05:34:28 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13947793" author="ram_krish" created="Wed, 26 Mar 2014 10:49:34 +0000"  >&lt;p&gt;Would like bring up a discussion here, can open a relevant JIRA for that.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10771&quot; title=&quot;Primitive type put/get APIs in ByteRange &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10771&quot;&gt;&lt;del&gt;HBASE-10771&lt;/del&gt;&lt;/a&gt; adds some geXXX and putXXX type of APIs, put() will add a PBR itself. &lt;br/&gt;
While working on BR inside BlockCache, the current way of BlockCache that use offheap - tries to slice the given DBB and uses a DBB buffer pool.  So if we need such use cases with BRs instead of DBB and those BRs should be offheap, how do we do that.  So should we add some APIs like slice, duplicate() in DBB to BRs and try reusing the allocated BRs? Currently we don&apos;t have any offheap based BR.  So if we try to create a BR that is backed by DBB and to ensure the current behaviour works of BR pools etc we may need such things in BR also. What do you think?&lt;/p&gt;</comment>
                            <comment id="13948069" author="apurtell" created="Wed, 26 Mar 2014 16:33:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;Currently we don&apos;t have any offheap based BR. So if we try to create a BR that is backed by DBB and to ensure the current behaviour works of BR pools etc we may need such things in BR also&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I suggest trying a BR backed by a DBB and adding only the minimum of what is needed. &lt;/p&gt;</comment>
                            <comment id="13948098" author="mcorgan" created="Wed, 26 Mar 2014 16:57:09 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;I suggest trying a BR backed by a DBB and adding only the minimum of what is needed.&lt;/p&gt;&lt;/blockquote&gt;i was going to say the same.&lt;/p&gt;

&lt;p&gt;Maybe the putShort/putInt/putLong methods should pass directly through to the ones on ByteBuffer, so they should use the same byte format?&lt;/p&gt;</comment>
                            <comment id="13948099" author="ram_krish" created="Wed, 26 Mar 2014 16:57:22 +0000"  >&lt;p&gt;Yes.. That is what I have tried and things work upto the HFileBlock.  From HFileBlock layer onwards will be a big change.  Will continue doing that.&lt;/p&gt;</comment>
                            <comment id="13948102" author="apurtell" created="Wed, 26 Mar 2014 16:59:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;Maybe the putShort/putInt/putLong methods should pass directly through to the ones on ByteBuffer, so they should use the same byte format?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 on same byte format&lt;/p&gt;

&lt;p&gt;Let&apos;s make sure they are always inlineable. &lt;/p&gt;</comment>
                            <comment id="13948113" author="ram_krish" created="Wed, 26 Mar 2014 17:05:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;Maybe the putShort/putInt/putLong methods&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, +1.&lt;br/&gt;
But I think still we may have to have somethings similar to slice(), duplicate().  AS said am trying to reduce the things needed in BR.  I think Anoop also had the need for few things like this in his work.  So will consolidate and come up with a patch by tomorrow.&lt;/p&gt;</comment>
                            <comment id="13948187" author="mcorgan" created="Wed, 26 Mar 2014 17:35:50 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;But I think still we may have to have somethings similar to slice(), duplicate()&lt;/p&gt;&lt;/blockquote&gt;i think that&apos;s ok, but keep in mind that the ByteRange is reusable in tight loops, so you may sometimes be able to do something like byteRange.shallowCopyOf(otherByteRange)&lt;/p&gt;</comment>
                            <comment id="14636335" author="ram_krish" created="Wed, 22 Jul 2015 05:34:28 +0000"  >&lt;p&gt;We have started using ByteBuffs now. Closing this as &apos;won&apos;t fix&apos;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12724166">HBASE-11425</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 26 Mar 2014 16:33:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>380217</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 21 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1tifj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>380501</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>