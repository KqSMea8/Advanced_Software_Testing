<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:16:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4153/HBASE-4153.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4153] Handle RegionAlreadyInTransitionException in AssignmentManager</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4153</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Comment from Stack over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3741&quot; title=&quot;Make HRegionServer aware of the regions it&amp;#39;s opening/closing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3741&quot;&gt;&lt;del&gt;HBASE-3741&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Question: Looking at this patch again, if we throw a RegionAlreadyInTransitionException, won&apos;t we just assign the region elsewhere though RegionAlreadyInTransitionException in at least one case here is saying that the region is already open on this regionserver?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Indeed looking at the code it&apos;s going to be handled the same way other exceptions are. Need to add special cases for assign and unassign.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12516031">HBASE-4153</key>
            <summary>Handle RegionAlreadyInTransitionException in AssignmentManager</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="jdcryans">Jean-Daniel Cryans</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Aug 2011 21:03:22 +0000</created>
                <updated>Fri, 20 Nov 2015 11:52:12 +0000</updated>
                            <resolved>Fri, 23 Sep 2011 01:14:46 +0000</resolved>
                                    <version>0.92.0</version>
                                    <fixVersion>0.92.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13084608" author="yuzhihong@gmail.com" created="Sat, 13 Aug 2011 13:16:18 +0000"  >&lt;p&gt;Currently regionsInTransitionInRS is a ConcurrentSkipListSet. It doesn&apos;t record whether the region transition was initiated by openRegion() or closeRegion().&lt;br/&gt;
I think we can use ConcurrentSkipListMap for regionsInTransitionInRS:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;&amp;gt; regionsInTransitionInRS =
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConcurrentSkipListMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [], &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;&amp;gt;(Bytes.BYTES_COMPARATOR);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On a side note, I wonder why the check for regionsInTransitionInRS.contains() below is followed by LOG.warn() instead of by throwing exception:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; closeRegion(HRegionInfo region, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; abort,
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; zk) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.contains(region.getEncodedNameAsBytes())) {
      LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Received close &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region we are already opening or closing; &quot;&lt;/span&gt; +
          region.getEncodedName());
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13097755" author="ram_krish" created="Tue, 6 Sep 2011 06:13:04 +0000"  >&lt;p&gt;I was looking into this issue.  &lt;br/&gt;
One thing just wanted to make myself clear, when &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3741&quot; title=&quot;Make HRegionServer aware of the regions it&amp;#39;s opening/closing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3741&quot;&gt;&lt;del&gt;HBASE-3741&lt;/del&gt;&lt;/a&gt; was committed &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.contains(region.getEncodedNameAsBytes())) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegionAlreadyInTransitionException(&lt;span class=&quot;code-quote&quot;&gt;&quot;open&quot;&lt;/span&gt;, region.getEncodedName());
    }
    LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Received request to open region: &quot;&lt;/span&gt; +
      region.getRegionNameAsString());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But now we have a case where &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.contains(region.getEncodedNameAsBytes())) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegionAlreadyInTransitionException(&lt;span class=&quot;code-quote&quot;&gt;&quot;open&quot;&lt;/span&gt;, region.getEncodedName());
    }
    HRegion onlineRegion = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getFromOnlineRegions(region.getEncodedName());
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; != onlineRegion) {
      LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Attempted open of &quot;&lt;/span&gt; + region.getEncodedName()
          + &lt;span class=&quot;code-quote&quot;&gt;&quot; but already online on &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; server&quot;&lt;/span&gt;);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; RegionOpeningState.ALREADY_OPENED;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now ALREADY_OPENED case is getting handled in the AssigmentManager.assign currently.&lt;br/&gt;
Pls provide your suggestions so that i can be more clear on the actual issue that we are trying to address here and proceed further.&lt;br/&gt;
Correct me if my analysis is wrong.&lt;/p&gt;</comment>
                            <comment id="13098494" author="jdcryans" created="Wed, 7 Sep 2011 00:17:58 +0000"  >&lt;p&gt;The issue is when the region is in transition in the region server, so not opened or closed yet.&lt;/p&gt;</comment>
                            <comment id="13100386" author="ram_krish" created="Thu, 8 Sep 2011 15:26:48 +0000"  >&lt;p&gt;Pls find the analysis for the following state transitions&lt;/p&gt;

&lt;p&gt;This is how i tried to simulate the scenarios&lt;br/&gt;
Create some 7 or 8 regions.&lt;br/&gt;
Using HBaseAdmin call Unassign(regionname, false) and assign(regionname, false) parallely.&lt;br/&gt;
See what happens when both operations go on parallel.&lt;/p&gt;

&lt;p&gt;Correct me if am wrong.  Pls provide your suggestions.&lt;/p&gt;

&lt;p&gt;1) Close	Close -&amp;gt; No problem&lt;br/&gt;
2) Close        Open &lt;br/&gt;
Here we depend on the timeout&lt;br/&gt;
 Assume the closing is in partial state&lt;br/&gt;
 -&amp;gt; After setting the node to CLOSED state &lt;br/&gt;
	Here the closing is done successfully but the problem is to open we need to&lt;br/&gt;
	wait for the timeout monitor to deduce that the region is in RIT as the inmemory&lt;br/&gt;
	state is put to OFFLINE once RegionAlreadyInTransitionExceptionHappens&lt;br/&gt;
 -&amp;gt; Before setting the node to CLOSED state &lt;br/&gt;
	Here the problem is that closing is not done properly and also open also fails&lt;br/&gt;
	putting the inmemory state to OFFLINE&lt;br/&gt;
	The closing itself fails because when we try to assign the region it forcefully&lt;br/&gt;
	moves the znode to OFFLINE. so close is not able to move from CLOSING to CLOSED&lt;br/&gt;
May be if we get an RegionAlreadyInTransition just dont update the memory state to OFFLINE.&lt;br/&gt;
Either the previous open should be successful or even if it fails the PENDING_OPEN state &lt;br/&gt;
timeout transition will any way happen&lt;/p&gt;

&lt;p&gt;3) Open		Open&lt;br/&gt;
This is causing problem.&lt;br/&gt;
The thing here is assume one open region is in progress.&lt;br/&gt;
The next open region just fails and adds in memory state to OFFLINE.&lt;br/&gt;
Now the first open region gets completed and moves it to OPENED.&lt;br/&gt;
In handling of OPENED state&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (regionState == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ||
              (!regionState.isPendingOpen() &amp;amp;&amp;amp; !regionState.isOpening())) {
            LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Received OPENED &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region &quot;&lt;/span&gt; +
                prettyPrintedRegionName +
                &lt;span class=&quot;code-quote&quot;&gt;&quot; from server &quot;&lt;/span&gt; + data.getOrigin() + &lt;span class=&quot;code-quote&quot;&gt;&quot; but region was in &quot;&lt;/span&gt; +
                &lt;span class=&quot;code-quote&quot;&gt;&quot; the state &quot;&lt;/span&gt; + regionState + &lt;span class=&quot;code-quote&quot;&gt;&quot; and not &quot;&lt;/span&gt; +
                &lt;span class=&quot;code-quote&quot;&gt;&quot;in expected PENDING_OPEN or OPENING states&quot;&lt;/span&gt;);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;we have the above code.  Hence never the region can be added to master&apos;s online list.&lt;br/&gt;
This scenario is what has been handled in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4015&quot; title=&quot;Refactor the TimeoutMonitor to make it less racy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4015&quot;&gt;&lt;del&gt;HBASE-4015&lt;/del&gt;&lt;/a&gt; patch when a race happens between&lt;br/&gt;
forcing the node to OFFLINE and by the time OPENING has happened.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// If we are reassigning the node &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not force in-memory state to OFFLINE.
&lt;/span&gt;+      &lt;span class=&quot;code-comment&quot;&gt;// Based on the znode state we will decide &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; to change
&lt;/span&gt;+      &lt;span class=&quot;code-comment&quot;&gt;// in-memory state to OFFLINE or not. It will
&lt;/span&gt;+      &lt;span class=&quot;code-comment&quot;&gt;// be done before setting the znode to OFFLINE state.
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!hijackAndPreempt) {
+        LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Forcing OFFLINE; was=&quot;&lt;/span&gt; + state);
+        state.update(RegionState.State.OFFLINE);
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;4)Open		Close&lt;br/&gt;
This will not be a seperate case in my testing.  As once we call unassign() region it will any way&lt;br/&gt;
call assign once closing is successful.  Hence it ends up in any one of the three.&lt;/p&gt;</comment>
                            <comment id="13100440" author="yuzhihong@gmail.com" created="Thu, 8 Sep 2011 16:44:10 +0000"  >&lt;p&gt;Thanks for your analysis Ramkrishna.&lt;br/&gt;
The race condition in case 2 above should be handled. Your suggestion for case 2 is reasonable.&lt;/p&gt;</comment>
                            <comment id="13101086" author="ram_krish" created="Fri, 9 Sep 2011 09:25:40 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
After &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4015&quot; title=&quot;Refactor the TimeoutMonitor to make it less racy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4015&quot;&gt;&lt;del&gt;HBASE-4015&lt;/del&gt;&lt;/a&gt; there are some more changes.  so may be the suggestion in previous comment may not be valid.&lt;/p&gt;</comment>
                            <comment id="13101200" author="ram_krish" created="Fri, 9 Sep 2011 13:31:50 +0000"  >&lt;p&gt;After &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4015&quot; title=&quot;Refactor the TimeoutMonitor to make it less racy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4015&quot;&gt;&lt;del&gt;HBASE-4015&lt;/del&gt;&lt;/a&gt; these are the following changes in my previous observation and &lt;br/&gt;
pls note that as part of this JIRA the fix will be once we get RegionAlreadyInTransition I will not be moving the memory state to OFFLINE&lt;br/&gt;
-&amp;gt; Open Open&lt;br/&gt;
Here if the first open region is in progress&lt;br/&gt;
a) before transition OFFLINE-&amp;gt;OPENING or OPENING-&amp;gt;OPENED&lt;br/&gt;
The second open region call will set the data to OFFLINE and there will be a version mismatch when the first RS tries to transit to OPENING and hence the first open region call will fail.&lt;br/&gt;
So the second open region call will get RegionAlreadyInTransition and its upto the TimeOutMonitor to now open the region as it finds the RIT in PENDING_OPEN&lt;br/&gt;
b) After transition to OPENED&lt;br/&gt;
By not moving the inmemory state to OFFLINE on RegionAlreadyIntransition, once a call back comes for OPENED node to Master we can delete the inmemory state  (this is already happening) of PENDING_OPEN due to second open region&lt;/p&gt;

&lt;p&gt;If we leave memory state in OFFLINE as per current behaviour &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (regionState == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ||
              (!regionState.isPendingOpen() &amp;amp;&amp;amp; !regionState.isOpening())) {
            LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Received OPENED &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region &quot;&lt;/span&gt; +
                prettyPrintedRegionName +
                &lt;span class=&quot;code-quote&quot;&gt;&quot; from server &quot;&lt;/span&gt; + data.getOrigin() + &lt;span class=&quot;code-quote&quot;&gt;&quot; but region was in &quot;&lt;/span&gt; +
                &lt;span class=&quot;code-quote&quot;&gt;&quot; the state &quot;&lt;/span&gt; + regionState + &lt;span class=&quot;code-quote&quot;&gt;&quot; and not &quot;&lt;/span&gt; +
                &lt;span class=&quot;code-quote&quot;&gt;&quot;in expected PENDING_OPEN or OPENING states&quot;&lt;/span&gt;);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; . &lt;br/&gt;
This is the major problem i see.&lt;/p&gt;

&lt;p&gt;-&amp;gt; Close Open&lt;br/&gt;
As per my previous analysis&lt;br/&gt;
a) before transition from CLOSING to CLOSED&lt;br/&gt;
when an open call arrives while close region is in progress, &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ZKAssign.transitionNodeClosed(server.getZooKeeper(), regionInfo,
          server.getServerName(), expectedVersion) == FAILED) {
        LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Completed the CLOSE of a region but when transitioning from &quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot; CLOSING to CLOSED got a version mismatch, someone &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; clashed &quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;so now unassigning&quot;&lt;/span&gt;);
        region.close();
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the region will be closed in RS side but the RIT in master will be in PENDING_OPEN due to regionalready in transtition which again the timeoutmonitor will take care of opening the region.&lt;br/&gt;
b) after setting the node to CLOSED state &lt;br/&gt;
here once again the assign call will happen as part of CloseRegionProcessing and if a parallel new open region arrives it goes back to Open Open state as described previously.&lt;/p&gt;

&lt;p&gt;Pls note that in all cases manually through admin assign() and unassign() has been invoked parallely.&lt;br/&gt;
I am not sure if you guys are planning to handle this scenario totally in a different way&lt;br/&gt;
as from my above analysis we can infer that things largely depend on the timeoutmonitor for the second operation to be successful.&lt;/p&gt;
</comment>
                            <comment id="13101231" author="yuzhihong@gmail.com" created="Fri, 9 Sep 2011 14:18:39 +0000"  >&lt;p&gt;So we should handle (Open Open) case b.&lt;/p&gt;

&lt;p&gt;Thanks for the analysis Ramkrishna.&lt;/p&gt;</comment>
                            <comment id="13102441" author="ram_krish" created="Mon, 12 Sep 2011 05:48:31 +0000"  >&lt;p&gt;@Ted &lt;br/&gt;
Found one more problem in not updating the in-memory state to OFFLINE as i had suggested in the previous comment.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!hijack &amp;amp;&amp;amp; !state.isClosed() &amp;amp;&amp;amp; !state.isOffline()) {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.abort(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unexpected state trying to OFFLINE; &quot;&lt;/span&gt; + state,
          &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalStateException());
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; -1;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If we get RegionAlreadyInTransitionException and if we continue assigning to another RS the above check will call master.abort() if we dont update the in-memory state to OFFLINE.&lt;br/&gt;
But having it in OFFLINE state will affect the OPEN OPEN scenario as mentioned in previous comment.  Will dig in more deeper&lt;/p&gt;</comment>
                            <comment id="13103752" author="yuzhihong@gmail.com" created="Tue, 13 Sep 2011 16:57:04 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; State extractRegionState(RegionAlreadyInTransitionException t) {
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t.getMessage().contains(&lt;span class=&quot;code-quote&quot;&gt;&quot;open&quot;&lt;/span&gt;)) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think the above check is a little fragile, considering the exception message from HRegionServer:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegionAlreadyInTransitionException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Received open&quot;&lt;/span&gt; +
+        &lt;span class=&quot;code-quote&quot;&gt;&quot; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region we are&quot;&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot; already &quot;&lt;/span&gt; +
+        (actionType ? &lt;span class=&quot;code-quote&quot;&gt;&quot;opening&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;closing&quot;&lt;/span&gt;) + &lt;span class=&quot;code-quote&quot;&gt;&quot;; &quot;&lt;/span&gt; +
+        region.getRegionNameAsString());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The string to be matched should be longer. And javadoc should be added to the above code in HRegionServer highlighting the phrase used in the check so that next person modifying the exception message knows what not to break.&lt;/p&gt;</comment>
                            <comment id="13103756" author="yuzhihong@gmail.com" created="Tue, 13 Sep 2011 17:00:42 +0000"  >&lt;p&gt;Also, the relatively long exception messages for closeRegion() and openRegion() can be extracted so that majority of the message is shared.&lt;br/&gt;
The javadoc warning developer I mentioned above can be placed on the extracted exception message.&lt;/p&gt;</comment>
                            <comment id="13103858" author="ram_krish" created="Tue, 13 Sep 2011 18:24:26 +0000"  >&lt;p&gt;Throwing exception when we get RegionalreadyInTransition is fine but there are 2 problems&lt;br/&gt;
-&amp;gt; If we try HBaseAdmin.move() or HBaseAdmin.unassign() the ClosedRegionHandler will call assign() and in this flow if we throw&lt;br/&gt;
RegionAlreadyInTransitionException is thrown then we cannot bring the exception upto the user as EventHandler.run() catches the exception&lt;br/&gt;
So only for HBaseAdmin.assign() we can get the exception propogated upto the user.&lt;/p&gt;

&lt;p&gt;-&amp;gt; If we make the assign() to throw exception then we need to handle it in many places.&lt;/p&gt;

&lt;p&gt;So i have just returned once we get RegionalreadyInTransition Exception.&lt;/p&gt;

&lt;p&gt;Another interesting thing observed was current in RegionalreadyInTransition.java&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; RegionAlreadyInTransitionException(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; action, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; region) {
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;we were passing 2 args.  Now in the master if i had to decode this exception and unwrap the exception I was not able&lt;br/&gt;
to do so because&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; IOException instantiateException(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; IOException&amp;gt; cls)
     &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
   Constructor&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; IOException&amp;gt; cn = cls.getConstructor(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.class);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is what we are expecting a single arg String constructor in RemoteException.java.  Hence i have done one modification of&lt;br/&gt;
passing the exact exception msg in the OpenRegionHandler and CloseRegionHandler&lt;/p&gt;

&lt;p&gt;and just&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; RegionAlreadyInTransitionException(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; action) {
&lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(s);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13104475" author="ram_krish" created="Wed, 14 Sep 2011 13:12:35 +0000"  >&lt;p&gt;Updated patch as per Ted&apos;s comments.&lt;br/&gt;
Thanks Ted for your review.&lt;/p&gt;</comment>
                            <comment id="13104509" author="yuzhihong@gmail.com" created="Wed, 14 Sep 2011 14:05:38 +0000"  >&lt;p&gt;ALREADY_TRANSITING can be named ALREADY_IN_TRANSITION.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getServerName() + RECEIVED + SPACE + OPEN + SPACE +
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Since the above string isn&apos;t part of landmark string, the last four can be combined. This is minor.&lt;/p&gt;

&lt;p&gt;+1 if tests pass.&lt;/p&gt;</comment>
                            <comment id="13104585" author="ram_krish" created="Wed, 14 Sep 2011 15:45:10 +0000"  >&lt;p&gt;Test cases related to protocol buffers were failing .&lt;br/&gt;
I dont think it is because of this fix.&lt;br/&gt;
Is it fine Ted ?&lt;/p&gt;</comment>
                            <comment id="13105828" author="yuzhihong@gmail.com" created="Fri, 16 Sep 2011 03:34:14 +0000"  >&lt;p&gt;After applying &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt;_2.patch, I got:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/home/hadoop/hbase/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java:[2685,45] cannot find symbol
symbol  : class Writable
location: class org.apache.hadoop.hbase.master.AssignmentManager

/home/hadoop/hbase/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java:[2809,4] method does not override or implement a method from a supertype

/home/hadoop/hbase/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java:[2817,4] method does not override or implement a method from a supertype
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ramkrishna got the following test failures:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.658 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.model.TestStorageClusterStatusModel
Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.736 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.model.TestStorageClusterVersionModel
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.439 sec
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.model.TestTableInfoModel
Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.642 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.model.TestTableListModel
Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.595 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.model.TestTableRegionModel
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.814 sec
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.model.TestTableSchemaModel
Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.626 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.model.TestVersionModel
Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.58 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.TestGzipFilter
Tests run: 4, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 66.295 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Tests run: 12, Failures: 7, Errors: 4, Skipped: 0, Time elapsed: 65.521 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.TestScannerResource
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.TestScannersWithFilters
Tests run: 11, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 75.764 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.TestSchemaResource
Tests run: 3, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 73.402 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.TestStatusResource
Tests run: 3, Failures: 1, Errors: 1, Skipped: 0, Time elapsed: 69.46 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.TestTableResource
Tests run: 9, Failures: 2, Errors: 1, Skipped: 0, Time elapsed: 161.619 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.TestTransform
Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 70.007 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.&lt;span class=&quot;code-keyword&quot;&gt;rest&lt;/span&gt;.TestVersionResource
Tests run: 8, Failures: 1, Errors: 1, Skipped: 0, Time elapsed: 65.267 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
Running org.apache.hadoop.hbase.security.TestUser
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above tests failed with compilation error in Proto buf code.&lt;/p&gt;</comment>
                            <comment id="13105835" author="yuzhihong@gmail.com" created="Fri, 16 Sep 2011 03:53:56 +0000"  >&lt;p&gt;Version 3 didn&apos;t have compilation problem.&lt;br/&gt;
TestTableInfoModel and TestStorageClusterStatusModel passed.&lt;br/&gt;
Running test suite now.&lt;/p&gt;</comment>
                            <comment id="13105868" author="stack" created="Fri, 16 Sep 2011 05:37:00 +0000"  >&lt;p&gt;Nits:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * RegionsAlreadyInTransitionException.  The above message is used
+   * to extract the status in the master. 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The comment &apos;above message&apos; doesn&apos;t seem to refer to anything?&lt;/p&gt;

&lt;p&gt;Do you want to say TRANSITIONING in below?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; ALREADY_TRANSITING = &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the region we are already trying to &quot;&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is odd Ram.  Why not just write it out?  Its odd having define for SPACE in particular:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; actionType = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.get(encodedName);
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegionAlreadyInTransitionException(REGIONSERVER + SPACE +
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getServerName() + RECEIVED + SPACE + OPEN + SPACE +
+        ALREADY_TRANSITING + (actionType ? OPEN : CLOSE) + &lt;span class=&quot;code-quote&quot;&gt;&quot;; &quot;&lt;/span&gt; +
+        region.getRegionNameAsString());   
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Otherwise, these more detailed exceptions are great.&lt;/p&gt;

&lt;p&gt;Except, are we repeating their creation?  Why not do the creation of the exception in a method and then you might not need the defines since the exception construction is done once only?&lt;/p&gt;

&lt;p&gt;Is it important to change this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt; getRegionsInTransitionInRS() {
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ConcurrentSkipListMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;&amp;gt; getRegionsInTransitionInRS() {
     &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS;
   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You could just return the keys?  No problem if its important to return whole map (Should this map be going outside of this class?  Will there be damage done if someone external to this class alters its content?)&lt;/p&gt;

&lt;p&gt;So here:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.add(region.getEncodedNameAsBytes());
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.putIfAbsent(encodedName, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What if there is something there already?  Previous we&apos;d overwrite whatever it was.  Now we&apos;ll not overwrite.  Is that a problem?&lt;/p&gt;

&lt;p&gt;Why redefine String over here in AssignmentManager:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; to compare the RegionsAlreadyInTransition from RS
&lt;/span&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; ALREADY_TRANSITING = &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the region we are &quot;&lt;/span&gt; +
+  	&lt;span class=&quot;code-quote&quot;&gt;&quot;already trying to &quot;&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Why not just use the define made already?  (Same for later in this class where you use it again and where you look for &apos;OPEN&apos;... use the define?&lt;/p&gt;

&lt;p&gt;FYI, you could write the below as:  return test? A: B;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t.getMessage().contains(ALREADY_TRANSITING+&lt;span class=&quot;code-quote&quot;&gt;&quot;OPEN&quot;&lt;/span&gt;)) {
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; RegionState.State.PENDING_OPEN;
+    }
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; RegionState.State.PENDING_CLOSE;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;Yeah, do you need to let out the new Map? You could just leave it as a Set as it was before especially if no one else cares about the values.  Just return Map.getKeys().&lt;/p&gt;

&lt;p&gt;Otherwise patch is good.&lt;/p&gt;</comment>
                            <comment id="13105879" author="yuzhihong@gmail.com" created="Fri, 16 Sep 2011 06:03:35 +0000"  >&lt;p&gt;@Michael:&lt;br/&gt;
The value from the new map is used to compose more meaningful exception message(s).&lt;br/&gt;
See the code above where you mentioned defining SPACE.&lt;br/&gt;
actionType holds the value of the map entry.&lt;/p&gt;</comment>
                            <comment id="13105884" author="yuzhihong@gmail.com" created="Fri, 16 Sep 2011 06:10:51 +0000"  >&lt;p&gt;Changing to bug as Todd suggested.&lt;/p&gt;</comment>
                            <comment id="13105905" author="yuzhihong@gmail.com" created="Fri, 16 Sep 2011 06:40:30 +0000"  >&lt;p&gt;All unit tests pass with patch version 3.&lt;/p&gt;</comment>
                            <comment id="13105915" author="ram_krish" created="Fri, 16 Sep 2011 07:10:26 +0000"  >&lt;p&gt;@Stack&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Why redefine String over here in AssignmentManager:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If we are going to define this in one place then we need to find a common class and define it there.  And a string like Already region in transition in some common class may be weird if some one tries to use that common class. That is why i declared in 2 places.  Kindly suggest. &lt;/p&gt;</comment>
                            <comment id="13106645" author="ram_krish" created="Fri, 16 Sep 2011 18:09:19 +0000"  >&lt;p&gt;@Stack&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.add(region.getEncodedNameAsBytes());
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.putIfAbsent(encodedName, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Previously it was set.add() which was calling the map&apos;s entry set put if absent.  So functionally there is no change. &lt;br/&gt;
The usage of map is to just get the type of operation whether it was open or close.A&lt;br/&gt;
LREADY_TRANSITING changed to ALREADY_TRANSITIONING. We dont need the map in the master side.  Just use the map to determine the type of operation in the RS side , form the exception message based on the entry in the map and throw exception.&lt;/p&gt;

&lt;p&gt;Stack, if there is anything else you wanted to change.  Let me know am ready to do it.&lt;br/&gt;
Tests are passing.&lt;/p&gt;</comment>
                            <comment id="13106770" author="stack" created="Fri, 16 Sep 2011 20:07:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Previously it was set.add() which was calling the map&apos;s entry set put if absent. So functionally there is no change. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are correct.  I thought it overwrote but looking at src, indeed its doing a putIfAbsent which is not what I&apos;d expect but is in line with your assertion that functionally there is no change.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If we are going to define this in one place then we need to find a common class and define it there.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There is HConstants for stuff that is common across the code base (though I don&apos;t like our overuse).  I&apos;d think you&apos;d put this where it feels most natural as a public static final &amp;#8211; into the exception class itself? &amp;#8211; and then have the other client reference it out of its home location.  What happens if this define gets changed in one place but not in the other.  Your check will break.&lt;/p&gt;</comment>
                            <comment id="13106777" author="stack" created="Fri, 16 Sep 2011 20:22:08 +0000"  >&lt;p&gt;There are some tabs in your patch.  Be careful.&lt;/p&gt;

&lt;p&gt;Rather than do this check for Open/Close, why not throw different exceptions dependent on whether it open or close?  Subclass RegionAlreadyInTransitionException.  Then you wouldn&apos;t have to do this fragile String compare or do these defines of things like RECEIVED, OPEN (with a space) and CLOSE (with a space).&lt;/p&gt;

&lt;p&gt;The changes in TestOpenRegionHandler are good.&lt;/p&gt;
</comment>
                            <comment id="13106778" author="stack" created="Fri, 16 Sep 2011 20:22:09 +0000"  >&lt;p&gt;There are some tabs in your patch.  Be careful.&lt;/p&gt;

&lt;p&gt;Rather than do this check for Open/Close, why not throw different exceptions dependent on whether it open or close?  Subclass RegionAlreadyInTransitionException.  Then you wouldn&apos;t have to do this fragile String compare or do these defines of things like RECEIVED, OPEN (with a space) and CLOSE (with a space).&lt;/p&gt;

&lt;p&gt;The changes in TestOpenRegionHandler are good.&lt;/p&gt;
</comment>
                            <comment id="13106800" author="yuzhihong@gmail.com" created="Fri, 16 Sep 2011 20:43:45 +0000"  >&lt;p&gt;Subclassing is a good idea.&lt;br/&gt;
Alternatively, how about storing RegionState inside RegionAlreadyInTransitionException and exposing it through:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; State returnRegionState()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13107012" author="ram_krish" created="Sat, 17 Sep 2011 03:58:46 +0000"  >&lt;p&gt;I will check on both the things suggested by Stack and Ted.&lt;br/&gt;
Thanks to both of you for your comments. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Will try to come up with a better one.&lt;/p&gt;</comment>
                            <comment id="13107742" author="ram_krish" created="Mon, 19 Sep 2011 11:10:45 +0000"  >&lt;p&gt;Cleaned up String comparisons.&lt;br/&gt;
No if checks.  Made things more simpler.&lt;br/&gt;
Pls comment.&lt;/p&gt;</comment>
                            <comment id="13107831" author="yuzhihong@gmail.com" created="Mon, 19 Sep 2011 13:57:54 +0000"  >&lt;p&gt;Minor comment: checkIfRegionInTransition() should be named checkIfRegionAlreadyInTransition()&lt;br/&gt;
Latest patch looks cleaner.&lt;br/&gt;
Are tests passing ?&lt;/p&gt;</comment>
                            <comment id="13108375" author="ram_krish" created="Tue, 20 Sep 2011 05:00:00 +0000"  >&lt;p&gt;Addressing Ted&apos;s comments.&lt;br/&gt;
Tests are passing.  &lt;/p&gt;</comment>
                            <comment id="13108631" author="yuzhihong@gmail.com" created="Tue, 20 Sep 2011 12:36:58 +0000"  >&lt;p&gt;Test suite had a few failures:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failed tests:   testBasicRollingRestart(org.apache.hadoop.hbase.master.TestRollingRestart): expected:&amp;lt;22&amp;gt; but was:&amp;lt;6&amp;gt;

Tests in error:
  testRSAlreadyProcessingRegion(org.apache.hadoop.hbase.master.TestZKBasedOpenCloseRegion)
  testFailedOpenRegion(org.apache.hadoop.hbase.regionserver.handler.TestOpenRegionHandler)
  testFailedUpdateMeta(org.apache.hadoop.hbase.regionserver.handler.TestOpenRegionHandler)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13108659" author="ram_krish" created="Tue, 20 Sep 2011 13:08:31 +0000"  >&lt;p&gt;I will check once again and will let you know in sometime. &lt;/p&gt;</comment>
                            <comment id="13108708" author="ram_krish" created="Tue, 20 Sep 2011 13:37:53 +0000"  >&lt;p&gt;TestOpenRegionHandler change in patch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt;_3.patch was not applied in latest.&lt;br/&gt;
But i had the changed code in my code base.. hence the testcases passed.  Other two testcases i dont find any errors. Correct me if am wrong Ted.  Thanks for your findings &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Running org.apache.hadoop.hbase.master.TestRollingRestart
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 95.718 sec

Running org.apache.hadoop.hbase.master.TestZKBasedOpenCloseRegion
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 38.593 sec

Running org.apache.hadoop.hbase.regionserver.handler.TestOpenRegionHandler
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.825 sec

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13108736" author="ram_krish" created="Tue, 20 Sep 2011 14:19:46 +0000"  >&lt;p&gt;Did one small change.  Rhe return type of getRegionsInTransitionInRS() in RegionServerServices has been made to Map instead of ConcurrentSkipListMap because it is a good practice to return the super type in interfaces. This avoids the change in TestOpenRegionHandler.&lt;/p&gt;</comment>
                            <comment id="13108853" author="yuzhihong@gmail.com" created="Tue, 20 Sep 2011 17:44:04 +0000"  >&lt;p&gt;I ran test suite on 0.92 and saw two failures:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Failed tests:   testRowRange(org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol): Results should contain region test,ccc,1316534680968.20178584e985d7c9300aa37d3fa249b9. &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; row &apos;ccc&apos;

Tests in error:
  testRSAlreadyProcessingRegion(org.apache.hadoop.hbase.master.TestZKBasedOpenCloseRegion)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Both of them passed when run standalone.&lt;/p&gt;

&lt;p&gt;+1 on patch v6.&lt;/p&gt;</comment>
                            <comment id="13109671" author="yuzhihong@gmail.com" created="Wed, 21 Sep 2011 17:18:11 +0000"  >&lt;p&gt;Integrated to 0.92 branch and TRUNK.&lt;/p&gt;

&lt;p&gt;Thanks for the patch Ramkrishna.&lt;/p&gt;</comment>
                            <comment id="13109674" author="yuzhihong@gmail.com" created="Wed, 21 Sep 2011 17:19:37 +0000"  >&lt;p&gt;Thanks for the review Stack.&lt;/p&gt;</comment>
                            <comment id="13109785" author="dhruba" created="Wed, 21 Sep 2011 19:07:11 +0000"  >&lt;p&gt;This introduced a compilation problem. can somebody please fix it:&lt;/p&gt;

&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/handler/MockRegionServerServices.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;140,9&amp;#93;&lt;/span&gt; class, interface, or enum expected&lt;/p&gt;
</comment>
                            <comment id="13109807" author="hudson" created="Wed, 21 Sep 2011 19:27:58 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2240 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2240/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2240/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt;  Handle RegionAlreadyInTransitionException in AssignmentManager  &lt;br/&gt;
               (Ramkrishna)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionAlreadyInTransitionException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/handler/MockRegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13109809" author="hudson" created="Wed, 21 Sep 2011 19:29:01 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #8 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/8/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/8/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt;  Handle RegionAlreadyInTransitionException in AssignmentManager  &lt;br/&gt;
               (Ramkrishna)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/RegionAlreadyInTransitionException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/regionserver/handler/MockRegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13109831" author="yuzhihong@gmail.com" created="Wed, 21 Sep 2011 20:00:52 +0000"  >&lt;p&gt;The extra brace has been removed.&lt;br/&gt;
I ran TestZKBasedOpenCloseRegion and it passed.&lt;/p&gt;</comment>
                            <comment id="13112227" author="hudson" created="Wed, 21 Sep 2011 23:30:44 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #9 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/9/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/9/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt; fix TestOpenRegionHandler w.r.t. MockRegionServerServices&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt; apply correct patch - v4&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/RegionAlreadyInTransitionException.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/regionserver/handler/MockRegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13112250" author="streamy" created="Thu, 22 Sep 2011 00:06:09 +0000"  >&lt;p&gt;Looks like this introduced a compile error in MockRegionServerServices?&lt;/p&gt;</comment>
                            <comment id="13112251" author="streamy" created="Thu, 22 Sep 2011 00:06:48 +0000"  >&lt;p&gt;nevermind!&lt;/p&gt;</comment>
                            <comment id="13112279" author="hudson" created="Thu, 22 Sep 2011 01:18:00 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2241 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2241/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2241/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt; fix TestOpenRegionHandler w.r.t. MockRegionServerServices&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt; remove extra brace in MockRegionServerServices.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt; apply the correct patch - v4&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/handler/MockRegionServerServices.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionAlreadyInTransitionException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/handler/MockRegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13112454" author="ram_krish" created="Thu, 22 Sep 2011 10:01:04 +0000"  >&lt;p&gt;I have fixed the testcase&lt;br/&gt;
I will submit the addendum.  Ted thanks for tracking this. &lt;/p&gt;</comment>
                            <comment id="13112494" author="ram_krish" created="Thu, 22 Sep 2011 11:56:08 +0000"  >&lt;p&gt;Fix for testcase and also interface change in RegionServerServices. &lt;/p&gt;</comment>
                            <comment id="13112530" author="yuzhihong@gmail.com" created="Thu, 22 Sep 2011 13:07:08 +0000"  >&lt;p&gt;I ran the Ramkrishna&apos;s addendum locally and TestZKBasedOpenCloseRegion#testRSAlreadyProcessingRegion passed.&lt;/p&gt;

&lt;p&gt;Integrated the addendum to 0.92 and TRUNK.&lt;/p&gt;

&lt;p&gt;Thanks for the quick response Ramkrishna.&lt;/p&gt;</comment>
                            <comment id="13112683" author="hudson" created="Thu, 22 Sep 2011 16:12:45 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2243 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2243/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2243/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt; Ramkrishna&apos;s fix for TestZKBasedOpenCloseRegion#testRSAlreadyProcessingRegion&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13112812" author="hudson" created="Thu, 22 Sep 2011 18:38:30 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #12 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/12/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/12/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4153&quot; title=&quot;Handle RegionAlreadyInTransitionException in AssignmentManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4153&quot;&gt;&lt;del&gt;HBASE-4153&lt;/del&gt;&lt;/a&gt; Ramkrishna&apos;s fix for TestZKBasedOpenCloseRegion#testRSAlreadyProcessingRegion&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15015690" author="lars_francke" created="Fri, 20 Nov 2015 11:52:12 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12494761" name="4153-v3.txt" size="16052" author="yuzhihong@gmail.com" created="Fri, 16 Sep 2011 06:40:30 +0000"/>
                            <attachment id="12494255" name="HBASE-4153_1.patch" size="12144" author="ram_krish" created="Tue, 13 Sep 2011 16:22:37 +0000"/>
                            <attachment id="12494439" name="HBASE-4153_2.patch" size="13812" author="ram_krish" created="Wed, 14 Sep 2011 13:12:35 +0000"/>
                            <attachment id="12494834" name="HBASE-4153_3.patch" size="16621" author="ram_krish" created="Fri, 16 Sep 2011 18:10:25 +0000"/>
                            <attachment id="12495043" name="HBASE-4153_4.patch" size="14133" author="ram_krish" created="Mon, 19 Sep 2011 11:10:45 +0000"/>
                            <attachment id="12495190" name="HBASE-4153_5.patch" size="14154" author="ram_krish" created="Tue, 20 Sep 2011 05:00:00 +0000"/>
                            <attachment id="12495227" name="HBASE-4153_6.patch" size="14298" author="ram_krish" created="Tue, 20 Sep 2011 14:19:46 +0000"/>
                            <attachment id="12496097" name="HBASE-4153_addendum.patch" size="2686" author="ram_krish" created="Thu, 22 Sep 2011 11:56:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 13 Aug 2011 13:16:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27195</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hpmf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101413</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>