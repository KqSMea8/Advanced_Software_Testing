<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:08:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3287/HBASE-3287.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3287] Add option to cache blocks on hfile write and evict blocks on hfile close</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3287</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This issue is about adding configuration options to add/remove from the block cache when creating/closing files.  For use cases with lots of flushing and compacting, this might be desirable to prevent cache misses and maximize the effective utilization of total block cache capacity.&lt;/p&gt;

&lt;p&gt;The first option, &lt;tt&gt;hbase.rs.cacheblocksonwrite&lt;/tt&gt;, will make it so we pre-cache blocks as we are writing out new files.&lt;/p&gt;

&lt;p&gt;The second option, &lt;tt&gt;hbase.rs.evictblocksonclose&lt;/tt&gt;, will make it so we evict blocks when files are closed.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12491614">HBASE-3287</key>
            <summary>Add option to cache blocks on hfile write and evict blocks on hfile close</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="streamy">Jonathan Gray</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Tue, 30 Nov 2010 07:07:34 +0000</created>
                <updated>Fri, 20 Nov 2015 12:41:28 +0000</updated>
                            <resolved>Tue, 30 Nov 2010 20:42:59 +0000</resolved>
                                    <version>0.90.0</version>
                                    <fixVersion>0.92.0</fixVersion>
                                    <component>io</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12965134" author="hbasereviewboard" created="Tue, 30 Nov 2010 07:25:13 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1261/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase, stack and khemani.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This issue is about adding configuration options to add/remove from the block cache when creating/closing files. For use cases with lots of flushing and compacting, this might be desirable to prevent cache misses and maximize the effective utilization of total block cache capacity.&lt;/p&gt;

&lt;p&gt;The first option, hbase.rs.cacheblocksonwrite, will make it so we pre-cache blocks as we are writing out new files.&lt;/p&gt;

&lt;p&gt;The second option, hbase.rs.evictblocksonclose, will make it so we evict blocks when files are closed.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3287&quot; title=&quot;Add option to cache blocks on hfile write and evict blocks on hfile close&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3287&quot;&gt;&lt;del&gt;HBASE-3287&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-3287&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-3287&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  branches/0.90/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java 1040422 &lt;br/&gt;
  branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCache.java 1040422 &lt;br/&gt;
  branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java 1040422 &lt;br/&gt;
  branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java 1040422 &lt;br/&gt;
  branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/SimpleBlockCache.java 1040422 &lt;br/&gt;
  branches/0.90/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java 1040422 &lt;br/&gt;
  branches/0.90/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1040422 &lt;br/&gt;
  branches/0.90/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java 1040422 &lt;br/&gt;
  branches/0.90/src/main/java/org/apache/hadoop/hbase/util/CompressionTest.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/HFilePerformanceEvaluation.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/io/TestHalfStoreFileReader.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/io/hfile/RandomSeek.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFilePerformance.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileSeek.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/io/hfile/TestReseekTo.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/io/hfile/TestSeekTo.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/mapreduce/TestLoadIncrementalHFiles.java 1040422 &lt;br/&gt;
  branches/0.90/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 1040422 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1261/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added a unit test to TestStoreFile.  That passes.&lt;/p&gt;

&lt;p&gt;Need to do perf testing on a cluster.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;

</comment>
                            <comment id="12965309" author="hbasereviewboard" created="Tue, 30 Nov 2010 17:54:13 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1261/#review2009&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#review2009&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Looks good to me.  Some comments below.&lt;/p&gt;


&lt;p&gt;branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCache.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/#comment6343&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#comment6343&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This looks like useful addition.&lt;/p&gt;



&lt;p&gt;branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/#comment6346&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#comment6346&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why the flush?&lt;/p&gt;



&lt;p&gt;branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/#comment6344&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#comment6344&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Does this create new byte array?&lt;/p&gt;



&lt;p&gt;branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/#comment6345&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#comment6345&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I wonder if we have to have full path here?  Anything less could cause clashes?  But small optimization would strip the hbase.root at least?&lt;/p&gt;



&lt;p&gt;branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/#comment6347&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#comment6347&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can you presize the BAOS?  Whats the default?  4k?  If so, and our default block size is 64k, that&apos;d be a bit of expensive array resizing going on?  Just guessing.&lt;/p&gt;



&lt;p&gt;branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/#comment6348&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#comment6348&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Surround with if debug?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12965310" author="hbasereviewboard" created="Tue, 30 Nov 2010 17:58:10 +0000"  >&lt;p&gt;Message from: &quot;Ryan Rawson&quot; &amp;lt;ryanobjc@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1261/#review2010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#review2010&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/#comment6349&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#comment6349&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    why would you not want to evict blocks from the cache on close?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ryan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12965311" author="hbasereviewboard" created="Tue, 30 Nov 2010 18:00:10 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-30 09:57:27, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java, line 765&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/diff/1/?file=17902#file17902line765&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/diff/1/?file=17902#file17902line765&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     why would you not want to evict blocks from the cache on close?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this a good point.  Its different behavior but its behavior we should have always had?  One less option too.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1261/#review2010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#review2010&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12965416" author="streamy" created="Tue, 30 Nov 2010 20:37:28 +0000"  >&lt;p&gt;Final patch against trunk.  Change from last review is EvictOnClose is now on by default.  CacheOnWrite is stil off by default.&lt;/p&gt;</comment>
                            <comment id="12965421" author="streamy" created="Tue, 30 Nov 2010 20:42:59 +0000"  >&lt;p&gt;Committed to trunk.  I&apos;m going to be using this in prod atop 0.90 but since it&apos;s really a new feature I&apos;ve left it out of 0.90 tree for now.&lt;/p&gt;

&lt;p&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3288&quot; title=&quot;CacheOnWrite and EvictOnClose should be configurable on a per-family basis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3288&quot;&gt;&lt;del&gt;HBASE-3288&lt;/del&gt;&lt;/a&gt; to make this configurable at the family level (something I don&apos;t need yet but we should support eventually).&lt;/p&gt;</comment>
                            <comment id="12965455" author="hbasereviewboard" created="Tue, 30 Nov 2010 22:04:13 +0000"  >&lt;p&gt;Message from: &quot;Ryan Rawson&quot; &amp;lt;ryanobjc@gmail.com&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-30 09:57:27, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java, line 765&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/diff/1/?file=17902#file17902line765&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/diff/1/?file=17902#file17902line765&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     why would you not want to evict blocks from the cache on close?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I think this a good point.  Its different behavior but its behavior we should have always had?  One less option too.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m still confused why we are adding config for something that we should always be doing it.  While we&apos;ll never be zero conf, I am not seeing the reason why we&apos;d want to keep things in the LRU.  &lt;/p&gt;

&lt;p&gt;It would make more sense not to evict on a split, but evict every other time, since a split will probably reopen the same hfiles and need those blocks again.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ryan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1261/#review2010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#review2010&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12965487" author="hbasereviewboard" created="Tue, 30 Nov 2010 23:20:13 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-30 09:57:27, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java, line 765&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/diff/1/?file=17902#file17902line765&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/diff/1/?file=17902#file17902line765&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     why would you not want to evict blocks from the cache on close?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I think this a good point.  Its different behavior but its behavior we should have always had?  One less option too.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;m still confused why we are adding config for something that we should always be doing it.  While we&apos;ll never be zero conf, I am not seeing the reason why we&apos;d want to keep things in the LRU.  &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It would make more sense not to evict on a split, but evict every other time, since a split will probably reopen the same hfiles and need those blocks again.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it makes sense to have undocumented configuration parameters.  The default behavior is then &quot;the way&quot; but having a config option checked in the code at least gives the opportunity to turn something on/off without making a code change and redeploying completely.  In the unit test, I&apos;m turning it on/off with the config parameter so I can verify it works as expected.&lt;/p&gt;

&lt;p&gt;And although I&apos;ve changed the default to true, I&apos;m not convinced that it always makes sense in all cases.&lt;/p&gt;

&lt;p&gt;Ryan came up with example of the split, though that would override the config parameter.  But I think there could be other situations where you don&apos;t want to as well.&lt;/p&gt;

&lt;p&gt;In any case, I want to keep it configurable so I can turn it on/off between test runs and see what, if any, difference these optimizations make and IMO there&apos;s very little cost associated with using conf.getBoolean(&quot;some.undocumented.thing&quot;, true) vs. a hard-coded true (if there&apos;s any possibility you might want to change the behavior).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1261/#review2010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#review2010&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12965489" author="hbasereviewboard" created="Tue, 30 Nov 2010 23:30:10 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-30 09:57:27, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; branches/0.90/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java, line 765&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1261/diff/1/?file=17902#file17902line765&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/diff/1/?file=17902#file17902line765&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     why would you not want to evict blocks from the cache on close?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I think this a good point.  Its different behavior but its behavior we should have always had?  One less option too.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;m still confused why we are adding config for something that we should always be doing it.  While we&apos;ll never be zero conf, I am not seeing the reason why we&apos;d want to keep things in the LRU.  &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It would make more sense not to evict on a split, but evict every other time, since a split will probably reopen the same hfiles and need those blocks again.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I think it makes sense to have undocumented configuration parameters.  The default behavior is then &quot;the way&quot; but having a config option checked in the code at least gives the opportunity to turn something on/off without making a code change and redeploying completely.  In the unit test, I&apos;m turning it on/off with the config parameter so I can verify it works as expected.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;And although I&apos;ve changed the default to true, I&apos;m not convinced that it always makes sense in all cases.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ryan came up with example of the split, though that would override the config parameter.  But I think there could be other situations where you don&apos;t want to as well.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;In any case, I want to keep it configurable so I can turn it on/off between test runs and see what, if any, difference these optimizations make and IMO there&apos;s very little cost associated with using conf.getBoolean(&quot;some.undocumented.thing&quot;, true) vs. a hard-coded true (if there&apos;s any possibility you might want to change the behavior).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Filed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3289&quot; title=&quot;EvictOnClose should be disabled when closing parent of split&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3289&quot;&gt;&lt;del&gt;HBASE-3289&lt;/del&gt;&lt;/a&gt; to disable them on close of parent files during split.  I looked at the code and it&apos;s a fairly significant change since we&apos;ll need to pass a boolean in to all of the close() methods (there are several levels of them).&lt;/p&gt;

&lt;p&gt;Also, figuring out when we do want to evict these blocks (once both children have closed the file) is tricky.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1261/#review2010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1261/#review2010&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="13081372" author="yiliang" created="Tue, 9 Aug 2011 02:13:45 +0000"  >&lt;p&gt;Is there a patch for 0.90.3? &lt;/p&gt;</comment>
                            <comment id="13081432" author="stack" created="Tue, 9 Aug 2011 04:36:40 +0000"  >&lt;p&gt;@Yi This issue looks like its old enough for the patch herein to have made 0.90. Are you not finding it there?  (I believe there were issues found with the way we cached blocks on write found subsequent to the application of this patch, wrong name was used when file was added to cache &amp;#8211; in trunk its been redone)&lt;/p&gt;</comment>
                            <comment id="13082080" author="yiliang" created="Wed, 10 Aug 2011 01:30:12 +0000"  >&lt;p&gt;@stack You mean there&apos;s something wrong with this patch? So what should we do if we want to enable this option? Use the code from trunk? IMO a correct patch against 0.90 will be very useful until 0.92.0 releases as this feature is so critical for online service.&lt;/p&gt;</comment>
                            <comment id="13082703" author="stack" created="Wed, 10 Aug 2011 21:56:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;So what should we do if we want to enable this option?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Someone (you?) should fix whats broke.&lt;/p&gt;</comment>
                            <comment id="15016986" author="lars_francke" created="Fri, 20 Nov 2015 12:41:28 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12494730">HBASE-3417</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12491693">HBASE-3288</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12464988" name="HBASE-3287-FINAL-trunk.patch" size="38081" author="streamy" created="Tue, 30 Nov 2010 20:37:28 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Nov 2010 07:25:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32972</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hll3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100759</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Introduces two new configuration parameters: hbase.rs.cacheblocksonwrite (default: false) which will pre-cache all blocks of a file into the block cache as it is written, and hbase.rs.evictblocksonclose (default: true) which will evict all blocks of a file from the block cache when a file is closed on a RS.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>