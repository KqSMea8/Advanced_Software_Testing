<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:02:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9208/HBASE-9208.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9208] ReplicationLogCleaner slow at large scale</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9208</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;At a large scale the ReplicationLogCleaner fails to clean up .oldlogs as fast as the cluster is producing them.  For each old HLog file that has been replicated and should be deleted the ReplicationLogCleaner checks every replication queue in ZooKeeper before removing it.  This means that as a cluster scales up the number of files to delete scales as well as the time to delete each file so the cleanup chore scales quadratically.  In our case it reached the point where the oldlogs were growing faster than they were being cleaned up.&lt;/p&gt;

&lt;p&gt;We&apos;re now running with a patch that allows the ReplicationLogCleaner to refresh its list of files in the replication queues from ZooKeeper just once for each batch of files the CleanerChore wants to evaluate.&lt;/p&gt;

&lt;p&gt;I&apos;d propose updating FileCleanerDelegate to take a List&amp;lt;FileStatus&amp;gt; rather than a single one at a time.  This would allow file cleaners that check an external resource for references such as ZooKeeper (for ReplicationLogCleaner) or HDFS (for SnapshotLogCleaner which looks like it may also have similar trouble at scale) to load those references once per batch rather than for every log.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12663509">HBASE-9208</key>
            <summary>ReplicationLogCleaner slow at large scale</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davelatham">Dave Latham</assignee>
                                    <reporter username="davelatham">Dave Latham</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Aug 2013 20:44:22 +0000</created>
                <updated>Fri, 20 Nov 2015 11:53:37 +0000</updated>
                            <resolved>Thu, 29 Aug 2013 04:32:28 +0000</resolved>
                                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.96.0</fixVersion>
                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13738869" author="jdcryans" created="Tue, 13 Aug 2013 21:40:39 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13739001" author="lhofhansl" created="Tue, 13 Aug 2013 23:20:20 +0000"  >&lt;p&gt;Sounds good. Can you post the patch, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=davelatham&quot; class=&quot;user-hover&quot; rel=&quot;davelatham&quot;&gt;Dave Latham&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13739010" author="davelatham" created="Tue, 13 Aug 2013 23:23:06 +0000"  >&lt;p&gt;My patch is somewhat old now and not what I think would make for the nicest approach going forward any way (rather than passing a List&amp;lt;FileStatus&amp;gt; it added startBatch and endBatch methods which I found simpler to adapt to the existing recursive logic in CleanerChore).  Since the approach sounds good to you guys I will work up a trunk patch.&lt;/p&gt;</comment>
                            <comment id="13739883" author="davelatham" created="Wed, 14 Aug 2013 17:04:19 +0000"  >&lt;p&gt;The CleanerChore is shared code between cleaning up HLogs in .oldlogs (a single directory with many files) and cleaning up HFiles in archive (which can have many nested subdirectories).  The proposal here assumes that as long as we get file listings from HDFS first and then check for references to those files second that we&apos;re safe to delete the file if there are no such references (of course the existing code has the same assumption).  So that leaves a choice:&lt;/p&gt;

&lt;p&gt;(a) We can do this batch for each directory at a time only which should still solve the issue for HLogs (so long as they stay in a flat directory) but wouldn&apos;t allow the HFile archive to use as much of the optimization. Or:&lt;/p&gt;

&lt;p&gt;(b) We can first do a full recursive load of all files in the base directory, and call a batch filter across all those files.  Then, in order to remove now empty subdirectories we need to do some bookkeeping to associate which ones we believe may now be empty (of course some subdirectories may have new entries created in the mean time).&lt;/p&gt;

&lt;p&gt;Since I&apos;m focused for the moment on HLogs I&apos;m planning on sticking with the simpler (a) for now, unless I hear some clamoring for the fuller solution (b).&lt;/p&gt;

&lt;p&gt;One other question occurred when doing some work on CleanerChore for this.  If an IOException occurs during deleting an entry in the top level directory the chore continues attempting to delete the other entries.  However, if an IOException is thrown deleting an entry in a subdirectory it aborts trying other entries in the subdirectory.  I&apos;d prefer to see consistency (and it would make it easier to share the code) if we either give up the entire current chore iteration on an unexpected file system IOException (i.e. we still tolerate IOException when deleting a non-empty directory) or alternately attempt to continue crawling all subentries.  Does anyone have an opinion on which is better (or disagree about making the behavior consistent between top level entries and sublevel entries)?&lt;/p&gt;</comment>
                            <comment id="13739996" author="lhofhansl" created="Wed, 14 Aug 2013 18:20:51 +0000"  >&lt;p&gt;+1 for (a). I assume part of the problem is that we repeatedly check ZK to check whether a file maybe removed. For the HFile archiver we do not need to do that.&lt;/p&gt;</comment>
                            <comment id="13740319" author="jesse_yates" created="Wed, 14 Aug 2013 22:34:37 +0000"  >&lt;p&gt;+1 also on (a) for Lars&apos; reasons &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;Seems like it would be best to keep trying for all subdirectories, rather than bailing out.&lt;/p&gt;

&lt;p&gt;Is there any reason why bailing early would be a good thing? I guess it depends on the IOException (which HDFS doesn&apos;t describe) - if its an IOException because the file doesn&apos;t exist, then keep going; however, if its because HDFS is down, then we should just stop early and save ourselves the effort. Seems like there isn&apos;t really a downside to continuing the other directories, as long as we check for stopping/interruptions along the way (b/c someone else on the server found the FS was down).&lt;/p&gt;</comment>
                            <comment id="13741524" author="davelatham" created="Thu, 15 Aug 2013 21:45:25 +0000"  >&lt;p&gt;Attaching &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9208&quot; title=&quot;ReplicationLogCleaner slow at large scale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9208&quot;&gt;&lt;del&gt;HBASE-9208&lt;/del&gt;&lt;/a&gt;.patch with the following changes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Updated FileCleanerDelegate from &lt;tt&gt;boolean isFileDeletable(FileStatus fStat);&lt;/tt&gt; to &lt;tt&gt;Iterable&amp;lt;FileStatus&amp;gt; getDeletableFiles(Iterable&amp;lt;FileStatus&amp;gt; files);&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;Added an abstract BaseFileCleanerDelegate that implements the new batch method in terms of the old method so that existing cleaners will work by extending this base class.&lt;/li&gt;
	&lt;li&gt;Updated CleanerChore to make a single call to each cleaner with a batch of all files for each directory (option (a) in coment above).  Also now catches and logs unexpected IOExceptions for each entry of subdirectories rather than aborting to be consistent with behavior of the top level directory as mentioned above and suggested by Jesse.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It is also available on review board at:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/13608/diff/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/13608/diff/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have not updated SnapshotLogCleaner to take advantage of the batching interface.  I intend to create a separate JIRA for that.&lt;/p&gt;

&lt;p&gt;A couple more questions arose during the work:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ReplicationLogCleaner.stop contains:
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;// Not sure why we&apos;re deleting a connection that we never acquired or used
HConnectionManager.deleteConnection(this.getConf());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is this correct with the latest work on connection management?&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;The cleaner hierarchy may now be deeper than needed.  In particular there is a FileCleanerDelegate interface which is implemented by a BaseFileCleanerDelegate which is subclased by each of BaseHFileCleanerDelegate (which adds only the stopped field) and BaseLogCleanerDelegate (which includes a deprecated isLogDeletable method).  In turn these are subclassed by the concrete implementations.  Should the base classes be consolidated?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Reviews and input would be greatly appreciated.&lt;/p&gt;</comment>
                            <comment id="13741529" author="davelatham" created="Thu, 15 Aug 2013 21:47:43 +0000"  >&lt;p&gt;Meant to add that the patch also updates ReplicationLogCleaner to use the new batching method to only load the ZK replication queues once per batch rather than for every file.&lt;/p&gt;</comment>
                            <comment id="13741683" author="hadoopqa" created="Thu, 15 Aug 2013 23:44:26 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12598300/HBASE-9208.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12598300/HBASE-9208.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6770//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13743971" author="davelatham" created="Mon, 19 Aug 2013 16:34:29 +0000"  >&lt;p&gt;Attaching &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9208&quot; title=&quot;ReplicationLogCleaner slow at large scale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9208&quot;&gt;&lt;del&gt;HBASE-9208&lt;/del&gt;&lt;/a&gt;-v2.patch.&lt;/p&gt;

&lt;p&gt;It contains some minor javadoc, comment, and formatting fixes and additions.&lt;/p&gt;

&lt;p&gt;Thanks, Ted, for the review.&lt;/p&gt;</comment>
                            <comment id="13744062" author="hadoopqa" created="Mon, 19 Aug 2013 17:55:12 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12598781/HBASE-9208-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12598781/HBASE-9208-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6811//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13744073" author="davelatham" created="Mon, 19 Aug 2013 18:04:46 +0000"  >&lt;p&gt;Attaching &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9208&quot; title=&quot;ReplicationLogCleaner slow at large scale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9208&quot;&gt;&lt;del&gt;HBASE-9208&lt;/del&gt;&lt;/a&gt;-0.94.patch&lt;/p&gt;

&lt;p&gt;Here is a backport to 0.94.&lt;/p&gt;</comment>
                            <comment id="13744172" author="hadoopqa" created="Mon, 19 Aug 2013 20:26:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12598799/HBASE-9208-0.94.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12598799/HBASE-9208-0.94.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6814//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6814//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13744502" author="lhofhansl" created="Mon, 19 Aug 2013 23:28:42 +0000"  >&lt;p&gt;Trunk patch looks. +1&lt;/p&gt;</comment>
                            <comment id="13744505" author="yuzhihong@gmail.com" created="Mon, 19 Aug 2013 23:30:11 +0000"  >&lt;p&gt;+1 as well.&lt;/p&gt;</comment>
                            <comment id="13744509" author="lhofhansl" created="Mon, 19 Aug 2013 23:32:51 +0000"  >&lt;p&gt;For the 0.94 patch, why is this needed:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   @Deprecated
-  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isLogDeletable(FileStatus fStat);
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isLogDeletable(FileStatus fStat) {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Seems safer to leave the method abstract.&lt;/p&gt;</comment>
                            <comment id="13745252" author="davelatham" created="Tue, 20 Aug 2013 18:34:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;For the 0.94 patch, why is this needed:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That is there because the ReplicationLogCleaner no longer implements isLogDeletable and instead implements getDeletableFiles directly.  This brings up a good point that I had not carefully considered.  What are the compatibility requirements for log cleaners?  The current patches break compatibility and would require existing log cleaners to implement the changed interface or extend the BaseFileCleanerDelegate.  This seems like a bad idea for 0.94, but probably ok for 0.96.  What&apos;s the best alternative?&lt;/p&gt;

&lt;p&gt;Perhaps rather than changing FileCleanerDelegate we could introduce a new interface BatchFileCleanerDelegate or some such.  Then configured cleaners that implement that interface can use it but others could still work by wrapping them.  Anyone agree with that approach or have other suggestions?&lt;/p&gt;


</comment>
                            <comment id="13747252" author="stack" created="Thu, 22 Aug 2013 05:34:59 +0000"  >&lt;p&gt;Trunk patch looks good.  Does what you have deployed look like this patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=davelatham&quot; class=&quot;user-hover&quot; rel=&quot;davelatham&quot;&gt;Dave Latham&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;It doesn&apos;t have unit tests.  You are relying on existing tests to ensure that base functionality remains undisturbed?&lt;/p&gt;

&lt;p&gt;Nits:&lt;/p&gt;

&lt;p&gt;Rather than indent whole method, just reverse this test and return early: if (entries != null) {&lt;/p&gt;

&lt;p&gt;Is this right?  Delete all files if not configured?&lt;/p&gt;

&lt;p&gt;+   // all members of this class are null if replication is disabled, &lt;br/&gt;
+   // so we cannot filter the files&lt;br/&gt;
     if (this.getConf() == null) &lt;/p&gt;
{
-      return true;
+      LOG.warn(&quot;Not configured - allowing all hlogs to be deleted&quot;);
+      return files;
     }

&lt;p&gt;Otherwise, patch looks good to me.&lt;/p&gt;</comment>
                            <comment id="13747697" author="jdcryans" created="Thu, 22 Aug 2013 17:40:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is this right? Delete all files if not configured?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What it means is that this log cleaner says ok for those files, but other log cleaners can say otherwise. As long as one cleaner in the chain says &quot;keep it&quot;, we keep it.&lt;/p&gt;

&lt;p&gt;But I&apos;m not sure about this WARN, it could just be removed:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;LOG.warn(&quot;Not configured - allowing all hlogs to be deleted&quot;);&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13750666" author="davelatham" created="Mon, 26 Aug 2013 22:33:10 +0000"  >&lt;p&gt;Thanks for the attention Stack, and JD.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Trunk patch looks good. Does what you have deployed look like this patch Dave Latham?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What we deployed is a bit different.  Added a startBatch and endBatch to the FileCleanerDelegate.  That made it a bit less clean of an interface, which also has some hidden dependencies on client behavior (otherwise would have race conditions).  However it was a smaller change that we needed rapidly that didn&apos;t require a refactor of CleanerChore like this patch does.  I like this patch better and look forward to running it if it looks good to others.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It doesn&apos;t have unit tests. You are relying on existing tests to ensure that base functionality remains undisturbed?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s right.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Rather than indent whole method, just reverse this test and return early: if (entries != null) { &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I guess it depends on whether you prefer having indentation or an extra return statement.  I&apos;ll add the extra return since you spoke up.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Is this right? Delete all files if not configured?&lt;br/&gt;
...&lt;br/&gt;
What it means is that this log cleaner says ok for those files, but other log cleaners can say otherwise. As long as one cleaner in the chain says &quot;keep it&quot;, we keep it.&lt;/p&gt;

&lt;p&gt;But I&apos;m not sure about this WARN, it could just be removed:&lt;br/&gt;
LOG.warn(&quot;Not configured - allowing all hlogs to be deleted&quot;);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This case existed in the previous code with the same behavior that JD explains.  However it can only occur if someone manually configures HBase to use the ReplicationLogCleaner but has replication disabled (normally the ReplicationLogCleaner is added programmatically in Replication.decorateMasterConfiguration when replication is enabled).  The warning could prove useful to someone in such a case.  However I will move it to the setConf method so it is only logged once at startup if there is concern over its level and verbosity.&lt;/p&gt;</comment>
                            <comment id="13750784" author="davelatham" created="Tue, 27 Aug 2013 00:08:13 +0000"  >&lt;p&gt;Attaching &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9208&quot; title=&quot;ReplicationLogCleaner slow at large scale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9208&quot;&gt;&lt;del&gt;HBASE-9208&lt;/del&gt;&lt;/a&gt;-0.94-v2.patch and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9208&quot; title=&quot;ReplicationLogCleaner slow at large scale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9208&quot;&gt;&lt;del&gt;HBASE-9208&lt;/del&gt;&lt;/a&gt;-v3.patch.&lt;/p&gt;

&lt;p&gt;These are new patches for 0.94 and trunk, respectively.  They implement the changes discussed above (move the WARN statement to ReplicationLogCleaner.setConf so it only moves once and add the guard clause / remove indentation in CleanerChore.checkAndDeleteEntries)&lt;/p&gt;</comment>
                            <comment id="13750853" author="hadoopqa" created="Tue, 27 Aug 2013 01:24:34 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12600055/HBASE-9208-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12600055/HBASE-9208-v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/6908//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13752701" author="stack" created="Wed, 28 Aug 2013 18:38:21 +0000"  >&lt;p&gt;Will commit today unless objection. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Ok to add to 0.94?&lt;/p&gt;</comment>
                            <comment id="13752705" author="jdcryans" created="Wed, 28 Aug 2013 18:42:11 +0000"  >&lt;p&gt;+1, I&apos;ll also give it a spin on 0.95 today.&lt;/p&gt;</comment>
                            <comment id="13752712" author="davelatham" created="Wed, 28 Aug 2013 18:47:09 +0000"  >&lt;p&gt;I&apos;m not sure that we should commit to 0.94 as is because of the potential to break compatibility for people who have added their own FileCleanerDelegate&apos;s for HFiles or HLogs.  See my questions in comment #13745252:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What are the compatibility requirements for log cleaners? The current patches break compatibility and would require existing log cleaners to implement the changed interface or extend the BaseFileCleanerDelegate. This seems like a bad idea for 0.94, but probably ok for 0.96. What&apos;s the best alternative?&lt;/p&gt;

&lt;p&gt;Perhaps rather than changing FileCleanerDelegate we could introduce a new interface BatchFileCleanerDelegate or some such. Then configured cleaners that implement that interface can use it but others could still work by wrapping them. Anyone agree with that approach or have other suggestions?&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13752770" author="stack" created="Wed, 28 Aug 2013 19:35:32 +0000"  >&lt;p&gt;Will wait on the &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; test run before committing.&lt;/p&gt;

&lt;p&gt;Can make new issue for whether to commit on 0.94&lt;/p&gt;</comment>
                            <comment id="13753156" author="jdcryans" created="Thu, 29 Aug 2013 01:18:38 +0000"  >&lt;p&gt;I rigged up a cluster to roll 3x more, tuned the TTL log cleaner to 0, then started writing massively to a master cluster and it seems like it was able to clean 1 log per millisecond. So again +1 from me.&lt;/p&gt;</comment>
                            <comment id="13753299" author="stack" created="Thu, 29 Aug 2013 04:32:28 +0000"  >&lt;p&gt;Committed to 0.95 branch and to trunk.  Thanks for the patch Dave.  I made a new issue, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9377&quot; title=&quot;Backport HBASE- 9208 &amp;quot;ReplicationLogCleaner slow at large scale&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9377&quot;&gt;&lt;del&gt;HBASE-9377&lt;/del&gt;&lt;/a&gt;, for backport to 0.94.&lt;/p&gt;</comment>
                            <comment id="13753377" author="hudson" created="Thu, 29 Aug 2013 06:47:07 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.95 #503 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/503/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/503/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9208&quot; title=&quot;ReplicationLogCleaner slow at large scale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9208&quot;&gt;&lt;del&gt;HBASE-9208&lt;/del&gt;&lt;/a&gt; ReplicationLogCleaner slow at large scale (stack: rev 1518465)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseFileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseHFileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseLogCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/FileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/LogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/backup/example/TestZooKeeperTableArchiveClient.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13753383" author="hudson" created="Thu, 29 Aug 2013 06:53:11 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #4444 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4444/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4444/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9208&quot; title=&quot;ReplicationLogCleaner slow at large scale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9208&quot;&gt;&lt;del&gt;HBASE-9208&lt;/del&gt;&lt;/a&gt; ReplicationLogCleaner slow at large scale (stack: rev 1518466)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseFileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseHFileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseLogCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/FileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/LogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/backup/example/TestZooKeeperTableArchiveClient.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13753534" author="hudson" created="Thu, 29 Aug 2013 11:48:02 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.95-on-hadoop2 #277 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/277/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/277/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9208&quot; title=&quot;ReplicationLogCleaner slow at large scale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9208&quot;&gt;&lt;del&gt;HBASE-9208&lt;/del&gt;&lt;/a&gt; ReplicationLogCleaner slow at large scale (stack: rev 1518465)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseFileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseHFileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseLogCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/FileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/LogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/backup/example/TestZooKeeperTableArchiveClient.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13753594" author="hudson" created="Thu, 29 Aug 2013 13:07:44 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #701 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/701/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/701/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9208&quot; title=&quot;ReplicationLogCleaner slow at large scale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9208&quot;&gt;&lt;del&gt;HBASE-9208&lt;/del&gt;&lt;/a&gt; ReplicationLogCleaner slow at large scale (stack: rev 1518466)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseFileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseHFileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/BaseLogCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/FileCleanerDelegate.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/LogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSUtils.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/backup/example/TestZooKeeperTableArchiveClient.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13753721" author="davelatham" created="Thu, 29 Aug 2013 15:24:25 +0000"  >&lt;p&gt;Thanks, JD, for the testing, and Stack for driving it in.  I added a release note.&lt;/p&gt;</comment>
                            <comment id="15016026" author="lars_francke" created="Fri, 20 Nov 2015 11:53:37 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12666066">HBASE-9377</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12600054" name="HBASE-9208-0.94-v2.patch" size="27958" author="davelatham" created="Tue, 27 Aug 2013 00:08:13 +0000"/>
                            <attachment id="12598799" name="HBASE-9208-0.94.patch" size="27690" author="davelatham" created="Mon, 19 Aug 2013 18:04:46 +0000"/>
                            <attachment id="12598781" name="HBASE-9208-v2.patch" size="24919" author="davelatham" created="Mon, 19 Aug 2013 16:34:29 +0000"/>
                            <attachment id="12600055" name="HBASE-9208-v3.patch" size="26994" author="davelatham" created="Tue, 27 Aug 2013 00:08:13 +0000"/>
                            <attachment id="12598300" name="HBASE-9208.patch" size="24881" author="davelatham" created="Thu, 15 Aug 2013 21:45:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Aug 2013 21:40:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343510</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1n8nb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343814</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>The FileCleanerDelegate interface has changed to operate on a batch of files at a time.  Any custom implementations that implemented the interface directly for cleaning HLog&amp;#39;s (specified by hbase.master.logcleaner.plugins) or HFile&amp;#39;s (specified by hbase.master.hfilecleaner.plugins) will have to be updated to implement the new interface or extend one of the included abstract base classes.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.96notable</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>