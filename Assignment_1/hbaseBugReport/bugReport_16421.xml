<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:13:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16421/HBASE-16421.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16421] Introducing the CellChunkMap as a new additional index variant in the MemStore</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16421</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Follow up for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14921&quot; title=&quot;Inmemory Compaction Optimizations; Segment Structure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14921&quot;&gt;&lt;del&gt;HBASE-14921&lt;/del&gt;&lt;/a&gt;. This is going to be the umbrella JIRA to include all the parts of integration of the CellChunkMap to the MemStore.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12997549">HBASE-16421</key>
            <summary>Introducing the CellChunkMap as a new additional index variant in the MemStore</summary>
                <type id="14" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Umbrella</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="anastas">Anastasia Braginsky</reporter>
                        <labels>
                    </labels>
                <created>Tue, 16 Aug 2016 10:39:36 +0000</created>
                <updated>Wed, 14 Dec 2016 11:58:08 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                            <comments>
                            <comment id="15422574" author="anastas" created="Tue, 16 Aug 2016 10:41:48 +0000"  >&lt;p&gt;Follow up for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14921&quot; title=&quot;Inmemory Compaction Optimizations; Segment Structure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14921&quot;&gt;&lt;del&gt;HBASE-14921&lt;/del&gt;&lt;/a&gt;. This is going to be the umbrella JIRA to include all the parts of integration of the CellChunkMap to the MemStore.&lt;/p&gt;</comment>
                            <comment id="15422670" author="anastas" created="Tue, 16 Aug 2016 12:32:41 +0000"  >&lt;p&gt;The summary of the previous steps:&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14920&quot; title=&quot;Compacting Memstore&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14920&quot;&gt;&lt;del&gt;HBASE-14920&lt;/del&gt;&lt;/a&gt; the new variation of a MemStore (called CompactingMemStore) was introduced. In addition, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14920&quot; title=&quot;Compacting Memstore&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14920&quot;&gt;&lt;del&gt;HBASE-14920&lt;/del&gt;&lt;/a&gt; presents partitioning of the in-memory content into segments that can be mutable and immutable. Periodically, the CompactingMemStore flushes the content of the mutable active segment into immutable segment. Immutable segments are kept in memory in compacting pipeline, where they are compacted (i.e. merged together with elimination of the duplicated cells).&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14921&quot; title=&quot;Inmemory Compaction Optimizations; Segment Structure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14921&quot;&gt;&lt;del&gt;HBASE-14921&lt;/del&gt;&lt;/a&gt; the new concept of flattening segments in the pipeline was introduced. Flat implementation of the immutable segment&apos;s index (denoted CellArrayMap) comes as alternative to ConcurrentSkipListMap. CellArrayMap is implemented as an ordered array, on top of which binary search is used to find the cell. CellArrayMap significantly reduces the memory foot print of the segment&apos;s index (compared to ConcurrentSkipListMap). Starting &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14921&quot; title=&quot;Inmemory Compaction Optimizations; Segment Structure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14921&quot;&gt;&lt;del&gt;HBASE-14921&lt;/del&gt;&lt;/a&gt;, the immutable segments in the compaction pipeline can either be compacted or flatten (i.e. transform the index from ConcurrentSkipListMap to CellArrayMap without compaction).&lt;/p&gt;

&lt;p&gt;This JIRA should hold all the changes required to present yet another variant for the immutable segment&apos;s index (denoted CellChunkMap) mostly suitable for off-heaping. CellChunkMap is a byte array, where each cell reference is represented with up to 12 bytes. Also binary search is used to search through CellChunkMap. Each cell is represented with (1) chunk id - the reference to the chunk of memory with the data of the cell; (2) offset - from the start of the chunk; (3) length - of the cell&apos;s data. The CellChunkMap uses even less bytes per cell (compared to CellArrayMap) and is also the only one suitable for the off-heaping, due to naturally being serialized. The CellChunkMap can serve as an index only to the cells allocated on chunks (from MemStoreLAB). &lt;/p&gt;

&lt;p&gt;For now we see the following candidates for the sub-JIRAs:&lt;br/&gt;
&amp;#8211; The CellChunkMap implementation itself (already prototyped but not integrated yet)&lt;br/&gt;
&amp;#8211; Related design issues (some refactoring of MemStoreChunkPool, MSLAB and HeapMSLAB)&lt;br/&gt;
&amp;#8211; Flattening to CellChunkMap (integrating with new Anoop Sam John and ramkrishna.s.vasudevan code)&lt;br/&gt;
&amp;#8211; The Big Cells issue (cells that are bigger then the chunk size)&lt;/p&gt;</comment>
                            <comment id="15424174" author="ram_krish" created="Wed, 17 Aug 2016 09:07:28 +0000"  >&lt;p&gt;I thought we could create this under &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14918&quot; title=&quot;In-Memory MemStore Flush and Compaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14918&quot;&gt;HBASE-14918&lt;/a&gt; so that we have a consolidated JIRA? &lt;/p&gt;</comment>
                            <comment id="15424188" author="anastas" created="Wed, 17 Aug 2016 09:21:24 +0000"  >&lt;p&gt;Is it possible to create umbrella JIRA under another umbrella? I thought now, if yes tell me how.&lt;br/&gt;
This is why I created it separately, because this one is supposed to be a bunch of sub-tasks. We should run away from those long code changes trying to do all in one... (in my opinion)&lt;br/&gt;
What do you think?&lt;/p&gt;</comment>
                            <comment id="15424192" author="ram_krish" created="Wed, 17 Aug 2016 09:24:13 +0000"  >&lt;p&gt;You wanted a set of subtasks for this and so you have created it as an umbrella JIRA. No problem. Pls link this issue with the other umbrella JIRA. &lt;/p&gt;</comment>
                            <comment id="15424223" author="anastas" created="Wed, 17 Aug 2016 09:47:45 +0000"  >&lt;p&gt;Linked as &quot;as part of&quot;, hope it is good enough.&lt;/p&gt;</comment>
                            <comment id="15424490" author="ebortnik" created="Wed, 17 Aug 2016 13:17:40 +0000"  >&lt;p&gt;Let&apos;s agree on who-does-what in this Jira. We are open to suggestions.&lt;/p&gt;</comment>
                            <comment id="15424818" author="ram_krish" created="Wed, 17 Aug 2016 16:10:39 +0000"  >&lt;p&gt;Pls feel free to raise/assign sub-jiras as per your need.  Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ebortnik&quot; class=&quot;user-hover&quot; rel=&quot;ebortnik&quot;&gt;Edward Bortnikov&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="15426224" author="anoop.hbase" created="Thu, 18 Aug 2016 10:21:12 +0000"  >&lt;p&gt;The CellChunkMap variant needs cell data to be available in MSLAB chunks.  So when MSLAB is OFF, we will not be using this.  What abt the size restriction? In MSLAB there is a max size for Cells and above which cells will not be cloned. We might nor be able to handle such a case. Thoughts?&lt;/p&gt;</comment>
                            <comment id="15607350" author="stack" created="Wed, 26 Oct 2016 04:12:44 +0000"  >&lt;p&gt;Copied this, the question we need to answer, over to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16436&quot; title=&quot;Add the CellChunkMap variant&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16436&quot;&gt;HBASE-16436&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15625735" author="anastas" created="Tue, 1 Nov 2016 15:40:37 +0000"  >&lt;p&gt;I have attached a summary file initially published in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14921&quot; title=&quot;Inmemory Compaction Optimizations; Segment Structure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14921&quot;&gt;&lt;del&gt;HBASE-14921&lt;/del&gt;&lt;/a&gt;. This is a little outdated summary, but most importantly it summarizes the issues with CellChunkMap what we were needed to be resolved, at the point where we stopped dealing with CellChunkMap.&lt;/p&gt;</comment>
                            <comment id="15625767" author="anoop.hbase" created="Tue, 1 Nov 2016 15:51:27 +0000"  >&lt;p&gt;There are ways with which we can overcome the limitation and still have CellChunkMap..  We would need PoC around diff approaches.  The ideas are just theory.  We will need PoC for proving it and see what is best way.&lt;/p&gt;</comment>
                            <comment id="15625937" author="anastas" created="Tue, 1 Nov 2016 16:39:39 +0000"  >&lt;p&gt;Sure. We have our solutions we thought about then, I see that you have your thoughts now and we are going to talk about it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15628887" author="anoop.hbase" created="Wed, 2 Nov 2016 12:58:00 +0000"  >&lt;p&gt;Thanks for the revived doc. Looks to cover all aspects discussed about this in different places.  Good one.&lt;/p&gt;</comment>
                            <comment id="15628899" author="stack" created="Wed, 2 Nov 2016 13:04:07 +0000"  >&lt;p&gt;Thanks for updating the documents &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anastas&quot; class=&quot;user-hover&quot; rel=&quot;anastas&quot;&gt;Anastasia Braginsky&lt;/a&gt;. There is an aside on speculative check &apos;....although the speculative check does...&apos;. in IntroductiontoNewFlatandCompactMemStore.pdf.  Any chance of more on how the check works? One thought looking at the pipeline is that flattening you have to look at every key. Could you do the &apos;check-for-compaction-worthyness&apos; at this time since you are looking at keys anyway? (Would be optional?)&lt;/p&gt;</comment>
                            <comment id="15628942" author="stack" created="Wed, 2 Nov 2016 13:17:11 +0000"  >&lt;p&gt;On CellChunkMapRevived.pdf, what is this about: &quot;When a cell is upserted (append/increment op), we will not copy that cell to MSLAB. a. Anoop and Ram are suggesting to keep a boolean that whether a Segment contains a cell which is not copied to MSLAB and then intermix CellChunkMap and CellArrayMap&quot;&lt;/p&gt;

&lt;p&gt;I think this will be a perf killer: &quot;For scans we need to create instances of cells every time we recreate the cell from the index. Time consuming/GC issues&quot; We can&apos;t cache instances? (Can&apos;t cache references offheap for sure). Need to test.&lt;/p&gt;

&lt;p&gt;Otherwise, doc. looks good.&lt;/p&gt;
</comment>
                            <comment id="15629057" author="stack" created="Wed, 2 Nov 2016 14:00:11 +0000"  >&lt;p&gt;For large Cells, should be onheap because allocation of one-offs offheap will be too expensive.&lt;/p&gt;

&lt;p&gt;Move to own module so easier to work on, test, and perf eval? (St.Ack to look at this)&lt;/p&gt;

&lt;p&gt;Turn on MSLAB always so one way of getting at Cells.&lt;/p&gt;

&lt;p&gt;What to do about Increments and Appends? Increments and Appends good candidates for flattening.&lt;/p&gt;
</comment>
                            <comment id="15629125" author="anastas" created="Wed, 2 Nov 2016 14:26:57 +0000"  >&lt;p&gt;IntroductiontoNewFlatandCompactMemStore.pdf is a bit outdated as I mentioned before. So currently there is no speculative check as part of compaction. When flattening we look on every key &quot;blindly&quot;, meaning just taking from one place an puting into the other. In order to &apos;check-for-compaction-worthyness&apos; you need SQM and SQM is performance-costly, so we do not use it in flattening time. However, what you say is correct when you do the compaction. So a compaction is actually the &apos;check-for-compaction-worthyness&apos; for the next compaction and this can be accommodated in our next new and shiny flush-in-memory policy &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;But generally all this discussion is not related to this JIRA at all &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15630214" author="anastas" created="Wed, 2 Nov 2016 19:42:09 +0000"  >&lt;p&gt;November 2nd Meeting Summary:&lt;/p&gt;

&lt;p&gt;First of all a big &quot;thank you&quot; goes to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; for a wonderful meeting!&lt;br/&gt;
Hereby I summarize what we decided and if I missed something please correct me.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Scans:&lt;/b&gt;&lt;br/&gt;
1. Scans performance can be too bad when using CellChunkMap. Prior to any future development we need to run some evaluations. &lt;br/&gt;
2. Anoop, Ram you were playing with the CellChunkMap initial implementation, will you be able to evaluate the scans (including flushing to disk) comparing to CompactingMemStore with CellArrayMap or even DefaultMemStore?&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Super-Large-Cells and upserted Cells:&lt;/b&gt;&lt;br/&gt;
1. Upon in-memory-flush of those cells (which are not on MSLAB chunks) they are going to be copied to MSLAB chunks&lt;br/&gt;
2. When cell is bigger than the chunk size, a special variable-size MSLAB chunk is going to be allocated on heap (without reusing such chunks)&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Chunk IDs:&lt;/b&gt;&lt;br/&gt;
1. Every chunk need to have an ID&lt;br/&gt;
2. The singleton entity is going to allocate the chunks whether from the pool or on demand.&lt;br/&gt;
3. The same entity is going to assign unique chunk IDs to every chunk and to manage mapping from Chunk IDs to Chunks.&lt;br/&gt;
4. This entity can be either MemStoreChunkPool itself or some MemStoreChunksAllocator&lt;/p&gt;</comment>
                            <comment id="15748066" author="anastas" created="Wed, 14 Dec 2016 11:19:24 +0000"  >&lt;p&gt;Returning to this issue after a while.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;, do you (by any chance) have some results about running scans on top of CellChunkMaps? (related to the possible GC problem with scan&apos;s performance as discussed earlier)&lt;/p&gt;</comment>
                            <comment id="15748154" author="ram_krish" created="Wed, 14 Dec 2016 11:58:08 +0000"  >&lt;p&gt;I have not done that. But let me get back to you before the end of this year with my findings. I will complete that AR ASAP.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12917935">HBASE-14918</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12836558" name="CellChunkMapRevived.pdf" size="119677" author="anastas" created="Wed, 2 Nov 2016 12:48:42 +0000"/>
                            <attachment id="12836375" name="IntroductiontoNewFlatandCompactMemStore.pdf" size="188964" author="anastas" created="Tue, 1 Nov 2016 15:37:49 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12997864">HBASE-16436</subtask>
                            <subtask id="12997865">HBASE-16437</subtask>
                            <subtask id="12997866">HBASE-16438</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 17 Aug 2016 09:07:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32d2n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>