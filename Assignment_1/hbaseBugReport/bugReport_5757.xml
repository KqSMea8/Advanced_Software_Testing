<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:30:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5757/HBASE-5757.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5757] TableInputFormat should handle as many errors as possible</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5757</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Prior to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4196&quot; title=&quot;TableRecordReader may skip first row of region&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4196&quot;&gt;&lt;del&gt;HBASE-4196&lt;/del&gt;&lt;/a&gt; there was different handling of IOExceptions thrown from scanner in mapred and mapreduce API. The patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4196&quot; title=&quot;TableRecordReader may skip first row of region&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4196&quot;&gt;&lt;del&gt;HBASE-4196&lt;/del&gt;&lt;/a&gt; unified this handling so that if exception is caught a reconnect is attempted (without bothering the mapred client). After that, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4269&quot; title=&quot;Add tests and restore semantics to TableInputFormat/TableRecordReader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4269&quot;&gt;&lt;del&gt;HBASE-4269&lt;/del&gt;&lt;/a&gt; changed this behavior back, but in both mapred and mapreduce APIs. The question is, is there any reason not to handle all errors that the input format can handle? In other words, why not try to reissue the request after &lt;b&gt;any&lt;/b&gt; IOException? I see the following disadvantages of current approach&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;the client may see exceptions like LeaseException and ScannerTimeoutException if he fails to process all fetched data in timeout&lt;/li&gt;
	&lt;li&gt;to avoid ScannerTimeoutException the client must raise hbase.regionserver.lease.period&lt;/li&gt;
	&lt;li&gt;timeouts for tasks is aready configured in mapred.task.timeout, so this seems to me a bit redundant, because typically one needs to update both these parameters&lt;/li&gt;
	&lt;li&gt;I don&apos;t see any possibility to get rid of LeaseException (this is configured on server side)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think all of these issues would be gone, if the DoNotRetryIOException would not be rethrown. &lt;del&gt;On the other hand, handling errors in InputFormat has disadvantage, that it may hide from the user some inefficiency. Eg. if I have very big scanner.caching, and I manage to process only a few rows in timeout, I will end up with single row being fetched many times (and will not be explicitly notified about this). Could we solve this problem by adding some counter to the InputFormat?&lt;/del&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12550348">HBASE-5757</key>
            <summary>TableInputFormat should handle as many errors as possible</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="je.ik">Jan Lukavsky</assignee>
                                    <reporter username="je.ik">Jan Lukavsky</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Apr 2012 09:59:08 +0000</created>
                <updated>Tue, 26 Feb 2013 08:16:00 +0000</updated>
                            <resolved>Mon, 21 May 2012 21:03:07 +0000</resolved>
                                    <version>0.90.6</version>
                                    <fixVersion>0.94.1</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>mapreduce</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13251460" author="je.ik" created="Wed, 11 Apr 2012 10:41:21 +0000"  >&lt;p&gt;The problem with multiple fetching of rows doesn&apos;t exist. I thought (don&apos;t know why) that ScannerTimeoutException can be thrown while processing rows cached in the scanner on client side. This is not the case. Adding counter for the number of retries in the input format might be interesting nevertheless.&lt;/p&gt;</comment>
                            <comment id="13251461" author="je.ik" created="Wed, 11 Apr 2012 10:44:36 +0000"  >&lt;p&gt;Attaching &lt;b&gt;very&lt;/b&gt; simple patch with no test modifications. This is functional for us (not tested the mapred API). Although, no counter for the restarts is added.&lt;/p&gt;</comment>
                            <comment id="13270176" author="jmhsieh" created="Tue, 8 May 2012 04:02:36 +0000"  >&lt;p&gt;Jan,&lt;/p&gt;

&lt;p&gt;I looked that the logic again I think your are right.  When I did a quick glance last time I only saw the isolated patch and didn&apos;t see enough context to see the existing retry logic. (review board is helpful).&lt;/p&gt;

&lt;p&gt;Mind adding some comments explaining why this is ok to retry?  (We are retrying once and if we fail twice we give up). It seems strange to me that we are retrying something that throws a DoNotRetyIOException.  &lt;/p&gt;

&lt;p&gt;Anyone else have any comments?&lt;/p&gt;</comment>
                            <comment id="13271197" author="je.ik" created="Wed, 9 May 2012 07:57:47 +0000"  >&lt;p&gt;Hi Jon,&lt;/p&gt;

&lt;p&gt;I&apos;m not sure, but IMO the purpose of DoNotRetryIOException is to instruct the HTable client not to retry the request. In TableInputFormat we are working on higher level, so retrying is OK. DNRIOEx is to distinguish exceptions that might be caused by region reassignment for instance, and that might disappear if the request is resent (and possibly dropping the cached region location and quering .META. again). UnknonwnScannerException on the other hand will not &apos;disapper&apos; if the &lt;b&gt;same&lt;/b&gt; request is sent by HTable client. But in the InputFormat we can restart the scanner, and so we will not send the same request, hence it can succeed.&lt;/p&gt;

&lt;p&gt;Retrying the request just once and then giving up is to avoid infinite cycles, and mostly it suffices to retry just once, because a typical cause of the UnknownScannerException or LeaseException is too slow Mapper (there could be other like scanning for too sparse column, but this will not be solved by this issue &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;). There is possibility to lower scanner caching, but this might be inefficient (eg. when the 99.99% of time the caching is just OK, and then there exists some strange records, that take the Mapper longer to process). Lowering the caching globally just because of these few records doesn&apos;t sound like the &apos;correct&apos; solution.&lt;/p&gt;
</comment>
                            <comment id="13271681" author="jmhsieh" created="Wed, 9 May 2012 18:41:03 +0000"  >&lt;p&gt;Got it, great clarification on the DNRIOExn.  Can you add this in the comments of the catch block in TableInputFormat?  if it passes tests than I&apos;ll commit.  If you could add a hadoop counter that be awesome (or file a jira to add one). &lt;/p&gt;

&lt;p&gt;I have a feeling there might be a configuration work around.  Are you using scanner caching at all on your client?  (default is no caching). Seems like there would be a sweet spot above witch  there is diminishing returns.   It sounds like in your case your rows may be variably sized making this difficult.  &lt;/p&gt;

&lt;p&gt;Note that we&apos;ve been able to can set scanner caching on each individual scan in since 0.20 (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1759&quot; title=&quot;Ability to specify scanner caching on a per-scan basis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1759&quot;&gt;&lt;del&gt;HBASE-1759&lt;/del&gt;&lt;/a&gt;) &amp;#8211; setting it for that job may be more &apos;correct&apos;. &lt;/p&gt;

&lt;p&gt;Also it looks like some of this code could go for a cleanup &amp;#8211; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2161&quot; title=&quot;get rid of scanner timeout&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2161&quot;&gt;&lt;del&gt;HBASE-2161&lt;/del&gt;&lt;/a&gt; is another jira that says ScannerTimeoutException may be cruft &amp;#8211; why is it separate from LeaseException? (possibly related to ).  I think I would prefer if we explicitly call out the exceptions (UnknownScannerException, LeaseException and ScannerTimeoutException) that we retry on and leave out the rest to be rethrown (there was a recent thread dicussing IOException abuse).  &lt;/p&gt;
</comment>
                            <comment id="13275787" author="je.ik" created="Tue, 15 May 2012 14:18:49 +0000"  >&lt;p&gt;Attaching patch including modified tests (pass on my box) and counter in the new API.&lt;/p&gt;</comment>
                            <comment id="13275793" author="je.ik" created="Tue, 15 May 2012 14:24:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;Note that we&apos;ve been able to can set scanner caching on each individual scan in since 0.20 (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1759&quot; title=&quot;Ability to specify scanner caching on a per-scan basis&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1759&quot;&gt;&lt;del&gt;HBASE-1759&lt;/del&gt;&lt;/a&gt;) &#8211; setting it for that job may be more &apos;correct&apos;. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We are setting different caching for different jobs, the problem is that the rows may take different time to process (based on job) and this cannot be told in advance. Currently, it is only possible to set the caching for the whole job, but even if it was possible to change the caching &lt;b&gt;during&lt;/b&gt; the job, we would not know that we need to do it before we will get the ScannerTimeoutException. So handling this error in the TableInputFormat seems right solution to me.&lt;/p&gt;</comment>
                            <comment id="13280157" author="zhihyu@ebaysf.com" created="Mon, 21 May 2012 14:03:20 +0000"  >&lt;p&gt;@Jan:&lt;br/&gt;
Neither patch applies to trunk as of today.&lt;br/&gt;
Can you attach patch for trunk and name it accordingly ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13280175" author="je.ik" created="Mon, 21 May 2012 14:23:14 +0000"  >&lt;p&gt;There was conflicting commit to patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6004&quot; title=&quot;Adding more logging to help debugging MR job&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6004&quot;&gt;&lt;del&gt;HBASE-6004&lt;/del&gt;&lt;/a&gt;. Merged this patch, the new one should apply to revision 1341041.&lt;/p&gt;</comment>
                            <comment id="13280240" author="hadoopqa" created="Mon, 21 May 2012 15:54:03 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12528434/HBASE-5757-trunk-r1341041.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12528434/HBASE-5757-trunk-r1341041.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 33 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestClassLoading&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMultiSlaveReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMasterReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1944//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1944//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1944//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1944//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1944//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1944//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13280249" author="zhihyu@ebaysf.com" created="Mon, 21 May 2012 16:12:33 +0000"  >&lt;p&gt;I ran the following two tests and they passed with the latest patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  518  mt -Dtest=TestClassLoading
  519  mt -Dtest=TestSplitTransactionOnCluster
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The replication tests have been failing and are not related to this change.&lt;/p&gt;

&lt;p&gt;Minor comments:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; to handle exceptions all possible exceptions by restarting&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The first &apos;exceptions &apos; should be removed.&lt;/p&gt;</comment>
                            <comment id="13280250" author="zhihyu@ebaysf.com" created="Mon, 21 May 2012 16:15:34 +0000"  >&lt;p&gt;Patch v2 changes the comments w.r.t. exceptions being handled.&lt;/p&gt;

&lt;p&gt;@Jon:&lt;br/&gt;
Do you have further comments ?&lt;/p&gt;</comment>
                            <comment id="13280285" author="hadoopqa" created="Mon, 21 May 2012 17:09:38 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12528448/5757-trunk-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12528448/5757-trunk-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 33 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestClassLoading&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMultiSlaveReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestHLog&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestMasterReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1945//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1945//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1945//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1945//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1945//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1945//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13280315" author="jmhsieh" created="Mon, 21 May 2012 17:56:33 +0000"  >&lt;p&gt;Zhihong, thanks for pinging me about this.  Jan, thanks for being patient with me on this.&lt;/p&gt;

&lt;p&gt;The changes look good.  Patch applies to 0.94 and trunk.  I believe the request was for getting this into 0.90 &amp;#8211; I&apos;ll look into backporting this behavior back into that version.&lt;/p&gt;
</comment>
                            <comment id="13280318" author="zhihyu@ebaysf.com" created="Mon, 21 May 2012 18:00:41 +0000"  >&lt;p&gt;TestHLog failure was caused by:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.net.BindException: Problem binding to localhost/127.0.0.1:41331 : Address already in use
	at org.apache.hadoop.ipc.Server.bind(Server.java:227)
	at org.apache.hadoop.ipc.Server$Listener.&amp;lt;init&amp;gt;(Server.java:301)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I ran it locally and it passed.&lt;/p&gt;</comment>
                            <comment id="13280320" author="jmhsieh" created="Mon, 21 May 2012 18:04:47 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96.&lt;/p&gt;</comment>
                            <comment id="13280328" author="hudson" created="Mon, 21 May 2012 18:15:24 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2911 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2911/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2911/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5757&quot; title=&quot;TableInputFormat should handle as many errors as possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5757&quot;&gt;&lt;del&gt;HBASE-5757&lt;/del&gt;&lt;/a&gt; TableInputFormat should handle as many errors as possible (Jan Lukavsky) (Revision 1341132)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapred/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapred/TestTableInputFormat.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13280385" author="hudson" created="Mon, 21 May 2012 19:13:04 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #205 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/205/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/205/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5757&quot; title=&quot;TableInputFormat should handle as many errors as possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5757&quot;&gt;&lt;del&gt;HBASE-5757&lt;/del&gt;&lt;/a&gt; TableInputFormat should handle as many errors as possible (Jan Lukavsky) (Revision 1341133)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/mapred/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/mapred/TestTableInputFormat.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13280397" author="jmhsieh" created="Mon, 21 May 2012 19:24:00 +0000"  >&lt;p&gt;hbase-5757-92.patch is for 0.92 and 0.90 versions.  Underlaying metrics have changed so it does not update metrics like in 0.94 or trunk/0.96.  It does however include the updated tests that demonstrated updated semantics.&lt;/p&gt;</comment>
                            <comment id="13280398" author="jmhsieh" created="Mon, 21 May 2012 19:24:56 +0000"  >&lt;p&gt;Zhihong, Jan, if the 0.92/0.90 versions looks good to you I will commit.&lt;/p&gt;</comment>
                            <comment id="13280412" author="hadoopqa" created="Mon, 21 May 2012 19:43:38 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12528472/hbase-5757-92.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12528472/hbase-5757-92.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1946//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1946//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13280433" author="zhihyu@ebaysf.com" created="Mon, 21 May 2012 20:11:16 +0000"  >&lt;p&gt;TestTableInputFormat passed in 0.92 with 0.92 patch.&lt;/p&gt;

&lt;p&gt;+1 from me.&lt;/p&gt;</comment>
                            <comment id="13280487" author="jmhsieh" created="Mon, 21 May 2012 21:03:07 +0000"  >&lt;p&gt;Commited the 0.92 version to 0.92/0.90 branches.  Thanks for review Ted, thanks for patches Jan!&lt;/p&gt;</comment>
                            <comment id="13280622" author="hudson" created="Mon, 21 May 2012 23:36:09 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #415 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/415/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/415/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5757&quot; title=&quot;TableInputFormat should handle as many errors as possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5757&quot;&gt;&lt;del&gt;HBASE-5757&lt;/del&gt;&lt;/a&gt; TableInputFormat should handle as many errors as possible (Jan Lukavsky) (Revision 1341205)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/mapred/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/mapred/TestTableInputFormat.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13280650" author="hudson" created="Tue, 22 May 2012 00:36:52 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #13 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/13/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/13/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5757&quot; title=&quot;TableInputFormat should handle as many errors as possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5757&quot;&gt;&lt;del&gt;HBASE-5757&lt;/del&gt;&lt;/a&gt; TableInputFormat should handle as many errors as possible (Jan Lukavsky) (Revision 1341132)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapred/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/mapred/TestTableInputFormat.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13281288" author="hudson" created="Tue, 22 May 2012 23:10:08 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #28 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/28/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/28/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5757&quot; title=&quot;TableInputFormat should handle as many errors as possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5757&quot;&gt;&lt;del&gt;HBASE-5757&lt;/del&gt;&lt;/a&gt; TableInputFormat should handle as many errors as possible (Jan Lukavsky) (Revision 1341133)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/mapred/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/mapred/TestTableInputFormat.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13283267" author="hudson" created="Fri, 25 May 2012 09:55:37 +0000"  >&lt;p&gt;Integrated in HBase-0.92-security #108 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92-security/108/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92-security/108/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5757&quot; title=&quot;TableInputFormat should handle as many errors as possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5757&quot;&gt;&lt;del&gt;HBASE-5757&lt;/del&gt;&lt;/a&gt; TableInputFormat should handle as many errors as possible (Jan Lukavsky) (Revision 1341205)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jmhsieh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/mapred/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/mapred/TestTableInputFormat.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12446369">HBASE-2161</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12554540">HBASE-5973</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12528448" name="5757-trunk-v2.txt" size="8803" author="zhihyu@ebaysf.com" created="Mon, 21 May 2012 16:15:34 +0000"/>
                            <attachment id="12528434" name="HBASE-5757-trunk-r1341041.patch" size="8839" author="je.ik" created="Mon, 21 May 2012 14:23:14 +0000"/>
                            <attachment id="12527262" name="HBASE-5757.patch" size="8787" author="je.ik" created="Tue, 15 May 2012 14:18:48 +0000"/>
                            <attachment id="12522222" name="HBASE-5757.patch" size="1976" author="je.ik" created="Wed, 11 Apr 2012 10:44:36 +0000"/>
                            <attachment id="12528472" name="hbase-5757-92.patch" size="7373" author="jmhsieh" created="Mon, 21 May 2012 19:24:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 8 May 2012 04:02:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>235213</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 30 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02h1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12362</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>