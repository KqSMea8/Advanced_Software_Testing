<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:50:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7897/HBASE-7897.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7897] Add support for tags to Cell Interface</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7897</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Cell Interface has suppport for mvcc.   The only thing we&apos;d add to Cell in the near future is support for tags it would seem.  Should be easy to add.  Should add it now.  See backing discussion here: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7233?focusedCommentId=13573784&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13573784&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-7233?focusedCommentId=13573784&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13573784&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Matt outlines what the additions to Cell might look like here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7233?focusedCommentId=13531619&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13531619&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-7233?focusedCommentId=13531619&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13531619&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Would be good to get these in now.&lt;/p&gt;

&lt;p&gt;Marking as 0.96.  Can more later.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12633453">HBASE-7897</key>
            <summary>Add support for tags to Cell Interface</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Thu, 21 Feb 2013 19:17:17 +0000</created>
                <updated>Mon, 23 Sep 2013 19:08:35 +0000</updated>
                            <resolved>Wed, 8 May 2013 20:04:01 +0000</resolved>
                                                    <fixVersion>0.95.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                <comments>
                            <comment id="13586186" author="stack" created="Mon, 25 Feb 2013 19:31:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andrew.purtell%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;andrew.purtell@gmail.com&quot;&gt;Andrew Purtell&lt;/a&gt; You want to get a patch for this into 0.96?&lt;/p&gt;</comment>
                            <comment id="13586486" author="apurtell" created="Mon, 25 Feb 2013 23:58:52 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; Could focus on this starting next week if dev on trunk and branch the same time is ok. &lt;/p&gt;</comment>
                            <comment id="13602398" author="ram_krish" created="Thu, 14 Mar 2013 16:29:27 +0000"  >&lt;p&gt;I posted the comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7233&quot; title=&quot;Serializing KeyValues over RPC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7233&quot;&gt;&lt;del&gt;HBASE-7233&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Pasting the comment on this JIRA as this one is active&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Tags are a little different than our current fields because there are multiple per Cell&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The above comment is from Matt.&lt;br/&gt;
So basically we say we will have multiple tags for a Cell. &lt;br/&gt;
Which means cell which internally is now a represenation of a KV will have more than one additional attributes added to it (which is Tags) and one among them will be an ACL tag, visibility tag etc.&lt;br/&gt;
So now how will we say which tag to see if i want to know only the Visibility part of the Cell? &lt;br/&gt;
I could see an tagIterator() api added that iterates thro the tags, so is it like every time iterate to find out which is my Visisbility tag.&lt;br/&gt;
Will there be a mechanism which says visibility tag should be the first tag or second .something like that?&lt;/p&gt;</comment>
                            <comment id="13602611" author="apurtell" created="Thu, 14 Mar 2013 19:33:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;I could see an tagIterator() api added that iterates thro the tags, so is it like every time iterate to find out which is my Visisbility tag.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If all tags are materialized into a contiguous buffer for iteration, then the iterator will be fast. We may want to do this because the common case will be zero or one tag per KV.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Will there be a mechanism which says visibility tag should be the first tag or second . something like that?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What happens if two different pieces of code say &quot;my tag should go first&quot;? The Cell interface won&apos;t and cannot know application details to break such ties, it would have to be done arbitrarily. Hence such a mechanism isn&apos;t workable?&lt;/p&gt;</comment>
                            <comment id="13602699" author="mcorgan" created="Thu, 14 Mar 2013 20:42:27 +0000"  >&lt;p&gt;I had visualized the tags being sorted inside the cell for fastest retrieval possible - that would take priority out of consideration.&lt;/p&gt;

&lt;p&gt;I imagine the layers pretty high in the stack (above HRegion) controlling the tags before cells are added to the memstore/hlog.  And then Filters becoming tag-aware so Cells can be skipped at low levels of the read path.&lt;/p&gt;

&lt;p&gt;Would we need a tag dictionary/registry of some sort to ensure that different co-processors (or whatever) don&apos;t try to use the same tags?&lt;/p&gt;</comment>
                            <comment id="13602711" author="apurtell" created="Thu, 14 Mar 2013 20:52:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would we need a tag dictionary/registry of some sort to ensure that different co-processors (or whatever) don&apos;t try to use the same tags?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That would be analogous to rewriting the KV data, i.e. different coprocessors writing to the same value coordiate. I think we should handle both the same way: use at your own risk.&lt;/p&gt;</comment>
                            <comment id="13603214" author="ram_krish" created="Fri, 15 Mar 2013 07:51:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;What happens if two different pieces of code say &quot;my tag should go first&quot;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Had this question because when we say iterate thro tags then there are more than one.  Hence i asked for that question.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I had visualized the tags being sorted inside the cell for fastest retrieval possible - that would take priority out of consideration.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes that makes sense. As Andy suggested in his comment usually there are 0 or only 1 tag in the Cell.  This would make things easier.  If more than one then we may have to do a getAndCompare if the tag is what we were looking for.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;And then Filters becoming tag-aware so Cells can be skipped at low levels of the read path&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Is this some sort of filters based on tags? &lt;/p&gt;</comment>
                            <comment id="13603526" author="mcorgan" created="Fri, 15 Mar 2013 17:05:55 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;Is this some sort of filters based on tags?&lt;/p&gt;&lt;/blockquote&gt;Well, it was just a thought.  Something will have to look at the tags to determine whether to include cells, like for filtering out cells a user doesn&apos;t have permission for.  Making Filters tag aware could be part of the solution.&lt;/p&gt;</comment>
                            <comment id="13603542" author="apurtell" created="Fri, 15 Mar 2013 17:19:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;Something will have to look at the tags to determine whether to include cells, like for filtering out cells a user doesn&apos;t have permission for. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is the &lt;tt&gt;AccessControlFilter&lt;/tt&gt; of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6222&quot; title=&quot;Add per-KeyValue Security&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6222&quot;&gt;&lt;del&gt;HBASE-6222&lt;/del&gt;&lt;/a&gt;. For the implementation strawman that uses the KV tags hack, it retrieves tags using methods of the KV object as KVs are passed to the filter and evaluates the tag(s) if they are ACLs. No changes to the filter API were necessary.&lt;/p&gt;

&lt;p&gt;Something very similar could evaluate labels within a security context for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7663&quot; title=&quot;[Per-KV security] Visibility labels&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7663&quot;&gt;&lt;del&gt;HBASE-7663&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="13629946" author="ram_krish" created="Fri, 12 Apr 2013 09:16:47 +0000"  >&lt;p&gt;@Andy/Stack&lt;br/&gt;
Can i assign this to myself?&lt;/p&gt;</comment>
                            <comment id="13630252" author="apurtell" created="Fri, 12 Apr 2013 16:20:30 +0000"  >&lt;p&gt;Go for it Ram.&lt;/p&gt;</comment>
                            <comment id="13648659" author="stack" created="Fri, 3 May 2013 18:33:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; As I see this issue, it is just about adding the needed methods to the Cell Interface.  I do not think the functionality has to be implemented underneath the Interface for us to close this issue.  This issue is about making sure the necessary Interfaces changes are in place when 0.96 goes out.&lt;/p&gt;

&lt;p&gt;Given the above, is this issue close at all?  Want me to do it?  I could just add in the above suggested methods?&lt;/p&gt;</comment>
                            <comment id="13649022" author="ram_krish" created="Sat, 4 May 2013 06:00:42 +0000"  >&lt;p&gt;I have things in place Stack.  I can give a patch may be here so that i can incorporate any comments from them.&lt;/p&gt;</comment>
                            <comment id="13649058" author="ram_krish" created="Sat, 4 May 2013 10:11:13 +0000"  >&lt;p&gt;Patch for trunk.&lt;/p&gt;</comment>
                            <comment id="13649059" author="ram_krish" created="Sat, 4 May 2013 10:12:19 +0000"  >&lt;p&gt;This is just adding the new methods to the Cell interface. The internal implementation and the actual working will come with a follow up patch&lt;/p&gt;</comment>
                            <comment id="13649204" author="stack" created="Sat, 4 May 2013 23:34:00 +0000"  >&lt;p&gt;Good one &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking at the implementation, though it is what &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt; suggested, I&apos;m thinking the implementation of the tag parse escapes Cell &amp;#8211; the CellUtil needs to know how the encoding is done to parse or put an Iterator on tags?   If we added hasTags, Map getTags, and byte [] getTag(byte [] tagName), would this allow tags to be impemented diffrently and up to the Cell implementation how tags are parsed?&lt;/p&gt;

&lt;p&gt;It might help if we had some examples of &apos;tags&apos;?&lt;/p&gt;

&lt;p&gt;Accumulo&apos;s column visibility looks like this: &lt;a href=&quot;http://accumulo.apache.org/1.4/apidocs/org/apache/accumulo/core/security/ColumnVisibility.html#ColumnVisibility(byte[&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://accumulo.apache.org/1.4/apidocs/org/apache/accumulo/core/security/ColumnVisibility.html#ColumnVisibility(byte[&lt;/a&gt;])&lt;/p&gt;

&lt;p&gt;When we say tags, are we saying a set of key/values?  So in hbase, there would be a tag whose key is &apos;vis&apos; for &apos;column visibility&apos; but that there might be another tag on the same keyvalue which would be &apos;cid&apos; for cluster id, the id that the keyvalue was originally added one to help w/ replication?&lt;/p&gt;

&lt;p&gt;You say above that tags can be multiple in the one key.&lt;/p&gt;

&lt;p&gt;If so, the API doesn&apos;t seem to lend itself to being able to ask for a particular tag; outside of the Cell implementation we&apos;d have to make sense of the bytes we got out of the Cell?&lt;/p&gt;

&lt;p&gt;There is something weird in the formatting in TestPayloadCarryingRpcController&lt;/p&gt;</comment>
                            <comment id="13649231" author="mcorgan" created="Sun, 5 May 2013 01:19:13 +0000"  >&lt;p&gt;Regarding the hasTags() method, I would suggest leaving it out since it is only a convenience method (getNumTags() &amp;gt; 0) that will force every implementation to have duplicate code.  Would be better if callers did CellUtil.hasTags(cell).  See &lt;a href=&quot;http://martinfowler.com/bliki/MinimalInterface.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://martinfowler.com/bliki/MinimalInterface.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;If we added hasTags, Map getTags, and byte [] getTag(byte [] tagName)&lt;/p&gt;&lt;/blockquote&gt;I&apos;m worried about adding methods that require object creation.  Map getTags() and byte[] getTag would be very expensive if used in a long scan where most cells are filtered out.  They&apos;d be equivalent to supporting methods like byte[] getRowKey().  Ideally, these expensive little objects would only be spawned when needed, and might never really be needed in standalone form if the result is being re-encoded to go to the client.&lt;/p&gt;

&lt;p&gt;If we want to support different tag encodings, then perhaps add an &quot;int getTagEncoding()&quot; method that callers could use to determine how to parse the bytes identified by getTagsArray()/getTagsOffset()/getTagsLength().&lt;/p&gt;

&lt;p&gt;In fact, if there are multiple encodings, we may want to leave the getNumTags() method out as well.  If getTagsLength()==0, there are no tags, and if getTagsLength()&amp;gt;0, it&apos;s up to the decoder to determine the number of tags.&lt;/p&gt;</comment>
                            <comment id="13649279" author="stack" created="Sun, 5 May 2013 05:39:33 +0000"  >&lt;p&gt;Ok on hasTags &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;m worried about adding methods that require object creation. Map getTags() and byte[] getTag would be very expensive if used in a long scan where most cells are filtered out. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fair enough but having it so we have to delegate to a helper class to make sense of the tag bytes precludes our ever being able to encode them? We ok w/ that?  I&apos;d think that tags would rarely vary across Cells so something like a &quot;byte [] getTag(byte [] key)&quot; would be &quot;expensive&quot; on first invocation, yeah, but thereafter we&apos;d just keep returning the already-made tag value?&lt;/p&gt;

&lt;p&gt;What we thinking for tags?   A one byte &apos;key&apos;?  That&apos;d allow us 256 tag keys.  That should be enough (origin cluster, column visibility, and probably one or two more tags ever?).  And then a varint length for the value?&lt;/p&gt;</comment>
                            <comment id="13649361" author="ram_krish" created="Sun, 5 May 2013 15:42:38 +0000"  >&lt;p&gt;I have some doubts on the above discussions.&lt;br/&gt;
My first question would be, are we going with different Encoders for the Tags?  Which means the normal keyvalue will be encoded differently and the tags will be encoded differently?&lt;br/&gt;
I can provide more details on this once am done with some more internal work.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If we added hasTags, Map getTags, and byte [] getTag(byte [] tagName), would this allow tags to be impemented diffrently and up to the Cell implementation how tags are parsed?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;First i think we can have mutliple tags per KV.  Something like Visibility tag and the other one could be an ACL tag.&lt;br/&gt;
So we may have to provide an iterator which would help us to get the different tags.  So the iterator should have an idea as how the tags would look like. This is what i thought &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.  Open for discussion on any of the above points.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;the API doesn&apos;t seem to lend itself to being able to ask for a particular tag&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I had an api for this but did not attach it in the patch.  The idea was the KeyValue will have something called Tag, and it will have the Type and the Actual tag byte array.  &lt;br/&gt;
So if i say get me the Tag Type Visibility this iterator will iterate internally and give us that particular tag byte array that corresponds to Visibility.&lt;br/&gt;
Again the tags cannot be overwritten just that every tag goes with that individual KV/Cell.&lt;br/&gt;
I can provide some more details on what is planned and what is done after some internal discussions.&lt;/p&gt;




</comment>
                            <comment id="13649454" author="stack" created="Sun, 5 May 2013 22:47:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;My first question would be, are we going with different Encoders for the Tags? Which means the normal keyvalue will be encoded differently and the tags will be encoded differently?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d say no.  What you thinking?&lt;/p&gt;

&lt;p&gt;Maybe I am being extra thick and there would be encoding of tag bytes and that when you ask for tags, you&apos;d get decoded byte array... (but then you have to parse it for case that tag byte array is carrying multiple tags).&lt;/p&gt;

&lt;p&gt;On Iterator, sure, but to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt;&apos;s point, maybe talk of Iterators and Maps is way overengineering for something that we are supposed to be able to spin through quickly and cheaply.&lt;/p&gt;
</comment>
                            <comment id="13649455" author="mcorgan" created="Sun, 5 May 2013 23:07:39 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;I&apos;d say no. What you thinking?&lt;/p&gt;&lt;/blockquote&gt;I&apos;d say no too.  I shouldn&apos;t have talked about it so much =).  Perhaps the content of the tags can be inferred from a column family setting rather than a per-cell attribute.&lt;/p&gt;

&lt;p&gt;Thinking on it a little more, I&apos;m trying to convey that the Cell is a very low-level interface whose purpose is only to delineate a group of byte[]&apos;s at a moment in time.  It is up to the levels above Cell to interpret what is in the byte[]&apos;s.  A comparison would be a multi-part row key with int-String-int.  The Cell only knows that we have a row key byte[], and the levels on top are free to use those bytes any way they like.  We don&apos;t want to expose an Iterator on the rowKey section of the Cell...&lt;/p&gt;

&lt;p&gt;There is another discussion about the use cases for tags and how those tags should be written into the byte[], but this particular jira is only focused on what to add to the Cell interface.  It&apos;s an important discussion no doubt, but I wonder if it matters here?&lt;/p&gt;
</comment>
                            <comment id="13649492" author="ram_krish" created="Mon, 6 May 2013 02:58:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;It&apos;s an important discussion no doubt, but I wonder if it matters here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agree.  We can focus on the methods needed for the Cell interface.&lt;br/&gt;
So Matt you suggest that i give an uploaded patch with the methods added to Cell alone and remove the CellUtil.iterators for now? &lt;/p&gt;</comment>
                            <comment id="13649493" author="ram_krish" created="Mon, 6 May 2013 03:00:27 +0000"  >&lt;p&gt;BTW what is the other JIRA where the internals are going to be discussed? If it is not found i can raise one.&lt;br/&gt;
I can provide more details on how the tag byte[] array can be represented.. We can discuss on the options out there.&lt;/p&gt;</comment>
                            <comment id="13649504" author="mcorgan" created="Mon, 6 May 2013 03:37:45 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;BTW what is the other JIRA where the internals are going to be discussed?&lt;/p&gt;&lt;/blockquote&gt;I can&apos;t think of a specific jira - maybe one should be created.  Related issues include &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6222&quot; title=&quot;Add per-KeyValue Security&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6222&quot;&gt;&lt;del&gt;HBASE-6222&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7448&quot; title=&quot;Add tags to Cell API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7448&quot;&gt;&lt;del&gt;HBASE-7448&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7662&quot; title=&quot;[Per-KV security] Per cell ACLs stored in tags&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7662&quot;&gt;&lt;del&gt;HBASE-7662&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;So Matt you suggest that i give an uploaded patch with the methods added to Cell alone and remove the CellUtil.iterators for now?&lt;/p&gt;&lt;/blockquote&gt;I&apos;ve not been working on this lately and don&apos;t mean to have too strong of a recommendation, but if you agree the Cell interface should only focus on allocating a range of bytes for the tags, then yes, I&apos;d say we could have a separate issue/discussion for the format of the tags bytes.  I&apos;m concerned that the logic behind the tags is too complex to be handled at the Cell level.  HBase already needs performance improvements with regards to iterating cells, and parsing and interpreting tags contents at the cell iteration level would be too expensive.  At the lower levels they should be as opaque as the contents of the value byte[].  Others may disagree for sure - it&apos;s an important conversation.&lt;/p&gt;</comment>
                            <comment id="13649507" author="ram_krish" created="Mon, 6 May 2013 03:43:50 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6222&quot; title=&quot;Add per-KeyValue Security&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6222&quot;&gt;&lt;del&gt;HBASE-6222&lt;/del&gt;&lt;/a&gt; deals with Security at cell level&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7448&quot; title=&quot;Add tags to Cell API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7448&quot;&gt;&lt;del&gt;HBASE-7448&lt;/del&gt;&lt;/a&gt; - is already closed as dup and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7662&quot; title=&quot;[Per-KV security] Per cell ACLs stored in tags&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7662&quot;&gt;&lt;del&gt;HBASE-7662&lt;/del&gt;&lt;/a&gt; - is applying ACLs as tags.&lt;/p&gt;

&lt;p&gt;So from the work that i have been currently doing there are lot of workarounds and different ideas to actually  get these tags fit into the internals of the KeyValues and the related code that works on these.  So better start a new JIRA and discuss over there.&lt;br/&gt;
The Cell methods i can add over here and we can close this JIRA once it gets committed.&lt;/p&gt;</comment>
                            <comment id="13649527" author="stack" created="Mon, 6 May 2013 05:06:52 +0000"  >&lt;p&gt;Ok.  Tags are opaque byte arrays at this level.  Whether there is one tag or 100 in the array of bytes and how to parse the bytes is for figuring elsewhere.  Below the Cell level, the tag representation can be compressed or encoded but by inspection of the raw bytes themselves, not by exploiting some Tag aspect.&lt;/p&gt;

&lt;p&gt;Sounds like the additional methods would be the below only?&lt;/p&gt;

&lt;p&gt;+  /**&lt;br/&gt;
+   * @return the tag byte array&lt;br/&gt;
+   */&lt;br/&gt;
+  byte[] getTagArray();&lt;br/&gt;
+&lt;br/&gt;
+   /**&lt;br/&gt;
+   * @return the first offset where the tags start in the Cell&lt;br/&gt;
+   */&lt;br/&gt;
+  int getTagsOffset();&lt;br/&gt;
+  &lt;br/&gt;
+  /**&lt;br/&gt;
+   * @return the total length of the tags in the Cell.&lt;br/&gt;
+   */&lt;br/&gt;
+  int getTagsLength();&lt;br/&gt;
+  &lt;/p&gt;</comment>
                            <comment id="13649533" author="ram_krish" created="Mon, 6 May 2013 05:40:03 +0000"  >&lt;p&gt;I raised &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8496&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-8496&lt;/a&gt; for other details.&lt;br/&gt;
I feel getNumTags() should be needed here.  &lt;br/&gt;
Removing hasTags() is fine with me.  &lt;br/&gt;
If we don&apos;t have getNumTags(), then everytime CellUtil.getNumTags() need to be used i feel mainly in cases when i have more than one tag.  (may be in future we may end up in this).&lt;/p&gt;</comment>
                            <comment id="13649816" author="ram_krish" created="Mon, 6 May 2013 16:04:02 +0000"  >&lt;p&gt;Updated patch.&lt;/p&gt;</comment>
                            <comment id="13649840" author="stack" created="Mon, 6 May 2013 16:32:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;I feel getNumTags() should be needed here. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To figure the number of tags, wont&apos; you have to parse the Tag bytes?  And tenative agreemeent above seemed to be leaning toward punting tag parse out of Cell?&lt;/p&gt;</comment>
                            <comment id="13649845" author="stack" created="Mon, 6 May 2013 16:34:55 +0000"  >&lt;p&gt;Patch looks good except for this addition:&lt;/p&gt;

&lt;p&gt;+  /**&lt;br/&gt;
+   * @return the total number of tags in the cell&lt;br/&gt;
+   */&lt;br/&gt;
+  int getNumTags();&lt;/p&gt;


&lt;p&gt;Also, this may seem like a super nit but I think you should change the order in which the methods show in the Interface to match the order done for the other elements of Cell so that when someone is reading the Interface, it will be plain that tag-handling is just like row or column or qualifier handling.&lt;/p&gt;

&lt;p&gt;Good on you Ram.&lt;/p&gt;</comment>
                            <comment id="13649891" author="ram_krish" created="Mon, 6 May 2013 17:29:38 +0000"  >&lt;p&gt;Updated patch.&lt;/p&gt;</comment>
                            <comment id="13650022" author="stack" created="Mon, 6 May 2013 19:30:58 +0000"  >&lt;p&gt;+1 from me (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt;?)&lt;/p&gt;</comment>
                            <comment id="13650101" author="mcorgan" created="Mon, 6 May 2013 20:50:53 +0000"  >&lt;p&gt;Maybe change getTagsArray() to be plural like the other two?&lt;/p&gt;

&lt;p&gt;If we can rely on getTagsLength()==0 to indicate there are no tags then we probably don&apos;t need the getNumTags().  If we did want to have a getNumTags(), we&apos;d probably want to store numTags as a VInt somewhere in the cell.  I&apos;d say just rely on getTagsLength()==0 to indicate there are no tags, so +1 from me&lt;/p&gt;</comment>
                            <comment id="13650405" author="ram_krish" created="Tue, 7 May 2013 02:40:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;Maybe change getTagsArray() to be plural like the other two?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok will do that.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If we did want to have a getNumTags(), we&apos;d probably want to store numTags as a VInt somewhere in the cell.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is what i have done currently in my implementation.  Not as a Vint but a single byte.&lt;br/&gt;
So i thought having getNumTags() would be meaningful.  If we don&apos;t have this then we should every time use some way to find out the number of tags given the tagByteArray.&lt;br/&gt;
But as you said just to know if a Cell has tags or not getTagsLength() &amp;gt; 0 should help.&lt;/p&gt;</comment>
                            <comment id="13650448" author="hadoopqa" created="Tue, 7 May 2013 03:07:57 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12581913/HBASE-7897_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12581913/HBASE-7897_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5566//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13651207" author="stack" created="Tue, 7 May 2013 19:26:44 +0000"  >&lt;p&gt;Here is a patch that changes getTagArray to getTagsArray.  Will commit....&lt;/p&gt;</comment>
                            <comment id="13651208" author="stack" created="Tue, 7 May 2013 19:27:24 +0000"  >&lt;p&gt;Or rather, won&apos;t commit.  No harm letting this one stew a while.&lt;/p&gt;</comment>
                            <comment id="13651269" author="hadoopqa" created="Tue, 7 May 2013 20:34:38 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12582152/7897v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12582152/7897v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5579//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13651573" author="ram_krish" created="Wed, 8 May 2013 02:46:19 +0000"  >&lt;p&gt;Sorry Stack, couldn&apos;t make that updated patch yesterday. Thanks for doing it.&lt;/p&gt;</comment>
                            <comment id="13652098" author="stack" created="Wed, 8 May 2013 17:34:05 +0000"  >&lt;p&gt;Fixed some formatting and throw UnsupportedOperationException if called.&lt;/p&gt;

&lt;p&gt;If you are good w/ this Ram I&apos;ll commit.&lt;/p&gt;</comment>
                            <comment id="13652103" author="ram_krish" created="Wed, 8 May 2013 17:39:02 +0000"  >&lt;p&gt;Ok Stack +1. Once again thanks for updating it.&lt;/p&gt;</comment>
                            <comment id="13652131" author="stack" created="Wed, 8 May 2013 17:59:00 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;  Let me wait on hadoopqa  before commit.&lt;/p&gt;</comment>
                            <comment id="13652210" author="hadoopqa" created="Wed, 8 May 2013 18:43:25 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12582321/7897v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12582321/7897v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.client.TestHCM.testDeleteForZKConnLeak(TestHCM.java:855)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5594//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13652249" author="stack" created="Wed, 8 May 2013 19:22:44 +0000"  >&lt;p&gt;Let m look at the TestHCM failure.  That is test added yesterday.&lt;/p&gt;</comment>
                            <comment id="13652263" author="hadoopqa" created="Wed, 8 May 2013 19:51:16 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12582321/7897v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12582321/7897v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestMasterObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestTableLockManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5597//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13652277" author="stack" created="Wed, 8 May 2013 20:04:01 +0000"  >&lt;p&gt;Committed.  The failed tests are random unrelated.&lt;/p&gt;</comment>
                            <comment id="13652657" author="hudson" created="Thu, 9 May 2013 01:51:09 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4104 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4104/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4104/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7897&quot; title=&quot;Add support for tags to Cell Interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7897&quot;&gt;&lt;del&gt;HBASE-7897&lt;/del&gt;&lt;/a&gt; Add support for tags to Cell Interface (Revision 1480430)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/test/java/org/apache/hadoop/hbase/ipc/TestPayloadCarryingRpcController.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/Cell.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/decode/PrefixTreeCell.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13652690" author="hudson" created="Thu, 9 May 2013 02:42:22 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #181 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/181/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/181/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7897&quot; title=&quot;Add support for tags to Cell Interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7897&quot;&gt;&lt;del&gt;HBASE-7897&lt;/del&gt;&lt;/a&gt; Add support for tags to Cell Interface (Revision 1480431)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/test/java/org/apache/hadoop/hbase/ipc/TestPayloadCarryingRpcController.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/Cell.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/decode/PrefixTreeCell.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13652729" author="hudson" created="Thu, 9 May 2013 04:26:45 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #91 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/91/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/91/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7897&quot; title=&quot;Add support for tags to Cell Interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7897&quot;&gt;&lt;del&gt;HBASE-7897&lt;/del&gt;&lt;/a&gt; Add support for tags to Cell Interface (Revision 1480431)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/test/java/org/apache/hadoop/hbase/ipc/TestPayloadCarryingRpcController.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/Cell.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/decode/PrefixTreeCell.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13652760" author="hudson" created="Thu, 9 May 2013 05:39:24 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #521 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/521/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/521/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7897&quot; title=&quot;Add support for tags to Cell Interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7897&quot;&gt;&lt;del&gt;HBASE-7897&lt;/del&gt;&lt;/a&gt; Add support for tags to Cell Interface (Revision 1480430)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/test/java/org/apache/hadoop/hbase/ipc/TestPayloadCarryingRpcController.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/Cell.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/decode/PrefixTreeCell.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12646149">HBASE-8496</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12560859">HBASE-6222</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12582152" name="7897v3.txt" size="3447" author="stack" created="Tue, 7 May 2013 19:26:44 +0000"/>
                            <attachment id="12582321" name="7897v4.txt" size="3872" author="stack" created="Wed, 8 May 2013 17:34:05 +0000"/>
                            <attachment id="12581792" name="HBASE-7897.patch" size="6868" author="ram_krish" created="Sat, 4 May 2013 10:11:13 +0000"/>
                            <attachment id="12581901" name="HBASE-7897_1.patch" size="3881" author="ram_krish" created="Mon, 6 May 2013 16:04:02 +0000"/>
                            <attachment id="12581913" name="HBASE-7897_2.patch" size="3442" author="ram_krish" created="Mon, 6 May 2013 17:29:38 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Feb 2013 23:58:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>313948</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 32 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1i6dr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>314293</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Added below to Cell Interface:&lt;br/&gt;
&lt;br/&gt;
{code}&lt;br/&gt;
+  /**&lt;br/&gt;
+   * @return the tags byte array&lt;br/&gt;
+   */&lt;br/&gt;
+  byte[] getTagsArray();&lt;br/&gt;
&lt;br/&gt;
+  /**&lt;br/&gt;
+   * @return the first offset where the tags start in the Cell&lt;br/&gt;
+   */&lt;br/&gt;
+  int getTagsOffset();&lt;br/&gt;
+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * @return the total length of the tags in the Cell.&lt;br/&gt;
+   */&lt;br/&gt;
+  int getTagsLength();&lt;br/&gt;
{code}</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>