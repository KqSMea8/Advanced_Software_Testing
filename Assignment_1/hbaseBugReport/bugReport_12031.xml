<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:28:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12031/HBASE-12031.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12031] Parallel Scanners inside Region</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12031</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This JIRA to improve performance of multiple scanners running on a same region in parallel. The scenarios where we will get the performance benefits:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;New TableInputFormat with input splits smaller than HBase Region.&lt;/li&gt;
	&lt;li&gt;Scanning during compaction (Compaction scanner and application scanner over the same Region).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some JIRAs related to this one:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7336&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-7336&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5979&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5979&lt;/a&gt; &lt;/p&gt;</description>
                <environment></environment>
        <key id="12742871">HBASE-12031</key>
            <summary>Parallel Scanners inside Region</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="vrodionov">Vladimir Rodionov</assignee>
                                    <reporter username="vrodionov">Vladimir Rodionov</reporter>
                        <labels>
                    </labels>
                <created>Fri, 19 Sep 2014 22:20:21 +0000</created>
                <updated>Sun, 16 Nov 2014 23:29:37 +0000</updated>
                                            <version>0.98.6</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>Performance</component>
                    <component>Scanners</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="14141431" author="stack" created="Fri, 19 Sep 2014 22:23:18 +0000"  >&lt;p&gt;Can we put up a little harness that stands up an HRegion and then does Scans against it?  Will be easier to profile.  Also related is Liang&apos;s work over here &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-6735&quot; title=&quot;A minor optimization to avoid pread() be blocked by read() inside the same DFSInputStream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-6735&quot;&gt;&lt;del&gt;HDFS-6735&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
A minor optimization to avoid pread() be blocked by read() inside the same DFSInputStream&quot;&lt;/p&gt;</comment>
                            <comment id="14141467" author="vrodionov" created="Fri, 19 Sep 2014 22:40:02 +0000"  >&lt;p&gt;HBasers, how to create patch which includes new files as well (not only modified)?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
git diff --no-prefix &amp;gt; patch
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;does not pick up new files&lt;/p&gt;</comment>
                            <comment id="14141480" author="jxiang" created="Fri, 19 Sep 2014 22:45:33 +0000"  >&lt;p&gt;Use git add to add these files at first.&lt;/p&gt;</comment>
                            <comment id="14143821" author="vrodionov" created="Mon, 22 Sep 2014 21:06:28 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Use git add to add these files at first.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nope, does not work. I have two new files (yet to be committed) and bunch of modified files. Only modified files go to the patch.&lt;/p&gt;</comment>
                            <comment id="14143827" author="apurtell" created="Mon, 22 Sep 2014 21:09:12 +0000"  >&lt;p&gt;What I usually do is create a work branch for a patch, commit the patch, then use git format-patch to generate a patch file for JIRA:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;git checkout -b HBASE-12031
git add ...
git commit -m&quot;HBASE-12031 Parallel scanners inside region&quot;
git format-patch HEAD^
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does that work? It&apos;s easy to drop the work branches later with &apos;git branch -D ...&apos; and garbage collect eventually with &apos;git gc&apos;&lt;/p&gt;</comment>
                            <comment id="14143830" author="lhofhansl" created="Mon, 22 Sep 2014 21:12:26 +0000"  >&lt;p&gt;After git add you need to do &lt;tt&gt;git diff origin/&amp;lt;your branch&amp;gt;&lt;/tt&gt;... Ah, the joys of git &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14143833" author="vrodionov" created="Mon, 22 Sep 2014 21:15:06 +0000"  >&lt;p&gt;The instruction from HBase book is wrong. To create patch which include &lt;b&gt;new&lt;/b&gt; files as well (not only modified), one need to specify branch name. For example:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
git diff origin/master --no-prefix &amp;gt; PATCH
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14143836" author="vrodionov" created="Mon, 22 Sep 2014 21:15:54 +0000"  >&lt;p&gt;The same as Lars said. &lt;/p&gt;</comment>
                            <comment id="14143840" author="vrodionov" created="Mon, 22 Sep 2014 21:16:47 +0000"  >&lt;p&gt;Patch to master. &lt;/p&gt;</comment>
                            <comment id="14143849" author="vrodionov" created="Mon, 22 Sep 2014 21:21:57 +0000"  >&lt;p&gt;I submitted patch.  Word of caution: this is highly experimental feature. I have not verified that all HBase tests pass OK. In our own tests we do not see any issues. Some additional doc and tests will follow later on today. In my own tests (I have tested two scenarios: multiple scanners over the same region and scanner running during compaction) I see huge difference in performance (say, 4.8 sec vs 120 sec for first test and 13 sec vs 240 sec in a second test) I will publish complete report today/tomorrow.&lt;/p&gt;</comment>
                            <comment id="14143860" author="vrodionov" created="Mon, 22 Sep 2014 21:30:35 +0000"  >&lt;p&gt;Two tests for the feature. &lt;/p&gt;</comment>
                            <comment id="14143864" author="lhofhansl" created="Mon, 22 Sep 2014 21:33:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;, can you install the HBase formatter (if you use Eclipse)? It&apos;s in dev-support. It&apos;s a bit hard to make out the changes among all the whitespace changes.&lt;br/&gt;
Also in order to commit it, it needs to be formatted right &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;(I&apos;ll locally apply and then diff it with ignoring whitespace to look at it for now)&lt;/p&gt;</comment>
                            <comment id="14143869" author="vrodionov" created="Mon, 22 Sep 2014 21:36:55 +0000"  >&lt;p&gt;Lars, I think it is too early to commit. You can apply it locally and play with it.  I need a feedback, may be my approach is not what community will support.  &lt;/p&gt;</comment>
                            <comment id="14143874" author="lhofhansl" created="Mon, 22 Sep 2014 21:39:06 +0000"  >&lt;p&gt;Didn&apos;t mean to commit it juest yet. Just to please format the patch according to our code guidelines so that it is easy to gleam the changes from the patch (which now is hard between the white space changes) &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14143880" author="vrodionov" created="Mon, 22 Sep 2014 21:43:56 +0000"  >&lt;p&gt;Design doc (with test results and small configuration guide).&lt;/p&gt;</comment>
                            <comment id="14143912" author="vrodionov" created="Mon, 22 Sep 2014 22:05:53 +0000"  >&lt;p&gt;I do have apache formatter (2 spaces per TAB, TAB are spaces only). I am wondering Lars what whitespace changes do you see? &lt;/p&gt;</comment>
                            <comment id="14143940" author="vrodionov" created="Mon, 22 Sep 2014 22:20:20 +0000"  >&lt;p&gt;Patch #2 (with HBase formatter  from dev-support installed ), but I do not see any diff with the previous one.&lt;/p&gt;</comment>
                            <comment id="14143981" author="yuzhihong@gmail.com" created="Mon, 22 Sep 2014 22:52:31 +0000"  >&lt;p&gt;For MovingAverageWithoutOutliersPredictor :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+	&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt;[] tmp;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What are the values held in tmp array ?&lt;/p&gt;

&lt;p&gt;Mind putting the patch on review board ?&lt;/p&gt;</comment>
                            <comment id="14144000" author="lhofhansl" created="Mon, 22 Sep 2014 23:11:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;, in your tests - out of curiosity - what happens when you force compaction into always using preads?&lt;/p&gt;</comment>
                            <comment id="14144010" author="lhofhansl" created="Mon, 22 Sep 2014 23:18:25 +0000"  >&lt;p&gt;Sorry to be pedantic... .2 still has the messed up whitespace (tabs instead of 2 spaces).&lt;/p&gt;</comment>
                            <comment id="14144021" author="vrodionov" created="Mon, 22 Sep 2014 23:26:29 +0000"  >&lt;p&gt;[~lhofhansl&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;in your tests - out of curiosity - what happens when you force compaction into always using preads?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I have not tried that as since implementation still use streaming reads when possible, but if we disable streaming reads and will use preads with read ahead, we will see some performance degradation, of course. Streaming reads are still more efficient than preads with read aheads. &lt;/p&gt;</comment>
                            <comment id="14144039" author="vrodionov" created="Mon, 22 Sep 2014 23:35:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What are the values held in tmp array ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;values&lt;/b&gt; array is used in a predictor to keep last N skips. When we need to predict next skip, we copy data from &lt;b&gt;values&lt;/b&gt; into &lt;b&gt;tmp&lt;/b&gt;, then sort &quot;tmp&quot; and discard outliers. So this just a temporary buffer.&lt;/p&gt;</comment>
                            <comment id="14144042" author="vrodionov" created="Mon, 22 Sep 2014 23:38:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sorry to be pedantic... .&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I know, for some reason, formatter does not format properly.  Yet.&lt;/p&gt;</comment>
                            <comment id="14145064" author="vrodionov" created="Tue, 23 Sep 2014 17:23:36 +0000"  >&lt;p&gt;Corrected indentation patch.&lt;/p&gt;</comment>
                            <comment id="14145074" author="vrodionov" created="Tue, 23 Sep 2014 17:26:32 +0000"  >&lt;p&gt;Let us try the patch.&lt;/p&gt;</comment>
                            <comment id="14145302" author="hadoopqa" created="Tue, 23 Sep 2014 19:36:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12670749/HBASE-12031.3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12670749/HBASE-12031.3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12670749&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 33 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 2 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    + *  TODO: If scanner makes many skips - decrease prefetch size ( down to the size of a single HFile block)&lt;br/&gt;
+  public final static String HFILE_READAHEAD_BUFFER_EXPIRE_TIMEOUT = &quot;hfile.readahead.buffer.expire.timeout&quot;;&lt;br/&gt;
+    maxActiveBuffers = config.getInt(HFILE_READAHEAD_ACTIVE_BUFFERS, DEFAULT_HFILE_PSCAN_ACTIVE_BUFFERS);&lt;br/&gt;
+    bufferExpirationTimeout = config.getLong(HFILE_READAHEAD_BUFFER_EXPIRE_TIMEOUT, DEFAULT_HFILE_PSCAN_BUFFER_EXPIRE_TIMEOUT);		&lt;br/&gt;
+    System.out.println(&quot;Size=&quot;&lt;ins&gt;predictor.getPredictorSize()&lt;/ins&gt;&quot; outliers=&quot;&lt;ins&gt;predictor.getOutliersNumber()&lt;/ins&gt; &quot; avg =&quot;&lt;ins&gt;predictor.getMovingAverage()&lt;/ins&gt;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.token.TestZKSecretWatcher&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestEndToEndSplitTransaction&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.blur.lucene.search.FacetQueryTest.testFacetQueryPerformance2(FacetQueryTest.java:141)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestReplicasClient.testSmallScanWithReplicas(TestReplicasClient.java:544)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11036//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14145330" author="stack" created="Tue, 23 Sep 2014 19:55:09 +0000"  >&lt;p&gt;A few high-level comments &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You are adding a HFIleReaderContext.  We have a HFileContext already.  You cannot reuse/amend this class to your purposes?&lt;/p&gt;

&lt;p&gt;I would not expect a Context to do the actual reading as in +  public boolean read(long offset, byte[] buffer, int bufOffset, int len). I could imagine passing in a context when you read.&lt;/p&gt;

&lt;p&gt;Regards read-ahead and keeping the buffer local to the scanner, it is not enough just  having the scanner do a read-ahead that ensures blockcache is populated?  You have to bring the data local to the scanner? If multiple concurrent scans, we&apos;ll have duplicate data buffered?&lt;/p&gt;

&lt;p&gt;Hard to see what you did in readAtOffset.&lt;/p&gt;

&lt;p&gt;Keep going...&lt;/p&gt;


</comment>
                            <comment id="14145386" author="vrodionov" created="Tue, 23 Sep 2014 20:32:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You are adding a HFIleReaderContext. We have a HFileContext already. You cannot reuse/amend this class to your purposes?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;HFileContext carries the information on some of the meta data about the HFile - this is per HFile. FielReaderContext is per Reader (Scanner).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I would not expect a Context to do the actual reading as in + public boolean read(long offset, byte[] buffer, int bufOffset, int len). I could imagine passing in a context when you read.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Probably, yes but need a place (class) to move the actual read to.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Regards read-ahead and keeping the buffer local to the scanner, it is not enough just having the scanner do a read-ahead that ensures blockcache is populated? You have to bring the data local to the scanner? If multiple concurrent scans, we&apos;ll have duplicate data buffered?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not sure how to implement this. Not all data from read ahead buffer should be cached in a general case. Sharing some data between scanners in RA buffer is not a common case.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hard to see what you did in readAtOffset.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If scanner is in &lt;b&gt;pread&lt;/b&gt; mode -  execute OLD code for &lt;b&gt;pread&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;else&lt;/p&gt;

&lt;p&gt;if read -ahead disabled (context == null) - execute OLD code&lt;/p&gt;

&lt;p&gt;else if streaming lock enabled  - execute OLD code&lt;/p&gt;

&lt;p&gt;else ( Read ahead enabled &amp;amp;&amp;amp; streaming lock - not enabled) - execute NEW code:&lt;/p&gt;

&lt;p&gt;Check if we can server block from RA buffer - if yes - read &amp;amp; return block, otherwise  read ahead next buffer, read block and return. &lt;/p&gt;
</comment>
                            <comment id="14146879" author="yuzhihong@gmail.com" created="Wed, 24 Sep 2014 21:01:40 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+             &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; ret = istream.read(fileOffset, dest, destOffset,
+                 size + extraSize);
+             &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ret &amp;lt; size) {
+               &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Positional read of &quot;&lt;/span&gt;
+                   + size + &lt;span class=&quot;code-quote&quot;&gt;&quot; bytes &quot;&lt;/span&gt;
+                   + &lt;span class=&quot;code-quote&quot;&gt;&quot;failed at offset &quot;&lt;/span&gt; + fileOffset
+                   + &lt;span class=&quot;code-quote&quot;&gt;&quot; (returned &quot;&lt;/span&gt; + ret + &lt;span class=&quot;code-quote&quot;&gt;&quot;)&quot;&lt;/span&gt;);
+             }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above snippet is repeated four times. Maybe put the above in a method ?&lt;/p&gt;</comment>
                            <comment id="14150121" author="vrodionov" created="Fri, 26 Sep 2014 22:36:40 +0000"  >&lt;p&gt;I am going to submit new patch next Monday.&lt;/p&gt;</comment>
                            <comment id="14150173" author="stack" created="Fri, 26 Sep 2014 23:14:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;HFileContext carries the information on some of the meta data about the HFile - this is per HFile. FielReaderContext is per Reader (Scanner).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Probably, yes but need a place (class) to move the actual read to.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can it not be done inside existing model via changes to HFileBlock and/or changes in scanners rather than doing this &apos;cross-cut&apos;?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Not all data from read ahead buffer should be cached in a general case. Sharing some data between scanners in RA buffer is not a common case.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Tell me more about the use case then?  Many scanners inside the same region but they will not be scanning same files?  RA buffers per scanner will need to be accounted for so we can measure mem usage. Since we read in the block, why not go via blockcache unless for sure it is one-shot only?&lt;/p&gt;

&lt;p&gt;Will readahead be a scanner option?&lt;/p&gt;

&lt;p&gt;Good stuff &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;&lt;/p&gt;

</comment>
                            <comment id="14150775" author="vrodionov" created="Sat, 27 Sep 2014 21:01:43 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tell me more about the use case then? Many scanners inside the same region but they will not be scanning same files?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Use case #1:&lt;/p&gt;

&lt;p&gt;New &lt;b&gt;TableInputFormat&lt;/b&gt;, where we can create &lt;b&gt;sub-region&lt;/b&gt; input splits. This will reduce M/R outliers and improve overall M/R (Hive, etc) performance. &lt;b&gt;No overlaps&lt;/b&gt; between scanners here. No need to cache either.Each scanner will get its own sub-region of data.&lt;/p&gt;

&lt;p&gt;Use case #2:&lt;/p&gt;

&lt;p&gt;Application scanner, running during region compaction. Happens quite often. Note: both scanners suffer badly here. You can try your own tests. I have run my own and found, that region compaction requires &lt;b&gt;isolation&lt;/b&gt; to complete as quickly as possible. If we run application scanners (Hive queries, for example) during compaction - this is bad, really bad - 10-20X slower (by the way, 0.94 is much better). The data buffer overlap (RA buffer) between scanners here are possible, of course, but can be ignored. Moreover, long running scanners usually disable block cache (compaction scanner, for example). I do not see any real value in overcomplicating code.&lt;/p&gt;

&lt;p&gt;We can do read-ahead a scanner option. This is a good idea.&lt;/p&gt;

</comment>
                            <comment id="14155073" author="apurtell" created="Wed, 1 Oct 2014 16:32:52 +0000"  >&lt;p&gt;Moving to 0.98.8&lt;/p&gt;</comment>
                            <comment id="14214130" author="lhofhansl" created="Sun, 16 Nov 2014 23:29:37 +0000"  >&lt;p&gt;Related perhaps: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12411&quot; title=&quot;Optionally enable p-reads and private readers for compactions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12411&quot;&gt;&lt;del&gt;HBASE-12411&lt;/del&gt;&lt;/a&gt;. (I attached a simple patch there has compactions use private StoreFiles - and thus readers).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12670521" name="HBASE-12031.2.patch" size="60759" author="vrodionov" created="Mon, 22 Sep 2014 22:20:20 +0000"/>
                            <attachment id="12670749" name="HBASE-12031.3.patch" size="61432" author="vrodionov" created="Tue, 23 Sep 2014 17:23:36 +0000"/>
                            <attachment id="12670502" name="HBASE-12031.patch" size="60757" author="vrodionov" created="Mon, 22 Sep 2014 21:16:47 +0000"/>
                            <attachment id="12670514" name="ParallelScannerDesign.pdf" size="115002" author="vrodionov" created="Mon, 22 Sep 2014 21:43:56 +0000"/>
                            <attachment id="12670510" name="hbase-12031-tests.tar.gz" size="7948" author="vrodionov" created="Mon, 22 Sep 2014 21:30:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 19 Sep 2014 22:23:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 4 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i20a2n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>