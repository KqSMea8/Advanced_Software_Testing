<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:32:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12341/HBASE-12341.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12341] Overhaul logging; log4j2, machine-readable, etc.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12341</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is a general umbrella issue for 2.x logging improvements. Hang related work off this one.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12750429">HBASE-12341</key>
            <summary>Overhaul logging; log4j2, machine-readable, etc.</summary>
                <type id="14" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Umbrella</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 24 Oct 2014 18:59:55 +0000</created>
                <updated>Wed, 16 Nov 2016 00:13:44 +0000</updated>
                                                            <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                            <comments>
                            <comment id="14658502" author="apurtell" created="Wed, 5 Aug 2015 16:52:28 +0000"  >&lt;p&gt;We should consider reviving this now that log4j v1 is officially EOL: &lt;a href=&quot;https://blogs.apache.org/foundation/entry/apache_logging_services_project_announces&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://blogs.apache.org/foundation/entry/apache_logging_services_project_announces&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15662821" author="ndimiduk" created="Mon, 14 Nov 2016 05:30:51 +0000"  >&lt;p&gt;Has there been a design discussion on this topic? Anyone mention moving to a log API (ie, slf4j) and leaving the backend up to runtime decision?&lt;/p&gt;</comment>
                            <comment id="15664288" author="stack" created="Mon, 14 Nov 2016 16:10:13 +0000"  >&lt;p&gt;No discussion as yet. Need one soon. Would be survey, why our current logging API doesn&apos;t cut it, should we go slf4j as some of our dependencies do... etc.&lt;/p&gt;</comment>
                            <comment id="15665776" author="enis" created="Tue, 15 Nov 2016 02:16:52 +0000"  >&lt;p&gt;We use commons-logging as the API. Is there bindings for log4j2? &lt;br/&gt;
Not sure slf4j API is better than commons-logging. &lt;/p&gt;</comment>
                            <comment id="15666069" author="stack" created="Tue, 15 Nov 2016 04:48:42 +0000"  >&lt;p&gt;On commons-logging to log4j2, see the bridge: &lt;a href=&quot;http://logging.apache.org/log4j/2.x/log4j-jcl/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://logging.apache.org/log4j/2.x/log4j-jcl/&lt;/a&gt; I&apos;ve not tried it.&lt;/p&gt;

&lt;p&gt;On SLF4J, I know little other than annoying message if two SLF4J instances on classpath and that you can&apos;t change logging level programmatically (which is a mite annoying, an issue we have in commons-logging).&lt;/p&gt;
</comment>
                            <comment id="15667904" author="busbey" created="Tue, 15 Nov 2016 18:38:13 +0000"  >&lt;p&gt;please start a &lt;span class=&quot;error&quot;&gt;&amp;#91;DISCUSS&amp;#93;&lt;/span&gt; thread on this. Unless commons-logging has been updated to allow for lazy string interpolation than it&apos;s not worth keeping, IMHO. all the extra checks for explicit logging levels suck.&lt;/p&gt;</comment>
                            <comment id="15668415" author="enis" created="Tue, 15 Nov 2016 21:29:59 +0000"  >&lt;p&gt;I did a 5 min google search. &lt;br/&gt;
Seems that we are using commons-logging 1.2 which is the latest version and it does not have the lazy string interpolation or Java-8 lambda style. &lt;/p&gt;

&lt;p&gt;Lazy arguments will give us usage like this: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Found a problem: {} with &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; {}&quot;&lt;/span&gt;, arg1, arg2);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;instead of &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (LOG.isDebugEnabled()) {
     LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Found a problem:&quot;&lt;/span&gt; + arg1 + &lt;span class=&quot;code-quote&quot;&gt;&quot;with &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;&quot;&lt;/span&gt; + arg2);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lambda lazy evaluation would be something like this: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Result of computing something costly: {}&quot;&lt;/span&gt;, () -&amp;gt; doSomethingCostly()); 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I don&apos;t care too much about lambdas in logging, because there is then the overhead of capturing the lambda, although it will lazy execute. &lt;/p&gt;

&lt;p&gt;Then the question is whether moving to log4j2 APIs directly, or moving to slf4j first then moving to log4j2 after. We can easily do the two steps independently. &lt;/p&gt;</comment>
                            <comment id="15668709" author="stack" created="Tue, 15 Nov 2016 23:20:19 +0000"  >&lt;p&gt;Sample annoying message dumped on brand new build of master:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
stack@ve0524:~$ ./hbase/bin/hbase --config ~/conf_hbase/ shell
SLF4J: &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt; path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/stack/hbase-2.0.0-SNAPSHOT/lib/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/stack/hadoop-2.7.3-SNAPSHOT/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http:&lt;span class=&quot;code-comment&quot;&gt;//www.slf4j.org/codes.html#multiple_bindings &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; an explanation.
&lt;/span&gt;SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;slf4j is not what we use for logging. Its 3rd-party usage.  At least the complaint is clean. We need to clean this stuff up. Looks bad.&lt;/p&gt;</comment>
                            <comment id="15668760" author="apurtell" created="Tue, 15 Nov 2016 23:39:22 +0000"  >&lt;p&gt;slf4j instead of commons-logging for logging facade wouldn&apos;t be the worst option. If both we and Hadoop specify differing slf4j versions I think Maven would do the right thing and only one slf4j implementation jar would be on the classpath of our binary convenience artifacts, avoiding the annoying message Stack mentions.&lt;/p&gt;</comment>
                            <comment id="15668829" author="enis" created="Wed, 16 Nov 2016 00:13:44 +0000"  >&lt;p&gt;maven enforcer can enforce converging dependencies: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &amp;lt;plugin&amp;gt;
        &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;maven-enforcer-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;executions&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;depcheck&amp;lt;/id&amp;gt;
            &amp;lt;configuration&amp;gt;
              &amp;lt;rules&amp;gt;
                &amp;lt;DependencyConvergence&amp;gt;
                  &amp;lt;uniqueVersions&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;lt;/uniqueVersions&amp;gt;
                &amp;lt;/DependencyConvergence&amp;gt;
              &amp;lt;/rules&amp;gt;
            &amp;lt;/configuration&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;enforce&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
            &amp;lt;phase&amp;gt;verify&amp;lt;/phase&amp;gt;
          &amp;lt;/execution&amp;gt;
        &amp;lt;/executions&amp;gt;
      &amp;lt;/plugin&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                            <subtask id="12683027">HBASE-10092</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 5 Aug 2015 16:52:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i21k3b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>