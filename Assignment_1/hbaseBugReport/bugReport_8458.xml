<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:55:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8458/HBASE-8458.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8458] Support for batch version of checkAndPut() and checkAndDelete()</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8458</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The use case is that the user has multiple threads loading hundreds of keys into a hbase table. Occasionally there are collisions in the keys being uploaded by different threads. So for correctness, it is required to do checkAndPut() instead of a put(). However, doing a checkAndPut() rpc for every key update is non optimal. It would be good to have a batch version of checkAndPut() similar to batch put(). The client can partition the keys on region boundaries.&lt;/p&gt;

&lt;p&gt;The jira is NOT looking for any type of cross-row locking or multi-row atomicity with checkAndPut()&lt;/p&gt;

&lt;p&gt;Batch version of checkAndDelete() is a similar requirement.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12645310">HBASE-8458</key>
            <summary>Support for batch version of checkAndPut() and checkAndDelete()</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="harip">Hari Mankude</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Apr 2013 21:13:02 +0000</created>
                <updated>Mon, 27 Jun 2016 06:56:22 +0000</updated>
                                            <version>0.95.0</version>
                                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>7</votes>
                                    <watches>22</watches>
                                                                <comments>
                            <comment id="13858412" author="jamestaylor" created="Sun, 29 Dec 2013 19:42:00 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; - this would be useful. Any cycles for implementing it?&lt;/p&gt;</comment>
                            <comment id="13858632" author="lhofhansl" created="Mon, 30 Dec 2013 07:30:03 +0000"  >&lt;p&gt;This can actually be done with a coprocessor now, no? All the pieces are in place (locks, leases, etc). If there&apos;s something missing, we should add/expose that.&lt;/p&gt;

&lt;p&gt;If we wanted to add this to the HTable API, we&apos;d have to discuss exact return value (array of booleans, probably) and behavior under partial failure (maybe just behave as multi put - checkAndPut are still idempotent so that should work)&lt;/p&gt;</comment>
                            <comment id="13858665" author="jamestaylor" created="Mon, 30 Dec 2013 08:48:56 +0000"  >&lt;p&gt;Most anything can be done with a coprocessor. It&apos;d be convenient not to have to write it - it should be part of the client API in my opinion.&lt;/p&gt;</comment>
                            <comment id="13858666" author="nkeywal" created="Mon, 30 Dec 2013 08:50:32 +0000"  >&lt;p&gt;To me, the fact that multi is not available for checkAndXX (or increment) is more or less a bug in the client api.&lt;br/&gt;
In 0.96+, the code for multiget and multiput is the same on the client side (iirc multiexist is a subcase on get on 0.96). I did look at the other multis when I worked on the client in the 0.96, but doing a proper work would have cost more than a week of work, so I excluded it...&lt;/p&gt;</comment>
                            <comment id="13859050" author="apurtell" created="Mon, 30 Dec 2013 20:12:32 +0000"  >&lt;p&gt;I agree with N that having a class of operations excluded from multi is an API design issue. We went down this road when the checkAndXXX operations were first added as special code paths, but they were needed at the time so the changes were accepted and have remained useful since. However we really should have all APIs derived from common ancestors that can be combined into a single RPC. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I did look at the other multis when I worked on the client in the 0.96, but doing a proper work would have cost more than a week of work, so I excluded it..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is the crux of the issue.&lt;/p&gt;

&lt;p&gt;If we are going to do this we should do it before a 1.0 release adds expectations on client API compatibility we can sidestep currently.&lt;/p&gt;</comment>
                            <comment id="13859058" author="lhofhansl" created="Mon, 30 Dec 2013 20:30:35 +0000"  >&lt;p&gt;Alright... It should not be that hard to add (and in a backward compatible):&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Introduce a CheckAndRowMutation class that implements Row.&lt;/li&gt;
	&lt;li&gt;Add handling to the multi at the region sever. Can just handle it like multi get at the RS, and just call HRegion.get(...) in a loop. Later we can optimize this similar to miniBatchMutation.&lt;/li&gt;
	&lt;li&gt;Use existing batch method on HTable.&lt;/li&gt;
	&lt;li&gt;Keep the old API in 0.94 and 0.96 (or only do this in 0.98+ and remove the old API)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13859060" author="apurtell" created="Mon, 30 Dec 2013 20:36:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;Keep the old API in 0.94 and 0.96 (or only do this in 0.98+ and remove the old API)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, if something is available in the next week or so we can pull it in to 0.98 &lt;em&gt;and&lt;/em&gt; remove the old API, presuming the new CheckAndRowMutation can go into 0.96 and the old APIs are marked deprecated there. Otherwise a removal will have to wait for the next.&lt;/p&gt;</comment>
                            <comment id="15108315" author="abariev" created="Wed, 20 Jan 2016 10:03:16 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; any updates on this issue? I also need batched version of checkAndPut and haven&apos;t found it in current API. Could it be done with coprocessor or somehow differently?&lt;/p&gt;</comment>
                            <comment id="15197849" author="ekundin" created="Wed, 16 Mar 2016 18:12:42 +0000"  >&lt;p&gt;I actually have the same problem and attempted to fix with a coprocessor.  An observer coprocessor is unable to do the appropriate locking if writes are happening from different clients.  You cannot run a checkAndPut from within the coprocessor as by the time you are in the preBatchMutate, the row is locked for writing and a checkAndPut will be unable to run on the same row.  If you implement it as an endpoint observer, then it should work, though I haven&apos;t tried it, but it will do a read/write lock on the row, which is a stricter locking than checkAndPut would do, so it would hurt performance more than a batch checkAndPut which will not block reads for as long.  So it would seem that a batch checkAndPut would be the best solution.&lt;/p&gt;</comment>
                            <comment id="15198531" author="lhofhansl" created="Thu, 17 Mar 2016 01:04:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ekundin&quot; class=&quot;user-hover&quot; rel=&quot;ekundin&quot;&gt;Esther Kundin&lt;/a&gt; which version of HBase are you using.&lt;br/&gt;
I do agree with previous comments that no bulk api for CheckAndXXX is a bug.&lt;/p&gt;</comment>
                            <comment id="15200126" author="ekundin" created="Thu, 17 Mar 2016 18:35:13 +0000"  >&lt;p&gt;I was testing with HDP HBase 0.98. &lt;/p&gt;</comment>
                            <comment id="15271683" author="babartareen" created="Thu, 5 May 2016 00:10:00 +0000"  >&lt;p&gt;I implemented compare and set functionality for apache phoenix based on the exclusive locking and coprocessors (&lt;a href=&quot;https://github.com/babartareen/phoenix/blob/master/phoenix-core/src/main/java/org/apache/phoenix/hbase/index/Indexer.java#L295&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/babartareen/phoenix/blob/master/phoenix-core/src/main/java/org/apache/phoenix/hbase/index/Indexer.java#L295&lt;/a&gt;). With recent change to using ReadWriteLock, a coprocessor will no longer have exclusive control over a row and thus won&apos;t be the correct place to intercept a row update. CheckAndPut  can not be called from the coprocessor as locks are already acquired as @Esther noted. Where might be a better place to intercept an update and be able to allow/skip it?&lt;/p&gt;</comment>
                            <comment id="15350491" author="chuchao333" created="Mon, 27 Jun 2016 06:56:22 +0000"  >&lt;p&gt;I am also interested in this issue. Having gone through all the comments above, it looks like we don&apos;t have a solution to achieve an equivalent of batch checkAndPut?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 29 Dec 2013 19:42:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>325672</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            24 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1k6pb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326017</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Phoenix</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>