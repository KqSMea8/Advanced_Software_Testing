<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:17:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4222/HBASE-4222.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4222] Make HLog more resilient to write pipeline failures</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4222</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The current implementation of HLog rolling to recover from transient errors in the write pipeline seems to have two problems:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;When &lt;tt&gt;HLog.LogSyncer&lt;/tt&gt; triggers an &lt;tt&gt;IOException&lt;/tt&gt; during time-based sync operations, it triggers a log rolling request in the corresponding catch block, but only after escaping from the internal while loop.  As a result, the &lt;tt&gt;LogSyncer&lt;/tt&gt; thread will exit and never be restarted from what I can tell, even if the log rolling was successful.&lt;/li&gt;
	&lt;li&gt;Log rolling requests triggered by an &lt;tt&gt;IOException&lt;/tt&gt; in &lt;tt&gt;sync()&lt;/tt&gt; or &lt;tt&gt;append()&lt;/tt&gt; never happen if no entries have yet been written to the log.  This means that write errors are not immediately recovered, which extends the exposure to more errors occurring in the pipeline.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;In addition, it seems like we should be able to better handle transient problems, like a rolling restart of DataNodes while the HBase RegionServers are running.  Currently this will reliably cause RegionServer aborts during log rolling: either an append or time-based sync triggers an initial &lt;tt&gt;IOException&lt;/tt&gt;, initiating a log rolling request.  However the log rolling then fails in closing the current writer (&quot;All datanodes are bad&quot;), causing a RegionServer abort.  In this case, it seems like we should at least allow you an option to continue with the new writer and only abort on subsequent errors.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12519223">HBASE-4222</key>
            <summary>Make HLog more resilient to write pipeline failures</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ghelmling">Gary Helmling</assignee>
                                    <reporter username="ghelmling">Gary Helmling</reporter>
                        <labels>
                    </labels>
                <created>Thu, 18 Aug 2011 01:23:42 +0000</created>
                <updated>Fri, 20 Nov 2015 11:54:19 +0000</updated>
                            <resolved>Thu, 25 Aug 2011 03:45:34 +0000</resolved>
                                                    <fixVersion>0.90.5</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13087093" author="apurtell" created="Thu, 18 Aug 2011 16:17:06 +0000"  >&lt;p&gt;+1 We&apos;ve tested this on EC2 clusters and it works.&lt;/p&gt;</comment>
                            <comment id="13087094" author="apurtell" created="Thu, 18 Aug 2011 16:17:37 +0000"  >&lt;p&gt;I presume a patch or RB post is coming soon. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13087778" author="yuzhihong@gmail.com" created="Fri, 19 Aug 2011 15:57:43 +0000"  >&lt;p&gt;@Gary:&lt;br/&gt;
Can you publish your solution ?&lt;br/&gt;
Every HBase user is experiencing RegionServer aborts described in this JIRA.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13087869" author="jiraposter@reviews.apache.org" created="Fri, 19 Aug 2011 18:34:27 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/1590/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch corrects a few problems, as I see it, with the current log rolling process:&lt;/p&gt;

&lt;p&gt;1) HLog.LogSyncer.run() now handles an IOException in the inner while loop.  Previously any IOException would cause the LogSyncer thread to exit, even if the subsequent log roll succeeded.  This would mean the region server kept running without a LogSyncer thread&lt;br/&gt;
2) Log rolls triggered by IOExceptions were being skipped in the event that there were no entries in the log.  This would prevent the log from being recovered in a timely manner.&lt;br/&gt;
3) minor - FailedLogCloseException was never actually being thrown out of HLog.cleanupCurrentWriter(), resulting in inaccurate logging on RS abort&lt;/p&gt;

&lt;p&gt;The bigger change is the addition of a configuration property &amp;#8211; hbase.regionserver.logroll.errors.tolerated &amp;#8211; that is checked against a counter of consecutive close errors to see whether or not an abort should be triggered.&lt;/p&gt;

&lt;p&gt;Prior to this patch, we could readily trigger region server aborts by rolling all the data nodes in a cluster while region servers were running.  This was equally true whether write activity was happening or not.  (In fact I think having concurrent write activity actually gave a better chance for the log to be rolled prior to all DNs in the write pipeline going down and thus the region server not aborting).&lt;/p&gt;

&lt;p&gt;With this change and hbase.regionserver.logroll.errors.tolerated=2, I can roll DNs at will without causing any loss of service.&lt;/p&gt;

&lt;p&gt;I&apos;d appreciate some scrutiny on any log rolling subtleties or interactions I may be missing here.  If there are alternate/better ways to handle this in the DFSClient layer, I&apos;d also appreciate any pointers to that.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4222&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java 8e87c83 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 887f736 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java 287f1fb &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/1590/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added a new test for rolling data nodes under a running cluster: TestLogRolling.testLogRollOnPipelineRestart().&lt;/p&gt;

&lt;p&gt;Tested patch on a running cluster with 3 slaves, rolling data nodes with and without concurrent write activity.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;
</comment>
                            <comment id="13087892" author="jiraposter@reviews.apache.org" created="Fri, 19 Aug 2011 18:56:27 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/1590/#review1555&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/#review1555&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/1590/#comment3530&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/#comment3530&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    oops&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-19 18:33:11, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/1590/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-19 18:33:11)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch corrects a few problems, as I see it, with the current log rolling process:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) HLog.LogSyncer.run() now handles an IOException in the inner while loop.  Previously any IOException would cause the LogSyncer thread to exit, even if the subsequent log roll succeeded.  This would mean the region server kept running without a LogSyncer thread&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;2) Log rolls triggered by IOExceptions were being skipped in the event that there were no entries in the log.  This would prevent the log from being recovered in a timely manner.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;3) minor - FailedLogCloseException was never actually being thrown out of HLog.cleanupCurrentWriter(), resulting in inaccurate logging on RS abort&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The bigger change is the addition of a configuration property &amp;#8211; hbase.regionserver.logroll.errors.tolerated &amp;#8211; that is checked against a counter of consecutive close errors to see whether or not an abort should be triggered.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Prior to this patch, we could readily trigger region server aborts by rolling all the data nodes in a cluster while region servers were running.  This was equally true whether write activity was happening or not.  (In fact I think having concurrent write activity actually gave a better chance for the log to be rolled prior to all DNs in the write pipeline going down and thus the region server not aborting).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With this change and hbase.regionserver.logroll.errors.tolerated=2, I can roll DNs at will without causing any loss of service.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d appreciate some scrutiny on any log rolling subtleties or interactions I may be missing here.  If there are alternate/better ways to handle this in the DFSClient layer, I&apos;d also appreciate any pointers to that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4222&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java 8e87c83 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 887f736 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java 287f1fb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/1590/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added a new test for rolling data nodes under a running cluster: TestLogRolling.testLogRollOnPipelineRestart().&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tested patch on a running cluster with 3 slaves, rolling data nodes with and without concurrent write activity.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13087894" author="yuzhihong@gmail.com" created="Fri, 19 Aug 2011 18:56:31 +0000"  >&lt;p&gt;In point 2 of description on review board:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This would prevent the log from being recovered in a timely manner.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Is the above description accurate.&lt;/p&gt;

&lt;p&gt;Nice work Gary.&lt;/p&gt;</comment>
                            <comment id="13087896" author="jiraposter@reviews.apache.org" created="Fri, 19 Aug 2011 18:58:27 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-19 18:55:23, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Should we default to two errors?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/1590/#review1555&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/#review1555&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-08-19 18:33:11, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/1590/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-19 18:33:11)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch corrects a few problems, as I see it, with the current log rolling process:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) HLog.LogSyncer.run() now handles an IOException in the inner while loop.  Previously any IOException would cause the LogSyncer thread to exit, even if the subsequent log roll succeeded.  This would mean the region server kept running without a LogSyncer thread&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;2) Log rolls triggered by IOExceptions were being skipped in the event that there were no entries in the log.  This would prevent the log from being recovered in a timely manner.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;3) minor - FailedLogCloseException was never actually being thrown out of HLog.cleanupCurrentWriter(), resulting in inaccurate logging on RS abort&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The bigger change is the addition of a configuration property &amp;#8211; hbase.regionserver.logroll.errors.tolerated &amp;#8211; that is checked against a counter of consecutive close errors to see whether or not an abort should be triggered.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Prior to this patch, we could readily trigger region server aborts by rolling all the data nodes in a cluster while region servers were running.  This was equally true whether write activity was happening or not.  (In fact I think having concurrent write activity actually gave a better chance for the log to be rolled prior to all DNs in the write pipeline going down and thus the region server not aborting).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With this change and hbase.regionserver.logroll.errors.tolerated=2, I can roll DNs at will without causing any loss of service.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d appreciate some scrutiny on any log rolling subtleties or interactions I may be missing here.  If there are alternate/better ways to handle this in the DFSClient layer, I&apos;d also appreciate any pointers to that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4222&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java 8e87c83 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 887f736 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java 287f1fb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/1590/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added a new test for rolling data nodes under a running cluster: TestLogRolling.testLogRollOnPipelineRestart().&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tested patch on a running cluster with 3 slaves, rolling data nodes with and without concurrent write activity.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13087897" author="jiraposter@reviews.apache.org" created="Fri, 19 Aug 2011 18:58:31 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/1590/#review1557&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/#review1557&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/1590/#comment3531&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/#comment3531&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    How do you manually roll a log?  I want that.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-19 18:33:11, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/1590/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-19 18:33:11)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch corrects a few problems, as I see it, with the current log rolling process:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) HLog.LogSyncer.run() now handles an IOException in the inner while loop.  Previously any IOException would cause the LogSyncer thread to exit, even if the subsequent log roll succeeded.  This would mean the region server kept running without a LogSyncer thread&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;2) Log rolls triggered by IOExceptions were being skipped in the event that there were no entries in the log.  This would prevent the log from being recovered in a timely manner.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;3) minor - FailedLogCloseException was never actually being thrown out of HLog.cleanupCurrentWriter(), resulting in inaccurate logging on RS abort&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The bigger change is the addition of a configuration property &amp;#8211; hbase.regionserver.logroll.errors.tolerated &amp;#8211; that is checked against a counter of consecutive close errors to see whether or not an abort should be triggered.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Prior to this patch, we could readily trigger region server aborts by rolling all the data nodes in a cluster while region servers were running.  This was equally true whether write activity was happening or not.  (In fact I think having concurrent write activity actually gave a better chance for the log to be rolled prior to all DNs in the write pipeline going down and thus the region server not aborting).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With this change and hbase.regionserver.logroll.errors.tolerated=2, I can roll DNs at will without causing any loss of service.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d appreciate some scrutiny on any log rolling subtleties or interactions I may be missing here.  If there are alternate/better ways to handle this in the DFSClient layer, I&apos;d also appreciate any pointers to that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4222&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java 8e87c83 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 887f736 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java 287f1fb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/1590/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added a new test for rolling data nodes under a running cluster: TestLogRolling.testLogRollOnPipelineRestart().&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tested patch on a running cluster with 3 slaves, rolling data nodes with and without concurrent write activity.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13087899" author="yuzhihong@gmail.com" created="Fri, 19 Aug 2011 18:59:33 +0000"  >&lt;p&gt;@Gary:&lt;br/&gt;
Can you rebase the patch now that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4095&quot; title=&quot;Hlog may not be rolled in a long time if checkLowReplication&amp;#39;s request of LogRoll is blocked&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4095&quot;&gt;&lt;del&gt;HBASE-4095&lt;/del&gt;&lt;/a&gt; got integrated ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Hunk #7 succeeded at 1055 (offset 21 lines).
1 out of 7 hunks FAILED -- saving rejects to file src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java.rej
patching file src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java
Hunk #1 FAILED at 19.
Hunk #2 FAILED at 67.
Hunk #3 succeeded at 122 (offset -2 lines).
Hunk #4 succeeded at 378 with fuzz 2 (offset 42 lines).
2 out of 4 hunks FAILED -- saving rejects to file src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java.rej
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13087978" author="jiraposter@reviews.apache.org" created="Fri, 19 Aug 2011 21:17:27 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/1590/#review1567&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/#review1567&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/1590/#comment3542&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/#comment3542&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good to keep the default here the current behavior, but we should maybe set this to 2 or 3 in hbase-default.xml ?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-19 18:33:11, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/1590/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-19 18:33:11)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch corrects a few problems, as I see it, with the current log rolling process:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) HLog.LogSyncer.run() now handles an IOException in the inner while loop.  Previously any IOException would cause the LogSyncer thread to exit, even if the subsequent log roll succeeded.  This would mean the region server kept running without a LogSyncer thread&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;2) Log rolls triggered by IOExceptions were being skipped in the event that there were no entries in the log.  This would prevent the log from being recovered in a timely manner.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;3) minor - FailedLogCloseException was never actually being thrown out of HLog.cleanupCurrentWriter(), resulting in inaccurate logging on RS abort&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The bigger change is the addition of a configuration property &amp;#8211; hbase.regionserver.logroll.errors.tolerated &amp;#8211; that is checked against a counter of consecutive close errors to see whether or not an abort should be triggered.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Prior to this patch, we could readily trigger region server aborts by rolling all the data nodes in a cluster while region servers were running.  This was equally true whether write activity was happening or not.  (In fact I think having concurrent write activity actually gave a better chance for the log to be rolled prior to all DNs in the write pipeline going down and thus the region server not aborting).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With this change and hbase.regionserver.logroll.errors.tolerated=2, I can roll DNs at will without causing any loss of service.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d appreciate some scrutiny on any log rolling subtleties or interactions I may be missing here.  If there are alternate/better ways to handle this in the DFSClient layer, I&apos;d also appreciate any pointers to that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4222&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java 8e87c83 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 887f736 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java 287f1fb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/1590/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added a new test for rolling data nodes under a running cluster: TestLogRolling.testLogRollOnPipelineRestart().&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tested patch on a running cluster with 3 slaves, rolling data nodes with and without concurrent write activity.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13088091" author="jiraposter@reviews.apache.org" created="Sat, 20 Aug 2011 00:37:27 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-08-19 18:58:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Will post an update with a default setting of 2 in hbase-default.xml and some fixes to TestLogRolling &amp;#8211; my additional test is not playing nicely with the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4095&quot; title=&quot;Hlog may not be rolled in a long time if checkLowReplication&amp;#39;s request of LogRoll is blocked&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4095&quot;&gt;&lt;del&gt;HBASE-4095&lt;/del&gt;&lt;/a&gt; changes there at the moment.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2011-08-19 18:58:21, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java, line 87&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/1590/diff/1/?file=33750#file33750line87&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/diff/1/?file=33750#file33750line87&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     How do you manually roll a log?  I want that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Probably wouldn&apos;t be too hard to add a RPC call and shell command to manually trigger a roll.  That would be nice to have, but I&apos;ll leave it for a separate issue.&lt;/p&gt;

&lt;p&gt;(Log message just means triggered by HLog.requestLogRoll(), meaning from an IOException, or current log size, or replica count below threshold).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/1590/#review1557&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/#review1557&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-08-19 18:33:11, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/1590/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-19 18:33:11)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch corrects a few problems, as I see it, with the current log rolling process:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) HLog.LogSyncer.run() now handles an IOException in the inner while loop.  Previously any IOException would cause the LogSyncer thread to exit, even if the subsequent log roll succeeded.  This would mean the region server kept running without a LogSyncer thread&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;2) Log rolls triggered by IOExceptions were being skipped in the event that there were no entries in the log.  This would prevent the log from being recovered in a timely manner.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;3) minor - FailedLogCloseException was never actually being thrown out of HLog.cleanupCurrentWriter(), resulting in inaccurate logging on RS abort&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The bigger change is the addition of a configuration property &amp;#8211; hbase.regionserver.logroll.errors.tolerated &amp;#8211; that is checked against a counter of consecutive close errors to see whether or not an abort should be triggered.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Prior to this patch, we could readily trigger region server aborts by rolling all the data nodes in a cluster while region servers were running.  This was equally true whether write activity was happening or not.  (In fact I think having concurrent write activity actually gave a better chance for the log to be rolled prior to all DNs in the write pipeline going down and thus the region server not aborting).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With this change and hbase.regionserver.logroll.errors.tolerated=2, I can roll DNs at will without causing any loss of service.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d appreciate some scrutiny on any log rolling subtleties or interactions I may be missing here.  If there are alternate/better ways to handle this in the DFSClient layer, I&apos;d also appreciate any pointers to that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4222&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java 8e87c83 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 887f736 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java 287f1fb &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/1590/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added a new test for rolling data nodes under a running cluster: TestLogRolling.testLogRollOnPipelineRestart().&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tested patch on a running cluster with 3 slaves, rolling data nodes with and without concurrent write activity.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13088142" author="jiraposter@reviews.apache.org" created="Sat, 20 Aug 2011 05:41:27 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/1590/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-08-20 05:39:30.112513)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Rebased patch against latest trunk, including &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4095&quot; title=&quot;Hlog may not be rolled in a long time if checkLowReplication&amp;#39;s request of LogRoll is blocked&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4095&quot;&gt;&lt;del&gt;HBASE-4095&lt;/del&gt;&lt;/a&gt; changes.  Changes are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;shift TestLogRolling mini-cluster startup from pre-class to pre-test.  Following the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4095&quot; title=&quot;Hlog may not be rolled in a long time if checkLowReplication&amp;#39;s request of LogRoll is blocked&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4095&quot;&gt;&lt;del&gt;HBASE-4095&lt;/del&gt;&lt;/a&gt; changes, the new test method, testLogRollOnPipelineRestart(), was hanging from the previous tests&apos; cluster manipulations.&lt;/li&gt;
	&lt;li&gt;add a default setting of hbase.regionserver.logroll.errors.tolerated=2 to hbase-default.xml&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch corrects a few problems, as I see it, with the current log rolling process:&lt;/p&gt;

&lt;p&gt;1) HLog.LogSyncer.run() now handles an IOException in the inner while loop.  Previously any IOException would cause the LogSyncer thread to exit, even if the subsequent log roll succeeded.  This would mean the region server kept running without a LogSyncer thread&lt;br/&gt;
2) Log rolls triggered by IOExceptions were being skipped in the event that there were no entries in the log.  This would prevent the log from being recovered in a timely manner.&lt;br/&gt;
3) minor - FailedLogCloseException was never actually being thrown out of HLog.cleanupCurrentWriter(), resulting in inaccurate logging on RS abort&lt;/p&gt;

&lt;p&gt;The bigger change is the addition of a configuration property &amp;#8211; hbase.regionserver.logroll.errors.tolerated &amp;#8211; that is checked against a counter of consecutive close errors to see whether or not an abort should be triggered.&lt;/p&gt;

&lt;p&gt;Prior to this patch, we could readily trigger region server aborts by rolling all the data nodes in a cluster while region servers were running.  This was equally true whether write activity was happening or not.  (In fact I think having concurrent write activity actually gave a better chance for the log to be rolled prior to all DNs in the write pipeline going down and thus the region server not aborting).&lt;/p&gt;

&lt;p&gt;With this change and hbase.regionserver.logroll.errors.tolerated=2, I can roll DNs at will without causing any loss of service.&lt;/p&gt;

&lt;p&gt;I&apos;d appreciate some scrutiny on any log rolling subtleties or interactions I may be missing here.  If there are alternate/better ways to handle this in the DFSClient layer, I&apos;d also appreciate any pointers to that.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4222&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java 8e87c83 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java c301d1b &lt;br/&gt;
  src/main/resources/hbase-default.xml 66548ca &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java 5063896 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/1590/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Added a new test for rolling data nodes under a running cluster: TestLogRolling.testLogRollOnPipelineRestart().&lt;/p&gt;

&lt;p&gt;Tested patch on a running cluster with 3 slaves, rolling data nodes with and without concurrent write activity.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;
</comment>
                            <comment id="13088219" author="jiraposter@reviews.apache.org" created="Sat, 20 Aug 2011 16:39:26 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/1590/#review1586&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/#review1586&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;TestHLog and TestLogRolling passed.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-08-20 05:39:30, Gary Helmling wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/1590/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-08-20 05:39:30)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch corrects a few problems, as I see it, with the current log rolling process:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;1) HLog.LogSyncer.run() now handles an IOException in the inner while loop.  Previously any IOException would cause the LogSyncer thread to exit, even if the subsequent log roll succeeded.  This would mean the region server kept running without a LogSyncer thread&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;2) Log rolls triggered by IOExceptions were being skipped in the event that there were no entries in the log.  This would prevent the log from being recovered in a timely manner.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;3) minor - FailedLogCloseException was never actually being thrown out of HLog.cleanupCurrentWriter(), resulting in inaccurate logging on RS abort&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The bigger change is the addition of a configuration property &amp;#8211; hbase.regionserver.logroll.errors.tolerated &amp;#8211; that is checked against a counter of consecutive close errors to see whether or not an abort should be triggered.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Prior to this patch, we could readily trigger region server aborts by rolling all the data nodes in a cluster while region servers were running.  This was equally true whether write activity was happening or not.  (In fact I think having concurrent write activity actually gave a better chance for the log to be rolled prior to all DNs in the write pipeline going down and thus the region server not aborting).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;With this change and hbase.regionserver.logroll.errors.tolerated=2, I can roll DNs at will without causing any loss of service.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;d appreciate some scrutiny on any log rolling subtleties or interactions I may be missing here.  If there are alternate/better ways to handle this in the DFSClient layer, I&apos;d also appreciate any pointers to that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4222&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java 8e87c83 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java c301d1b &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/main/resources/hbase-default.xml 66548ca &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java 5063896 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/1590/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/1590/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Added a new test for rolling data nodes under a running cluster: TestLogRolling.testLogRollOnPipelineRestart().&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Tested patch on a running cluster with 3 slaves, rolling data nodes with and without concurrent write activity.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13090616" author="ghelmling" created="Wed, 24 Aug 2011 23:43:02 +0000"  >&lt;p&gt;Committed patch to trunk following review.&lt;/p&gt;</comment>
                            <comment id="13090624" author="ghelmling" created="Wed, 24 Aug 2011 23:56:30 +0000"  >&lt;p&gt;Adding to 0.90 branch as well&lt;/p&gt;</comment>
                            <comment id="13090674" author="hudson" created="Thu, 25 Aug 2011 01:34:28 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2142 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2142/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2142/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;  Allow HLog to retry log roll on transient write pipeline errors&lt;/p&gt;

&lt;p&gt;garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/LogRoller.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13090736" author="ghelmling" created="Thu, 25 Aug 2011 03:27:10 +0000"  >&lt;p&gt;Patch committed to 0.90 branch&lt;/p&gt;</comment>
                            <comment id="13090749" author="ghelmling" created="Thu, 25 Aug 2011 03:45:34 +0000"  >&lt;p&gt;Committed to 0.90 branch and trunk.&lt;/p&gt;</comment>
                            <comment id="13090816" author="hudson" created="Thu, 25 Aug 2011 06:43:14 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2144 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2144/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2144/&lt;/a&gt;)&lt;br/&gt;
    Amend &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;  Fix release version, now for 0.90.5, and fix for intermittent test failure&lt;/p&gt;

&lt;p&gt;garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13092198" author="hudson" created="Sat, 27 Aug 2011 05:29:35 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2150 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2150/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2150/&lt;/a&gt;)&lt;br/&gt;
    Amend &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4222&quot; title=&quot;Make HLog more resilient to write pipeline failures&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4222&quot;&gt;&lt;del&gt;HBASE-4222&lt;/del&gt;&lt;/a&gt;  Fix intermittent test failure due to region balancing&lt;/p&gt;

&lt;p&gt;garyh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15016195" author="lars_francke" created="Fri, 20 Nov 2015 11:54:19 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12520521">HBASE-4274</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12491586" name="HBASE-4222_0.90.patch" size="15559" author="ghelmling" created="Thu, 25 Aug 2011 03:27:10 +0000"/>
                            <attachment id="12491569" name="HBASE-4222_trunk_final.patch" size="17101" author="ghelmling" created="Wed, 24 Aug 2011 23:43:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 18 Aug 2011 16:17:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33430</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hpy7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101466</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>