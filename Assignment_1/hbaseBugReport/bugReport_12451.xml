<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:33:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12451/HBASE-12451.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12451] IncreasingToUpperBoundRegionSplitPolicy may cause unnecessary region splits in rolling update of cluster</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12451</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently IncreasingToUpperBoundRegionSplitPolicy is the default region split policy. In this policy, split size is the number of regions that are on this server that all are of the same table, cubed, times 2x the region flush size.&lt;/p&gt;

&lt;p&gt;But when unloading regions of a regionserver in a cluster using region_mover.rb, the number of regions that are on this server that all are of the same table will decrease, and the split size will decrease too, which may cause the left region split in the regionsever. Region Splits also happens when loading regions of a regionserver in a cluster. &lt;/p&gt;

&lt;p&gt;A improvment may set a minimum split size in IncreasingToUpperBoundRegionSplitPolicy&lt;br/&gt;
Suggestions are welcomed. Thanks~&lt;/p&gt;</description>
                <environment></environment>
        <key id="12754128">HBASE-12451</key>
            <summary>IncreasingToUpperBoundRegionSplitPolicy may cause unnecessary region splits in rolling update of cluster</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="liushaohui">Liu Shaohui</assignee>
                                    <reporter username="liushaohui">Liu Shaohui</reporter>
                        <labels>
                    </labels>
                <created>Mon, 10 Nov 2014 12:25:44 +0000</created>
                <updated>Tue, 4 Oct 2016 23:28:31 +0000</updated>
                                                            <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="14204741" author="apache9" created="Mon, 10 Nov 2014 13:08:10 +0000"  >&lt;p&gt;Setting minimum split size will delay the first split operation which is good for load balancing(a new table will have only one region if not pre-split)&lt;/p&gt;

&lt;p&gt;What about reduce the boost factor(current is region_count^3) and use the total region count of this table(I do not know where is it stored but I think we can get it somewhere such as master or zookeeper) instead of the region count of this table on this server?&lt;/p&gt;</comment>
                            <comment id="14205828" author="tianq" created="Tue, 11 Nov 2014 02:15:58 +0000"  >&lt;p&gt;Minimum split size is good and simple enough for me..user could have a tradeoff between automatic tuning and customization based on knowledge of their workload...(many times we do not want to expose too many configure parameters, but it looks really useful in some cases&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;

&lt;p&gt;based on total region count looks hard to control, e.g. if user pre-split many regions, e.g. in &lt;br/&gt;
&lt;a href=&quot;http://search-hadoop.com/m/DHED4aS08G1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/DHED4aS08G1&lt;/a&gt; with 240 regions, the size will be quite big unless &quot;hbase.increasing.policy.initial.size&quot; is also configured..&lt;/p&gt;
</comment>
                            <comment id="14205866" author="apache9" created="Tue, 11 Nov 2014 03:03:25 +0000"  >&lt;p&gt;I think there is a upper limit also, so the size will not grow too large...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getSizeToCheck(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; tableRegionsCount) {
    &lt;span class=&quot;code-comment&quot;&gt;// safety check &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 100 to avoid numerical overflow in extreme cases
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; tableRegionsCount == 0 || tableRegionsCount &amp;gt; 100 ? getDesiredMaxFileSize():
      &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(getDesiredMaxFileSize(),
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.initialSize * tableRegionsCount * tableRegionsCount * tableRegionsCount);
  }

  &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.desiredMaxFileSize = conf.getLong(HConstants.HREGION_MAX_FILESIZE,
        HConstants.DEFAULT_MAX_FILE_SIZE);

  /** Conf key &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the max file size after which we split the region */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; HREGION_MAX_FILESIZE =
      &lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.hregion.max.filesize&quot;&lt;/span&gt;;

  /** Default maximum file size */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; DEFAULT_MAX_FILE_SIZE = 10 * 1024 * 1024 * 1024L;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We have two reason to split, first is for load balancing, this introduces a increasing region split size, and second is for compaction, this introduces a constant region split size(which is the upper limit).&lt;/p&gt;

&lt;p&gt;I think the first thing need to be done is define &quot;unnecessary region splits&quot;.&lt;br/&gt;
If we already have 240 regions of a table, and there is only one region of this table on a regionserver, should the region have a small split size?&lt;/p&gt;</comment>
                            <comment id="14206040" author="tianq" created="Tue, 11 Nov 2014 06:45:49 +0000"  >&lt;p&gt;Thanks Duo, forgot that. &lt;br/&gt;
with default values, it looks the region split size will use upper limit after 3 regions.&lt;br/&gt;
according to &lt;a href=&quot;http://hbase.apache.org/book/ops.capacity.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book/ops.capacity.html&lt;/a&gt;, region count and region size are most important factors, but there is no clear answer for region count?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If we already have 240 regions of a table, and there is only one region of this table on a regionserver, should the region have a small split size?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;the regions should be evenly spread across RS(8 RS in that case)&lt;/p&gt;



</comment>
                            <comment id="14206072" author="apache9" created="Tue, 11 Nov 2014 07:29:53 +0000"  >&lt;blockquote&gt;
&lt;p&gt;the regions should be evenly spread across RS(8 RS in that case)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But there are exceptions, see the description of this issue...&lt;/p&gt;

&lt;p&gt;And I made a mistake above. Just use total region count of table is not enough, we also need the total regionserver count as a parameter. 240 regions is not necessary for 8 regionservers, but is OK for 80 regionservers, right?&lt;/p&gt;</comment>
                            <comment id="14206343" author="liushaohui" created="Tue, 11 Nov 2014 11:50:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tianq&quot; class=&quot;user-hover&quot; rel=&quot;tianq&quot;&gt;Qiang Tian&lt;/a&gt;&lt;br/&gt;
Thanks for your suggestions.&lt;br/&gt;
I think we can fix this problem by&lt;br/&gt;
1. Using the average region num of the table on regionservers instead of the number of regions that are on the server that all are of the same table in this policy&lt;br/&gt;
2. Set a a upper limit to avoid too large region in the cluster.&lt;/p&gt;
</comment>
                            <comment id="14206394" author="apache9" created="Tue, 11 Nov 2014 13:06:53 +0000"  >&lt;blockquote&gt;
&lt;p&gt;1. Using the average region num of the table on regionservers instead of the number of regions that are on the server that all are of the same table in this policy&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Make sense.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2. Set a a upper limit to avoid too large region in the cluster.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is already there. See the code I paste above. I think we just need to change the value that passed to getSizeToCheck.&lt;/p&gt;</comment>
                            <comment id="14209602" author="liushaohui" created="Thu, 13 Nov 2014 11:28:21 +0000"  >&lt;p&gt;Patch for trunk&lt;/p&gt;</comment>
                            <comment id="14209626" author="liushaohui" created="Thu, 13 Nov 2014 11:38:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tianq&quot; class=&quot;user-hover&quot; rel=&quot;tianq&quot;&gt;Qiang Tian&lt;/a&gt;&lt;br/&gt;
Please help to review at &lt;a href=&quot;https://reviews.apache.org/r/27983/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/27983/&lt;/a&gt;. Thanks.&lt;/p&gt;</comment>
                            <comment id="14209754" author="hadoopqa" created="Thu, 13 Nov 2014 13:39:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12681313/HBASE-12451-v1.diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12681313/HBASE-12451-v1.diff&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12681313&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 3792 checkstyle errors (more than the trunk&apos;s current 3787 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +  public static List&amp;lt;TableStatistics&amp;gt; toTableStatisticsList(List&amp;lt;RegionServerStatusProtos.TableStatistics&amp;gt; protos) {&lt;br/&gt;
+    // Get average count of regions that have the same common table as this.region and are on same server&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.quotas.TestQuotaAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS&lt;br/&gt;
                  org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildHole&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.quotas.TestQuotaTableUtil&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRollingRestart&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSyncUpTool&lt;br/&gt;
                  org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildBase&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestRestartCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestCloneSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestClusterId&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationSmallTests&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationChangingPeerRegionservers&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRSKilledWhenInitializing&lt;br/&gt;
                  org.apache.hadoop.hbase.quotas.TestQuotaThrottle&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin1&lt;br/&gt;
                  org.apache.hadoop.hbase.util.hbck.TestOfflineMetaRebuildOverlap&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 8 zombie test(s): 	at org.apache.hadoop.hbase.master.TestMasterNoCluster.testNotPullingDeadRegionServerFromZK(TestMasterNoCluster.java:306)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestMasterOperationsForRegionReplicas.testCreateTableWithMultipleReplicas(TestMasterOperationsForRegionReplicas.java:155)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testSplitRegionWithNoStoreFiles(TestSplitTransactionOnCluster.java:762)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testExistingZnodeBlocksSplitAndWeRollback(TestSplitTransactionOnCluster.java:336)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testRSSplitDaughtersAreOnlinedAfterShutdownHandling(TestSplitTransactionOnCluster.java:291)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testSplitHooksBeforeAndAfterPONR(TestSplitTransactionOnCluster.java:891)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testSplitAndRestartingMaster(TestSplitTransactionOnCluster.java:845)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testTableExistsIfTheSpecifiedTableRegionIsSplitParent(TestSplitTransactionOnCluster.java:626)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testRITStateForRollback(TestSplitTransactionOnCluster.java:180)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testSplitFailedCompactionAndSplit(TestSplitTransactionOnCluster.java:229)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testSplitShouldNotThrowNPEEvenARegionHasEmptySplitFiles(TestSplitTransactionOnCluster.java:474)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testMasterRestartAtRegionSplitPendingCatalogJanitor(TestSplitTransactionOnCluster.java:583)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.testSplitWithRegionReplicas(TestSplitTransactionOnCluster.java:667)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestClientOperationInterrupt.testInterrupt50Percent(TestClientOperationInterrupt.java:145)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testMoveRegion(TestAssignmentManagerOnCluster.java:309)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testReportRegionStateTransition(TestAssignmentManagerOnCluster.java:1095)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignOfflinedRegionBySSH(TestAssignmentManagerOnCluster.java:940)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignWhileClosing(TestAssignmentManagerOnCluster.java:431)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testOfflineRegion(TestAssignmentManagerOnCluster.java:274)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testSSHWaitForServerToAssignRegion(TestAssignmentManagerOnCluster.java:847)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignRacingWithSSH(TestAssignmentManagerOnCluster.java:771)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testCloseHang(TestAssignmentManagerOnCluster.java:653)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testMoveRegionOfDeletedTable(TestAssignmentManagerOnCluster.java:362)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignDisabledRegionBySSH(TestAssignmentManagerOnCluster.java:1019)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testOpenFailed(TestAssignmentManagerOnCluster.java:526)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testOpenFailedUnrecoverable(TestAssignmentManagerOnCluster.java:568)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testCloseFailed(TestAssignmentManagerOnCluster.java:480)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignRegion(TestAssignmentManagerOnCluster.java:182)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignRegionOnRestartedServer(TestAssignmentManagerOnCluster.java:225)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testMoveRegion(TestAssignmentManagerOnCluster.java:347)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testReportRegionStateTransition(TestAssignmentManagerOnCluster.java:1115)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignOfflinedRegionBySSH(TestAssignmentManagerOnCluster.java:1003)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignWhileClosing(TestAssignmentManagerOnCluster.java:467)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testOfflineRegion(TestAssignmentManagerOnCluster.java:297)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testSSHWaitForServerToAssignRegion(TestAssignmentManagerOnCluster.java:881)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignRacingWithSSH(TestAssignmentManagerOnCluster.java:831)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testCloseHang(TestAssignmentManagerOnCluster.java:685)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignDisabledRegionBySSH(TestAssignmentManagerOnCluster.java:1080)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testOpenFailed(TestAssignmentManagerOnCluster.java:554)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testOpenFailedUnrecoverable(TestAssignmentManagerOnCluster.java:603)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testCloseFailed(TestAssignmentManagerOnCluster.java:513)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignRegion(TestAssignmentManagerOnCluster.java:205)&lt;br/&gt;
	at org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.testAssignRegionOnRestartedServer(TestAssignmentManagerOnCluster.java:262)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHCM.testConnectionRideOverClusterRestart(TestHCM.java:1284)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHCM.testConnectionClose(TestHCM.java:337)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHCM.testConnectionCloseAllowsInterrupt(TestHCM.java:290)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/11662//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14212007" author="tianq" created="Fri, 14 Nov 2014 08:39:06 +0000"  >&lt;p&gt;Shaohui boss, this looks not a small change? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Even if average region count is used,  below code will use max file size in most cases - e.g. when tableRegionsCount = 4, the value is 16384M which is bigger than DEFAULT_MAX_FILE_SIZE..&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; tableRegionsCount == 0 || tableRegionsCount &amp;gt; 100 ? getDesiredMaxFileSize():
      &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(getDesiredMaxFileSize(),
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.initialSize * tableRegionsCount * tableRegionsCount * tableRegionsCount);

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Personally I like KISS - a simple configure parameter can resolve this case - if we have many complains on existing region split policy, that is another story...my 2 cents.&lt;/p&gt;</comment>
                            <comment id="14212024" author="apache9" created="Fri, 14 Nov 2014 09:02:48 +0000"  >&lt;p&gt;I think the goal of IncreasingToUpperBoundRegionSplitPolicy is splitting fast when region count is small(especially when smaller than region server count), and falling back to ConstantSizeSplitPolicy when region count is larger than regionserver count(or twice, it depends) which means we already have the ability to distribute request to every regionserver.&lt;/p&gt;

&lt;p&gt;Add a minimum split size will break the first goal, right? And actually, there is a &quot;hbase.increasing.policy.initial.size&quot; configuration in IncreasingToUpperBoundRegionSplitPolicy which specify the initial(minimum) split size. And if you do not like the curve of split size, I think we should introduce a new split policy instead?&lt;/p&gt;</comment>
                            <comment id="14212065" author="tianq" created="Fri, 14 Nov 2014 09:46:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;Add a minimum split size will break the first goal, right? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;it is configurable, we can set the default minimum size to 0, the calculation will ignore the minimum size in this case:(Pseudocode)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; splitSize = tableRegionsCount == 0 || tableRegionsCount &amp;gt; 100 ? getDesiredMaxFileSize():
      &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(getDesiredMaxFileSize(),
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.initialSize * tableRegionsCount * tableRegionsCount * tableRegionsCount);

    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; minmumSize = conf.getLong(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.hregion.split.minimum.size&quot;&lt;/span&gt;, 0);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; minmumSize &amp;gt; 0 ? &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.max(splitSize, minmumSize) : splitSize;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;&lt;p&gt;And actually, there is a &quot;hbase.increasing.policy.initial.size&quot; configuration in IncreasingToUpperBoundRegionSplitPolicy which specify the initial(minimum) split size. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;beside initial.size, tableRegionsCount is also a variable.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And if you do not like the curve of split size, I think we should introduce a new split policy instead?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I do not mean I do not like it, it looks to me the case described in the jira is not a common case? so a simple fix can resolve it quickly...if there are other issues I am open for ideas &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

</comment>
                            <comment id="14212067" author="apache9" created="Fri, 14 Nov 2014 09:50:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tianq&quot; class=&quot;user-hover&quot; rel=&quot;tianq&quot;&gt;Qiang Tian&lt;/a&gt; Can ConstantSizeSplitPolicy meet your requirements? I can not point of what is the curve of split size you want...&lt;/p&gt;</comment>
                            <comment id="14212154" author="tianq" created="Fri, 14 Nov 2014 11:30:08 +0000"  >
&lt;p&gt;Had a offline discuss with Duo, Get more details about the scenario. Now I understand the requirement.thanks&lt;/p&gt;</comment>
                            <comment id="14551245" author="jmspaggi" created="Tue, 19 May 2015 21:15:40 +0000"  >&lt;p&gt;Stalled? &lt;/p&gt;</comment>
                            <comment id="14551692" author="liushaohui" created="Wed, 20 May 2015 02:36:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmspaggi&quot; class=&quot;user-hover&quot; rel=&quot;jmspaggi&quot;&gt;Jean-Marc Spaggiari&lt;/a&gt;&lt;br/&gt;
No.&lt;br/&gt;
Could you help to review this patch?&lt;/p&gt;</comment>
                            <comment id="14551698" author="jmspaggi" created="Wed, 20 May 2015 02:44:09 +0000"  >&lt;p&gt;Not sure I will have the time &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The patch is pretty old so I guess it will not merge with the trunk? Can you rebase it so we can try it? &lt;/p&gt;</comment>
                            <comment id="14551703" author="liushaohui" created="Wed, 20 May 2015 02:48:24 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmspaggi&quot; class=&quot;user-hover&quot; rel=&quot;jmspaggi&quot;&gt;Jean-Marc Spaggiari&lt;/a&gt;&lt;br/&gt;
OK. I will rebase it in next few days.&lt;/p&gt;
</comment>
                            <comment id="14552288" author="liushaohui" created="Wed, 20 May 2015 13:08:44 +0000"  >&lt;p&gt;Rebase on master&lt;/p&gt;</comment>
                            <comment id="14552293" author="liushaohui" created="Wed, 20 May 2015 13:14:53 +0000"  >&lt;p&gt;Please help to review at &lt;a href=&quot;https://reviews.apache.org/r/34467/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/34467/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14552884" author="stack" created="Wed, 20 May 2015 19:11:01 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=liushaohui&quot; class=&quot;user-hover&quot; rel=&quot;liushaohui&quot;&gt;Liu Shaohui&lt;/a&gt; What you think of the comment by &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt; above?&lt;/p&gt;</comment>
                            <comment id="14552927" author="stack" created="Wed, 20 May 2015 19:21:30 +0000"  >&lt;p&gt;Looking at the patch, I like the way you have the master returning data to the regionserver.&lt;/p&gt;

&lt;p&gt;This changes the behavior of IncreasingToUpperBoundRegionSplitPolicy (though it broke as you note at the head of this region when rolling restart/rebalance). Have you tried this patch? Does it work? Does the avg rather than RS count do a damping such that we put off split on rolling update. On the face of it it should.&lt;/p&gt;</comment>
                            <comment id="14553738" author="liushaohui" created="Thu, 21 May 2015 06:53:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;br/&gt;
You mean this comment?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think the goal of IncreasingToUpperBoundRegionSplitPolicy is splitting fast when region count is small(especially when smaller than region server count), and falling back to ConstantSizeSplitPolicy when region count is larger than regionserver count(or twice, it depends) which means we already have the ability to distribute request to every regionserver.&lt;/p&gt;

&lt;p&gt;Add a minimum split size will break the first goal, right? And actually, there is a &quot;hbase.increasing.policy.initial.size&quot; configuration in IncreasingToUpperBoundRegionSplitPolicy which specify the initial(minimum) split size. And if you do not like the curve of split size, I think we should introduce a new split policy instead?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed.&lt;br/&gt;
So I adjust the solution by using avg rather than RS count in the policy, and not setting a minimum split size.&lt;/p&gt;
</comment>
                            <comment id="14553739" author="liushaohui" created="Thu, 21 May 2015 06:53:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;br/&gt;
You mean this comment?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think the goal of IncreasingToUpperBoundRegionSplitPolicy is splitting fast when region count is small(especially when smaller than region server count), and falling back to ConstantSizeSplitPolicy when region count is larger than regionserver count(or twice, it depends) which means we already have the ability to distribute request to every regionserver.&lt;/p&gt;

&lt;p&gt;Add a minimum split size will break the first goal, right? And actually, there is a &quot;hbase.increasing.policy.initial.size&quot; configuration in IncreasingToUpperBoundRegionSplitPolicy which specify the initial(minimum) split size. And if you do not like the curve of split size, I think we should introduce a new split policy instead?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed.&lt;br/&gt;
So I adjust the solution by using avg rather than RS count in the policy, and not setting a minimum split size.&lt;/p&gt;
</comment>
                            <comment id="14553741" author="liushaohui" created="Thu, 21 May 2015 06:53:50 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;br/&gt;
You mean this comment?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think the goal of IncreasingToUpperBoundRegionSplitPolicy is splitting fast when region count is small(especially when smaller than region server count), and falling back to ConstantSizeSplitPolicy when region count is larger than regionserver count(or twice, it depends) which means we already have the ability to distribute request to every regionserver.&lt;/p&gt;

&lt;p&gt;Add a minimum split size will break the first goal, right? And actually, there is a &quot;hbase.increasing.policy.initial.size&quot; configuration in IncreasingToUpperBoundRegionSplitPolicy which specify the initial(minimum) split size. And if you do not like the curve of split size, I think we should introduce a new split policy instead?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed.&lt;br/&gt;
So I adjust the solution by using avg rather than RS count in the policy, and not setting a minimum split size.&lt;/p&gt;
</comment>
                            <comment id="14553743" author="liushaohui" created="Thu, 21 May 2015 06:56:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;br/&gt;
Sorry for multi duplicated comments were sent for network problem.&lt;/p&gt;</comment>
                            <comment id="14553760" author="liushaohui" created="Thu, 21 May 2015 07:11:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Have you tried this patch? Does it work? Does the avg rather than RS count do a damping such that we put off split on rolling update. On the face of it it should.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Have not tested this patch in production env.&lt;/p&gt;

&lt;p&gt;Maybe a cluster-level switch of region split is a simpler solution for this problem.&lt;br/&gt;
What&apos;s your suggestion?&lt;/p&gt;</comment>
                            <comment id="14554658" author="stack" created="Thu, 21 May 2015 16:59:40 +0000"  >&lt;p&gt;Yes, I meant &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&apos;s comment.&lt;/p&gt;

&lt;p&gt;Ok.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe a cluster-level switch of region split is a simpler solution for this problem.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What would it do? It would enable your average check?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What&apos;s your suggestion?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What was there was broke as you point out. I suggest that we wait until you deploy this patch as is &amp;#8211; it is a good improvement &amp;#8211; and see how it does in production. If good, lets commit this patch.&lt;/p&gt;</comment>
                            <comment id="14555374" author="apache9" created="Fri, 22 May 2015 00:41:28 +0000"  >&lt;p&gt;Maybe we could make a new split policy?&lt;br/&gt;
Make getCountOfCommonTableRegions as an abstract protected method, the old IncreasingToUpperBoundRegionSplitPolicy just use the old implementation which only counts region locally and our new policy will fetch information from master?&lt;/p&gt;</comment>
                            <comment id="14555537" author="liushaohui" created="Fri, 22 May 2015 03:59:40 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Apache9&quot; class=&quot;user-hover&quot; rel=&quot;Apache9&quot;&gt;Duo Zhang&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Maybe we could make a new split policy?&lt;br/&gt;
Make getCountOfCommonTableRegions as an abstract protected method, the old IncreasingToUpperBoundRegionSplitPolicy just use the old implementation which only counts region locally and our new policy will fetch information from master?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;OK. I will update the patch after we deploy this patch and test it in production.&lt;/p&gt;</comment>
                            <comment id="14555540" author="liushaohui" created="Fri, 22 May 2015 04:03:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Maybe a cluster-level switch of region split is a simpler solution for this problem.&lt;br/&gt;
What would it do? It would enable your average check?&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/blockquote&gt;
&lt;p&gt;The region split switch will disable all region splits if it is off.&lt;br/&gt;
Before rolling upgrade, we can turn this switch off and after we finish the upgrade, we turn it on. Just like the balance switch.&lt;/p&gt;
</comment>
                            <comment id="15547030" author="hadoopqa" created="Tue, 4 Oct 2016 23:28:31 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; patch &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; The patch file was not named according to hbase&apos;s naming conventions. Please see &lt;a href=&quot;https://yetus.apache.org/documentation/0.3.0/precommit-patchnames&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://yetus.apache.org/documentation/0.3.0/precommit-patchnames&lt;/a&gt; for instructions. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; patch &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 5s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12451&quot; title=&quot;IncreasingToUpperBoundRegionSplitPolicy may cause unnecessary region splits in rolling update of cluster&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12451&quot;&gt;HBASE-12451&lt;/a&gt; does not apply to master. Rebase required? Wrong Branch? See &lt;a href=&quot;https://yetus.apache.org/documentation/0.3.0/precommit-patchnames&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://yetus.apache.org/documentation/0.3.0/precommit-patchnames&lt;/a&gt; for help. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12734124/HBASE-12451-v2.diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12734124/HBASE-12451-v2.diff&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12451&quot; title=&quot;IncreasingToUpperBoundRegionSplitPolicy may cause unnecessary region splits in rolling update of cluster&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12451&quot;&gt;HBASE-12451&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3822/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3822/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="13009664">HBASE-16765</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12681313" name="HBASE-12451-v1.diff" size="82437" author="liushaohui" created="Thu, 13 Nov 2014 11:28:21 +0000"/>
                            <attachment id="12734124" name="HBASE-12451-v2.diff" size="81354" author="liushaohui" created="Wed, 20 May 2015 13:08:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 10 Nov 2014 13:08:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i226gn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>