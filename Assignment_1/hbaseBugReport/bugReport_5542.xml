<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:28:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5542/HBASE-5542.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5542] Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5542</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;mutateRowsWithLocks() does atomic mutations on multiple rows.&lt;br/&gt;
processRow() does atomic read-modify-writes on a single row.&lt;/p&gt;

&lt;p&gt;It will be useful to generalize both and have a&lt;br/&gt;
processRowsWithLocks() that does atomic read-modify-writes on multiple rows.&lt;/p&gt;

&lt;p&gt;This also helps reduce some redundancy in the codes.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12545700">HBASE-5542</key>
            <summary>Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="schen">Scott Chen</assignee>
                                    <reporter username="schen">Scott Chen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Mar 2012 19:35:55 +0000</created>
                <updated>Mon, 23 Sep 2013 18:30:46 +0000</updated>
                            <resolved>Thu, 22 Mar 2012 17:56:02 +0000</resolved>
                                                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13225743" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 00:49:58 +0000"  >&lt;p&gt;sc requested code review of &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&lt;/p&gt;

&lt;p&gt;  Task ID: #&lt;/p&gt;

&lt;p&gt;  Blame Rev:&lt;/p&gt;

&lt;p&gt;  mutateRowsWithLocks() does atomic mutations on multiple rows.&lt;br/&gt;
  processRow() does atomic read-modify-writes on a single row.&lt;/p&gt;

&lt;p&gt;  It will be useful to generalize both and have a&lt;br/&gt;
  processRowsWithLocks() that does atomic read-modify-writes on multiple rows.&lt;/p&gt;

&lt;p&gt;  This also helps reduce some redundancy in the codes.&lt;/p&gt;

&lt;p&gt;TEST PLAN&lt;br/&gt;
  Revert Plan:&lt;/p&gt;

&lt;p&gt;  Tags:&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;

&lt;p&gt;MANAGE HERALD DIFFERENTIAL RULES&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/view/differential/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/view/differential/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY DID I GET THIS EMAIL?&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/transcript/4851/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/transcript/4851/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: use the X-Herald-Rules header to filter Herald messages in your client.&lt;/p&gt;</comment>
                            <comment id="13225757" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 01:05:55 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  Thanks for the fast turn-around.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java:35 Add javadoc for this class, please.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java:85 We can store m.getWriteToWAL() in a boolean before entering the loop and use the boolean variable, right ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13225759" author="zhihyu@ebaysf.com" created="Fri, 9 Mar 2012 01:07:36 +0000"  >&lt;p&gt;Please refresh patch as Lars recently integrated &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5541&quot; title=&quot;Avoid holding the rowlock during HLog sync in HRegion.mutateRowWithLocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5541&quot;&gt;&lt;del&gt;HBASE-5541&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13226252" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 17:50:54 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed Ted&apos;s review comments, Thanks.&lt;/p&gt;

&lt;p&gt;  Sorry for dumping the RowProcessor API almost immediately.&lt;br/&gt;
  After created MultiRowProcessor, I figured out that we don&apos;t need the RowProcessor interface anymore.&lt;br/&gt;
  Better to get ride of it earlier.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13226280" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 18:16:56 +0000"  >&lt;p&gt;tedyu has accepted the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  If tests pass.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowProcessor.java:31 Should we mention that the rows are inside one region ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5542-new-file&lt;/p&gt;</comment>
                            <comment id="13226324" author="lhofhansl" created="Fri, 9 Mar 2012 19:00:26 +0000"  >&lt;p&gt;Let me do a pass through it before you commit.&lt;/p&gt;</comment>
                            <comment id="13226368" author="lhofhansl" created="Fri, 9 Mar 2012 19:35:49 +0000"  >&lt;p&gt;Can we let this sit for a bit? I would like to spend some time thinking about this. doMiniBatchPut almost follows the same logic, should be able to unify that code as well. It&apos;s not needed for 0.94, so it&apos;s not time critical.&lt;/p&gt;

&lt;p&gt;Thanks for working on this Scott!&lt;/p&gt;</comment>
                            <comment id="13226379" author="stack" created="Fri, 9 Mar 2012 19:52:01 +0000"  >&lt;p&gt;I took a look.  Patch looks good.  I think this kinda work is really important to do &amp;#8211; now while its fresh in everyone&apos;s minds whats going on here &amp;#8211; if we&apos;re not to let the mess get out of hand.  Thanks Scott.&lt;/p&gt;

&lt;p&gt;Yeah Lars, this is your old stomping ground.  Could do w/ a review by you.&lt;/p&gt;</comment>
                            <comment id="13226386" author="schen" created="Fri, 9 Mar 2012 19:59:15 +0000"  >&lt;p&gt;@Ted: Thanks for the help. I will rebase this one right away.&lt;/p&gt;

&lt;p&gt;@Lars: I just see your work in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5541&quot; title=&quot;Avoid holding the rowlock during HLog sync in HRegion.mutateRowWithLocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5541&quot;&gt;&lt;del&gt;HBASE-5541&lt;/del&gt;&lt;/a&gt;. That&apos;s pretty nice.&lt;br/&gt;
I will double check with it to make sure I am also doing the right thing in this one.&lt;br/&gt;
Thanks!&lt;/p&gt;

</comment>
                            <comment id="13226387" author="schen" created="Fri, 9 Mar 2012 20:04:03 +0000"  >&lt;p&gt;@Stack: Thanks for the review! We will get this done &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13226417" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 20:28:55 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Rebase with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5541&quot; title=&quot;Avoid holding the rowlock during HLog sync in HRegion.mutateRowWithLocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5541&quot;&gt;&lt;del&gt;HBASE-5541&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13226451" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 21:00:56 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4362 Hmm... That means we&apos;re now running the coprocessor post host after the region operation closed.&lt;br/&gt;
  It almost seems that the RowProcessor should have three phases:&lt;br/&gt;
  1. A pre phase (without locks and mvcc, but with the WALEdit). The prephase could abort the operation&lt;br/&gt;
  2. the op itself&lt;br/&gt;
  3. a post operation (after locks are released, mvcc is rolled forward)&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5542-new-file&lt;/p&gt;</comment>
                            <comment id="13226474" author="schen" created="Fri, 9 Mar 2012 21:18:51 +0000"  >&lt;p&gt;@Lars: It seems to me that the major difference in doMiniBatchPut is that it gets the locks with non-block option and process the locked rows. It remembers a index of processed row and keeps continuing.&lt;/p&gt;

&lt;p&gt;How about making MultiRowProcessor having an atomic option?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; MultiRowProcessor {

  &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isAtomic();

  Collection&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt; rowsToLock();

  &lt;span class=&quot;code-comment&quot;&gt;// need to tell processor which rows to process in the non-atomic mode
&lt;/span&gt;  process(Collection&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt; rowsLocked); 

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In HRegion, we check if the processor is atomic.&lt;br/&gt;
If it is not, we get as many lock as possible and process them in a loop.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HRegion.processRowsWithLocks(MultiRowProcessor processor) {

  &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (done) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (processor.isAtomic()) {
      &lt;span class=&quot;code-comment&quot;&gt;// get all locks with blocking option
&lt;/span&gt;    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
      &lt;span class=&quot;code-comment&quot;&gt;// get as many locks with non-blocking option
&lt;/span&gt;    }
    processor.process(lockedRows);
    
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (/*we process all the rows*/) {
      done = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
    }
  }

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What do you think?&lt;/p&gt;</comment>
                            <comment id="13226518" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 21:52:56 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java:85 good point&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4362 goodcatch.&lt;/p&gt;

&lt;p&gt;  Should we add something like preProcess(), postProcess() to RowProcessor? This somehow makes the API more complicated.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5542-new-file&lt;/p&gt;</comment>
                            <comment id="13226556" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 22:40:55 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Scott: Yes, it would make the API more complicated, which is not desirable.&lt;/p&gt;

&lt;p&gt;  Hmm... I cannot see any way around it for the general case, though. There are going to be operations that need to do some stuff without the locks held in the beginning and some stuff in the end.&lt;br/&gt;
  On the other hand, if an operation has not pre/post tasks it would just not implement them (or implement no-ops)&lt;/p&gt;

&lt;p&gt;  So the overall flow of processRowsWithLocks would be something like:&lt;br/&gt;
  1. startRegionOperation&lt;br/&gt;
  2. -&amp;gt; run pre tasks (maybe these should return the rows to lock?)&lt;br/&gt;
  3. acquire locks and start mvcc transaction&lt;br/&gt;
  4. -&amp;gt; run the main operation... returns the KVs to use&lt;br/&gt;
  5. apply the KVs to memstore and WAL (or should the main op be required to apply the KVs?)&lt;br/&gt;
  6. unlock&lt;br/&gt;
  7. sync wal&lt;br/&gt;
  8. roll mvcc&lt;br/&gt;
  9. -&amp;gt; run post tasks&lt;br/&gt;
  (10. cleanup if needed)&lt;/p&gt;

&lt;p&gt;  -&amp;gt; denotes a callout to the row processor&lt;/p&gt;

&lt;p&gt;  Let&apos;s be careful that we get this right. It&apos;s also interesting to see whether we can fold doMiniBatchPut (or at least some aspects of it) into this. With the 3 phases it looks like this should possible (I&apos;m happy to look at that separately)&lt;/p&gt;

&lt;p&gt;  Thanks for bearing with us Scott! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  This is awesome stuff.&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5542-new-file&lt;/p&gt;</comment>
                            <comment id="13226753" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 04:38:56 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Lars: The approach looks solid. I will start implement it. Thanks!&lt;br/&gt;
  It&apos;s been great fun working with you!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5542-new-file&lt;/p&gt;</comment>
                            <comment id="13226754" author="lhofhansl" created="Sat, 10 Mar 2012 04:45:53 +0000"  >&lt;p&gt;@Scott: Sorry missed your earlier comment. isAtomic would work.&lt;br/&gt;
I wonder if we&apos;d get more flexibility if we leave this logic in the row processor.&lt;br/&gt;
In the case of doMiniBatchPut, the row processor could maintain batchOp as internal state and use that in all of pre/post/process.&lt;/p&gt;

&lt;p&gt;Re: your last comment. Thanks for bearing with me. As I said, this is important (and a bit tricky) to get right. Thank you very much for working on it!&lt;/p&gt;

&lt;p&gt;I hope we won&apos;t find any holes in the latest approach.&lt;/p&gt;

&lt;p&gt;Actually one more thing I was wondering: For the core operations, it makes little sense to timebound this with an extra thread. It would be nice if there was some option to enforce a timebound or leave it up to the implementer to guarantee it won&apos;t take too long.&lt;br/&gt;
In fact I would probably leave the time bounding completely to the custom code.&lt;/p&gt;</comment>
                            <comment id="13226755" author="lhofhansl" created="Sat, 10 Mar 2012 04:48:02 +0000"  >&lt;p&gt;If you like I can take a shot at refactoring doMiniBatchPut with the new approach once you&apos;re done with mutateRowsWithLocks and processRowsWithLocks.&lt;br/&gt;
Of course if you prefer to do the whole thing that&apos;s fine too &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13226788" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 08:01:50 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Fixed some typo&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13226789" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 08:08:18 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  I made several changes in this update.&lt;/p&gt;

&lt;p&gt;  1. Add the post and pre process hook as suggested by Lars&lt;br/&gt;
  2. RowProcessorProtocol and BaseRowProcessorEndpoint&lt;br/&gt;
  3. Some refactor and renaming&lt;/p&gt;

&lt;p&gt;  I add back the method RowProcessorProtocol.process(RowProcessor).&lt;br/&gt;
  I did this because I figured out the user can make their RowProcessor implementations as the inner classes of the endpoint.&lt;br/&gt;
  This way RowProcessor can be class-loaded with the endpoint.&lt;br/&gt;
  I have documented in the javadoc.&lt;/p&gt;

&lt;p&gt;  The example can be found in the unit test.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13226790" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 08:11:45 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  One more typo&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13226793" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 08:11:51 +0000"  >&lt;p&gt;sc has requested a review of the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13226875" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 15:14:56 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  MultiRowProcessor.java no longer exists.&lt;br/&gt;
  Javadoc still refers to it. This would create confusion.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java:42 This doesn&apos;t match class name.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13226932" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 19:24:56 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed Ted&apos;s review comment.&lt;br/&gt;
  Add one more unit test for testing multiple row locking.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13227362" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 08:23:36 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Lars: Sorry. I also missed your previous reply in the JIRA.&lt;br/&gt;
  The JIRA is kind of flooded by HadoopQA and Phabricator and becomes harder to find things.&lt;/p&gt;

&lt;p&gt;  For the doMiniBatchPut, I think it will be better if we can do it in another patch. It will be easier to review and actually move faster.&lt;/p&gt;

&lt;p&gt;  About the time bound, I think it makes sense to leave it to the application to decide.&lt;br/&gt;
  What do you think about this, Ted?&lt;/p&gt;


&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13227569" author="yuzhihong@gmail.com" created="Mon, 12 Mar 2012 14:30:11 +0000"  >&lt;p&gt;I think we should keep time bound whose default value can be large.&lt;/p&gt;</comment>
                            <comment id="13227665" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 16:33:37 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Scott: Yes, let&apos;s use another jira for doMiniBatchPut.&lt;br/&gt;
  For the timebound logic, at the very least there has to be an option to not do that for mutateRowsWithLocks, as spawning another thread for that would be too expensive.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13227724" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 17:52:37 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @lhofhansl: I have created a jira for you &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5565&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5565&lt;/a&gt;&lt;br/&gt;
  Thank you for volunteer on working on it.&lt;/p&gt;

&lt;p&gt;  I will make the time bound optional. Will update the patch soon.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13227728" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 18:04:34 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Ted: I will also make the time bound default value to be large.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13227802" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 19:26:34 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Make the defaut timeout infinite (no extra thread in this case)&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13227816" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 19:40:35 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java:93 Should read &apos;switch off&apos;&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java:51 If positive timeout is specified, new Thread would be spawned for both cases.&lt;br/&gt;
  Is that desirable ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13227857" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 20:28:35 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java:53 Ted: there is a return statement here. I will add a comment saying short circuit for the nagative timeout case.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java:93 goodcatch. Thanks!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13227875" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 20:42:38 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java:53 If &quot;hbase.hregion.row.processor.timeout&quot; carries positive value, new Thread would be spawned for mutateRowsWithLocks().&lt;br/&gt;
  Does this satisfy Lars&apos; comment @ 12/Mar/12 16:33 ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13227888" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 20:58:35 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed Ted&apos;s review comments, Thanks!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13227964" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 22:00:37 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  In the latest patch I can&apos;t find rowProcessorTimeout being set anywhere.&lt;/p&gt;

&lt;p&gt;  What I had in mind was this:&lt;br/&gt;
  We are now using this for &quot;internal&quot; operations (such as mutateRow) and &quot;external&quot; operations (those created by users). The internal operations should not be creating new threads. External operations either could always time bound or it could be up to the implementer.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13227988" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 22:20:37 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Lars: I agree. The internal calls should never create threads for this. I will make the change.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:485 The timeout is set here.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228013" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 22:44:37 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed comments from Lars, Thanks!&lt;br/&gt;
  Also added a unit test for the timeout case.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13228018" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 22:48:37 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  The latest unit test failed. I think it is caused by this patch. I will fix it.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228022" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 22:54:37 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  Here&apos;s the stack trace of failure. I don&apos;t think it is because of this patch.&lt;/p&gt;

&lt;p&gt;  1929eb130380/TestIncrementtestMultiRowMutationMultiThreads/testtable/991d8e4274ee2684b0b8f79e8f31f154/.logs/hlog.1331589169193&lt;br/&gt;
  2012-03-12 21:52:49,195 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;pool-1-thread-1&amp;#93;&lt;/span&gt; wal.HLog(475): getNumCurrentReplicas--&lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-826&quot; title=&quot;Allow a mechanism for an application to detect that datanode(s)  have died in the write pipeline&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-826&quot;&gt;&lt;del&gt;HDFS-826&lt;/del&gt;&lt;/a&gt; not available; hdfs_out=org.apache.hadoop.fs.FSDataOutputStream@1741361&lt;br/&gt;
  java.lang.NoSuchMethodException: org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSOutputSummer.getNumCurrentReplicas()&lt;br/&gt;
  	at java.lang.Class.getDeclaredMethod(Class.java:1937)&lt;br/&gt;
  	at org.apache.hadoop.hbase.regionserver.wal.HLog.getGetNumCurrentReplicas(HLog.java:460)&lt;br/&gt;
  	at org.apache.hadoop.hbase.regionserver.wal.HLog.&amp;lt;init&amp;gt;(HLog.java:443)&lt;br/&gt;
  	at org.apache.hadoop.hbase.regionserver.wal.HLog.&amp;lt;init&amp;gt;(HLog.java:341)&lt;br/&gt;
  	at org.apache.hadoop.hbase.regionserver.HRegion.createHRegion(HRegion.java:3596)&lt;br/&gt;
  	at org.apache.hadoop.hbase.regionserver.HRegion.createHRegion(HRegion.java:3563)&lt;br/&gt;
  	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation.initHRegion(TestAtomicOperation.java:214)&lt;br/&gt;
  	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation.initHRegion(TestAtomicOperation.java:197)&lt;br/&gt;
  	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation.testMultiRowMutationMultiThreads(TestAtomicOperation.java:341)&lt;br/&gt;
  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
  	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
  	at junit.framework.TestCase.runTest(TestCase.java:168)&lt;br/&gt;
  	at junit.framework.TestCase.runBare(TestCase.java:134)&lt;br/&gt;
  	at junit.framework.TestResult$1.protect(TestResult.java:110)&lt;br/&gt;
  	at junit.framework.TestResult.runProtected(TestResult.java:128)&lt;br/&gt;
  	at junit.framework.TestResult.run(TestResult.java:113)&lt;br/&gt;
  	at junit.framework.TestCase.run(TestCase.java:124)&lt;br/&gt;
  	at junit.framework.TestSuite.runTest(TestSuite.java:243)&lt;br/&gt;
  	at junit.framework.TestSuite.run(TestSuite.java:238)&lt;br/&gt;
  	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)&lt;br/&gt;
  	at org.junit.runners.Suite.runChild(Suite.java:128)&lt;br/&gt;
  	at org.junit.runners.Suite.runChild(Suite.java:24)&lt;br/&gt;
  	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)&lt;br/&gt;
  	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)&lt;br/&gt;
  	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)&lt;br/&gt;
  	at java.util.concurrent.FutureTask.run(FutureTask.java:138)&lt;br/&gt;
  	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)&lt;br/&gt;
  	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)&lt;br/&gt;
  	at java.lang.Thread.run(Thread.java:662)&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228030" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 22:58:38 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  See my comment here: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5399?focusedCommentId=13228009&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13228009&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5399?focusedCommentId=13228009&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13228009&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  The NoSuchMethodException wasn&apos;t the root cause for test failure which also happened in TRUNK build #2676.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228563" author="phabricator@reviews.facebook.net" created="Tue, 13 Mar 2012 18:28:35 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  I think I should use a thread pool to at lease cache the threads for the time bound case. I will make a quick change and update this.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228670" author="phabricator@reviews.facebook.net" created="Tue, 13 Mar 2012 20:30:36 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Use a cached thread pool for the rowProcessor.process() future task.&lt;br/&gt;
  Make the default timeout for coprocessor calls 10 minute.&lt;/p&gt;

&lt;p&gt;  mutateRowsWithLocks has no timeout and does not use the thread pool.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13228691" author="phabricator@reviews.facebook.net" created="Tue, 13 Mar 2012 20:52:39 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Rebase against trunk&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13228743" author="phabricator@reviews.facebook.net" created="Tue, 13 Mar 2012 21:48:37 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4417 Exception includes IOE.&lt;br/&gt;
  Should we check against IOE so that we don&apos;t wrap again ?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228933" author="phabricator@reviews.facebook.net" created="Wed, 14 Mar 2012 03:57:37 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4417 I just check the javadoc.&lt;/p&gt;

&lt;p&gt;  It seems that it throws&lt;br/&gt;
  TimeoutException, ExecutionException and InterruptedException&lt;br/&gt;
  &lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/FutureTask.html#get(long&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/FutureTask.html#get(long&lt;/a&gt;, java.util.concurrent.TimeUnit)&lt;/p&gt;

&lt;p&gt;  But I can see your point. If the exception is warped too many times, it will be hard to debug.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228943" author="phabricator@reviews.facebook.net" created="Wed, 14 Mar 2012 04:09:37 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Ted: I think there are some problem with file renaming with reviews.facebook.net.&lt;br/&gt;
  My git patch actually works fine. It applies to trunk.&lt;/p&gt;

&lt;p&gt;  If this patch doesn&apos;t apply again. I will manually upload the patch to JIRA.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228944" author="phabricator@reviews.facebook.net" created="Wed, 14 Mar 2012 04:09:41 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Log the IOE for easier debugging.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13228949" author="phabricator@reviews.facebook.net" created="Wed, 14 Mar 2012 04:13:50 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Fixed a typo. Sorry.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13228989" author="schen" created="Wed, 14 Mar 2012 05:34:13 +0000"  >&lt;p&gt;@Ted: I manually upload the patch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt;.txt.&lt;br/&gt;
I have verified the patch applies to the svn checkout.&lt;/p&gt;</comment>
                            <comment id="13228992" author="zhihyu@ebaysf.com" created="Wed, 14 Mar 2012 05:43:33 +0000"  >&lt;p&gt;Thanks for your persistence, Scott.&lt;/p&gt;</comment>
                            <comment id="13229520" author="phabricator@reviews.facebook.net" created="Wed, 14 Mar 2012 19:16:39 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Lars @Ted: Dose the time bound looks OK now? Let me know if there are things needs to be changed.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13229521" author="zhihyu@ebaysf.com" created="Wed, 14 Mar 2012 19:19:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt;.txt looks good to me.&lt;/p&gt;</comment>
                            <comment id="13229780" author="phabricator@reviews.facebook.net" created="Thu, 15 Mar 2012 00:10:39 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  Hey sorry got distracted by other stuff. I promise I&apos;ll do a full review tonight.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13229814" author="phabricator@reviews.facebook.net" created="Thu, 15 Mar 2012 01:04:36 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Lars: No problem. Take your time &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Thanks for the help!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13229902" author="phabricator@reviews.facebook.net" created="Thu, 15 Mar 2012 05:21:38 +0000"  >&lt;p&gt;lhofhansl has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  This looks pretty nice. It should definitely work for what you set out to do.&lt;br/&gt;
  See few comments inline.&lt;/p&gt;

&lt;p&gt;  What do you think if I take your patch and try to fit doMiniBatchPut into it and then update the patch accordingly (if needed) - before we commit the patch?&lt;/p&gt;


&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:238 10 minutes is a &lt;b&gt;very&lt;/b&gt; long time to run on the server.&lt;br/&gt;
  Was thinking more like a 1 minute default.&lt;/p&gt;

&lt;p&gt;  If you think 10 minutes is needed, that&apos;s fine too.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4286 We&apos;re getting into details now, but looking at doMiniBatchPut, the failure behavior on locking needs to be defined by the rowprocessors.&lt;br/&gt;
  I.e. the preprocess should lock the rows if needed.&lt;br/&gt;
  Hmm... But that would take the simplicity away.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4309 If readOnly() is true, we would not get here, right? So not need to check for readOnly()&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13229944" author="phabricator@reviews.facebook.net" created="Thu, 15 Mar 2012 07:05:36 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  Thanks for the review.&lt;/p&gt;

&lt;p&gt;  &amp;gt;What do you think if I take your patch and try to fit doMiniBatchPut into it and then update the patch accordingly (if needed) - before we commit the patch?&lt;/p&gt;

&lt;p&gt;  Sure. Please make it better before you check it in.&lt;br/&gt;
  But you will still go through your major work in the other JIRA, right?&lt;br/&gt;
  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5565&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5565&lt;/a&gt;&lt;br/&gt;
  We will do the review over there. There are too much information in this thread.&lt;/p&gt;


&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:238 Sure. Let me change it to 1 minute.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4309 Thanks. That&apos;s a good catch!&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java:4286 I see. We can still make remember some state after calling preProcess() and change the output of getRowsToLock(). I like making getRowsToLock() returns the rows rather than preProcess() because it seems more clear to me.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13229947" author="phabricator@reviews.facebook.net" created="Thu, 15 Mar 2012 07:09:37 +0000"  >&lt;p&gt;sc updated the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;br/&gt;
Reviewers: tedyu, lhofhansl, JIRA&lt;/p&gt;

&lt;p&gt;  Addressed review comments from Lars, thanks!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/p&gt;</comment>
                            <comment id="13229949" author="phabricator@reviews.facebook.net" created="Thu, 15 Mar 2012 07:13:40 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  I am also manually upload a patch on JIRA.&lt;br/&gt;
  I think reviews.facebook.net doesn&apos;t generates the correct patch.&lt;br/&gt;
  Please use this one if you need to apply patch.&lt;br/&gt;
  &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12518431/HBASE-5542.2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12518431/HBASE-5542.2.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13229967" author="hadoopqa" created="Thu, 15 Mar 2012 07:55:41 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12518431/HBASE-5542.2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12518431/HBASE-5542.2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 160 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1192//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1192//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1192//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1192//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1192//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1192//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13230255" author="zhihyu@ebaysf.com" created="Thu, 15 Mar 2012 15:52:32 +0000"  >&lt;p&gt;@Lars:&lt;br/&gt;
Are you Okay with latest patch ?&lt;/p&gt;</comment>
                            <comment id="13230259" author="lhofhansl" created="Thu, 15 Mar 2012 16:03:23 +0000"  >&lt;p&gt;Latest patch looks good. Was wondering whether we should first fold doMiniBatchPut into this, as it will likely require changing some things around.&lt;/p&gt;</comment>
                            <comment id="13230267" author="zhihyu@ebaysf.com" created="Thu, 15 Mar 2012 16:21:18 +0000"  >&lt;p&gt;That would be done in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5565&quot; title=&quot;Refactoring doMiniBatchPut()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5565&quot;&gt;&lt;del&gt;HBASE-5565&lt;/del&gt;&lt;/a&gt;, right ?&lt;/p&gt;</comment>
                            <comment id="13234478" author="phabricator@reviews.facebook.net" created="Wed, 21 Mar 2012 16:43:38 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Lars, @Ted: If &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt;.2.txt looks good to you guys, can we commit it? Then we can move on to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5565&quot; title=&quot;Refactoring doMiniBatchPut()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5565&quot;&gt;&lt;del&gt;HBASE-5565&lt;/del&gt;&lt;/a&gt;? There is no point to sit here to long. The patch might be stale later.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13234481" author="zhihyu@ebaysf.com" created="Wed, 21 Mar 2012 16:46:31 +0000"  >&lt;p&gt;I am fine with the latest patch.&lt;/p&gt;</comment>
                            <comment id="13234490" author="phabricator@reviews.facebook.net" created="Wed, 21 Mar 2012 16:53:37 +0000"  >&lt;p&gt;lhofhansl has accepted the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  Yeah, let&apos;s commit this. I won&apos;t get to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5565&quot; title=&quot;Refactoring doMiniBatchPut()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5565&quot;&gt;&lt;del&gt;HBASE-5565&lt;/del&gt;&lt;/a&gt; any time soon. Sorry for the hold up.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5542&lt;/p&gt;</comment>
                            <comment id="13234601" author="phabricator@reviews.facebook.net" created="Wed, 21 Mar 2012 17:57:37 +0000"  >&lt;p&gt;sc has commented on the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;  @Ted, @Lars: Thanks for reviewing this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I appreciate it.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BRANCH&lt;br/&gt;
  5542&lt;/p&gt;</comment>
                            <comment id="13234769" author="schen" created="Wed, 21 Mar 2012 18:12:09 +0000"  >&lt;p&gt;Rebased the patch.&lt;/p&gt;</comment>
                            <comment id="13234810" author="zhihyu@ebaysf.com" created="Wed, 21 Mar 2012 18:27:42 +0000"  >&lt;p&gt;Integrated patch v3 to TRUNK.&lt;/p&gt;

&lt;p&gt;Thanks for the patch.&lt;/p&gt;

&lt;p&gt;Thanks for the review Lars.&lt;/p&gt;</comment>
                            <comment id="13234827" author="hudson" created="Wed, 21 Mar 2012 18:37:48 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2689 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2689/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2689/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow() (Scott Chen) (Revision 1303490)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13234848" author="zhihyu@ebaysf.com" created="Wed, 21 Mar 2012 18:49:16 +0000"  >&lt;p&gt;I ran TestRowProcessorEndpoint twice based on current trunk and they passed.&lt;/p&gt;</comment>
                            <comment id="13234873" author="schen" created="Wed, 21 Mar 2012 19:05:33 +0000"  >&lt;p&gt;Sorry for the trouble. I will fix this right now.&lt;/p&gt;</comment>
                            <comment id="13234891" author="schen" created="Wed, 21 Mar 2012 19:09:54 +0000"  >&lt;p&gt;I ran the unit test many times and they passed.&lt;br/&gt;
I will keep investigating this. But I don&apos;t think it is a big issue now.&lt;/p&gt;</comment>
                            <comment id="13234915" author="zhihyu@ebaysf.com" created="Wed, 21 Mar 2012 19:30:54 +0000"  >&lt;p&gt;Patch reverted to give Scott more time to investigate.&lt;/p&gt;</comment>
                            <comment id="13234919" author="schen" created="Wed, 21 Mar 2012 19:32:35 +0000"  >&lt;p&gt;@Ted: Thanks. I will keep working on this. Sorry for the trouble.&lt;/p&gt;</comment>
                            <comment id="13234936" author="schen" created="Wed, 21 Mar 2012 19:45:00 +0000"  >&lt;p&gt;Fixed the unit test.&lt;/p&gt;</comment>
                            <comment id="13234982" author="hudson" created="Wed, 21 Mar 2012 20:23:31 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2691 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2691/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2691/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; revert due to broken trunk build (Revision 1303517)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13234999" author="hadoopqa" created="Wed, 21 Mar 2012 20:37:26 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519292/HBASE-5542.4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519292/HBASE-5542.4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1239//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1239//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1239//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1239//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1239//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1239//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13235015" author="schen" created="Wed, 21 Mar 2012 20:52:44 +0000"  >&lt;p&gt;Attach one more time to gain more confidence from hadoop QA.&lt;/p&gt;</comment>
                            <comment id="13235096" author="hadoopqa" created="Wed, 21 Mar 2012 22:11:51 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519311/HBASE-5542.4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519311/HBASE-5542.4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestFromClientSide&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1243//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1243//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1243//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1243//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1243//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1243//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13235232" author="schen" created="Thu, 22 Mar 2012 00:02:45 +0000"  >&lt;p&gt;Attach v4 for the third time to pass Hadoop QA.&lt;/p&gt;</comment>
                            <comment id="13235284" author="hadoopqa" created="Thu, 22 Mar 2012 01:36:22 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12519383/HBASE-5542.4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12519383/HBASE-5542.4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1251//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1251//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1251//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1251//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1251//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1251//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13235291" author="lhofhansl" created="Thu, 22 Mar 2012 02:08:41 +0000"  >&lt;p&gt;Looks good. Not for 0.94, so we can commit tomorrow.&lt;/p&gt;</comment>
                            <comment id="13235373" author="hudson" created="Thu, 22 Mar 2012 05:52:36 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #145 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/145/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/145/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; revert due to broken trunk build (Revision 1303517)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow() (Scott Chen) (Revision 1303490)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13235804" author="lhofhansl" created="Thu, 22 Mar 2012 17:56:02 +0000"  >&lt;p&gt;Committed to trunk.&lt;br/&gt;
Forgot new and deleted files in first commit.&lt;/p&gt;

&lt;p&gt;Scott, could you please sync trunk and double check and I fixed it all correctly with my 2nd commit?&lt;/p&gt;</comment>
                            <comment id="13235807" author="schen" created="Thu, 22 Mar 2012 17:58:05 +0000"  >&lt;p&gt;@Lars: No problem. Let me do that right away.&lt;/p&gt;</comment>
                            <comment id="13235808" author="schen" created="Thu, 22 Mar 2012 17:58:21 +0000"  >&lt;p&gt;Thanks for committing this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13235821" author="schen" created="Thu, 22 Mar 2012 18:05:53 +0000"  >&lt;p&gt;@Lars: Synced and run TestAtomicOperation and TestRowProcessorEndpoint. It works fine. Thanks!&lt;/p&gt;</comment>
                            <comment id="13235839" author="lhofhansl" created="Thu, 22 Mar 2012 18:19:28 +0000"  >&lt;p&gt;Thanks Scott (for patch and verification &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )!&lt;/p&gt;</comment>
                            <comment id="13235857" author="hudson" created="Thu, 22 Mar 2012 18:36:08 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2692 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2692/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2692/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow() (Scott Chen) part 2 (Revision 1303920)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow() (Scott Chen) (Revision 1303915)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13236364" author="hudson" created="Fri, 23 Mar 2012 05:51:02 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #146 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/146/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/146/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow() (Scott Chen) part 2 (Revision 1303920)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow() (Scott Chen) (Revision 1303915)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RowProcessorProtocol.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/BaseRowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MultiRowMutationProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RowProcessor.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java.orig&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestProcessRowEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13242699" author="hudson" created="Fri, 30 Mar 2012 20:26:47 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2699 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2699/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2699/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; Addendum - accidentally checked in .orig file (Revision 1307562)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java.orig&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13243035" author="hudson" created="Sat, 31 Mar 2012 05:54:03 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #155 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/155/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/155/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; Addendum - accidentally checked in .orig file (Revision 1307562)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/SplitLogWorker.java.orig&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13272658" author="phabricator@reviews.facebook.net" created="Thu, 10 May 2012 19:08:54 +0000"  >&lt;p&gt;sc has closed the revision &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot;.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2217&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2217&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To: tedyu, lhofhansl, JIRA, sc&lt;/p&gt;</comment>
                            <comment id="13775113" author="stack" created="Mon, 23 Sep 2013 18:30:46 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12545691">HBASE-5541</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12538906">HBASE-5229</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12545039">HBASE-5515</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12443023">HBASE-2038</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12546129">HBASE-5565</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12517656" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.1.patch" size="26769" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 00:49:59 +0000"/>
                            <attachment id="12518108" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.10.patch" size="68093" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 22:44:38 +0000"/>
                            <attachment id="12518234" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.11.patch" size="63140" author="phabricator@reviews.facebook.net" created="Tue, 13 Mar 2012 20:30:37 +0000"/>
                            <attachment id="12518241" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.12.patch" size="63140" author="phabricator@reviews.facebook.net" created="Tue, 13 Mar 2012 20:52:39 +0000"/>
                            <attachment id="12518289" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.13.patch" size="63819" author="phabricator@reviews.facebook.net" created="Wed, 14 Mar 2012 04:09:43 +0000"/>
                            <attachment id="12518290" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.14.patch" size="63825" author="phabricator@reviews.facebook.net" created="Wed, 14 Mar 2012 04:13:51 +0000"/>
                            <attachment id="12518430" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.15.patch" size="63667" author="phabricator@reviews.facebook.net" created="Thu, 15 Mar 2012 07:09:38 +0000"/>
                            <attachment id="12517751" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.2.patch" size="27160" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 17:50:55 +0000"/>
                            <attachment id="12517781" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.3.patch" size="28927" author="phabricator@reviews.facebook.net" created="Fri, 9 Mar 2012 20:28:55 +0000"/>
                            <attachment id="12517842" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.4.patch" size="59399" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 08:08:19 +0000"/>
                            <attachment id="12517841" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.5.patch" size="59215" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 08:01:53 +0000"/>
                            <attachment id="12517843" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.6.patch" size="59216" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 08:11:46 +0000"/>
                            <attachment id="12517861" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.7.patch" size="63789" author="phabricator@reviews.facebook.net" created="Sat, 10 Mar 2012 19:24:57 +0000"/>
                            <attachment id="12518068" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.8.patch" size="64632" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 19:26:35 +0000"/>
                            <attachment id="12518084" name="ASF.LICENSE.NOT.GRANTED--HBASE-5542.D2217.9.patch" size="64677" author="phabricator@reviews.facebook.net" created="Mon, 12 Mar 2012 20:58:36 +0000"/>
                            <attachment id="12518431" name="HBASE-5542.2.txt" size="69500" author="schen" created="Thu, 15 Mar 2012 07:10:30 +0000"/>
                            <attachment id="12519276" name="HBASE-5542.3.txt" size="67549" author="schen" created="Wed, 21 Mar 2012 18:12:09 +0000"/>
                            <attachment id="12519383" name="HBASE-5542.4.txt" size="67831" author="schen" created="Thu, 22 Mar 2012 00:02:45 +0000"/>
                            <attachment id="12519311" name="HBASE-5542.4.txt" size="67831" author="schen" created="Wed, 21 Mar 2012 20:52:44 +0000"/>
                            <attachment id="12519292" name="HBASE-5542.4.txt" size="67831" author="schen" created="Wed, 21 Mar 2012 19:45:00 +0000"/>
                            <attachment id="12518295" name="HBASE-5542.txt" size="69660" author="schen" created="Wed, 14 Mar 2012 05:31:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 9 Mar 2012 00:49:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>230883</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0htmn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102062</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>