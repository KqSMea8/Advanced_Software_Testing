<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:07:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3103/HBASE-3103.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3103] investigate/improve compaction performance</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3103</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I was running some tests and am seeing that major compacting about 100M of data seems to take around 40-50 seconds. &lt;/p&gt;

&lt;p&gt;My simplified test case is something like:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Created about a 100M store file (800M uncompressed).&lt;/li&gt;
	&lt;li&gt;10k keys with 1k columns each (avg. key size: 30 bytes; avg. value size: 45 bytes)&lt;/li&gt;
	&lt;li&gt;Compression and ROWCOL bloom was turned on.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The test was to major compact this single store file into a new file.&lt;/p&gt;

&lt;p&gt;Added some nanoTime() calls around these three stages:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Scanner.next operations&lt;/li&gt;
	&lt;li&gt;bloom computation logic in: StoreFile:append()&lt;/li&gt;
	&lt;li&gt;StoreFile.Writer.append()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is what I saw for these three stages:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2010-10-11 11:25:39,774 INFO org.apache.hadoop.hbase.regionserver.Store: major Compaction scanTime (ns)         4338103000
2010-10-11 11:25:39,774 INFO org.apache.hadoop.hbase.regionserver.Store: major Compaction bloom only time (ns) 14433821000
2010-10-11 11:25:39,774 INFO org.apache.hadoop.hbase.regionserver.Store: major Compaction append time (ns)     23191478000
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The HFile.getReadTime() and HFile.getWriteTime() themselves seems pretty low (under 1 second levels). These are the times for the parts that interact with the DFS (readBlock() and finishBlock() mostly).&lt;/p&gt;

&lt;p&gt;Are these numbers roughly in line with what others are seeing normally? &lt;/p&gt;

&lt;p&gt;Will double check my instrumentations, and try to get more data. Might try to run it under a profiler. But wanted to put it out there for additional input/ideas on improvement.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12477060">HBASE-3103</key>
            <summary>investigate/improve compaction performance</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="4">Incomplete</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kannanm">Kannan Muthukkaruppan</reporter>
                        <labels>
                    </labels>
                <created>Mon, 11 Oct 2010 18:59:02 +0000</created>
                <updated>Wed, 24 Dec 2014 19:35:58 +0000</updated>
                            <resolved>Wed, 24 Dec 2014 19:35:58 +0000</resolved>
                                                                    <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12919959" author="kannanm" created="Mon, 11 Oct 2010 19:31:18 +0000"  >&lt;p&gt;Karthik pointed out the HFile.getReadTime()/HFile.getWriteTime() I was using wouldn&apos;t be reliable for DFS timer as every 5 seconds those values will get reset. So, ignore the part above which says DFS times seem low.&lt;/p&gt;

&lt;p&gt;We did notice though that 1 CPU was pegged during the entire operation. 70% or so was system CPU and about 30% user CPU.&lt;/p&gt;

&lt;p&gt;Cpu13 : 29.5%us, 70.2%sy,  0.0%ni,  0.3%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st&lt;/p&gt;

&lt;p&gt;Wondering if the additional nanoTime() calls themselves are hurting. So will try taking the instrumentation out and doing profiling in sampling mode.&lt;/p&gt;</comment>
                            <comment id="12920036" author="kannanm" created="Tue, 12 Oct 2010 00:19:33 +0000"  >&lt;p&gt;Find attached profiler screenshot.&lt;/p&gt;

&lt;p&gt;Some highlights:&lt;/p&gt;

&lt;p&gt;hfile.Compression$FinishOnFlushCompressionStream.write - 31%&lt;br/&gt;
StoreScanner.next - 28%  (HFile$Reader.decompression is 11% &amp;amp; ScanQueryMatcher.match - 8%)&lt;br/&gt;
ByteBloomFilter.add  - 20%&lt;br/&gt;
hfile.HFile$Writer.finishBlock - 4%&lt;/p&gt;
</comment>
                            <comment id="12920097" author="ryanobjc" created="Tue, 12 Oct 2010 05:15:31 +0000"  >&lt;p&gt;That&apos;s very interesting... what version of hbase did you use? As part of&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2997&quot; title=&quot;Performance fixes - profiler driven&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2997&quot;&gt;&lt;del&gt;HBASE-2997&lt;/del&gt;&lt;/a&gt; I commited performance patches which seem to vastly improve&lt;br/&gt;
performance. I&apos;d like to ensure you have those before we go down the rabbit&lt;br/&gt;
hole on scan performance too much.&lt;/p&gt;</comment>
                            <comment id="12920235" author="kannanm" created="Tue, 12 Oct 2010 15:32:20 +0000"  >&lt;p&gt;We are based on the 0.89 branch. &lt;/p&gt;

&lt;p&gt;One update: I removed all the instrumentation I had added. There was also some noise earlier that I can&apos;t quite tell, but now it is not happening. The times I am  seeing now are closer to about ~17 seconds for compacting the 100M storefile. Much of the cost in the test seemed to be under compress/decompress/bloom logic. (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2997&quot; title=&quot;Performance fixes - profiler driven&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2997&quot;&gt;&lt;del&gt;HBASE-2997&lt;/del&gt;&lt;/a&gt; doesn&apos;t seem really related to these areas, so wondering if it&apos;ll matter for this case. But I will check it out). Also: with blooms turned off,  the times are about ~11 seconds.&lt;/p&gt;

&lt;p&gt;Nicolas pointed to this bmdiff/zippy link:  &lt;a href=&quot;http://feedblog.org/2008/10/12/google-bigtable-compression-zippy-and-bmdiff/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://feedblog.org/2008/10/12/google-bigtable-compression-zippy-and-bmdiff/&lt;/a&gt;. Has anyone tried this out with HBase?&lt;/p&gt;</comment>
                            <comment id="12920632" author="streamy" created="Wed, 13 Oct 2010 16:06:36 +0000"  >&lt;p&gt;Some of that stuff has been looked into.  I&apos;m not actually sure what the status of one person who had been actively working on prefix compression and bmdiff style compression for hbase.&lt;/p&gt;

&lt;p&gt;I think these things could be big wins.&lt;/p&gt;</comment>
                            <comment id="12921700" author="stack" created="Sat, 16 Oct 2010 14:45:15 +0000"  >&lt;p&gt;@Kannan &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2655&quot; title=&quot;2-pass compression support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2655&quot;&gt;&lt;del&gt;HBASE-2655&lt;/del&gt;&lt;/a&gt; is the issue where Michele patches in what was then the current state of HyperTables BMDiff+LZO.&lt;/p&gt;</comment>
                            <comment id="12921746" author="tlipcon" created="Sat, 16 Oct 2010 19:46:03 +0000"  >&lt;p&gt;Do you have a standalone class that will generate some data and then compact it? Would be useful to have that to be able to do quick turnaround on benchmarking improvements.&lt;/p&gt;</comment>
                            <comment id="12922109" author="kannanm" created="Mon, 18 Oct 2010 15:31:49 +0000"  >&lt;p&gt;Todd: The test case is not very stand-alone at the moment. I haven&apos;t had a chance to work on this last week (and may not be able to this week too), but when I get a chance, I&apos;ll work on make the test standalone.&lt;/p&gt;</comment>
                            <comment id="13019145" author="nspiegelberg" created="Wed, 13 Apr 2011 00:45:58 +0000"  >&lt;p&gt;Note:  we could look into using CityHash instead of MurmurHash to improve bloom insertion performance here: &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://google-opensource.blogspot.com/2011/04/introducing-cityhash.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://google-opensource.blogspot.com/2011/04/introducing-cityhash.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13019175" author="stack" created="Wed, 13 Apr 2011 03:40:46 +0000"  >&lt;p&gt;CityHash looks sweet N.  I like the name.  Says Strings only but I&apos;m sure that can be worked around?&lt;/p&gt;</comment>
                            <comment id="14258478" author="apurtell" created="Wed, 24 Dec 2014 19:35:58 +0000"  >&lt;p&gt;Incomplete dead issue&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12474125">HBASE-2997</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12456914" name="profiler_data.jpg" size="270666" author="kannanm" created="Tue, 12 Oct 2010 00:19:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 12 Oct 2010 05:15:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32901</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 51 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02fdz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12094</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>