<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:10:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3433/HBASE-3433.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3433] Remove the KV copy of every KV in Scan; introduced by HBASE-3232</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3433</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Here is offending code from inside in StoreScanner#next:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// kv is no longer immutable due to KeyOnlyFilter! use copy &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; safety
&lt;/span&gt;      KeyValue copyKv = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue(kv.getBuffer(), kv.getOffset(), kv.getLength());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This looks wrong given philosophy up to this has been avoidance of garbage-making copies.&lt;/p&gt;

&lt;p&gt;Maybe this has been looked into before and this is the only thing to be done but why is KeyOnlyFilter not making copies rather than mutating originals?&lt;/p&gt;

&lt;p&gt;Making this critical against 0.92.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12495035">HBASE-3433</key>
            <summary>Remove the KV copy of every KV in Scan; introduced by HBASE-3232</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Sat, 8 Jan 2011 20:00:46 +0000</created>
                <updated>Fri, 12 Oct 2012 05:34:51 +0000</updated>
                            <resolved>Fri, 11 Nov 2011 23:36:46 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                    <fixVersion>0.94.0</fixVersion>
                                    <component>Performance</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12979318" author="streamy" created="Sun, 9 Jan 2011 13:15:44 +0000"  >&lt;p&gt;This is only a shallow copy.&lt;/p&gt;</comment>
                            <comment id="12979471" author="stack" created="Mon, 10 Jan 2011 04:27:51 +0000"  >&lt;p&gt;Why have it at all.  We should rejigger stuff so that copies are made the rare time keyonlyfilter runs.&lt;/p&gt;</comment>
                            <comment id="12979473" author="ryanobjc" created="Mon, 10 Jan 2011 04:38:48 +0000"  >&lt;p&gt;I agree with stack, extra copies is also extra work done for no reason&lt;br/&gt;
99-100% of the time. could be why some claim 89 faster...&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3433?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=12979471#action_12979471&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3433?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=12979471#action_12979471&lt;/a&gt;]&lt;br/&gt;
rare time keyonlyfilter runs.&lt;br/&gt;
doesn&apos;t keyonlyfilter make copies rather than mutate &amp;#8211; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3211&quot; title=&quot;Key (Index) Only Fetches&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3211&quot;&gt;&lt;del&gt;HBASE-3211&lt;/del&gt;&lt;/a&gt;)?&lt;br/&gt;
------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
kv.getLength());&lt;br/&gt;
garbage-making copies.&lt;br/&gt;
done but why is KeyOnlyFilter not making copies rather than mutating&lt;br/&gt;
originals?&lt;/p&gt;</comment>
                            <comment id="12980293" author="nspiegelberg" created="Tue, 11 Jan 2011 19:45:24 +0000"  >&lt;p&gt;I agree with Stack that a soft copy should only be made when a keyonlyfilter runs, but I think it&apos;s a little paranoid to mark this as critical.  As Jonathan said, this is a soft copy so it&apos;s probably contributing a miniscule amount to any perf drop.  The biggest worry is that immutability is broken, not that a copy is made.  At best, this is a minor issue that should be addressed during a filtering code refactor.&lt;/p&gt;</comment>
                            <comment id="12980304" author="stack" created="Tue, 11 Jan 2011 20:06:58 +0000"  >&lt;p&gt;Yeah, maybe its not a drag on perf. but its &apos;dirty&apos; and would just like to clean up the rot before it digs in deeper (Regards immutability, unfortunately, thats going to have to go now server inserts an edit sequence number into the KV on receipt, hbase-2856)&lt;/p&gt;</comment>
                            <comment id="12980392" author="nspiegelberg" created="Tue, 11 Jan 2011 22:36:53 +0000"  >&lt;p&gt;dj_ryan: nspiegelberg: extra copy of all the queried data does make a big difference&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:04pm&amp;#93;&lt;/span&gt; dj_ryan: now im goign to have to spend an hour or two profiling to find if it is the case or not&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:04pm&amp;#93;&lt;/span&gt; nspiegelberg: an extra shallow copy?&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:04pm&amp;#93;&lt;/span&gt; nspiegelberg: I agree that an extra deep copy does&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:04pm&amp;#93;&lt;/span&gt; dj_ryan: are you sure that&apos;s a shallow copy?&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:04pm&amp;#93;&lt;/span&gt; nspiegelberg: yes&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:04pm&amp;#93;&lt;/span&gt; dj_ryan: hmm&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:04pm&amp;#93;&lt;/span&gt; dj_ryan: that might have minimal impact&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:05pm&amp;#93;&lt;/span&gt; dj_ryan: i thought it was a deep copy actually.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:05pm&amp;#93;&lt;/span&gt; dj_ryan: but you&apos;d be surprised at what can affect performance.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:05pm&amp;#93;&lt;/span&gt; nspiegelberg: that brings up my next point...&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:05pm&amp;#93;&lt;/span&gt; nspiegelberg: I want to add a softCopy() function to KeyValue &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:05pm&amp;#93;&lt;/span&gt; dj_ryan: which does what&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:05pm&amp;#93;&lt;/span&gt; dj_ryan: and why woudl we use it&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:06pm&amp;#93;&lt;/span&gt; nspiegelberg: because dj_ryan doesn&apos;t know when we do a shallow copy.  I oftentimes don&apos;t either.  it&apos;s just easier to look at the function and know for sure what it does&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:06pm&amp;#93;&lt;/span&gt; dj_ryan: hmm&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:06pm&amp;#93;&lt;/span&gt; dj_ryan: ha&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:06pm&amp;#93;&lt;/span&gt; dj_ryan: it would make sense to have a kv.copy&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:06pm&amp;#93;&lt;/span&gt; dj_ryan: rather than what the code is doing&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:06pm&amp;#93;&lt;/span&gt; dj_ryan: what with the this and that&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:07pm&amp;#93;&lt;/span&gt; nspiegelberg: but kv.copy should do a deepCopy, correct?&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:07pm&amp;#93;&lt;/span&gt; nspiegelberg: I don&apos;t mind 2 deepCopy() and softCopy() functions either&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:08pm&amp;#93;&lt;/span&gt; dj_ryan: well yes&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:08pm&amp;#93;&lt;/span&gt; dj_ryan: i guess deep/soft&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:08pm&amp;#93;&lt;/span&gt; dj_ryan: or whatever might be a better nomenclature&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;12:08pm&amp;#93;&lt;/span&gt; nspiegelberg: explicit is best.  I chose deep and soft because I&apos;ve written too much python and both words are short&lt;/p&gt;</comment>
                            <comment id="12980394" author="nspiegelberg" created="Tue, 11 Jan 2011 22:40:03 +0000"  >&lt;p&gt;minor API refactoring to add a deepCopy and a shallowCopy function to KV for clarity.  I guess you guys are the ones to fix this problem, but I really think that, beyond clarifying this section, the rest of the change for this jira is minor pri.&lt;/p&gt;</comment>
                            <comment id="12985465" author="hudson" created="Sun, 23 Jan 2011 23:44:55 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1719 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/HBase-TRUNK/1719/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/HBase-TRUNK/1719/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="13148164" author="lhofhansl" created="Fri, 11 Nov 2011 00:43:12 +0000"  >&lt;p&gt;It makes sense for some filters to transform the KVs passed to them.&lt;/p&gt;

&lt;p&gt;Maybe we should just formalize that:&lt;br/&gt;
1. add  KeyValue transform(final KeyValue)  to Filter (or better name?)&lt;br/&gt;
2. add call to it in ScanQueryMatcher.match()&lt;br/&gt;
3. add a default implementation to FilterBase that just returns the passed KV&lt;br/&gt;
4. implement that transform in KeyOnlyFilter (i.e. KeyOnlyFilter would do the shallow copy)&lt;/p&gt;</comment>
                            <comment id="13148168" author="yuzhihong@gmail.com" created="Fri, 11 Nov 2011 00:49:24 +0000"  >&lt;p&gt;+1 on Lars&apos; proposal.&lt;/p&gt;</comment>
                            <comment id="13148169" author="lhofhansl" created="Fri, 11 Nov 2011 00:49:51 +0000"  >&lt;p&gt;Hmm... Would need to call transform in StoreScanner after we called match and only if the result was INCLUDE*.&lt;/p&gt;</comment>
                            <comment id="13148171" author="lhofhansl" created="Fri, 11 Nov 2011 00:54:23 +0000"  >&lt;p&gt;and &lt;/p&gt;
{FilterList|SkipFilter|WhileMatchFilter}.transform() would need to call their the inner Filter&apos;s transform.&lt;br/&gt;
&lt;br/&gt;
So:&lt;br/&gt;
1. add KeyValue transform(final KeyValue) to Filter (or better name?)&lt;br/&gt;
2. add call to it in StoreScanner.next() if sqm.match returned INCLUDE*&lt;br/&gt;
3. add a default implementation to FilterBase that just returns the passed KV&lt;br/&gt;
4. call transform on inner filters in {FilterList|SkipFilter|WhileMatchFilter}
&lt;p&gt;.transform()&lt;br/&gt;
5. implement transform in KeyOnlyFilter (i.e. KeyOnlyFilter would do the shallow copy)&lt;/p&gt;</comment>
                            <comment id="13148189" author="lhofhansl" created="Fri, 11 Nov 2011 01:25:16 +0000"  >&lt;p&gt;Something like this.&lt;br/&gt;
(TestFilter and TestFilterList still pass)&lt;/p&gt;

&lt;p&gt;Note that this is an API change, and that it subtly changes how FilterList interacts with KeyOnlyFilter (for the better I think, but, still, it is a change)&lt;/p&gt;</comment>
                            <comment id="13148204" author="lhofhansl" created="Fri, 11 Nov 2011 01:46:44 +0000"  >&lt;p&gt;Slightly better patch. (does away with convertToKeyOnly in place KeyValue modification).&lt;/p&gt;</comment>
                            <comment id="13148246" author="yuzhihong@gmail.com" created="Fri, 11 Nov 2011 04:02:27 +0000"  >&lt;p&gt;Nice patch, Lars.&lt;/p&gt;</comment>
                            <comment id="13148263" author="lhofhansl" created="Fri, 11 Nov 2011 04:40:06 +0000"  >&lt;p&gt;Let&apos;s get a test run&lt;/p&gt;</comment>
                            <comment id="13148297" author="hadoopqa" created="Fri, 11 Nov 2011 06:26:49 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12503321/3433-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12503321/3433-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -164 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 50 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/231//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/231//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/231//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/231//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/231//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/231//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13148542" author="lhofhansl" created="Fri, 11 Nov 2011 15:49:51 +0000"  >&lt;p&gt;All tests pass. I don&apos;t think this needs any new tests.&lt;/p&gt;

&lt;p&gt;It&apos;s an incompatible change. If I get a few +1&apos;s I will check this in.&lt;/p&gt;</comment>
                            <comment id="13148553" author="yuzhihong@gmail.com" created="Fri, 11 Nov 2011 16:11:15 +0000"  >&lt;p&gt;+1 on patch v2.&lt;/p&gt;</comment>
                            <comment id="13148603" author="stack" created="Fri, 11 Nov 2011 17:43:50 +0000"  >&lt;p&gt;+1 on commit.  Some minors below that can be addressed on commit.  We can&apos;t add this to 0.92?&lt;/p&gt;

&lt;p&gt;Does the below have to be public rather than package private?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Filter getFilter() {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I like your transform addition to the Filter Interface.&lt;/p&gt;

&lt;p&gt;I think you need to say a little more in Filter#transform javadoc; you should say that the transform is what is actually returned to the client and perhaps point at keyonlyfilter as example usage.  Filters are hard.  Poor fellas trying to make sense of them need all the pointers possible.&lt;/p&gt;</comment>
                            <comment id="13148633" author="lhofhansl" created="Fri, 11 Nov 2011 18:12:29 +0000"  >&lt;p&gt;Good point about &quot;public&quot;, does not have to be. That is actually the part of the patch I like the least. SQM now &quot;leaks&quot; the filter, and StoreScanner has know about filters. I was also thinking about adding a transform() method to SQM, that would basically do the same as the added code in StoreScanner; StoreScanner would then call SQM.transform(kv). I think I&apos;ll just make this method package private.&lt;/p&gt;

&lt;p&gt;Will update the Javadoc too and post a new patch soon.&lt;/p&gt;

&lt;p&gt;Could add this to 0.92 as well. As I said, Filter and FilterBase should be considered public API, so it &lt;b&gt;is&lt;/b&gt; an API change. That said, I&apos;m fine with this in 0.92. It&apos;s a slight change as most folks would use FilterBase anyway.&lt;/p&gt;</comment>
                            <comment id="13148690" author="lhofhansl" created="Fri, 11 Nov 2011 19:39:37 +0000"  >&lt;p&gt;How&apos;s this?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /**
   * Give the filter a chance to transform the passed KeyValue.
   * If the KeyValue is changed a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; KeyValue object must be returned.
   * @see org.apache.hadoop.hbase.KeyValue#shallowCopy()
   *
   * The transformed KeyValue is what is eventually returned to the
   * client. Most filters will &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the passed KeyValue unchanged.
   * @see org.apache.hadoop.hbase.filter.KeyOnlyFilter#transform(KeyValue)
   * &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; an example of a transformation.
   *
   * @param v the KeyValue in question
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the changed KeyValue
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; KeyValue transform(KeyValue v);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13148730" author="yuzhihong@gmail.com" created="Fri, 11 Nov 2011 21:03:01 +0000"  >&lt;p&gt;Should we add final to the parameter v ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; KeyValue transform(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; KeyValue v);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13148759" author="lhofhansl" created="Fri, 11 Nov 2011 21:41:51 +0000"  >&lt;p&gt;That does not prevent the passed kv from being changed, though. Right?&lt;/p&gt;

</comment>
                            <comment id="13148764" author="yuzhihong@gmail.com" created="Fri, 11 Nov 2011 21:44:58 +0000"  >&lt;p&gt;That&apos;s right.&lt;br/&gt;
It serves as a programmatic hint.&lt;/p&gt;</comment>
                            <comment id="13148773" author="lhofhansl" created="Fri, 11 Nov 2011 22:02:57 +0000"  >&lt;p&gt;Then we should do this for all the other methods in Filter.java as well. I can do another version for that.&lt;/p&gt;</comment>
                            <comment id="13148780" author="lhofhansl" created="Fri, 11 Nov 2011 22:12:32 +0000"  >&lt;p&gt;Version with Stack&apos;s and Ted&apos;s suggestions.&lt;/p&gt;</comment>
                            <comment id="13148783" author="yuzhihong@gmail.com" created="Fri, 11 Nov 2011 22:23:41 +0000"  >&lt;p&gt;+1 on patch v3.&lt;/p&gt;</comment>
                            <comment id="13148787" author="lhofhansl" created="Fri, 11 Nov 2011 22:31:41 +0000"  >&lt;p&gt;Any thought on 0.92? I&apos;d say let&apos;s just add it there too.&lt;/p&gt;</comment>
                            <comment id="13148794" author="yuzhihong@gmail.com" created="Fri, 11 Nov 2011 22:41:38 +0000"  >&lt;p&gt;I think this can go to 0.92&lt;/p&gt;

&lt;p&gt;Some performance comparison (with / without this patch) would be helpful.&lt;/p&gt;</comment>
                            <comment id="13148796" author="stack" created="Fri, 11 Nov 2011 22:46:20 +0000"  >&lt;p&gt;+1 and +1 for 0.92.  I&apos;d be really surprised if you could make a test that showed a perf diff; i&apos;d doubt it show on any yardstick.  It does cut down objects created which will help in hard-to-directly-measure ways.&lt;/p&gt;</comment>
                            <comment id="13148797" author="lhofhansl" created="Fri, 11 Nov 2011 22:46:44 +0000"  >&lt;p&gt;I don&apos;t think the difference will be measurable, was just a shallow copy. The point of this patch was to formalize how a filter would modify the KVs, rather than doing it as a side-effect of the filtering methods.&lt;/p&gt;

&lt;p&gt;I&apos;ll write a little test client, I&apos;m willing to bet that there will no measurable improvement. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13148840" author="lhofhansl" created="Fri, 11 Nov 2011 23:36:46 +0000"  >&lt;p&gt;Committed to 0.92 and trunk.&lt;br/&gt;
Will still write a little test tool, maybe I can quantify changed in GC (although with the amount of garbage that is produced, I doubt that even that will be measurable).&lt;/p&gt;</comment>
                            <comment id="13148875" author="hadoopqa" created="Sat, 12 Nov 2011 00:06:42 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12503430/3433-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12503430/3433-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -164 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 50 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/234//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/234//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/234//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/234//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/234//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/234//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13148951" author="hudson" created="Sat, 12 Nov 2011 02:25:00 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #125 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/125/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/125/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3433&quot; title=&quot;Remove the KV copy of every KV in Scan; introduced by HBASE-3232&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3433&quot;&gt;&lt;del&gt;HBASE-3433&lt;/del&gt;&lt;/a&gt;  Remove the KV copy of every KV in Scan; introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3232&quot; title=&quot;Fix KeyOnlyFilter + Add Value Length&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3232&quot;&gt;&lt;del&gt;HBASE-3232&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/filter/Filter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/filter/FilterBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/filter/FilterList.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/filter/KeyOnlyFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/filter/SkipFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/filter/WhileMatchFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13148983" author="hudson" created="Sat, 12 Nov 2011 04:12:36 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2430 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2430/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2430/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3433&quot; title=&quot;Remove the KV copy of every KV in Scan; introduced by HBASE-3232&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3433&quot;&gt;&lt;del&gt;HBASE-3433&lt;/del&gt;&lt;/a&gt;  Remove the KV copy of every KV in Scan; introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3232&quot; title=&quot;Fix KeyOnlyFilter + Add Value Length&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3232&quot;&gt;&lt;del&gt;HBASE-3232&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/filter/Filter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/filter/FilterBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/filter/FilterList.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/filter/KeyOnlyFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/filter/SkipFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/filter/WhileMatchFilter.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12503321" name="3433-v2.txt" size="8637" author="lhofhansl" created="Fri, 11 Nov 2011 01:46:44 +0000"/>
                            <attachment id="12503430" name="3433-v3.txt" size="9521" author="lhofhansl" created="Fri, 11 Nov 2011 22:12:32 +0000"/>
                            <attachment id="12503318" name="3433.txt" size="7018" author="lhofhansl" created="Fri, 11 Nov 2011 01:25:16 +0000"/>
                            <attachment id="12468070" name="HBASE-3433-sidenote.patch" size="2249" author="nspiegelberg" created="Tue, 11 Jan 2011 22:40:03 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 9 Jan 2011 13:15:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33022</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 5 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08rkv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>49068</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>