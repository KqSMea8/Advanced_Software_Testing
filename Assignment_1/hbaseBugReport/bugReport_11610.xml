<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:24:53 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11610/HBASE-11610.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11610] Enhance remote meta updates</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11610</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently, if the meta region is on a regionserver instead of the master, meta update is synchronized on one HTable instance. We should be able to do better.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12730639">HBASE-11610</key>
            <summary>Enhance remote meta updates</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12714102">HBASE-11165</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="virag">Virag Kothari</assignee>
                                    <reporter username="jxiang">Jimmy Xiang</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Jul 2014 22:31:03 +0000</created>
                <updated>Sat, 21 Feb 2015 23:34:55 +0000</updated>
                            <resolved>Mon, 25 Aug 2014 19:04:10 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>0.98.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="14078663" author="virag" created="Wed, 30 Jul 2014 00:08:19 +0000"  >&lt;p&gt;I was working on this and saw quite a bit of improvement when I used connection.getHTable() (uses a pool internally) to get a meta table instance. Will provide an update soon.&lt;/p&gt;</comment>
                            <comment id="14096357" author="virag" created="Thu, 14 Aug 2014 00:43:18 +0000"  >&lt;p&gt;Without patch, it took  around 1hr 20 mins to assign 1M region. With patch, it takes around 12 mins. This is on 0.98&lt;/p&gt;</comment>
                            <comment id="14096505" author="jxiang" created="Thu, 14 Aug 2014 03:25:11 +0000"  >&lt;p&gt;The performance number looks great. Can we share one HConnection instead. We can create a HTable instance when needed. As long as we share the same HConnection, the performance should be ok. Probably we can use some methods in MetaTableAccessor?&lt;/p&gt;</comment>
                            <comment id="14096520" author="virag" created="Thu, 14 Aug 2014 03:45:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can we share one HConnection instead. We can create a HTable instance when needed. As long as we share the same HConnection, the performance should be ok.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is  what I did initially. I had one HConnection and was creating htable instance for each put. But with more HConnections (tried with 5,10 and 15), the write throughput on meta regionserver increased and it brought the assignment time down by around 2 mins. The no of HConnection is configurable. By default, it is set to 1 as for small no of regions that is enough. Also, using threadlocal so we create only one htable instance for each thread accessing RegionStateStore.&lt;/p&gt;</comment>
                            <comment id="14096562" author="hadoopqa" created="Thu, 14 Aug 2014 04:48:03 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12661597/HBASE-11610.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12661597/HBASE-11610.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12661597&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 3 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileGetting(TestHRegion.java:3808)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScanBase.testScan(TestTableInputFormatScanBase.java:238)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan2.testScanOPPToEmpty(TestTableInputFormatScan2.java:70)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10421//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14097183" author="jxiang" created="Thu, 14 Aug 2014 16:36:10 +0000"  >&lt;p&gt;With threadlocal, how is the HTable closed?&lt;/p&gt;

&lt;p&gt;The purpose of these HConnections is just to talk to the meta region. They share the same network connection, access the same region on the same region server. With more connections, we can achieve some parallelism at the network/RPC layer. It is another configuration, isn&apos;t it? Personally, I prefer your initial approach: share the HConnection from the server.&lt;/p&gt;</comment>
                            <comment id="14097205" author="virag" created="Thu, 14 Aug 2014 16:58:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;With threadlocal, how is the HTable closed?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good question. If we were to close it, we would need to store references to it which is expensive. So, instead if we skip the close it should be fine because the way htable is created, it wont shutdown the pool or close the connection (Both cleanupPoolOnClose and cleanupConnectionOnClose is false). So the only thing it would do is flushCommits but  put() will take care of that as autoflush is true by default.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;With more connections, we can achieve some parallelism at the network/RPC layer.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, more TCP connections are helping. I have seen the write throughput on meta region increase to around 450K/min from around 380k/min (~15%) when trying to assign 1M regions. Tweaking this configuration would help us when we to scale even further.&lt;/p&gt;

</comment>
                            <comment id="14099314" author="virag" created="Fri, 15 Aug 2014 22:52:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;Probably we can use some methods in MetaTableAccessor?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;MetaTableAccessor does have  a method getHTable(), but it uses a deprecated way of creating HTable. It should use connection.getHTable() so that a pool  is managed by HConnection itself. But I think that can be done separately in other JIRA. Thoughts &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14099321" author="jxiang" created="Fri, 15 Aug 2014 22:57:57 +0000"  >&lt;p&gt;How about getMetaHTable(final HConnection hConnection) (branch master)?&lt;/p&gt;</comment>
                            <comment id="14099323" author="virag" created="Fri, 15 Aug 2014 23:01:54 +0000"  >&lt;p&gt;That calls getHTable() &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14099670" author="jxiang" created="Sat, 16 Aug 2014 15:08:48 +0000"  >&lt;p&gt;I see. It&apos;s better to use connection.getHTable().&lt;/p&gt;</comment>
                            <comment id="14100826" author="virag" created="Mon, 18 Aug 2014 16:40:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; Any other comments before we can get this in?&lt;/p&gt;</comment>
                            <comment id="14100841" author="jxiang" created="Mon, 18 Aug 2014 16:50:58 +0000"  >&lt;p&gt;I have no more comment. I am ok with a patch that shares just one HConnection and one execution pool, closes the meta htable instance after each use. I am not sure about the current patch. Perhaps &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=larsh&quot; class=&quot;user-hover&quot; rel=&quot;larsh&quot;&gt;larsh&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; can take a look?&lt;/p&gt;</comment>
                            <comment id="14101043" author="stack" created="Mon, 18 Aug 2014 18:40:51 +0000"  >&lt;p&gt;This patch is a bit of a hack. We are doing a one-off inside RegionStateStore to put up multiple HConnection instances (for sure we are creating many distinct instances?). I&apos;d doubt anyone but you fellas will know of its existance (Needs a release not on the new config, &quot;hbase.statestore.meta.connection&quot;, and new config should probably be called &quot;hbase.regionstatestore.meta.connection&quot;). Would be nice if this connection setup was off in a separate class so should anyone else want to do this trick, they&apos;ll not duplicate your effort.  This is just a nit though.  I&apos;m also fine with adding in stuff that is custom for you fellas (custom for now) just as long as it is well doc&apos;d.&lt;/p&gt;

&lt;p&gt;When would this code trigger?&lt;/p&gt;

&lt;p&gt;+              if (hConnectionPool == null) {&lt;br/&gt;
+                hConnectionPool = new HConnection[]&lt;/p&gt;
{HConnectionManager.createConnection(server.getConfiguration())}
&lt;p&gt;;&lt;br/&gt;
+              }&lt;/p&gt;

&lt;p&gt;i.e. when would hConnectionPool be null?&lt;/p&gt;

&lt;p&gt;Should this be private? +  private ThreadLocal&amp;lt;HTableInterface&amp;gt; threadLocalHTable =&lt;/p&gt;

&lt;p&gt;It should have a comment on when this thread local gets instantiated &amp;#8211; what the current thread is at the time.&lt;/p&gt;</comment>
                            <comment id="14102008" author="nkeywal" created="Tue, 19 Aug 2014 08:18:19 +0000"  >&lt;p&gt;The perf improvement is great.&lt;br/&gt;
I&apos;m not a big fan of the ThreadLocal&amp;lt;HTableInterface&amp;gt; threadLocalHTable. It&apos;s often difficult to maintain and test.&lt;/p&gt;

&lt;p&gt;If I understand well the issue if that the put is synchronous, and all the threads are queueing?&lt;/p&gt;

&lt;p&gt;Should we use something like&lt;/p&gt;

&lt;p&gt;  HConnection#processBatchCallback(List&amp;lt;? extends Row&amp;gt; list,&lt;br/&gt;
      final TableName tableName,&lt;br/&gt;
      ExecutorService pool,&lt;br/&gt;
      Object[] results,&lt;br/&gt;
      Batch.Callback&amp;lt;R&amp;gt; callback) throws IOException, InterruptedException;&lt;/p&gt;

&lt;p&gt;instead of using HTable? HConnection is thread safe, so there is no sync needed.&lt;br/&gt;
(ok it&apos;s deprecated, but if it saves this kind of hack may be we need to review our point of view).&lt;/p&gt;</comment>
                            <comment id="14103000" author="virag" created="Tue, 19 Aug 2014 22:55:42 +0000"  >&lt;p&gt;Thanks for the review.&lt;br/&gt;
Based on general feedback here, I will remove the ThreadLocalHtable. Creating a htable for each put might produce more garbage, but guess that should be fine given that htable is lightweight. We can still have multiple HConnections to have a higher write throughput, but can get a HTable instance for a connection picked randomly.  I hope this works for you guys? &lt;br/&gt;
Will do a performance run to check the memory utilization and see if there is any performance degradation with this approach.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;m not a big fan of the ThreadLocal&amp;lt;HTableInterface&amp;gt; threadLocalHTable. It&apos;s often difficult to maintain and test.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agree its difficult to debug threadlocal issues. &lt;br/&gt;
As you said that HConnection.processBatchCallback() is deprecated, so am not very inclined to use that. Also, this method seems to be more helpful if there is a batch of Puts.&lt;/p&gt;

&lt;p&gt;Will address Stack&apos;s comments of changing the config name, separating the connection setup part in a different utility class and adding more docs/comments.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;i.e. when would hConnectionPool be null?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is only during test cases when meta remains no longer on master. This scenario is explained in the comment few lines above.&lt;/p&gt;







</comment>
                            <comment id="14103026" author="stack" created="Tue, 19 Aug 2014 23:21:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;This scenario is explained in the comment few lines above&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry. Missed that.&lt;/p&gt;</comment>
                            <comment id="14103788" author="nkeywal" created="Wed, 20 Aug 2014 11:51:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;, this method seems to be more helpful if there is a batch of Puts.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s more or less the same code that is used behind the scene when you do a single put.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I hope this works for you guys? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Strong +1 for not using the ThreadLocalHtable. Personally I would give a try to the call to HConnection#processBatch stuff. It&apos;s it&apos;s better it justifies an undeprecation imho (I&apos;m not saying this just for this jira: I think it make sense to have an interface different than HTable). But if you prefer another approach, it&apos;s fine for me, it&apos;s your patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; (provided that there is no thread local &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ) &lt;/p&gt;</comment>
                            <comment id="14104853" author="virag" created="Thu, 21 Aug 2014 00:29:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;It&apos;s more or less the same code that is used behind the scene when you do a single put.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;it&apos;s better it justifies an undeprecation imho&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agree. This case does justify the un-deprecation. &lt;br/&gt;
One issue currently with the processBatch() API is that one has to separately pass a pool. If I want to use it, I would have to duplicate the logic of HconnectionManager.getBatchPool(). I think we should have an additional processBatch API which takes care of that. Should we have a JIRA to discuss all this?&lt;/p&gt;
</comment>
                            <comment id="14105239" author="nkeywal" created="Thu, 21 Aug 2014 09:27:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think we should have an additional processBatch which takes care of that&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should we have a JIRA to discuss all this?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As you like. It&apos;s not necessary imho, we can do that here. Cleaning up all stuff around thread pools would take some time. This jira is a good input for this work.&lt;/p&gt;</comment>
                            <comment id="14106585" author="virag" created="Fri, 22 Aug 2014 07:24:23 +0000"  >&lt;p&gt;Updated patch removes ThreadLocalHTable and addresses other comments.&lt;br/&gt;
Also added a small change to avoid reflection call (in most cases) to instantiate RpcRetryingCallerFactory during creation of Htable instance.&lt;/p&gt;</comment>
                            <comment id="14106597" author="virag" created="Fri, 22 Aug 2014 07:35:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; I will create a JIRA to further the discussion around undeprecation of processBatch(). Thanks for your input &lt;/p&gt;</comment>
                            <comment id="14107840" author="virag" created="Sat, 23 Aug 2014 04:10:24 +0000"  >&lt;p&gt;v3 uses HConnection.processBatchCallback() and some improvement (~5%) over v2 which uses Htable.&lt;br/&gt;
Please review. Thanks&lt;/p&gt;</comment>
                            <comment id="14108121" author="hadoopqa" created="Sat, 23 Aug 2014 19:56:24 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12663821/HBASE-11610_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12663821/HBASE-11610_v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12663821&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestTableSnapshotScanner&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10549//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14108691" author="virag" created="Mon, 25 Aug 2014 03:03:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;, Can v3 be reviewed? As zk less assignment backport (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11546&quot; title=&quot;Backport ZK-less region assignment to 0.98&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11546&quot;&gt;&lt;del&gt;HBASE-11546&lt;/del&gt;&lt;/a&gt;) is going in 0.98.6, I would like this one to go in too. Thanks!&lt;/p&gt;</comment>
                            <comment id="14108920" author="nkeywal" created="Mon, 25 Aug 2014 09:10:55 +0000"  >&lt;p&gt;It&apos;s great that v3 is both simpler and more efficient!&lt;/p&gt;

&lt;p&gt;I like the fact that all the complexity is put in a different class.&lt;/p&gt;

&lt;p&gt;MultiHConnection should be annotated private&lt;br/&gt;
(nit)access to multiHConnection in #stop should be synchronized to be sure we see the last value.&lt;/p&gt;

&lt;p&gt;is MultiHConnection that useful? I see its size is defaulted to 1? have you compare the performances with greater values? Each Connection will come with a pool of 256 threads (there is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11590&quot; title=&quot;use a specific ThreadPoolExecutor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11590&quot;&gt;HBASE-11590&lt;/a&gt; to improve this a little), plus the one of MultiHConnection... As well, may be the TP in MultiHConnection should be configurable independently of the HConnection TP (i.e. we should have some thing like hbase.regionstatestore.meta.threads.max instead of hbase.hconnection.threads.max). But, may be the simplest is just to remove all the MultiHConnection (less code to maintain...)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;return this.batchPool = tpe;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;(nit) This would be more readable with two lines.&lt;/p&gt;

&lt;p&gt;All these comments are more or less nit stuff. I like the patch.&lt;/p&gt;</comment>
                            <comment id="14109223" author="virag" created="Mon, 25 Aug 2014 15:44:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;It&apos;s great that v3 is both simpler and more efficient!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Its ~5% faster than v2 which creates a seperate HTable for each put. Compared to the threadLocal HTable (original patch), it is ~5% slower. (this experiments are done over series of 5 runs). &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;is MultiHConnection that useful? I see its size is defaulted to 1? have you compare the performances with greater values? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;All the above experiments are done with 10 HConnections. It improves the write throughput on META server by ~15% compared to single HConnection when doing assignment for 1M regions. But most users will have significantly lower than 1M regions, so by default we only will have one HConnection.&lt;br/&gt;
I had tried with 15 connections but didn&apos;t see any increase in throughput. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Each Connection will come with a pool of 256 threads (there is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11590&quot; title=&quot;use a specific ThreadPoolExecutor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11590&quot;&gt;HBASE-11590&lt;/a&gt; to improve this a little), plus the one of MultiHConnection&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I believe that pool is only created when you do a getTable() on HConnection. As we are not going the HTable route, all threads accessing regionStateStore will use the single pool managed by MultiHConnection. We can get rid of this pool when we have a new processBatchCallBack API which maintains a pool (though that will be per connection).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;we should have some thing like hbase.regionstatestore.meta.threads.max instead of hbase.hconnection.threads.max)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;how about hbase.multihconnection.threads.max as the pool is part of MultiHconnection?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I like the patch&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;Will address comments shortly.&lt;/p&gt;




</comment>
                            <comment id="14109229" author="nkeywal" created="Mon, 25 Aug 2014 15:52:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;threadLocal HTable ), it is ~5% slower&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ah, ok. It&apos;s a little bit strange actually. But not big enough to delay the patch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;done with 10 HConnections&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see. Then let&apos;s keep it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;will use the single pool managed by MultiHConnection&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I haven&apos;t checked in the code, but it seems you&apos;re right.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;how about hbase.multihconnection.threads.max as the pool is part of MultiHconnection?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No strong opinion. As you like for me.&lt;/p&gt;

&lt;p&gt;+1 for the patch, as the remaining is pure nit.&lt;/p&gt;

</comment>
                            <comment id="14109249" author="stack" created="Mon, 25 Aug 2014 16:14:04 +0000"  >&lt;p&gt;License on MultiHC is oddly formatted. If you are making a new patch, fix it.&lt;/p&gt;

&lt;p&gt;On the new pool, for sure we are not putting up an excess of threads in client?  This has been an issue in the past.  There is just one pool going on?   You&apos;ve taken a look at a running client &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=virag&quot; class=&quot;user-hover&quot; rel=&quot;virag&quot;&gt;Virag Kothari&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Otherwise, patch lgtm&lt;/p&gt;</comment>
                            <comment id="14109296" author="virag" created="Mon, 25 Aug 2014 16:49:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;new patch, fix it&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;There is just one pool going on&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes. Only one. Just now checked from few jstacks I had from last time&lt;/p&gt;</comment>
                            <comment id="14109341" author="virag" created="Mon, 25 Aug 2014 17:24:44 +0000"  >&lt;p&gt;Attached is the patch which addresses all comments.&lt;/p&gt;

</comment>
                            <comment id="14109516" author="stack" created="Mon, 25 Aug 2014 19:04:11 +0000"  >&lt;p&gt;Committed to 2.0 branch.  It does not go into 1.0 nor 0.98 clean.  If you make a patch for these branches &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=virag&quot; class=&quot;user-hover&quot; rel=&quot;virag&quot;&gt;Virag Kothari&lt;/a&gt; I&apos;ll aply there np.&lt;/p&gt;</comment>
                            <comment id="14109519" author="hadoopqa" created="Mon, 25 Aug 2014 19:04:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12664173/HBASE-11610_v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12664173/HBASE-11610_v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12664173&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10568//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14109739" author="hudson" created="Mon, 25 Aug 2014 21:11:46 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5425 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5425/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5425/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11610&quot; title=&quot;Enhance remote meta updates&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11610&quot;&gt;&lt;del&gt;HBASE-11610&lt;/del&gt;&lt;/a&gt; Enhance remote meta updates (stack: rev dd6c21e4d5bdc4e3b733ff25c427bba4a224242b)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManagerOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStateStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/MultiHConnection.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14109956" author="virag" created="Mon, 25 Aug 2014 23:17:00 +0000"  >&lt;p&gt;Thanks for the reviews Jimmy, Nicolas and Stack.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; Patch for branch-1 attached. Please commit. Thanks!&lt;br/&gt;
The 0.98 patch is attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11546&quot; title=&quot;Backport ZK-less region assignment to 0.98&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11546&quot;&gt;&lt;del&gt;HBASE-11546&lt;/del&gt;&lt;/a&gt;. Andrew will commit that one along with the zk less backport.&lt;/p&gt;
</comment>
                            <comment id="14110111" author="stack" created="Tue, 26 Aug 2014 01:17:50 +0000"  >&lt;p&gt;Applied to branch-1.  Hope that good w/ you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14110185" author="hudson" created="Tue, 26 Aug 2014 02:24:57 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.0 #124 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/124/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/124/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11610&quot; title=&quot;Enhance remote meta updates&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11610&quot;&gt;&lt;del&gt;HBASE-11610&lt;/del&gt;&lt;/a&gt; Enhance remote meta updates (Virag Kothari) (stack: rev 59230cb1847923c98c7d08deb8b8b56830ab785a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStateStore.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManagerOnCluster.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11610&quot; title=&quot;Enhance remote meta updates&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11610&quot;&gt;&lt;del&gt;HBASE-11610&lt;/del&gt;&lt;/a&gt; Enhance remote meta updates (Virag Kothari) (stack: rev b1b038a77103d19d432f882c61cfb137fcf2c7c5)&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/MultiHConnection.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14110824" author="apurtell" created="Tue, 26 Aug 2014 15:25:01 +0000"  >&lt;p&gt;Pushed to 0.98 as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11546&quot; title=&quot;Backport ZK-less region assignment to 0.98&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11546&quot;&gt;&lt;del&gt;HBASE-11546&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14331254" author="enis" created="Sat, 21 Feb 2015 23:34:55 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12728295">HBASE-11546</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12664251" name="HBASE-11610-branch1.patch" size="15460" author="virag" created="Mon, 25 Aug 2014 23:17:23 +0000"/>
                            <attachment id="12661597" name="HBASE-11610.patch" size="8913" author="virag" created="Thu, 14 Aug 2014 00:43:18 +0000"/>
                            <attachment id="12663612" name="HBASE-11610_2.patch" size="12367" author="virag" created="Fri, 22 Aug 2014 07:24:23 +0000"/>
                            <attachment id="12663821" name="HBASE-11610_v3.patch" size="15196" author="virag" created="Sat, 23 Aug 2014 04:10:24 +0000"/>
                            <attachment id="12664173" name="HBASE-11610_v4.patch" size="15462" author="virag" created="Mon, 25 Aug 2014 17:24:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 30 Jul 2014 00:08:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>408712</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ybon:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>408711</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Adds &amp;quot;hbase.regionstatestore.meta.connection&amp;quot; configuration and new MultiHConnection class.  Is set to 1 by default.  Set it higher if you want to run with more than one connection to the meta table.  Useful if you have a very large meta table -- e.g. 1M regions -- otherwise, stick to the default.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>