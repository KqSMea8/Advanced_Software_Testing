<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:43:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13419/HBASE-13419.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13419] Thrift gateway should propagate text from exception causes.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13419</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Exceptions passed back from the thrift gateway only include the message text of the toplevel exception.  Information from the cause chain is lost.&lt;/p&gt;

&lt;p&gt;In some cases, the top-level exception text is useless but there is some very specific and useful information provided in some of the cause exceptions, so it would be very helpful to flatten all of the messages into the exception text returned to the user.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12819030">HBASE-13419</key>
            <summary>Thrift gateway should propagate text from exception causes.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mindhog">Michael Muller</assignee>
                                    <reporter username="mindhog">Michael Muller</reporter>
                        <labels>
                            <label>beginner</label>
                    </labels>
                <created>Tue, 7 Apr 2015 18:54:55 +0000</created>
                <updated>Mon, 8 Jun 2015 14:30:24 +0000</updated>
                            <resolved>Mon, 13 Apr 2015 17:32:26 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.0.1</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                    <component>Thrift</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="14483824" author="mindhog" created="Tue, 7 Apr 2015 19:06:37 +0000"  >&lt;p&gt;From 475978873c0bf0bcad5a10e371f20d8191f3f582 Mon Sep 17 00:00:00 2001&lt;br/&gt;
From: Michael Muller &amp;lt;mmuller@google.com&amp;gt;&lt;br/&gt;
Date: Tue, 7 Apr 2015 10:57:46 -0400&lt;br/&gt;
Subject: &lt;span class=&quot;error&quot;&gt;&amp;#91;PATCH&amp;#93;&lt;/span&gt; Expand the exception causes in the thrift gateway.&lt;/p&gt;

&lt;p&gt;Expand the full chain of exception causes when passing an error back up to a&lt;br/&gt;
thrift client so useful information doesn&apos;t get lost when the exception is&lt;br/&gt;
flattened.&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
 .../hadoop/hbase/thrift/ThriftServerRunner.java    | 93 +++++++++++++---------&lt;br/&gt;
 .../hadoop/hbase/thrift/TestThriftServerUnit.java  | 39 +++++++++&lt;br/&gt;
 2 files changed, 95 insertions&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/add.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, 37 deletions&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/forbidden.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
 create mode 100644 hbase-thrift/src/test/java/org/apache/hadoop/hbase/thrift/TestThriftServerUnit.java&lt;/p&gt;

&lt;p&gt;diff --git a/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java b/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java&lt;br/&gt;
index 617fab6..bf44008 100644&lt;br/&gt;
&amp;#8212; a/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java&lt;br/&gt;
+++ b/hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java&lt;br/&gt;
@@ -755,7 +755,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         getAdmin().enableTable(getTableName(tableName));
       }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -765,7 +765,7 @@ public class ThriftServerRunner implements Runnable {
         getAdmin().disableTable(getTableName(tableName));
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -775,7 +775,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         return this.connectionCache.getAdmin().isTableEnabled(getTableName(tableName));
       }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -788,7 +788,7 @@ public class ThriftServerRunner implements Runnable {
         ((HBaseAdmin) getAdmin()).compact(getBytes(tableNameOrRegionName));
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -801,7 +801,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         ((HBaseAdmin) getAdmin()).majorCompact(getBytes(tableNameOrRegionName));
       }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -816,7 +816,7 @@ public class ThriftServerRunner implements Runnable {
         return list;
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -849,7 +849,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         return Collections.emptyList();
       }
&lt;p&gt; catch (IOException e)&lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -894,7 +894,7 @@ public class ThriftServerRunner implements Runnable {
         return ThriftUtilities.cellFromHBase(result.rawCells());
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -937,7 +937,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         return ThriftUtilities.cellFromHBase(result.rawCells());
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -981,7 +981,7 @@ public class ThriftServerRunner implements Runnable {
         return ThriftUtilities.cellFromHBase(result.rawCells());
       }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1038,7 +1038,7 @@ public class ThriftServerRunner implements Runnable {
         return ThriftUtilities.rowResultFromHBase(result);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -1103,7 +1103,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         return ThriftUtilities.rowResultFromHBase(result);
       }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1135,7 +1135,7 @@ public class ThriftServerRunner implements Runnable {&lt;br/&gt;
 &lt;br/&gt;
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -1157,7 +1157,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         table.delete(delete);
       }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1178,10 +1178,10 @@ public class ThriftServerRunner implements Runnable {
         getAdmin().createTable(desc);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt; catch (IllegalArgumentException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IllegalArgument(e.getMessage());
+        throw new IllegalArgument(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1202,7 +1202,7 @@ public class ThriftServerRunner implements Runnable {
         getAdmin().deleteTable(tableName);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1260,10 +1260,10 @@ public class ThriftServerRunner implements Runnable {
           table.put(put);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       } catch (IllegalArgumentException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IllegalArgument(e.getMessage());
+        throw new IllegalArgument(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -1331,10 +1331,10 @@ public class ThriftServerRunner implements Runnable {&lt;/p&gt;

&lt;p&gt;       } catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       } catch (IllegalArgumentException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IllegalArgument(e.getMessage());
+        throw new IllegalArgument(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1360,7 +1360,7 @@ public class ThriftServerRunner implements Runnable {
             getBytes(row), family, qualifier, amount);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -1396,7 +1396,7 @@ public class ThriftServerRunner implements Runnable {&lt;br/&gt;
         }&lt;br/&gt;
       } catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
       return ThriftUtilities.rowResultFromHBase(results, resultScannerWrapper.isColumnSorted());&lt;br/&gt;
     }&lt;br/&gt;
@@ -1450,7 +1450,7 @@ public class ThriftServerRunner implements Runnable {
         return addScanner(table.getScanner(scan), tScan.sortColumns);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -1475,7 +1475,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         return addScanner(table.getScanner(scan), false);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1501,7 +1501,7 @@ public class ThriftServerRunner implements Runnable {
         return addScanner(table.getScanner(scan), false);
       }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1531,7 +1531,7 @@ public class ThriftServerRunner implements Runnable {
         return addScanner(table.getScanner(scan), false);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -1557,7 +1557,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         return addScanner(table.getScanner(scan), false);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1585,7 +1585,7 @@ public class ThriftServerRunner implements Runnable {
         return addScanner(table.getScanner(scan), false);
       }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1606,7 +1606,7 @@ public class ThriftServerRunner implements Runnable {
         return columns;
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt;     }&lt;/p&gt;

&lt;p&gt;@@ -1619,7 +1619,7 @@ public class ThriftServerRunner implements Runnable &lt;/p&gt;
{
         return ThriftUtilities.cellFromHBase(result.rawCells());
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1658,7 +1658,7 @@ public class ThriftServerRunner implements Runnable {
         return region;
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1696,7 +1696,7 @@ public class ThriftServerRunner implements Runnable {
         table.increment(inc);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1724,7 +1724,7 @@ public class ThriftServerRunner implements Runnable {
         return ThriftUtilities.cellFromHBase(result.rawCells());
       }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
@@ -1745,7 +1745,7 @@ public class ThriftServerRunner implements Runnable {
         put.setDurability(mput.writeToWAL ? Durability.SYNC_WAL : Durability.SKIP_WAL);
       } catch (IllegalArgumentException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IllegalArgument(e.getMessage());
+        throw new IllegalArgument(expandCauses(e));
       }&lt;br/&gt;
 &lt;br/&gt;
       Table table = null;&lt;br/&gt;
@@ -1756,15 +1756,34 @@ public class ThriftServerRunner implements Runnable {
           value != null ? getBytes(value) : HConstants.EMPTY_BYTE_ARRAY, put);
       } catch (IOException e) {
         LOG.warn(e.getMessage(), e);
-        throw new IOError(e.getMessage());
+        throw new IOError(expandCauses(e));
       }
&lt;p&gt; catch (IllegalArgumentException e) &lt;/p&gt;
{
         LOG.warn(e.getMessage(), e);
-        throw new IllegalArgument(e.getMessage());
+        throw new IllegalArgument(expandCauses(e));
       }
&lt;p&gt;     }&lt;br/&gt;
   }&lt;/p&gt;

&lt;p&gt;+  /**&lt;br/&gt;
+   * Join all of the messages of the &quot;cause&quot; throwables so we don&apos;t lose&lt;br/&gt;
+   * root cause information.&lt;br/&gt;
+   */&lt;br/&gt;
+  protected static String expandCauses(Throwable e) {&lt;br/&gt;
+    StringBuilder builder = new StringBuilder();&lt;br/&gt;
+    while (e != null) {&lt;br/&gt;
+      System.out.println(&quot;Considering &quot; + e);&lt;br/&gt;
+      String message = e.getMessage();&lt;br/&gt;
+      if (message != null) {&lt;br/&gt;
+        if (builder.length() &amp;gt; 0) &lt;/p&gt;
{
+          builder.append(&quot;: &quot;);
+        }
&lt;p&gt;+        builder.append(message);&lt;br/&gt;
+      }&lt;br/&gt;
+      e = e.getCause();&lt;br/&gt;
+    }&lt;/p&gt;

&lt;p&gt;+    return builder.toString();&lt;br/&gt;
+  }&lt;/p&gt;

&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Adds all the attributes into the Operation object&lt;br/&gt;
diff --git a/hbase-thrift/src/test/java/org/apache/hadoop/hbase/thrift/TestThriftServerUnit.java b/hbase-thrift/src/test/java/org/apache/hadoop/hbase/thrift/TestThriftServerUnit.java&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 0000000..29f02b2
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/hbase-thrift/src/test/java/org/apache/hadoop/hbase/thrift/TestThriftServerUnit.java&lt;br/&gt;
@@ -0,0 +1,39 @@&lt;br/&gt;
+/*&lt;br/&gt;
+ *&lt;br/&gt;
+ * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
+ * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
+ * distributed with this work for additional information&lt;br/&gt;
+ * regarding copyright ownership.  The ASF licenses this file&lt;br/&gt;
+ * to you under the Apache License, Version 2.0 (the&lt;br/&gt;
+ * &quot;License&quot;); you may not use this file except in compliance&lt;br/&gt;
+ * with the License.  You may obtain a copy of the License at&lt;br/&gt;
+ *&lt;br/&gt;
+ *     &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+ *&lt;br/&gt;
+ * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+ * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+ * See the License for the specific language governing permissions and&lt;br/&gt;
+ * limitations under the License.&lt;br/&gt;
+ */&lt;br/&gt;
+&lt;br/&gt;
+package org.apache.hadoop.hbase.thrift;&lt;br/&gt;
+&lt;br/&gt;
+import org.apache.hadoop.hbase.testclassification.ClientTests;&lt;br/&gt;
+import org.apache.hadoop.hbase.testclassification.SmallTests;&lt;br/&gt;
+import org.junit.Test;&lt;br/&gt;
+import org.junit.experimental.categories.Category;&lt;br/&gt;
+import static org.junit.Assert.assertEquals;&lt;br/&gt;
+&lt;br/&gt;
+@Category(
{SmallTests.class}
&lt;p&gt;)&lt;br/&gt;
+public class TestThriftServerUnit &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+  @Test+  public void testErrorMessageExpansion() {
+    Throwable a = new Throwable(&quot;Inner&quot;);
+    Throwable b = new Throwable(a);
+    Throwable c = new Throwable(&quot;Outer&quot;, b);
+
+    assertEquals(&quot;Outer: java.lang.Throwable: Inner: Inner&quot;, ThriftServerRunner.expandCauses(c));
+  }+}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;/p&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;&lt;br/&gt;
2.2.0.rc0.207.ga3a616c&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14483864" author="mindhog" created="Tue, 7 Apr 2015 19:23:58 +0000"  >&lt;p&gt;Exception cause message serialization.&lt;/p&gt;</comment>
                            <comment id="14483866" author="mindhog" created="Tue, 7 Apr 2015 19:25:02 +0000"  >&lt;p&gt;(please see the attachment and ignore the very verbose patch in the first comment &lt;span class=&quot;error&quot;&gt;&amp;#91;sorry about that!&amp;#93;&lt;/span&gt;)&lt;/p&gt;</comment>
                            <comment id="14484167" author="hadoopqa" created="Tue, 7 Apr 2015 21:58:10 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12723702/ExpandExceptionCauses.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12723702/ExpandExceptionCauses.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit d5e81523f719d54e44d24cf6ef8112355aa6281a.&lt;br/&gt;
  ATTACHMENT ID: 12723702&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13601//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13601//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13601//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13601//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13601//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13601//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13601//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13601//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14485315" author="yuzhihong@gmail.com" created="Wed, 8 Apr 2015 14:42:25 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1773	    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (e != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
1774	      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Considering &quot;&lt;/span&gt; + e);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please remove the println() call above.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ ls hbase-thrift/src/test/java/org/apache/hadoop/hbase/thrift/
TestCallQueue.java		TestThriftHttpServer.java	TestThriftServer.java		TestThriftServerCmdLine.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is it possible to put the new test in one of the existing test classes above ?&lt;/p&gt;</comment>
                            <comment id="14486059" author="mindhog" created="Wed, 8 Apr 2015 21:15:18 +0000"  >&lt;p&gt;Removed the unnecessary println() and also an unnecessary import.&lt;/p&gt;

&lt;p&gt;It&apos;s possible.  I avoided TestThriftServer (the obvious location) because that&apos;s a large test that takes a while to run.  The only file there that&apos;s not a large test is TestCallQueue, which tests functionality unrelated to this change.&lt;/p&gt;

&lt;p&gt;But I&apos;m happy to put the test anywhere you think best.  Where would you like it? &lt;/p&gt;</comment>
                            <comment id="14486072" author="mindhog" created="Wed, 8 Apr 2015 21:18:54 +0000"  >&lt;p&gt;I should also point out that the large tests eventually timeout for me while trying to start a mini-cluster:&lt;/p&gt;

&lt;p&gt;```&lt;br/&gt;
org.apache.hadoop.hbase.thrift.TestThriftServerCmdLine  Time elapsed: 220.435 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!&lt;br/&gt;
java.io.IOException: Shutting down&lt;br/&gt;
        at org.apache.hadoop.hbase.util.JVMClusterUtil.startup(JVMClusterUtil.java:225)&lt;br/&gt;
        at org.apache.hadoop.hbase.LocalHBaseCluster.startup(LocalHBaseCluster.java:446)&lt;br/&gt;
        at org.apache.hadoop.hbase.MiniHBaseCluster.init(MiniHBaseCluster.java:225)&lt;br/&gt;
        at org.apache.hadoop.hbase.MiniHBaseCluster.&amp;lt;init&amp;gt;(MiniHBaseCluster.java:94)&lt;br/&gt;
        at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniHBaseCluster(HBaseTestingUtility.java:1016)&lt;br/&gt;
        at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster(HBaseTestingUtility.java:976)&lt;br/&gt;
        at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster(HBaseTestingUtility.java:850)&lt;br/&gt;
        at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster(HBaseTestingUtility.java:844)&lt;br/&gt;
        at org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster(HBaseTestingUtility.java:788)&lt;br/&gt;
        at org.apache.hadoop.hbase.thrift.TestThriftServerCmdLine.setUpBeforeClass(TestThriftServerCmdLine.java:121)&lt;br/&gt;
```&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14486307" author="yuzhihong@gmail.com" created="Wed, 8 Apr 2015 23:20:29 +0000"  >&lt;p&gt;From &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6354/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6354/console&lt;/a&gt; :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Running org.apache.hadoop.hbase.thrift.TestThriftServerCmdLine
Tests run: 32, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 58.419 sec - in org.apache.hadoop.hbase.thrift.TestThriftServerCmdLine
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For now, you can keep the new test in new test class.&lt;/p&gt;</comment>
                            <comment id="14486430" author="srikanth235" created="Thu, 9 Apr 2015 00:40:45 +0000"  >&lt;p&gt;Nice addition. Just a minor concern. Don&apos;t you think it is better to use a new line for each cause in the chain to make things more readable?&lt;/p&gt;</comment>
                            <comment id="14488193" author="mindhog" created="Thu, 9 Apr 2015 20:19:46 +0000"  >&lt;p&gt;I can see a case for it and against it. I think it depends a lot on how users will generally display their exception text.  If it&apos;s printed to the console, it&apos;s probably better to use newlines.  If it&apos;s written to a log-file, maybe not.&lt;/p&gt;

&lt;p&gt;Would you prefer that I switched it to newlines?&lt;/p&gt;</comment>
                            <comment id="14489767" author="srikanth235" created="Fri, 10 Apr 2015 15:20:01 +0000"  >&lt;p&gt;I guess we can assume that we use log files most of the time. Current patch looks good to me too. Just curious, why do you think it is not preferable to use new line separators in log files.&lt;/p&gt;
</comment>
                            <comment id="14490259" author="mindhog" created="Fri, 10 Apr 2015 19:54:28 +0000"  >&lt;p&gt;Most log formats I&apos;ve dealt with are pretty dumb.  Generally the expectation is one entry per line and when processed by naive tools this can cause problems, like the subsequent lines not being associated with the entry.  At minimum, running something like a &quot;grep&quot; against a log with multi-line entries won&apos;t display the entire entry.&lt;/p&gt;

&lt;p&gt;I don&apos;t spend a lot of time working on java, though, and this may not be an issue for java loggers.&lt;/p&gt;</comment>
                            <comment id="14490295" author="srikanth235" created="Fri, 10 Apr 2015 20:19:32 +0000"  >&lt;p&gt;Ok. Did some digging into the exception wrapping. Found this &lt;a href=&quot;http://stackoverflow.com/questions/14606293/java-logging-exceptions-how-to-log-as-much-information-as-possible&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;link&lt;/a&gt; useful. To sum things up, I&apos;d say let&apos;s use Throwables.getStackTraceAsString provided by guava library and get rid of unit test.&lt;/p&gt;</comment>
                            <comment id="14490326" author="yuzhihong@gmail.com" created="Fri, 10 Apr 2015 20:42:45 +0000"  >&lt;p&gt;Interesting - com.google.common.base.Throwables is used by TestFilter.java&lt;/p&gt;

&lt;p&gt;+1 on this idea.&lt;/p&gt;</comment>
                            <comment id="14492469" author="mindhog" created="Mon, 13 Apr 2015 14:48:18 +0000"  >&lt;p&gt;Works for me.  Please take a look at (patch 4)&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12724946/ExpandExceptionCauses4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12724946/ExpandExceptionCauses4.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="14492475" author="yuzhihong@gmail.com" created="Mon, 13 Apr 2015 14:52:55 +0000"  >&lt;p&gt;lgtm&lt;/p&gt;</comment>
                            <comment id="14492645" author="srikanth235" created="Mon, 13 Apr 2015 16:51:54 +0000"  >&lt;p&gt;Thanks!&lt;br/&gt;
+1 lgtm.&lt;/p&gt;</comment>
                            <comment id="14492691" author="hadoopqa" created="Mon, 13 Apr 2015 17:24:42 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724946/ExpandExceptionCauses4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724946/ExpandExceptionCauses4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e75c6201c69e57416525135a397a971ad4d1b902.&lt;br/&gt;
  ATTACHMENT ID: 12724946&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13680//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13680//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13680//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13680//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13680//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13680//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13680//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13680//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14492704" author="yuzhihong@gmail.com" created="Mon, 13 Apr 2015 17:32:26 +0000"  >&lt;p&gt;Thanks for the patch, Mike. &lt;/p&gt;

&lt;p&gt;Thanks for the review. &lt;/p&gt;</comment>
                            <comment id="14492708" author="hudson" created="Mon, 13 Apr 2015 17:35:22 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #389 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/389/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/389/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13419&quot; title=&quot;Thrift gateway should propagate text from exception causes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13419&quot;&gt;&lt;del&gt;HBASE-13419&lt;/del&gt;&lt;/a&gt; Thrift gateway should propagate text from exception causes (Michael Muller) (tedyu: rev 98a74813152f1f4f96983b29e9b07ea926425863)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14492864" author="hudson" created="Mon, 13 Apr 2015 19:01:10 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #860 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/860/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/860/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13419&quot; title=&quot;Thrift gateway should propagate text from exception causes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13419&quot;&gt;&lt;del&gt;HBASE-13419&lt;/del&gt;&lt;/a&gt; Thrift gateway should propagate text from exception causes (Michael Muller) (tedyu: rev cc0946ef2e2f841a9ed434780f038f3cec4b9a8e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14492930" author="hudson" created="Mon, 13 Apr 2015 19:31:23 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6372 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6372/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6372/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13419&quot; title=&quot;Thrift gateway should propagate text from exception causes.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13419&quot;&gt;&lt;del&gt;HBASE-13419&lt;/del&gt;&lt;/a&gt; Thrift gateway should propagate text from exception causes (Michael Muller) (tedyu: rev 679e0e8d2efed297e5b44d17c69952372080b328)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-thrift/src/main/java/org/apache/hadoop/hbase/thrift/ThriftServerRunner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14517727" author="enis" created="Tue, 28 Apr 2015 19:18:25 +0000"  >&lt;p&gt;Closing this issue after 1.0.1 release.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12723702" name="ExpandExceptionCauses.patch" size="14538" author="mindhog" created="Tue, 7 Apr 2015 19:23:58 +0000"/>
                            <attachment id="12724022" name="ExpandExceptionCauses3.patch" size="16650" author="mindhog" created="Wed, 8 Apr 2015 21:10:06 +0000"/>
                            <attachment id="12724946" name="ExpandExceptionCauses4.patch" size="12917" author="mindhog" created="Mon, 13 Apr 2015 14:46:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Apr 2015 21:58:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_12310250" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10430"><![CDATA[Patch]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 33 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2cxcn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Compose thrift exception text from the text of the entire cause chain of the underlying exception.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>