<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:09:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3348/HBASE-3348.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3348] Allow Observers to completely override base function</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3348</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently an observer can act as a filter or translator but cannot stop a subsequent call down to the base method for get, put, delete, etc. This means an observer cannot completely override the base function. To deal with this we can:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Change the preXXX methods to return the same type as the postXXX methods, the same return type of the base method.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Extend &lt;tt&gt;Coprocessor.Environment&lt;/tt&gt; with methods that get/set a &quot;should continue&quot; flag.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The framework should check the &quot;should continue&quot; flag before calling the base method. If not, just return what was returned by the preXXX method. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12493127">HBASE-3348</key>
            <summary>Allow Observers to completely override base function</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12441373">HBASE-2000</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="apurtell">Andrew Purtell</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Mon, 13 Dec 2010 22:58:25 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:38 +0000</updated>
                            <resolved>Wed, 15 Dec 2010 10:13:16 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12971314" author="apurtell" created="Tue, 14 Dec 2010 17:07:24 +0000"  >&lt;p&gt;I had a patch ready but it is failing some tests, digging in.&lt;/p&gt;</comment>
                            <comment id="12971405" author="apurtell" created="Tue, 14 Dec 2010 20:45:51 +0000"  >&lt;p&gt;Patch contains API changes and fixes some logic bugs I found with coprocessor integration in HRegion. Not quite ready yet, will put up a new patch on RB then.&lt;/p&gt;</comment>
                            <comment id="12971531" author="hbasereviewboard" created="Wed, 15 Dec 2010 02:17:01 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1295/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase, Jonathan Gray and Mingjie Lai.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Currently an observer can act as a filter or translator but cannot stop a subsequent call down to the base method for get, put, delete, etc. This patch allows observers to 1) keep any subsequently chained observer from executing, or 2) prevent default behavior from executing. This latter option allows a preXXX hook to completely reimplement something.&lt;/p&gt;

&lt;p&gt;I also found and fixed some logic bugs in coprocessor framework integration in HRegion.&lt;/p&gt;

&lt;p&gt;I will squelch the added extraneous whitespace upon commit.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3348&quot; title=&quot;Allow Observers to completely override base function&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3348&quot;&gt;&lt;del&gt;HBASE-3348&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-3348&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-3348&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java 134ed2f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java 654b179 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java 10dfff4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java c57ca0c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java cf9cad0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 8248f5f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java 345790f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java 9ef3562 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1295/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;All coprocessor unit tests pass. No failures of other unit tests observed that might be related to these changes.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Andrew&lt;/p&gt;

</comment>
                            <comment id="12971533" author="hbasereviewboard" created="Wed, 15 Dec 2010 02:39:01 +0000"  >&lt;p&gt;Message from: &quot;Ryan Rawson&quot; &amp;lt;ryanobjc@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1295/#review2063&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#review2063&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6478&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    presumably a co-processor could modify the Get object to implement policy?  Another consideration is replacing the Get query with an alternate query, for example we have InternalGet subclasses for additional functionality, I&apos;m just winging this though.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6479&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6479&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    unless you need CAS semantics, you can just use volatile here.  We are over-using the Atomic* stuff sometimes.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ryan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12971534" author="hbasereviewboard" created="Wed, 15 Dec 2010 02:39:02 +0000"  >&lt;p&gt;Message from: &quot;Ryan Rawson&quot; &amp;lt;ryanobjc@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1295/#review2064&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#review2064&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ryan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12971547" author="hbasereviewboard" created="Wed, 15 Dec 2010 04:50:03 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1295/#review2065&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#review2065&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Looks great.  Thanks Andy!&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6480&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6480&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We had discussed these returning the return type but we&apos;ll pass in an empty result instead?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6481&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6481&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    so here we have to because it&apos;s a primitive.  so is there a reason not to do this elsewhere on the pre methods?&lt;/p&gt;

&lt;p&gt;    Or, this is for chaining, that&apos;s why... got it&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6482&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6482&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    there shouldn&apos;t be @return javadoc now, right?&lt;/p&gt;

&lt;p&gt;    I think it would be noting in the javadoc that you can modify the result that is passed in though.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6483&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6483&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    if i don&apos;t do bypass/complete, and i play with this Result, what is the impact?  do we just drop this if the flags don&apos;t get set?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6484&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6484&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    looks like we drop the result.  makes sense.  not sure if we should add something to some doc somewhere but it&apos;s clear to me now.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12971602" author="hbasereviewboard" created="Wed, 15 Dec 2010 09:58:03 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1295/#review2066&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#review2066&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6485&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6485&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    No need to return something. We are assuming the &apos;result&apos; object is sufficiently modifiable by its methods. An empty result is passed in to be populated. &lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6486&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6486&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We assume the Get is fully modifiable via its methods. Replacing the query with something else is not a problem: The coprocessor can do just about anything from the preXXX hooks, populate the Result object with data, then tell the framework to return without invoking the base function.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6487&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6487&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Ok&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6488&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6488&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes, if you play with the result but don&apos;t call e.bypass() then there is no impact. To change the result of an increment you need to use postIncrement.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1295/#comment6489&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1295/#comment6489&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I&apos;ll add a note to the javadoc.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12971604" author="apurtell" created="Wed, 15 Dec 2010 10:13:16 +0000"  >&lt;p&gt;Committed the updated patch. Thanks for the reviews Ryan and Jon. Reopen if more needed here.&lt;/p&gt;</comment>
                            <comment id="12974503" author="hudson" created="Thu, 23 Dec 2010 04:31:45 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1697 (See &lt;a href=&quot;https://hudson.apache.org/hudson/job/HBase-TRUNK/1697/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hudson.apache.org/hudson/job/HBase-TRUNK/1697/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="15017577" author="lars_francke" created="Fri, 20 Nov 2015 12:43:38 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12466303" name="HBASE-3348.patch" size="85771" author="apurtell" created="Wed, 15 Dec 2010 10:10:50 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Dec 2010 02:17:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32999</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hlvb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100805</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>