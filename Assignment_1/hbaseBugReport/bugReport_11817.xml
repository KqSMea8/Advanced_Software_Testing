<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:26:54 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11817/HBASE-11817.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11817] HTable.batch() loses operations when region is splited</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11817</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Using HTable.batch() often loses increment operation when region split ran.&lt;/p&gt;

&lt;p&gt;Test code snpipet is below; &lt;br/&gt;
Running this 2 code blocks concurrently, different values were often recoreded although all value should be same 0xffff.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// --- code 1 ---
&lt;/span&gt;HTable table = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTable(CONF);
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] rowKey = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[1];
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=0;i&amp;lt;0xffff;i++){
 ArrayList&amp;lt;Increment&amp;gt; operations = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Increment&amp;gt;();
 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; c1 = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)&apos;A&apos;; c1&amp;lt;=(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)&apos;Z&apos;; c1++) {
   rowKey[0] = c1;
   Increment opIncr = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Increment(rowKey);
   opIncr.addColumn(FAM, HConstants.EMPTY_BYTE_ARRAY, 1);
   operations.add(opIncr);
 }
 table.batch(operations, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
}

&lt;span class=&quot;code-comment&quot;&gt;// -- code2 --
&lt;/span&gt;HBaseAdmin admin = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HBaseAdmin(CONF);
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] rowKey = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[1];
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; c1 = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)&apos;A&apos;; c1&amp;lt;=(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)&apos;Z&apos;; c1++) {
 &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; { &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(2000L); } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException iex) {}
 rowKey[0] = c1;
 admin.split(TABLE_NAME, rowKey);
}
&lt;span class=&quot;code-comment&quot;&gt;/////&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using table.increment() instead of table.batch() works fine. But that change gets slower . &lt;/p&gt;</description>
                <environment>&lt;p&gt;0.98.4+hadoop 2.4.1, 0.98.4 stand-alone, jdk1.6&lt;/p&gt;</environment>
        <key id="12736501">HBASE-11817</key>
            <summary>HTable.batch() loses operations when region is splited</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tsomeqdev">t samkawa</reporter>
                        <labels>
                    </labels>
                <created>Mon, 25 Aug 2014 10:35:18 +0000</created>
                <updated>Tue, 26 Aug 2014 01:00:56 +0000</updated>
                                            <version>0.98.4</version>
                                                    <component>Admin</component>
                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14109017" author="jmspaggi" created="Mon, 25 Aug 2014 11:17:44 +0000"  >&lt;p&gt;Interesting.&lt;/p&gt;

&lt;p&gt;So basically, you batch increments from A to Z, then split from A to Z too, then if you read the values from A to Z again, they don&apos;t all display the same result?&lt;/p&gt;

&lt;p&gt;I will try that this morning and report here.&lt;/p&gt;</comment>
                            <comment id="14109028" author="tsomeqdev" created="Mon, 25 Aug 2014 11:45:38 +0000"  >&lt;p&gt;Thanks.&lt;/p&gt;

&lt;p&gt;This is my result:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
scan &apos;test12345&apos;, COLUMNS=&amp;gt;&apos;cf::toHex&apos;
ROW    COLUMN+CELL                                                                                                                                     
 A    column=cf:, timestamp=1408960922305, value=ffff
 B    column=cf:, timestamp=1408960830519, value=c1
 C    column=cf:, timestamp=1408960830493, value=c0
 D    column=cf:, timestamp=1408960830493, value=c0
 E    column=cf:, timestamp=1408960830499, value=c0
 F    column=cf:, timestamp=1408960830499, value=c0
 G    column=cf:, timestamp=1408960830500, value=c0
 H    column=cf:, timestamp=1408960830501, value=bf
 I    column=cf:, timestamp=1408960830501, value=bf
 J    column=cf:, timestamp=1408960830502, value=bf
 K    column=cf:, timestamp=1408960830502, value=bf
 L    column=cf:, timestamp=1408960830503, value=bf
 M    column=cf:, timestamp=1408960830504, value=bf
 N    column=cf:, timestamp=1408960830504, value=bf
 O    column=cf:, timestamp=1408960830505, value=bf
 P    column=cf:, timestamp=1408960830506, value=bf
 Q    column=cf:, timestamp=1408960830507, value=bf
 R    column=cf:, timestamp=1408960830507, value=be
 S    column=cf:, timestamp=1408960830508, value=be
 T    column=cf:, timestamp=1408960830509, value=be
 U    column=cf:, timestamp=1408960830510, value=be
 V    column=cf:, timestamp=1408960830510, value=be
 W    column=cf:, timestamp=1408960830511, value=be
 X    column=cf:, timestamp=1408960830512, value=be
 Y    column=cf:, timestamp=1408960830512, value=be
 Z    column=cf:, timestamp=1408960830513, value=be
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Actually, this is just a test code, to reproduce easily.&lt;br/&gt;
This unexpected result occures even only 2 rows.&lt;/p&gt;</comment>
                            <comment id="14109256" author="jmspaggi" created="Mon, 25 Aug 2014 16:20:55 +0000"  >&lt;p&gt;I ran the following code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class IncrementsAndSplits {

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; MasterNotRunningException, ZooKeeperConnectionException, IOException, InterruptedException {
    Configuration conf = HBaseConfiguration.create();
    HConnection connection = HConnectionManager.createConnection(conf);
    HTableInterface table = connection.getTable(&lt;span class=&quot;code-quote&quot;&gt;&quot;t1&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] rowKey = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[1];
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=0;i&amp;lt;0xffff;i++){
     ArrayList&amp;lt;Increment&amp;gt; operations = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Increment&amp;gt;();
     &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; c1 = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)&apos;A&apos;; c1&amp;lt;=(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)&apos;Z&apos;; c1++) {
       rowKey[0] = c1;
       Increment opIncr = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Increment(rowKey);
       opIncr.addColumn(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;f1&quot;&lt;/span&gt;), HConstants.EMPTY_BYTE_ARRAY, 1);
       operations.add(opIncr);
     }
     table.batch(operations, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    }
    HBaseAdmin admin = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HBaseAdmin(conf);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; c1 = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)&apos;A&apos;; c1&amp;lt;=(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)&apos;Z&apos;; c1++) {
     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; { &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(2000L); } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException iex) {}
     rowKey[0] = c1;
     admin.split(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;t1&quot;&lt;/span&gt;), rowKey);
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And got the following result:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
hbase(main):029:0&amp;gt; scan &apos;t1&apos;
ROW                                                       COLUMN+CELL                                                     
 A    column=f1:, timestamp=1408980820902, value=\x00\xFF\xFF                                         
 B    column=f1:, timestamp=1408980820904, value=\x00\xFF\xFF                                         
 C    column=f1:, timestamp=1408980820906, value=\x00\xFF\xFF                                         
 D    column=f1:, timestamp=1408980820908, value=\x00\xFF\xFF                                         
 E    column=f1:, timestamp=1408980820909, value=\x00\xFF\xFF                                         
 F    column=f1:, timestamp=1408980820911, value=\x00\xFF\xFF                                         
 G    column=f1:, timestamp=1408980820913, value=\x00\xFF\xFF                                         
 H    column=f1:, timestamp=1408980820914, value=\x00\xFF\xFF                                         
 I    column=f1:, timestamp=1408980820916, value=\x00\xFF\xFF                                         
 J    column=f1:, timestamp=1408980820918, value=\x00\xFF\xFF                                         
 K    column=f1:, timestamp=1408980820919, value=\x00\xFF\xFF                                         
 L    column=f1:, timestamp=1408980820921, value=\x00\xFF\xFE                                         
 M    column=f1:, timestamp=1408980820923, value=\x00\xFF\xFE                                         
 N    column=f1:, timestamp=1408980820924, value=\x00\xFF\xFE                                         
 O    column=f1:, timestamp=1408980820926, value=\x00\xFF\xFE                                         
 P    column=f1:, timestamp=1408980820928, value=\x00\xFF\xFE                                         
 Q    column=f1:, timestamp=1408980820929, value=\x00\xFF\xFE                                         
 R    column=f1:, timestamp=1408980820931, value=\x00\xFF\xFE                                         
 S    column=f1:, timestamp=1408980820933, value=\x00\xFF\xFE                                         
 T    column=f1:, timestamp=1408980820934, value=\x00\xFF\xFE                                         
 U    column=f1:, timestamp=1408980820936, value=\x00\xFF\xFE                                         
 V    column=f1:, timestamp=1408980820938, value=\x00\xFF\xFE                                         
 W    column=f1:, timestamp=1408980820939, value=\x00\xFF\xFE                                         
 X    column=f1:, timestamp=1408980820941, value=\x00\xFF\xFE                                         
 Y    column=f1:, timestamp=1408980820943, value=\x00\xFF\xFE                                         
 Z    column=f1:, timestamp=1408980820944, value=\x00\xFF\xFE                                         
26 row(s) in 0.7620 seconds
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I tried with only 255 increments and went well. I will retry many different other scenarios to try to understand where it comes from.&lt;/p&gt;</comment>
                            <comment id="14110097" author="jmspaggi" created="Tue, 26 Aug 2014 01:00:56 +0000"  >&lt;p&gt;So. &lt;/p&gt;

&lt;p&gt;If I run the increments only, no issues. And if after some time I run the splits, no issues. But is splits arrive shortly after the increments, then some increments are dropped. &lt;/p&gt;

&lt;p&gt;I tried to flush and major compact with no better result.&lt;/p&gt;

&lt;p&gt;So, issue confirmed. Now, we need to understand where it comes from. I think issue is when we trigger a split while there is still increments in the memstore. They are not flushed, then lost.&lt;/p&gt;

&lt;p&gt;I will try to redo the same test in DEBUG mode and see if I can detect anything...&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Aug 2014 11:17:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 16 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1zahb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>