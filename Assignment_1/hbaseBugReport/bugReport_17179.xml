<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:22:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-17179/HBASE-17179.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-17179] the chunkpool are not reclamed correctly</title>
                <link>https://issues.apache.org/jira/browse/HBASE-17179</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;in our cluster, the RS&apos;s config is as below&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;    heap size(25G)&lt;br/&gt;
    hbase.regionserver.global.memstore.size(0.5)&lt;br/&gt;
    hbase.hregion.memstore.chunkpool.maxsize(0.8)&lt;br/&gt;
    hbase.hregion.memstore.chunkpool.initialsize(1.0)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;so the chunkpool&apos;s size is 25*0.5*0.8 = 10GB&lt;br/&gt;
in our monitor system, the &lt;em&gt;memStoreSize&lt;/em&gt; never up to 3G&#65292;so the &lt;em&gt;reuseRatio&lt;/em&gt; of the chunkpool should always 100%, but it&apos;s not, see the logs below:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;    2016-11-23 11:47:34,302 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;StoreOpener-33a77b971aff15e5e6be3cc614870e43-1-MemStoreChunkPool Statistics&amp;#93;&lt;/span&gt; regionserver.MemStoreChunkPool: Stats: current pool size=5009,created chunk count=0,reused chunk count=81,reuseRatio=100.00%&lt;br/&gt;
2016-11-28 11:47:34,302 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;StoreOpener-33a77b971aff15e5e6be3cc614870e43-1-MemStoreChunkPool Statistics&amp;#93;&lt;/span&gt; regionserver.MemStoreChunkPool: Stats: current pool size=3,created chunk count=1325,reused chunk count=67209,reuseRatio=98.07%&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;5 days later, the &lt;em&gt;reuseRatio&lt;/em&gt; is below 100%&lt;/p&gt;</description>
                <environment></environment>
        <key id="13023626">HBASE-17179</key>
            <summary>the chunkpool are not reclamed correctly</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="javaman_chen">chenxu</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Nov 2016 04:07:36 +0000</created>
                <updated>Tue, 29 Nov 2016 01:43:41 +0000</updated>
                                            <version>1.0.1.1</version>
                    <version>1.1.2</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="15700873" author="carp84" created="Mon, 28 Nov 2016 04:29:35 +0000"  >&lt;p&gt;Already dig into the problem and found a solution there? If so, could you upload the patch or briefly talk about the solution? Or else please take a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16193&quot; title=&quot;Memory leak when putting plenty of duplicate cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16193&quot;&gt;&lt;del&gt;HBASE-16193&lt;/del&gt;&lt;/a&gt;, I&apos;m not sure but maybe relative.&lt;/p&gt;</comment>
                            <comment id="15701074" author="javaman_chen" created="Mon, 28 Nov 2016 06:23:41 +0000"  >&lt;p&gt;not the same problem as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16193&quot; title=&quot;Memory leak when putting plenty of duplicate cells&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16193&quot;&gt;&lt;del&gt;HBASE-16193&lt;/del&gt;&lt;/a&gt;, when the CMS happend, i see the heap size reduce to 3G,&lt;br/&gt;
but should it be more than 10G &lt;b&gt;(the chunkpool&apos;s initial size)&lt;/b&gt;?&lt;br/&gt;
Has not found the solution yet!&lt;/p&gt;</comment>
                            <comment id="15701093" author="anoop.hbase" created="Mon, 28 Nov 2016 06:31:33 +0000"  >&lt;p&gt;How many regions in ur RS?&lt;br/&gt;
One thing to note - Each of the region work with one MSLAB object and that ask for pooled chunks (each of size 2 MB).  There is no sharing btw MSLABs in regions. Means if there is one region with very less data size it it, we still occupy the 2 MB chunk size fully.  But that has to get flushed any way at some point in time.. (We dont keep data for longer time even if flush size not met)..  Just said FYI.  &lt;br/&gt;
But this way of 3 GB - 10 GB seems not reasonable.  Will see branch-1 code.&lt;/p&gt;</comment>
                            <comment id="15701110" author="javaman_chen" created="Mon, 28 Nov 2016 06:38:41 +0000"  >&lt;p&gt;about 220 regions per RS, and period flush time is one hour&lt;/p&gt;</comment>
                            <comment id="15701824" author="yuzhihong@gmail.com" created="Mon, 28 Nov 2016 12:15:06 +0000"  >&lt;p&gt;In getChunk() :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
      &lt;span class=&quot;code-comment&quot;&gt;// Make a chunk iff we have not yet created the maxCount chunks
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; created = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.chunkCount.get();
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (created &amp;lt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.maxCount) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;More chunks might have been made during the 5 days - I wish there was DEBUG log in the above code.&lt;/p&gt;</comment>
                            <comment id="15701985" author="anoop.hbase" created="Mon, 28 Nov 2016 13:49:14 +0000"  >&lt;p&gt;Many threads working on same region and so on MSLAB might call getChunk concurrently.  All might result in creating chunk object and so increment the counter.  The init() call on Chunk actually allocate the byte[] 2 MB.  So only one thread will succeed in that.   So said there is chance of this counter getting corrupted.   But what u say is 10 G memstore pool initial size itself and all memstores sized never crosses 3 GB (correct?), then there should not be ideally no case of new chunks creation need..&lt;/p&gt;

&lt;p&gt;220 regions means  220 * 128 MB , 10 GB of max global memstore can easily get reached no?&lt;/p&gt;</comment>
                            <comment id="15703832" author="javaman_chen" created="Tue, 29 Nov 2016 01:43:41 +0000"  >&lt;p&gt;the global memstore never crosses 3 GB, so the &lt;em&gt;reclaimedChunks&lt;/em&gt; should not overflow,&lt;br/&gt;
and the heap size should always biger than chunkpool&apos;s initial size i think, but it&apos;s not.&lt;br/&gt;
some chunks are collected as garbage, not put back to the pool.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Nov 2016 04:29:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36tqn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>