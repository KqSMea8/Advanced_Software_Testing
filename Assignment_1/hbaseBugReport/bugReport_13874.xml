<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:47:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13874/HBASE-13874.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13874] Fix 0.8 being hardcoded sum of blockcache + memstore; doesn&apos;t make sense when big heap</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13874</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Fix this in HBaseConfiguration:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 79   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void checkForClusterFreeMemoryLimit(Configuration conf) {
 80       &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; globalMemstoreLimit = conf.getFloat(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.regionserver.global.memstore.upperLimit&quot;&lt;/span&gt;, 0.4f);
 81       &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; gml = (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)(globalMemstoreLimit * CONVERT_TO_PERCENTAGE);
 82       &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; blockCacheUpperLimit =
 83         conf.getFloat(HConstants.HFILE_BLOCK_CACHE_SIZE_KEY,
 84           HConstants.HFILE_BLOCK_CACHE_SIZE_DEFAULT);
 85       &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; bcul = (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)(blockCacheUpperLimit * CONVERT_TO_PERCENTAGE);
 86       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (CONVERT_TO_PERCENTAGE - (gml + bcul)
 87               &amp;lt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)(CONVERT_TO_PERCENTAGE *
 88                       HConstants.HBASE_CLUSTER_MINIMUM_MEMORY_THRESHOLD)) {
 89           &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(
 90             &lt;span class=&quot;code-quote&quot;&gt;&quot;Current heap configuration &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; MemStore and BlockCache exceeds &quot;&lt;/span&gt; +
 91             &lt;span class=&quot;code-quote&quot;&gt;&quot;the threshold required &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; successful cluster operation. &quot;&lt;/span&gt; +
 92             &lt;span class=&quot;code-quote&quot;&gt;&quot;The combined value cannot exceed 0.8. Please check &quot;&lt;/span&gt; +
 93             &lt;span class=&quot;code-quote&quot;&gt;&quot;the settings &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; hbase.regionserver.global.memstore.upperLimit and &quot;&lt;/span&gt; +
 94             &lt;span class=&quot;code-quote&quot;&gt;&quot;hfile.block.cache.size in your configuration. &quot;&lt;/span&gt; +
 95             &lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.regionserver.global.memstore.upperLimit is &quot;&lt;/span&gt; +
 96             globalMemstoreLimit +
 97             &lt;span class=&quot;code-quote&quot;&gt;&quot; hfile.block.cache.size is &quot;&lt;/span&gt; + blockCacheUpperLimit);
 98       }
 99   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hardcoding 0.8 doesn&apos;t make much sense in a heap of 100G+ (that is 20G over for hbase itself &amp;#8211; more than enough).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12836605">HBASE-13874</key>
            <summary>Fix 0.8 being hardcoded sum of blockcache + memstore; doesn&apos;t make sense when big heap</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="3" iconUrl="https://issues.apache.org/jira/images/icons/statuses/inprogress.png" description="This issue is being actively worked on at the moment by the assignee.">In Progress</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="esteban">Esteban Gutierrez</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Jun 2015 17:51:19 +0000</created>
                <updated>Wed, 10 Jun 2015 05:34:43 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="14579351" author="esteban" created="Tue, 9 Jun 2015 18:21:04 +0000"  >&lt;p&gt;Right HConstants.HBASE_CLUSTER_MINIMUM_MEMORY_THRESHOLD as a percentage doesn&apos;t makes sense. 20% of heap could be anywhere between 4GB to 20GB with large heap sizes. The easiest way is to make it configurable but we are just adding another knob for not being able to track all resources consumption.&lt;/p&gt;</comment>
                            <comment id="14579358" author="vrodionov" created="Tue, 9 Jun 2015 18:27:44 +0000"  >&lt;p&gt;Should log WARN if HBase own heap is below, say 4GB. No errors should be thrown in any case. If lower minimum (4GB?), then thresholds needs to be adjusted and WARM message should be logged.&lt;/p&gt;</comment>
                            <comment id="14579418" author="ndimiduk" created="Tue, 9 Jun 2015 19:09:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should log WARN if HBase own heap is below, say 4GB&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I like this approach. What&apos;s our decided lower bound? 4g? 2g? Folks have been running with 8-12g total heap for ages; &lt;tt&gt;8 * 0.2 = 1.6&lt;/tt&gt;. Let&apos;s warn if own heap is less than 1.5g or less than 20%, whichever is smaller.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; you think 1.5g is too low?&lt;/p&gt;</comment>
                            <comment id="14579484" author="esteban" created="Tue, 9 Jun 2015 19:58:39 +0000"  >&lt;p&gt;I think we should fail fast in the same way we do now and only make this configurable if required. Finding the right thresholds will be always a problem for users.&lt;/p&gt;</comment>
                            <comment id="14579494" author="stack" created="Tue, 9 Jun 2015 20:10:27 +0000"  >&lt;p&gt;As per Esteban, I could just make it so you can configure the 0.8 upper bound with how to change the limit in the message we throw when we fail to start. WARNs are not always seen. Guessing allowed minimum is always going to be unsatisfactory for some one (See Jimmy Lin running hbase on raspberry pi, see this user I&apos;ve been messing with running 110G heaps)&lt;/p&gt;</comment>
                            <comment id="14579500" author="davelatham" created="Tue, 9 Jun 2015 20:16:11 +0000"  >&lt;p&gt;I would definitely appreciate being able to use a config somehow besides recompiling as long as it is logically consistent, even if not recommended.&lt;/p&gt;</comment>
                            <comment id="14579681" author="esteban" created="Tue, 9 Jun 2015 22:31:38 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; let me know if this is what you are thinking about on this initially.&lt;/p&gt;</comment>
                            <comment id="14579684" author="esteban" created="Tue, 9 Jun 2015 22:32:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;: does this works for you guys?&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=davelatham&quot; class=&quot;user-hover&quot; rel=&quot;davelatham&quot;&gt;Dave Latham&lt;/a&gt;: this keeps the existing behavior the default and now is possible to configure the threshold via &lt;tt&gt;hbase.regionserver.reserved.memory.threshold&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="14579710" author="vrodionov" created="Tue, 9 Jun 2015 22:53:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; asked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vladimir Rodionov you think 1.5g is too low?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, we have observed OOME with heaps below 8GB while running M/R jobs(1.5-2GB reserved for HBase), with standard settings for block cache and memstore in the past (pre-0.98). Can&apos;t say for 0.98+ since heaps are larger now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.  &lt;/p&gt;</comment>
                            <comment id="14579714" author="vrodionov" created="Tue, 9 Jun 2015 23:01:43 +0000"  >&lt;p&gt;If block cache + memstore exceed ( 1- hbase.regionserver.reserved.memory.threshold) we throw RuntimeException and we can control reserved memory ratio. Looks right to me.&lt;/p&gt;</comment>
                            <comment id="14579722" author="esteban" created="Tue, 9 Jun 2015 23:10:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; what is we do in checkForClusterFreeMemoryLimit():&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; globalMemstoreSize = getGlobalMemStorePercent(conf, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; gml = (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)(globalMemstoreSize * CONVERT_TO_PERCENTAGE);
    &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; blockCacheUpperLimit = getBlockCacheHeapPercent(conf);
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; bcul = (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)(blockCacheUpperLimit * CONVERT_TO_PERCENTAGE);
    &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; minimumMemoryThreshold = 1 - conf.getFloat(HBASE_CLUSTER_MINIMUM_MEMORY_THRESHOLD_KEY,
          HBASE_CLUSTER_MINIMUM_MEMORY_THRESHOLD_DEFAULT);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (CONVERT_TO_PERCENTAGE - (gml + bcul)
            &amp;lt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)(CONVERT_TO_PERCENTAGE * minimumMemoryThreshold)) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Current heap configuration &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; MemStore and BlockCache exceeds &quot;&lt;/span&gt;
          + &lt;span class=&quot;code-quote&quot;&gt;&quot;the threshold required &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; successful cluster operation. &quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So if (block cack upper limit) + (global memstore size) &amp;gt; minimumMemoryThreshold then we throw a RuntimeException. Is that what you are looking for &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14579724" author="vrodionov" created="Tue, 9 Jun 2015 23:13:16 +0000"  >&lt;p&gt;Yes, sure. As I said, looks right now.&lt;/p&gt;</comment>
                            <comment id="14580048" author="stack" created="Wed, 10 Jun 2015 05:34:43 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=esteban&quot; class=&quot;user-hover&quot; rel=&quot;esteban&quot;&gt;Esteban Gutierrez&lt;/a&gt; Patch looks good to me. Don&apos;t you need to mention your new config in the RuntimeException thrown so folks have a fighting chance on figuring what to change to make stuff work?  And paranoia on my part, how about a little test? I see there is already a TestHMMU... could add a little one that adds sensible and crazypants values just to ensure does as expected. Fix checkForClusterFreeMemoryLimit javadoc on commit too (talks about 20%...smile).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12738687" name="0001-HBASE-13874-Fix-0.8-being-hardcoded-sum-of-blockcach.patch" size="11700" author="esteban" created="Tue, 9 Jun 2015 22:31:38 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Jun 2015 18:21:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 27 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2fub3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>