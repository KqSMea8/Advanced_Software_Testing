<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:04:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9469/HBASE-9469.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9469] Synchronous replication</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9469</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Scenario: &lt;/p&gt;

&lt;p&gt;A/B clusters with master-master replication, client writes to A cluster and A pushes all writes to B cluster, and when A cluster is down, client switches writing to B cluster.&lt;/p&gt;

&lt;p&gt;But the client&apos;s write switch is unsafe due to the replication between A/B is asynchronous: a delete to B cluster which aims to delete a put written earlier can fail due to that put is written to A cluster and isn&apos;t successfully pushed to B before A is down. It can be worse if this delete is collected(flush and then major compact occurs) before A cluster is up and that put is eventually pushed to B, the put won&apos;t ever be deleted.&lt;/p&gt;

&lt;p&gt;Can we provide per-table/per-peer synchronous replication which ships the according hlog entry of write before responsing write success to client? By this we can guarantee the client that all write requests for which he got success response when he wrote to A cluster must already have been in B cluster as well.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12667584">HBASE-9469</key>
            <summary>Synchronous replication</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="fenghh">Honghua Feng</reporter>
                        <labels>
                    </labels>
                <created>Mon, 9 Sep 2013 14:04:10 +0000</created>
                <updated>Fri, 28 Feb 2014 03:45:17 +0000</updated>
                            <resolved>Thu, 27 Feb 2014 10:15:26 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="13762106" author="jdcryans" created="Mon, 9 Sep 2013 18:03:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; has a blog post that covers this: &lt;a href=&quot;http://hadoop-hbase.blogspot.com/2012/01/replication-for-ha-and-dr.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop-hbase.blogspot.com/2012/01/replication-for-ha-and-dr.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically you need to enable KEEP_DELETED_CELLS on your families. I have a draft for a new piece of documentation that we could add to the ref guide that I should probably contribute &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Synchronous replication is still a feature we could add though.&lt;/p&gt;</comment>
                            <comment id="13762686" author="fenghh" created="Tue, 10 Sep 2013 03:26:55 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; : Any plan of synchronous replication? this is really a nice feature for applications requiring strict data safety/consistency across clusters&lt;/p&gt;</comment>
                            <comment id="13762722" author="lhofhansl" created="Tue, 10 Sep 2013 04:46:53 +0000"  >&lt;p&gt;I doubt We&apos;d get reasonable performance from that. Could be an optional feature. Patches are welcome &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13762755" author="fenghh" created="Tue, 10 Sep 2013 05:36:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Yes, the better data safety/consistency of synchronous replication is gotten at the cost of higher latency. Maybe it&apos;s more acceptable to make it per-peer/per-table configurable, let me try to provide a patch accordingly&lt;/p&gt;</comment>
                            <comment id="13877226" author="fenghh" created="Tue, 21 Jan 2014 05:43:36 +0000"  >&lt;p&gt;after some rethought, I think this feature has less value than seemingly: if we response write to caller until the push to peer succeeds, both master/peer clusters are required to be available, this means from an overall perspective we just trade-off write availability for read availability  but without overall availability improvement. &lt;br/&gt;
on the other hand, such &apos;synchronous replication&apos; in functionality is almost equal to letting client write to both clusters, and with worse performance: client can issue write concurrently to both clusters while synchronous replication serializes the writes to the two clusters, and additional memory overhead resulted from duplicate kvs in peer cluster(replication sink plays the role as a proxy client which receives the push from master cluster and then write the local cluster as a hbase client, the kvs duplicate in peer cluster from an overall view)&lt;/p&gt;</comment>
                            <comment id="13914348" author="fenghh" created="Thu, 27 Feb 2014 10:15:26 +0000"  >&lt;p&gt;It has less value than expected as described in last comment&lt;/p&gt;</comment>
                            <comment id="13915412" author="terry_zhang" created="Fri, 28 Feb 2014 03:18:50 +0000"  >&lt;p&gt;Hi Feng HongHua, what&apos;s about mysql SemiSyncReplication solution? (&lt;a href=&quot;https://code.google.com/p/google-mysql-tools/wiki/SemiSyncReplicationDesign&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://code.google.com/p/google-mysql-tools/wiki/SemiSyncReplicationDesign&lt;/a&gt;) , we need to make sure client write both side is a transaction if you want to data is consistent.&lt;/p&gt;</comment>
                            <comment id="13915428" author="fenghh" created="Fri, 28 Feb 2014 03:45:17 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=terry_zhang&quot; class=&quot;user-hover&quot; rel=&quot;terry_zhang&quot;&gt;terry zhang&lt;/a&gt; for comment!&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;we need to make sure client write both side is a transaction if you want to data is consistent.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;ve explained in above comment that neither writing both sides from client nor letting master cluster synchronously push WALEdits to peer can improve the overall availability, both ways improve the read availability at the cost of write availability : now the write fails in face of either cluster outage...&lt;br/&gt;
IMHO, to improve better read availability &lt;b&gt;without&lt;/b&gt; hurting write availability, we need similar treatment as Megastore or Spanner.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 9 Sep 2013 18:03:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>347521</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 42 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1nxbb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>347820</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>