<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:14:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3896/HBASE-3896.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3896] Make AssignmentManager standalone testable by having its constructor take Interfaces rather than a CatalogTracker and a ServerManager</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3896</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;If we could stand up an instance of AssignmentManager, a core fat class that has a bunch of critical logic managing state transitions, then it&apos;d be easier writing unit tests around its logic.  Currently its hard because it takes a ServerManager and a CatalogTracker, but a little bit of work could turn these into Interfaces.  SM looks easy to do.  Changing CT into an Interface instead might ripple a little through the code base but it&apos;d probably be well worth it.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12507686">HBASE-3896</key>
            <summary>Make AssignmentManager standalone testable by having its constructor take Interfaces rather than a CatalogTracker and a ServerManager</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="cody.marcel@gmail.com">Cody Marcel</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 May 2011 23:34:41 +0000</created>
                <updated>Wed, 26 Sep 2012 21:42:13 +0000</updated>
                            <resolved>Wed, 26 Sep 2012 20:35:48 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                            <comments>
                            <comment id="13462114" author="stack" created="Mon, 24 Sep 2012 20:56:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cody.marcel%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;cody.marcel@gmail.com&quot;&gt;Cody Marcel&lt;/a&gt; This is done.  Check TestAssignmentManager.  See how it mocks up what AM needs.  Gets a bit messy around the rpc&apos;ing.  If you have ideas on how to improve, please say.  Else, I think we can close this out.&lt;/p&gt;</comment>
                            <comment id="13462156" author="cody.marcel@gmail.com" created="Mon, 24 Sep 2012 21:25:10 +0000"  >&lt;p&gt;Mockito allows you to work with the class directly, but it seems that there is still advantage to working on an interface. It would certainly make it more injection friendly later. This is what I had in mind for the ServerManger.&lt;/p&gt;

&lt;p&gt;Rename ServerManager -&amp;gt; BaseServerManager&lt;br/&gt;
extract interface from that and name it ServerManager.&lt;/p&gt;</comment>
                            <comment id="13462444" author="stack" created="Tue, 25 Sep 2012 04:46:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cody.marcel%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;cody.marcel@gmail.com&quot;&gt;Cody Marcel&lt;/a&gt; Go for it.  Anything you can do to improve the testability would be most welcome.  You might consider breaking SM up into multiple Interfaces.  There&apos;d be the methods used by AssignmentManager, and then others could go into the Interface the master uses.  Not sure if you could make that clean of a distinction... but something to consider.  Your SM plan sounds great.&lt;/p&gt;</comment>
                            <comment id="13463953" author="cody.marcel@gmail.com" created="Wed, 26 Sep 2012 16:57:41 +0000"  >&lt;p&gt;I looked into splitting SM up a bit on the interface. There doesn&apos;t seem to be a clear logical line between the methods used by HMaster vs. AM. There is also some overlap of methods used in both. &lt;/p&gt;

&lt;p&gt;i.e.&lt;/p&gt;

&lt;p&gt;isClusterShutdown&lt;br/&gt;
isServerOnline&lt;br/&gt;
createDestinationServersList&lt;br/&gt;
getDeadServers&lt;/p&gt;</comment>
                            <comment id="13463962" author="stack" created="Wed, 26 Sep 2012 17:25:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cody.marcel%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;cody.marcel@gmail.com&quot;&gt;Cody Marcel&lt;/a&gt; np.  Was just a notion.&lt;/p&gt;</comment>
                            <comment id="13463968" author="cody.marcel@gmail.com" created="Wed, 26 Sep 2012 17:29:55 +0000"  >&lt;p&gt;I am making subtasks for this to break the changes up into smaller change lists.&lt;/p&gt;</comment>
                            <comment id="13463995" author="jesse_yates" created="Wed, 26 Sep 2012 18:00:09 +0000"  >&lt;p&gt;I don&apos;t think that abstracting out the serverManger and catalogtracker has any real value, at the moment. I don&apos;t think there are other implementations of those classes, so pulling out an interface only makes things more complicated, not less. If there were other implementations, for different use cases, then it would make sense to put it all behind an interface to swap them out easily. &lt;/p&gt;

&lt;p&gt;I&apos;m +1 on stack&apos;s original comment though that mocking out the classes passes into the AssignmentManager (which is already pretty well setup for testing since it can take in all its dependencies) it enough to make the assignment manager easy to test.&lt;/p&gt;

&lt;p&gt;However, I do think there is value in making the serverManger more composition based. Cody mentioned (offline) functions like stop that could be more cleanly abstracted not only here, but around the codebase (I&apos;m thinking you have a StopBuilder that takes in a bunch of things to stop and then builds your &apos;stopper&apos; so you can close everything out easily).  I&apos;m all for adding a couple new classes to help break out the functions of the SM some more, but that shouldn&apos;t happen to just hide functionality from certain parts of the code (e.g. hmaster shouldn&apos;t know about function X, so we make another interface that doesn&apos;t include that.... leads to a really complex inheritance heirarchy that is hard to reason about and makes the concrete classes even harder to read).&lt;/p&gt;

&lt;p&gt;TL;DR anything to make the SM smaller (break out functionality) and composition based would be great, but the root of this ticket should be solvable via mocking. Maybe, at the very least if we still end up doing this, rename the ticket?&lt;/p&gt;</comment>
                            <comment id="13464063" author="stack" created="Wed, 26 Sep 2012 19:00:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t think that abstracting out the serverManger and catalogtracker has any real value, at the moment. I don&apos;t think there are other implementations of those classes, so pulling out an interface only makes things more complicated, not less. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Other implementations would be mocks that implement the SM and CT Interfaces?&lt;/p&gt;

&lt;p&gt;Otherwise, appreciate the interjection.  Good input.&lt;/p&gt;</comment>
                            <comment id="13464117" author="jesse_yates" created="Wed, 26 Sep 2012 19:58:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;Other implementations would be mocks that implement the SM and CT Interfaces?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mockito already can just mock those out (eg. ServerManager manager = Mockito.mock(ServerManager.class)), so another interface isn&apos;t really all that necessary. &lt;/p&gt;

&lt;p&gt;Just my $0.02 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13464141" author="stack" created="Wed, 26 Sep 2012 20:26:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;Mockito already can just mock those out (eg. ServerManager manager = Mockito.mock(ServerManager.class)), so another interface isn&apos;t really all that necessary.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That is true (I think that it this way in TestAM).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cody.marcel%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;cody.marcel@gmail.com&quot;&gt;Cody Marcel&lt;/a&gt; I think we should close this issue given Jesses&apos; reasoning.  This issue was filed in May of 2011 by me when I probably made my first attempt at trying to do a standalone AM and failed thinking I needed SM and CT to be Interfaces.  Later in the year, I wrote the first TestAssignmentManager implementation which stands up an AM w/o its Master wrapping using Mockito.  Therein I did the trick Jesse suggests of getting around the need of an Interface by doing ServerManager manager = Mockito.mock(ServerManager.class)).  I think I should have closed this issue at that time having done a workaround (And Jesse makes good argument that making Interfaces of SM and CT won&apos;t help elsewhere).  What you think?&lt;/p&gt;</comment>
                            <comment id="13464144" author="cody.marcel@gmail.com" created="Wed, 26 Sep 2012 20:34:37 +0000"  >&lt;p&gt;I still think it would be an overall cleaner solution to have interfaces and true mock implementations that can be reused elsewhere, but I don&apos;t have strong opinions on it. Any advantage would be minimal at best. I was mainly looking for something easy to get my feet wet. I will close this.&lt;/p&gt;</comment>
                            <comment id="13464199" author="stack" created="Wed, 26 Sep 2012 21:42:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cody.marcel%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;cody.marcel@gmail.com&quot;&gt;Cody Marcel&lt;/a&gt; Look for other issues w/ noob.  Thanks for your work getting this issue closed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                            <subtask id="12609276">HBASE-6886</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Sep 2012 21:25:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33257</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 12 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hoef:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101215</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>noob</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>