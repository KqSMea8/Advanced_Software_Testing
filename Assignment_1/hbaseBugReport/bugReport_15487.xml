<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:04:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15487/HBASE-15487.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15487] Deletions done via BulkDeleteEndpoint make past data re-appear</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15487</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The Warp10 (www.warp10.io) time series database uses HBase as its underlying data store. The deletion of ranges of cells is performed using the BulkDeleteEndpoint.&lt;/p&gt;

&lt;p&gt;In the following scenario the deletion does not appear to be working properly:&lt;/p&gt;

&lt;p&gt;The table &apos;t&apos; is created with a single version using:&lt;/p&gt;

&lt;p&gt;create &apos;t&apos;, &lt;/p&gt;
{NAME =&amp;gt; &apos;v&apos;, DATA_BLOCK_ENCODING =&amp;gt; &apos;FAST_DIFF&apos;, BLOOMFILTER =&amp;gt; &apos;NONE&apos;, REPLICATION_SCOPE =&amp;gt; &apos;0&apos;, VERSIONS=&amp;gt; &apos;1&apos;, MIN_VERSIONS =&amp;gt; &apos;0&apos;, TTL =&amp;gt; &apos;2147483647&apos;, KEEP_DELETED_CELLS =&amp;gt; &apos;false&apos;, BLOCKSIZE =&amp;gt; &apos;65536&apos;, IN_MEMORY =&amp;gt;&apos;false&apos;, BLOCKCACHE =&amp;gt; &apos;true&apos;}

&lt;p&gt;We write a cell at row &apos;0x00&apos;, colfam &apos;v&apos;, colq &apos;&apos;, value 0x0&lt;br/&gt;
We write the same cell again with value 0x1&lt;/p&gt;

&lt;p&gt;A scan will return a single value 0x1&lt;/p&gt;

&lt;p&gt;We then perform a delete using the BulkDeleteEndpoint and a Scan with a DeleteType of &apos;VERSION&apos;&lt;/p&gt;

&lt;p&gt;The reported number of deleted versions is 1 (which is coherent given the table was created with MAX_VERSIONS=1)&lt;/p&gt;

&lt;p&gt;The same scan as the one performed before the delete returns a single value 0x0.&lt;/p&gt;

&lt;p&gt;This seems to happen when all operations are performed against the memstore.&lt;/p&gt;

&lt;p&gt;A regular delete will remove the cell and a later scan won&apos;t show it.&lt;/p&gt;

&lt;p&gt;I&apos;ll attach a test which demonstrates the problem.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12951623">HBASE-15487</key>
            <summary>Deletions done via BulkDeleteEndpoint make past data re-appear</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="herberts">Mathias Herberts</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Mar 2016 22:06:54 +0000</created>
                <updated>Mon, 21 Mar 2016 13:20:33 +0000</updated>
                                            <version>1.0.3</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15202253" author="herberts" created="Fri, 18 Mar 2016 22:08:38 +0000"  >&lt;p&gt;This test reproduces the problem against a standalone 1.0.3 install.&lt;/p&gt;</comment>
                            <comment id="15202254" author="herberts" created="Fri, 18 Mar 2016 22:10:21 +0000"  >&lt;p&gt;Forgot to mention that HBase has to be configured with the BulkDeleteEndpoint enabled via&lt;/p&gt;

&lt;p&gt;  &amp;lt;property&amp;gt;&lt;br/&gt;
    &amp;lt;name&amp;gt;hbase.coprocessor.region.classes&amp;lt;/name&amp;gt;&lt;br/&gt;
    &amp;lt;value&amp;gt;org.apache.hadoop.hbase.coprocessor.example.BulkDeleteEndpoint&amp;lt;/value&amp;gt;&lt;br/&gt;
  &amp;lt;/property&amp;gt;&lt;/p&gt;</comment>
                            <comment id="15202606" author="herberts" created="Sat, 19 Mar 2016 06:40:49 +0000"  >&lt;p&gt;This test is a modified version of the previous one where the regular delete does not delete the whole row but just the cell.&lt;/p&gt;

&lt;p&gt;The behaviour is identical to the delete done using BulkDeleteEndpoint.&lt;/p&gt;

&lt;p&gt;The previous version appears.&lt;/p&gt;</comment>
                            <comment id="15202745" author="herberts" created="Sat, 19 Mar 2016 12:47:00 +0000"  >&lt;p&gt;From thinking more about it I guess the problem is probably related more to the way &apos;VERSIONS&apos; is enforced than to the delete operation itself.&lt;/p&gt;

&lt;p&gt;By setting &apos;VERSIONS&apos; at table creation time it is expected that only that many versions of a cell will be retained. We assume &apos;VERSIONS&apos; was set to 1 for the purpose of the present explanation.&lt;/p&gt;

&lt;p&gt;The &apos;VERSIONS&apos; parameter seems to be enforced during a Scan, even if the data being scanned is still in the memstore since a Scan done with a requested number of versions &amp;gt;  &apos;VERSIONS&apos; won&apos;t return more than &apos;VERSIONS&apos; versions of the cell.&lt;/p&gt;

&lt;p&gt;When issueing a Delete against a cell which was written more than &apos;VERSIONS&apos; time, one would expect that the deletion removes all versions of the cell since no versions past the last one will be retained at compaction time.&lt;/p&gt;

&lt;p&gt;But it seems that only the last version is deleted and the one prior to that then becomes visible again when it was not visible before (Scan with setMaxVersions() won&apos;t return it).&lt;/p&gt;</comment>
                            <comment id="15203202" author="herberts" created="Sun, 20 Mar 2016 09:51:16 +0000"  >&lt;p&gt;By setting setRaw(true) the deletion works as expected when using BulkDeleteEndpoint, but this is not the case when using regular deletes.&lt;/p&gt;</comment>
                            <comment id="15203750" author="anoop.hbase" created="Mon, 21 Mar 2016 05:44:01 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (minage &amp;gt; 0) {
        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; maxts = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis() - minage + 1;
        scan.setTimeRange(0, maxts);
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So what is the value of this &apos;minage&apos;  in ur test?  Can you try with out setting any time range on the Scan?&lt;/p&gt;

&lt;p&gt;The diff here I can see is, in case of normal delete, we just say delete a row:column data.  So it will delete ALL the versions written so far. (Yes the max versions for table is 1. Still there are 2 versions of Cell present in data)&lt;br/&gt;
In case of bulk delete, which cell(s) will be deleted, depends on the fact that which cell(s) the scan return.&lt;/p&gt;</comment>
                            <comment id="15203752" author="ram_krish" created="Mon, 21 Mar 2016 05:46:06 +0000"  >&lt;p&gt;I tried this out in trunk. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;A regular delete will remove the cell and a later scan won&apos;t show it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This also shows the cell with value 0x0. The scans after bulk delete and after regular delete behaved the same. &lt;br/&gt;
With 1.0.3 I doubt whether there should be a behavoiur change. May be I am missing something. Will check more. &lt;/p&gt;</comment>
                            <comment id="15203756" author="anoop.hbase" created="Mon, 21 Mar 2016 05:47:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;builder.setDeleteType(DeleteType.VERSION);&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Oh I noticed it now.  Why delete type is version when u actually wanted to delete one row:cf:qual  value fully?  Version type to be used when u want to delete one particular version of a cell.&lt;/p&gt;

&lt;p&gt;Yes as per the thinking it is correct to put even version also.. Because u have 1 as max versions for the table.  So when new data was put ideally it has to shadow the old one.  So even if latest version only deleted, it should work correctly.&lt;br/&gt;
But this is a know issue in HBase..  When version is 1, the actual removal of old version data will happen during a compaction.  So before u apply this bulk delete op, if a compaction happened, you would have been seeing the correct result you wanted..&lt;/p&gt;

&lt;p&gt;For ur case I think it can be easily fixed by removing this DeleteType.VERSION type set.&lt;/p&gt;</comment>
                            <comment id="15203765" author="ram_krish" created="Mon, 21 Mar 2016 05:54:18 +0000"  >&lt;p&gt;Correct as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; says. &lt;br/&gt;
As &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=herberts&quot; class=&quot;user-hover&quot; rel=&quot;herberts&quot;&gt;Mathias Herberts&lt;/a&gt; says the thing is the way we see how Delete handles version and how Scans handle version. Compaction would have rewritten only one version of the data ie. here 0x1 and after that if delete happens only 0x1 gets deleted.&lt;/p&gt;</comment>
                            <comment id="15203938" author="herberts" created="Mon, 21 Mar 2016 09:28:44 +0000"  >&lt;p&gt;We need to remove specific versions of a cell since the Scan can select cells based on their age (when minage &amp;gt; 0).&lt;/p&gt;

&lt;p&gt;As I commented, the deletion via BulkDeleteEndpoint can be fixed by calling setRaw(true) on the associated scanner. But in a more general case the problem cannot be fixed with standard Deletes as the shadowing breaks after the deletion is performed.&lt;/p&gt;</comment>
                            <comment id="15204152" author="anoop.hbase" created="Mon, 21 Mar 2016 13:11:01 +0000"  >&lt;p&gt;This is an HBase behavior rather than Bulk Delete EP issue.&lt;br/&gt;
And one more thing. You said your tables are with versions = 1.  And in delete you want to delete version(s) of a cell based on &apos;minage &apos;.  That itself means you want to keep more versions?  There is some sort of an ambiguity  in these statements.&lt;/p&gt;</comment>
                            <comment id="15204165" author="herberts" created="Mon, 21 Mar 2016 13:20:33 +0000"  >&lt;p&gt;You are right, the initial feeling was that it was related to the BulkDeleteEP but after more experiments it appears it is an issue with HBase behavior.&lt;/p&gt;

&lt;p&gt;I did not file the issue to have my BDEP problem solved, as I mentioned in the comments I&apos;ve done that already. I filed the issue to try to assess if this is a bug in HBase or an expected behavior which should be more throughly documented.&lt;/p&gt;

&lt;p&gt;My sentiment at this point is that the Put0 / Put1 / Delete sequence with versions == 1 should not return the result of &apos;Put0&apos;, so let&apos;s focus on this point rather than on the initial BDEP problem which was only indirectly related.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12794321" name="HBaseTest.java" size="5657" author="herberts" created="Sat, 19 Mar 2016 06:40:49 +0000"/>
                            <attachment id="12794268" name="HBaseTest.java" size="5620" author="herberts" created="Fri, 18 Mar 2016 22:08:38 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 21 Mar 2016 05:44:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            38 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2uwdz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>