<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:16:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10702/HBASE-10702.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10702] HBase fails to respect Deletes</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10702</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;One of our user contacted me about an issue with Deletes.&lt;/p&gt;

&lt;p&gt;Some of the deletes they do are not totally processed. Therefore, after the Delete, if they do a Get, from time to time, the Get return the row when it should have been deleted and should have returned nothing. After multiple Deletes, the row is finally deleted. If we don&apos;t retry after the 1st attempt, the row stays there. Even after a flush, a major_compact, etc.&lt;/p&gt;

&lt;p&gt;I have been able to reproduce the issue in 0.94.2 (CDH4.2.0 EC2), 0.94.15(CDH4.6.0 EC2) and 0.94.17 (Apache version bare metal)&lt;/p&gt;

&lt;p&gt;Here is a simple output from my test app.&lt;/p&gt;

&lt;p&gt;1736509 Doing a delete for 0000099676 failed. Start to count&lt;br/&gt;
puts=311 deletes=64 retries=2&lt;/p&gt;

&lt;p&gt;2281712 Doing a delete for 0000027606 failed. Start to count&lt;br/&gt;
puts=3679 deletes=247 retries=2&lt;/p&gt;

&lt;p&gt;2388305 Doing a delete for 0000018306 failed. Start to count&lt;br/&gt;
puts=4744 deletes=290 retries=2&lt;/p&gt;

&lt;p&gt;2532943 Doing a delete for 0000030446 failed. Start to count&lt;br/&gt;
puts=5678 deletes=337 retries=2&lt;/p&gt;

&lt;p&gt;2551421 Doing a delete for 0000046304 failed. Start to count&lt;br/&gt;
puts=5845 deletes=345 retries=2&lt;/p&gt;

&lt;p&gt;2561099 Doing a delete for 0000019619 failed. Start to count&lt;br/&gt;
puts=5869 deletes=347 retries=3&lt;/p&gt;

&lt;p&gt;First field is the time in ms since the test started.  So first error occurs after about 30 minutes. Below are the number of puts and deletes done, and the numbers of required retries to get the value deleted.&lt;/p&gt;

&lt;p&gt;Key is random number between  0000000000 and 0000100000.&lt;/p&gt;

&lt;p&gt;Very simple test. Just doing more puts than deletes.&lt;/p&gt;

&lt;p&gt;Tests are running on 0.96.1.1 for almost 1h now so it seems to be fine, but it&apos;s not on the same cluster, so I will keep that running for hours/days first.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12699519">HBASE-10702</key>
            <summary>HBase fails to respect Deletes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jmspaggi">Jean-Marc Spaggiari</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 Mar 2014 22:16:14 +0000</created>
                <updated>Sat, 8 Mar 2014 12:35:54 +0000</updated>
                            <resolved>Sat, 8 Mar 2014 02:15:01 +0000</resolved>
                                    <version>0.94.2</version>
                    <version>0.94.15</version>
                    <version>0.94.17</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13924409" author="lhofhansl" created="Fri, 7 Mar 2014 22:23:53 +0000"  >&lt;p&gt;Can you share the test code? Might be a discrepancy of timestamps.&lt;/p&gt;</comment>
                            <comment id="13924416" author="jmspaggi" created="Fri, 7 Mar 2014 22:34:20 +0000"  >&lt;p&gt;As you can see, it&apos;s a very very simple test. Just deletes and gets. Not playing with the timestamps nor the parameters nor the wal nor anything else like that. To respect the real usecase, *1 should be replaces by * 1000 but I changed that to get the results faster.&lt;/p&gt;

&lt;p&gt;Table is initially loaded with sequencialWrites 30K rows.&lt;/p&gt;

&lt;p&gt;So we are talking here to about 1 500 000 puts/day and 40 000 deletes/day. Which is still very small.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Random;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HBaseConfiguration;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Delete;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Get;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.HTable;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Put;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.util.Bytes;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class DeleteGetTest {

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) {

    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; lastPut = 0;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; lastDelete = 0;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; countPut = 0;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; countDelete = 0;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; oneDay = 3600*24; &lt;span class=&quot;code-comment&quot;&gt;// in seconds
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; putDelay = oneDay/1500; &lt;span class=&quot;code-comment&quot;&gt;// in seconds
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; deleteDelay = oneDay / 40;
    Random random = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Random (&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis());
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; startTime = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis();

    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      HTable table = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTable(HBaseConfiguration.create(),Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;TestTable&quot;&lt;/span&gt;));
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
        &lt;span class=&quot;code-comment&quot;&gt;// Check &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we need to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; a put.
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis() &amp;gt; lastPut + putDelay * 1) {
          lastPut = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis();
          countPut++;
          &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; key = &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.format(&lt;span class=&quot;code-quote&quot;&gt;&quot;%010d&quot;&lt;/span&gt;, random.nextInt(100000));
          Put put = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put(Bytes.toBytes(key));
          put.add(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;info&quot;&lt;/span&gt;), Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;data&quot;&lt;/span&gt;), Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;UUUUUUUUFFFFFFFFHHHHHHHHHHHHHHHHGGGGGGGGGGGGGGGGYYYYYYYYHHHHHHHHLLLLLLLLMMMMMMMMXXXXXXXXIIIIIIIIYYYYYYYYTTTTTTTTUUUUUUU&quot;&lt;/span&gt; +
                                                          &lt;span class=&quot;code-quote&quot;&gt;&quot;UUUUUUUUUPPPPPPPPGGGGGGGGLLLLLLLLZZZZZZZZZZZZZZZZOOOOOOOOLLLLLLLLKKKKKKKKMMMMMMMMOOOOOOOOHHHHHHHHRRRRRRRRPPPPPPPPPPPPPPPPEEEEEEEEWWWWWWWWLLLLLLLLRRRRRRRRVVVVVVVVKKKKKKK&quot;&lt;/span&gt; +
                                                          &lt;span class=&quot;code-quote&quot;&gt;&quot;KCCCCCCCCLLLLLLLLHHHHHHHHIIIIIIIIVVVVVVVVPPPPPPPPDDDDDDDDQQQQQQQQVVVVVVVVHHHHHHHHVVVVVVVVIIIIIIIIEEEEEEEEIIIIIIIIEEEEEEEEFFFFFFFFSSSSSSSSSSSSSSSSFFFFFFFFNNNNNNNNDDDDDDD&quot;&lt;/span&gt; +
                                                          &lt;span class=&quot;code-quote&quot;&gt;&quot;DJJJJJJJJQQQQQQQQWWWWWWWWXXXXXXXXWWWWWWWWZZZZZZZZAAAAAAAAZZZZZZZZGGGGGGGGIIIIIIIIXXXXXXXXZZZZZZZZDDDDDDDDQQQQQQQQYYYYYYYYJJJJJJJJSSSSSSSSHHHHHHHHQQQQQQQQWWWWWWWWIIIIIII&quot;&lt;/span&gt; +
                                                          &lt;span class=&quot;code-quote&quot;&gt;&quot;IMMMMMMMMCCCCCCCCMMMMMMMMMMMMMMMMOOOOOOOOVVVVVVVVYYYYYYYYQQQQQQQQCCCCCCCCQQQQQQQQTTTTTTTTTTTTTTTTCCCCCCCCXXXXXXXXSSSSSSSSHHHHHHHHOOOOOOOOWWWWWWWWFFFFFFFFLLLLLLLLYYYYYYY&quot;&lt;/span&gt; +
                                                          &lt;span class=&quot;code-quote&quot;&gt;&quot;YIIIIIIIIYYYYYYYYJJJJJJJJZZZZZZZZAAAAAAAAFFFFFFFFRRRRRRRRUUUUUUUURRRRRRRRRRRRRRRRKKKKKKKKSSSSSSSSRRRRRRRRIIIIIIIIEEEEEEEEIIIIIIIIOOOOOOOOCCCCCCCCGGGGGGGGLLLLLLLLWWWWWWW&quot;&lt;/span&gt; +
                                                          &lt;span class=&quot;code-quote&quot;&gt;&quot;WEEEEEEEEXXXXXXXXAAAAAAAAKKKKKKKKBBBBBBBB&quot;&lt;/span&gt;));
          table.put(put);
        }
        &lt;span class=&quot;code-comment&quot;&gt;// Check &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we need to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; a delete
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis() &amp;gt; lastDelete + deleteDelay * 1) {
          lastDelete = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis();
          countDelete++;
          &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; exist = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
          &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; key = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
          Get get = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
          &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!exist) {
            key = &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.format(&lt;span class=&quot;code-quote&quot;&gt;&quot;%010d&quot;&lt;/span&gt;, random.nextInt(100000));
            get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get(Bytes.toBytes(key));
            get.addColumn(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;info&quot;&lt;/span&gt;), Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;data&quot;&lt;/span&gt;));
            exist = table.exists(get);
          }
          Delete delete = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete (Bytes.toBytes(key));
          delete.deleteColumn(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;info&quot;&lt;/span&gt;), Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;data&quot;&lt;/span&gt;));
          table.delete(delete);
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!table.get(get).isEmpty()) {
            &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println ((&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis() - startTime) + &lt;span class=&quot;code-quote&quot;&gt;&quot; Doing a delete &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &quot;&lt;/span&gt; + key + &lt;span class=&quot;code-quote&quot;&gt;&quot; failed. Start to count&quot;&lt;/span&gt;);
            &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count = 1;
            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!table.get(get).isEmpty()) {
              table.delete(delete);
              count++;
            }
            &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println (&lt;span class=&quot;code-quote&quot;&gt;&quot;puts=&quot;&lt;/span&gt; + countPut + &lt;span class=&quot;code-quote&quot;&gt;&quot; deletes=&quot;&lt;/span&gt; + countDelete + &lt;span class=&quot;code-quote&quot;&gt;&quot; retries=&quot;&lt;/span&gt; + count);
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (count &amp;gt; 5) {
              table.close();
              &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.exit(0);
            }
          }
        }
      }
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
      e.printStackTrace();
    }
  }
}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13924430" author="jmspaggi" created="Fri, 7 Mar 2014 22:42:40 +0000"  >&lt;p&gt;I forgot to provide some details on the user cluster.&lt;/p&gt;

&lt;p&gt;They are running with 12 racks, for a total or 110 region servers. All the servers are perfectly synchronized for the clock.&lt;/p&gt;

&lt;p&gt;They are running with 0.94.2, that&apos;s why I tried to reproduce with this version first.&lt;/p&gt;

&lt;p&gt;I ran my tests on a 4 node EC2 cluster, and a 8 node baremetal cluster.&lt;/p&gt;</comment>
                            <comment id="13924546" author="lhofhansl" created="Sat, 8 Mar 2014 00:20:07 +0000"  >&lt;p&gt;You sure you want to use deleteColumn (vs. deleteColumns)? Delete.deleteColumn will only target the current latest version of that column for deletion (as determined by the time the delete arrives at the server). Not only is this very expensive (a Get on the server just to find the last ts), it also only targets the very latest version.&lt;/p&gt;

&lt;p&gt;(I mentioned before that the Delete API is confusing. This reminds me, maybe there&apos;s time to fix it before 1.0.)&lt;/p&gt;</comment>
                            <comment id="13924594" author="jmspaggi" created="Sat, 8 Mar 2014 00:54:40 +0000"  >&lt;p&gt;deleteColums, deleteColumn, in both cases there is a get just before so it&apos;s already all in memory anyway. And this should not really change the delete feature, did it?&lt;/p&gt;

&lt;p&gt;If with deleteColumn, we should not be able to get the value we just delete, even more when we have to do that 6 time:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
6265955 Doing a delete &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 0000076369 failed. Start to count
puts=102899 deletes=2865 retries=6
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;No?&lt;/p&gt;</comment>
                            <comment id="13924607" author="lhofhansl" created="Sat, 8 Mar 2014 01:02:29 +0000"  >&lt;p&gt;Check the timestamps. You could have Put a newer version after you issued the Delete, or you might see an older version. Try with deleteColumns as that is what you want anyway.&lt;/p&gt;</comment>
                            <comment id="13924616" author="jmspaggi" created="Sat, 8 Mar 2014 01:09:21 +0000"  >&lt;p&gt;The puts and the gets are not done in parallel. They are done one after the other. So when I have to do 6 deletes to get the cell really deleted, there is nothing else writing to HBase at the same time. Only the puts and the gets. For me, even if it work with deleteColumns, I think there is still something wrong with deleteColumn.&lt;/p&gt;

&lt;p&gt;Oh! Except if there is multiple times the same cell written, so there is multiple version, and then when I try to delete it, I have to loop as many times as I have versions! Make total sense! &lt;/p&gt;

&lt;p&gt;I will run some more tests. But I think you are right... More to come.&lt;/p&gt;</comment>
                            <comment id="13924618" author="lhofhansl" created="Sat, 8 Mar 2014 01:12:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;Oh! Except if there is multiple times the same cell written, so there is multiple version, and then when I try to delete it, I have to loop as many times as I have versions! Make total sense! &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Bingo &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;You can do a &quot;raw&quot; scan from the shell (or Scan.setRaw(true)) to see what&apos;s really there, including the delete markers.&lt;/p&gt;</comment>
                            <comment id="13924664" author="jmspaggi" created="Sat, 8 Mar 2014 02:14:46 +0000"  >&lt;p&gt;Now, why is it working in 0.96.1.1 with deleteColumn? I will try to write a testcase for that to validate that it&apos;s behaving as expected... Will close this one. Thanks!&lt;/p&gt;</comment>
                            <comment id="13924725" author="lhofhansl" created="Sat, 8 Mar 2014 05:01:02 +0000"  >&lt;p&gt;0.96 and later default to VERSIONS=1, 0.94 and before to VERSIONS=3. That is probably the reason.&lt;/p&gt;</comment>
                            <comment id="13924826" author="jmspaggi" created="Sat, 8 Mar 2014 12:35:54 +0000"  >&lt;p&gt;Again, make sense &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 7 Mar 2014 22:23:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>377866</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 40 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1t407:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>378158</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>