<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:35:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6299/HBASE-6299.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6299] RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&apos;s region state and a series of successive problems</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6299</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;1. HMaster tries to assign a region to an RS.&lt;br/&gt;
2. HMaster creates a RegionState for this region and puts it into regionsInTransition.&lt;br/&gt;
3. In the first assign attempt, HMaster calls RS.openRegion(). The RS receives the open region request and starts to proceed, with success eventually. However, due to network problems, HMaster fails to receive the response for the openRegion() call, and the call times out.&lt;br/&gt;
4. HMaster attemps to assign for a second time, choosing another RS. &lt;br/&gt;
5. But since the HMaster&apos;s OpenedRegionHandler has been triggered by the region open of the previous RS, and the RegionState has already been removed from regionsInTransition, HMaster finds invalid and ignores the unassigned ZK node &quot;RS_ZK_REGION_OPENING&quot; updated by the second attempt.&lt;br/&gt;
6. The unassigned ZK node stays and a later unassign fails coz RS_ZK_REGION_CLOSING cannot be created.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2012-06-29 07:03:38,870 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Using pre-existing plan &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568.; plan=hri=CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568., src=swbss-hadoop-004,60020,1340890123243, dest=swbss-hadoop-006,60020,1340890678078
2012-06-29 07:03:38,870 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Assigning region CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568. to swbss-hadoop-006,60020,1340890678078
2012-06-29 07:03:38,870 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Handling transition=M_ZK_REGION_OFFLINE, server=swbss-hadoop-002:60000, region=b713fd655fa02395496c5a6e39ddf568
2012-06-29 07:06:28,882 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Handling transition=RS_ZK_REGION_OPENING, server=swbss-hadoop-006,60020,1340890678078, region=b713fd655fa02395496c5a6e39ddf568
2012-06-29 07:06:32,291 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Handling transition=RS_ZK_REGION_OPENING, server=swbss-hadoop-006,60020,1340890678078, region=b713fd655fa02395496c5a6e39ddf568
2012-06-29 07:06:32,299 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Handling transition=RS_ZK_REGION_OPENED, server=swbss-hadoop-006,60020,1340890678078, region=b713fd655fa02395496c5a6e39ddf568
2012-06-29 07:06:32,299 DEBUG org.apache.hadoop.hbase.master.handler.OpenedRegionHandler: Handling OPENED event &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568. from serverName=swbss-hadoop-006,60020,1340890678078, load=(requests=518945, regions=575, usedHeap=15282, maxHeap=31301); deleting unassigned node
2012-06-29 07:06:32,299 DEBUG org.apache.hadoop.hbase.zookeeper.ZKAssign: master:60000-0x2377fee2ae80007 Deleting existing unassigned node &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; b713fd655fa02395496c5a6e39ddf568 that is in expected state RS_ZK_REGION_OPENED
2012-06-29 07:06:32,301 DEBUG org.apache.hadoop.hbase.zookeeper.ZKAssign: master:60000-0x2377fee2ae80007 Successfully deleted unassigned node &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region b713fd655fa02395496c5a6e39ddf568 in expected state RS_ZK_REGION_OPENED
2012-06-29 07:06:32,301 DEBUG org.apache.hadoop.hbase.master.handler.OpenedRegionHandler: The master has opened the region CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568. that was online on serverName=swbss-hadoop-006,60020,1340890678078, load=(requests=518945, regions=575, usedHeap=15282, maxHeap=31301)
2012-06-29 07:07:41,140 WARN org.apache.hadoop.hbase.master.AssignmentManager: Failed assignment of CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568. to serverName=swbss-hadoop-006,60020,1340890678078, load=(requests=0, regions=575, usedHeap=0, maxHeap=0), trying to assign elsewhere instead; retry=0
java.net.SocketTimeoutException: Call to /172.16.0.6:60020 failed on socket timeout exception: java.net.SocketTimeoutException: 120000 millis timeout &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; channel to be ready &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; read. ch : java.nio.channels.SocketChannel[connected local=/172.16.0.2:53765 remote=/172.16.0.6:60020]
        at org.apache.hadoop.hbase.ipc.HBaseClient.wrapException(HBaseClient.java:805)
        at org.apache.hadoop.hbase.ipc.HBaseClient.call(HBaseClient.java:778)
        at org.apache.hadoop.hbase.ipc.HBaseRPC$Invoker.invoke(HBaseRPC.java:283)
        at $Proxy8.openRegion(Unknown Source)
        at org.apache.hadoop.hbase.master.ServerManager.sendRegionOpen(ServerManager.java:573)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign(AssignmentManager.java:1127)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign(AssignmentManager.java:912)
        at org.apache.hadoop.hbase.master.AssignmentManager.assign(AssignmentManager.java:892)
        at org.apache.hadoop.hbase.master.handler.ClosedRegionHandler.process(ClosedRegionHandler.java:92)
        at org.apache.hadoop.hbase.executor.EventHandler.run(EventHandler.java:162)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:662)
Caused by: java.net.SocketTimeoutException: 120000 millis timeout &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; channel to be ready &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; read. ch : java.nio.channels.SocketChannel[connected local=/172.16.0.2:53765 remote=/172.16.0.6:60020]
        at org.apache.hadoop.net.SocketIOWithTimeout.doIO(SocketIOWithTimeout.java:164)
        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:155)
        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:128)
        at java.io.FilterInputStream.read(FilterInputStream.java:116)
        at org.apache.hadoop.hbase.ipc.HBaseClient$Connection$PingInputStream.read(HBaseClient.java:301)
        at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:237)
        at java.io.DataInputStream.readInt(DataInputStream.java:370)
        at org.apache.hadoop.hbase.ipc.HBaseClient$Connection.receiveResponse(HBaseClient.java:541)
        at org.apache.hadoop.hbase.ipc.HBaseClient$Connection.run(HBaseClient.java:479)
2012-06-29 07:07:41,142 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: No previous transition plan was found (or we are ignoring an existing plan) &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568. so generated a random one; hri=CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568., src=, dest=swbss-hadoop-164,60020,1340888346294; 15 (online=15, exclude=serverName=swbss-hadoop-006,60020,1340890678078, load=(requests=0, regions=575, usedHeap=0, maxHeap=0)) available servers
2012-06-29 07:07:41,142 DEBUG org.apache.hadoop.hbase.zookeeper.ZKAssign: master:60000-0x2377fee2ae80007 Creating (or updating) unassigned node &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; b713fd655fa02395496c5a6e39ddf568 with OFFLINE state
2012-06-29 07:07:41,145 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Using pre-existing plan &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568.; plan=hri=CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568., src=, dest=swbss-hadoop-164,60020,1340888346294
2012-06-29 07:07:41,145 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Assigning region CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568. to swbss-hadoop-164,60020,1340888346294
2012-06-29 07:07:41,149 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Handling transition=RS_ZK_REGION_OPENING, server=swbss-hadoop-164,60020,1340888346294, region=b713fd655fa02395496c5a6e39ddf568
2012-06-29 07:07:41,150 WARN org.apache.hadoop.hbase.master.AssignmentManager: Received OPENING &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region b713fd655fa02395496c5a6e39ddf568 from server swbss-hadoop-164,60020,1340888346294 but region was in  the state &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; and not in expected PENDING_OPEN or OPENING states
2012-06-29 07:07:41,296 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Handling transition=RS_ZK_REGION_OPENING, server=swbss-hadoop-164,60020,1340888346294, region=b713fd655fa02395496c5a6e39ddf568
2012-06-29 07:07:41,296 WARN org.apache.hadoop.hbase.master.AssignmentManager: Received OPENING &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region b713fd655fa02395496c5a6e39ddf568 from server swbss-hadoop-164,60020,1340888346294 but region was in  the state &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; and not in expected PENDING_OPEN or OPENING states
2012-06-29 07:07:41,302 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Handling transition=RS_ZK_REGION_OPENED, server=swbss-hadoop-164,60020,1340888346294, region=b713fd655fa02395496c5a6e39ddf568
2012-06-29 07:07:41,302 WARN org.apache.hadoop.hbase.master.AssignmentManager: Received OPENED &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region b713fd655fa02395496c5a6e39ddf568 from server swbss-hadoop-164,60020,1340888346294 but region was in  the state &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; and not in expected PENDING_OPEN or OPENING states
2012-06-29 07:08:38,872 INFO org.apache.hadoop.hbase.master.HMaster: balance hri=CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568., src=swbss-hadoop-006,60020,1340890678078, dest=swbss-hadoop-008,60020,1340891085175
2012-06-29 07:08:38,872 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Starting unassignment of region CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568. (offlining)
2012-06-29 07:08:47,875 DEBUG org.apache.hadoop.hbase.master.AssignmentManager: Sent CLOSE to serverName=swbss-hadoop-006,60020,1340890678078, load=(requests=0, regions=0, usedHeap=0, maxHeap=0) &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568.
...
2012-06-29 08:04:37,681 INFO org.apache.hadoop.hbase.master.AssignmentManager: Regions in transition timed out:  CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568. state=PENDING_CLOSE, ts=1340926468331, server=&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
2012-06-29 08:04:37,681 INFO org.apache.hadoop.hbase.master.AssignmentManager: Region has been PENDING_CLOSE &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; too &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;, running forced unassign again on region=CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568.
2012-06-29 08:04:47,681 INFO org.apache.hadoop.hbase.master.AssignmentManager: Regions in transition timed out:  CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568. state=PENDING_CLOSE, ts=1340926468331, server=&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
2012-06-29 08:04:47,682 INFO org.apache.hadoop.hbase.master.AssignmentManager: Region has been PENDING_CLOSE &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; too &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;, running forced unassign again on region=CDR_STATS_TRAFFIC,13184390567|20120508|17||2|3|913,1337256975556.b713fd655fa02395496c5a6e39ddf568.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</description>
                <environment></environment>
        <key id="12596526">HBASE-6299</key>
            <summary>RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&apos;s region state and a series of successive problems</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="maryannxue">Maryann Xue</assignee>
                                    <reporter username="maryannxue">Maryann Xue</reporter>
                        <labels>
                    </labels>
                <created>Sun, 1 Jul 2012 05:07:05 +0000</created>
                <updated>Sun, 7 Apr 2013 04:36:34 +0000</updated>
                            <resolved>Mon, 1 Oct 2012 21:22:18 +0000</resolved>
                                    <version>0.90.6</version>
                    <version>0.94.0</version>
                                    <fixVersion>0.94.2</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13404682" author="maryannxue" created="Sun, 1 Jul 2012 05:13:39 +0000"  >&lt;p&gt;Think a good option can be checking if the region has been assigned successfully already when dealing with the RPC failure, so that there is no need to start another attempt.&lt;/p&gt;</comment>
                            <comment id="13404906" author="maryannxue" created="Mon, 2 Jul 2012 06:34:29 +0000"  >&lt;p&gt;Add handling of SocketTimeoutException in assign().&lt;br/&gt;
1. return if region is already opened on this RS.&lt;br/&gt;
2. try assigning on the same RS again otherwise.&lt;/p&gt;</comment>
                            <comment id="13404918" author="hadoopqa" created="Mon, 2 Jul 2012 07:29:34 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12534181/HBASE-6299.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12534181/HBASE-6299.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestSplitLogManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2308//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2308//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2308//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2308//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2308//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2308//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2308//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2308//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13405044" author="stack" created="Mon, 2 Jul 2012 12:51:22 +0000"  >&lt;p&gt;Good stuff Maryann.&lt;/p&gt;

&lt;p&gt;Your patch looks good as bandaid till we figure means of regionservers signaling the master they are working on a region if its taking &amp;gt; socket timeout to open a region.&lt;/p&gt;

&lt;p&gt;I notice in the regionserver though that if we send over an open on a region its already opening, it does the following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void checkIfRegionInTransition(HRegionInfo region,
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; currentAction) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; RegionAlreadyInTransitionException {
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] encodedName = region.getEncodedNameAsBytes();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.containsKey(encodedName)) {
      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; openAction = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransitionInRS.get(encodedName);
      &lt;span class=&quot;code-comment&quot;&gt;// The below exception message will be used in master.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegionAlreadyInTransitionException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Received:&quot;&lt;/span&gt; + currentAction +
        &lt;span class=&quot;code-quote&quot;&gt;&quot; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the region:&quot;&lt;/span&gt; + region.getRegionNameAsString() +
        &lt;span class=&quot;code-quote&quot;&gt;&quot; ,which we are already trying to &quot;&lt;/span&gt; +
        (openAction ? OPEN : CLOSE)+ &lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt;);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;i.e. it throws a RegionAlreadyInTransitionException to avoid queuing another open.... which if I follow things properly will result in:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unable to communicate with the region server in order&quot;&lt;/span&gt; +
          &lt;span class=&quot;code-quote&quot;&gt;&quot; to assign regions&quot;&lt;/span&gt;, e);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... and our just exiting the open.&lt;/p&gt;

&lt;p&gt;The region open will just carry on until it succeeds or until the timeout monitor monitor kicks in and assigns it elsewhere.&lt;/p&gt;

&lt;p&gt;Should your patch handle this case and perhaps give out a nicer message than the above?&lt;/p&gt;</comment>
                            <comment id="13405459" author="maryannxue" created="Tue, 3 Jul 2012 00:06:11 +0000"  >&lt;p&gt;stack, thank you for pointing this out. I was thinking the innermost assign() would handle RegionAlreadyInTransitionException and return, in the code block as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; RemoteException) {
          t = ((RemoteException) t).unwrapRemoteException();
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; RegionAlreadyInTransitionException) {
            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; errorMsg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Failed assignment in: &quot;&lt;/span&gt; + plan.getDestination()
                + &lt;span class=&quot;code-quote&quot;&gt;&quot; due to &quot;&lt;/span&gt; + t.getMessage();
            LOG.error(errorMsg, t);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
          }
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I just looked again at HRegionServer.openRegion(), and found that RegionAlreadyInTransitionException is wrapped as ServiceException:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (RegionAlreadyInTransitionException rie) {
        LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Region is already in transition&quot;&lt;/span&gt;, rie);
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isBulkAssign) {
          builder.addOpeningState(RegionOpeningState.OPENED);
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
          &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ServiceException(rie);
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But i don&apos;t see why in assign() HMaster does not unwrap RemoteException and then ServiceException as well. And since RegionAlreadyInTransitionException is always wrapped, i don&apos;t see at what situation the first code block will be called.&lt;/p&gt;

&lt;p&gt;I might be missing something or need a closer look?&lt;/p&gt;</comment>
                            <comment id="13405497" author="zhihyu@ebaysf.com" created="Tue, 3 Jul 2012 02:28:09 +0000"  >&lt;p&gt;@Maryann:&lt;br/&gt;
Take a look at ServerManager.sendRegionOpen():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      OpenRegionResponse response = admin.openRegion(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, request);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; ResponseConverter.getRegionOpeningState(response);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (ServiceException se) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; ProtobufUtil.getRemoteException(se);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13405507" author="maryannxue" created="Tue, 3 Jul 2012 02:47:25 +0000"  >&lt;p&gt;Thank you, Zhihong! then i suppose the exception handling should be modified as:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; RegionAlreadyInTransitionException) {
            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; errorMsg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Failed assignment in: &quot;&lt;/span&gt; + plan.getDestination()
                + &lt;span class=&quot;code-quote&quot;&gt;&quot; due to &quot;&lt;/span&gt; + t.getMessage();
            LOG.error(errorMsg, t);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13405511" author="zhihyu@ebaysf.com" created="Tue, 3 Jul 2012 02:54:26 +0000"  >&lt;p&gt;What version of HBase did you use when you collected the log in the body of this JIRA ?&lt;/p&gt;</comment>
                            <comment id="13405582" author="maryannxue" created="Tue, 3 Jul 2012 03:26:12 +0000"  >&lt;p&gt;it happened on a 0.90 cluster. and i checked trunk code and assume the issue still exists.&lt;/p&gt;</comment>
                            <comment id="13406305" author="stack" created="Wed, 4 Jul 2012 06:48:21 +0000"  >&lt;p&gt;It looks to me like we have same issue in trunk.  Your suggested fix looks right Maryann.  Put up a patch and I&apos;ll have a go at making a unit test for it.&lt;/p&gt;</comment>
                            <comment id="13406328" author="maryannxue" created="Wed, 4 Jul 2012 07:23:59 +0000"  >&lt;p&gt;Make handling of RegionAlreadyInTransitionException work.&lt;/p&gt;</comment>
                            <comment id="13406476" author="ram_krish" created="Wed, 4 Jul 2012 12:27:37 +0000"  >&lt;p&gt;@Maryann&lt;br/&gt;
We just checked over here in 0.94.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; RegionAlreadyInTransitionException) {
            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; errorMsg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Failed assignment in: &quot;&lt;/span&gt; + plan.getDestination()
                + &lt;span class=&quot;code-quote&quot;&gt;&quot; due to &quot;&lt;/span&gt; + t.getMessage();
            LOG.error(errorMsg, t);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This piece of code is correct.  If we directly check instancof it doesn&apos;t match.  Thanks..&lt;/p&gt;</comment>
                            <comment id="13406533" author="stack" created="Wed, 4 Jul 2012 13:52:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;This piece of code is correct. If we directly check instancof it doesn&apos;t match. Thanks..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is it correct or incorrect Ram?  I&apos;m not sure going by the above.&lt;/p&gt;</comment>
                            <comment id="13406594" author="ram_krish" created="Wed, 4 Jul 2012 15:39:38 +0000"  >&lt;p&gt;Am very sorry for not making it clear.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; RegionAlreadyInTransitionException) {
            &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; errorMsg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Failed assignment in: &quot;&lt;/span&gt; + plan.getDestination()
                + &lt;span class=&quot;code-quote&quot;&gt;&quot; due to &quot;&lt;/span&gt; + t.getMessage();
            LOG.error(errorMsg, t);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above piece of code is correct.  The RegionAlreadyInTransition is of type RemoteException.  So we need to unwrap it.  &lt;br/&gt;
In the current patch &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; RegionAlreadyInTransitionException) {
+          &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; errorMsg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Failed assignment in: &quot;&lt;/span&gt; + plan.getDestination()
+              + &lt;span class=&quot;code-quote&quot;&gt;&quot; due to &quot;&lt;/span&gt; + t.getMessage();
+          LOG.error(errorMsg, t);
+          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is done.  It will not work.  We just did a small verification of this.  &lt;/p&gt;</comment>
                            <comment id="13406735" author="hadoopqa" created="Wed, 4 Jul 2012 20:44:43 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12535045/HBASE-6299-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12535045/HBASE-6299-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestForceCacheImportantBlocks&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2318//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2318//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2318//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2318//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2318//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2318//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2318//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2318//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13406838" author="ram_krish" created="Thu, 5 Jul 2012 04:26:05 +0000"  >&lt;p&gt;@Maryann/Stack&lt;br/&gt;
I can tell one scenario where this patch will lead to inconsistency.  &lt;br/&gt;
In the patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+            &lt;span class=&quot;code-comment&quot;&gt;// The destination region server is probably processing the region open, so it
&lt;/span&gt;+            &lt;span class=&quot;code-comment&quot;&gt;// might be safer to &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; region server again to avoid having two region
&lt;/span&gt;+            &lt;span class=&quot;code-comment&quot;&gt;// servers open the same region.
&lt;/span&gt;+            LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Call openRegion() to &quot;&lt;/span&gt; + plan.getDestination() +
+                &lt;span class=&quot;code-quote&quot;&gt;&quot; has timed out when trying to assign &quot;&lt;/span&gt; + region.getRegionNameAsString() +
+                &lt;span class=&quot;code-quote&quot;&gt;&quot;. Trying to assign to &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; region server again; retry=&quot;&lt;/span&gt; + i, t);
+            state.update(RegionState.State.OFFLINE);
+            &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
+          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now because the RS is already opening i tend to assign it to same RS and i update the inmemory state to OFFLINE.  At that time the RS has moved the znode from OFFLINE to OPENING or OPENINIG to OPENED.  Now there is a check in handleRegion&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (regionState == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ||
              (!regionState.isPendingOpen() &amp;amp;&amp;amp; !regionState.isOpening())) {
            LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Received OPENING &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region &quot;&lt;/span&gt; +
                prettyPrintedRegionName +
                &lt;span class=&quot;code-quote&quot;&gt;&quot; from server &quot;&lt;/span&gt; + data.getOrigin() + &lt;span class=&quot;code-quote&quot;&gt;&quot; but region was in &quot;&lt;/span&gt; +
                &lt;span class=&quot;code-quote&quot;&gt;&quot; the state &quot;&lt;/span&gt; + regionState + &lt;span class=&quot;code-quote&quot;&gt;&quot; and not &quot;&lt;/span&gt; +
                &lt;span class=&quot;code-quote&quot;&gt;&quot;in expected PENDING_OPEN or OPENING states&quot;&lt;/span&gt;);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So the master skips the transition.  Now any way as we are trying out the assignment to same RS, we will either get RegionAlreadyInTransistion or sometimes even ALREADY_OPENED.&lt;br/&gt;
If i get ALREADY_OPENED we are handling it correctly by adding to this.regions.  &lt;br/&gt;
But if i get RegionAlreadyInTransistion  we just skip the assign next time.  Now in the RS side the region could have been made online by this time but the master is not aware of this.&lt;/p&gt;

&lt;p&gt;One more thing is &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; java.net.SocketTimeoutException) {
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransition.get(region.getEncodedName()) == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
+              &amp;amp;&amp;amp; plan.getDestination().equals(getRegionServerOfRegion(region))) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here the plan could be cleared on regionOnline if RIT is cleared?&lt;/p&gt;

&lt;p&gt;Ideally over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6060&quot; title=&quot;Regions&amp;#39;s in OPENING state from failed regionservers takes a long time to recover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6060&quot;&gt;&lt;del&gt;HBASE-6060&lt;/del&gt;&lt;/a&gt; we were trying to see how good is the retry option in assign. Sometimes the retry option and SSH were causing double assignments which we were trying to solve.&lt;br/&gt;
Here, Can we have an option to shutdown the RS incase of sockettimeout by the master so that atleast we are sure that the SSH will take care of ssignment?&lt;/p&gt;

</comment>
                            <comment id="13406862" author="maryannxue" created="Thu, 5 Jul 2012 05:41:36 +0000"  >&lt;p&gt;Agree, ramkrishna! You&apos;ve made a good point here. My original idea was to directly return in the &quot;else&quot; branch, and leave it to the TimeoutMonitor to assign this region if the RS did not open the region. I changed to the current version, thinking to bring the assign retrial earlier. But regarding the region in transition problem you pointed out, the original &quot;return&quot; solution looks better.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+            &lt;span class=&quot;code-comment&quot;&gt;// The destination region server is probably processing the region open, so it
&lt;/span&gt;+            &lt;span class=&quot;code-comment&quot;&gt;// might be safer to &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; region server again to avoid having two region
&lt;/span&gt;+            &lt;span class=&quot;code-comment&quot;&gt;// servers open the same region.
&lt;/span&gt;+            LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Call openRegion() to &quot;&lt;/span&gt; + plan.getDestination() +
+                &lt;span class=&quot;code-quote&quot;&gt;&quot; has timed out when trying to assign &quot;&lt;/span&gt; + region.getRegionNameAsString() +
+                &lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt;, t);
+            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
+          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And if we are considering removing the assign retry in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6060&quot; title=&quot;Regions&amp;#39;s in OPENING state from failed regionservers takes a long time to recover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6060&quot;&gt;&lt;del&gt;HBASE-6060&lt;/del&gt;&lt;/a&gt;, problems like this one and the one in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5816&quot; title=&quot;Balancer and ServerShutdownHandler concurrently reassign the same region&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5816&quot;&gt;&lt;del&gt;HBASE-5816&lt;/del&gt;&lt;/a&gt; can be avoided.&lt;br/&gt;
Think triggering SSH in case of SocketTimeout should be a different problem. There are several places in HMaster where we should consider whether to start SSH, but currently only RegionServerTracker will start SSH. Shall we open another JIRA entry to discuss this issue?&lt;/p&gt;</comment>
                            <comment id="13406863" author="ram_krish" created="Thu, 5 Jul 2012 05:45:53 +0000"  >&lt;p&gt;@Maryann&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;And if we are considering removing the assign retry in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6060&quot; title=&quot;Regions&amp;#39;s in OPENING state from failed regionservers takes a long time to recover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6060&quot;&gt;&lt;del&gt;HBASE-6060&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Assign retry was a point discussed over there, but still not concluded on removing it.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Shall we open another JIRA entry to discuss this issue?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes...sure...Stack, Jon and others have started to work on issues related to Assignments recently.  &lt;/p&gt;</comment>
                            <comment id="13406888" author="stack" created="Thu, 5 Jul 2012 07:19:32 +0000"  >&lt;p&gt;You are right Ram.  Good one.&lt;/p&gt;

&lt;p&gt;So we should not set RegionState back to OFFLINE in this case; just update the time on it... if it has not been changed.&lt;/p&gt;

&lt;p&gt;Shutdown of RS seems extreme on socket timeout.  Hopefully we don&apos;t have to do that.  In particular, I&apos;m thinking socket timeout could be easy when we give regionserver a bulk assign and cluster is busy.&lt;/p&gt;</comment>
                            <comment id="13406900" author="maryannxue" created="Thu, 5 Jul 2012 08:01:36 +0000"  >&lt;p&gt;@stack but assign() checks RegionState OFFLINE at the beginning of each attempt, and not setting it OFFLINE might cause master to abort, as in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5816&quot; title=&quot;Balancer and ServerShutdownHandler concurrently reassign the same region&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5816&quot;&gt;&lt;del&gt;HBASE-5816&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.maximumAssignmentAttempts; i++) {
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; versionOfOfflineNode = -1;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (setOfflineInZK) {
        &lt;span class=&quot;code-comment&quot;&gt;// get the version of the znode after setting it to OFFLINE.
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// versionOfOfflineNode will be -1 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the znode was not set to OFFLINE
&lt;/span&gt;        versionOfOfflineNode = setOfflineInZooKeeper(state, hijack);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; setOfflineInZooKeeper(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; RegionState state,
      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hijack) {
    &lt;span class=&quot;code-comment&quot;&gt;// In &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; of reassignment the current state in memory need not be
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// OFFLINE. 
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!hijack &amp;amp;&amp;amp; !state.isClosed() &amp;amp;&amp;amp; !state.isOffline()) {
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; msg = &lt;span class=&quot;code-quote&quot;&gt;&quot;Unexpected state : &quot;&lt;/span&gt; + state + &lt;span class=&quot;code-quote&quot;&gt;&quot; .. Cannot transit it to OFFLINE.&quot;&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.master.abort(msg, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(msg));
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; -1;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13407100" author="stack" created="Thu, 5 Jul 2012 13:46:30 +0000"  >&lt;p&gt;Retries shouldn&apos;t do that code path.  Dont&apos; you think?  We set it OFFLINE once.  If its other than OFFLINE, then we shouldn&apos;t be processing it?&lt;/p&gt;</comment>
                            <comment id="13407153" author="maryannxue" created="Thu, 5 Jul 2012 14:15:09 +0000"  >&lt;p&gt;Yes, agree! &lt;/p&gt;</comment>
                            <comment id="13407204" author="maryannxue" created="Thu, 5 Jul 2012 15:17:55 +0000"  >&lt;p&gt;And i&apos;m thinking to move this &quot;setOfflineInZK&quot; logic into forceRegionStateToOffline(). what do you think?&lt;/p&gt;</comment>
                            <comment id="13407513" author="stack" created="Thu, 5 Jul 2012 21:44:32 +0000"  >&lt;p&gt;Whatever you think Maryann.&lt;/p&gt;

&lt;p&gt;I can see us checking the znode version each time through the retries after first setting it to OFFLINE and abandoning the retries if the znode version has changed on us.&lt;/p&gt;

&lt;p&gt;When do we not have the setOfflineInZK set?  Seems odd not setting it OFFLINE.&lt;/p&gt;</comment>
                            <comment id="13411273" author="maryannxue" created="Wed, 11 Jul 2012 06:26:09 +0000"  >&lt;p&gt;Currently we don&apos;t check concurrent &quot;double&quot; assignment, while it can happen quite easily after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5396&quot; title=&quot;Handle the regions in regionPlans while processing ServerShutdownHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5396&quot;&gt;&lt;del&gt;HBASE-5396&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    RegionState state = addToRegionsInTransition(region,
        hijack);
    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (state) {
      assign(region, state, setOfflineInZK, forceNewPlan, hijack);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We now set RegionState OFFLINE in addToRegionsInTransition(), and set ZK node OFFLINE after we get into the critical section. Why don&apos;t we set these two OFFLINE together in addToRegionsInTransition() and after getting into the critical section check if RegionState is OFFLINE?&lt;/p&gt;

&lt;p&gt;And with &quot;double&quot; assignment, we go directly with assignment() without checking its current RegionState in addToRegionsInTransition() with calls forceRegionStateToOffline(). and forceRegionStateToOffline() simply &quot;force&quot; a RegionState Offline.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      RegionState state = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransition.get(encodedName);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (state == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        state = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegionState(region, RegionState.State.OFFLINE);
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionsInTransition.put(encodedName, state);
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;code-comment&quot;&gt;// If we are reassigning the node &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not force in-memory state to OFFLINE.
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// Based on the znode state we will decide &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; to change in-memory state to
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// OFFLINE or not. It will be done before setting znode to OFFLINE state.
&lt;/span&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// We often get here with state == CLOSED because ClosedRegionHandler will
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// assign on its tail as part of the handling of a region close.
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!hijack) {
          LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Forcing OFFLINE; was=&quot;&lt;/span&gt; + state);
          state.update(RegionState.State.OFFLINE);
        }
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With this piece of code, we normally see logs like &quot;Forcing OFFLINE; was=regionName state=CLOSED&quot; with load balance. but in &quot;double&quot; assignment, we can see &quot;Forcing OFFLINE; was=regionName state=OPEN&quot;. Should we ensure the state is CLOSED or OFFLINE before proceeding to assignment?&lt;/p&gt;</comment>
                            <comment id="13411462" author="stack" created="Wed, 11 Jul 2012 13:10:44 +0000"  >&lt;p&gt;@Mary Is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5396&quot; title=&quot;Handle the regions in regionPlans while processing ServerShutdownHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5396&quot;&gt;&lt;del&gt;HBASE-5396&lt;/del&gt;&lt;/a&gt; committed?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We now set RegionState OFFLINE in addToRegionsInTransition(), and set ZK node OFFLINE after we get into the critical section. Why don&apos;t we set these two OFFLINE together in addToRegionsInTransition() and after getting into the critical section check if RegionState is OFFLINE?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see after doing an OFFLINE to RIT, we&apos;ll then synchronize on the OFFLINE RegionState.  I&apos;m not sure what synchronize does.  I suppose it prevents double assign (bulk assign doesn&apos;t do any such sync)?  I&apos;m not sure what the lock on an encoded name String does in forceRegionStateToOffline does either?  I&apos;m not sure it actually works preventing our doing an forceRegionStateToOffline on same region at same time.&lt;/p&gt;

&lt;p&gt;I like the idea of trying to make the setting of in-memory OFFLINE state and zk state happen in the one place.  We&apos;d do it synchronously?  Or async and not move forward w/ the assign until we got the callback?  Or, should we distingush in-memory OFFLINE state from confirmed OFFLINE state that is also up in zk?&lt;/p&gt;

&lt;p&gt;I hate that &apos;hijack&apos; argument.  Somehow we&apos;re supposed to make these methods do the right thing but then also make it so all can be just overridden.&lt;/p&gt;</comment>
                            <comment id="13411466" author="stack" created="Wed, 11 Jul 2012 13:14:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m not sure what the lock on an encoded name String does in forceRegionStateToOffline does either?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ignore the above.  This should work.&lt;/p&gt;</comment>
                            <comment id="13412618" author="maryannxue" created="Thu, 12 Jul 2012 09:03:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m not sure what synchronize does. I suppose it prevents double assign&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The interesting thing is we check RegionState is OFFLINE or CLOSED before setting OFFLINE in zk and abort if the check fails; while we allow any RegionState before setting RegionState OFFLINE. And since this synchronize on RegionState does not guard the whole process (state change from PEND_OPEN to OPENED), double assignment is not prevented at all, though there&apos;s some check in setOfflineInZookeeper, but only when hijack=true.&lt;br/&gt;
So far i&apos;ve seen two error cases with double assign:&lt;br/&gt;
1. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5816&quot; title=&quot;Balancer and ServerShutdownHandler concurrently reassign the same region&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5816&quot;&gt;&lt;del&gt;HBASE-5816&lt;/del&gt;&lt;/a&gt;: The second assign comes in almost at the same time with the first assignment,but gets locked by sychronized(state). After the first assignment succeeds with sendRegionOpen() and exits the synchronized block, the second assignment goes into the block and calls setOfflineInZookeeper() which fails the &quot;RegionState Offline&quot; check and leads to master abort.&lt;br/&gt;
2. The second assignment kicks in after the first assignment succeeded and deleted the ZK node but before regionOnline() is called (which removes the region from AM.regionsInTransition and adds the region to AM.regions). The second assignment starts a normal assign process, setting RegionState OFFLINE, setting ZK OFFLINE, and calls sendRegionOpen() to the same dest RS. Then, when the first assignment calls AM.regionOnline(), this region get removed from AM.regionsInTranistion. This is a double assignment to the RS. if RS chooses to cleanUpFailedOpen() as in 0.90, this region will be served nowhere and does not even exist in master&apos;s regionsInTransition; if RS chooses to proceed on with openRegion() as in trunk, master will get RS events &quot;OPENING&quot;, &quot;OPENED&quot; related to NO RegionState, as in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6300&quot; title=&quot;Master should not ignore event RS_ZK_REGION_OPENED when regionState is null or unexpected.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6300&quot;&gt;HBASE-6300&lt;/a&gt;.&lt;br/&gt;
I can see we check if ZK node exists in setOfflineInZookeeper to prevent double assignment, but this check is only effective when hijack=true.&lt;br/&gt;
Is it possible that we can do something in an earlier stage to prevent double assignment? like in forceRegionStateToOffline()?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;@Mary Is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5396&quot; title=&quot;Handle the regions in regionPlans while processing ServerShutdownHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5396&quot;&gt;&lt;del&gt;HBASE-5396&lt;/del&gt;&lt;/a&gt; committed?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No... but explicitly calling assign() from HBaseAdmin can cause the same problem.&lt;/p&gt;</comment>
                            <comment id="13413772" author="stack" created="Fri, 13 Jul 2012 14:19:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is it possible that we can do something in an earlier stage to prevent double assignment? like in forceRegionStateToOffline()?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.  Lets try.  I was going to try and write up a reproduction of the bugs you describe above in a harness so can play with them in isolation rather than have to blow up someone&apos;s world.&lt;/p&gt;</comment>
                            <comment id="13448616" author="ram_krish" created="Wed, 5 Sep 2012 10:28:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=maryannxue&quot; class=&quot;user-hover&quot; rel=&quot;maryannxue&quot;&gt;Maryann Xue&lt;/a&gt;&lt;br/&gt;
You have any updated patch for this? Can we provide one updated patch for this issue ?&lt;/p&gt;</comment>
                            <comment id="13454835" author="maryannxue" created="Thu, 13 Sep 2012 11:53:57 +0000"  >&lt;p&gt;Considering a live RS would most likely eventually get to the openRegion() request and process, it might be good just to return on SocketTimeoutException, for SocketTimeoutException indicates an uncertain state in the assign process, with potential race conditions. And this can happen if a RS is temporarily running out of IPC handlers, or if the RS&apos;s response is lost on the line.&lt;/p&gt;</comment>
                            <comment id="13454840" author="maryannxue" created="Thu, 13 Sep 2012 11:56:52 +0000"  >&lt;p&gt;updated the patch as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6299&quot; title=&quot;RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&amp;#39;s region state and a series of successive problems&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6299&quot;&gt;&lt;del&gt;HBASE-6299&lt;/del&gt;&lt;/a&gt;-v3.patch&lt;/p&gt;</comment>
                            <comment id="13454869" author="hadoopqa" created="Thu, 13 Sep 2012 12:59:19 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12544974/HBASE-6299-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12544974/HBASE-6299-v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2857//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2857//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2857//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2857//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13454905" author="ram_krish" created="Thu, 13 Sep 2012 14:00:33 +0000"  >&lt;p&gt;@Maryann&lt;br/&gt;
Thanks for the patch.  This what we just discussed over in HBASe-6438.&lt;br/&gt;
Pls take a look at that patch also.  We could actually merge both if you feel it is fine and commit them once others review it.&lt;/p&gt;</comment>
                            <comment id="13454957" author="lhofhansl" created="Thu, 13 Sep 2012 15:35:03 +0000"  >&lt;p&gt;Do we still need to unwrap the exception?&lt;/p&gt;</comment>
                            <comment id="13454969" author="yuzhihong@gmail.com" created="Thu, 13 Sep 2012 16:05:54 +0000"  >&lt;p&gt;nit:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (t &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; java.net.SocketTimeoutException 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;else&apos; keyword is not needed above.&lt;/p&gt;</comment>
                            <comment id="13455550" author="maryannxue" created="Fri, 14 Sep 2012 03:00:38 +0000"  >&lt;p&gt;@Lars the original unwrap should not work.&lt;br/&gt;
@Ted please review the patch.&lt;br/&gt;
@ramkrishna How about we apply this fix first and then update the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6438&quot; title=&quot;RegionAlreadyInTransitionException needs to give more info to avoid assignment inconsistencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6438&quot;&gt;&lt;del&gt;HBASE-6438&lt;/del&gt;&lt;/a&gt;? for as i can see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6438&quot; title=&quot;RegionAlreadyInTransitionException needs to give more info to avoid assignment inconsistencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6438&quot;&gt;&lt;del&gt;HBASE-6438&lt;/del&gt;&lt;/a&gt; is about another problem but the patch includes my old fix.&lt;/p&gt;</comment>
                            <comment id="13455558" author="hadoopqa" created="Fri, 14 Sep 2012 03:46:02 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12545092/HBASE-6299-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12545092/HBASE-6299-v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2864//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2864//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2864//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2864//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13455581" author="ram_krish" created="Fri, 14 Sep 2012 05:14:51 +0000"  >&lt;p&gt;@Maryann&lt;br/&gt;
For Sockettimeout unwrap is not needed.  But for RITExcepiton we may need that.  As far as i have seen we need to unwrap the remote exception to know the actual exception. But SocketTimeOut does not come under that.  (Reason for this i have not digged in).&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13455591" author="maryannxue" created="Fri, 14 Sep 2012 06:02:30 +0000"  >&lt;p&gt;@ramkrishna, updated the patch. misunderstood the exception handling in HBaseClient. thank you for pointing this out!&lt;/p&gt;</comment>
                            <comment id="13455614" author="hadoopqa" created="Fri, 14 Sep 2012 06:56:00 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12545102/HBASE-6299-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12545102/HBASE-6299-v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2866//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2866//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2866//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2866//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13455923" author="yuzhihong@gmail.com" created="Fri, 14 Sep 2012 16:38:53 +0000"  >&lt;p&gt;@Maryann:&lt;br/&gt;
Latest patch looks good.&lt;/p&gt;

&lt;p&gt;In the future, please increase revision number for newer patches.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13456313" author="lhofhansl" created="Sat, 15 Sep 2012 04:47:00 +0000"  >&lt;p&gt;The unwrap not being needed for Sockettimeout makes sense, since it is actually a local exception at the client (&lt;b&gt;it&lt;/b&gt; timed out, rather than the server having some problem that it passed on).&lt;br/&gt;
Anyway, no longer an issue in v3 anyway.&lt;/p&gt;

&lt;p&gt;v3 looks good. +1&lt;/p&gt;</comment>
                            <comment id="13459082" author="stack" created="Wed, 19 Sep 2012 20:48:39 +0000"  >&lt;p&gt;+1 on this small, narrowly-scoped patch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Is this patch ok w/ you?&lt;/p&gt;</comment>
                            <comment id="13460202" author="ram_krish" created="Fri, 21 Sep 2012 04:43:02 +0000"  >&lt;p&gt;Yes Stack.  +1 on this.&lt;/p&gt;</comment>
                            <comment id="13460217" author="stack" created="Fri, 21 Sep 2012 05:12:12 +0000"  >&lt;p&gt;v3 rotted. Here is v4 which applies to trunk.  Is this in the right place MaryAnn?  Thanks.&lt;/p&gt;</comment>
                            <comment id="13460266" author="hadoopqa" created="Fri, 21 Sep 2012 06:26:05 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12546000/6299v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12546000/6299v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 139 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2912//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13460532" author="ram_krish" created="Fri, 21 Sep 2012 14:45:24 +0000"  >&lt;p&gt;There are some hanging tests in the hadoop QA build.&lt;br/&gt;
+1 on patch otherwise.&lt;/p&gt;</comment>
                            <comment id="13460705" author="stack" created="Fri, 21 Sep 2012 18:54:01 +0000"  >&lt;p&gt;Retry&lt;/p&gt;</comment>
                            <comment id="13460790" author="hadoopqa" created="Fri, 21 Sep 2012 20:05:39 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12546076/6299v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12546076/6299v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated 139 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2916//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13467205" author="stack" created="Mon, 1 Oct 2012 21:22:00 +0000"  >&lt;p&gt;Here is what I committed after running all unit tests locally.&lt;/p&gt;</comment>
                            <comment id="13467206" author="stack" created="Mon, 1 Oct 2012 21:22:18 +0000"  >&lt;p&gt;Committed to trunk.  Thanks for the patch Maryann.&lt;/p&gt;</comment>
                            <comment id="13467207" author="stack" created="Mon, 1 Oct 2012 21:23:42 +0000"  >&lt;p&gt;Committed to 0.94 too.&lt;/p&gt;</comment>
                            <comment id="13467279" author="hudson" created="Mon, 1 Oct 2012 22:55:44 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #501 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/501/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/501/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6299&quot; title=&quot;RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&amp;#39;s region state and a series of successive problems&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6299&quot;&gt;&lt;del&gt;HBASE-6299&lt;/del&gt;&lt;/a&gt; RS starts region open while fails ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&apos;s region state and a series of successive problems (Revision 1392620)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13467298" author="hudson" created="Mon, 1 Oct 2012 23:20:27 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #202 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/202/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/202/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6299&quot; title=&quot;RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&amp;#39;s region state and a series of successive problems&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6299&quot;&gt;&lt;del&gt;HBASE-6299&lt;/del&gt;&lt;/a&gt; RS starts region open while fails ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&apos;s region state and a series of successive problems (Revision 1392617)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13467330" author="hudson" created="Mon, 1 Oct 2012 23:42:30 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3401 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3401/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3401/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6299&quot; title=&quot;RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&amp;#39;s region state and a series of successive problems&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6299&quot;&gt;&lt;del&gt;HBASE-6299&lt;/del&gt;&lt;/a&gt; RS starts region open while fails ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&apos;s region state and a series of successive problems (Revision 1392617)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13467510" author="hudson" created="Tue, 2 Oct 2012 06:06:22 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #58 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/58/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/58/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6299&quot; title=&quot;RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&amp;#39;s region state and a series of successive problems&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6299&quot;&gt;&lt;del&gt;HBASE-6299&lt;/del&gt;&lt;/a&gt; RS starts region open while fails ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&apos;s region state and a series of successive problems (Revision 1392620)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13468126" author="yuzhihong@gmail.com" created="Tue, 2 Oct 2012 22:28:14 +0000"  >&lt;p&gt;Integrated to 0.92 as well.&lt;/p&gt;</comment>
                            <comment id="13468243" author="hudson" created="Wed, 3 Oct 2012 01:31:17 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #593 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/593/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/593/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6299&quot; title=&quot;RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&amp;#39;s region state and a series of successive problems&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6299&quot;&gt;&lt;del&gt;HBASE-6299&lt;/del&gt;&lt;/a&gt; RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&apos;s region state and a series of successive problems (Maryann) (Revision 1393217)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13469904" author="hudson" created="Fri, 5 Oct 2012 00:37:48 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #8 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/8/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/8/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6299&quot; title=&quot;RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&amp;#39;s region state and a series of successive problems&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6299&quot;&gt;&lt;del&gt;HBASE-6299&lt;/del&gt;&lt;/a&gt; RS starts region open while fails ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&apos;s region state and a series of successive problems (Revision 1392620)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13469982" author="hudson" created="Fri, 5 Oct 2012 02:59:33 +0000"  >&lt;p&gt;Integrated in HBase-0.92-security #143 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92-security/143/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92-security/143/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6299&quot; title=&quot;RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&amp;#39;s region state and a series of successive problems&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6299&quot;&gt;&lt;del&gt;HBASE-6299&lt;/del&gt;&lt;/a&gt; RS starting region open while failing ack to HMaster.sendRegionOpen() causes inconsistency in HMaster&apos;s region state and a series of successive problems (Maryann) (Revision 1393217)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13624642" author="stack" created="Sun, 7 Apr 2013 04:36:34 +0000"  >&lt;p&gt;Fix up after bulk move overwrote some 0.94.2 fix versions w/ 0.95.0 (Noticed by Lars Hofhansl)&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12596559">HBASE-6300</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12599720">HBASE-6438</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12547276" name="6299v4.txt" size="997" author="stack" created="Mon, 1 Oct 2012 21:22:00 +0000"/>
                            <attachment id="12546076" name="6299v4.txt" size="976" author="stack" created="Fri, 21 Sep 2012 18:54:01 +0000"/>
                            <attachment id="12546000" name="6299v4.txt" size="976" author="stack" created="Fri, 21 Sep 2012 05:12:12 +0000"/>
                            <attachment id="12535045" name="HBASE-6299-v2.patch" size="2295" author="maryannxue" created="Wed, 4 Jul 2012 07:23:59 +0000"/>
                            <attachment id="12545102" name="HBASE-6299-v3.patch" size="1052" author="maryannxue" created="Fri, 14 Sep 2012 06:02:30 +0000"/>
                            <attachment id="12534181" name="HBASE-6299.patch" size="1768" author="maryannxue" created="Mon, 2 Jul 2012 06:34:29 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 2 Jul 2012 07:29:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>241995</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 36 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02hqn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12475</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>