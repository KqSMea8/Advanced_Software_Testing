<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:02:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2531/HBASE-2531.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2531] 32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2531</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Kannan tripped over two regionnames that hashed the same:&lt;/p&gt;

&lt;p&gt;Here is code demo&apos;ing that his two names hash the same:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; org;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.util.Bytes;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.util.JenkinsHash;


&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class Testing {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; [] args) {
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(encodeRegionName(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;test1,6838000000,1273541236167&quot;&lt;/span&gt;)));
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(encodeRegionName(Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;test1,0520100000,1273541610201&quot;&lt;/span&gt;)));
  }

  /**
   * @param regionName
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the encodedName
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; encodeRegionName(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] regionName) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.abs(JenkinsHash.getInstance().hash(regionName, regionName.length, 0));
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Need new encoding mechanism.  Will need to migrate old regions to new schema.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12464206">HBASE-2531</key>
            <summary>32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kannanm">Kannan Muthukkaruppan</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                            <label>moved_from_0_20_5</label>
                    </labels>
                <created>Tue, 11 May 2010 05:30:19 +0000</created>
                <updated>Fri, 20 Nov 2015 12:42:26 +0000</updated>
                            <resolved>Tue, 1 Jun 2010 03:52:06 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12866066" author="stack" created="Tue, 11 May 2010 05:48:31 +0000"  >&lt;p&gt;After some discussion up on IRC &amp;#8211; todd, posix4e, jdcryans, kannan &amp;#8211; and thought was that UUID would make the most sense.&lt;/p&gt;</comment>
                            <comment id="12866069" author="stack" created="Tue, 11 May 2010 06:04:16 +0000"  >&lt;p&gt;This change would need to include runtime migration of old format to the new.&lt;/p&gt;</comment>
                            <comment id="12866241" author="kannanm" created="Tue, 11 May 2010 18:14:34 +0000"  >&lt;p&gt;Do we ever need to figure out the encoded name, given just the region name (&amp;lt;tablename&amp;gt;, &amp;lt;startkey&amp;gt;, &amp;lt;timestamp&amp;gt;)?&lt;/p&gt;

&lt;p&gt;If not, and say, we go with UUIDs to generate future encoded names, then is there any work needed to done for migration at all? &lt;/p&gt;

&lt;p&gt;After an upgrade, for a period, there&apos;ll be a mix of old and new format of encoded names, and when splits etc. happens and old region go away, gradually the system should only be left with new format names.&lt;/p&gt;</comment>
                            <comment id="12866265" author="dhruba" created="Tue, 11 May 2010 18:37:36 +0000"  >&lt;p&gt;Please allow me to interject myself in this conversation.&lt;/p&gt;

&lt;p&gt;It appears that UUID proposal will work. However, it always leaves the possibility of data corruption open. In the rare case when you might run two region servers on the same machine (if ever!), then we might get a chance of UUID collision, especially for a workload when region splitting occurs v frequently. The UUID approach also seems to imply that some sort of &quot;migration of old format to new format&quot; is required.&lt;/p&gt;

&lt;p&gt;Isn&apos;t it more elegant and easier if we do the following: &quot;when a region server splits a region it needs to create a new name, It can come up with a random number as it currently does and then try to create a znode in zookeeper with that name, if it already exists, then the region server can generate a new name. if the znode does not exist, then it will create the znode before creating the new region with the region name. will that work?&quot; This will let us avoid any need for &quot;migration&quot; while preventing any possibility of uuid collisions.&lt;/p&gt;</comment>
                            <comment id="12866277" author="tlipcon" created="Tue, 11 May 2010 18:56:58 +0000"  >&lt;p&gt;dhruba: I had suggested a similar thing on IRC last night, and people seemed to think that UUID would be easier to implement. The chances of multiple UUIDs generated in the same nanotime on the same machine seems pretty small, no?&lt;/p&gt;</comment>
                            <comment id="12866294" author="dhruba" created="Tue, 11 May 2010 19:35:31 +0000"  >&lt;p&gt;I agree that the &quot;chance of UUID collision is low&quot;. But is it really true (especially if this needs a &quot;migration&quot; as described in earlier comments in this JIRA) that the ZK approach is harder/complex to implement?&lt;/p&gt;</comment>
                            <comment id="12866351" author="kannanm" created="Tue, 11 May 2010 21:34:45 +0000"  >&lt;p&gt;Literature online seems to suggest that version 1 (timestamp based UUIDs) are unique for all practical purposes.  &lt;span class=&quot;error&quot;&gt;&amp;#91;Also read that &amp;lt;&amp;lt;If two UUIDs are generated in sequence fast enough that the timestamp matches the previous UUID, the timestamp is incremented by 1.&amp;gt;&amp;gt;&amp;#93;&lt;/span&gt;. &lt;/p&gt;

&lt;p&gt;Some references: &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/703035/when-are-you-truly-forced-to-use-uuid-as-part-of-the-design&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/703035/when-are-you-truly-forced-to-use-uuid-as-part-of-the-design&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://blogs.msdn.com/oldnewthing/archive/2008/06/27/8659071.aspx&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blogs.msdn.com/oldnewthing/archive/2008/06/27/8659071.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Re: migration, in a ZK based approach, wouldn&apos;t moving the pre-existing list of encoded region names to ZK require some work?&lt;/p&gt;

&lt;p&gt;For UUID based approach, it seems like there shouldn&apos;t really be any migration work. Stack: can you confirm?&lt;/p&gt;

&lt;p&gt;I&lt;/p&gt;</comment>
                            <comment id="12866800" author="stack" created="Wed, 12 May 2010 23:48:13 +0000"  >&lt;p&gt;Bulk move of 0.20.5 issues into 0.21.0 after vote that we merge branch into TRUNK up on list.&lt;/p&gt;</comment>
                            <comment id="12868467" author="kannanm" created="Tue, 18 May 2010 00:36:35 +0000"  >&lt;p&gt;Stack: Pinging regarding my question on what migration work would be needed? (See my update @ 11/May/10 02:14 PM).&lt;/p&gt;</comment>
                            <comment id="12868534" author="stack" created="Tue, 18 May 2010 05:10:37 +0000"  >&lt;p&gt;@Kannan As I see it, we just need to make sure that the system can work with both styles of naming; that it reads in the old stuff without issue and that at same time, for any new region created, we should use the UUID form writing new region directory names.  Somehow, we also need to drop this notion of encoding the region name.  Going forward it will not be needed since the UUID will actually be part of the region name.&lt;/p&gt;

&lt;p&gt;I agree that getting zk in the mix or even hdfs for that matter making region dirctory names complicates something that could be real simple if we use UUIDs.&lt;/p&gt;</comment>
                            <comment id="12868543" author="dhruba" created="Tue, 18 May 2010 05:58:14 +0000"  >&lt;p&gt;&amp;gt; Going forward it will not be needed since the UUID will actually be part of the region name.&lt;/p&gt;

&lt;p&gt;@Stack, thanks for the info.  If the UUD is part of the regionname, then does this mean that nothing needs to be done for this JIRA? If that is not the case and we want to do somethinkg for this JIRS, can you pl explain what needs to be done? Thanks.&lt;/p&gt;</comment>
                            <comment id="12868891" author="stack" created="Tue, 18 May 2010 23:19:51 +0000"  >&lt;p&gt;@Dhruba&lt;/p&gt;

&lt;p&gt;Some good stuff related to this issue came up on IRC this afternoon.  In particular, we probably want region names to sort such that children of splits are inserted after their parent.  One of the childs of a split will have same startkey as the parent, the one that is carrying the lower range of the split.  The only differentiator is the 3rd part of the regionname where regionnames are formatted as&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;tablename&amp;gt; &apos;,&apos; &amp;lt;startkey&amp;gt; &apos;,&apos; &amp;lt;timestamp&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;.... and since it currently timestamp, the child will go into META after the parent (Things should still work even if child goes in before parent but of that I&apos;m not certain).&lt;/p&gt;

&lt;p&gt;So, we probably want to keep this attribute of regionnames.&lt;/p&gt;

&lt;p&gt;This would seem to rule out UUID as the 3rd component of regionnames since they are effectively &apos;random&apos; (version 1 was time-based but as Kannan points out, they are prefixed with MAC address and anyways, java doesn&apos;t do version 1 UUID).&lt;/p&gt;</comment>
                            <comment id="12868903" author="stack" created="Tue, 18 May 2010 23:36:03 +0000"  >&lt;p&gt;... continuing&lt;/p&gt;

&lt;p&gt;As to what needs to be done, at a minimum, we need to change the way we name dirs in the filesystem.  Currently its done as follows&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /**
   * @param regionName
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the encodedName
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; encodeRegionName(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] regionName) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.abs(JenkinsHash.getInstance().hash(regionName, regionName.length, 0));
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The minimally intrusive thing would be to change the above hashing to instead return a byte array or a String and have the function md5 or sha-1 the regionName  so there is some relation between the regionname and hash, or just return a UUID, a product that cannot be related to the regionname.  We&apos;d then need to go through code base and make sure that everywhere we deal with the encoded name of the region, that we can handle BOTH the new style byte [] or String format and the old format int.&lt;/p&gt;

&lt;p&gt;Since we cannot derive the regionname from the UUID, we must be careful we do not misplace the UUID.  We&apos;d have to save it into the regions HRegionInfo object.&lt;/p&gt;

&lt;p&gt;md5/sha-1 would be superior because we can always go from regionname to the encoded name.&lt;/p&gt;

&lt;p&gt;I was thinking (and I think Kannan the same), that rather than timestamp alone as the 3rd component of the regionname, that rather we&apos;d make it so the 3rd portion of the regionname serve two functions: its current one as differentiator between child and parent (see previous comment) but that this 3rd component would also be what we use for the region directory in the filesystem.   Timestamp alone would not be enough.  After this afternoon&apos;s IRC discussions, UUID isn&apos;t suitable.  We&apos;d have to tag on something extra.  It could be an md5 of the startkey or it could just be jenkins hash of the startkey since likelihood of hash-of-startkey+timestamp would clash is unlikely.&lt;/p&gt;

&lt;p&gt;I liked this later option because you&apos;d read the regionname and would be able to then easily find the region&apos;s dir in the filesystem. &lt;/p&gt;

&lt;p&gt;This would be a more intrusive change than the one above where we just change hash function.&lt;/p&gt;
</comment>
                            <comment id="12868935" author="kannanm" created="Wed, 19 May 2010 00:32:55 +0000"  >&lt;p&gt;Writing out the details of one possible solution. Comments welcome.&lt;/p&gt;

&lt;p&gt;Old region names continue to have the format: &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;timestamp&amp;gt;. For region names in this format, the encoded name will continue to be the old JenkinsHash implementation.&lt;br/&gt;
New region names have the format: &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;timestamp&amp;gt;,&amp;lt;dirname&amp;gt; where &amp;lt;dirname&amp;gt; is the md5 hash of the &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;timestamp&amp;gt; and will serve as encoded name/directory name in FS for the region.&lt;/p&gt;

&lt;p&gt;This preserves the property that child regions (splits) will have a region name that sorts higher than the parent.&lt;/p&gt;

&lt;p&gt;Search to determine what region serves a particular key is done today by building a key of the form:&lt;br/&gt;
  &amp;lt;tablename&amp;gt;,&amp;lt;searchkey&amp;gt;,99999999999999&lt;/p&gt;

&lt;p&gt;That&apos;s 14 9&apos;s. On our test cluster I noticed region names of the form: test1,0013440000,1273816773769. That&apos;s 13 digits for the timestamp part. Going forward, we&apos;ll have region names of the form: test1,&amp;lt;key&amp;gt;,&amp;lt;13digit-ts&amp;gt;,&amp;lt;md5hash&amp;gt;. But the 14 9&apos;s based search key would continue to work just fine even with the new format region names since &apos;9&apos; &amp;gt; &apos;,&apos; .&lt;/p&gt;
</comment>
                            <comment id="12868937" author="tlipcon" created="Wed, 19 May 2010 00:34:39 +0000"  >&lt;p&gt;Regardless of what we change it to, can I suggest that we add a new class RegionCode or RegionId which serves as a &quot;typesafe id&quot;? This makes it harder to have bugs where we mix up the various strings used to refer to a region (at the expense of a small amount of memory for the wrapper class).&lt;/p&gt;</comment>
                            <comment id="12868980" author="stack" created="Wed, 19 May 2010 04:08:33 +0000"  >&lt;p&gt;Yes to Todd suggestion.&lt;/p&gt;

&lt;p&gt;Kannan, I&apos;m down w/ your suggesion except for bit where &apos;,&apos; is also the delimiter between timestamp and dirname.   Use a &apos;.&apos; or something instead.   Special meta region comparator code looks for the &apos;,&apos; characters dividing up the parts of a meta key doing sorting.  The extra &apos;,&apos; will throw it off and you&apos;ll get a headache trying to sort out how this comparator works.  it gets really interesting when meta splits. (though currently this is disabled).... for then you have meta regionnames that look like this:  meta,TestTable,SOMESTARTKEY,TS,TS... then throw in fact that starkeys can be binary and my sense is that about now you feel a migrane coming on.&lt;/p&gt;

&lt;p&gt;I&apos;m good w/ md5.  128 bits vs 160 bits for sha-1 (which seems overkill).  Or we could keep jenkins hash &amp;#8211; 32 bits &amp;#8211; because and use timestamp+jenkins_hash naming dir.  A collision is unlikely?&lt;/p&gt;</comment>
                            <comment id="12869159" author="kannanm" created="Wed, 19 May 2010 15:08:11 +0000"  >&lt;p&gt;Stack: Good point on the META keys. A &quot;.&quot; or &quot;-&quot; would work better. Those sort lower than a &quot;9&quot; as well. &lt;/p&gt;

&lt;p&gt;Re: timestamp+jenkins_hash--- my feeling is that while we are in the process of modifying the format, might as well go with something stronger like md5 or sha1. Those would be more bits that TS+jenkins hash.&lt;/p&gt;


</comment>
                            <comment id="12869212" author="stack" created="Wed, 19 May 2010 17:17:40 +0000"  >&lt;p&gt;.bq Re: timestamp+jenkins_hash--- my feeling is that while we are in the process of modifying the format, might as well go with something stronger like md5 or sha1. Those would be more bits that TS+jenkins hash.&lt;/p&gt;

&lt;p&gt;Better to be safe, agreed.&lt;/p&gt;</comment>
                            <comment id="12873183" author="kannanm" created="Fri, 28 May 2010 23:46:02 +0000"  >&lt;p&gt;will post a prelim patch on this soon on review board. Unit tests pass. Did some cluster testing, and things seemed fine. Migration tests from older version of HBase servers needs to be done.&lt;/p&gt;</comment>
                            <comment id="12873191" author="kannanm" created="Sat, 29 May 2010 00:17:51 +0000"  >&lt;p&gt;&lt;a href=&quot;http://review.hbase.org/r/104/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="12873192" author="hbasereviewboard" created="Sat, 29 May 2010 00:18:30 +0000"  >&lt;p&gt;Message from: &quot;Kannan Muthukkaruppan&quot; &amp;lt;kannan@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/104/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;The new format for a region name contains its encodedName. The encoded name also serves as the directory name for the region in the filesystem.&lt;/p&gt;

&lt;p&gt;New region name format:&lt;/p&gt;

&lt;p&gt;      &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;/&amp;lt;encodedName&amp;gt;/&lt;/p&gt;

&lt;p&gt;where, &amp;lt;encodedName&amp;gt; is a hex version of the MD5 hash of &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;&lt;/p&gt;

&lt;p&gt;The old region name format remains:&lt;br/&gt;
     &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;&lt;/p&gt;

&lt;p&gt;For region names in the old format, the encoded name is a 32-bit JenkinsHash integer value (in its decimal notation, string form). &lt;/p&gt;

&lt;p&gt;*&lt;b&gt;NOTE&lt;/b&gt;*&lt;/p&gt;

&lt;p&gt;ROOT, the first META region, and regions created by an older version of HBase (0.20 or prior) will continue to use the old region name format.&lt;/p&gt;


&lt;p&gt;In the logs &amp;amp; web ui, old format region names will show up as:&lt;br/&gt;
   &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;(&amp;lt;jenkinshashEncodedName&amp;gt;)&lt;br/&gt;
New format region names will show up as:&lt;br/&gt;
    &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;/&amp;lt;md5hashEncodedName&amp;gt;/&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/bin/add_table.rb 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 949322 &lt;br/&gt;
  trunk/src/main/resources/hbase-webapps/master/table.jsp 949322 &lt;br/&gt;
  trunk/src/main/resources/hbase-webapps/regionserver/regionserver.jsp 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/TestEmptyMetaInfo.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 949322 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/104/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;unit tests pass. ran some &lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Kannan&lt;/p&gt;

</comment>
                            <comment id="12873208" author="hbasereviewboard" created="Sat, 29 May 2010 01:04:37 +0000"  >&lt;p&gt;Message from: &quot;Kannan Muthukkaruppan&quot; &amp;lt;kannan@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/104/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-05-28 18:03:20.789555)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;The new format for a region name contains its encodedName. The encoded name also serves as the directory name for the region in the filesystem.&lt;/p&gt;

&lt;p&gt;New region name format:&lt;/p&gt;

&lt;p&gt;      &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;/&amp;lt;encodedName&amp;gt;/&lt;/p&gt;

&lt;p&gt;where, &amp;lt;encodedName&amp;gt; is a hex version of the MD5 hash of &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;&lt;/p&gt;

&lt;p&gt;The old region name format remains:&lt;br/&gt;
     &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;&lt;/p&gt;

&lt;p&gt;For region names in the old format, the encoded name is a 32-bit JenkinsHash integer value (in its decimal notation, string form). &lt;/p&gt;

&lt;p&gt;*&lt;b&gt;NOTE&lt;/b&gt;*&lt;/p&gt;

&lt;p&gt;ROOT, the first META region, and regions created by an older version of HBase (0.20 or prior) will continue to use the old region name format.&lt;/p&gt;


&lt;p&gt;In the logs &amp;amp; web ui, old format region names will show up as:&lt;br/&gt;
   &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;(&amp;lt;jenkinshashEncodedName&amp;gt;)&lt;br/&gt;
New format region names will show up as:&lt;br/&gt;
    &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;/&amp;lt;md5hashEncodedName&amp;gt;/&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/bin/add_table.rb 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 949322 &lt;br/&gt;
  trunk/src/main/resources/hbase-webapps/master/table.jsp 949322 &lt;br/&gt;
  trunk/src/main/resources/hbase-webapps/regionserver/regionserver.jsp 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/TestEmptyMetaInfo.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 949322 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/104/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing (updated)&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;unit tests pass. ran some cluster tests, and things seemed to work ok. Yet to try some migration test (upgrading from an older server).&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Kannan&lt;/p&gt;

</comment>
                            <comment id="12873220" author="hbasereviewboard" created="Sat, 29 May 2010 01:52:37 +0000"  >&lt;p&gt;Message from: &quot;Kannan Muthukkaruppan&quot; &amp;lt;kannan@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/104/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-05-28 18:50:19.120776)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Forgot to include one new file (hbase/util/MD5Hash.java).&lt;/p&gt;

&lt;p&gt;BTW, also manually ran a test with a cluster created using an older HBase &amp;#8211; with regions in old format. Then restarted cluster with new HBase. Newly created regions were in new format as expected. And over time, as old regions, split they migrated over to the new format.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;The new format for a region name contains its encodedName. The encoded name also serves as the directory name for the region in the filesystem.&lt;/p&gt;

&lt;p&gt;New region name format:&lt;/p&gt;

&lt;p&gt;      &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;/&amp;lt;encodedName&amp;gt;/&lt;/p&gt;

&lt;p&gt;where, &amp;lt;encodedName&amp;gt; is a hex version of the MD5 hash of &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;&lt;/p&gt;

&lt;p&gt;The old region name format remains:&lt;br/&gt;
     &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;&lt;/p&gt;

&lt;p&gt;For region names in the old format, the encoded name is a 32-bit JenkinsHash integer value (in its decimal notation, string form). &lt;/p&gt;

&lt;p&gt;*&lt;b&gt;NOTE&lt;/b&gt;*&lt;/p&gt;

&lt;p&gt;ROOT, the first META region, and regions created by an older version of HBase (0.20 or prior) will continue to use the old region name format.&lt;/p&gt;


&lt;p&gt;In the logs &amp;amp; web ui, old format region names will show up as:&lt;br/&gt;
   &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;(&amp;lt;jenkinshashEncodedName&amp;gt;)&lt;br/&gt;
New format region names will show up as:&lt;br/&gt;
    &amp;lt;tablename&amp;gt;,&amp;lt;startkey&amp;gt;,&amp;lt;regionIdTimestamp&amp;gt;/&amp;lt;md5hashEncodedName&amp;gt;/&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2531&quot; title=&quot;32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2531&quot;&gt;&lt;del&gt;HBASE-2531&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/bin/add_table.rb 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/client/MetaScanner.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 949322 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/util/MD5Hash.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/resources/hbase-webapps/master/table.jsp 949322 &lt;br/&gt;
  trunk/src/main/resources/hbase-webapps/regionserver/regionserver.jsp 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/TestEmptyMetaInfo.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestGetClosestAtOrBefore.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java 949322 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java 949322 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/104/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;unit tests pass. ran some cluster tests, and things seemed to work ok. Yet to try some migration test (upgrading from an older server).&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Kannan&lt;/p&gt;

</comment>
                            <comment id="12873332" author="hbasereviewboard" created="Sat, 29 May 2010 21:51:37 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/104/#review100&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#review100&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;It looks great to me.  Only objection is &apos;/&apos; as delimiter in new format.  Would prefer something doesn&apos;t require escaping when searching in tools such as vim.  How about a &apos;.&apos;?  I&apos;m going to try it out now.  Will report back.&lt;/p&gt;


&lt;p&gt;trunk/bin/add_table.rb&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment585&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment585&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I&apos;m sorry you had to edit this file Kannan&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment586&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment586&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Are you tied to &apos;/&apos;?  Could we use &apos;.&apos; instead?  I&apos;m in vi and having to search for instances of a regionname.  I&apos;ll have to escape the / before I begin my search?  If it was a &apos;.&apos; or  &apos;-&apos; I wouldn&apos;t have to?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment587&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment587&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This will come out funny in javadoc I think.  You might have to change the &apos;&amp;lt;&apos; into &amp;lt; for them to show properly.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment588&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment588&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nice.  It&apos;ll be easy to change then.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment589&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment589&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nitpick: This could be written as:&lt;/p&gt;

&lt;p&gt;    return (regionName.length &amp;gt;= 1) &amp;amp;&amp;amp; (regionName&lt;span class=&quot;error&quot;&gt;&amp;#91;regionName.length - 1&amp;#93;&lt;/span&gt; == ENC_SEPARATOR);&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment591&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment591&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    good&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment592&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment592&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats happening here?  Why not just return the cached String?  Does it not include the new encoded suffix?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment593&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment593&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What changed on this line (and the one before).  Just watching out for you.  Any changes in hfile cause Ryan to perk up and come looksee.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment594&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment594&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Be careful.  Looks only one real change in this file (though the diff reports many more than that)&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment595&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment595&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is great - getting rid of having to tag on the encoding&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment596&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment596&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What changed on this line?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment597&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment597&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What changed on these lines?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment598&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment598&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yeah, what changed here?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/util/MD5Hash.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment599&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment599&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Throw a RuntimeException I&apos;d say.&lt;/p&gt;



&lt;p&gt;trunk/src/main/resources/hbase-webapps/master/table.jsp&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment600&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is good&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12873347" author="hbasereviewboard" created="Sun, 30 May 2010 00:11:39 +0000"  >&lt;p&gt;Message from: &quot;Kannan Muthukkaruppan&quot; &amp;lt;kannan@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/104/#review102&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#review102&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment601&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment601&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    will do.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment602&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment602&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    old style region names don&apos;t have their encoded name in the regionNameStr. So I check for that here, and append the encoded name for those regions so that the logs, web UI, etc. will display the encoded named for those regions.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment603&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment603&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    will get rid of all whitespace diffs.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment604&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment604&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Will get rid of all the whitespace diffs. After the big whitespace cleanup landed in 0.20, I decided to set my eclipse to kill trailing whitespaces. But looks like trunk still has a bunch of whitespaces.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/util/MD5Hash.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/104/#comment605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/104/#comment605&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ok...&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Kannan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12873348" author="hbasereviewboard" created="Sun, 30 May 2010 00:15:36 +0000"  >&lt;p&gt;Message from: &quot;Kannan Muthukkaruppan&quot; &amp;lt;kannan@facebook.com&amp;gt;&lt;/p&gt;


</comment>
                            <comment id="12873745" author="stack" created="Mon, 31 May 2010 18:28:04 +0000"  >&lt;p&gt;I tried it.  I saw stuff like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2010-05-31 11:19:10,258 INFO org.apache.hadoop.hbase.master.ServerManager: Processing MSG_REPORT_SPLIT_INCLUDES_DAUGHTERS: TestTable,0010151443,1275329539809(717050107): Daughters; TestTable,0010151443,1275329944907/80f60878ba8994c3458931a127d77377/, TestTable,0010376061,1275329944907/9058243430462cd436fc06b748c0aaca/ from sv2borg187,60020,1275329765174; 1 of 1
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That looks really good as does a scan of .META. (I can see parents and daughters.... we should get rid of the new-style encoded field in HRegionInfo, but we can do that later).&lt;/p&gt;

&lt;p&gt;Since there are so few things to change &amp;#8211; and changing the separator I can do &amp;#8211; you want me to fix the above white-spacing, etc., issues on commit Kannan; IOW, you don&apos;t have to make a new patch?&lt;/p&gt;

&lt;p&gt;Looks great Kannan.&lt;/p&gt;</comment>
                            <comment id="12873747" author="stack" created="Mon, 31 May 2010 18:30:48 +0000"  >&lt;p&gt;oh, what I did was load an hbase and then I changed the jar to have your patch and restarted... then started loading the table again to prove the patch worked where there was a mix of old and new style encodings.  The table seems healthy after letting some splits go on and I don&apos;t see exceptions, etc. &lt;/p&gt;</comment>
                            <comment id="12873775" author="kannanm" created="Mon, 31 May 2010 20:19:11 +0000"  >&lt;p&gt;Sure-- feel free to update and commit the patch. Thanks Stack.&lt;/p&gt;</comment>
                            <comment id="12873868" author="stack" created="Tue, 1 Jun 2010 03:52:05 +0000"  >&lt;p&gt;Committed.  Thanks for sweet patch Kannan.&lt;/p&gt;</comment>
                            <comment id="12873875" author="tlipcon" created="Tue, 1 Jun 2010 04:22:18 +0000"  >&lt;p&gt;Why aren&apos;t we also changing ROOT and the first META? I&apos;m afraid this will come back to bite us when we actually try to fix meta splitting.&lt;/p&gt;</comment>
                            <comment id="12873876" author="stack" created="Tue, 1 Jun 2010 04:37:53 +0000"  >&lt;p&gt;.bq Why aren&apos;t we also changing ROOT and the first META? I&apos;m afraid this will come back to bite us when we actually try to fix meta splitting.&lt;/p&gt;

&lt;p&gt;I opened a new issue, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2639&quot; title=&quot;Bring root and meta over to new naming scheme (hbase-2531)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2639&quot;&gt;&lt;del&gt;HBASE-2639&lt;/del&gt;&lt;/a&gt;, to bring these over too.&lt;/p&gt;</comment>
                            <comment id="12874122" author="kannanm" created="Tue, 1 Jun 2010 17:50:05 +0000"  >&lt;p&gt;Todd/Stack: ROOT and the &lt;b&gt;first&lt;/b&gt; META region are handled in a special hard-coded way in code. See HRegionInfo::ROOT_REGIONINFO and HRegion::FIRST_META_REGIONINFO.&lt;/p&gt;

&lt;p&gt;For example, their region id is hardcoded to 0 &amp;amp; 1 (and they do not use timestamps).&lt;/p&gt;

&lt;p&gt;&lt;del&gt;ROOT&lt;/del&gt;,,0&lt;br/&gt;
.META.,,1&lt;/p&gt;

&lt;p&gt;Their Jenkins hash encoded names: 70236052 &amp;amp; 1028785192 respectively do not collide either.  Not changing this simplifies handling upgrade from an older version of HBase.&lt;/p&gt;

&lt;p&gt;This should not be an issue for splits of META. If META splits, &lt;b&gt;it should&lt;/b&gt; use the new format region names (with timestamps for the region id portion) and md5 hash for encoded names.&lt;/p&gt;</comment>
                            <comment id="12874222" author="stack" created="Tue, 1 Jun 2010 20:31:33 +0000"  >&lt;p&gt;@Kannan I moved discussion of root and meta over to hbase-2639.  I&apos;ll comment there.&lt;/p&gt;</comment>
                            <comment id="15017251" author="lars_francke" created="Fri, 20 Nov 2015 12:42:26 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12465201">HBASE-2600</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12445830" name="HBASE-2531_v2.patch" size="35049" author="kannanm" created="Sat, 29 May 2010 01:54:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 May 2010 18:14:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26351</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hi3z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100196</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Changes format of region name.  Adds an md5 suffix.  Suffix is now the name used as directory name in filesystem.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>