<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:53:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14468/HBASE-14468.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14468] Compaction improvements: FIFO compaction policy</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14468</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;h2&gt;&lt;a name=&quot;FIFOCompaction&quot;&gt;&lt;/a&gt;FIFO Compaction&lt;/h2&gt;
&lt;h3&gt;&lt;a name=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h3&gt;
&lt;p&gt;FIFO compaction policy selects only files which have all cells expired. The column family MUST have non-default TTL. &lt;br/&gt;
Essentially, FIFO compactor does only one job: collects expired store files. These are some applications which could benefit the most:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Use it for very high volume raw data which has low TTL and which is the source of another data (after additional processing). Example: Raw time-series vs. time-based rollup aggregates and compacted time-series. We collect raw time-series and store them into CF with FIFO compaction policy, periodically we run  task which creates rollup aggregates and compacts time-series, the original raw data can be discarded after that.&lt;/li&gt;
	&lt;li&gt;Use it for data which can be kept entirely in a a block cache (RAM/SSD). Say we have local SSD (1TB) which we can use as a block cache. No need for compaction of a raw data at all.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Because we do not do any real compaction, we do not use CPU and IO (disk and network), we do not evict hot data from a block cache. The result: improved throughput and latency both write and read.&lt;br/&gt;
See: &lt;a href=&quot;https://github.com/facebook/rocksdb/wiki/FIFO-compaction-style&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/facebook/rocksdb/wiki/FIFO-compaction-style&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;a name=&quot;ToenableFIFOcompactionpolicy&quot;&gt;&lt;/a&gt;To enable FIFO compaction policy&lt;/h3&gt;
&lt;p&gt;For table:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HTableDescriptor desc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTableDescriptor(tableName);
    desc.setConfiguration(DefaultStoreEngine.DEFAULT_COMPACTION_POLICY_CLASS_KEY, 
      FIFOCompactionPolicy.class.getName());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;For CF:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HColumnDescriptor desc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HColumnDescriptor(family);
    desc.setConfiguration(DefaultStoreEngine.DEFAULT_COMPACTION_POLICY_CLASS_KEY, 
      FIFOCompactionPolicy.class.getName());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From HBase shell:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
create &apos;x&apos;,{NAME=&amp;gt;&apos;y&apos;, TTL=&amp;gt;&apos;30&apos;}, {CONFIGURATION =&amp;gt; {&apos;hbase.hstore.defaultengine.compactionpolicy.class&apos; =&amp;gt; &apos;org.apache.hadoop.hbase.regionserver.compactions.FIFOCompactionPolicy&apos;, &apos;hbase.hstore.blockingStoreFiles&apos; =&amp;gt; 1000}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Although region splitting is supported,  for optimal performance it should be disabled, either by setting explicitly DisabledRegionSplitPolicy or by setting ConstantSizeRegionSplitPolicy and very large max region size. You will have to increase to a very large number store&apos;s blocking file number : &lt;b&gt;hbase.hstore.blockingStoreFiles&lt;/b&gt; as well (there is a sanity check on table/column family configuration in case of FIFO compaction and minimum value for number of blocking file is 1000).&lt;/p&gt;

&lt;h3&gt;&lt;a name=&quot;Limitations&quot;&gt;&lt;/a&gt;Limitations&lt;/h3&gt;
&lt;p&gt;Do not use FIFO compaction if :&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Table/CF has MIN_VERSION &amp;gt; 0&lt;/li&gt;
	&lt;li&gt;Table/CF has TTL = FOREVER (HColumnDescriptor.DEFAULT_TTL)&lt;/li&gt;
&lt;/ul&gt;

</description>
                <environment></environment>
        <key id="12895669">HBASE-14468</key>
            <summary>Compaction improvements: FIFO compaction policy</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vrodionov">Vladimir Rodionov</assignee>
                                    <reporter username="vrodionov">Vladimir Rodionov</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Sep 2015 04:10:49 +0000</created>
                <updated>Thu, 7 Jan 2016 16:48:05 +0000</updated>
                            <resolved>Thu, 7 Jan 2016 06:49:29 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.2.0</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>0.98.17</fixVersion>
                                    <component>Compaction</component>
                    <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>16</watches>
                                                                                                            <comments>
                            <comment id="14909906" author="vrodionov" created="Sun, 27 Sep 2015 22:00:30 +0000"  >&lt;p&gt;Patch contains &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14467&quot; title=&quot;Compaction improvements: DefaultCompactor should not compact TTL-expired files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14467&quot;&gt;&lt;del&gt;HBASE-14467&lt;/del&gt;&lt;/a&gt; as well.&lt;/p&gt;</comment>
                            <comment id="14909946" author="hadoopqa" created="Mon, 28 Sep 2015 00:52:58 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12762618/HBASE-14468-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12762618/HBASE-14468-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 526520de0a9d7a29fcf1b4c521f017ca75a46cbc.&lt;br/&gt;
  ATTACHMENT ID: 12762618&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1789 checkstyle errors (more than the master&apos;s current 1787 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +    LOG.info(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;FIFOCompactionPolicy&amp;#93;&lt;/span&gt; Selected: &quot;+ toCompact.size()+&quot; asked: &quot; + candidateFiles.size());&lt;br/&gt;
+  public boolean needsCompaction(Collection&amp;lt;StoreFile&amp;gt; storeFiles, List&amp;lt;StoreFile&amp;gt; filesCompacting) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mob.compactions.TestMobCompactor&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.TestPartialResultsFromClientSide.testReadPointAndPartialResults(TestPartialResultsFromClientSide.java:777)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestCoprocessorScanPolicy.testTTL(TestCoprocessorScanPolicy.java:157)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15779//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15779//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15779//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15779//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15779//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15779//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15779//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15779//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14910063" author="hadoopqa" created="Mon, 28 Sep 2015 05:49:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12762631/HBASE-14468-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12762631/HBASE-14468-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 526520de0a9d7a29fcf1b4c521f017ca75a46cbc.&lt;br/&gt;
  ATTACHMENT ID: 12762631&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileScanning(TestHRegion.java:3890)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestCoprocessorScanPolicy.testTTL(TestCoprocessorScanPolicy.java:157)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15781//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15781//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15781//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15781//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15781//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15781//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15781//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15781//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14934776" author="lhofhansl" created="Tue, 29 Sep 2015 07:17:54 +0000"  >&lt;p&gt;Haven&apos;t looked at the patch, but the idea sounds great!&lt;br/&gt;
Does that mean we will essentially stay at memstore sized HFiles until they are collected?&lt;/p&gt;</comment>
                            <comment id="14935434" author="vrodionov" created="Tue, 29 Sep 2015 16:57:59 +0000"  >&lt;p&gt;Yes, FIFO compactor does only one job: collects expired store files. I see many applications for this policy:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;use it for very high volume raw data which has low TTL and which is the source of another data (after additional processing). Example: raw event stream (FIFO compaction) - compacted event stream (regular compaction)&lt;/li&gt;
	&lt;li&gt;use it for data which can be kept entirely in a a block cache (RAM/SSD). Say we have local SSD (1TB) which we can use as a block cache. No need for compaction of a raw data at all.&lt;/li&gt;
&lt;/ol&gt;



</comment>
                            <comment id="14935581" author="vrodionov" created="Tue, 29 Sep 2015 18:23:56 +0000"  >&lt;p&gt;Restored accidentally removed two lines from WriterBuilder.&lt;/p&gt;</comment>
                            <comment id="14935830" author="lhofhansl" created="Tue, 29 Sep 2015 20:45:01 +0000"  >&lt;p&gt;Thanks for background. We have some use cases with TTL, but the TTL is measured in months or years, wonder if we can combine this with other compactor and/or have a policy that under some conditions compacts anyway, even when there are unexpired rows.&lt;/p&gt;</comment>
                            <comment id="14935917" author="hadoopqa" created="Tue, 29 Sep 2015 21:37:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12764291/HBASE-14468-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12764291/HBASE-14468-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 37877e3f56b038c0821138862813e567390a9ff4.&lt;br/&gt;
  ATTACHMENT ID: 12764291&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.procedure.TestWALProcedureStoreOnHDFS&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.util.TestCoprocessorScanPolicy.testTTL(TestCoprocessorScanPolicy.java:157)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15810//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15810//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15810//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15810//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15810//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15810//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15810//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15810//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14935982" author="vrodionov" created="Tue, 29 Sep 2015 21:58:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, I do not think FIFO is a good policy for TTL which is longer than couple days, unless you guarantee that all your data fits block cache and stays there permanently.&lt;br/&gt;
I will update standard ExploringCompactionPolicy implementation and will add support for purging expired files.&lt;/p&gt;</comment>
                            <comment id="14939094" author="vrodionov" created="Thu, 1 Oct 2015 00:10:26 +0000"  >&lt;p&gt;v4 is based on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14511&quot; title=&quot;StoreFile.Writer Meta Plugin&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14511&quot;&gt;HBASE-14511&lt;/a&gt; work.&lt;/p&gt;</comment>
                            <comment id="14939217" author="hadoopqa" created="Thu, 1 Oct 2015 03:25:49 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12764516/HBASE-14468-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12764516/HBASE-14468-v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit a463984945717bf9cb2881c3d586d5b11d192d65.&lt;br/&gt;
  ATTACHMENT ID: 12764516&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 11 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1787 checkstyle errors (more than the master&apos;s current 1781 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 3 zombie test(s): 	at org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshot.testSnapshot(TestSnapshot.java:236)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestCoprocessorScanPolicy.testTTL(TestCoprocessorScanPolicy.java:157)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestFromClientSide.testUnmanagedHConnectionReconnect(TestFromClientSide.java:4081)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15837//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15837//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15837//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15837//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15837//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15837//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15837//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15837//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14939307" author="lhofhansl" created="Thu, 1 Oct 2015 04:22:50 +0000"  >&lt;p&gt;The other thing I want to do is tired compactions along timerange. I.e. instead having a (major) compaction spit out a single file, we can a configurable number based on timebands. Then we can (say) query the last weeks worth of data without touched many of the older files. But that&apos;s a different topic.&lt;/p&gt;</comment>
                            <comment id="14939344" author="vrodionov" created="Thu, 1 Oct 2015 05:32:13 +0000"  >&lt;p&gt;There is a JIRA for that - &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14677&quot; title=&quot;BucketAllocator freeBlock is the bottleneck in bulk block cache evictions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14677&quot;&gt;&lt;del&gt;HBASE-14677&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14939913" author="yuzhihong@gmail.com" created="Thu, 1 Oct 2015 14:46:38 +0000"  >&lt;p&gt;I think support for purging expired files is already in code base.&lt;br/&gt;
If TTL is short, user can achieve FIFO compaction by adjusting existing compaction parameters.&lt;/p&gt;

&lt;p&gt;During scan, timerange can be specified so that expired HFiles are excluded.&lt;/p&gt;</comment>
                            <comment id="14940214" author="vrodionov" created="Thu, 1 Oct 2015 18:46:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; think support for purging expired files is already in code base.&lt;br/&gt;
If TTL is short, user can achieve FIFO compaction by adjusting existing compaction parameters.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, it looks like we can achieve FIFO behavior by using existing ExlporingCompactionPolicy. We have to set CF TTL, disable periodic major compactions and set minimum files to compact to very large value. But even if it works, I would prefer to use separate policy - it is self explaining, at least.  &lt;/p&gt;</comment>
                            <comment id="14940769" author="lhofhansl" created="Fri, 2 Oct 2015 05:06:24 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14677&quot; title=&quot;BucketAllocator freeBlock is the bottleneck in bulk block cache evictions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14677&quot;&gt;&lt;del&gt;HBASE-14677&lt;/del&gt;&lt;/a&gt; doesn&apos;t exist, though &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14940816" author="vrodionov" created="Fri, 2 Oct 2015 06:33:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14477&quot; title=&quot;Compaction improvements: Date tiered compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14477&quot;&gt;HBASE-14477&lt;/a&gt; - now its DateTieredCompaction &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14942782" author="vrodionov" created="Sun, 4 Oct 2015 19:41:39 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Yes, it looks like we can achieve FIFO behavior by using existing ExlporingCompactionPolicy. We have to set CF TTL, disable periodic major compactions and set minimum files to compact to very large value. But even if it works, I would prefer to use separate policy - it is self explaining, at least&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, we can&apos;t, because ExlporingCompactionPolicy always checks if # of store files is greater than minimum number of files to compact and if it less than, than no compaction is requested. Therefore we can&apos;t increase minimum files to compact to very large value and we need separate compaction policy for FIFO style of compaction.&lt;/p&gt;</comment>
                            <comment id="14944097" author="vrodionov" created="Mon, 5 Oct 2015 21:38:46 +0000"  >&lt;p&gt;Patch v5. Totally new version. Removed all code except new policy and test. &lt;/p&gt;</comment>
                            <comment id="14944100" author="vrodionov" created="Mon, 5 Oct 2015 21:39:46 +0000"  >&lt;p&gt;In my local perf tests on my laptop I can easily exceed 100MB/s sustained write speed for single threaded test application.&lt;/p&gt;</comment>
                            <comment id="14944362" author="hadoopqa" created="Tue, 6 Oct 2015 01:03:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12765070/HBASE-14468-v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12765070/HBASE-14468-v5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit ceafa09d3cf6102d21c66745ca80e132021890c9.&lt;br/&gt;
  ATTACHMENT ID: 12765070&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestCopyTable.testRenameFamily(TestCopyTable.java:216)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15879//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15879//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15879//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15879//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15879//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15879//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15879//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15879//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14961608" author="devaraj" created="Sat, 17 Oct 2015 00:52:34 +0000"  >&lt;p&gt;Looks okay to me. The policy will address some use cases and it might be problematic for others. We should clearly call out the cases where this should/should-not be used (the limitations in the description is a good one).&lt;br/&gt;
On the code itself, you should have some timeout on the tests. You should log some warning when hasExpiredStores/getExpiredStores returns nothing after a couple of invocations, and yet the number of storefiles are growing (that would indicate the data is not conforming to the expectations from the compaction policy).&lt;/p&gt;</comment>
                            <comment id="14961618" author="devaraj" created="Sat, 17 Oct 2015 01:07:55 +0000"  >&lt;p&gt;Also consider usage of EnvironmentEdgeManager instead of System.currentTimeMillis.. Your UT can use that as well and run without depending on real clocks... &lt;/p&gt;</comment>
                            <comment id="14969761" author="vrodionov" created="Thu, 22 Oct 2015 19:47:34 +0000"  >&lt;p&gt;v6 patch after &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt; review.&lt;/p&gt;</comment>
                            <comment id="14970117" author="hadoopqa" created="Thu, 22 Oct 2015 23:43:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12768121/HBASE-14468-v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12768121/HBASE-14468-v6.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 467bc098a9512afca38356da56d92c351f15b042.&lt;br/&gt;
  ATTACHMENT ID: 12768121&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1734 checkstyle errors (more than the master&apos;s current 1733 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn post-site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16181//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16181//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16181//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16181//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16181//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16181//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16181//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16181//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14972017" author="devaraj" created="Fri, 23 Oct 2015 22:40:36 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; the test still relies on real clocks.. It sleeps to make sure that the TTL is expired, etc. What I meant to say earlier was that the test could use an implementation of the clock that fakes the time (the implementation of currentTimeMillis could be based on a monotonically increasing number and every invocation could return a new time...).&lt;/p&gt;</comment>
                            <comment id="14977632" author="enis" created="Wed, 28 Oct 2015 03:05:53 +0000"  >&lt;p&gt;This is a good idea. We should add this to the list of compaction policies with good documentation. We have use cases where there is a TTL of a couple of days. Metrics store is one such example for the raw data in a high ingest scenario. &lt;/p&gt;

&lt;p&gt;For the patch itself, the first if is not needed if we are checking for the DisabledRSP anyway: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(splitPolicyClassName.equals(IncreasingToUpperBoundRegionSplitPolicy.class.getName())){
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Default split policy &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; FIFO compaction&quot;&lt;/span&gt;+
+          &lt;span class=&quot;code-quote&quot;&gt;&quot; is not supported, aborting.&quot;&lt;/span&gt;);
+    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;( !splitPolicyClassName.equals(DisabledRegionSplitPolicy.class.getName())){
+      warn.append(&lt;span class=&quot;code-quote&quot;&gt;&quot;:region splits must be disabled:&quot;&lt;/span&gt;);
+    } 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can we make it so that if a split happens we still compact the reference files, but we do not compact otherwise? We can also allow very-slow splits in the case where the reference files will be cleaned out due to TTL. In this case, a region can still split every TTL interval. &lt;/p&gt;

&lt;p&gt;RuntimeException&apos;s thrown will cause region opening to fail or RS to abort? Can we hook the verify code to &lt;tt&gt;HMaster.sanityCheckTableDescriptor()&lt;/tt&gt;, so that you cannot alter the table or create a table with those settings. This will make a much better experience for the user. &lt;/p&gt;

&lt;p&gt;Can we also simplify the configuration for these. Maybe we auto-disable the major compactions, and set the blocking store files if they are not set? &lt;/p&gt;

&lt;p&gt;Can we use HStore.removeUnneededFiles() or &lt;tt&gt;storeEngine.getStoreFileManager()&lt;/tt&gt; which already implements the is expired logic so that there is no duplication there? &lt;/p&gt;</comment>
                            <comment id="14979161" author="vrodionov" created="Wed, 28 Oct 2015 20:19:39 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;sanityCheck is OK, will do that&lt;/li&gt;
	&lt;li&gt;Auto-disable the major compactions, and set the blocking store files if they are not set? - OK&lt;/li&gt;
	&lt;li&gt;Allow splits? Not sure. Will think about this.&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;
&lt;p&gt;Can we use HStore.removeUnneededFiles() or storeEngine.getStoreFileManager() which already implements the is expired logic so that there is no duplication there?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What duplication? FCP does not expire /purge files, HStore takes care of them.&lt;/p&gt;
</comment>
                            <comment id="14980835" author="vrodionov" created="Thu, 29 Oct 2015 17:13:55 +0000"  >&lt;p&gt;Added sanity check for compaction configuration in a HMaster. &lt;/p&gt;</comment>
                            <comment id="14981136" author="hadoopqa" created="Thu, 29 Oct 2015 19:45:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12769572/HBASE-14468-v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12769572/HBASE-14468-v7.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 2288742c10e04d46212dbf70b931e460214992bf.&lt;br/&gt;
  ATTACHMENT ID: 12769572&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1733 checkstyle errors (more than the master&apos;s current 1732 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.util.TestRegionMover&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16284//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16284//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16284//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16284//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16284//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16284//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16284//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16284//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14986143" author="vrodionov" created="Mon, 2 Nov 2015 22:04:06 +0000"  >&lt;p&gt;V8. Added split support. Now regions can be split and FIFO detects this events and delegates all calls to parent class (ExploringCompactionPolicy).&lt;/p&gt;</comment>
                            <comment id="14986255" author="hadoopqa" created="Mon, 2 Nov 2015 23:18:47 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770173/HBASE-14468-v8.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770173/HBASE-14468-v8.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f0176d942af26c8423d534d6b806b83817dd98e0.&lt;br/&gt;
  ATTACHMENT ID: 12770173&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestInterfaceAudienceAnnotations&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16354//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16354//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16354//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16354//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16354//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16354//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16354//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16354//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14986560" author="hadoopqa" created="Tue, 3 Nov 2015 03:03:30 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770193/HBASE-14468-v9.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770193/HBASE-14468-v9.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f0176d942af26c8423d534d6b806b83817dd98e0.&lt;br/&gt;
  ATTACHMENT ID: 12770193&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16355//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16355//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16355//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16355//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16355//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16355//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16355//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16355//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14997931" author="enis" created="Tue, 10 Nov 2015 03:37:23 +0000"  >&lt;p&gt;Thanks for updating the patch. The changes look good. Only a few comments: &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;TimeOffsetEnvironmentEdge can be moved to src/test rather than src/main.&lt;/li&gt;
	&lt;li&gt;testPurgeExpiredFiles() does not assert anything, just prints.&lt;/li&gt;
	&lt;li&gt;nit: you can use fail() in Assert class for this:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      assertTrue(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15009863" author="vrodionov" created="Tue, 17 Nov 2015 23:50:58 +0000"  >&lt;p&gt;v10 patch.&lt;/p&gt;</comment>
                            <comment id="15010064" author="hadoopqa" created="Wed, 18 Nov 2015 02:33:53 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12772869/HBASE-14468-v10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12772869/HBASE-14468-v10.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit d6fdf92f9e5f4eaaf9300dce7f1f23adf228949c.&lt;br/&gt;
  ATTACHMENT ID: 12772869&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16559//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16559//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16559//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16559//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16559//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16559//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16559//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16559//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15012711" author="enis" created="Thu, 19 Nov 2015 03:32:38 +0000"  >&lt;p&gt;I have committed this. Thanks Vladimir. &lt;/p&gt;

&lt;p&gt;Can you please write down a short release note. Maybe we should also add this to the documentation. &lt;/p&gt;</comment>
                            <comment id="15012960" author="hudson" created="Thu, 19 Nov 2015 06:22:55 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #384 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/384/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/384/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; Compaction improvements: FIFO compaction policy (Vladimir (enis: rev a403429952c2bd3d0e951a3382d5708e7c8affee)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/FIFOCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestFIFOCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TimeOffsetEnvironmentEdge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15013022" author="hudson" created="Thu, 19 Nov 2015 06:53:06 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3-IT #322 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/322/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/322/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; Compaction improvements: FIFO compaction policy (Vladimir (enis: rev 8a69dd5b0898a92bd86d75d7535660322e27cf8e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/FIFOCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TimeOffsetEnvironmentEdge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestFIFOCompactionPolicy.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15013028" author="hudson" created="Thu, 19 Nov 2015 06:55:55 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.3 #379 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/379/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/379/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; Compaction improvements: FIFO compaction policy (Vladimir (enis: rev 8a69dd5b0898a92bd86d75d7535660322e27cf8e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/FIFOCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TimeOffsetEnvironmentEdge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestFIFOCompactionPolicy.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15013092" author="hudson" created="Thu, 19 Nov 2015 07:45:48 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #292 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/292/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/292/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; Compaction improvements: FIFO compaction policy (Vladimir (enis: rev a403429952c2bd3d0e951a3382d5708e7c8affee)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TimeOffsetEnvironmentEdge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestFIFOCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/FIFOCompactionPolicy.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15013118" author="hudson" created="Thu, 19 Nov 2015 08:10:52 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-Trunk_matrix #480 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/480/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/480/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; Compaction improvements: FIFO compaction policy (Vladimir (enis: rev cf81b45f3771002146d6e8c4d995b12963aa685a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TimeOffsetEnvironmentEdge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestFIFOCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/FIFOCompactionPolicy.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15014251" author="vrodionov" created="Thu, 19 Nov 2015 19:58:23 +0000"  >&lt;p&gt;Created separate documentation JIRA: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14847&quot; title=&quot;Add FIFO compaction section to HBase book&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14847&quot;&gt;HBASE-14847&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="15049310" author="stack" created="Wed, 9 Dec 2015 20:07:44 +0000"  >&lt;p&gt;This test hung just now in a 1.3 build:&lt;/p&gt;



&lt;p&gt;kalashnikov:hbase.git stack$ !520&lt;br/&gt;
python ./dev-support/findHangingTests.py &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/jdk=latest1.8,label=Hadoop/425/consoleText&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/jdk=latest1.8,label=Hadoop/425/consoleText&lt;/a&gt;&lt;br/&gt;
Fetching &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/jdk=latest1.8,label=Hadoop/425/consoleText&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/jdk=latest1.8,label=Hadoop/425/consoleText&lt;/a&gt;&lt;br/&gt;
Building remotely on H1 (Mapreduce Hadoop Pig Hdfs) in workspace /home/jenkins/jenkins-slave/workspace/HBase-1.3/jdk/latest1.8/label/Hadoop&lt;br/&gt;
Printing hanging tests&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.regionserver.compactions.TestFIFOCompactionPolicy&lt;/p&gt;

&lt;p&gt;It looks like it is stuck waiting on a server to show up.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/jdk=latest1.8,label=Hadoop/425/artifact/hbase-server/target/surefire-reports/org.apache.hadoop.hbase.regionserver.compactions.TestFIFOCompactionPolicy-output.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/jdk=latest1.8,label=Hadoop/425/artifact/hbase-server/target/surefire-reports/org.apache.hadoop.hbase.regionserver.compactions.TestFIFOCompactionPolicy-output.txt&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Please take a look see when you get a chance. Thanks.&lt;/p&gt;


</comment>
                            <comment id="15052188" author="stack" created="Fri, 11 Dec 2015 05:12:08 +0000"  >&lt;p&gt;Any chance to look at above? Thanks.&lt;/p&gt;</comment>
                            <comment id="15056829" author="vrodionov" created="Mon, 14 Dec 2015 22:23:06 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I see this exception during HBase mini cluster shutdown.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-12-09 17:51:28,444 ERROR [RS:0;asf901:37225] hbase.MiniHBaseCluster$MiniHBaseClusterRegionServer(145): Exception in run
java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextNode(HashMap.java:1429)
	at java.util.HashMap$KeyIterator.next(HashMap.java:1453)
	at java.util.AbstractCollection.toString(AbstractCollection.java:461)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.valueOf(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at org.apache.hadoop.hbase.ChoreService.shutdown(ChoreService.java:323)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.stopServiceThreads(HRegionServer.java:2127)
	at org.apache.hadoop.hbase.regionserver.HRegionServer.run(HRegionServer.java:1084)
	at org.apache.hadoop.hbase.MiniHBaseCluster$MiniHBaseClusterRegionServer.runRegionServer(MiniHBaseCluster.java:156)
	at org.apache.hadoop.hbase.MiniHBaseCluster$MiniHBaseClusterRegionServer.access$000(MiniHBaseCluster.java:108)
	at org.apache.hadoop.hbase.MiniHBaseCluster$MiniHBaseClusterRegionServer$1.run(MiniHBaseCluster.java:140)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:360)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1594)
	at org.apache.hadoop.hbase.security.User$SecureHadoopUser.runAs(User.java:334)
	at org.apache.hadoop.hbase.MiniHBaseCluster$MiniHBaseClusterRegionServer.run(MiniHBaseCluster.java:138)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This seems has nothing to do with a test in question. I can not reproduce this issue in my local environment. Any suggestions?&lt;/p&gt;</comment>
                            <comment id="15056833" author="vrodionov" created="Mon, 14 Dec 2015 22:26:38 +0000"  >&lt;p&gt;Another observation: &lt;/p&gt;

&lt;p&gt;It fails under 1.8. My version of JDK is 1.7-latest&lt;/p&gt;</comment>
                            <comment id="15056893" author="vrodionov" created="Mon, 14 Dec 2015 22:56:26 +0000"  >&lt;p&gt;Run test multiple times under 1.8_65. No issues. Is this issue reproducible in apache build system?&lt;/p&gt;</comment>
                            <comment id="15056929" author="enis" created="Mon, 14 Dec 2015 23:09:56 +0000"  >&lt;p&gt;Seems &lt;tt&gt;ChoreService.shutdown()&lt;/tt&gt; should be &lt;tt&gt;synchronized&lt;/tt&gt;. Open new issue? &lt;/p&gt;</comment>
                            <comment id="15056979" author="vrodionov" created="Mon, 14 Dec 2015 23:37:23 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Seems ChoreService.shutdown() should be synchronized. Open new issue?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not sure. This is called in HRegionServer.stopServiceThreads and is not supposed to be MT-safe. Unless we stop the same mini-cluster from multiple threads?&lt;/p&gt;</comment>
                            <comment id="15056992" author="enis" created="Mon, 14 Dec 2015 23:46:42 +0000"  >&lt;p&gt;I think the issue is that the HashMaps inside ChoreService is not thread-safe. All usages except for shutdown() is guarded by synchronized. Even one thread calling shutdown(), while some other threads trying to access the same hashmaps will throw &lt;tt&gt;ConcurrentModificationException&lt;/tt&gt;. &lt;/p&gt;</comment>
                            <comment id="15057000" author="vrodionov" created="Mon, 14 Dec 2015 23:54:00 +0000"  >&lt;p&gt;OK, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;. I will open JIRA.&lt;/p&gt;</comment>
                            <comment id="15057022" author="vrodionov" created="Tue, 15 Dec 2015 00:10:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14977&quot; title=&quot;ChoreService.shutdown may result in ConcurrentModificationException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14977&quot;&gt;&lt;del&gt;HBASE-14977&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="15074732" author="lhofhansl" created="Wed, 30 Dec 2015 07:33:28 +0000"  >&lt;p&gt;This is almost strictly add-on. We can backport to 0.98 I think. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(We should also test whether this allows HBase to handle usecases that are typically handled by Kafka.)&lt;/p&gt;</comment>
                            <comment id="15075652" author="lhofhansl" created="Thu, 31 Dec 2015 02:39:30 +0000"  >&lt;p&gt;For what&apos;s it worth, here&apos;s a 0.98 patch for your consideration. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Changes to the 1.2 patch are cosmetic...&lt;br/&gt;
...Except for the test! It seems in 1.0 and later, the compact-after-flush feature is broken. In 0.98 it is working, and hence the test fails, because all hfiles are compacted away straight after each flush, so I had to change the time handling to avoid that.&lt;br/&gt;
Something to look at at 1.2+&lt;/p&gt;</comment>
                            <comment id="15075680" author="vrodionov" created="Thu, 31 Dec 2015 03:22:23 +0000"  >&lt;blockquote&gt;
&lt;p&gt; here&apos;s a 0.98 patch&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15082200" author="apurtell" created="Tue, 5 Jan 2016 01:46:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;here&apos;s a 0.98 patch&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;br/&gt;
Want to commit it?&lt;/p&gt;</comment>
                            <comment id="15082378" author="lhofhansl" created="Tue, 5 Jan 2016 04:56:04 +0000"  >&lt;p&gt;Yeah... Will commit today or early tomorrow.&lt;/p&gt;</comment>
                            <comment id="15082464" author="lhofhansl" created="Tue, 5 Jan 2016 06:11:21 +0000"  >&lt;p&gt;Actually there&apos;s a bug in HMaster.checkCompactionPolicy(...):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (HColumnDescriptor hcd : htd.getColumnFamilies()) {
+      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; compactionPolicy =
+          hcd.getConfigurationValue(DefaultStoreEngine.DEFAULT_COMPACTION_POLIC
Y_CLASS_KEY);
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (compactionPolicy == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+        compactionPolicy = className;
+      }
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (className.equals(FIFOCompactionPolicy.class.getName()) == &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;) {    &amp;lt;-------
+        &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The indicated line should be:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (compactionPolicy.equals(FIFOCompactionPolicy.class.getName()) == &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;No? (this is wrong in all branches)&lt;/p&gt;</comment>
                            <comment id="15082473" author="stack" created="Tue, 5 Jan 2016 06:18:23 +0000"  >&lt;p&gt;Yeah. It looks wrong (And it should be if (!....  and drop that == false).&lt;/p&gt;</comment>
                            <comment id="15082479" author="lhofhansl" created="Tue, 5 Jan 2016 06:22:33 +0000"  >&lt;p&gt;And (cosmetic) majorCompactionPeriod and splitPolicyClassName are not used anywhere.&lt;/p&gt;</comment>
                            <comment id="15082514" author="lhofhansl" created="Tue, 5 Jan 2016 06:46:49 +0000"  >&lt;p&gt;Lastly, does this require &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14467&quot; title=&quot;Compaction improvements: DefaultCompactor should not compact TTL-expired files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14467&quot;&gt;&lt;del&gt;HBASE-14467&lt;/del&gt;&lt;/a&gt; as well?&lt;/p&gt;</comment>
                            <comment id="15082522" author="lhofhansl" created="Tue, 5 Jan 2016 06:50:24 +0000"  >&lt;p&gt;One more: Should we recommend increasing hbase.hstore.compactionThreshold as well (default it 3)&lt;/p&gt;</comment>
                            <comment id="15082532" author="lhofhansl" created="Tue, 5 Jan 2016 06:58:37 +0000"  >&lt;p&gt;Example shell command:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
create &apos;x&apos;,{NAME=&amp;gt;&apos;y&apos;, TTL=&amp;gt;&apos;30&apos;}, {CONFIGURATION =&amp;gt; {&apos;hbase.hstore.defaultengine.compactionpolicy.class&apos; =&amp;gt; &apos;org.apache.hadoop.hbase.regionserver.compactions.FIFOCompactionPolicy&apos;, &apos;hbase.hstore.blockingStoreFiles&apos; =&amp;gt; 1000}}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15082535" author="lhofhansl" created="Tue, 5 Jan 2016 07:00:54 +0000"  >&lt;p&gt;V2 for 0.98.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;uses compactionPolicy correctly in checkCompactionPolicy&lt;/li&gt;
	&lt;li&gt;gets rid of a bunch of trailing white space (I hate to the whitespace nazi &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I did some basic testing on this, but nothing intensive.&lt;/p&gt;</comment>
                            <comment id="15082566" author="lhofhansl" created="Tue, 5 Jan 2016 07:24:41 +0000"  >&lt;p&gt;Sorry for the spam here. I tested the following scenario:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;compaction threshold set to 3&lt;/li&gt;
	&lt;li&gt;TTL 30s&lt;/li&gt;
	&lt;li&gt;flushed 5 files to disk within 30s.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Shouldn&apos;t I expect that after a while all files should be removed? I find them still hanging around after 1h.&lt;/p&gt;</comment>
                            <comment id="15083558" author="vrodionov" created="Tue, 5 Jan 2016 18:55:32 +0000"  >&lt;p&gt;Looking into this.&lt;/p&gt;</comment>
                            <comment id="15083567" author="vrodionov" created="Tue, 5 Jan 2016 19:04:16 +0000"  >&lt;p&gt;Need to push addendum.&lt;/p&gt;</comment>
                            <comment id="15083584" author="vrodionov" created="Tue, 5 Jan 2016 19:15:29 +0000"  >&lt;p&gt;The bug &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; found does not allow setting FIFO compaction policy per column family. I reopened JIRA and added small fix. &lt;/p&gt;</comment>
                            <comment id="15083615" author="vrodionov" created="Tue, 5 Jan 2016 19:29:39 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lastly, does this require &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14467&quot; title=&quot;Compaction improvements: DefaultCompactor should not compact TTL-expired files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14467&quot;&gt;&lt;del&gt;HBASE-14467&lt;/del&gt;&lt;/a&gt; as well?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I am pretty sure it does not. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14467&quot; title=&quot;Compaction improvements: DefaultCompactor should not compact TTL-expired files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14467&quot;&gt;&lt;del&gt;HBASE-14467&lt;/del&gt;&lt;/a&gt; should be marked as invalid. Will double check it.&lt;/p&gt;</comment>
                            <comment id="15083657" author="vrodionov" created="Tue, 5 Jan 2016 19:48:30 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think you should backport &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10141&quot; title=&quot;instead of putting expired store files thru compaction, just archive them&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10141&quot;&gt;&lt;del&gt;HBASE-10141&lt;/del&gt;&lt;/a&gt; to 0.98 as well? I am going to mark &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14467&quot; title=&quot;Compaction improvements: DefaultCompactor should not compact TTL-expired files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14467&quot;&gt;&lt;del&gt;HBASE-14467&lt;/del&gt;&lt;/a&gt; as invalid.&lt;/p&gt;</comment>
                            <comment id="15083931" author="vrodionov" created="Tue, 5 Jan 2016 22:07:58 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Sorry for the spam here. I tested the following scenario:&lt;br/&gt;
compaction threshold set to 3&lt;br/&gt;
TTL 30s&lt;br/&gt;
flushed 5 files to disk within 30s.&lt;br/&gt;
Shouldn&apos;t I expect that after a while all files should be removed? I find them still hanging around after 1h.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I do not see this on master branch. Under constant write load, all expired  store files get purged and archived continuously.   &lt;/p&gt;</comment>
                            <comment id="15083967" author="hadoopqa" created="Tue, 5 Jan 2016 22:37:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12780482/14468-0.98-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12780482/14468-0.98-v2.txt&lt;/a&gt;&lt;br/&gt;
  against 0.98 branch at commit 1c4edd2ab702488e21c4929a998c49a4208633fc.&lt;br/&gt;
  ATTACHMENT ID: 12780482&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 28 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;. The applied patch does not generate new checkstyle errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17135//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15084001" author="hadoopqa" created="Tue, 5 Jan 2016 22:56:54 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12780609/HBASE-14468.add.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12780609/HBASE-14468.add.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1c4edd2ab702488e21c4929a998c49a4208633fc.&lt;br/&gt;
  ATTACHMENT ID: 12780609&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;. The applied patch does not generate new checkstyle errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17136//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17136//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17136//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17136//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17136//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17136//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17136//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17136//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15084015" author="vrodionov" created="Tue, 5 Jan 2016 23:03:16 +0000"  >&lt;p&gt;Addendum is ready to be committed (2.0, 1.2, 1.3).&lt;/p&gt;</comment>
                            <comment id="15084059" author="lhofhansl" created="Tue, 5 Jan 2016 23:34:34 +0000"  >&lt;p&gt;That&apos;s different. I see that as I flush at the time of flushing we do compaction checks and remove the old files.&lt;br/&gt;
But if I write a bunch in 30s (I flush manually), and then stop all activity the files are not purged.&lt;/p&gt;

&lt;p&gt;With longer TTLs of a few days or weeks that may significant.&lt;/p&gt;

&lt;p&gt;I tested this in the shell with:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
put &apos;x&apos;, &apos;r1&apos;, &apos;y:1&apos;, 1; flush &apos;x&apos;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And just changing &apos;r1&apos; to &apos;r2&apos;, &apos;r3&apos;, etc, each time. That way I created 5 store files in 30s. Then I stop all activity, and the store files never get collected, even though their TTL clearly expires. (compaction threshold is still 3). With the default collector they do get collected after a minute or so.&lt;/p&gt;

&lt;p&gt;Is there something else besides this patch I need that is 1.2+ but not in 0.98?&lt;/p&gt;</comment>
                            <comment id="15084061" author="lhofhansl" created="Tue, 5 Jan 2016 23:35:26 +0000"  >&lt;p&gt;+1 on addendum.&lt;/p&gt;</comment>
                            <comment id="15084099" author="lhofhansl" created="Tue, 5 Jan 2016 23:56:31 +0000"  >&lt;p&gt;Pushed addendum to 1.2, 1.3, and 2.0&lt;/p&gt;</comment>
                            <comment id="15084541" author="hudson" created="Wed, 6 Jan 2016 02:10:46 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3 #481 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/481/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/481/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; addendum. (larsh: rev f4a66fc083a2c11e8de0ea283f45c5eeb0bac93e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15084593" author="hudson" created="Wed, 6 Jan 2016 02:55:35 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3-IT #421 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/421/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/421/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; addendum. (larsh: rev f4a66fc083a2c11e8de0ea283f45c5eeb0bac93e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15084618" author="vrodionov" created="Wed, 6 Jan 2016 03:20:17 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Is there something else besides this patch I need that is 1.2+ but not in 0.98?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10141&quot; title=&quot;instead of putting expired store files thru compaction, just archive them&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10141&quot;&gt;&lt;del&gt;HBASE-10141&lt;/del&gt;&lt;/a&gt;. Not sure if it is in 0.98.&lt;/p&gt;</comment>
                            <comment id="15084931" author="hudson" created="Wed, 6 Jan 2016 03:37:47 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-Trunk_matrix #612 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/612/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/612/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; addendum. (larsh: rev e8fbc9b43a3742358e0bdfe441ff4ca9d14e127b)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15084938" author="hudson" created="Wed, 6 Jan 2016 03:39:14 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #379 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/379/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/379/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; addendum. (larsh: rev 883e3cdc34d29d81326b84220460016c38db7c6a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15085018" author="hudson" created="Wed, 6 Jan 2016 05:45:15 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2 #490 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/490/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/490/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; addendum. (larsh: rev 883e3cdc34d29d81326b84220460016c38db7c6a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15086059" author="lhofhansl" created="Wed, 6 Jan 2016 18:55:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10141&quot; title=&quot;instead of putting expired store files thru compaction, just archive them&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10141&quot;&gt;&lt;del&gt;HBASE-10141&lt;/del&gt;&lt;/a&gt;. Not sure if it is in 0.98.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s in 0.98 via &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12144&quot; title=&quot;Backport HBASE-10141 &amp;#39;instead of putting expired store files thru compaction, just archive them&amp;#39; to 0.98&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12144&quot;&gt;&lt;del&gt;HBASE-12144&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt;, any change to try the scenario I mentioned above?&lt;br/&gt;
I.e. (1) define a TTL (perhaps a few minutes), (2) do a bunch of flushed within the TTL, (3) then stop all writes, (4) see if all prior store files are eventually collected without any write activity.&lt;/p&gt;

&lt;p&gt;I might get time to test a bit more in 0.98, until then I&apos;m gonna hold off committing to 0.98.&lt;/p&gt;</comment>
                            <comment id="15086102" author="vrodionov" created="Wed, 6 Jan 2016 19:19:51 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Vladimir Rodionov, any change to try the scenario I mentioned above?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No writes, no flushes, no compactions. This is expected behaviour. All expired files will be purged when next flush happens (maximum in 1h, when periodic memstore flusher kicks in). I do not see any issues here, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="15086198" author="vrodionov" created="Wed, 6 Jan 2016 20:06:35 +0000"  >&lt;p&gt;Verified test with short MEMSTORE_PERIODIC_FLUSH_INTERVAL&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
conf.setInt(HRegion.MEMSTORE_PERIODIC_FLUSH_INTERVAL, 60000);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All expired stores have been purged after first periodic flush.&lt;/p&gt;</comment>
                            <comment id="15086210" author="lhofhansl" created="Wed, 6 Jan 2016 20:19:25 +0000"  >&lt;p&gt;Hmm... We have the CompactionChecker in the RS, which wakes up every 10s. But I notice it actually does work only every 1000&apos;s iteration by default.&lt;/p&gt;

&lt;p&gt;Sorry for the false alarm.&lt;/p&gt;

&lt;p&gt;The code does look a bit funky (HRegionServer.CompactionChecker.chore()):&lt;br/&gt;
If I read this right, then all stores that need compaction will trigger a compaction on the very same iteration (assuming all have the same default compaction multiplier). How that not lead to compaction storms? But that is unrelated to this.&lt;/p&gt;</comment>
                            <comment id="15086925" author="lhofhansl" created="Thu, 7 Jan 2016 06:41:03 +0000"  >&lt;p&gt;Also verified in 0.98 with a small compaction multiplier, I see the files get removed.&lt;/p&gt;

&lt;p&gt;All good. Going to commit to 0.98 and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; suggested.&lt;/p&gt;</comment>
                            <comment id="15086931" author="lhofhansl" created="Thu, 7 Jan 2016 06:49:29 +0000"  >&lt;p&gt;Pushed to 0.98. Marking &quot;Fixed&quot; again.&lt;/p&gt;</comment>
                            <comment id="15087287" author="hudson" created="Thu, 7 Jan 2016 12:21:14 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1157 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1157/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1157/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; Compaction improvements: FIFO compaction policy. (Vladimir (larsh: rev 912b42786fbb1374f42648aceaa813ab009e3a9b)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/FIFOCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TimeOffsetEnvironmentEdge.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestFIFOCompactionPolicy.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15087681" author="hudson" created="Thu, 7 Jan 2016 16:48:05 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-matrix #283 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-matrix/283/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-matrix/283/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14468&quot; title=&quot;Compaction improvements: FIFO compaction policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14468&quot;&gt;&lt;del&gt;HBASE-14468&lt;/del&gt;&lt;/a&gt; Compaction improvements: FIFO compaction policy. (Vladimir (larsh: rev 912b42786fbb1374f42648aceaa813ab009e3a9b)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/FIFOCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/compactions/TestFIFOCompactionPolicy.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TimeOffsetEnvironmentEdge.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12895668">HBASE-14467</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12862595">HBASE-14383</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12914593">HBASE-14847</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                            <outwardlinks description="requires">
                                        <issuelink>
            <issuekey id="12901418">HBASE-14511</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12780482" name="14468-0.98-v2.txt" size="21469" author="lhofhansl" created="Tue, 5 Jan 2016 07:00:54 +0000"/>
                            <attachment id="12780076" name="14468-0.98.txt" size="21560" author="lhofhansl" created="Thu, 31 Dec 2015 02:39:30 +0000"/>
                            <attachment id="12762618" name="HBASE-14468-v1.patch" size="34827" author="vrodionov" created="Sun, 27 Sep 2015 22:00:30 +0000"/>
                            <attachment id="12772869" name="HBASE-14468-v10.patch" size="23211" author="vrodionov" created="Tue, 17 Nov 2015 23:50:58 +0000"/>
                            <attachment id="12762631" name="HBASE-14468-v2.patch" size="36467" author="vrodionov" created="Mon, 28 Sep 2015 02:45:28 +0000"/>
                            <attachment id="12764291" name="HBASE-14468-v3.patch" size="36277" author="vrodionov" created="Tue, 29 Sep 2015 18:23:56 +0000"/>
                            <attachment id="12764516" name="HBASE-14468-v4.patch" size="48627" author="vrodionov" created="Thu, 1 Oct 2015 00:10:26 +0000"/>
                            <attachment id="12765070" name="HBASE-14468-v5.patch" size="10452" author="vrodionov" created="Mon, 5 Oct 2015 21:38:46 +0000"/>
                            <attachment id="12768121" name="HBASE-14468-v6.patch" size="12589" author="vrodionov" created="Thu, 22 Oct 2015 19:47:34 +0000"/>
                            <attachment id="12769572" name="HBASE-14468-v7.patch" size="16308" author="vrodionov" created="Thu, 29 Oct 2015 17:13:55 +0000"/>
                            <attachment id="12770173" name="HBASE-14468-v8.patch" size="23269" author="vrodionov" created="Mon, 2 Nov 2015 22:04:06 +0000"/>
                            <attachment id="12770193" name="HBASE-14468-v9.patch" size="23363" author="vrodionov" created="Mon, 2 Nov 2015 23:30:29 +0000"/>
                            <attachment id="12780609" name="HBASE-14468.add.patch" size="1742" author="vrodionov" created="Tue, 5 Jan 2016 19:32:08 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12901679">HBASE-14527</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Sep 2015 00:52:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            49 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2lftz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>FIFO compaction policy selects only files which have all cells expired. The column family MUST have non-default TTL. &lt;br/&gt;
Essentially, FIFO compactor does only one job: collects expired store files. &lt;br/&gt;
&lt;br/&gt;
Because we do not do any real compaction, we do not use CPU and IO (disk and network), we do not evict hot data from a block cache. The result: improved throughput and latency both write and read.&lt;br/&gt;
See: &lt;a href=&quot;https://github.com/facebook/rocksdb/wiki/FIFO-compaction-style&quot;&gt;https://github.com/facebook/rocksdb/wiki/FIFO-compaction-style&lt;/a&gt;</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>