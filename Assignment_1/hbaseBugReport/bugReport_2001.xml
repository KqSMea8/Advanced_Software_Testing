<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:58:08 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2001/HBASE-2001.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2001] Coprocessors: Colocate user code with regions</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2001</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Support user code that runs run next to each region in table. As regions split and move, coprocessor code should automatically  move also.&lt;/p&gt;

&lt;p&gt;Use classloader which looks on HDFS.&lt;/p&gt;

&lt;p&gt;Associate a list of classes to load with each table. Put this in HRI so it inherits from table but can be changed on a per region basis (so then those region specific changes can inherited by daughters). &lt;/p&gt;

&lt;p&gt;Not completely arbitrary code, should require implementation of an interface with callbacks for:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Open&lt;/li&gt;
	&lt;li&gt;Close&lt;/li&gt;
	&lt;li&gt;Split&lt;/li&gt;
	&lt;li&gt;Compact&lt;/li&gt;
	&lt;li&gt;(Multi)get and scanner next()&lt;/li&gt;
	&lt;li&gt;(Multi)put&lt;/li&gt;
	&lt;li&gt;(Multi)delete&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Add method to HTableInterface for invoking coprocessor methods and retrieving results.  &lt;/p&gt;

&lt;p&gt;Add methods in o.a.h.h.regionserver or subpackage which implement convenience functions for coprocessor methods and consistent/controlled access to internals: store access, threading, persistent and ephemeral state, scratch storage, etc. &lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href=&quot;https://github.com/trendmicro/hbase/tree/coprocessor&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/trendmicro/hbase/tree/coprocessor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please see the latest attached package-info.html for updated description.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12441378">HBASE-2001</key>
            <summary>Coprocessors: Colocate user code with regions</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12441373">HBASE-2000</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mingjielai">Mingjie Lai</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Sat, 21 Nov 2009 19:34:40 +0000</created>
                <updated>Fri, 20 Nov 2015 13:02:06 +0000</updated>
                            <resolved>Sat, 20 Nov 2010 01:26:17 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>22</watches>
                                                                <comments>
                            <comment id="12781036" author="apurtell" created="Sat, 21 Nov 2009 19:34:45 +0000"  >&lt;p&gt;One application of this is like in process map reduce on the HBase cluster. Coprocessors accept list of writables in and produce a list of writables out, like a mapper. Client library doing collation and aggregation of per region invocations would be functionally like a reducer.&lt;/p&gt;</comment>
                            <comment id="12781068" author="stack" created="Sat, 21 Nov 2009 23:22:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1936&quot; title=&quot;ClassLoader that loads from hdfs; useful adding filters to classpath without having to restart services&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1936&quot;&gt;&lt;del&gt;HBASE-1936&lt;/del&gt;&lt;/a&gt; has a patch that will do classloading off hdfs.&lt;/p&gt;</comment>
                            <comment id="12781077" author="apurtell" created="Sun, 22 Nov 2009 00:31:25 +0000"  >&lt;p&gt;Consider ASM (&lt;a href=&quot;http://asm.ow2.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://asm.ow2.org/&lt;/a&gt;), a high performance bytecode rewrite framework with BSD style license. Just another jar to drop into lib/. &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Take additional verification steps beyond basic bytecode verification to reject object and/or method use beyond those on a white list if security policy demands it&lt;/li&gt;
	&lt;li&gt;Insert code to deal with regionserver internal details that client code should not be concerned about&lt;/li&gt;
	&lt;li&gt;Weave in CPU and/or memory accounting and/or forced termination should bounds on same be exceeded&lt;/li&gt;
	&lt;li&gt;Rewrite calls to an interface into static invocations of the implementer&lt;/li&gt;
	&lt;li&gt;Weave in auditing&lt;br/&gt;
etc. &lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12782334" author="hammer" created="Wed, 25 Nov 2009 07:52:49 +0000"  >&lt;p&gt;Chiming in to note that Doug is using ASM for some stuff over in Avro-land: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-143&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-143&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12783841" author="stack" created="Mon, 30 Nov 2009 21:06:28 +0000"  >&lt;p&gt;Comments on doc:&lt;/p&gt;

&lt;p&gt;&quot;Regions contain references to the coprocessor implementation classes associated with them.&quot;&lt;/p&gt;

&lt;p&gt;Q: On above, its indeed the classes, not objects?  Objects can cross the split?  Not easily anyways.&lt;/p&gt;

&lt;p&gt;Do we need both closing and pendingClose?  I&apos;d think just one?  (Change pendingOpen to opening and keep closing ditching pendingClose).  I don&apos;t know for sure.  Just asking.&lt;/p&gt;

&lt;p&gt;Why no control over flush?  Maybe it would want to hold up a flush?  You think that too dangerous?&lt;/p&gt;

&lt;p&gt;On the interface:&lt;/p&gt;

&lt;p&gt;Drop the &quot;H&quot; from Coprocessor class I&apos;d say.  Thats the new fashion these days.&lt;/p&gt;

&lt;p&gt;It looks great.&lt;/p&gt;

&lt;p&gt;Rather, should we do the java Events model where one method gets all event types, the passed in object says that the event is.  In the method, first thing you check if its an event you are interested in?  Makes things easier to implement especially if you are only implementing part of the functionality.  This model may not make sense though for this context or may be overkill (See java.util.EventObject and some of its implementations).&lt;/p&gt;

&lt;p&gt;Will Coprocessors make for lots of new object instantiations?  Its going to be invoked on each Get and Scan.&lt;/p&gt;

&lt;p&gt;The logging interface seems odd.  Why have new define?  Why not just use apache logging?&lt;/p&gt;

&lt;p&gt;Should we be extracting an Interface from Region so we can have a Region implemetention and so your Coprocessor can have an implementation too?  We sort of did something like with the &quot;Incommon&quot; interface we have for testing that has allows for implementations that run the same tests only now against the Region and then against the client-side.   Extracting a &apos;official&apos; Region interface sounds grand to me... would help with testing?&lt;/p&gt;

&lt;p&gt;How does the PrivateStore persist?  Where?  What you thinking?&lt;/p&gt;

&lt;p&gt;Looks great.&lt;/p&gt;</comment>
                            <comment id="12784016" author="apurtell" created="Tue, 1 Dec 2009 02:30:36 +0000"  >&lt;blockquote&gt;
&lt;p&gt;&quot;Regions contain references to the coprocessor implementation classes associated with them.&quot;&lt;br/&gt;
Q: On above, its indeed the classes, not objects?  Objects can cross the split?  Not easily anyways.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When regions are split, new coprocessor object instances would be allocated on the daughters &amp;#8211; one instance for each of the coprocessor classes listed in the region metadata &amp;#8211; when they are opening and the coprocessor&apos;s onOpen method is invoked to give it a chance to initialize. Prior to this the parent would be informed of the impending split via an onSplit invocation, and when it closes its onClose method would be called so it can clean up. How to manage the split beyond this would be the problem of the coprocessor. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Do we need both closing and pendingClose? &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I found that state transition in the master code and copied it verbatim from a comment block. Actually coprocessors only go through three states: opening, open, closing. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why no control over flush?  Maybe it would want to hold up a flush?  You think that too dangerous?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I do think that is too dangerous. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Rather, should we do the java Events model where one method gets all event types, the passed in object says that the event is.  In the method, first thing you check if its an event you are interested in?  Makes things easier to implement especially if you are only implementing part of the functionality.  This model may not make sense though for this context or may be overkill (See java.util.EventObject and some of its implementations).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I thought about that and go back and forth. Explicit interface is also self-documenting while arcane gotchas can hide in event specific detail. There&apos;s also the notion of using ASM to weave in policy enforcement. That could be easier if each callback is its own well defined method. On the other hand there&apos;s a lot of foo() &lt;/p&gt;
{ super(); }
&lt;p&gt; crap for each callback that a coprocessor does not care about. My current thinking is the later does not outweigh the former. &lt;/p&gt;

&lt;p&gt;By the way, I am thinking about using ASM to weave in CPU and memory accounting and limit enforcement as a generic code safety policy regardless.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Will Coprocessors make for lots of new object instantiations?  Its going to be invoked on each Get and Scan.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not unless the coprocessor does it. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The logging interface seems odd.  Why have new define?  Why not just use apache logging?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The idea is no I/O outside of the interface is allowed. There will be an additional verification step at classload time, implemented with ASM, that checks against a whitelist. Making the whitelist to the extent possible a single interface is a simplifying choice.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Should we be extracting an Interface from Region so we can have a Region implemetention and so your Coprocessor can have an implementation too?  We sort of did something like with the &quot;Incommon&quot; interface we have for testing that has allows for implementations that run the same tests only now against the Region and then against the client-side.  Extracting a &apos;official&apos; Region interface sounds grand to me... would help with testing?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s a good idea. Should be a separate issue? &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How does the PrivateStore persist?  Where?  What you thinking?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;One PrivateStore for each coprocessor would persist as an HFile+log in the region&apos;s store. Would be cloned into daughters on split. Would get periodic compaction whenever the store is compacted. The general idea is to do something less than manage a real table in a way that hooks in naturally with store management. I gave it a table interface but it could be just a bag of KVs if supporting multiple column families in a single HFile+log is too much trouble. &lt;/p&gt;
</comment>
                            <comment id="12785198" author="stack" created="Thu, 3 Dec 2009 06:14:37 +0000"  >&lt;p&gt;Would suggest that if coprocessors only need three states, then just do those.  Region state transition is up for review.  Will probably change anyways.&lt;/p&gt;

&lt;p&gt;No worries on going the pedantic route &amp;#8211; a method per rather than all into the one method with a handler switch.  For sure makes things like introspection and autogeneration easier.  Its just a pain for the human having to implement all methods though only interested in a few.&lt;/p&gt;

&lt;p&gt;I know nothing about ASM.  Go for it.&lt;/p&gt;

&lt;p&gt;OK on they why you have a logging interface.&lt;/p&gt;

&lt;p&gt;Yes to separate issue for Region interface.&lt;/p&gt;

&lt;p&gt;First thought is that mimicing table interface might confuse more than it helps but need to study more before I can offer stronger opinion.&lt;/p&gt;

&lt;p&gt;Otherwise, all sounds great.&lt;/p&gt;

</comment>
                            <comment id="12785368" author="apurtell" created="Thu, 3 Dec 2009 15:56:38 +0000"  >&lt;p&gt;.bq Would suggest that if coprocessors only need three states, then just do those. &lt;/p&gt;

&lt;p&gt;I&apos;ll make that clear in the documentation.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;First thought is that mimicing table interface might confuse more than it helps but need to study more before I can offer stronger opinion.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There are two table interfaces currently:&lt;br/&gt;
1) PrivateStore &amp;#8211; a full table, private to the Coprocessor instance, backed by a HFile+log&lt;br/&gt;
2) RegionAccessor &amp;#8211; a table interface to the region associated with the Coprocessor, will reject edits outside the region, otherwise allows (controlled) admin and mutation actions on the region. Also of note here the Coprocessor hooks will be called for its own edits, just makes things easier.&lt;/p&gt;

&lt;p&gt;Just FYI I have the environment implemented except for PrivateStore. No classloader or ASM bits yet; I need to study and think more about that.&lt;/p&gt;

&lt;p&gt;Meantime the next step is hooking up Coprocessors to the HRegion via calls out to the interface in all the right places in HRegion, and possibly a few up in HRegionServer. &lt;/p&gt;</comment>
                            <comment id="12785412" author="apurtell" created="Thu, 3 Dec 2009 17:42:50 +0000"  >&lt;p&gt;Will redo how filters and coprocessors relate &amp;#8211; Rather than incidentally contributing them, coprocessors should replace them.&lt;/p&gt;</comment>
                            <comment id="12785506" author="stack" created="Thu, 3 Dec 2009 20:38:09 +0000"  >&lt;p&gt;Are you using HTableInterface for your &quot;table&quot; implementations?&lt;/p&gt;

&lt;p&gt;+1 that coprocessors be used to implement filters.  Would we keep the filter interface as is?   With coprocessors, filters would be able to have state that crossed rows and even regions?  (Currently state is in-row only).&lt;/p&gt;

&lt;p&gt;Critical I&apos;d say is that coprocessors are testable without having to spin up servers.  They should be testable standalone if possible.&lt;/p&gt;</comment>
                            <comment id="12785582" author="apurtell" created="Thu, 3 Dec 2009 22:33:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;Are you using HTableInterface for your &quot;table&quot; implementation?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, but I should you are right.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Critical I&apos;d say is that coprocessors are testable without having to spin up servers.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It would depend on the coprocessor but for &quot;builtins&quot; like filters we can manage that.&lt;/p&gt;

&lt;p&gt;Of course to test the framework there needs to be a (sub)suite of tests which run against a live region server.&lt;/p&gt;
</comment>
                            <comment id="12785742" author="apurtell" created="Fri, 4 Dec 2009 04:31:48 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Are you using HTableInterface for your &quot;table&quot; implementation?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, but I should you are right.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;On second thought it should be an internal interface. Currently, a subset of HRegionInterface.&lt;/p&gt;</comment>
                            <comment id="12786453" author="apurtell" created="Sat, 5 Dec 2009 17:28:35 +0000"  >&lt;p&gt;Make various integration modes (region mediation, ioctl-like command target, filter implementation) their own interfaces. Determine at runtime what interfaces a coprocessor implements and hook up accordingly. &lt;/p&gt;

&lt;p&gt;Patch is a work in progress.&lt;/p&gt;</comment>
                            <comment id="12792644" author="tlipcon" created="Fri, 18 Dec 2009 21:01:55 +0000"  >&lt;p&gt;Does loading arbitrary Java code into the region servers not scare the crap out of anyone else? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;d feel way better about this if it were embedding a language that could be provably safe. For example, VMware&apos;s dtrace-alike (vprobes) uses an embedded language called &quot;vp&quot; which can put tight upper bounds on allocation, time, etc. See &lt;a href=&quot;http://www.vmware.com/products/beta/ws/vprobes_reference.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.vmware.com/products/beta/ws/vprobes_reference.pdf&lt;/a&gt; . That approach is extra strict because it&apos;s running in the VM monitor which has to be super stable, but the same general idea should be applied to coprocessors IMHO.&lt;/p&gt;</comment>
                            <comment id="12792652" author="apurtell" created="Fri, 18 Dec 2009 21:28:21 +0000"  >&lt;p&gt;Nobody has to develop and deploy custom coprocessors if they don&apos;t want the risk.&lt;/p&gt;

&lt;p&gt;Maybe it&apos;s not highlighted enough but my current thinking and plan is to use ASM to also impose some constraints. This is middle ground between arbitrary function and a locked down language and will take only reasonable effort to achieve (with part time one person contribution).&lt;/p&gt;

&lt;p&gt;Beyond that, I&apos;m not opposed if someone wants to contribute a restricted yet somehow useful little language, I just have no plans to do that or I&apos;ll be working on this indefinitely.&lt;/p&gt;

</comment>
                            <comment id="12792654" author="tlipcon" created="Fri, 18 Dec 2009 21:37:34 +0000"  >&lt;p&gt;Fair enough. Don&apos;t want to discourage the current work &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12792665" author="apurtell" created="Fri, 18 Dec 2009 21:54:16 +0000"  >&lt;p&gt;@Todd: Just to be clear I don&apos;t disagree with you. It&apos;s a question of dividing the problem into manageable chunks. My plan is to put ASM in the class loading path for coprocessors from the outset. In the beginning it will serve little purpose. I hope from there to develop CPU and memory allocation limit policy enforcement via runtime code weaving, either myself or with assistance. I put up &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2058&quot; title=&quot;Coprocessors: CPU and memory limit policy enforcment via runtime weaving&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2058&quot;&gt;&lt;del&gt;HBASE-2058&lt;/del&gt;&lt;/a&gt; to make this more clear. &lt;/p&gt;</comment>
                            <comment id="12794290" author="apurtell" created="Thu, 24 Dec 2009 01:21:38 +0000"  >&lt;p&gt;Updated attachment.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Dynamically install Filter implementations provided by a Coprocessor via o.a.h.io.WritableFactories so Get and Scan deserialization will work afterward.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Rebased against latest trunk.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12830838" author="apurtell" created="Mon, 8 Feb 2010 05:44:20 +0000"  >&lt;p&gt;Latest patch contains simple working unit tests for basic Coprocessor hooks and also RegionObserver interface hooks. &lt;/p&gt;

&lt;p&gt;Also, the initial implementation of an in-process MapReduce framework. Coprocessors can optionally implement a &apos;MapReduce&apos; interface which clients will at some point be able to invoke concurrently on all regions of the table within the HRS processes. (Server side needs unit tests and testing; no client side yet.) Note this is not MapReduce on the table; this is MapReduce on each region, concurrently.&lt;/p&gt;

&lt;p&gt;In-process MapReduce is multithreaded. Concurrency of mappers and reducers is specified separately. Map jobs are submitted with a Scan object which defines the scope and any filters for a scanner which feeds mappers. Mappers can emit intermediate KeyValues to a collector for reduction or can get references to objects in the coprocessor&apos;s environment and perform operations on them, e.g. increment an AtomicLong, etc. Reducers will get KeyValues from map phase output ordered and grouped by key. Reducers also have access to objects in the coprocessor environment. Therefore one can implement MapReduce in a manner very similar to Hadoop&apos;s MR framework, or e.g. aggregating functions can use shared variables to avoid the overhead of generating (and processing) a lot of intermediates.&lt;/p&gt;

&lt;p&gt;An in-process MapReduce job can be configured to auto commit. If so, KeyValues written to the reduce collector by reducers will be automatically committed back to the region after all reducers have completed execution. Up until all mappers and reducers successfully complete execution no values are committed to the region. Then, we try really hard to commit them all. &lt;/p&gt;

&lt;p&gt;KeyValues emitted by reducers must have a row key that falls within the bounds of the region if the job is auto committing. Otherwise, the output can be arbitrary.&lt;/p&gt;

&lt;p&gt;If a job is not auto committing, when it completes clients have access to the KeyValues output by the reducer via a scanner like interface. &lt;/p&gt;

&lt;p&gt;The in-process MapReduce framework uses leases. A job is only alive as long as it has a lease. Its output KeyValues are only available as long as it has a lease. So for long running jobs the client must periodically poll status to keep it alive, and then retrieval by &quot;scanner&quot; will also renew the lease. A lease cannot expire during auto commit. &lt;/p&gt;</comment>
                            <comment id="12831062" author="stack" created="Mon, 8 Feb 2010 19:22:18 +0000"  >&lt;p&gt;Woah!&lt;/p&gt;</comment>
                            <comment id="12833475" author="apurtell" created="Sun, 14 Feb 2010 00:10:28 +0000"  >&lt;p&gt;Latest patch has working simple unit tests for MapReduce.&lt;/p&gt;

&lt;p&gt;There is also a working unit test for on-demand loading of coprocessor classes from jars referenced via table attributes:&lt;/p&gt;

&lt;p&gt;Tables can have any number of attributes with keys that start with &quot;Coprocessor&quot; and values of the form &amp;lt;path&amp;gt;:&amp;lt;class&amp;gt;:&amp;lt;priority&amp;gt;, e.g.&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;&apos;Coprocessor$1&apos; =&amp;gt; &apos;hdfs://localhost:8020/hbase/coprocessors/test.jar:Test:1000&apos;&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;&apos;Coprocessor$2&apos; =&amp;gt; &apos;/hbase/coprocessors/test2.jar:AnotherTest:1001&apos;&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;&amp;lt;path&amp;gt;&lt;/tt&gt; must point to a jar, can be on any filesystem supported by the Hadoop FileSystem object.&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;&amp;lt;class&amp;gt;&lt;/tt&gt; is the coprocessor implementation class. A jar can contain more than one coprocessor implementation, but only one can be specified at a time in each table attribute.&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;&amp;lt;priority&amp;gt;&lt;/tt&gt; is an integer. Coprocessors are executed in order according to the natural ordering of the int. Coprocessors can optionally abort actions. So typically one would want to put authoritative CPs (security policy implementations, perhaps) ahead of observers. &lt;/p&gt;</comment>
                            <comment id="12833629" author="apurtell" created="Sun, 14 Feb 2010 21:20:07 +0000"  >&lt;p&gt;Added multithread MapReduce test, and correctness fixes.&lt;/p&gt;</comment>
                            <comment id="12850601" author="kaykay.unique" created="Sat, 27 Mar 2010 23:10:52 +0000"  >&lt;p&gt;Andrew: Is there a (public) git repository available with the patch , from which we can pull from ? &lt;/p&gt;</comment>
                            <comment id="12850696" author="apurtell" created="Sun, 28 Mar 2010 17:16:41 +0000"  >&lt;p&gt;As you wish: &lt;a href=&quot;http://github.com/apurtell/hbase-coprocessor&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/apurtell/hbase-coprocessor&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12850697" author="apurtell" created="Sun, 28 Mar 2010 17:17:52 +0000"  >&lt;p&gt;I merged up the patch to latest trunk and pushed it to github. It has been some time since I last ran the tests, they may currently fail. Will be fixing them up soon if so.&lt;/p&gt;</comment>
                            <comment id="12872087" author="apurtell" created="Thu, 27 May 2010 04:58:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt;-RegionObserver.patch is just the parts of the 2001 patch for the RegionObserver interface, which enables extension of the regionserver through stacking dynamically loaded extensions on upcalls from HRegion. Made some improvements over the other patch. Added a test case. &lt;/p&gt;</comment>
                            <comment id="12872115" author="hbasereviewboard" created="Thu, 27 May 2010 06:07:38 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch is the parts of the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt; patch which implements support for the RegionObserver interface. This enables extension of the regionserver through stacking dynamically loaded classes i.e. from jars on HDFS onto upcalls from HRegion. I made some improvements over the other patch and added a test case. There are other parts of 2001 which need some thought and some work and would not be useful without client side support. This is the part which could be immediately useful. Submitted for feedback. &lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2001&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 287cd48 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassloading.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/96/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;All the new unit tests plus TestHRegion pass locally.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Andrew&lt;/p&gt;

</comment>
                            <comment id="12873885" author="hbasereviewboard" created="Tue, 1 Jun 2010 05:32:30 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-05-31 22:30:41.618893)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch is the parts of the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt; patch which implements support for the RegionObserver interface. This enables extension of the regionserver through stacking dynamically loaded classes i.e. from jars on HDFS onto upcalls from HRegion. I made some improvements over the other patch and added a test case. There are other parts of 2001 which need some thought and some work and would not be useful without client side support. This is the part which could be immediately useful. &lt;/p&gt;

&lt;p&gt;Submitted for feedback. &lt;/p&gt;

&lt;p&gt;Incorporates a user suggestion and Stack +1 about hooking compaction.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2001&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 2413e98 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MinorCompactingStoreScanner.java 71f738e &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 515b42f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassloading.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/96/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;All the new unit tests plus TestHRegion pass locally.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Andrew&lt;/p&gt;

</comment>
                            <comment id="12873887" author="hbasereviewboard" created="Tue, 1 Jun 2010 05:48:40 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-05-31 22:47:25.650165)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch is the parts of the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt; patch which implements support for the RegionObserver interface. This enables extension of the regionserver through stacking dynamically loaded classes i.e. from jars on HDFS onto upcalls from HRegion. I made some improvements over the other patch and added a test case. There are other parts of 2001 which need some thought and some work and would not be useful without client side support. This is the part which could be immediately useful. &lt;/p&gt;

&lt;p&gt;Submitted for feedback. &lt;/p&gt;

&lt;p&gt;Incorporates a user suggestion and Stack +1 about hooking compaction.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2001&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 2413e98 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/MinorCompactingStoreScanner.java 71f738e &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 515b42f &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassloading.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.hbase.org/r/96/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;All the new unit tests plus TestHRegion pass locally.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Andrew&lt;/p&gt;

</comment>
                            <comment id="12874883" author="hbasereviewboard" created="Thu, 3 Jun 2010 00:25:55 +0000"  >&lt;p&gt;Message from: &quot;Todd Lipcon&quot; &amp;lt;todd@cloudera.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review121&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review121&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;this seems like a reasonable framework, but I&apos;d rather see this stay around as a branch until there is at least one or two actual things using it for a real purpose. Otherwise I think we&apos;ll end up shipping an API that we later realize doesn&apos;t work for real apps. What do you think?&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment676&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment676&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    before or after reporting?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment677&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment677&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this map-like interface is somewhat confusing - what&apos;s the purpose of it?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassloading.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment678&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment678&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    woah, can we add something to the build to build this jar as a test resource, or something?&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment679&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment679&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    you could use mockito verification to do this, probably would be simpler&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Todd&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12874971" author="hbasereviewboard" created="Thu, 3 Jun 2010 06:08:06 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 17:24:34, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; this seems like a reasonable framework, but I&apos;d rather see this stay around as a branch until there is at least one or two actual things using it for a real purpose. Otherwise I think we&apos;ll end up shipping an API that we later realize doesn&apos;t work for real apps. What do you think?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This seems like a good idea when dev&apos;ing an Interface.  After the 3rd implemenation you&apos;ll have some confidence in your Interface.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review121&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review121&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12874975" author="hbasereviewboard" created="Thu, 3 Jun 2010 06:30:51 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review123&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review123&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;This looks really great Andrew.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment680&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment680&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What about unloading?  You remember that conversation up on irc of how loading is one thing but unloading w/o breakage is hard prob.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment681&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment681&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment682&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment682&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I love the one where fellas would be allowed intercept compactions adding their own compacting algorithm &amp;#8211; but I suppose that out of scope here, or coprocessors v2? (nm... I see it later in this patch)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment683&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment683&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Great doc.  Some could probably go out into package doc...&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment684&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment684&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Make this javadoc?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment685&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment685&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Which table is this?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment686&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment686&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Needs to be Writable?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment687&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment687&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is a mixin you&apos;d use if you want to be notified about compactions, etc.?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment688&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment688&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What would this be used for?  For CP to call out elsewhere on a table?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment689&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment689&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Write this as LOG.warn(&quot;Failed close of table=&quot; + table, e)?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment690&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment690&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this needed?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment691&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment691&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    How does this get triggered inside the HRS?  I suppose I&apos;ll learn later down in this patch.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment692&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment692&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Its always on then?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment693&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment693&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Who would want to get at this?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12875228" author="hbasereviewboard" created="Thu, 3 Jun 2010 18:20:51 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review124&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review124&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment698&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment698&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What is purpose of this?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment694&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment694&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Split decisions will not be made post-compaction as they are now after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2375&quot; title=&quot;Revisit compaction configuration parameters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2375&quot;&gt;&lt;del&gt;HBASE-2375&lt;/del&gt;&lt;/a&gt; goes in.  That decision will actually be made at flush time, most likely post-flush though we&apos;ll know at the start whether it will end up needing to split.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment695&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment695&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    So a coprocessor implementation would potentially implement Coprocessor and RegionObserver?  Notifications of higher level events happen through Coprocessor, this is for lower level hooks?  Maybe a bit more detail in class comment to describe difference between the two interfaces.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment701&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment701&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This makes sense now reading the rest of the code.  But it seems that the Coprocessor is in fact the &quot;observer&quot; that just gets notified of actions while this observer is actually the &quot;processor&quot; that can manipulate stuff?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment696&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment696&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    And descending timestamp&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment697&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment697&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is great javadoc&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment699&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment699&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Gets are called after the Get is performed, Puts and Deletes are called before, correct?&lt;/p&gt;

&lt;p&gt;    Would there be a use case for pre-Get hook?  Just wondering.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/#comment700&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#comment700&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Javadoc says it&apos;s called after the split happens but before report to master.  Seems that this happens once we create the new HRegions but before we actually do the swap.  What exactly would/could a coprocessor be doing in this window?&lt;/p&gt;

&lt;p&gt;    One thing to be aware of is the master changes coming are going to make a split run entirely on the RS including the edits to META, closing of the parent, and opening of the children.  Where in that process would this hook make sense?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12875230" author="hbasereviewboard" created="Thu, 3 Jun 2010 18:28:53 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@facebook.com&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-03 11:19:47, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is awesome stuff Andrew!  Great work!&lt;/p&gt;

&lt;p&gt;I agree with Todd, this would probably benefit from baking in a branch somewhere for a while.  Start working up some solid examples to iron out the API.&lt;/p&gt;

&lt;p&gt;There are also a number of master changes as well as compact/flush/split changes that are going into trunk soon that will impact many of the hooks.&lt;/p&gt;

&lt;p&gt;Also, I recall you previously built some type of lightweight MR with coprocessors?  How does that work and how would it fit in with this?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review124&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review124&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12875474" author="hbasereviewboard" created="Fri, 4 Jun 2010 04:53:17 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 17:24:34, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; this seems like a reasonable framework, but I&apos;d rather see this stay around as a branch until there is at least one or two actual things using it for a real purpose. Otherwise I think we&apos;ll end up shipping an API that we later realize doesn&apos;t work for real apps. What do you think?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This seems like a good idea when dev&apos;ing an Interface.  After the 3rd implemenation you&apos;ll have some confidence in your Interface.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, I&apos;ll take all the comments below and incorporate the feedback in a new version and commit it on a feature branch that will track trunk. I can use git to manage the merging and just push snapshots into SVN. Will set up a project on our Hudson to crunch tests for it.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review121&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review121&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12875475" author="hbasereviewboard" created="Fri, 4 Jun 2010 04:53:18 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 17:24:34, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassloading.java, line 40&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=898#file898line40&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=898#file898line40&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     woah, can we add something to the build to build this jar as a test resource, or something?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 17:24:34, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java, line 43&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=899#file899line43&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=899#file899line43&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     you could use mockito verification to do this, probably would be simpler&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks this would be a good opportunity to learn mockito.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 17:24:34, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java, line 149&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=892#file892line149&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=892#file892line149&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     this map-like interface is somewhat confusing - what&apos;s the purpose of it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is an environment space, like unix process env vars, shared among all threads of the coprocessor (which get a reference to the environment). Useful for the mapreduce stuff not included in this patch. For example, rather than sum or average using intermediates, update AtomicLongs instead.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review121&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review121&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12875476" author="hbasereviewboard" created="Fri, 4 Jun 2010 04:54:28 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 23:28:50, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java, line 140&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=892#file892line140&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=892#file892line140&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Which table is this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Any table. The idea is the coprocessor can create any private tables it needs to implement its functionality.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 23:28:50, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java, line 27&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=892#file892line27&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=892#file892line27&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What about unloading?  You remember that conversation up on irc of how loading is one thing but unloading w/o breakage is hard prob.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not trying to tackle unloading yet.&lt;/p&gt;

&lt;p&gt;However, classes are strongly bound to their classloader. We do instantiate a classloader each time to load a coprocessor and we don&apos;t hold a reference to the classloader. It is my understanding that when there are no more references to the classes (no live objects), they and the classloader will be garbage collected, though the JVM spec does not guarantee this the Sun JVM will do this. Creating a new classloader and asking for the class again, presumably from an updated jar, should load the new class &amp;#8211; a unit test can verify. &lt;/p&gt;

&lt;p&gt;To help insure old classes don&apos;t leak via live objects hanging around, we could consider a cooperative lifecycle management scheme like that used by OSGi: &lt;a href=&quot;http://en.wikipedia.org/wiki/OSGi&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/OSGi&lt;/a&gt;. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 23:28:50, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java, line 150&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=892#file892line150&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=892#file892line150&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Needs to be Writable?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 23:28:50, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java, line 29&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=893#file893line29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=893#file893line29&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is a mixin you&apos;d use if you want to be notified about compactions, etc.?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is for translating values found in a flush file into new values in the new storefile being built by the compaction, or for dropping values. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 23:28:50, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java, line 85&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=894#file894line85&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=894#file894line85&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What would this be used for?  For CP to call out elsewhere on a table?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The idea is the coprocessor can create any private tables it needs to implement its functionality. But we want to mediate that, add access control, clean up references when/if the cp is terminated (and perhaps unloaded).&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 23:28:50, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java, line 237&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=894#file894line237&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=894#file894line237&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Is this needed?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why not.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 23:28:50, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java, line 245&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=895#file895line245&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=895#file895line245&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Its always on then?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, otherwise I have to wrap all calls to the cp host in HRegion with &quot;if (coprocessorHost != null) then&quot;, including the inner loops of the major and minor compactors. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 23:28:50, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java, line 2885&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=895#file895line2885&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=895#file895line2885&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Who would want to get at this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Tests. So probably this does not have to be public.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review123&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review123&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12875477" author="hbasereviewboard" created="Fri, 4 Jun 2010 04:54:56 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-02 17:24:34, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java, line 53&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=892#file892line53&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=892#file892line53&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     before or after reporting?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Should be just before. Will double check.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review121&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review121&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12875479" author="hbasereviewboard" created="Fri, 4 Jun 2010 04:58:27 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-03 11:19:47, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java, line 131&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=892#file892line131&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=892#file892line131&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What is purpose of this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Coprocessors may want to change their behavior based on different minor versions. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-03 11:19:47, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java, line 189&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=892#file892line189&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=892#file892line189&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Split decisions will not be made post-compaction as they are now after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2375&quot; title=&quot;Revisit compaction configuration parameters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2375&quot;&gt;&lt;del&gt;HBASE-2375&lt;/del&gt;&lt;/a&gt; goes in.  That decision will actually be made at flush time, most likely post-flush though we&apos;ll know at the start whether it will end up needing to split.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then this signal should shift to the flush upcall.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-03 11:19:47, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java, line 32&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=893#file893line32&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=893#file893line32&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     So a coprocessor implementation would potentially implement Coprocessor and RegionObserver?  Notifications of higher level events happen through Coprocessor, this is for lower level hooks?  Maybe a bit more detail in class comment to describe difference between the two interfaces.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;RegionObserver used to have a cleaner distinction from Coprocessor. Initially Coprocessor hooked internal region housekeeping; meanwhile RegionObserver wrapped HRegionInterface. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-03 11:19:47, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java, line 33&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=893#file893line33&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=893#file893line33&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This makes sense now reading the rest of the code.  But it seems that the Coprocessor is in fact the &quot;observer&quot; that just gets notified of actions while this observer is actually the &quot;processor&quot; that can manipulate stuff?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;An interesting idea to consider renaming the interfaces for clarity.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-03 11:19:47, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java, line 49&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=893#file893line49&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=893#file893line49&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     And descending timestamp&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Got it.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-03 11:19:47, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java, line 87&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=893#file893line87&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=893#file893line87&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Gets are called after the Get is performed, Puts and Deletes are called before, correct?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Would there be a use case for pre-Get hook?  Just wondering.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I wanted for the interface to be able to munge the result of the Get and only was considering one &quot;onGet&quot;. But for sure we could do &quot;onGet&quot; and &quot;onGetResult&quot;. &lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-06-03 11:19:47, Jonathan Gray wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java, line 694&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/96/diff/4/?file=895#file895line694&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/diff/4/?file=895#file895line694&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Javadoc says it&apos;s called after the split happens but before report to master.  Seems that this happens once we create the new HRegions but before we actually do the swap.  What exactly would/could a coprocessor be doing in this window?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     One thing to be aware of is the master changes coming are going to make a split run entirely on the RS including the edits to META, closing of the parent, and opening of the children.  Where in that process would this hook make sense?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is so a CP on a parent can know in advance that daughters from a split are about to come on line, and their associated CPs are about to be initialized and become operational. I don&apos;t know how useful this would be but it seemed a reasonable part of the region lifecycle to intercept. &lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.hbase.org/r/96/#review124&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/96/#review124&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12899654" author="ekoontz" created="Tue, 17 Aug 2010 23:46:25 +0000"  >&lt;p&gt;One of the tests for Coprocessors, (src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java), needs to be fixed in light of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2461&quot; title=&quot;Split doesn&amp;#39;t handle IOExceptions when creating new region reference files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2461&quot;&gt;&lt;del&gt;HBASE-2461&lt;/del&gt;&lt;/a&gt;, because currently TestCoprocessorInterface tries to call  the HRegion::splitRegion() method, which no longer exists as part of fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2461&quot; title=&quot;Split doesn&amp;#39;t handle IOExceptions when creating new region reference files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2461&quot;&gt;&lt;del&gt;HBASE-2461&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2461&quot; title=&quot;Split doesn&amp;#39;t handle IOExceptions when creating new region reference files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2461&quot;&gt;&lt;del&gt;HBASE-2461&lt;/del&gt;&lt;/a&gt; fix patch is here: &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12451153/2461-v8.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12451153/2461-v8.txt&lt;/a&gt; )&lt;/p&gt;</comment>
                            <comment id="12902001" author="streamy" created="Tue, 24 Aug 2010 18:21:28 +0000"  >&lt;p&gt;@Andy, are you or anyone else at TM working on this right now?  There&apos;s some things I&apos;d like to start experimenting with using coprocessors and I think this patch was pretty close to commitable.&lt;/p&gt;

&lt;p&gt;Also, I would definitely be interested in a pre-Get hook in addition to the post-Get hook, as this would be required for one use case I&apos;m considering.&lt;/p&gt;</comment>
                            <comment id="12902171" author="apurtell" created="Tue, 24 Aug 2010 23:55:34 +0000"  >&lt;p&gt;Yes. I&apos;ll follow up with you privately.&lt;/p&gt;
</comment>
                            <comment id="12905366" author="mingjielai" created="Thu, 2 Sep 2010 01:12:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt;-RegionObserver-2.patch is merged with the latest trunk (with master-write merge: 2692). In addition, with some minor improves.&lt;/p&gt;

&lt;p&gt;We remove map/reduce interface/job from the patch. Right now we&apos;re working towards implementing role based access control by CP, and we only need RegionObserver interface for it. RBAC would be the first realistic application utilizing CP. &lt;/p&gt;

&lt;p&gt;@Jonathan, we don&apos;t distinguish preGet() or postGet() right now. onGet() is actually a postGet(). If there is a valid use case, we can definitely add the hooks. &lt;/p&gt;</comment>
                            <comment id="12905378" author="apurtell" created="Thu, 2 Sep 2010 02:17:06 +0000"  >&lt;p&gt;We need preX hooks to make authoritative decisions, so will split them all into preX and postX. For implementation of security policies, the preX hooks will be most appropriate to override. For other applications it will depend if input or output or both should be intercepted.&lt;/p&gt;
</comment>
                            <comment id="12905385" author="streamy" created="Thu, 2 Sep 2010 03:13:30 +0000"  >&lt;p&gt;+1 on having pre and post for everything.  More clear naming too.&lt;/p&gt;</comment>
                            <comment id="12912306" author="hbasereviewboard" created="Mon, 20 Sep 2010 01:50:54 +0000"  >&lt;p&gt;Message from: &quot;Mingjie Lai&quot; &amp;lt;mjlai09@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;The diff actually contains 2 seperate patches: HBase-2001 and the one for (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;+&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt;). The reason is that HBase-2001&apos;s CommandTarget relies on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt; + &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; which patches are still under review. I have to include Gary&apos;s &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; with this diff, since reviewboard is so powerful &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; and it disallow my diff to be based on some unchecked in patch. &lt;/p&gt;

&lt;p&gt;Both HBase-2001 and the dynamic RPC stuff are quite big patches. Total number of lines are more than 7k. I turned back and forth, but still don&apos;t have a good idea to create the patch in order to reduce the review pain. However right now I&apos;m putting the whole patch for all the 3 issues. Here the list of file which are only related to coprocessor:&lt;/p&gt;

&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseCommandTarget.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java&lt;br/&gt;
src/main/resources/hbase-default.xml&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassloading.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestCommandTarget.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/p&gt;


&lt;p&gt;==========================&lt;/p&gt;

&lt;p&gt;(Here is a brief description. Please find much more details at the package-info.java in the diff. I also post the package-info.html to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2001&lt;/a&gt; as an attachment.)&lt;/p&gt;


&lt;p&gt;Coprocessors are code that runs in-process on each region server. Regions contain references to the coprocessor implementation classes associated with them. Coprocessor classes will be loaded either from local jars on the region server&apos;s classpath or via the HDFS classloader.&lt;/p&gt;

&lt;p&gt;Multiple types of coprocessors are provided to provide sufficient flexibility for potential use cases. Right now there are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Coprocessor: provides region lifecycle management hooks, e.g., region open/close/split/flush/compact operations.&lt;/li&gt;
	&lt;li&gt;RegionObserver: provides hook for monitor table operations from client side, such as table get/put/scan/delete, etc.&lt;/li&gt;
	&lt;li&gt;CommandTarget: provides on demand triggers for any arbitrary function executed at a region. One use case is column aggregation at region server.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Coprocessor:&lt;br/&gt;
A coprocessor is required to implement Coprocessor interface so that coprocessor framework can manage it internally.&lt;/p&gt;

&lt;p&gt;Another design goal of this interface is to provide simple features for making coprocessors useful, while exposing no more internal state or control actions of the region server than necessary and not exposing them directly. &lt;/p&gt;

&lt;p&gt;RegionObserver&lt;br/&gt;
If the coprocessor implements the RegionObserver interface it can observe and mediate client actions on the region. &lt;/p&gt;

&lt;p&gt;CommandTarget:&lt;br/&gt;
Coprocessor and RegionObserver provide certain hooks for injecting user code running at each region. These code will be triggerd with existing HTable and HBaseAdmin operations at the certain hook points.&lt;/p&gt;

&lt;p&gt;Through CommandTarget and dynamic RPC protocol, you can define your own interface communicated between client and region server, i.e., you can specify new passed parameters and return types for a method. And the new CommandTarget methods can be triggered by calling client side dynamic RPC functions &amp;#8211; HTable.exec(...). &lt;/p&gt;

&lt;p&gt;Coprocess loading&lt;br/&gt;
A customized coprocessor can be loaded by two different ways, by configuration, or by HTableDescriptor for a newly created table.&lt;/p&gt;

&lt;p&gt;(Currently we don&apos;t really have an on demand coprocessor loading machanism for opened regions. However it should be easy to create a dedicated CommandTarget for coprocessor loading) &lt;/p&gt;


&lt;p&gt;This addresses bug HBase-2001.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBase-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBase-2001&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/client/Action.java 556ea81 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Exec.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/ExecResult.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnection.java 65f7618 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java fbdec0b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 0dbf263 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MultiAction.java c6ea838 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java 91bd04b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowRange.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java 29b3cb0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseCommandTarget.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 83f623d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/ConnectionHeader.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/CoprocessorProtocol.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/ExecRPCInvoker.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java 2b5eeb6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPC.java e23a629 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java e4c356d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java a4810a6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/Invocation.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/RpcEngine.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java bccdc0e &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java fdef130 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java f2e4e7c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java bb3b382 &lt;br/&gt;
  src/main/resources/hbase-default.xml 5452fd1 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassloading.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCommandTarget.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestServerCustomProtocol.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/876/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Mingjie&lt;/p&gt;

</comment>
                            <comment id="12912314" author="mingjielai" created="Mon, 20 Sep 2010 02:50:53 +0000"  >&lt;p&gt;The package-info file into HTML format. Please help to review and provide your feedback for the usage. &lt;/p&gt;</comment>
                            <comment id="12914896" author="hbasereviewboard" created="Sun, 26 Sep 2010 00:20:17 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/#review1323&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#review1323&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4433&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4433&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Please add javadoc that explains that coprocessors loaded from configuration are all installed at System priority, chained in the order they appear in the value. (So users must explicitly order authoritative extensions before observers.)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4462&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4462&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If this throws a CoprocessorException the read lock won&apos;t be unlocked. Move out of the finally block. &lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4463&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4463&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is not really post flush. Should be moved after internalFlushcache()&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4464&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4464&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What happened to checkResources()?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4466&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4466&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Spelling error&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4467&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4467&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why not? What is excluded?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4465&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4465&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Spelling error&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4468&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4468&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes we do. The coprocessor may be intercepting gets and performing global substitutions. Not allowing it to do so in this case would introduce inconsistency.&lt;/p&gt;



&lt;p&gt;src/test/java/org/apache/hadoop/hbase/coprocessor/TestCommandTarget.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4469&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4469&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What are these magic numbers?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12916596" author="hbasereviewboard" created="Thu, 30 Sep 2010 18:31:48 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/#review1366&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#review1366&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4522&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4522&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I would actually be -1 on having this call the get coprocessor hooks.  Expected behavior (for me) would be that coprocessors hook into the client-side calls, not internal calls.  For checkAndPut, are those Gets also wrapped by coprocessors?&lt;/p&gt;

&lt;p&gt;    I suppose you could make an argument either way, but I&apos;d err on the side of coprocessors attaching on client operations not internal ones.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12916760" author="hbasereviewboard" created="Fri, 1 Oct 2010 02:36:23 +0000"  >&lt;p&gt;Message from: &quot;Mingjie Lai&quot; &amp;lt;mjlai09@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-09-30 19:18:18.297399)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Fixes by review board comments&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;The diff actually contains 2 seperate patches: HBase-2001 and the one for (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;+&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt;). The reason is that HBase-2001&apos;s CommandTarget relies on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt; + &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; which patches are still under review. I have to include Gary&apos;s &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; with this diff, since reviewboard is so powerful &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; and it disallow my diff to be based on some unchecked in patch. &lt;/p&gt;

&lt;p&gt;Both HBase-2001 and the dynamic RPC stuff are quite big patches. Total number of lines are more than 7k. I turned back and forth, but still don&apos;t have a good idea to create the patch in order to reduce the review pain. However right now I&apos;m putting the whole patch for all the 3 issues. Here the list of file which are only related to coprocessor:&lt;/p&gt;

&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseCommandTarget.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java&lt;br/&gt;
src/main/resources/hbase-default.xml&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassloading.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestCommandTarget.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/p&gt;


&lt;p&gt;==========================&lt;/p&gt;

&lt;p&gt;(Here is a brief description. Please find much more details at the package-info.java in the diff. I also post the package-info.html to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2001&lt;/a&gt; as an attachment.)&lt;/p&gt;


&lt;p&gt;Coprocessors are code that runs in-process on each region server. Regions contain references to the coprocessor implementation classes associated with them. Coprocessor classes will be loaded either from local jars on the region server&apos;s classpath or via the HDFS classloader.&lt;/p&gt;

&lt;p&gt;Multiple types of coprocessors are provided to provide sufficient flexibility for potential use cases. Right now there are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Coprocessor: provides region lifecycle management hooks, e.g., region open/close/split/flush/compact operations.&lt;/li&gt;
	&lt;li&gt;RegionObserver: provides hook for monitor table operations from client side, such as table get/put/scan/delete, etc.&lt;/li&gt;
	&lt;li&gt;CommandTarget: provides on demand triggers for any arbitrary function executed at a region. One use case is column aggregation at region server.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Coprocessor:&lt;br/&gt;
A coprocessor is required to implement Coprocessor interface so that coprocessor framework can manage it internally.&lt;/p&gt;

&lt;p&gt;Another design goal of this interface is to provide simple features for making coprocessors useful, while exposing no more internal state or control actions of the region server than necessary and not exposing them directly. &lt;/p&gt;

&lt;p&gt;RegionObserver&lt;br/&gt;
If the coprocessor implements the RegionObserver interface it can observe and mediate client actions on the region. &lt;/p&gt;

&lt;p&gt;CommandTarget:&lt;br/&gt;
Coprocessor and RegionObserver provide certain hooks for injecting user code running at each region. These code will be triggerd with existing HTable and HBaseAdmin operations at the certain hook points.&lt;/p&gt;

&lt;p&gt;Through CommandTarget and dynamic RPC protocol, you can define your own interface communicated between client and region server, i.e., you can specify new passed parameters and return types for a method. And the new CommandTarget methods can be triggered by calling client side dynamic RPC functions &amp;#8211; HTable.exec(...). &lt;/p&gt;

&lt;p&gt;Coprocess loading&lt;br/&gt;
A customized coprocessor can be loaded by two different ways, by configuration, or by HTableDescriptor for a newly created table.&lt;/p&gt;

&lt;p&gt;(Currently we don&apos;t really have an on demand coprocessor loading machanism for opened regions. However it should be easy to create a dedicated CommandTarget for coprocessor loading) &lt;/p&gt;


&lt;p&gt;This addresses bug HBase-2001.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBase-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBase-2001&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  conf/hbase-policy.xml PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java 365e4b9 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HServerAddress.java 3859968 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/HServerInfo.java aaf4835 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Action.java 556ea81 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Batch.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Exec.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/ExecResult.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnection.java 65f7618 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java fbdec0b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 0dbf263 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MultiAction.java c6ea838 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java 91bd04b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/RowRange.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java 29b3cb0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseCommandTarget.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 83f623d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/hfile/Compression.java 3a429c0 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/ConnectionHeader.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/CoprocessorProtocol.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/ExecRPCInvoker.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java 2b5eeb6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPC.java e23a629 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRpcMetrics.java 19dbf2b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java e4c356d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HMasterInterface.java bacf8b1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HMasterRegionInterface.java 71a0447 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java ee5dd8f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/Invocation.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/RpcEngine.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/SecureClient.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/SecureRpcEngine.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/SecureServer.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/Status.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java fb1e834 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 0a4fbce &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java e80ece8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 4ba63d8 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java 9aaf7c3 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenRegionHandler.java 01475d5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/security/HBasePolicyProvider.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java PRE-CREATION &lt;br/&gt;
  src/main/resources/hbase-default.xml 5fafe65 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java e5b1a30 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/MiniHBaseCluster.java 63a6956 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestClassloading.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCommandTarget.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestServerCustomProtocol.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestStore.java 377e6b1 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java dc55407 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/876/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Mingjie&lt;/p&gt;

</comment>
                            <comment id="12917063" author="mingjielai" created="Fri, 1 Oct 2010 22:15:39 +0000"  >&lt;p&gt;Modified package description file which reflect interface changes. &lt;/p&gt;</comment>
                            <comment id="12917301" author="hbasereviewboard" created="Sun, 3 Oct 2010 09:30:32 +0000"  >&lt;p&gt;Message from: &quot;Lars Francke&quot; &amp;lt;lars.francke@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/#review1380&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#review1380&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Sorry for all the whitespace comments &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
There are a bunch more in the test classes.&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/HServerInfo.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4581&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4581&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The ternary operator does not need braces.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/Action.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4582&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4582&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The ternary operator does not need braces.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/Batch.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4583&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4583&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove extra character(s)&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4586&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4586&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should be of Type List&amp;lt;R&amp;gt; not ArrayList&amp;lt;R&amp;gt;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4585&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4585&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why is this necessary? You already set the size by using the correct constructor.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4588&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4588&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove the &quot;public&quot;, interfaces don&apos;t need that.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4589&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4589&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove the &quot;public&quot;, interfaces don&apos;t need that.&lt;/p&gt;

&lt;p&gt;    Also byte[] key in Map so every implementor has to make sure to use a Map that does this correctly.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4590&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4590&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove the &quot;public&quot;, interfaces don&apos;t need that.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseCommandTarget.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4591&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4591&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseCommandTarget.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4592&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4592&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseCommandTarget.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4593&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4593&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4594&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4594&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4595&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4595&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4596&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4596&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Inconsistent formatting&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4597&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4597&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Inconsistent formatting&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4598&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4598&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4599&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4599&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4600&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4601&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4601&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4602&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4602&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4603&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4603&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4604&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4604&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4605&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4605&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4612&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4612&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public static final&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4606&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4606&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4613&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4613&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4614&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4614&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4615&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4615&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4607&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4607&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4616&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4616&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4617&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4617&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4608&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4608&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4618&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4618&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4609&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4609&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4610&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4610&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4619&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4619&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4611&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4611&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4620&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4620&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4621&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4621&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4622&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4622&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4623&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4623&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4624&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4624&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4625&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4625&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4626&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4626&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4627&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4627&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4628&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4628&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4629&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4629&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove public&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4630&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4630&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4631&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4631&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove extra space behind the brace&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4642&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4642&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4632&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4632&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4643&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4643&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4644&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4644&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4645&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4645&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4633&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4633&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4646&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4646&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4634&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4634&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4647&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4647&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4648&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4648&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4649&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4649&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4635&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4635&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4650&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4650&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4651&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4651&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4636&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4636&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4637&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4637&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4638&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4638&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4639&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4639&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4652&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4652&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4653&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4653&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4654&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4654&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4655&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4655&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4656&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4656&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4640&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4640&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4657&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4657&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4658&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4658&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4641&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4641&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4659&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4659&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove &quot;public&quot;&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4707&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4707&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lots of whitespace stuff in this file. I&apos;ve not listed them all.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/ConnectionHeader.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4708&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4708&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    public Log?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/ExecRPCInvoker.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4709&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4709&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    private static final&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/HBaseRpcMetrics.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4710&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4710&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4711&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4711&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4712&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4712&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4713&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4713&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/SecureClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4714&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4714&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Wrong formatting&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/SecureServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4715&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4715&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/Status.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4716&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4716&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4717&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4717&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4718&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4718&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4719&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4719&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4720&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4720&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4721&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4721&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4722&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4722&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4723&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4723&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4724&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4724&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4725&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4725&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4726&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4726&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4727&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4727&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4728&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4728&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4729&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4729&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4730&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4730&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4731&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4732&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4732&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4733&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4733&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4734&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4734&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4735&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4735&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4736&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4736&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4739&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4739&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4737&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4737&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4740&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4740&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4741&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4741&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4742&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4742&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4743&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4743&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4745&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4745&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4744&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4744&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4746&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4746&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4747&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4747&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4748&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4748&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4749&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4749&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4750&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4750&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4751&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4751&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4752&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4752&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4753&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4753&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4754&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4754&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4755&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4755&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4756&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4756&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4757&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4757&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4758&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4758&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4759&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4759&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4761&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4761&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Inconsistent indentation with most of the rest of the file&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4760&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4760&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4762&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4762&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4763&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4763&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4764&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4764&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4765&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4765&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4766&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4766&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4768&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4768&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4767&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4767&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4770&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4770&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4771&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4771&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4773&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4773&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4772&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4772&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4774&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4774&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4775&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4775&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4776&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4776&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4777&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4777&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4778&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4778&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4779&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4779&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4780&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4780&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4781&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4781&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4782&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4782&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lock should be acquired before the try block&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4783&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4783&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4784&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4784&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4785&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4785&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4786&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4786&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4787&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4787&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff and no comment for this parameter&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4788&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4788&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4789&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4789&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4790&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4790&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4791&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4791&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4792&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4792&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4793&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4793&lt;/a&gt;&amp;gt;&lt;/p&gt;





&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4794&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4794&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4795&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4795&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4796&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4796&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4797&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4797&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4798&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4798&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4799&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4800&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4800&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4801&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4801&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4802&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4802&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4803&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4803&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4805&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4805&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Unnecessary, comments are automatically inherited&lt;/p&gt;



&lt;p&gt;src/main/resources/hbase-default.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4806&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4806&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/resources/hbase-default.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4807&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4807&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/resources/hbase-default.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4808&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4808&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/resources/hbase-default.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4810&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4810&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;



&lt;p&gt;src/main/resources/hbase-default.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment4811&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment4811&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whitespace stuff&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Lars&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12921645" author="stack" created="Sat, 16 Oct 2010 05:57:40 +0000"  >&lt;p&gt;Moving into 0.92 as per discussion up on dev list (Correct me if I&apos;m making wrong move here lads).&lt;/p&gt;</comment>
                            <comment id="12924421" author="hbasereviewboard" created="Mon, 25 Oct 2010 01:46:05 +0000"  >&lt;p&gt;Message from: &quot;Himanshu Vashishtha&quot; &amp;lt;vashishtha.h@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/#review1639&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#review1639&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment5505&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment5505&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this list is for scalability. I am not able to visualise a scenario where a Cp has reference to more than one table. Given a region has only one CpHost instance, and though it can a multi CpImpls in it, but each of them will have its own Environment instance (thus HTable instance). (I might be missing sth though &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Himanshu&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12924653" author="hbasereviewboard" created="Mon, 25 Oct 2010 18:02:09 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-25 06:49:15, Himanshu Vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java, line 343&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/diff/7/?file=14190#file14190line343&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/diff/7/?file=14190#file14190line343&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What is its purpose here? I couldn&apos;t see it being used as of now. Is it for some future functionality.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The access controller coprocessor (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3025&quot; title=&quot;Coprocessor based simple access control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3025&quot;&gt;&lt;del&gt;HBASE-3025&lt;/del&gt;&lt;/a&gt;) needs a CatalogTracker. Other future functionality is also considered.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/#review1646&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#review1646&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12929784" author="hbasereviewboard" created="Mon, 8 Nov 2010 22:44:01 +0000"  >&lt;p&gt;Message from: &quot;Mingjie Lai&quot; &amp;lt;mjlai09@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-11-08 14:41:41.575886)&lt;/p&gt;


&lt;p&gt;Review request for hbase, stack, Andrew Purtell, and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Changes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Addressed Stack&apos;s comments.&lt;/li&gt;
	&lt;li&gt;Renamed CommandTarget to Endpoint (still up to decide whether it&apos;s better or not)&lt;/li&gt;
	&lt;li&gt;Improved package-info.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Refined some of RegionObserver method signatures, i.e., preGet(), etc.&lt;/li&gt;
	&lt;li&gt;Added hooks for HTable.increment(Increment).&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Summary (updated)&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;The diff actually contains 2 seperate patches: HBase-2001 and the one for (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;+&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt;). The reason is that HBase-2001&apos;s CommandTarget relies on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt; + &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; which patches are still under review. I have to include Gary&apos;s &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; with this diff, since reviewboard is so powerful &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; and it disallow my diff to be based on some unchecked in patch. &lt;/p&gt;

&lt;p&gt;Eventually the patch here should be committed after 2001 and 2321. I will make another patch after they got checked in. &lt;/p&gt;

&lt;p&gt;Both HBase-2001 and the dynamic RPC stuff are quite big patches. Total number of lines are more than 7k. I turned back and forth, but still don&apos;t have a good idea to create the patch in order to reduce the review pain. However right now I&apos;m putting the whole patch for all the 3 issues. Here the list of file which are only related to coprocessor:&lt;/p&gt;

&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseEndpointCoprocessor.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpoint.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationProtocol.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorEndpoint.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/p&gt;


&lt;p&gt;==========================&lt;/p&gt;

&lt;p&gt;(Here is a brief description. Please find much more details at the package-info.java in the diff. I also post the package-info.html to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2001&lt;/a&gt; as an attachment.)&lt;/p&gt;


&lt;p&gt;Coprocessors are code that runs in-process on each region server. Regions contain references to the coprocessor implementation classes associated with them. Coprocessor classes will be loaded either from local jars on the region server&apos;s classpath or via the HDFS classloader.&lt;/p&gt;

&lt;p&gt;Multiple types of coprocessors are provided to provide sufficient flexibility for potential use cases. Right now there are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Coprocessor: provides region lifecycle management hooks, e.g., region open/close/split/flush/compact operations.&lt;/li&gt;
	&lt;li&gt;RegionObserver: provides hook for monitor table operations from client side, such as table get/put/scan/delete, etc.&lt;/li&gt;
	&lt;li&gt;Endpoint: provides on demand triggers for any arbitrary function executed at a region. One use case is column aggregation at region server.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Coprocessor:&lt;br/&gt;
A coprocessor is required to implement Coprocessor interface so that coprocessor framework can manage it internally.&lt;/p&gt;

&lt;p&gt;Another design goal of this interface is to provide simple features for making coprocessors useful, while exposing no more internal state or control actions of the region server than necessary and not exposing them directly. &lt;/p&gt;

&lt;p&gt;RegionObserver&lt;br/&gt;
If the coprocessor implements the RegionObserver interface it can observe and mediate client actions on the region. &lt;/p&gt;

&lt;p&gt;Endpoint:&lt;br/&gt;
Coprocessor and RegionObserver provide certain hooks for injecting user code running at each region. These code will be triggerd with existing HTable and HBaseAdmin operations at the certain hook points.&lt;/p&gt;

&lt;p&gt;Through Endpoint and dynamic RPC protocol, you can define your own interface communicated between client and region server, i.e., you can create a new method, specify passed parameters and return types for the method. And the new Endpoint methods can be triggered by calling client side dynamic RPC functions &amp;#8211; HTable.exec(...). &lt;/p&gt;

&lt;p&gt;Coprocess loading&lt;br/&gt;
A customized coprocessor can be loaded by two different ways, by configuration, or by HTableDescriptor for a newly created table.&lt;/p&gt;

&lt;p&gt;(Currently we don&apos;t really have an on demand coprocessor loading machanism for opened regions. However it should be easy to create a dedicated CommandTarget for coprocessor loading) &lt;/p&gt;


&lt;p&gt;This addresses bug HBase-2001.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBase-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBase-2001&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/client/Action.java 556ea81 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnection.java 3235a9b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 1748a4f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 69dc916 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java ade3e21 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MultiAction.java c6ea838 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java 1ac7671 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/coprocessor/Batch.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/coprocessor/Exec.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/coprocessor/ExecResult.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/coprocessor/package-info.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseEndpointCoprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 30dd877 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/ConnectionHeader.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/CoprocessorProtocol.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/ExecRPCInvoker.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java f8d8af7 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPC.java 4f4828b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java e4c356d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java cf30cf9 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/Invocation.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/RpcEngine.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 209c291 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java dd2955d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java ab183e5 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 1309f93 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java 1bcde8c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenRegionHandler.java ace7997 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java 5f05079 &lt;br/&gt;
  src/main/resources/hbase-default.xml 5fafe65 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpoint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationProtocol.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorEndpoint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestServerCustomProtocol.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/876/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Mingjie&lt;/p&gt;

</comment>
                            <comment id="12929787" author="mingjielai" created="Mon, 8 Nov 2010 22:45:31 +0000"  >&lt;p&gt;Modified package-info.html file. &lt;/p&gt;</comment>
                            <comment id="12932285" author="hbasereviewboard" created="Tue, 16 Nov 2010 00:41:15 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-05 23:10:58, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Action.java, line 30&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/diff/7/?file=14158#file14158line30&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/diff/7/?file=14158#file14158line30&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I took a look at the package-info.html.  Very nice doc.  One thought though was that the batch methods do not seem to be instrumented.  Are they?  The bulk of inserts are done by multiput now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Maybe link to the wiki page when you say this in package-info.html &apos;....implement role-based access control for HBase&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Fix this &apos;These code will be triggerd with existing...&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     BaseRegionObserver as the name of the class that implements BOTH Coprocessor and RegionObserver with sensible defaults seems off... it&apos;d make sense as the name of an implemenation of RegionObserver but not of both.  Is there a better name to give it &amp;#8211; even BaseRegionObserverCoprocessor?  Unless BaseObserver already implements Coprocessor?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should this also say that methods can be new also?  &apos;...i.e., you can specify new passed parameters and return types for a method. &apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     CommandTarget is a strange name for an host of arbitrary user-designed methods.  Can we come up w/ something more telling?   Notions that come to mind are Substrate, Platform &amp;#8211; i.e. stuff you build up on.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Minor.. fix &apos;...the actually implemention class running...&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Fix this &apos;...How is the client side example of calling...&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     The example is missing a bit of code that would help along its illustration.... a few comments would help too.... but this is a minor criticism.  Not important.  I get the gist (Folks interested in CP need to start with this page &amp;#8211; it makes grokking the code the easier).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This page would seem to indicate CPs can be chained.  Am I reading that wrong?  (See &apos;Load from configuration&apos;)  Over in Gary review, he was saying on CP per region only.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Usually attribute names are upper-cased.  Here we have &apos;Coprocessor$1&apos; (that $1is intentional right?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This functionality, if its working, is amazing.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Mingjie Lai wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;@stack:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I didn&apos;t realize you posted a comment until last week, since your comments here didn&apos;t get pushed to jira, neither emails sent to dev@hbase. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks for your comments. I will address them very soon. But before that I&apos;d like to finalize the name of ``CommandTarget&apos;&apos;:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;You said, ``CommandTarget is a strange name for an host of arbitrary user-designed methods.  Can we come up w/ something more telling?   Notions that come to mind are Substrate, Platform &amp;#8211; i.e. stuff you build up on.&apos;&apos;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of us suggested to use ``Endpoint&apos;&apos; instead of CommandTarget. Do you like it better? (I&apos;m not really good at naming stuff)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;After finalizing the name, I will make the changes to both source code and package-info. And post a patch here.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Mingjie&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not good at naming either.... Endpoint seems more &apos;generic&apos;, less loaded than &apos;CommandTarget&apos;.  If you fellas working with this stuff think that a better name then thats good by me.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/#review1438&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#review1438&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12932292" author="hbasereviewboard" created="Tue, 16 Nov 2010 00:53:13 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/#review1930&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#review1930&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;+1 on commit to TRUNK.  I think all below can be cleaned up on commit (Andrew, you going to commit?)&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment6139&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment6139&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Check in here.  Looks like tabs?  review board reporting it as whitespace.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment6140&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment6140&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Usually in hbase code base there are spaces around operations; e.g. around &apos;+&apos;.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/coprocessor/ExecResult.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment6142&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment6142&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Be careful.  In hbase lines are 80 characters long normally.  Fix on commit?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/coprocessor/ExecResult.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment6143&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment6143&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think its ok if these lines &amp;gt; 80 characters&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/coprocessor/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment6144&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment6144&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Excellent&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/876/#comment6146&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#comment6146&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Lots of white space in here.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12933068" author="hbasereviewboard" created="Wed, 17 Nov 2010 18:31:13 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-11-15 16:51:18, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; +1 on commit to TRUNK.  I think all below can be cleaned up on commit (Andrew, you going to commit?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Stack, Yes I plan to commit the patches for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; onto trunk this week. The dynamic RPC and coprocessor framework changes are largely independent and will go in separately to make the change history in the commit log more informative. We will address your comments before doing so.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/#review1930&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#review1930&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12934033" author="hbasereviewboard" created="Fri, 19 Nov 2010 22:40:15 +0000"  >&lt;p&gt;Message from: &quot;Mingjie Lai&quot; &amp;lt;mjlai09@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-11-19 14:39:18.378849)&lt;/p&gt;


&lt;p&gt;Review request for hbase, stack, Andrew Purtell, and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Final patch, ready to be checked in:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Truncated white space at line end&lt;/li&gt;
	&lt;li&gt;Rebuilt the patch after HBase-2002 checked in.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;The diff actually contains 2 seperate patches: HBase-2001 and the one for (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;+&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt;). The reason is that HBase-2001&apos;s CommandTarget relies on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt; + &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; which patches are still under review. I have to include Gary&apos;s &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; with this diff, since reviewboard is so powerful &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; and it disallow my diff to be based on some unchecked in patch. &lt;/p&gt;

&lt;p&gt;Eventually the patch here should be committed after 2001 and 2321. I will make another patch after they got checked in. &lt;/p&gt;

&lt;p&gt;Both HBase-2001 and the dynamic RPC stuff are quite big patches. Total number of lines are more than 7k. I turned back and forth, but still don&apos;t have a good idea to create the patch in order to reduce the review pain. However right now I&apos;m putting the whole patch for all the 3 issues. Here the list of file which are only related to coprocessor:&lt;/p&gt;

&lt;p&gt;src/main/java/org/apache/hadoop/hbase/coprocessor/BaseEndpointCoprocessor.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java&lt;br/&gt;
src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpoint.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationProtocol.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorEndpoint.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java&lt;br/&gt;
src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/p&gt;


&lt;p&gt;==========================&lt;/p&gt;

&lt;p&gt;(Here is a brief description. Please find much more details at the package-info.java in the diff. I also post the package-info.html to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-2001&lt;/a&gt; as an attachment.)&lt;/p&gt;


&lt;p&gt;Coprocessors are code that runs in-process on each region server. Regions contain references to the coprocessor implementation classes associated with them. Coprocessor classes will be loaded either from local jars on the region server&apos;s classpath or via the HDFS classloader.&lt;/p&gt;

&lt;p&gt;Multiple types of coprocessors are provided to provide sufficient flexibility for potential use cases. Right now there are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Coprocessor: provides region lifecycle management hooks, e.g., region open/close/split/flush/compact operations.&lt;/li&gt;
	&lt;li&gt;RegionObserver: provides hook for monitor table operations from client side, such as table get/put/scan/delete, etc.&lt;/li&gt;
	&lt;li&gt;Endpoint: provides on demand triggers for any arbitrary function executed at a region. One use case is column aggregation at region server.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Coprocessor:&lt;br/&gt;
A coprocessor is required to implement Coprocessor interface so that coprocessor framework can manage it internally.&lt;/p&gt;

&lt;p&gt;Another design goal of this interface is to provide simple features for making coprocessors useful, while exposing no more internal state or control actions of the region server than necessary and not exposing them directly. &lt;/p&gt;

&lt;p&gt;RegionObserver&lt;br/&gt;
If the coprocessor implements the RegionObserver interface it can observe and mediate client actions on the region. &lt;/p&gt;

&lt;p&gt;Endpoint:&lt;br/&gt;
Coprocessor and RegionObserver provide certain hooks for injecting user code running at each region. These code will be triggerd with existing HTable and HBaseAdmin operations at the certain hook points.&lt;/p&gt;

&lt;p&gt;Through Endpoint and dynamic RPC protocol, you can define your own interface communicated between client and region server, i.e., you can create a new method, specify passed parameters and return types for the method. And the new Endpoint methods can be triggered by calling client side dynamic RPC functions &amp;#8211; HTable.exec(...). &lt;/p&gt;

&lt;p&gt;Coprocess loading&lt;br/&gt;
A customized coprocessor can be loaded by two different ways, by configuration, or by HTableDescriptor for a newly created table.&lt;/p&gt;

&lt;p&gt;(Currently we don&apos;t really have an on demand coprocessor loading machanism for opened regions. However it should be easy to create a dedicated CommandTarget for coprocessor loading) &lt;/p&gt;


&lt;p&gt;This addresses bug HBase-2001.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBase-2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBase-2001&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseEndpointCoprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserverCoprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/Coprocessor.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorEnvironment.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorException.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/coprocessor/package-info.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorHost.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java d669de1 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 2ef6432 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java 1309f93 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java 1bcde8c &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenRegionHandler.java ace7997 &lt;br/&gt;
  src/main/resources/hbase-default.xml 630c041 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationEndpoint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/ColumnAggregationProtocol.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorEndpoint.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestCoprocessorInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverInterface.java PRE-CREATION &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/876/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Mingjie&lt;/p&gt;

</comment>
                            <comment id="12934035" author="mingjielai" created="Fri, 19 Nov 2010 22:41:56 +0000"  >&lt;p&gt;Final patch for check-in. &lt;/p&gt;</comment>
                            <comment id="12934039" author="hbasereviewboard" created="Fri, 19 Nov 2010 22:44:13 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/876/#review1961&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/876/#review1961&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Will commit after running unit tests and verifying all pass.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12934071" author="apurtell" created="Sat, 20 Nov 2010 01:26:17 +0000"  >&lt;p&gt;Committed to trunk. All tests pass locally except TestAdmin#testHundredsOfTable which I also see on plain trunk up on our Hudson.&lt;/p&gt;</comment>
                            <comment id="15017977" author="lars_francke" created="Fri, 20 Nov 2015 13:02:06 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12459043">HBASE-2321</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12431322">HBASE-1697</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12462302">HBASE-2461</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12459886">HBASE-2357</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12474775">HBASE-3025</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12453645" name="HBASE-2001-RegionObserver-2.patch" size="87183" author="mingjielai" created="Thu, 2 Sep 2010 01:12:11 +0000"/>
                            <attachment id="12445617" name="HBASE-2001-RegionObserver.patch" size="77144" author="apurtell" created="Thu, 27 May 2010 04:58:18 +0000"/>
                            <attachment id="12436076" name="HBASE-2001.patch.gz" size="23208" author="apurtell" created="Wed, 17 Feb 2010 02:22:59 +0000"/>
                            <attachment id="12460068" name="HBase-2001-final.patch" size="164521" author="mingjielai" created="Fri, 19 Nov 2010 22:41:56 +0000"/>
                            <attachment id="12425769" name="asm-transformations.pdf" size="78266" author="apurtell" created="Sun, 22 Nov 2009 20:31:55 +0000"/>
                            <attachment id="12459097" name="packge-info.html" size="13709" author="mingjielai" created="Mon, 8 Nov 2010 22:45:31 +0000"/>
                            <attachment id="12456164" name="packge-info.html" size="13196" author="mingjielai" created="Fri, 1 Oct 2010 22:15:39 +0000"/>
                            <attachment id="12455004" name="packge-info.html" size="12759" author="mingjielai" created="Mon, 20 Sep 2010 02:50:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 21 Nov 2009 23:22:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32357</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hg5r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99880</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>