<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:04:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2774/HBASE-2774.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2774] Spin in ReadWriteConsistencyControl eating CPU (load &gt; 40) and no progress running YCSB on clean cluster startup</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2774</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>
&lt;p&gt;When I try to do a YCSB load, RSs will spin up massive load but make no progress.  Seems to happen to each RS in turn until they do their first flush.  They stay in the high-load mode for maybe 5-10 minutes or so and then fall out of the bad condition.&lt;/p&gt;

&lt;p&gt;Here is my ugly YCSB command (Haven&apos;t gotten around to tidying it up yet):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ java -cp build/ycsb.jar:/home/hadoop/current/conf/:/home/hadoop/current/hbase-0.21.0-SNAPSHOT.jar:/home/hadoop/current/lib/hadoop-core-0.20.3-append-r956776.jar:/home/hadoop/current/lib/zookeeper-3.3.1.jar:/home/hadoop/current/lib/commons-logging-1.1.1.jar:/home/hadoop/current/lib/log4j-1.2.15.jar  com.yahoo.ycsb.Client -load -db com.yahoo.ycsb.db.HBaseClient  -P workloads/5050 -p columnfamily=values -s -threads 100 -p recordcount=10000000
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cluster is 5 regionservers NOT running hadoop-core-0.20.3-append-r956776 but rather old head of branch-0.20 hadoop.&lt;/p&gt;

&lt;p&gt;It seems that its easy to repro if you start fresh.  It might happen later in loading but it seems as though after first flush, we&apos;re ok.&lt;/p&gt;

&lt;p&gt;It comes on pretty immediately.  The server that is taking on the upload has its load start to climb gradually up into the 40s then stays there.  Later it falls when condtion clears.&lt;/p&gt;

&lt;p&gt;Here is content of my yahoo workload file:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
recordcount=100000000
operationcount=100000000
workload=com.yahoo.ycsb.workloads.CoreWorkload

readallfields=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;

readproportion=0.5
updateproportion=0.5
scanproportion=0
insertproportion=0

requestdistribution=zipfian
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is my hbase-site.xml&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regions.slop&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;0.01&amp;lt;/value&amp;gt;
    &amp;lt;description&amp;gt;Rebalance &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; regionserver has average + (average * slop) regions.
    Default is 30% slop.
    &amp;lt;/description&amp;gt;
  &amp;lt;/property&amp;gt;

  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.zookeeper.quorum&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;XXXXXXXXX&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;hbase.regionserver.hlog.blocksize&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;67108864&amp;lt;/value&amp;gt;
  &amp;lt;description&amp;gt;Block size &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; HLog files. To minimize potential data loss,
    the size should be (avg key length) * (avg value length) * flushlogentries.
    Default 1MB.
  &amp;lt;/description&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;hbase.hstore.blockingStoreFiles&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;25&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;hbase.rootdir&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;hdfs:&lt;span class=&quot;code-comment&quot;&gt;//svXXXXXX:9000/hbase&amp;lt;/value&amp;gt;
&lt;/span&gt;  &amp;lt;description&amp;gt;The directory shared by region servers.&amp;lt;/description&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;hbase.cluster.distributed&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;zookeeper.znode.parent&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;/stack&amp;lt;/value&amp;gt;
  &amp;lt;description&amp;gt;
    the path in zookeeper &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; cluster
  &amp;lt;/description&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;hfile.block.cache.size&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;0.2&amp;lt;/value&amp;gt;
  &amp;lt;description&amp;gt;
    The size of the block cache used by HFile/StoreFile. Set to 0 to disable.
  &amp;lt;/description&amp;gt;
&amp;lt;/property&amp;gt;


&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;hbase.hregion.memstore.block.multiplier&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;8&amp;lt;/value&amp;gt;
  &amp;lt;description&amp;gt;
    Block updates &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; memcache has hbase.hregion.block.memcache
    time hbase.hregion.flush.size bytes.  Useful preventing
    runaway memcache during spikes in update traffic.  Without an
    upper-bound, memcache fills such that when it flushes the
    resultant flush files take a &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; time to compact or split, or
    worse, we OOME.
  &amp;lt;/description&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
&amp;lt;name&amp;gt;zookeeper.session.timeout&amp;lt;/name&amp;gt;
&amp;lt;value&amp;gt;60000&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;


&amp;lt;property&amp;gt;
  &amp;lt;name&amp;gt;hbase.regionserver.handler.count&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;60&amp;lt;/value&amp;gt;
  &amp;lt;description&amp;gt;Count of RPC Server instances spun up on RegionServers
    Same property is used by the HMaster &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; count of master handlers.
    Default is 10.
  &amp;lt;/description&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regions.percheckin&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;20&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.maxlogs&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;128&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;

&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.regionserver.logroll.multiplier&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;2.95&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12467664">HBASE-2774</key>
            <summary>Spin in ReadWriteConsistencyControl eating CPU (load &gt; 40) and no progress running YCSB on clean cluster startup</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Jun 2010 06:14:55 +0000</created>
                <updated>Fri, 20 Nov 2015 12:40:35 +0000</updated>
                            <resolved>Thu, 24 Jun 2010 04:45:44 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12881565" author="stack" created="Wed, 23 Jun 2010 06:26:33 +0000"  >&lt;p&gt;I added logging of spins &amp;gt; 10k.  Seems to be frequent during problematic period.  Here is sampling:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
SPUN=32067854
SPUN=11609771
SPUN=18253409
SPUN=7594706
SPUN=5145968
SPUN=3954805
SPUN=8363557
SPUN=17825817
SPUN=5544807
SPUN=52516
SPUN=7097147
SPUN=11689658
SPUN=1227793
SPUN=11703071
SPUN=23131
SPUN=53260
SPUN=45888
SPUN=19449
SPUN=11688378
SPUN=17349
SPUN=25103
SPUN=16421
SPUN=11001
SPUN=10975
SPUN=30119
SPUN=12685
SPUN=18986
SPUN=10724
SPUN=13987
SPUN=10626
SPUN=22122
SPUN=14818
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There were other periods of big numbers like those above.&lt;/p&gt;</comment>
                            <comment id="12881924" author="stack" created="Wed, 23 Jun 2010 22:22:19 +0000"  >&lt;p&gt;I tried 0.20.5.  It don&apos;t seem to have the issue &amp;#8211; least load doesn&apos;t go up crazy in same place (It doesn&apos;t have the multput though as Ryan notes)&lt;/p&gt;

&lt;p&gt;I added logging.  What I see are lots of updates where there is no spin at all and then we&apos;ll hit a period where we can have crazy spinning as per this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=58ms, begin took=908ns, w=writeNumber=389286, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=4161, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=40ms, begin took=1118ns, w=writeNumber=389234, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=50ms, begin took=838ns, w=writeNumber=389287, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=74ms, begin took=838ns, w=writeNumber=389289, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=9535, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=64ms, begin took=1117ns, w=writeNumber=389230, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=56ms, begin took=1118ns, w=writeNumber=389226, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=72ms, begin took=1118ns, w=writeNumber=389290, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=68ms, begin took=1396ns, w=writeNumber=389291, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=93ms, begin took=1047ns, w=writeNumber=389292, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=78ms, begin took=768ns, w=writeNumber=389293, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=69ms, begin took=907ns, w=writeNumber=389295, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=86ms, begin took=768ns, w=writeNumber=389296, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=76ms, begin took=768ns, w=writeNumber=389298, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=3842, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=47ms, begin took=838ns, w=writeNumber=389225, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=44ms, begin took=908ns, w=writeNumber=389223, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=58ms, begin took=908ns, w=writeNumber=389214, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=66ms, begin took=1467ns, w=writeNumber=389300, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=66ms, begin took=978ns, w=writeNumber=389211, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=62ms, begin took=768ns, w=writeNumber=389302, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=1437, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=59228ms, begin took=2165ns, w=writeNumber=389195, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=12733714, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=59184ms, begin took=1397ns, w=writeNumber=389196, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=9228124, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=152ms, begin took=908ns, w=writeNumber=389304, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=37705, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=179ms, begin took=1048ns, w=writeNumber=389303, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=81ms, begin took=1187ns, w=writeNumber=389305, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=83ms, begin took=1467ns, w=writeNumber=389306, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,900 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=46ms, begin took=1117ns, w=writeNumber=389308, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,897 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=59584ms, begin took=1467ns, w=writeNumber=389190, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=21534587, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=47ms, begin took=1676ns, w=writeNumber=389310, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=55ms, begin took=1117ns, w=writeNumber=389312, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=2258, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=50ms, begin took=1117ns, w=writeNumber=389313, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=57ms, begin took=768ns, w=writeNumber=389315, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=51ms, begin took=698ns, w=writeNumber=389316, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=46ms, begin took=699ns, w=writeNumber=389317, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=43ms, begin took=699ns, w=writeNumber=389318, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=41ms, begin took=698ns, w=writeNumber=389319, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=51ms, begin took=698ns, w=writeNumber=389320, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=55ms, begin took=698ns, w=writeNumber=389321, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=50ms, begin took=838ns, w=writeNumber=389322, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=44ms, begin took=698ns, w=writeNumber=389323, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=46ms, begin took=698ns, w=writeNumber=389324, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=42ms, begin took=699ns, w=writeNumber=389325, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=50ms, begin took=698ns, w=writeNumber=389326, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=39ms, begin took=699ns, w=writeNumber=389327, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=53ms, begin took=699ns, w=writeNumber=389328, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=43ms, begin took=699ns, w=writeNumber=389329, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
2010-06-23 15:11:59,901 INFO org.apache.hadoop.hbase.regionserver.HRegion: elapsed=50ms, begin took=699ns, w=writeNumber=389330, completed=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, spun=0, count=10
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My nano-math is bad in the above... I should have divided by another 1000 so when I say 50ms above, it should be 0.05ms.&lt;/p&gt;</comment>
                            <comment id="12881926" author="tlipcon" created="Wed, 23 Jun 2010 22:27:49 +0000"  >&lt;p&gt;What happens if you add:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (spun &amp;gt; 5) &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.yield();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;any help?&lt;/p&gt;</comment>
                            <comment id="12881943" author="stack" created="Wed, 23 Jun 2010 23:05:47 +0000"  >&lt;p&gt;This patch of Ryan&apos;s seems to fix the issue.  No longer do I see a spike in load.&lt;/p&gt;

&lt;p&gt;The patch uses volatile longs in place of AtomicLong &amp;#8211; don&apos;t need the AtomicLong functionality &amp;#8211; and it then does a wait/notify instead of spinning.&lt;/p&gt;

&lt;p&gt;The spun counter is not used... should return it out and log extreme counts?&lt;/p&gt;

&lt;p&gt;Let me try Todd&apos;s suggestion next.&lt;/p&gt;</comment>
                            <comment id="12881947" author="stack" created="Wed, 23 Jun 2010 23:18:13 +0000"  >&lt;p&gt;With Todds suggestion I see loads climb still.   Ryan&apos;s patch seems to do better &amp;#8211; load is less on startup.  It may be because it slow everything way down.  Let me check that.&lt;/p&gt;</comment>
                            <comment id="12882019" author="stack" created="Thu, 24 Jun 2010 03:22:53 +0000"  >&lt;p&gt;Here is cleaned version of patch.&lt;/p&gt;

&lt;p&gt;I ran loading to the end with both Todd suggestion and Ryan&apos;s patch in place.  There wasn&apos;t much in it:&lt;/p&gt;

&lt;p&gt;Todd&apos;s suggestion:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[OVERALL],RunTime(ms), 668045
[OVERALL],Throughput(ops/sec), 14969.051486052585
[INSERT], Operations, 10000000
[INSERT], AverageLatency(ms), 5.7067132
[INSERT], MinLatency(ms), 0
[INSERT], MaxLatency(ms), 124154
[INSERT], 95thPercentileLatency(ms), 0
[INSERT], 99thPercentileLatency(ms), 1
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ryan&apos;s patch:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[OVERALL],RunTime(ms), 651014
[OVERALL],Throughput(ops/sec), 15360.652766299956
[INSERT], Operations, 10000000
[INSERT], AverageLatency(ms), 5.571351
[INSERT], MinLatency(ms), 0
[INSERT], MaxLatency(ms), 112391
[INSERT], 95thPercentileLatency(ms), 0
[INSERT], 99thPercentileLatency(ms), 0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;only w/ Ryan&apos;s patch there wasn&apos;t the same spike on startup of loading (I wasn&apos;t seeing load 40 w/ Todd patch more like 11 or 12... w/ Ryan&apos;s we were down around load 5).&lt;/p&gt;</comment>
                            <comment id="12882025" author="tlipcon" created="Thu, 24 Jun 2010 03:40:40 +0000"  >&lt;p&gt;patch looks good with one nit: if the thread spinning gets interrupted, we should propagate the interruption status out of the loop. something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; interrupted = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (condition) {
  &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
    wait();
  } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (INterruptedException ie) {
    interrupted = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
  }
}
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (interrupted) &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.currentThread().interrupt();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Though we don&apos;t really use interruption much inside RS right now, I think this is better style in general - swallowing interruptions becomes a pain if you start to rely on them.&lt;/p&gt;</comment>
                            <comment id="12882029" author="stack" created="Thu, 24 Jun 2010 04:14:38 +0000"  >&lt;p&gt;Reset interrupted flag if we get InterruptedException rather than ignore it (&lt;a href=&quot;http://www.ibm.com/developerworks/java/library/j-jtp05236.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.ibm.com/developerworks/java/library/j-jtp05236.html&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="12882030" author="tlipcon" created="Thu, 24 Jun 2010 04:16:10 +0000"  >&lt;p&gt;+1. commit to trunk and branch? maybe 0.20 also?&lt;/p&gt;</comment>
                            <comment id="12882033" author="stack" created="Thu, 24 Jun 2010 04:45:43 +0000"  >&lt;p&gt;Committed to development branch and to trunk.&lt;/p&gt;</comment>
                            <comment id="15016752" author="lars_francke" created="Fri, 20 Nov 2015 12:40:35 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12447920" name="2774-v4.txt" size="2401" author="stack" created="Thu, 24 Jun 2010 03:22:52 +0000"/>
                            <attachment id="12447922" name="2774-v5.txt" size="2820" author="stack" created="Thu, 24 Jun 2010 04:14:38 +0000"/>
                            <attachment id="12447899" name="sync-wait3.txt" size="2252" author="stack" created="Wed, 23 Jun 2010 23:05:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Jun 2010 22:27:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26461</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hj6n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100370</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>