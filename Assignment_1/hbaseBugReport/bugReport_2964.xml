<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:06:14 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2964/HBASE-2964.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2964] Deadlock when RS tries to RPC to itself inside SplitTransaction</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2964</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In testing the 0.89.20100830 rc, I ran into a deadlock with the following situation:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;All of the IPC Handler threads are blocked on the region lock, which is held by CompactSplitThread.&lt;/li&gt;
	&lt;li&gt;CompactSplitThread is in the process of trying to edit META to create the offline parent. META happens to be on the same server as is executing the split.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Therefore, the CompactSplitThread is trying to connect back to itself, but all of the handler threads are blocked, so the IPC never happens. Thus, the entire RS gets deadlocked.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12473415">HBASE-2964</key>
            <summary>Deadlock when RS tries to RPC to itself inside SplitTransaction</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tlipcon">Todd Lipcon</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Sep 2010 01:16:02 +0000</created>
                <updated>Fri, 20 Nov 2015 12:42:29 +0000</updated>
                            <resolved>Wed, 8 Sep 2010 16:58:31 +0000</resolved>
                                    <version>0.90.0</version>
                                    <fixVersion>0.90.0</fixVersion>
                                    <component>IPC/RPC</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12906631" author="tlipcon" created="Tue, 7 Sep 2010 01:18:31 +0000"  >&lt;p&gt;Fixing this is a little tricky. We could short-circuit the IPC path when detecting that a region is hosted in the same process, and thus avoid going through handlers (this is what the datanode does in the block recovery code). However, you still can have a situation where two regionservers are trying to talk to each other and end up in a deadlock.&lt;/p&gt;

&lt;p&gt;Another option is to add a timeout to these RPCs, abort the split and try again later if it fails.&lt;/p&gt;

&lt;p&gt;Another thing that might help is to have the start of the split transaction flag the table as &quot;going offline&quot;, and before taking the readlock, other accessors of the table can check for this case and immediately throw NSRE rather than blocking once the split is in progress.&lt;/p&gt;</comment>
                            <comment id="12906632" author="tlipcon" created="Tue, 7 Sep 2010 01:22:27 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2782&quot; title=&quot;QOS for META table access&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2782&quot;&gt;&lt;del&gt;HBASE-2782&lt;/del&gt;&lt;/a&gt; is another solution - if we provide QoS for the META and ROOT tables so they always have a few reserved handlers in a separate thread pool, we can avoid this issue.&lt;/p&gt;</comment>
                            <comment id="12906667" author="stack" created="Tue, 7 Sep 2010 04:20:10 +0000"  >&lt;p&gt;I agree this a blocker on 0.90.x&lt;/p&gt;</comment>
                            <comment id="12906675" author="tlipcon" created="Tue, 7 Sep 2010 05:14:19 +0000"  >&lt;p&gt;As noted on the list, this seems to be due to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2461&quot; title=&quot;Split doesn&amp;#39;t handle IOExceptions when creating new region reference files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2461&quot;&gt;&lt;del&gt;HBASE-2461&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Prior to 2461, when we split, we would close the region before doing any of the writes to META, and didn&apos;t hold any locks while doing the META updates. Now we keep the write lock all the way through, even after closing the region.&lt;/p&gt;

&lt;p&gt;I think simply moving the writeLock().unlock() up after the this.parent.close(false) in SplitTransaction should fix this issue. I&apos;m testing that change on my test cluster now.&lt;/p&gt;</comment>
                            <comment id="12906697" author="tlipcon" created="Tue, 7 Sep 2010 07:15:12 +0000"  >&lt;p&gt;I also had to move the &quot;new HTable&quot; call outside of the lock, since the HTable constructor does an RPC.&lt;/p&gt;

&lt;p&gt;This patch seems to fix the issue for me. Running an overnight load test - if it&apos;s still going in the morning I&apos;d say we&apos;re good &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12906819" author="tlipcon" created="Tue, 7 Sep 2010 14:35:59 +0000"  >&lt;p&gt;Overnight test completed OK with that patch. I think we should rebuild the rc with this if Stack thinks it looks good.&lt;/p&gt;</comment>
                            <comment id="12906908" author="hbasereviewboard" created="Tue, 7 Sep 2010 18:00:59 +0000"  >&lt;p&gt;Message from: &quot;Todd Lipcon&quot; &amp;lt;todd@cloudera.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/798/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase and stack.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Moves all RPCs outside of the region writeLock - the writeLock is now only used long enough to set the &apos;closing&apos; flag. When we drop the lock any waiters will see &apos;closing&apos; upon acquiring the lock, and thus throw NSRE.&lt;/p&gt;

&lt;p&gt;In the case that we abort the split, it will reopen the region as before. Accessors will have gotten NSRE but will just come back to the same region eventually.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2964&quot; title=&quot;Deadlock when RS tries to RPC to itself inside SplitTransaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2964&quot;&gt;&lt;del&gt;HBASE-2964&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2964&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2964&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java 3507c0d &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/798/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;YCSB testing on my cluster - it used to deadlock due to this bug within an hour. I ran a 5 hour load test overnight and it worked OK.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Todd&lt;/p&gt;

</comment>
                            <comment id="12906926" author="hbasereviewboard" created="Tue, 7 Sep 2010 18:30:57 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/798/#review1110&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/#review1110&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/798/#comment3770&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/#comment3770&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Let me make a version of this patch that takes care of rollback &amp;#8211; currently rollback expects the lock to be held on entrance; this will not be the case post close if above applied.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12906943" author="stack" created="Tue, 7 Sep 2010 19:31:43 +0000"  >&lt;p&gt;Hmmm... now I&apos;m thinking instead that we punt locking up here in splittransaction completely.  The core issue comes of an incorrect mapping of old splitLock on to new region &apos;lock&apos;.  Looking at what was done under the old splitLock, it all looks safe in the face of concurrency.  Down in the region close, its already taking out the region write lock.  Let me make a different kinda patch.&lt;/p&gt;</comment>
                            <comment id="12906963" author="hbasereviewboard" created="Tue, 7 Sep 2010 20:48:27 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/798/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-09-07 13:38:39.968517)&lt;/p&gt;


&lt;p&gt;Review request for hbase and stack.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This version removes from SplitTransaction the setting of the this.parent.lock completely.  Its not needed.  Down in the parent close, it takes out the write lock.&lt;/p&gt;

&lt;p&gt;In the past, we had a split lock and a close lock (splitLock and splitsAndClosesLock).  The split lock was held across the split while daughter regions were calculated and during close, actual split and update of .META.  As part of lock pruning, an error made in hbase-2641, was using splitsAndClosesLock where splitLock was used previously &amp;#8211; and even expanding the scope of what splitLock used cover).&lt;/p&gt;

&lt;p&gt;Looking, splitLock looks like it could have served some purpose preventing two threads contending over splitting (splits make objects in filesystem and move stuff around), but we don&apos;t really need this in current HBase since only CompactSplitThread runs splits &amp;#8211; even in new master regime where client can call a splitRegion. Later when we want to run multiple concurrent split transactions, we&apos;ll need to reexamine.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Moves all RPCs outside of the region writeLock - the writeLock is now only used long enough to set the &apos;closing&apos; flag. When we drop the lock any waiters will see &apos;closing&apos; upon acquiring the lock, and thus throw NSRE.&lt;/p&gt;

&lt;p&gt;In the case that we abort the split, it will reopen the region as before. Accessors will have gotten NSRE but will just come back to the same region eventually.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2964&quot; title=&quot;Deadlock when RS tries to RPC to itself inside SplitTransaction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2964&quot;&gt;&lt;del&gt;HBASE-2964&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2964&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2964&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java a692125 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java 3507c0d &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransaction.java a245d97 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/798/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;YCSB testing on my cluster - it used to deadlock due to this bug within an hour. I ran a 5 hour load test overnight and it worked OK.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Todd&lt;/p&gt;

</comment>
                            <comment id="12907052" author="hbasereviewboard" created="Wed, 8 Sep 2010 01:39:15 +0000"  >&lt;p&gt;Message from: &quot;Todd Lipcon&quot; &amp;lt;todd@cloudera.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/798/#review1122&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/#review1122&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Seems to make sense. Let me try it on a cluster before I +1 it&lt;/p&gt;


&lt;p&gt;src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/798/#comment3823&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/#comment3823&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    maybe now we can do an:&lt;/p&gt;

&lt;p&gt;    assert !this.parent.lock.writeLock().isHeldByCurrentThread() : &quot;Unsafe to hold write lock while performing RPCs&quot;;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Todd&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12907294" author="tlipcon" created="Wed, 8 Sep 2010 16:32:35 +0000"  >&lt;p&gt;+1 to stack&apos;s patch from reviewboard. Imported about 550G over night, worked OK.&lt;/p&gt;</comment>
                            <comment id="12907303" author="hbasereviewboard" created="Wed, 8 Sep 2010 16:48:51 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-09-07 18:33:16, Todd Lipcon wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java, line 207&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/798/diff/2/?file=11132#file11132line207&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/diff/2/?file=11132#file11132line207&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     maybe now we can do an:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     assert !this.parent.lock.writeLock().isHeldByCurrentThread() : &quot;Unsafe to hold write lock while performing RPCs&quot;;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll add in this assert&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/798/#review1122&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/798/#review1122&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12907309" author="stack" created="Wed, 8 Sep 2010 16:58:31 +0000"  >&lt;p&gt;Thanks for review and for testing Todd (applied to TRUNK and to 0.89.20100830 branch.&lt;/p&gt;</comment>
                            <comment id="15017264" author="lars_francke" created="Fri, 20 Nov 2015 12:42:29 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12467764">HBASE-2782</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12453992" name="hbase-2964.txt" size="2260" author="tlipcon" created="Tue, 7 Sep 2010 07:15:12 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Sep 2010 04:20:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26559</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hk2f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100513</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>