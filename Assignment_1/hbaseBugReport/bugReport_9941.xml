<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:09:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9941/HBASE-9941.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9941] The context ClassLoader isn&apos;t set while calling into a coprocessor</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9941</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Whenever one of the methods of a coprocessor is invoked, the context &lt;tt&gt;ClassLoader&lt;/tt&gt; isn&apos;t set to be the &lt;tt&gt;CoprocessorClassLoader&lt;/tt&gt;.  It&apos;s only set properly when calling the coprocessor&apos;s &lt;tt&gt;start&lt;/tt&gt; method.  This means that if the coprocessor code attempts to load classes using the context &lt;tt&gt;ClassLoader&lt;/tt&gt;, it will fail to find the classes it&apos;s looking for.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12678502">HBASE-9941</key>
            <summary>The context ClassLoader isn&apos;t set while calling into a coprocessor</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12678657">HBASE-9945</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="apurtell">Andrew Purtell</assignee>
                                    <reporter username="tsuna">Benoit Sigoure</reporter>
                        <labels>
                    </labels>
                <created>Mon, 11 Nov 2013 06:14:23 +0000</created>
                <updated>Sat, 21 Feb 2015 23:35:32 +0000</updated>
                            <resolved>Sat, 4 Jan 2014 07:31:17 +0000</resolved>
                                    <version>0.96.0</version>
                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.99.0</fixVersion>
                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13819228" author="yuzhihong@gmail.com" created="Mon, 11 Nov 2013 19:03:51 +0000"  >&lt;p&gt;Can you clarify in which other place(s) your coprocessor code attempts to load classes ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13843974" author="tsuna" created="Tue, 10 Dec 2013 05:37:19 +0000"  >&lt;p&gt;In any place.  For instance in &lt;tt&gt;prePut&lt;/tt&gt; I could do &lt;tt&gt;new Foo()&lt;/tt&gt; where the class &lt;tt&gt;Foo&lt;/tt&gt; has never been used before, and thus only upon entering &lt;tt&gt;prePut&lt;/tt&gt; would this class get loaded.&lt;/p&gt;</comment>
                            <comment id="13861215" author="apurtell" created="Fri, 3 Jan 2014 05:03:02 +0000"  >&lt;p&gt;Something like this as a start maybe? Passes all tests locally. I&apos;m not sure if there is a significant performance impact yet. I suspect not, but should check with a microbenchmark.&lt;/p&gt;</comment>
                            <comment id="13861260" author="hadoopqa" created="Fri, 3 Jan 2014 06:24:41 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12621251/9941.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12621251/9941.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12621251&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 4 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +              ((MasterObserver) env.getInstance()).preModifyColumnHandler(ctx, tableName, descriptor);&lt;br/&gt;
+              ((MasterObserver) env.getInstance()).postModifyColumnHandler(ctx, tableName, descriptor);&lt;br/&gt;
+  public InternalScanner preFlush(final Store store, final InternalScanner scanner) throws IOException {&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8326//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13861405" author="apurtell" created="Fri, 3 Jan 2014 10:33:41 +0000"  >&lt;p&gt;Updated patch fixes javadoc warnings and includes a microbenchmark. I went and replaced with simple code where I was maybe getting too clever with anonymous classes. There is more cutting and pasting but additional overhead goes from ~11x to ~10x.&lt;/p&gt;

&lt;p&gt;Without the latest patch:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;apurtell@acer:/usr/src/Hadoop/hbase$ ./bin/hbase org.apache.hadoop.hbase.CoprocessorInvocationEvaluation --trials 10
 0% Scenario{vm=java, trial=0, benchmark=Invocations} 10.33 ns; &#963;=0.00 ns @ 3 trials
10% Scenario{vm=java, trial=1, benchmark=Invocations} 10.30 ns; &#963;=0.02 ns @ 3 trials
20% Scenario{vm=java, trial=2, benchmark=Invocations} 10.32 ns; &#963;=0.03 ns @ 3 trials
30% Scenario{vm=java, trial=3, benchmark=Invocations} 10.32 ns; &#963;=0.03 ns @ 3 trials
40% Scenario{vm=java, trial=4, benchmark=Invocations} 10.35 ns; &#963;=0.04 ns @ 3 trials
50% Scenario{vm=java, trial=5, benchmark=Invocations} 10.36 ns; &#963;=0.03 ns @ 3 trials
60% Scenario{vm=java, trial=6, benchmark=Invocations} 10.42 ns; &#963;=0.08 ns @ 3 trials
70% Scenario{vm=java, trial=7, benchmark=Invocations} 10.34 ns; &#963;=0.02 ns @ 3 trials
80% Scenario{vm=java, trial=8, benchmark=Invocations} 10.31 ns; &#963;=0.04 ns @ 3 trials
90% Scenario{vm=java, trial=9, benchmark=Invocations} 10.35 ns; &#963;=0.09 ns @ 7 trials
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the latest patch:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;apurtell@acer:/usr/src/Hadoop/hbase$ ./bin/hbase org.apache.hadoop.hbase.CoprocessorInvocationEvaluation --trials 10
 0% Scenario{vm=java, trial=0, benchmark=Invocations} 97.45 ns; &#963;=1.79 ns @ 10 trials
10% Scenario{vm=java, trial=1, benchmark=Invocations} 98.90 ns; &#963;=0.73 ns @ 3 trials
20% Scenario{vm=java, trial=2, benchmark=Invocations} 98.31 ns; &#963;=1.33 ns @ 10 trials
30% Scenario{vm=java, trial=3, benchmark=Invocations} 100.97 ns; &#963;=0.94 ns @ 5 trials
40% Scenario{vm=java, trial=4, benchmark=Invocations} 97.20 ns; &#963;=0.36 ns @ 3 trials
50% Scenario{vm=java, trial=5, benchmark=Invocations} 99.53 ns; &#963;=0.76 ns @ 3 trials
60% Scenario{vm=java, trial=6, benchmark=Invocations} 96.04 ns; &#963;=0.28 ns @ 3 trials
70% Scenario{vm=java, trial=7, benchmark=Invocations} 98.39 ns; &#963;=1.01 ns @ 10 trials
80% Scenario{vm=java, trial=8, benchmark=Invocations} 95.87 ns; &#963;=1.98 ns @ 10 trials
90% Scenario{vm=java, trial=9, benchmark=Invocations} 98.56 ns; &#963;=0.23 ns @ 3 trials
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Java: Java(TM) SE Runtime Environment (build 1.7.0_21-b11) HotSpot(TM) 64-Bit Server VM (build 23.21-b01, mixed mode)&lt;/p&gt;

&lt;p&gt;This overhead seems the cost of switching the thread context classloader.&lt;/p&gt;</comment>
                            <comment id="13861413" author="hadoopqa" created="Fri, 3 Jan 2014 10:42:43 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12621295/9941.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12621295/9941.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12621295&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8331//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8331//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13861613" author="yuzhihong@gmail.com" created="Fri, 3 Jan 2014 15:49:54 +0000"  >&lt;p&gt;Numbers for duration in the first table were around 10ns.&lt;br/&gt;
For the second table, average was about 98ns.&lt;/p&gt;

&lt;p&gt;How do I interpret these readings ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13861706" author="yuzhihong@gmail.com" created="Fri, 3 Jan 2014 17:44:41 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Find a coprocessor environment by class name
+   * @param className the class name
+   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the coprocessor, or &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not found
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;nit: @return the coprocessor -&amp;gt; @return the coprocessor environment&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class CoprocessorInvocationEvaluation &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; SimpleBenchmark {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Add annotation for audience.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        cpHost.prePut(put, edit, Durability.SYNC_WAL);
+      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Log the exception above ?&lt;/p&gt;</comment>
                            <comment id="13861724" author="apurtell" created="Fri, 3 Jan 2014 18:01:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;How do I interpret these readings ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That adding the classloader switching adds ~90ns per upcall.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Log the exception above ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s a microbenchmark, this isn&apos;t needed or desired.&lt;/p&gt;

</comment>
                            <comment id="13861781" author="apurtell" created="Fri, 3 Jan 2014 19:00:24 +0000"  >&lt;p&gt;Updated patch that modifies the microbenchmark to do a little bit of work in the upcall for a bit more realism.&lt;/p&gt;

&lt;p&gt;Baseline:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; 0% Scenario{vm=java, trial=0, benchmark=ObserverInvocation} 35.02 ns; &#963;=0.27 ns @ 3 trials
10% Scenario{vm=java, trial=1, benchmark=ObserverInvocation} 34.87 ns; &#963;=0.30 ns @ 3 trials
20% Scenario{vm=java, trial=2, benchmark=ObserverInvocation} 34.96 ns; &#963;=0.60 ns @ 10 trials
30% Scenario{vm=java, trial=3, benchmark=ObserverInvocation} 35.08 ns; &#963;=3.78 ns @ 10 trials
40% Scenario{vm=java, trial=4, benchmark=ObserverInvocation} 34.57 ns; &#963;=0.23 ns @ 3 trials
50% Scenario{vm=java, trial=5, benchmark=ObserverInvocation} 34.91 ns; &#963;=0.57 ns @ 10 trials
60% Scenario{vm=java, trial=6, benchmark=ObserverInvocation} 34.85 ns; &#963;=0.70 ns @ 10 trials
70% Scenario{vm=java, trial=7, benchmark=ObserverInvocation} 34.26 ns; &#963;=0.25 ns @ 3 trials
80% Scenario{vm=java, trial=8, benchmark=ObserverInvocation} 34.96 ns; &#963;=2.02 ns @ 10 trials
90% Scenario{vm=java, trial=9, benchmark=ObserverInvocation} 34.77 ns; &#963;=0.34 ns @ 3 trials
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With patch here:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; 0% Scenario{vm=java, trial=0, benchmark=ObserverInvocation} 103.56 ns; &#963;=2.53 ns @ 10 trials
10% Scenario{vm=java, trial=1, benchmark=ObserverInvocation} 102.90 ns; &#963;=1.85 ns @ 10 trials
20% Scenario{vm=java, trial=2, benchmark=ObserverInvocation} 102.67 ns; &#963;=1.77 ns @ 10 trials
30% Scenario{vm=java, trial=3, benchmark=ObserverInvocation} 106.80 ns; &#963;=2.97 ns @ 10 trials
40% Scenario{vm=java, trial=4, benchmark=ObserverInvocation} 101.95 ns; &#963;=0.17 ns @ 3 trials
50% Scenario{vm=java, trial=5, benchmark=ObserverInvocation} 101.43 ns; &#963;=1.69 ns @ 10 trials
60% Scenario{vm=java, trial=6, benchmark=ObserverInvocation} 106.33 ns; &#963;=0.96 ns @ 4 trials
70% Scenario{vm=java, trial=7, benchmark=ObserverInvocation} 106.06 ns; &#963;=0.36 ns @ 3 trials
80% Scenario{vm=java, trial=8, benchmark=ObserverInvocation} 100.90 ns; &#963;=0.19 ns @ 3 trials
90% Scenario{vm=java, trial=9, benchmark=ObserverInvocation} 101.11 ns; &#963;=0.47 ns @ 3 trials
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Accounting for the difference in the upcall the results are stable and consistent with previous. &lt;/p&gt;</comment>
                            <comment id="13861787" author="apurtell" created="Fri, 3 Jan 2014 19:03:45 +0000"  >&lt;p&gt;Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13861800" author="apurtell" created="Fri, 3 Jan 2014 19:12:48 +0000"  >&lt;p&gt;Also, FYI, the latest version of Caliper is 1.0-test-1, but it&apos;s built against a more recent version of Guava than we have available. We need to use Caliper 0.5-rc1 or we will see linkage errors against Guava&apos;s Stopwatch class.&lt;/p&gt;</comment>
                            <comment id="13861848" author="ghelmling" created="Fri, 3 Jan 2014 19:51:21 +0000"  >&lt;p&gt;Looks good to me.&lt;/p&gt;

&lt;p&gt;A couple of questions on the patch:&lt;/p&gt;

&lt;p&gt;In RegionCoprocessorHost.java:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;@@ -284,11 +284,14 @@ public class RegionCoprocessorHost
     for (RegionEnvironment env: coprocessors) {
       if (env.getInstance() instanceof RegionObserver) {
         ctx = ObserverContext.createAndPrepare(env, ctx);
-         try {
+        Thread currentThread = Thread.currentThread();
+        ClassLoader cl = currentThread.getContextClassLoader();
+        try {
+          currentThread.setContextClassLoader(env.getClassLoader());
           ((RegionObserver) env.getInstance()).preOpen(ctx);
-         } catch (Throwable e) {
-           handleCoprocessorThrowable(env, e);
-         }
+        } finally {
+          currentThread.setContextClassLoader(cl);
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Shouldn&apos;t we keep the &lt;tt&gt;catch (Throwable e)&lt;/tt&gt; here, unless that is redundant for some reason?&lt;/p&gt;

&lt;p&gt;Technically outside the scope of this issue, but in WALCoprocessorHost.java, I see that preWALWrite() and postWALWrite() implementations are not doing the handleCoprocessorThrowable() handling on unexpected Throwables.  Can you think of a reason WALCoprocessorHost should not do the same as others here?  &lt;/p&gt;</comment>
                            <comment id="13861851" author="lhofhansl" created="Fri, 3 Jan 2014 19:52:21 +0000"  >&lt;p&gt;Some of these are on hot codepaths (like preScannerNext, and especially postScannerFilterRow, which is already a problem sometimes - see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10047&quot; title=&quot;postScannerFilterRow consumes a lot of CPU in tall table scans&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10047&quot;&gt;&lt;del&gt;HBASE-10047&lt;/del&gt;&lt;/a&gt;). In my 20m row filter-everything-at-the-server test, it&apos;d add 1.4s (20m*70ns) or about 20% runtime if there is at least RegionObserver registered. (need to test in a real env, though)&lt;/p&gt;

&lt;p&gt;At the same time, I do not see a better way to fix this.&lt;/p&gt;</comment>
                            <comment id="13861856" author="apurtell" created="Fri, 3 Jan 2014 19:56:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;Shouldn&apos;t we keep the catch (Throwable e) here, unless that is redundant for some reason?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good spotting, that appears to be a case where some text was accidentally highlighted under the cursor before a paste. Let me check each call site for those and get back with an updated patch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I see that preWALWrite() and postWALWrite() implementations are not doing the handleCoprocessorThrowable() handling on unexpected Throwables. Can you think of a reason WALCoprocessorHost should not do the same as others here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No. I can try adding that in this patch, it&apos;s not too far out of scope, we are updating every upcall invocation.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In my 20m row filter-everything-at-the-server test, it&apos;d add 1.4s (20m*70ns) or about 20% runtime if there is at least RegionObserver registered&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It also depends on the JVM. OpenJDK 7u45 on my test box has a difference of ~50ns.&lt;/p&gt;</comment>
                            <comment id="13861879" author="hadoopqa" created="Fri, 3 Jan 2014 20:27:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12621363/9941.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12621363/9941.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12621363&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8334//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13862125" author="apurtell" created="Sat, 4 Jan 2014 01:29:54 +0000"  >&lt;p&gt;Updated patch fixes the part Gary pointed out, adds handling of throwables to WALObserver upcalls, adds classloader context setup for RegionServerCoprocessorHost (missed it previously), and fixes a javadoc nit.&lt;/p&gt;</comment>
                            <comment id="13862152" author="ghelmling" created="Sat, 4 Jan 2014 02:16:53 +0000"  >&lt;p&gt;+1 on the latest patch.&lt;/p&gt;

&lt;p&gt;Only comment is can the caliper dependency be &lt;tt&gt;&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&lt;/tt&gt;?  Don&apos;t want to ship it as a dependency if it&apos;s only for test code.  Assuming that works, I&apos;m fine to fix that bit on commit.&lt;/p&gt;</comment>
                            <comment id="13862162" author="apurtell" created="Sat, 4 Jan 2014 02:33:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;Only comment is can the caliper dependency be &lt;tt&gt;&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&lt;/tt&gt;?  Don&apos;t want to ship it as a dependency if it&apos;s only for test code.  &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If I make it a test only dependency then this happens:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;./bin/hbase org.apache.hadoop.hbase.CoprocessorInvocationEvaluation --trials 10
Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: com/google/caliper/SimpleBenchmark
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:615)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
	at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
Caused by: java.lang.ClassNotFoundException: com.google.caliper.SimpleBenchmark
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I will commit this shortly to trunk and 0.98 if no objections.&lt;/p&gt;</comment>
                            <comment id="13862169" author="apurtell" created="Sat, 4 Jan 2014 02:48:19 +0000"  >&lt;p&gt;Actually, I agree caliper shouldn&apos;t come in except when running tests. Let me figure out some Maven way to do what I want while having caliper at test scope.&lt;/p&gt;</comment>
                            <comment id="13862170" author="hadoopqa" created="Sat, 4 Jan 2014 02:53:34 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12621442/9941.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12621442/9941.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12621442&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 4 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8337//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13862183" author="apurtell" created="Sat, 4 Jan 2014 03:23:14 +0000"  >&lt;p&gt;I can see caliper at test scope in the classpath when I run &apos;mvn dependency:build-classpath&apos; on the command line but it is not showing up in the generated file, which appears to be generated by running the exact same plugin and goal. Beats me. Maven &quot;documentation&quot; offers no clue. If I leave it at test scope the microbenchmark will compile but cannot be run from in tree or an untarred assembly. &lt;/p&gt;</comment>
                            <comment id="13862188" author="apurtell" created="Sat, 4 Jan 2014 03:33:44 +0000"  >&lt;p&gt;Latest patch removes the microbenchmark and POM changes. This is what I will commit soon.&lt;/p&gt;</comment>
                            <comment id="13862211" author="hadoopqa" created="Sat, 4 Jan 2014 05:11:08 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12621452/9941.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12621452/9941.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12621452&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 4 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8339//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13862232" author="apurtell" created="Sat, 4 Jan 2014 07:12:50 +0000"  >&lt;p&gt;Apparent &apos;release audit&apos; warnings are these issues unrelated to this patch, which only modifies existing files with license headers:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[WARNING] The POM for org.eclipse.m2e:lifecycle-mapping:jar:1.0.0 is missing, no dependency information available
[WARNING] Failed to retrieve plugin descriptor for org.eclipse.m2e:lifecycle-mapping:1.0.0: Plugin org.eclipse.m2e:lifecycle-mapping:1.0.0 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.eclipse.m2e:lifecycle-mapping:jar:1.0.0
[WARNING] The POM for org.eclipse.m2e:lifecycle-mapping:jar:1.0.0 is missing, no dependency information available
[WARNING] Failed to retrieve plugin descriptor for org.eclipse.m2e:lifecycle-mapping:1.0.0: Plugin org.eclipse.m2e:lifecycle-mapping:1.0.0 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.eclipse.m2e:lifecycle-mapping:jar:1.0.0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13862235" author="apurtell" created="Sat, 4 Jan 2014 07:31:17 +0000"  >&lt;p&gt;Committed to trunk and 0.98. Thanks Gary and Lars for the reviews and advice.&lt;/p&gt;</comment>
                            <comment id="13862256" author="hudson" created="Sat, 4 Jan 2014 10:38:39 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #4788 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4788/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4788/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9941&quot; title=&quot;The context ClassLoader isn&amp;#39;t set while calling into a coprocessor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9941&quot;&gt;&lt;del&gt;HBASE-9941&lt;/del&gt;&lt;/a&gt;. The context ClassLoader isn&apos;t set while calling into a coprocessor (apurtell: rev 1555328)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/CoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/security/token/TestTokenAuthentication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13862258" author="hudson" created="Sat, 4 Jan 2014 10:49:48 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #57 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/57/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/57/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9941&quot; title=&quot;The context ClassLoader isn&amp;#39;t set while calling into a coprocessor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9941&quot;&gt;&lt;del&gt;HBASE-9941&lt;/del&gt;&lt;/a&gt;. The context ClassLoader isn&apos;t set while calling into a coprocessor (apurtell: rev 1555329)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-client/src/main/java/org/apache/hadoop/hbase/CoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/test/java/org/apache/hadoop/hbase/security/token/TestTokenAuthentication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13862266" author="hudson" created="Sat, 4 Jan 2014 11:12:43 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #53 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/53/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/53/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9941&quot; title=&quot;The context ClassLoader isn&amp;#39;t set while calling into a coprocessor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9941&quot;&gt;&lt;del&gt;HBASE-9941&lt;/del&gt;&lt;/a&gt;. The context ClassLoader isn&apos;t set while calling into a coprocessor (apurtell: rev 1555329)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-client/src/main/java/org/apache/hadoop/hbase/CoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/test/java/org/apache/hadoop/hbase/security/token/TestTokenAuthentication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13862288" author="hudson" created="Sat, 4 Jan 2014 12:29:25 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-1.1 #41 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/41/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/41/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9941&quot; title=&quot;The context ClassLoader isn&amp;#39;t set while calling into a coprocessor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9941&quot;&gt;&lt;del&gt;HBASE-9941&lt;/del&gt;&lt;/a&gt;. The context ClassLoader isn&apos;t set while calling into a coprocessor (apurtell: rev 1555328)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/CoprocessorEnvironment.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/security/token/TestTokenAuthentication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14121569" author="vrodionov" created="Thu, 4 Sep 2014 17:01:58 +0000"  >&lt;p&gt;The additional observed overhead is explained here:&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.java.net/browse/JDK-6642881?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://bugs.openjdk.java.net/browse/JDK-6642881?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Class.getClassLoader() is expensive op because of JNI nature. &lt;br/&gt;
CoprocessorHost.Environment&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;ClassLoader&lt;/span&gt; getClassLoader() {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; impl.getClass().getClassLoader();
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;does not do any attempts to cache class loader instance. I think it is safe to cache it. Correct me if I am wrong.&lt;/p&gt;</comment>
                            <comment id="14331336" author="enis" created="Sat, 21 Feb 2015 23:35:32 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12739179">HBASE-11898</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12621452" name="9941.patch" size="143569" author="apurtell" created="Sat, 4 Jan 2014 03:33:44 +0000"/>
                            <attachment id="12621442" name="9941.patch" size="148535" author="apurtell" created="Sat, 4 Jan 2014 01:29:54 +0000"/>
                            <attachment id="12621363" name="9941.patch" size="141609" author="apurtell" created="Fri, 3 Jan 2014 19:00:24 +0000"/>
                            <attachment id="12621295" name="9941.patch" size="144754" author="apurtell" created="Fri, 3 Jan 2014 10:33:41 +0000"/>
                            <attachment id="12621251" name="9941.patch" size="134222" author="apurtell" created="Fri, 3 Jan 2014 05:03:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 11 Nov 2013 19:03:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>357869</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1poxz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>358159</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>