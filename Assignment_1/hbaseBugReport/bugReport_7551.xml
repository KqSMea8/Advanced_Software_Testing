<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:46:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7551/HBASE-7551.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7551] nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7551</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This came from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7468&quot; title=&quot;TestSplitTransactionOnCluster hangs frequently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7468&quot;&gt;&lt;del&gt;HBASE-7468&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
I got the issue. I am able to reproduce this&lt;br/&gt;
See the logs&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-01-14 14:37:21,760 INFO  [main] regionserver.SplitTransaction(216): Starting split of region testShouldClearRITWhenNodeFoundInSplittingState,,1358154439514.a9e57d09c58b3ef3b949d602232fb2c2.

2013-01-14 14:37:21,760 DEBUG [main] regionserver.SplitTransaction(871): regionserver:61665-0x13c384e4e4f0002 Creating ephemeral node &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a9e57d09c58b3ef3b949d602232fb2c2 in SPLITTING state

2013-01-14 14:37:21,844 DEBUG [main] zookeeper.ZKAssign(757): regionserver:61665-0x13c384e4e4f0002 Attempting to transition node a9e57d09c58b3ef3b949d602232fb2c2 from RS_ZK_REGION_SPLITTING to RS_ZK_REGION_SPLITTING

2013-01-14 14:37:21,849 DEBUG [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-873-EventThread] zookeeper.ZooKeeperWatcher(277): master:62334-0x13c384e4e4f001b Received ZooKeeper Event, type=NodeChildrenChanged, state=SyncConnected, path=/hbase/unassigned

2013-01-14 14:37:21,853 DEBUG [main] zookeeper.ZKUtil(1565): regionserver:61665-0x13c384e4e4f0002 Retrieved 140 &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;(s) of data from znode /hbase/unassigned/a9e57d09c58b3ef3b949d602232fb2c2; data=region=testShouldClearRITWhenNodeFoundInSplittingState,,1358154439514.a9e57d09c58b3ef3b949d602232fb2c2., origin=Ram.Home,61665,1358154325430, state=RS_ZK_REGION_SPLITTING

2013-01-14 14:37:21,918 DEBUG [main] zookeeper.ZKAssign(820): regionserver:61665-0x13c384e4e4f0002 Successfully transitioned node a9e57d09c58b3ef3b949d602232fb2c2 from RS_ZK_REGION_SPLITTING to RS_ZK_REGION_SPLITTING

2013-01-14 14:37:21,919 DEBUG [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-873-EventThread] zookeeper.ZKUtil(417): master:62334-0x13c384e4e4f001b Set watcher on existing znode /hbase/unassigned/a9e57d09c58b3ef3b949d602232fb2c2
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here we can observe that the SPLITTING node was first created. Then we transit it to SPLITTING to SPLITTING so that AM can have the nodeDataChange event. But for the nodeDataChange event to happen first nodeChildrenChange event should happen so that the master can set a watcher on the node.&lt;br/&gt;
Now when this hang happens, we can see that after the transition happens only then the watcher is set by nodeChildrenChange event and so the SPLITTING to SPLITTING event itself is missed or skipped.&lt;/p&gt;

&lt;p&gt;Ideally the nodeChildrenChange event iterates thro the list of new znodes on the /hbase/assignment nodes. And then creates a watcher on that. One reason could be there are more than one znode and so the watch setting operation takes time. The order of execution is different when we try running from eclipse and when we run mvn tests. &lt;br/&gt;
My conclusion is that the testcase actually reveals the problem but the same can happen in any case where the SPLITTING event can get missed out. May be some of the SPLIT related bugs that were raised is due to this? Need to analyse.&lt;br/&gt;
Any suggestions welcome. We should ensure that the transition from SPLITTING to SPLITTING should happen only after the master has set the watch on the znode and we should be sure of that.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12627406">HBASE-7551</key>
            <summary>nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Jan 2013 10:01:42 +0000</created>
                <updated>Tue, 26 Feb 2013 08:27:16 +0000</updated>
                            <resolved>Tue, 15 Jan 2013 22:18:59 +0000</resolved>
                                    <version>0.94.4</version>
                                    <fixVersion>0.94.5</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13552547" author="ram_krish" created="Mon, 14 Jan 2013 10:03:03 +0000"  >&lt;p&gt;Will also check the impact of this on trunk. If trunk is safe then need to fix only on 0.94 branch.&lt;/p&gt;</comment>
                            <comment id="13552552" author="nkeywal" created="Mon, 14 Jan 2013 10:12:38 +0000"  >&lt;p&gt;Nice catch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We should ensure that the transition from SPLITTING to SPLITTING should happen only after the master has set the watch on the znode and we should be sure of that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It would add a dependency to master, but may be there is no other solution. Something that would work if we accept this is:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;region server does a rpc calls to master asking &apos;may I start a split&apos;&lt;/li&gt;
	&lt;li&gt;when master is ok, it creates znode M_SPLITTING_REQUEST and watches it&lt;/li&gt;
	&lt;li&gt;the region server can then start the split.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The advantage is that it&apos;s the same logic as an assignment: the master creates the first node. But it creates a dependency to master. Other way would be to change the master to make able to manage the case when it receives only the last event. It&apos;s like if the master was dead when the split took place: the master receives only the result...&lt;/p&gt;
</comment>
                            <comment id="13552561" author="ram_krish" created="Mon, 14 Jan 2013 10:33:27 +0000"  >&lt;p&gt;Yes N.  Something like the above should be done.&lt;br/&gt;
But, the previous 0.90 versions had the msging thro RPC between master and RS for ensuring the SPLIT status.  That has been removed.&lt;br/&gt;
May be as in AM assigning regions can we start with the master creating the znode?&lt;/p&gt;

&lt;p&gt;Another thing if you see about split is, even the admin.split() makes a call only to the RS and the master does not come here.  So these are somethings that needs to be taken care before we change the split flow.  Thanks N for checking this.  &lt;/p&gt;</comment>
                            <comment id="13552574" author="nkeywal" created="Mon, 14 Jan 2013 10:57:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;May be as in AM assigning regions can we start with the master creating the znode?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It would be cleaner but less efficient. As we don&apos;t need to be that efficient for a region split, it could be the best solution imho... It ensures that the master knows what&apos;s going on (and saves us from all scenario when we have master asking for moving a region we are currently splitting...).&lt;/p&gt;</comment>
                            <comment id="13552892" author="ram_krish" created="Mon, 14 Jan 2013 17:16:39 +0000"  >&lt;p&gt;Some concerns here is,&lt;br/&gt;
The region size is actually known by RS.  So only RS can start the splitting.  One way could be to again start an msging between master and RS so that RS can be sure of master&apos;s state of knowing the SPLIT.  That is what N has also suggested in the above comments.&lt;/p&gt;</comment>
                            <comment id="13552900" author="ram_krish" created="Mon, 14 Jan 2013 17:20:53 +0000"  >&lt;p&gt;@N&lt;br/&gt;
Instead of starting msging between master and RS, why dont we make the master update the status in the znode itself, so that based on that let the RS carry on with further process?&lt;br/&gt;
Another way could be, make the RS create the znode in SPLITTING state.  Let the transition be done by the master from SPLITTING to SPLITTING. This ensures that there is a change in the znode version.&lt;br/&gt;
Now only if the version changes let the RS carry on with its further steps of SPLITTING?  &lt;/p&gt;</comment>
                            <comment id="13552927" author="nkeywal" created="Mon, 14 Jan 2013 17:54:21 +0000"  >&lt;p&gt;If I not wrong, we would still have to manage that the master can miss the &apos;new child event&apos; for this specific znode?&lt;br/&gt;
Anyway, I suppose that we can make it work as well. And there is anyway a question with my proposal:&lt;/p&gt;

&lt;p&gt;for AM we have:&lt;br/&gt;
Master creates znode and watches&lt;br/&gt;
Master RPC the regionservers&lt;br/&gt;
Regionserver update the znode&lt;br/&gt;
Master deletes the znode&lt;/p&gt;


&lt;p&gt;While with the proposal we would have&lt;br/&gt;
Regionserver RPC master&lt;br/&gt;
Master creates znode&lt;br/&gt;
Does master RPC region servers now?&lt;/p&gt;</comment>
                            <comment id="13552980" author="lhofhansl" created="Mon, 14 Jan 2013 18:47:22 +0000"  >&lt;p&gt;I have to study the code a bit more. But offhand, why can&apos;t nodeChildrenChange in HMaster examine the znodes and perform the right action?&lt;/p&gt;

&lt;p&gt;In any case a design that relies on state transitions is bad. The required action should always be decided upon based on a view of the state.&lt;/p&gt;</comment>
                            <comment id="13553001" author="lhofhansl" created="Mon, 14 Jan 2013 19:08:10 +0000"  >&lt;p&gt;Making critical, since this race can leave random regions hung in splitting state.&lt;/p&gt;</comment>
                            <comment id="13553035" author="lhofhansl" created="Mon, 14 Jan 2013 19:42:10 +0000"  >&lt;p&gt;In fact looking at the code... Could somebody explain to me why we create the node first and then take it from SPLITTING to SPLITTING? Just to trigger the a node changed event in the master?&lt;/p&gt;</comment>
                            <comment id="13553331" author="lhofhansl" created="Tue, 15 Jan 2013 00:27:51 +0000"  >&lt;p&gt;Is AssignmentManager.handleRegion idempotent? After a cursory looks it seems like it could be.&lt;br/&gt;
If so, we can just call it for all children seen in nodeChildrenChange.&lt;/p&gt;</comment>
                            <comment id="13553363" author="stack" created="Tue, 15 Jan 2013 01:06:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;Could somebody explain to me why we create the node first and then take it from SPLITTING to SPLITTING? Just to trigger the a node changed event in the master?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So we are sure we own the region/znode still and to get the znode sequence id (You cannot create and get the seqid all in the one go at least in these older versions of zk) which we use later when we transition, again to be sure we still own the region while we operate on it.&lt;/p&gt;</comment>
                            <comment id="13553369" author="lhofhansl" created="Tue, 15 Jan 2013 01:11:52 +0000"  >&lt;p&gt;I see. Hmm...&lt;br/&gt;
I have a test patch, which just calls handleRegion for all children found in nodeChildrenChanged.&lt;br/&gt;
It passes TestSplitTransactionOnCluster. But from your explanation that would not be correct.&lt;/p&gt;</comment>
                            <comment id="13553472" author="ram_krish" created="Tue, 15 Jan 2013 04:18:36 +0000"  >&lt;p&gt;@N&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;While with the proposal we would have&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Regionserver RPC master&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Master creates znode&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Does master RPC region servers now?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;So you mean should we make the master RPC the region server to say i have created the znode?  &lt;br/&gt;
May be that is not needed.  Why dont the RS act based on the znode.  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If I not wrong, we would still have to manage that the master can miss the &apos;new child event&apos; for this specific znode?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am not sure i follow you. I feel that the master is sure to see the new children.  Its only the fact when it sees it.  So once the master sees let it change the state so that znode version changes and let RS work on it.&lt;br/&gt;
@Stack/Lars&lt;br/&gt;
What do you think of the suggestion &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Another way could be, make the RS create the znode in SPLITTING state. Let the transition be done by the master from SPLITTING to SPLITTING. This ensures that there is a change in the znode version. Now only if the version changes let the RS carry on with its further steps of SPLITTING?&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13553482" author="lhofhansl" created="Tue, 15 Jan 2013 04:48:30 +0000"  >&lt;p&gt;For what&apos;s it worth, here&apos;s a test patch I have. With it I have looped TestSplitTransactionOnCluster for 1.5h and it did not fail single time (before I could easily produce a failure within 15-20m or so).&lt;/p&gt;

&lt;p&gt;Now, from the discussion here, this patch is probably not correct. Just throwing it out there.&lt;/p&gt;</comment>
                            <comment id="13553501" author="ram_krish" created="Tue, 15 Jan 2013 05:24:20 +0000"  >&lt;p&gt;@Lars&lt;br/&gt;
Change seems fine and its very simple too.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
RegionTransitionData data = ZKAssign.getDataAndWatch(watcher,
+                ZKUtil.joinZNode(watcher.assignmentZNode, child), stat);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We dont need the data watch here.  As we already set the children watch.  &lt;br/&gt;
I think we can also check for the version of the znode and then take an action.  If it has a version then it means the RS has transited it.&lt;br/&gt;
So in that case call handleRegion().  &lt;/p&gt;</comment>
                            <comment id="13553508" author="lhofhansl" created="Tue, 15 Jan 2013 05:32:34 +0000"  >&lt;p&gt;Don&apos;t we have to set the watch in case we see this before the RS had a chance to transition the node.&lt;br/&gt;
With &quot;has a version&quot; you mean a version &amp;gt; 0? Maybe easiest if you show me in a patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13553531" author="ram_krish" created="Tue, 15 Jan 2013 05:59:15 +0000"  >&lt;p&gt;Ok Lars.  I will prepare a patch and upload it.  Give me some time.  Today eve i should be able to prepare one.&lt;br/&gt;
Will also check the impact on existing code if any.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13553549" author="stack" created="Tue, 15 Jan 2013 06:40:51 +0000"  >&lt;p&gt;Lars patch looks pretty good.  Looking forward to Ram patch.&lt;/p&gt;</comment>
                            <comment id="13553563" author="lhofhansl" created="Tue, 15 Jan 2013 07:14:05 +0000"  >&lt;p&gt;Slightly better patch, including Ram&apos;s suggestion to check the version.&lt;br/&gt;
I do think the watch of the individual nodes need to be kept the way it was before.&lt;br/&gt;
(I ran the test in a loop for an hour again, no failure)&lt;/p&gt;</comment>
                            <comment id="13553932" author="ram_krish" created="Tue, 15 Jan 2013 16:07:31 +0000"  >&lt;p&gt;+1 Lars.&lt;br/&gt;
Actually seeing the api listChildrenAndWatchForNewChildren() i thought that inside the api we are any way setting the watch and so why do we need to set watch once again.  Initially we were using listChildrenAndWatchThem().  &lt;br/&gt;
The version check will ensure we dont do handleRegion if master has seen the data change.&lt;br/&gt;
Is this patch enough?  Need to see trunk also?&lt;/p&gt;</comment>
                            <comment id="13553980" author="stack" created="Tue, 15 Jan 2013 16:41:28 +0000"  >&lt;p&gt;Patch looks good to me.  Not sure how useful the version check is (doesn&apos;t every znode in zk have a seqid?).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In any case a design that relies on state transitions is bad. The required action should always be decided upon based on a view of the state.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.  Usually the zk stuff acts on whatever it sees though it may have missed a few transitions.  This issue found a hole where if we missed an event, we failed to set a watcher so would miss subsequent events.&lt;/p&gt;

&lt;p&gt;On RS rpc&apos;ing the master, as Ram notes, we used to do it that way and undid the RS sending the master commands via RPC and moved the signaling to go via zk.  We could reinstitute but would warrant some substantial justification I&apos;d say.&lt;/p&gt;

&lt;p&gt;Regards having the master run the split, we could do that too.  It could simplify things given this is only instance where RS does an action of its own volition.  It would add some latency to split.  That&apos;d probably be fine.  An rpc from the RS to the master would probably be overkill.  Adding a I_WANT_TO_SPLIT znode that the master then turns into a SPLITTING, etc., would probably be a better fit given how things run (minus the work nkeywal is doing to undo the number of zk transitions we do).&lt;/p&gt;

&lt;p&gt;Good stuff lads.  &lt;/p&gt;
</comment>
                            <comment id="13553998" author="ram_krish" created="Tue, 15 Jan 2013 17:03:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;Not sure how useful the version check is &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If the nodeChildrenEvent happens just after RS creates the znode we need not do handleRegion because anyway the nodeDataChange event will do it.&lt;br/&gt;
That is why i suggested it.&lt;br/&gt;
So Stack, this patch will do or should we raise an improvement and work on the new changes mentioned in the above comment?&lt;/p&gt;</comment>
                            <comment id="13554004" author="stack" created="Tue, 15 Jan 2013 17:08:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;If the nodeChildrenEvent happens just after RS creates the znode we need not do handleRegion because anyway the nodeDataChange event will do it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds reasonable.  Are znodes created w/ seqid of zero?  Not 1?&lt;/p&gt;</comment>
                            <comment id="13554020" author="ram_krish" created="Tue, 15 Jan 2013 17:22:04 +0000"  >&lt;p&gt;Yes.  On creating node we get seqid as 0.&lt;/p&gt;</comment>
                            <comment id="13554057" author="yuzhihong@gmail.com" created="Tue, 15 Jan 2013 17:59:02 +0000"  >&lt;p&gt;minor comment:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+          &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; child : children) {
+            Stat stat = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Stat();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think one Stat object should suffice. Inside the loop, we can call stat.setVersion(0)&lt;/p&gt;

&lt;p&gt;Trunk patch is desirable.&lt;/p&gt;

&lt;p&gt;Thanks Lars&lt;/p&gt;</comment>
                            <comment id="13554120" author="lhofhansl" created="Tue, 15 Jan 2013 18:42:45 +0000"  >&lt;p&gt;Thanks for the trunk patch Ted.&lt;br/&gt;
The Stat object is very cheap, for readability I&apos;d prefer creating one in the loop (but I do not care strongly). &lt;/p&gt;</comment>
                            <comment id="13554171" author="yuzhihong@gmail.com" created="Tue, 15 Jan 2013 19:09:47 +0000"  >&lt;p&gt;In trunk, TestSplitTransactionOnCluster, without patch, once hung in calling admin.disableTable(tableName) at line 771.&lt;/p&gt;

&lt;p&gt;Toward the end of test output, I saw:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
013-01-15 10:51:12,747 WARN  [org.apache.hadoop.hdfs.server.datanode.DataBlockScanner@4efde2c1] util.NativeCodeLoader(52): Unable to load &lt;span class=&quot;code-keyword&quot;&gt;native&lt;/span&gt;-hadoop library &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; your platform... using builtin-java classes where applicable
2013-01-15 10:51:32,346 FATAL [10.10.8.197,64388,1358275830786-BalancerChore] hbase.Chore(79): 10.10.8.197,64388,1358275830786-BalancerChoreerror
java.lang.NoClassDefFoundError: org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$1
  at org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer.getRegionLoadCost(StochasticLoadBalancer.java:673)
  at org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer.computeRegionLoadCost(StochasticLoadBalancer.java:647)
  at org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer.computeCost(StochasticLoadBalancer.java:427)
  at org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer.balanceCluster(StochasticLoadBalancer.java:192)
  at org.apache.hadoop.hbase.master.HMaster.balance(HMaster.java:1309)
  at org.apache.hadoop.hbase.master.balancer.BalancerChore.chore(BalancerChore.java:48)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13554180" author="hadoopqa" created="Tue, 15 Jan 2013 19:16:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12564961/7551-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12564961/7551-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestLocalHBaseCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4025//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13554184" author="yuzhihong@gmail.com" created="Tue, 15 Jan 2013 19:19:51 +0000"  >&lt;p&gt;Patch v2 for trunk.&lt;/p&gt;</comment>
                            <comment id="13554245" author="yuzhihong@gmail.com" created="Tue, 15 Jan 2013 19:51:36 +0000"  >&lt;p&gt;Looped TestSplitTransactionOnCluster successfully 29 times with trunk patch v2.&lt;/p&gt;

&lt;p&gt;Will continue with the test.&lt;/p&gt;</comment>
                            <comment id="13554262" author="lhofhansl" created="Tue, 15 Jan 2013 20:10:50 +0000"  >&lt;p&gt;This looks good.&lt;br/&gt;
I&apos;ll commit this soon unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13554267" author="hadoopqa" created="Tue, 15 Jan 2013 20:12:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12564983/7551-trunk-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12564983/7551-trunk-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestLocalHBaseCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4028//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13554307" author="lhofhansl" created="Tue, 15 Jan 2013 20:44:50 +0000"  >&lt;p&gt;TestLocalHBaseCluster passes locally for me. Hmm...&lt;/p&gt;</comment>
                            <comment id="13554335" author="yuzhihong@gmail.com" created="Tue, 15 Jan 2013 20:58:34 +0000"  >&lt;p&gt;2 more rounds of test run with 29 iterations each passed.&lt;br/&gt;
This was based on patch v2 using jdk 1.7&lt;/p&gt;</comment>
                            <comment id="13554415" author="lhofhansl" created="Tue, 15 Jan 2013 21:56:11 +0000"  >&lt;p&gt;Anybody opposed to committing this?&lt;br/&gt;
After this is fixed, the next question is whether we have more cases such as this one.&lt;/p&gt;</comment>
                            <comment id="13554446" author="lhofhansl" created="Tue, 15 Jan 2013 22:18:59 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96.&lt;/p&gt;</comment>
                            <comment id="13554447" author="lhofhansl" created="Tue, 15 Jan 2013 22:19:30 +0000"  >&lt;p&gt;Thanks Ram and Ted!&lt;/p&gt;</comment>
                            <comment id="13554453" author="yuzhihong@gmail.com" created="Tue, 15 Jan 2013 22:23:20 +0000"  >&lt;p&gt;@Lars:&lt;br/&gt;
Do you want to assign this issue to yourself ?&lt;/p&gt;</comment>
                            <comment id="13554472" author="lhofhansl" created="Tue, 15 Jan 2013 22:40:26 +0000"  >&lt;p&gt;Either way &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Ram did the work of tracking the issue down...&lt;/p&gt;</comment>
                            <comment id="13554513" author="hudson" created="Tue, 15 Jan 2013 23:26:23 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #736 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/736/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/736/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7551&quot; title=&quot;nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7551&quot;&gt;&lt;del&gt;HBASE-7551&lt;/del&gt;&lt;/a&gt; nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side. (Ram, Ted, and Lars H) (Revision 1433700)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13554630" author="hudson" created="Wed, 16 Jan 2013 01:50:59 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3752 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3752/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3752/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7551&quot; title=&quot;nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7551&quot;&gt;&lt;del&gt;HBASE-7551&lt;/del&gt;&lt;/a&gt; nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side. (Ram, Ted, and Lars H) (Revision 1433696)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13554648" author="hudson" created="Wed, 16 Jan 2013 02:04:15 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #349 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/349/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/349/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7551&quot; title=&quot;nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7551&quot;&gt;&lt;del&gt;HBASE-7551&lt;/del&gt;&lt;/a&gt; nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side. (Ram, Ted, and Lars H) (Revision 1433696)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13561714" author="hudson" created="Thu, 24 Jan 2013 16:04:47 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #96 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/96/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/96/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7551&quot; title=&quot;nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7551&quot;&gt;&lt;del&gt;HBASE-7551&lt;/del&gt;&lt;/a&gt; nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side. (Ram, Ted, and Lars H) (Revision 1433700)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13570961" author="hudson" created="Tue, 5 Feb 2013 03:58:21 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #11 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/11/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/11/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7551&quot; title=&quot;nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7551&quot;&gt;&lt;del&gt;HBASE-7551&lt;/del&gt;&lt;/a&gt; nodeChildrenChange event may happen after the transition to RS_ZK_REGION_SPLITTING in SplitTransaction causing the SPLIT event to be missed in the master side. (Ram, Ted, and Lars H) (Revision 1433700)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12564871" name="7551-0.94-test.txt" size="1352" author="lhofhansl" created="Tue, 15 Jan 2013 04:48:30 +0000"/>
                            <attachment id="12564887" name="7551-0.94-v1.txt" size="1376" author="lhofhansl" created="Tue, 15 Jan 2013 07:14:05 +0000"/>
                            <attachment id="12564983" name="7551-trunk-v2.txt" size="2653" author="yuzhihong@gmail.com" created="Tue, 15 Jan 2013 19:19:51 +0000"/>
                            <attachment id="12564961" name="7551-trunk.txt" size="2380" author="yuzhihong@gmail.com" created="Tue, 15 Jan 2013 18:15:49 +0000"/>
                            <attachment id="12564980" name="testSplitTransactionOnCluster-output.txt" size="14189" author="yuzhihong@gmail.com" created="Tue, 15 Jan 2013 19:09:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Jan 2013 10:12:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>304190</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 45 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i17k07:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>252210</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>