<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:35:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6312/HBASE-6312.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6312] Make BlockCache eviction thresholds configurable</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6312</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Some of our customers found that tuning the BlockCache eviction thresholds made test results different in their test environment. However, those thresholds are not configurable in the current implementation. The only way to change those values is to re-compile the HBase source code. We wonder if it is possible to make them configurable.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12596936">HBASE-6312</key>
            <summary>Make BlockCache eviction thresholds configurable</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="grace.huang">Jie Huang</assignee>
                                    <reporter username="grace.huang">Jie Huang</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Jul 2012 06:07:05 +0000</created>
                <updated>Mon, 23 Sep 2013 18:30:39 +0000</updated>
                            <resolved>Thu, 19 Jul 2012 21:51:27 +0000</resolved>
                                    <version>0.94.0</version>
                                    <fixVersion>0.95.0</fixVersion>
                                    <component>io</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13405649" author="grace.huang" created="Tue, 3 Jul 2012 06:13:14 +0000"  >&lt;p&gt;Trivial modifications in the patch file.&lt;br/&gt;
1. Add two additional constructors in LruBlockCache to accept configuration&lt;br/&gt;
object.&lt;br/&gt;
2. To create the instance by reading conf object. If corresponding items are&lt;br/&gt;
missing, just use the default value.&lt;/p&gt;</comment>
                            <comment id="13405657" author="jason.dai" created="Tue, 3 Jul 2012 06:24:44 +0000"  >&lt;p&gt;Yes, this is also mentioned in the HBase BoF presentation by Jean-Daniel Cryans at &lt;a href=&quot;http://www.slideshare.net/jdcryans/performance-bof12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.slideshare.net/jdcryans/performance-bof12&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13405689" author="zhihyu@ebaysf.com" created="Tue, 3 Jul 2012 08:32:50 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; LruBlockCache(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; maxSize, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; blockSize, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; evictionThread, Configuration conf) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;How was the patch generated ? The above new ctor is shown as being removed.&lt;/p&gt;

&lt;p&gt;If you want Hadoop QA to check your patch, generate the patch from root of trunk workspace.&lt;/p&gt;</comment>
                            <comment id="13405696" author="grace.huang" created="Tue, 3 Jul 2012 08:50:01 +0000"  >&lt;p&gt;Sorry. It is against to 0.94. There is sth. wrong with my patch generating. Here is the correct patch file. &lt;/p&gt;</comment>
                            <comment id="13405973" author="zhihyu@ebaysf.com" created="Tue, 3 Jul 2012 18:31:10 +0000"  >&lt;p&gt;Pasting from a message on dev@:&lt;/p&gt;

&lt;p&gt;Ideally those shouldn&apos;t be configurable, we should just set to a level&lt;br/&gt;
that makes more sense. If we do make it configurable and let it like&lt;br/&gt;
that then we&apos;ll have questions like &quot;what acceptable/min factor should&lt;br/&gt;
I use?&quot; and we&apos;ll spend hours doing back and forth on the ML to get&lt;br/&gt;
minimal results.&lt;/p&gt;

&lt;p&gt;Currently having the acceptable factor set to where it is just means&lt;br/&gt;
that we&apos;re using less memory than configured eg if you need to cache&lt;br/&gt;
2GB per machine, set hfile.block.cache.size to ~2.35GB and you&apos;ll have&lt;br/&gt;
it.&lt;/p&gt;

&lt;p&gt;The real issue is the minimum factor. The idea is that we don&apos;t want&lt;br/&gt;
to overflow the configured maximum size while we&apos;re evicting. The&lt;br/&gt;
problems:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Evicting 10% of the cache (85-75) is pretty hardcore, it means that&lt;br/&gt;
if you evict often then you&apos;re never close to using 85% of your cache.&lt;/li&gt;
	&lt;li&gt;Evictions are purely CPU-bound and in my tests are almost never&lt;br/&gt;
likely to be so slow that you reach 100% utilization (whereas loading&lt;br/&gt;
the cache usually means you need to read from disk). It was too slow&lt;br/&gt;
for caches of up to 32MB with data generated in-memory.&lt;/li&gt;
	&lt;li&gt;Considering the previous two problems it seems we should set the&lt;br/&gt;
minimum factor close to the acceptable one, but on big caches this&lt;br/&gt;
would waste a lot of CPU cycles (I haven&apos;t quantified that yet, I&apos;m&lt;br/&gt;
just stating this from experience).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So back to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6312&quot; title=&quot;Make BlockCache eviction thresholds configurable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6312&quot;&gt;&lt;del&gt;HBASE-6312&lt;/del&gt;&lt;/a&gt;, at the moment I think we should just set the&lt;br/&gt;
minimum factor 5% closer to the acceptable one. Jie Huang doesn&apos;t&lt;br/&gt;
mention if in their tests their customers compared the caching ratio&lt;br/&gt;
for caches of the same size but with different acceptable factor or if&lt;br/&gt;
they tried to compare apples to apples. What I&apos;m trying to say, going&lt;br/&gt;
back to my earlier example, is that if they compared two caches with&lt;br/&gt;
hfile.block.cache.size=0.2 but with different acceptable factors then&lt;br/&gt;
well yes the one with the bigger acceptable factor will win... because&lt;br/&gt;
it&apos;s using a bigger cache.&lt;/p&gt;

&lt;p&gt;J-D&lt;/p&gt;</comment>
                            <comment id="13406507" author="grace.huang" created="Wed, 4 Jul 2012 13:28:52 +0000"  >&lt;p&gt;Thanks for those detailed explainations. Yes, you are right. The bigger cache size makes different of course. The end user somehow can increase the cache size without tuning that acceptable factor.  From the customer&apos;s perspective, it is much easier to configure them than re-compiling the code from time to time.  According to your suggestion, shall we need to make that gap (between the minimum and acceptable factor) configurable at least?&lt;/p&gt;</comment>
                            <comment id="13406553" author="jason.dai" created="Wed, 4 Jul 2012 14:32:54 +0000"  >&lt;p&gt;If we do not expose the acceptable factor and minimum factor, the hfile.block.cache.size parameter can be very confusing (for the user to properly configure the cache size behavior). Just as J-D mentioned, if the user want 2GB cache, he needs to set the parameter to ~2.35GB, and he needs to understand the HBase implementation details to do that. This looks a lot like hacking, not a user friendly interface. Maybe We should evict only after cache size is large than hfile.block.cache.size, and allow ~15% burstiness before blocking.&lt;/p&gt;</comment>
                            <comment id="13407348" author="jdcryans" created="Thu, 5 Jul 2012 18:15:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;According to your suggestion, shall we need to make that gap (between the minimum and acceptable factor) configurable at least?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We can, I just don&apos;t know how useful that&apos;s gonna be. It can hardly be worse than it is right now tho &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe We should evict only after cache size is large than hfile.block.cache.size, and allow ~15% burstiness before blocking.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It seems to me that we&apos;d just have the reverse problem.&lt;/p&gt;

&lt;p&gt;The real problem here is that LruBlockCache won&apos;t let us use exactly the amount of memory we want, it&apos;s like driving a car and the best you can do is steering all the way left or all the way right because keeping it centered would require too much effort.&lt;/p&gt;

&lt;p&gt;Right now I&apos;d be in favor of setting the acceptable factor to 99% and the minimum at 95% since it&apos;s really hard to overflow and there&apos;s no blocking. We can make the minimum configurable so that if someone sees that it&apos;s evicting too often they can tune it down.&lt;/p&gt;</comment>
                            <comment id="13407600" author="jason.dai" created="Thu, 5 Jul 2012 23:30:29 +0000"  >&lt;p&gt;I think there are two different questions here:&lt;/p&gt;

&lt;p&gt;1) Performance - whether the current values of acceptable &amp;amp; minimum factors make sense. It seems nobody has definitive answers, and maybe we should make these more aggressive and at least make the minimum configurable for people to experiment, just as J-D proposed.&lt;/p&gt;

&lt;p&gt;2) User experience - whether the hfile.block.cache.size parameter provides the proper behaviors as the user would expect. It seems that most of the time the user can only use the memory size of hfile.block.cache.size * acceptable factor, which could be very confusing as the user is not aware of acceptable factor at all. What I proposed above is to evict when the cache size &amp;gt; hfile.block.cache.size, and block if cache size &amp;gt; hfile.block.cache.size * (1 + acceptable factor).&lt;/p&gt;</comment>
                            <comment id="13407603" author="zhihyu@ebaysf.com" created="Thu, 5 Jul 2012 23:37:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;and block if cache size &amp;gt; hfile.block.cache.size * (1 + acceptable factor)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The default value for acceptable factor would have to change, right ?&lt;/p&gt;</comment>
                            <comment id="13407606" author="jason.dai" created="Thu, 5 Jul 2012 23:45:42 +0000"  >{The default value for acceptable factor would have to change, right ?}
&lt;p&gt;Yes, but that&apos;s a different question - we need to change the default value mostly for performance reasons (maybe 1% as J-D mentioned). But we need to change the eviction behavior for better user interface (the user only knows hfile.block.cache.size).&lt;/p&gt;</comment>
                            <comment id="13407624" author="jdcryans" created="Fri, 6 Jul 2012 00:27:27 +0000"  >&lt;p&gt;I&apos;m -1 on evicting past the cache size rather than before we reach it, I think it&apos;s just reversing the problem since now we&apos;d always use more memory than we&apos;re supposed to. I always prefer to err on the side of caution.&lt;/p&gt;

&lt;p&gt;Now if someone wants to set their acceptable and minimum factors &amp;gt; 1.0 then it&apos;s their choice but in the end that doesn&apos;t change anything since you can just set a bigger hfile.block.cache.size and have the same effect. Having all those levers is not a good user experience IMO.&lt;/p&gt;</comment>
                            <comment id="13407732" author="jason.dai" created="Fri, 6 Jul 2012 06:15:52 +0000"  >&lt;p&gt;It is a fairly simple scenario:&lt;br/&gt;
1) The customer set hfile.block.cache.size to 2GB, and finds out his ~1.8GB of data can never completely fit in cache&lt;br/&gt;
2) He asked how to fix this, and basically we can say that you need to set hfile.block.cache.size to ~2.35GB&lt;br/&gt;
3) And then he asked why and what&apos;s the guideline for setting hfile.block.cache.size, and we need to explain about the acceptable factor, which is considered to be implementation details and not exposed.&lt;br/&gt;
This does not seem to be a very good user experience IMO.&lt;/p&gt;</comment>
                            <comment id="13408185" author="jdcryans" created="Fri, 6 Jul 2012 17:57:33 +0000"  >&lt;p&gt;So I take it that you support my idea of setting the acceptable factor to 99% and the minimum to 95%?&lt;/p&gt;</comment>
                            <comment id="13408844" author="grace.huang" created="Sun, 8 Jul 2012 04:10:47 +0000"  >&lt;p&gt;I agree to modify those 2 configuration items here. Meanwhile, another point which Jason states here is how to make the customer understand the relationship between hfile.block.cache.size and actual cached size. The configurable items somehow can make them aware of the thresholds existing, and what the expected result is. Otherwise, they need to read the source code or ask in MailList.&lt;/p&gt;</comment>
                            <comment id="13408864" author="jason.dai" created="Sun, 8 Jul 2012 07:22:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;So I take it that you support my idea of setting the acceptable factor to 99% and the minimum to 95%?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, I think these are good changes:&lt;br/&gt;
1) Setting the acceptable factor to 99% allows the users to use almost all of the cache size they have allocated&lt;br/&gt;
2) Setting the minimum factor to 95% makes eviction less aggressive and can potentially help the performance&lt;br/&gt;
3) Making the minimum configurable allow the users to fine tune the behavior (e.g., when they see it&apos;s evicting too often)&lt;/p&gt;
</comment>
                            <comment id="13409160" author="grace.huang" created="Mon, 9 Jul 2012 04:05:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;So I take it that you support my idea of setting the acceptable factor to 99% and the minimum to 95%? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Modified that default value accordingly. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Making the minimum configurable allow the users to fine tune the behavior &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Only make that min_factor configurable &lt;br/&gt;
Is that ok?&lt;/p&gt;</comment>
                            <comment id="13410321" author="hadoopqa" created="Tue, 10 Jul 2012 13:11:13 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12535822/hbase-6312_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12535822/hbase-6312_v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 8 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestLruBlockCache&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2358//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2358//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2358//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2358//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2358//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2358//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2358//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2358//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13410345" author="grace.huang" created="Tue, 10 Jul 2012 13:59:02 +0000"  >&lt;p&gt;Uploaded the patch against trunk. However, there is one unit test failure after changing those 2 default thresholds. I will add the unit test fix in the patch file as well.&lt;/p&gt;</comment>
                            <comment id="13410428" author="hadoopqa" created="Tue, 10 Jul 2012 15:24:04 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12535828/hbase-6312_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12535828/hbase-6312_v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 8 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestMultiSlaveReplication&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2360//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2360//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2360//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2360//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2360//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2360//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2360//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2360//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13410990" author="zhihyu@ebaysf.com" created="Tue, 10 Jul 2012 22:14:27 +0000"  >&lt;p&gt;I ran the two tests above and they passed on MacBook.&lt;/p&gt;

&lt;p&gt;@J-D:&lt;br/&gt;
What do you think of the latest patch ?&lt;/p&gt;

&lt;p&gt;@Jie:&lt;br/&gt;
In the future, version each patch differently so that it is easy to correlate test results with patches.&lt;/p&gt;</comment>
                            <comment id="13415748" author="jdcryans" created="Mon, 16 Jul 2012 22:48:21 +0000"  >&lt;p&gt;&quot;hbase.lru.blockcache.default.min.factor&quot; is not the default, the default is in the code, so it should be called &quot;hbase.lru.blockcache.min.factor&quot;. Same for LRU_DEFAULT_MIN_FACTOR which should be LRU_MIN_FACTOR.&lt;/p&gt;</comment>
                            <comment id="13415849" author="grace.huang" created="Tue, 17 Jul 2012 02:42:30 +0000"  >&lt;p&gt;Yes. You are right. Thanks JD. Update the patch file.&lt;/p&gt;</comment>
                            <comment id="13415910" author="hadoopqa" created="Tue, 17 Jul 2012 05:27:23 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12536764/hbase-6312_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12536764/hbase-6312_v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 8 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2393//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2393//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2393//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2393//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2393//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2393//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2393//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2393//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13418353" author="zhihyu@ebaysf.com" created="Thu, 19 Jul 2012 15:15:52 +0000"  >&lt;p&gt;@J-D:&lt;br/&gt;
Do you have further comments ?&lt;/p&gt;</comment>
                            <comment id="13418546" author="jdcryans" created="Thu, 19 Jul 2012 18:32:50 +0000"  >&lt;p&gt;Yeah +1, this will be one thing to keep in mind when testing the 0.96.0 RCs.&lt;/p&gt;</comment>
                            <comment id="13418561" author="zhihyu@ebaysf.com" created="Thu, 19 Jul 2012 18:39:20 +0000"  >&lt;p&gt;Integrated to trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the idea and review, J-D.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, Jie.&lt;/p&gt;</comment>
                            <comment id="13418709" author="jdcryans" created="Thu, 19 Jul 2012 21:51:27 +0000"  >&lt;p&gt;Closed the jira and added a release note.&lt;/p&gt;</comment>
                            <comment id="13418798" author="hudson" created="Thu, 19 Jul 2012 23:36:51 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #100 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/100/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/100/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6312&quot; title=&quot;Make BlockCache eviction thresholds configurable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6312&quot;&gt;&lt;del&gt;HBASE-6312&lt;/del&gt;&lt;/a&gt; Make BlockCache eviction thresholds configurable (Jie Huang) (Revision 1363468)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/DoubleBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13484710" author="hudson" created="Fri, 26 Oct 2012 04:54:50 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #555 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/555/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/555/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7053&quot; title=&quot;port  blockcache configurability (part of HBASE-6312, and HBASE-7033) to 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7053&quot;&gt;&lt;del&gt;HBASE-7053&lt;/del&gt;&lt;/a&gt; port blockcache configurability (part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6312&quot; title=&quot;Make BlockCache eviction thresholds configurable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6312&quot;&gt;&lt;del&gt;HBASE-6312&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7033&quot; title=&quot;Add hbase.lru.blockcache.acceptable.factor to configuration, akin to the min.factor added by HBASE-6312&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7033&quot;&gt;&lt;del&gt;HBASE-7033&lt;/del&gt;&lt;/a&gt;) to 0.94 (Sergey Shelukhin) (Revision 1402385)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/DoubleBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13490358" author="hudson" created="Mon, 5 Nov 2012 01:35:34 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #9 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/9/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/9/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7053&quot; title=&quot;port  blockcache configurability (part of HBASE-6312, and HBASE-7033) to 0.94&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7053&quot;&gt;&lt;del&gt;HBASE-7053&lt;/del&gt;&lt;/a&gt; port blockcache configurability (part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6312&quot; title=&quot;Make BlockCache eviction thresholds configurable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6312&quot;&gt;&lt;del&gt;HBASE-6312&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7033&quot; title=&quot;Add hbase.lru.blockcache.acceptable.factor to configuration, akin to the min.factor added by HBASE-6312&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7033&quot;&gt;&lt;del&gt;HBASE-7033&lt;/del&gt;&lt;/a&gt;) to 0.94 (Sergey Shelukhin) (Revision 1402385)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/DoubleBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13775057" author="stack" created="Mon, 23 Sep 2013 18:30:39 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12613083">HBASE-7033</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12613564">HBASE-7053</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12534663" name="hbase-6312.patch" size="3827" author="grace.huang" created="Tue, 3 Jul 2012 08:50:01 +0000"/>
                            <attachment id="12535615" name="hbase-6312_v2.patch" size="3365" author="grace.huang" created="Mon, 9 Jul 2012 04:05:21 +0000"/>
                            <attachment id="12536764" name="hbase-6312_v3.patch" size="4306" author="grace.huang" created="Tue, 17 Jul 2012 02:42:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Jul 2012 06:24:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>249689</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0agfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>58937</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>From now on, the block cache will use all the memory it&amp;#39;s given as its upper bound was raised from 85% to 99%. The lower bound for evictions, called &amp;quot;minimum factor&amp;quot;, was raised from 75% to 95% and is now configurable via &amp;quot;hbase.lru.blockcache.min.factor&amp;quot;. This means that 4% of the block cache is evicted at a time instead of 10%, so evictions may run more often but each will be less disruptive.&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>