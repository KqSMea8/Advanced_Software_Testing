<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:01:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2445/HBASE-2445.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2445] Clean up client retry policies</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2445</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Right now almost all retry behavior is governed by a single parameter that determines the number of retries. In a few places, there are also conf for the number of millis to sleep between retries. This isn&apos;t quite flexible enough. If we can refactor some of the retry logic into a RetryPolicy class, we could introduce exponential backoff where appropriate, clean up some of the config, etc&lt;/p&gt;</description>
                <environment></environment>
        <key id="12462015">HBASE-2445</key>
            <summary>Clean up client retry policies</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                            <label>moved_from_0_20_5</label>
                    </labels>
                <created>Wed, 14 Apr 2010 06:37:33 +0000</created>
                <updated>Mon, 1 Oct 2012 19:43:03 +0000</updated>
                                                                            <component>Client</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="12856772" author="tlipcon" created="Wed, 14 Apr 2010 06:49:50 +0000"  >&lt;p&gt;One particular example:&lt;/p&gt;

&lt;p&gt;when processing a batch put, HConnectionManager uses the same retry count for the outer loop (number of batches to attempt) and the inner loop (number of times to retry an individual region server). For each region server, it treats socket layer exceptions and application layer exceptions the same with regard to retries.&lt;/p&gt;

&lt;p&gt;This is not ideal: if I kill a region server while running an import, I find one of these two things happens:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if I leave the number of retries configured at the default, the &quot;outer loop&quot; runs out of retries before all of the regions have been reassigned, thus the multiput fails&lt;/li&gt;
	&lt;li&gt;if I configure the number of retries to 80 (meaning 80 seconds at the default sleep time of 1sec for most operations) then I actually end up retrying the same RS for 80 seconds without even refreshing the locations (the inner loop doesn&apos;t refresh).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I would like the fine grained configuration to be able to say:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;never retry a &quot;connection refused&quot; or &quot;no route to host&quot; error in the inner loop - I&apos;d rather go back to meta to see if it&apos;s been reassigned&lt;/li&gt;
	&lt;li&gt;in this particular case, same if I get NotServingRegionException - no sense retrying!&lt;/li&gt;
	&lt;li&gt;for other errors, it may be worth one or two retries &lt;span class=&quot;error&quot;&gt;&amp;#91;not sure what errors those might be!&amp;#93;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For the outer loop I&apos;d really like enough retries to wait around for at least 90 seconds, to give the master time to notice the dead RS and reassign the regions.&lt;/p&gt;

&lt;p&gt;This is just one example, but there are other places where being able to specify a more complete retry policy would help.&lt;/p&gt;</comment>
                            <comment id="12859082" author="stack" created="Tue, 20 Apr 2010 21:54:41 +0000"  >&lt;p&gt;Marking critical and for 0.20.5 and 0.21.  We can punt later but this seems kinda important to figure.&lt;/p&gt;</comment>
                            <comment id="12861707" author="tlipcon" created="Wed, 28 Apr 2010 07:39:27 +0000"  >&lt;p&gt;Unassigning from myself since I&apos;m not working on this currently. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2421&quot; title=&quot;Put hangs for 10 retries on failed region servers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2421&quot;&gt;&lt;del&gt;HBASE-2421&lt;/del&gt;&lt;/a&gt; solved the major issue I was running into, but I think this JIRA is still important as a general topic - we should expose timeouts, not retry counts, as the user visible idea.&lt;/p&gt;</comment>
                            <comment id="12863789" author="mkurucz" created="Tue, 4 May 2010 12:41:15 +0000"  >&lt;p&gt;I am having problems with setting hbase.client.retries.number = 1&lt;br/&gt;
In that case cache will never be updated.&lt;/p&gt;

&lt;p&gt;Jean-Daniel Cryans asked me:&lt;br/&gt;
&quot;Yeah I understand that retries are unusable at that level, but you still want retries in order to be able to recalibrate the .META. cache right?&quot;&lt;br/&gt;
My answer is that I want HCM to update cache when it is necessary, but I don&apos;t think that should only happen in retries.&lt;br/&gt;
For me it seems that the two things can be separated:&lt;br/&gt;
Whenever a NotServingRegionException is caught the cache entry should be cleared.&lt;br/&gt;
When an exception is caugh that is not related to bad cache entries the cache should not be cleared.&lt;/p&gt;

&lt;p&gt;The current exception handling is done this way if I&apos;m correct:&lt;/p&gt;

&lt;p&gt;Server sends NSRE&lt;br/&gt;
client/ScannerCallable.java:84&lt;br/&gt;
84	          if (ioe instanceof NotServingRegionException) &lt;/p&gt;
{
85	          // Throw a DNRE so that we break out of cycle of calling NSRE
86	          // when what we need is to open scanner against new location.
87	          // Attach NSRE to signal client that it needs to resetup scanner.
88	          throw new DoNotRetryIOException(&quot;Reset scanner&quot;, ioe);

client/HConnectionManager.java:1063
1063	        }
&lt;p&gt; catch (Throwable t) {&lt;br/&gt;
1064	          t = translateException(t);&lt;br/&gt;
client/HConnectionManager.java:1431&lt;br/&gt;
1431	      if (t instanceof DoNotRetryIOException) &lt;/p&gt;
{
1432	        throw (DoNotRetryIOException)t;

client/HTable.java:824
824	          }
&lt;p&gt; catch (DoNotRetryIOException e) {&lt;br/&gt;
...&lt;br/&gt;
835	            Throwable cause = e.getCause();&lt;br/&gt;
836	            if (cause == null || !(cause instanceof NotServingRegionException)) &lt;/p&gt;
{
837	              throw e;
838	            }
&lt;p&gt;839	            // Else, its signal from depths of ScannerCallable that we got an&lt;br/&gt;
840	            // NSRE on a next and that we need to reset the scanner.&lt;/p&gt;

&lt;p&gt;And after resetting the scanner we get to:&lt;br/&gt;
client/HTable.java:776&lt;br/&gt;
776	        callable = getScannerCallable(localStartKey, nbRows);&lt;br/&gt;
777	        // Open a scanner on the region server starting at the&lt;br/&gt;
778	        // beginning of the region&lt;br/&gt;
779	        getConnection().getRegionServerWithRetries(callable);&lt;/p&gt;

&lt;p&gt;Which will still use the bad cache entry first? And runs on the same problem?&lt;/p&gt;


&lt;p&gt;Perhaps I am mistaken and somewhere we do delete bad cache entry, but in case &lt;br/&gt;
Server sends java.net.ConnectException&lt;br/&gt;
client/HConnectionManager.java:1063&lt;br/&gt;
1063	        } catch (Throwable t) {&lt;br/&gt;
1064	          t = translateException(t);&lt;br/&gt;
1065	          exceptions.add(t);&lt;br/&gt;
1066	          if (tries == numRetries - 1) {&lt;br/&gt;
1067	            throw new RetriesExhaustedException(callable.getServerName(),&lt;br/&gt;
1068	                callable.getRegionName(), callable.getRow(), tries, exceptions);&lt;/p&gt;

&lt;p&gt;We will not delete bad entry.&lt;br/&gt;
I understand that ConnectException can be thrown for various reasons, still deleting the cache entry might be a good idea even when hbase.client.retries.number = 1&lt;br/&gt;
Also retrying a &quot;connection refused&quot; does not make sense to me either.&lt;/p&gt;</comment>
                            <comment id="12866786" author="stack" created="Wed, 12 May 2010 23:47:55 +0000"  >&lt;p&gt;Bulk move of 0.20.5 issues into 0.21.0 after vote that we merge branch into TRUNK up on list.&lt;/p&gt;</comment>
                            <comment id="12872018" author="davelatham" created="Wed, 26 May 2010 23:47:12 +0000"  >&lt;p&gt;I have a use case where I&apos;d like to perform a Get with a timeout of 500 ms or so. If HBase is unable to retrieve the result within that time, an exception or null result is fine, though most of the time, I expect it to work fine. The same process has other uses where the normal retry policy makes sense, but in this case, it has to be fast, or nothing.  Right now I&apos;m forced to create a separate thread pool to handle these requests, and the threads can all get tied up trying to hit one bad regionserver, for example.&lt;/p&gt;

&lt;p&gt;Not sure if this case will be solved by this JIRA, but it seems related.&lt;/p&gt;</comment>
                            <comment id="12872093" author="tlipcon" created="Thu, 27 May 2010 05:17:17 +0000"  >&lt;p&gt;Yep, that&apos;s the aim of this JIRA. Real world latency SLAs are expressed in milliseconds, not in retry counts, and we should let people push those SLAs in their operations.&lt;/p&gt;</comment>
                            <comment id="12902185" author="jdcryans" created="Wed, 25 Aug 2010 00:09:44 +0000"  >&lt;p&gt;This issue is very important, but I don&apos;t see this being worked on before October. Can we punt?&lt;/p&gt;</comment>
                            <comment id="12902244" author="streamy" created="Wed, 25 Aug 2010 01:06:25 +0000"  >&lt;p&gt;The new master has a completely different way of doing retry stuff (just a timeout, not retries + pause).  Not sure if we are going to completely rework the client in time for 0.90 but the new stuff like CatalogTracker make this much much easier.&lt;/p&gt;</comment>
                            <comment id="12918214" author="stack" created="Tue, 5 Oct 2010 21:30:37 +0000"  >&lt;p&gt;Moving out of 0.90 &amp;#8211; new &apos;feature&apos;.&lt;/p&gt;</comment>
                            <comment id="12927889" author="davelatham" created="Wed, 3 Nov 2010 16:02:12 +0000"  >&lt;p&gt;Here&apos;s hoping it can get picked up for 0.92&lt;/p&gt;</comment>
                            <comment id="13218954" author="lhofhansl" created="Wed, 29 Feb 2012 07:11:36 +0000"  >&lt;p&gt;I don&apos;t see anybody working on this for 0.94. Pull back if you feel otherwise.&lt;/p&gt;</comment>
                            <comment id="13467133" author="stack" created="Mon, 1 Oct 2012 19:43:03 +0000"  >&lt;p&gt;We need this bad but not being worked on currently that I know of... moving this out of 0.96.0&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12472662">HBASE-2937</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12551304">HBASE-5813</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Apr 2010 21:54:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32590</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 11 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02ehj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11948</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>