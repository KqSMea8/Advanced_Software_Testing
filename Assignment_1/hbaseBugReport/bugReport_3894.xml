<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:14:03 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3894/HBASE-3894.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3894] Thread contention over row locks set monitor</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3894</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;HRegion maintains a set of row locks.  Whenever any thread attempts to lock or release a row it needs to acquire the monitor on that set.  We&apos;ve been encountering cases with 30 handler threads all contending for that monitor, blocked progress on the region server.  Clients timeout, and retry making it worse, and the region server stops responding to new clients almost entirely.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12507520">HBASE-3894</key>
            <summary>Thread contention over row locks set monitor</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="davelatham">Dave Latham</assignee>
                                    <reporter username="davelatham">Dave Latham</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 May 2011 18:55:00 +0000</created>
                <updated>Fri, 20 Nov 2015 12:42:07 +0000</updated>
                            <resolved>Mon, 13 Jun 2011 23:51:10 +0000</resolved>
                                    <version>0.90.2</version>
                                    <fixVersion>0.90.4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13034971" author="davelatham" created="Tue, 17 May 2011 18:55:45 +0000"  >&lt;p&gt;I&apos;m attaching a sample thread dump.&lt;/p&gt;

&lt;p&gt;I examined a heap dump as well, and saw about 160K locks in the TreeSet of row locks.&lt;/p&gt;</comment>
                            <comment id="13034972" author="davelatham" created="Tue, 17 May 2011 18:56:11 +0000"  >&lt;p&gt;Here&apos;s a patch I&apos;ve been playing with.&lt;/p&gt;

&lt;p&gt;In the existing code each time any lock is unlocked, all 20 threads trying to acquire a lock wake up, contend for the monitor, and have to check for their lock in that TreeSet (15 byte[] comparisons), whether or not their particular row was unlocked.&lt;/p&gt;

&lt;p&gt;This patch replaces the set with a concurrent hash map. In order to use it, we must wrap the byte array in another object that gives it a hash identity based on its contents rather than its instance. However, every row lock is already creating a couple objects (the Integer lockId, as well as the tree node), so the object creation overhead is worth it.&lt;/p&gt;

&lt;p&gt;The patch also only awakens threads when their particular row is unlocked.&lt;/p&gt;

&lt;p&gt;Some further considerations:&lt;/p&gt;

&lt;p&gt;    On release, should we throw an exception if the client attempts to release a lock id that doesn&apos;t exist, or just log it?&lt;br/&gt;
    Do we really need to generate lock ids? Can we trust HBase client implementations to not allow arbitrary lock releases? Or if not, for locks that are only acquired / released internally to the regionserver, we should be able to trust that code to use the row key rather than need to generate another lock id&lt;br/&gt;
    When an HRegion is doing a miniBatch of thousands of rows, is it really best to attempt to acquire thousands of locks and hold them all while doing the write? This one is probably a separate JIRA.&lt;/p&gt;

&lt;p&gt;This patch has not yet been tested, but I wanted to put it up for discussion since other people are looking at similar issues.&lt;/p&gt;</comment>
                            <comment id="13035574" author="stack" created="Wed, 18 May 2011 18:44:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;On release, should we throw an exception if the client attempts to release a lock id that doesn&apos;t exist, or just log it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If client is getting what it asked for, then just log it.  How would it happen?&lt;/p&gt;

&lt;p&gt;I like the idea of removing lockid completely (If client does explicity unlock, then they deserve the headache that will ensue).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When an HRegion is doing a miniBatch of thousands of rows, is it really best to attempt to acquire thousands of locks and hold them all while doing the write?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.&lt;/p&gt;</comment>
                            <comment id="13035580" author="stack" created="Wed, 18 May 2011 18:52:20 +0000"  >&lt;p&gt;On the patch, whats with all the ^Ms?&lt;/p&gt;

&lt;p&gt;Do we need HashedBytes?  Was it you who said that wrapping the byte array in a ByteBuffer would do what we want? Otherwise, new class looks good (I think presence of this class will undo a bunch of places where we are using TreeMap just because key is a byte array).&lt;/p&gt;

&lt;p&gt;Whats up w/ this?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ConcurrentHashMap&amp;lt;HashedBytes, CountDownLatch&amp;gt; lockedRows = 
+    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConcurrentHashMap&amp;lt;HashedBytes, CountDownLatch&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Interesting.  You make the lockid long now instead of int.  Good.&lt;/p&gt;

&lt;p&gt;Patch looks great Dave.  Does it work?&lt;/p&gt;
</comment>
                            <comment id="13035584" author="yuzhihong@gmail.com" created="Wed, 18 May 2011 18:54:55 +0000"  >&lt;p&gt;This is the version adapted to trunk.&lt;br/&gt;
TestHeapSize fails. The other tests passed.&lt;/p&gt;</comment>
                            <comment id="13035596" author="davelatham" created="Wed, 18 May 2011 19:18:14 +0000"  >&lt;p&gt;Here&apos;s an updated patch that passes the heap size test.  It looks like there&apos;s a bunch of heap size calculation that is out of date.  This patch attempts to fix some of it, but there&apos;s probably another jira to bring them all up to date.&lt;/p&gt;</comment>
                            <comment id="13035608" author="davelatham" created="Wed, 18 May 2011 19:30:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;If client is getting what it asked for, then just log it. How would it happen?  I like the idea of removing lockid completely (If client does explicity unlock, then they deserve the headache that will ensue).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good question, I&apos;m not sure.  Perhaps if the client times out and tries twice?  In that case, it may be good to preserve the lock id.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do we need HashedBytes? Was it you who said that wrapping the byte array in a ByteBuffer would do what we want?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It wasn&apos;t me.  ByteBuffer has 6 or 7 extra fields that aren&apos;t really necessary here, and I think a simple dedicated class is appropriate.  I&apos;m also not sure whether to cache the hashCode.  It does save recomputation of it at release time.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;(I think presence of this class will undo a bunch of places where we are using TreeMap just because key is a byte array).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It would be interesting to see if using it elsewhere would have any improvement.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Whats up w/ this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ConcurrentHashMap&amp;lt;HashedBytes, CountDownLatch&amp;gt; lockedRows = 
+    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConcurrentHashMap&amp;lt;HashedBytes, CountDownLatch&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This allows threads that are trying to lock a given row to wait on a latch for just that row, so they don&apos;t need to awaken every time any lock is released - only the one they&apos;re waiting for.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Interesting. You make the lockid long now instead of int. Good.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually, I left it as an Integer so that the change didn&apos;t touch the protocol.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Does it work?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Running it in 2 test clusters today, and if it looks good will put it out into production tomorrow or Friday.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On the patch, whats with all the ^Ms?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is the version adapted to trunk.  TestHeapSize fails. The other tests passed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry for the rough patch, as I noted before it wasn&apos;t ready for inclusion, I just wanted to get it out there for other eyes to see since jd was looking at a related issue.&lt;/p&gt;

&lt;p&gt;I talked with JD yesterday, and agreed that perhaps it&apos;s best to push it trunk rather than 0.90 branch if other people aren&apos;t having the same problem, though we&apos;ll be using it here.  What do you think, Stack?&lt;/p&gt;</comment>
                            <comment id="13035613" author="davelatham" created="Wed, 18 May 2011 19:38:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do we need HashedBytes? Was it you who said that wrapping the byte array in a ByteBuffer would do what we want?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There&apos;s also a guava issue that may allow us to get rid of it at some point.&lt;br/&gt;
&lt;a href=&quot;http://code.google.com/p/guava-libraries/issues/detail?id=576&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/guava-libraries/issues/detail?id=576&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13035622" author="stack" created="Wed, 18 May 2011 19:54:35 +0000"  >&lt;p&gt;I&apos;m good w/ committing this if it works for you in your prod.  Let us know.  Putting it on TRUNK only sounds good.  If someone has this issue, its pretty plain to see in a thread dump; we can point them at this issue if they need it in 0.90.  Good on you Dave.&lt;/p&gt;</comment>
                            <comment id="13035841" author="yuzhihong@gmail.com" created="Wed, 18 May 2011 23:10:21 +0000"  >&lt;p&gt;@Dave:&lt;br/&gt;
The introduction of CountDownLatch may increase heap pressure.&lt;br/&gt;
Please share what you find in your cluster(s) in this regards.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13037086" author="jdcryans" created="Fri, 20 May 2011 21:10:19 +0000"  >&lt;p&gt;I gave the latest patch a spin on my laptop using two PE randomWrite 1 (to generate lock contention) and my CPU profiling doesn&apos;t see any slowness related to the locking and the memory profiling shows that ~10k CountDownLatch only accounts for ~300KB. Also since they are short lived they get cleared up almost right away.&lt;/p&gt;

&lt;p&gt;I would be +1 on committing if Dave tried it out on his cluster.&lt;/p&gt;</comment>
                            <comment id="13038811" author="davelatham" created="Tue, 24 May 2011 21:32:22 +0000"  >&lt;p&gt;We rolled this patch on top of 0.90.3 out to production last week.  The Map Reduce jobs that were causing the contention and region server unavailability are now completing smoothly and faster.  (Thread dumps of the region server hosting the contended region server show a number of threads blocked at ReadWriteConsistencyControl.completeMemstoreInsert(line 131).)&lt;/p&gt;

&lt;p&gt;I&apos;ve updated the patch to match the current trunk.  It also removes the lastCompactInfo field which is no longer used since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3797&quot; title=&quot;StoreFile Level Compaction Locking&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3797&quot;&gt;&lt;del&gt;HBASE-3797&lt;/del&gt;&lt;/a&gt; hit trunk.&lt;/p&gt;</comment>
                            <comment id="13038896" author="apurtell" created="Wed, 25 May 2011 00:37:54 +0000"  >&lt;p&gt;I have this applied to our 0.90-ish internal branch slated for testing next week as well. It&apos;s close enough to 0.90 so the results will be meaningful. Early results in all localhost configuration look reasonable.&lt;/p&gt;</comment>
                            <comment id="13038952" author="stack" created="Wed, 25 May 2011 04:15:46 +0000"  >&lt;p&gt;@Andrew I&apos;ll wait on your results before committing to branch.  Meantime, I&apos;ll add it to TRUNK.&lt;/p&gt;</comment>
                            <comment id="13038954" author="stack" created="Wed, 25 May 2011 04:18:44 +0000"  >&lt;p&gt;Applied to TRUNK.  Thanks for the nice patch Dave.  I&apos;m leaving it open against 0.90.4.  Will apply if good by Andrew.&lt;/p&gt;</comment>
                            <comment id="13039406" author="hudson" created="Wed, 25 May 2011 23:00:42 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1939 (See &lt;a href=&quot;https://builds.apache.org/hudson/job/HBase-TRUNK/1939/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/HBase-TRUNK/1939/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="13047765" author="stack" created="Fri, 10 Jun 2011 23:29:58 +0000"  >&lt;p&gt;Applied to branch too..&lt;/p&gt;</comment>
                            <comment id="13048896" author="stack" created="Mon, 13 Jun 2011 23:51:10 +0000"  >&lt;p&gt;Applied branch and trunk.  Closing.&lt;/p&gt;</comment>
                            <comment id="15017166" author="lars_francke" created="Fri, 20 Nov 2015 12:42:07 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12458313">HBASE-2295</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12507517">HBASE-3893</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12507517">HBASE-3893</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12479637" name="concurrentRowLocks-2.patch" size="12684" author="davelatham" created="Wed, 18 May 2011 19:19:15 +0000"/>
                            <attachment id="12480326" name="concurrentRowLocks-trunk-2.patch" size="12543" author="davelatham" created="Tue, 24 May 2011 21:37:17 +0000"/>
                            <attachment id="12479634" name="concurrentRowLocks-trunk.patch" size="7159" author="yuzhihong@gmail.com" created="Wed, 18 May 2011 18:54:55 +0000"/>
                            <attachment id="12479495" name="regionserver_rowLock_set_contention.threads.txt" size="74943" author="davelatham" created="Tue, 17 May 2011 18:58:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 18 May 2011 18:44:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27078</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hodz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101213</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>