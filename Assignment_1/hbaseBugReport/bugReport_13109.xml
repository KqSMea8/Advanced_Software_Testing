<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:39:47 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13109/HBASE-13109.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13109] Make better SEEK vs SKIP decisions during scanning</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13109</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I&apos;m re-purposing this issue to add a heuristic as to when to SEEK and when to SKIP Cells. This has come up in various issues, and I think I have a way to finally fix this now. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9778&quot; title=&quot;Add hint to ExplicitColumnTracker to avoid seeking&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9778&quot;&gt;&lt;del&gt;HBASE-9778&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12311&quot; title=&quot;Version stats in HFiles?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12311&quot;&gt;&lt;del&gt;HBASE-12311&lt;/del&gt;&lt;/a&gt;, and friends are related.&lt;/p&gt;

&lt;p&gt;&amp;#8212; Old description &amp;#8212;&lt;/p&gt;

&lt;p&gt;This is a continuation of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9778&quot; title=&quot;Add hint to ExplicitColumnTracker to avoid seeking&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9778&quot;&gt;&lt;del&gt;HBASE-9778&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
We&apos;ve seen a scenario of a very slow scan over a region using a timerange that happens to fall after the ts of any Cell in the region.&lt;br/&gt;
Turns out we spend a lot of time seeking.&lt;/p&gt;

&lt;p&gt;Tested with a 5 column table, and the scan is 5x faster when the timerange falls before all Cells&apos; ts.&lt;br/&gt;
We can use the lookahead hint introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9778&quot; title=&quot;Add hint to ExplicitColumnTracker to avoid seeking&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9778&quot;&gt;&lt;del&gt;HBASE-9778&lt;/del&gt;&lt;/a&gt; to do opportunistic SKIPing before we actually seek.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12777756">HBASE-13109</key>
            <summary>Make better SEEK vs SKIP decisions during scanning</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Thu, 26 Feb 2015 02:34:22 +0000</created>
                <updated>Tue, 28 Apr 2015 19:18:29 +0000</updated>
                            <resolved>Tue, 17 Mar 2015 16:07:30 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.0.1</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                    <fixVersion>0.98.12</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>21</watches>
                                                                                                            <comments>
                            <comment id="14337744" author="lhofhansl" created="Thu, 26 Feb 2015 02:37:39 +0000"  >&lt;p&gt;0.98 patch. Untested, I only checked that it compiles. Just parking.&lt;/p&gt;</comment>
                            <comment id="14339093" author="lhofhansl" created="Thu, 26 Feb 2015 20:25:29 +0000"  >&lt;p&gt;Doesn&apos;t quite work since we check the timeranges before the individual columns (and so the column trackers have no way to manage their state - i.e. track when the current column is done)&lt;/p&gt;</comment>
                            <comment id="14341889" author="lhofhansl" created="Sun, 1 Mar 2015 02:11:33 +0000"  >&lt;p&gt;Here&apos;s the patch from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12311&quot; title=&quot;Version stats in HFiles?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12311&quot;&gt;&lt;del&gt;HBASE-12311&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14341894" author="lhofhansl" created="Sun, 1 Mar 2015 02:16:36 +0000"  >&lt;p&gt;The first patch does a bunch of things:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;get rid of Scan.LOOK_AHEAD, that is no longer needed&lt;/li&gt;
	&lt;li&gt;Optimize KeyValue.KeyOnlyKeyValue a bit (to reuse the fields from KeyValue and save a few bytes of heap) - that part I could remove, I&apos;m not using that anymore, but it seemed good anyway.&lt;/li&gt;
	&lt;li&gt;Uses the next indexed key that the HFileScanner already maintain to decide whether a seek would be likely to seek to a new block. If so the StoreScanner will continue to issue SEEKs, otherwise it will SKIP instead.&lt;/li&gt;
	&lt;li&gt;Adds a some helpers to KeyValueUtil to build a key array to avoid creating KeyValue objects unnecessarily&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14341959" author="lhofhansl" created="Sun, 1 Mar 2015 06:10:13 +0000"  >&lt;p&gt;Some more tests (similar to those in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9778&quot; title=&quot;Add hint to ExplicitColumnTracker to avoid seeking&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9778&quot;&gt;&lt;del&gt;HBASE-9778&lt;/del&gt;&lt;/a&gt;, but this a different machine so don&apos;t compare them in absolute values): 4m row, 5 cols, 1 version.&lt;/p&gt;

&lt;p&gt;Without patch:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Wildcard&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Col 2+4&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;7.27&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;With patch:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Wildcard&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Col 2+4&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;(selecting columns 2 and 4 is the worst case)&lt;/p&gt;

&lt;p&gt;So this patch improves the ExplicitColumnTracker by almost 1/3rd, and the beauty of this change is that it will still work with very many versions, because it uses whether we can seek into another block as a metric to decide whether to seek or not.&lt;/p&gt;</comment>
                            <comment id="14341960" author="lhofhansl" created="Sun, 1 Mar 2015 06:11:03 +0000"  >&lt;p&gt;Let&apos;s get a QA run in.&lt;/p&gt;</comment>
                            <comment id="14341961" author="lhofhansl" created="Sun, 1 Mar 2015 06:12:10 +0000"  >&lt;p&gt;I&apos;ll stop here until get some feedback. Any thoughts (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;?)&lt;/p&gt;</comment>
                            <comment id="14341966" author="lhofhansl" created="Sun, 1 Mar 2015 06:19:33 +0000"  >&lt;p&gt;(I might work on optimizing requiring to call matcher.getKeyForNextColumn, since that produces a new byte[] that&apos;s I&apos;d rather avoid)&lt;/p&gt;</comment>
                            <comment id="14342012" author="hadoopqa" created="Sun, 1 Mar 2015 07:14:49 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12701657/13109-trunk.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12701657/13109-trunk.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit dd78f459e8f10e4587742a049e38d8c6b50dd0cb.&lt;br/&gt;
  ATTACHMENT ID: 12701657&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;br/&gt;
    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1938 checkstyle errors (more than the master&apos;s current 1937 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestScanWithBloomError&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestScanner&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestStoreFileRefresherChore&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestColumnSeeking&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestMinVersions&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestResettingCounters&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13020//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14342017" author="lhofhansl" created="Sun, 1 Mar 2015 07:19:59 +0000"  >&lt;p&gt;Will look at those tomorrow.&lt;/p&gt;</comment>
                            <comment id="14342597" author="lhofhansl" created="Mon, 2 Mar 2015 01:35:03 +0000"  >&lt;p&gt;All the test failures have the same cause (using KeyOnlyKeyValue), I removed that part of the code (was just to avoid some code duplication).&lt;/p&gt;</comment>
                            <comment id="14342687" author="lhofhansl" created="Mon, 2 Mar 2015 04:02:23 +0000"  >&lt;p&gt;New patch.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;fixes the test failures&lt;/li&gt;
	&lt;li&gt;avoids the array creation for comparison (compares the indexed key with the next key in place)&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14342754" author="lhofhansl" created="Mon, 2 Mar 2015 05:10:29 +0000"  >&lt;p&gt;Numbers with new patch (avoiding the array creation helps):&lt;br/&gt;
With patch:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Wildcard&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Col 2+4&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4.4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;The ExplicitColumnTracker is now only 10% slower than the wildcard column tracker (was almost 2x before).&lt;/p&gt;</comment>
                            <comment id="14342803" author="hadoopqa" created="Mon, 2 Mar 2015 06:02:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12701779/13109-trunk-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12701779/13109-trunk-v2.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 70ecf18817ef219389a9e024ff21ffb99b6615d9.&lt;br/&gt;
  ATTACHMENT ID: 12701779&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;br/&gt;
    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1938 checkstyle errors (more than the master&apos;s current 1937 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestBlocksRead&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13030//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14342839" author="stack" created="Mon, 2 Mar 2015 06:42:28 +0000"  >&lt;p&gt;Should Scan.LOOK_AHEAD be deprecated/become a noop in case someone using it?&lt;/p&gt;

&lt;p&gt;We need to add more compare to KV? There ain&apos;t enough going on in there already (smile)?&lt;/p&gt;

&lt;p&gt;getNextIndexedKey makes sense but should we be returning byte [] ?  Why not Cell? byte [] presumes a certain format?&lt;/p&gt;

&lt;p&gt;getKeyForNextRow is commented out. Remove?&lt;/p&gt;

&lt;p&gt;I like the way you add in this optimize method and it works or it doesn&apos;t.&lt;/p&gt;

&lt;p&gt;When will optimize be optimal?  When will it not add value ( you say selecting 2 and 4 in above is worse case but generally?) Sorry for dumb questions. I don&apos;t know this stuff well.&lt;/p&gt;






</comment>
                            <comment id="14342854" author="lhofhansl" created="Mon, 2 Mar 2015 07:04:54 +0000"  >&lt;p&gt;Should deprecate Scan.LOOK_AHEAD in 1.0.1, so that we can remove it in 1.1. (per our policy that is possible)&lt;/p&gt;

&lt;p&gt;The indexed key comes out of the HFile as a key - and yes it presumes a KeyValue-key all over the place. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Translating this into a Cell would be measurably slower, could try to record it as Cell in the first place.&lt;/p&gt;

&lt;p&gt;The compare in KV is needed unfortunately to avoid materializing the seek key just for this check. I did not like to write that part.&lt;/p&gt;

&lt;p&gt;Yeah need to remove commented stuff.&lt;/p&gt;

&lt;p&gt;Optimize is optimizing heuristically.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;many versions of KVs are spread all over the HFiles. The heuristic of checking the top scanner might not be optimal in that case. But then too, we&apos;d need to seek into many files for the reset, so compared the cost should be low.&lt;/li&gt;
	&lt;li&gt;SQM says SEEK, and optimize does not change this. In that case we wasted a compare, that&apos;s OK, seek is &lt;b&gt;way&lt;/b&gt; more expensive.&lt;/li&gt;
	&lt;li&gt;It &lt;b&gt;is&lt;/b&gt; a heuristic. In some one off cases we might be doing some SKIP before we end up seeking.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;d not be afraid to deploy for us in production (I am most worried that I got the new compare method wrong... Any chance eyeballing that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;?)&lt;/p&gt;

&lt;p&gt;New patch coming to fix the test. The test is weird, setting the block size to 1 (yes, 1 byte), and then it counts the blocks loaded for Bloom filters - of course this throws this off. I will disable this optimization for Gets anyway, there&apos;s no point.&lt;/p&gt;</comment>
                            <comment id="14342864" author="lhofhansl" created="Mon, 2 Mar 2015 07:11:38 +0000"  >&lt;ul&gt;
	&lt;li&gt;passes test&lt;/li&gt;
	&lt;li&gt;disabled optimization for Gets&lt;/li&gt;
	&lt;li&gt;removed commented code&lt;/li&gt;
	&lt;li&gt;minor cleanups&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="14342951" author="hadoopqa" created="Mon, 2 Mar 2015 09:11:57 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12701810/13109-trunk-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12701810/13109-trunk-v3.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 4fb6f91cbad7d9b3c18f897ee3a4f70dc7c21595.&lt;br/&gt;
  ATTACHMENT ID: 12701810&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;br/&gt;
    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1938 checkstyle errors (more than the master&apos;s current 1937 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.access.TestScanEarlyTermination&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13032//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14343534" author="ram_krish" created="Mon, 2 Mar 2015 18:23:08 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=larsh&quot; class=&quot;user-hover&quot; rel=&quot;larsh&quot;&gt;larsh&lt;/a&gt;&lt;br/&gt;
Still going thro the logic of the patch. I verified the comparator API that was added. Seems fine to me.&lt;br/&gt;
But one suggestion I have is, make the nextIndexedKEy to a Cell and create a KeyOnlyKeyValue out of it. Then use the normal CellComparator.compare(cell, cell).  Will that not work out. What do you think? &lt;/p&gt;</comment>
                            <comment id="14343575" author="lhofhansl" created="Mon, 2 Mar 2015 18:59:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;make the nextIndexedKEy to a Cell and create a KeyOnlyKeyValue out of it. Then use the normal CellComparator.compare(cell, cell).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree that would be nicer. But that would be &lt;b&gt;very&lt;/b&gt; slow. This decision is made for every single KeyValue (if the SQM decides that it wants to seek). That&apos;s why I added a special compare that the key can be compared in place without creating a KV object or even a new byte[].&lt;/p&gt;

&lt;p&gt;Note that there would be two Cell to be created: (1) the Cell representing the indexed key, and (2) the Cell representing the seek key in the SQM. With this patch no new objects are created at all.&lt;/p&gt;

&lt;p&gt;Just avoiding the creating the key array saved 0.7s over 4m rows (5 cols). Making KeyValues or Cells would be more expensive.&lt;/p&gt;</comment>
                            <comment id="14343587" author="lhofhansl" created="Mon, 2 Mar 2015 19:06:29 +0000"  >&lt;p&gt;TestScanEarlyTermination passed locally.&lt;/p&gt;

&lt;p&gt;Also, thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; for looking at the comparator.&lt;br/&gt;
And re: the KeyOnlyKeyValue, I saw that was done down in the AbstrackHFileScanner.reseekTo, there it&apos;s not time critical, since it only happens when we issued a seek anyway.&lt;/p&gt;</comment>
                            <comment id="14344493" author="lhofhansl" created="Tue, 3 Mar 2015 04:28:27 +0000"  >&lt;ul&gt;
	&lt;li&gt;left optimization on for gets&lt;/li&gt;
	&lt;li&gt;fixes TestBlocksRead&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Note that this test reads some more of the 1-byte blocks, which does not translate to real-life bad behavior. In this extreme case the logic decides to ignore the SEEK and do a SKIP instead, because it thinks the seek would get us to another block.&lt;/p&gt;

&lt;p&gt;I&apos;ll do some tests with many store files to confirm.&lt;/p&gt;</comment>
                            <comment id="14344510" author="lhofhansl" created="Tue, 3 Mar 2015 04:54:43 +0000"  >&lt;p&gt;Some more test with many HFiles (4m rows, 5 cols, 1 version - as above). No compactions at all -&amp;gt; 25 HFiles of 10mb each.&lt;/p&gt;

&lt;p&gt;Without patch:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Wildcard&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Col 2+4&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4.59&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13.5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;With patch:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Wildcard&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Col 2+4&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4.38&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4.89&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Almost a 3x improvement. I have convinced myself that this is good.&lt;/p&gt;

&lt;p&gt;Somebody up for independent tests? I have a 0.98 patch as well (in fact that&apos;s the one I have used for testing)?&lt;/p&gt;</comment>
                            <comment id="14344524" author="lhofhansl" created="Tue, 3 Mar 2015 05:00:24 +0000"  >&lt;p&gt;One more test I&apos;ll do is with deletes.&lt;/p&gt;</comment>
                            <comment id="14344598" author="lhofhansl" created="Tue, 3 Mar 2015 06:08:19 +0000"  >&lt;p&gt;Ok... With deletes. Same as above but with an additional 400k deletes (deleted all columns every 10th row).&lt;/p&gt;

&lt;p&gt;Without patch:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Wildcard&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Col 2+4&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4.38&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;12.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;With patch:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Wildcard&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Col 2+4&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4.39&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4.74&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</comment>
                            <comment id="14344603" author="ram_krish" created="Tue, 3 Mar 2015 06:19:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=larsh&quot; class=&quot;user-hover&quot; rel=&quot;larsh&quot;&gt;larsh&lt;/a&gt;&lt;br/&gt;
I agree on the fact that creating KeyOnlyKeyValue objects is going to have some cost. Anyway that is not going to copy the contents of the KV. Only going to wrap it.  As in your first patch we were copying the key part so that would have been costlier.&lt;br/&gt;
But still we have the option of setting the key part to the KeyOnlyKeyValue object. So am just attaching a patch to change nextIndexKey to a Cell using KeyOnlyKeyValue.  And just keep setting and resetting the nextIndexKey that comes from the HFileBlockIndex. &lt;br/&gt;
The main reason I suggest t his way is that for the Offheap changes and BB related changes, if we have Cells it would be easier to do these compares rather than adding new type of comparators.  Can you try to profile with this change and if you really see that KeyOnlyKV is affecting the performance then +1 on going ahead with pure byte[] based. What do you think.  It is not a patch prepared over your patch, just a suggestion to change  the nextIndexKey to Kv.&lt;/p&gt;</comment>
                            <comment id="14344605" author="ram_krish" created="Tue, 3 Mar 2015 06:20:15 +0000"  >&lt;p&gt;Am not hijacking the issue. Just trying to convey my point here. &lt;/p&gt;</comment>
                            <comment id="14344622" author="ram_krish" created="Tue, 3 Mar 2015 06:38:35 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.nextIndexedKV == HConstants.NO_NEXT_INDEXED_KV
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This change in the patch is not quite right. Sorry about that. Here we may have to do a compare only if we change to Cell. &lt;/p&gt;</comment>
                            <comment id="14344626" author="lhofhansl" created="Tue, 3 Mar 2015 06:43:46 +0000"  >&lt;p&gt;NP &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;. Thanks for taking a look!&lt;/p&gt;

&lt;p&gt;I am not actually too concerned about the KeyOnlyKeyValueObject (actually, could you have a look at the first patch I attached here, where I optimized it a bit?)&lt;br/&gt;
I can make a Cell from the indexed key (in trunk at least). But KeyValue.KVComparator.compareOnlyKeyPortion(Cell, Cell) will not work, because I cannot make a Cell from the seek Cell in SQM without materializing the byte[]... That&apos;s the part I have to avoid.&lt;/p&gt;

&lt;p&gt;What I could do (in trunk) is... Instead of:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; compareKey(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] key, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; koff, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; klen,
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] row, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; roff, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rlen,
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] fam, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; foff, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; flen,
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] col, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; coff, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; clen,
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; ts, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; type)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We&apos;d wrap the indexed key in a KeyOnlyKeyValue and have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; compareKey(Cell cell,
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] row, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; roff, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; rlen,
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] fam, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; foff, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; flen,
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] col, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; coff, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; clen,
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; ts, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; type)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I actually think then we should do it all the way down at AbstractHFileScanner and store the nextIndexedKey as Cell instead of byte[].&lt;/p&gt;

&lt;p&gt;Lemme do that.&lt;/p&gt;</comment>
                            <comment id="14344627" author="lhofhansl" created="Tue, 3 Mar 2015 06:44:22 +0000"  >&lt;p&gt;Here&apos;s the 0.98 patch btw.&lt;/p&gt;</comment>
                            <comment id="14344647" author="ram_krish" created="Tue, 3 Mar 2015 07:09:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;ut KeyValue.KVComparator.compareOnlyKeyPortion(Cell, Cell) will not work, because I cannot make a Cell from the seek Cell in SQM without materializing the byte[]... That&apos;s the part I have to avoid.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I understand this as to why you have to avoid because you will not use the Cell from SQM directly as the ts and type is the one that you will be passing. &lt;br/&gt;
We tried out a way in our internal branch in such cases where we want the FirstOnRow, LastOnCol, firstOnCol type of Kvs for which we created a new FirstOnCol cell object passing the cell - but the getTS and getType would return LATEST_TIMESTAMP/MIN_TIMESTAMP and type as MAX/MIN based on what we want such that it is two cells.  Anyway I think changing to cell for nextIndexKey does not matter except that there is a new compare() API. Fine with carrying on as it is now in your patches. Thanks Lars.&lt;/p&gt;</comment>
                            <comment id="14344656" author="hadoopqa" created="Tue, 3 Mar 2015 07:18:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12702089/nextIndexKVChange_new.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12702089/nextIndexKVChange_new.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit daed00fc98167870463e77b620e9adb6ce9b204d.&lt;br/&gt;
  ATTACHMENT ID: 12702089&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;br/&gt;
    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestBlocksScanned&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.camel.test.junit4.CamelTestSupport.doStopCamelContext(CamelTestSupport.java:450)&lt;br/&gt;
	at org.apache.camel.test.junit4.CamelTestSupport.tearDown(CamelTestSupport.java:351)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13052//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14344659" author="lhofhansl" created="Tue, 3 Mar 2015 07:19:29 +0000"  >&lt;p&gt;Here&apos;s a version that make a Cell all the down at the block index. Index we only do that when we actually load a block this is OK performance wise.&lt;/p&gt;

&lt;p&gt;(I do not think I want to backport the KeyOnlyKeyValue portions to 0.98, so if we want a 0.98 patch I&apos;d prefer to leave it the way it is)&lt;/p&gt;

&lt;p&gt;Lemme know what you think &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14344663" author="lhofhansl" created="Tue, 3 Mar 2015 07:21:38 +0000"  >&lt;p&gt;Ah. Too late, made a patch already &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; And it does make things nicer. I&apos;m fine with either -v4 or -v5.&lt;/p&gt;</comment>
                            <comment id="14344668" author="lhofhansl" created="Tue, 3 Mar 2015 07:23:38 +0000"  >&lt;p&gt;TestBlockScanned passed locally.&lt;/p&gt;</comment>
                            <comment id="14344670" author="lhofhansl" created="Tue, 3 Mar 2015 07:23:52 +0000"  >&lt;p&gt;Test run for -v5.&lt;/p&gt;</comment>
                            <comment id="14344671" author="lhofhansl" created="Tue, 3 Mar 2015 07:26:32 +0000"  >&lt;p&gt;Oh and saw your sample patch. I think my version is even more radical... I change indexed key to Cell everywhere above the HFileBlockIndex &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14344810" author="ram_krish" created="Tue, 3 Mar 2015 09:28:20 +0000"  >&lt;p&gt;The optimize() logic makes sense.  I think particularly it is going to be useful when there is one version of a cell and the filter/trackers say SEEK_TO_ROW/COL.&lt;br/&gt;
Changing the HFileBlock Index to Cell is fine unless you have a concern on the number of objects being created and thrown away.  In that case we may have to have a different approach but for the case of NO_INDEX_KEY-we cannot go with &apos;==&apos; check.  In this case that is not there.&lt;/p&gt;</comment>
                            <comment id="14344828" author="hadoopqa" created="Tue, 3 Mar 2015 09:34:14 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12702102/13109-trunk-v5.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12702102/13109-trunk-v5.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit daed00fc98167870463e77b620e9adb6ce9b204d.&lt;br/&gt;
  ATTACHMENT ID: 12702102&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;br/&gt;
    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1937 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13055//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14345276" author="stack" created="Tue, 3 Mar 2015 16:24:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; if you describe test you&apos;d like I can try it here.&lt;/p&gt;</comment>
                            <comment id="14345417" author="lhofhansl" created="Tue, 3 Mar 2015 18:02:23 +0000"  >&lt;p&gt;This would most show with: (1) filtering on the server and (2) doing some seeking (i.e. selecting only some of the columns - so that the explicit tracker is used, deleting some rows - deleteColumns, etc)... All with many versions, few versions, etc.&lt;/p&gt;

&lt;p&gt;I&apos;ll run some perf eval as well (with the 0.98 patch, though).&lt;/p&gt;

&lt;p&gt;Quite exited about this. After many, many attempts... Finally a way to significantly reduce the cost of SEEKs when there aren&apos;t many versions or columns (and when there are many verions/columns we still SEEK).&lt;/p&gt;</comment>
                            <comment id="14345553" author="lhofhansl" created="Tue, 3 Mar 2015 19:18:21 +0000"  >&lt;p&gt;Actually PE only write single column rows, this needs many columns (or deletes) to show any improvement.&lt;/p&gt;</comment>
                            <comment id="14346204" author="lhofhansl" created="Wed, 4 Mar 2015 01:44:53 +0000"  >&lt;p&gt;Did some more tests with Phoenix against 0.98, including some of the tests they used to validate their optimization to always use the WildcardColumnMatcher and doing the filtering themselves to avoid the cost of the ExplicitColumnTracker that does the seeking. Testing with 7 columns. One scenario was with all 7 columns in the same CF the other each column in its column family:&lt;/p&gt;

&lt;p&gt;Ran two queries: q1 = select count(1) where v3 = &amp;lt;&amp;gt; and v5 = &amp;lt;&amp;gt; and q2 = select avg(v2) where v3 = &amp;lt;&amp;gt; and v5 = &amp;lt;&amp;gt;&lt;/p&gt;

&lt;p&gt;1CF case:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;q1 w/o Phoenix p[t&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;q1 w/ Phoenix opt&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;q2 w/o Phoenix opt&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;q2 w/ Phoenix opt&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;12.9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8.4&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;18.0&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/ patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;7.5&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;7.2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;7.5&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;7.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Two observation:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Even with the Phoenix optimization this is faster because a bunch of SEEK_NEXT_ROWs are saved unless they&apos;re necessary.&lt;/li&gt;
	&lt;li&gt;The whole optimization is unnecessary now, it saves less than 5% in the &lt;b&gt;best&lt;/b&gt; case with only one version per cell&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14346217" author="lhofhansl" created="Wed, 4 Mar 2015 01:52:51 +0000"  >&lt;p&gt;Same, but with each column in its own CF (in this case Phoenix does not use its WildcardTracker + Filter optimization)&lt;/p&gt;

&lt;p&gt;6CF case:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;q1&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;q2&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15.3&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/ patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;9.14&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;9.19&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Any objection committing this to all branches?&lt;br/&gt;
(&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;?)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=giacomotaylor&quot; class=&quot;user-hover&quot; rel=&quot;giacomotaylor&quot;&gt;James Taylor&lt;/a&gt;, FYI (we can probably remove the ColumnProjectionFilter optimization when this is in)&lt;/p&gt;</comment>
                            <comment id="14346235" author="jamestaylor" created="Wed, 4 Mar 2015 02:06:40 +0000"  >&lt;p&gt;Awesome - nice work, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="14346481" author="ram_krish" created="Wed, 4 Mar 2015 06:33:31 +0000"  >&lt;p&gt;+1 on patch. Nice work!!&lt;/p&gt;</comment>
                            <comment id="14346490" author="lhofhansl" created="Wed, 4 Mar 2015 06:46:01 +0000"  >&lt;p&gt;So in 0.98.x and 1.0.x I am going to deprecate Scan.HINT_LOOKAHEAD, and then remove it in 1.1.0 and 2.0.0.&lt;/p&gt;

&lt;p&gt;Even in 0.98 and 1.0 it&apos;ll be a no-op, just there to avoid breaking the API.&lt;/p&gt;

&lt;p&gt;The -0.98 patch here would go into 0.98. For 1.0.1 and 1.1.0 I&apos;ll see how nicely the trunk patch applies (it might need a version that&apos;s closer to the 0.98 version).&lt;/p&gt;

&lt;p&gt;I&apos;ll do that tomorrow.&lt;/p&gt;</comment>
                            <comment id="14347025" author="yuzhihong@gmail.com" created="Wed, 4 Mar 2015 15:30:12 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14347682" author="lhofhansl" created="Wed, 4 Mar 2015 22:24:52 +0000"  >&lt;p&gt;Committed to 0.98, 1.0.1, 1.1.0, and 2.0.0.&lt;br/&gt;
The 0.98, and 1.0.1 mark Scan.HINT_LOOKAHEAD as deprecated, but the hint is no longer honored.&lt;br/&gt;
From 1.1.0 the hint is gone.&lt;/p&gt;</comment>
                            <comment id="14347788" author="hudson" created="Wed, 4 Mar 2015 23:39:48 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6205 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6205/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6205/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Make better SEEK vs SKIP decisions during scanning. (larsh: rev 464e7ce685486e3ede13ec2351b45b0a0b65696c)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockWithScanInfo.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/NonLazyKeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14347797" author="hudson" created="Wed, 4 Mar 2015 23:51:31 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.0 #788 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/788/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/788/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Make better SEEK vs SKIP decisions during scanning. (larsh: rev a3e9325150de4ad89f3032535be8e20fb352f182)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockWithScanInfo.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/NonLazyKeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14347800" author="hudson" created="Wed, 4 Mar 2015 23:51:59 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #247 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/247/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/247/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Make better SEEK vs SKIP decisions during scanning. (larsh: rev f5020e9c1a98727cb100f24294df50072d599bf8)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockWithScanInfo.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/NonLazyKeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14347894" author="jonathan.lawlor" created="Thu, 5 Mar 2015 01:20:56 +0000"  >&lt;p&gt;Looks like this introduced some new javadoc warnings that are being called out in other precommit build checks:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java:82: warning - @param argument &quot;lookAhead&quot; is not a parameter name.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java:587: warning - @param argument &quot;off&quot; is not a parameter name.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java:587: warning - @param argument &quot;len&quot; is not a parameter name.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java:602: warning - @param argument &quot;off&quot; is not a parameter name.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;WARNING&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java:602: warning - @param argument &quot;len&quot; is not a parameter name.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14347928" author="lhofhansl" created="Thu, 5 Mar 2015 01:43:13 +0000"  >&lt;p&gt;Uh oh... Lemme fix those. Somehow I missed those in the test runs.&lt;br/&gt;
There&apos;s also the check style warning... I&apos;m getting sloppy.&lt;/p&gt;</comment>
                            <comment id="14347964" author="hudson" created="Thu, 5 Mar 2015 02:04:51 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #883 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/883/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/883/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Make better SEEK vs SKIP decisions during scanning. (larsh: rev b3bd0016492eb99e3a83353f0879bfddebff4ec1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/NonLazyKeyValueScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14347979" author="lhofhansl" created="Thu, 5 Mar 2015 02:11:09 +0000"  >&lt;p&gt;Updated all branches.&lt;/p&gt;</comment>
                            <comment id="14348033" author="hudson" created="Thu, 5 Mar 2015 02:50:57 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #249 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/249/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/249/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Fix Javadoc warning; and some misc checkstyle warnings (larsh: rev 1cdcb6e9b8d386d43b482ff8a5aa6f1c0e3c6791)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14348043" author="hudson" created="Thu, 5 Mar 2015 03:05:49 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98-on-Hadoop-1.1 #840 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/840/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/840/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Make better SEEK vs SKIP decisions during scanning. (larsh: rev b3bd0016492eb99e3a83353f0879bfddebff4ec1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/NonLazyKeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueHeap.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBlocksRead.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFileScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/HalfStoreFileReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14348065" author="hudson" created="Thu, 5 Mar 2015 03:31:52 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6207 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6207/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6207/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Fix Javadoc warning; and some misc checkstyle warnings (larsh: rev 0bdab85b065bd0876152ac30c2ec6d08adae8006)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14348086" author="hudson" created="Thu, 5 Mar 2015 03:54:02 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.0 #789 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/789/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/789/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Fix Javadoc warning; and some misc checkstyle warnings (larsh: rev d72bb2f6a60bdf2ac9daf639f18030eee2ea9773)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14348150" author="hudson" created="Thu, 5 Mar 2015 05:04:19 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98 #884 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/884/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/884/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Fix Javadoc warning; and some misc checkstyle warnings (larsh: rev 2eda262dfee9889a008cb53d5c8a2a73959934e4)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14348327" author="hudson" created="Thu, 5 Mar 2015 07:44:52 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #841 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/841/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/841/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; Fix Javadoc warning; and some misc checkstyle warnings (larsh: rev 2eda262dfee9889a008cb53d5c8a2a73959934e4)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14357703" author="apurtell" created="Wed, 11 Mar 2015 22:12:22 +0000"  >&lt;p&gt;The commit of this to 0.98 branch breaks Phoenix compilation if using -Dhbase.version=0.98.12-SNAPSHOT (after installing latest 0.98 into the local Maven cache):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[ERROR] /Users/apurtell/src/phoenix/phoenix-core/src/main/java/org/apache/hadoop/hbase/regionserver/IndexHalfStoreFileReader.java:[141,35] &amp;lt;anonymous org.apache.hadoop.hbase.regionserver.IndexHalfStoreFileReader$1&amp;gt; is not abstract and does not override abstract method getNextIndexedKey() in org.apache.hadoop.hbase.io.hfile.HFileScanner
[ERROR] /Users/apurtell/src/phoenix/phoenix-core/src/main/java/org/apache/phoenix/hbase/index/scanner/FilteredKeyValueScanner.java:[37,8] org.apache.phoenix.hbase.index.scanner.FilteredKeyValueScanner is not abstract and does not override abstract method getNextIndexedKey() in org.apache.hadoop.hbase.regionserver.KeyValueScanner
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;KeyValueScanner and HFileScanner are both marked as InterfaceAudience.Private. What should we do here?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jamestaylor&quot; class=&quot;user-hover&quot; rel=&quot;jamestaylor&quot;&gt;James Taylor&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14357707" author="apurtell" created="Wed, 11 Mar 2015 22:15:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jesse_yates&quot; class=&quot;user-hover&quot; rel=&quot;jesse_yates&quot;&gt;Jesse Yates&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14358892" author="lhofhansl" created="Thu, 12 Mar 2015 16:17:55 +0000"  >&lt;p&gt;Hmm... Not sure what we can do other than (1) by using a private/evolving interface you&apos;re on your own or (2) roll this back from 0.98.&lt;br/&gt;
I&apos;d be fine with #2.&lt;/p&gt;

&lt;p&gt;I suppose we could add implementations of these methods In Phoenix now (it&apos;s perfectly OK to just return null, just means this optimization will not be used).&lt;/p&gt;</comment>
                            <comment id="14358923" author="apurtell" created="Thu, 12 Mar 2015 16:33:53 +0000"  >&lt;p&gt;I would rather not impose a performance penalty on 0.98 for sake of compatibility with Phoenix where they&apos;ve used a private interface. When I do 0.98 RC I check if Phoenix compiles using the heads of master and sometimes branch 4.0 if I have time. We could get that working today actually. I could publish a 0.98.12 SNAPSHOT to Maven now including this change, and update Phoenix POMs on branches master and 4.0 to use the snapshot, and add the necessary methods there. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jamestaylor&quot; class=&quot;user-hover&quot; rel=&quot;jamestaylor&quot;&gt;James Taylor&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14359047" author="jamestaylor" created="Thu, 12 Mar 2015 17:43:12 +0000"  >&lt;p&gt;Would it be possible to have base classes for these we can extend from to shield us from interface additions? &lt;/p&gt;

&lt;p&gt;The FilteredKeyValueScanner class is deep in the bowels of mutable secondary indexing - &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jesse_yates&quot; class=&quot;user-hover&quot; rel=&quot;jesse_yates&quot;&gt;Jesse Yates&lt;/a&gt; - any ideas for how to get this on to non private/evolving interfaces?&lt;/p&gt;

&lt;p&gt;The HFileScanner anonymous implementation is in the bowels of local indexes. Same question, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rajeshbabu&quot; class=&quot;user-hover&quot; rel=&quot;rajeshbabu&quot;&gt;Rajeshbabu Chintaguntla&lt;/a&gt; - any ideas for how to get this on to non private/evolving interfaces?&lt;/p&gt;</comment>
                            <comment id="14359067" author="apurtell" created="Thu, 12 Mar 2015 17:51:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would it be possible to have base classes for these we can extend from to shield us from interface additions?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes we can add these, but it&apos;s still one incompat change to move to using the base classes. Ok?&lt;/p&gt;

&lt;p&gt;Edit: And the base classes will still be Private because the interface is private.  &lt;/p&gt;</comment>
                            <comment id="14359074" author="apurtell" created="Thu, 12 Mar 2015 17:53:00 +0000"  >&lt;p&gt;Also, see above my suggestion to move to a 0.98 SNAPSHOT after making the change. Or, I can just ignore that Phoenix won&apos;t compile until updated with the 0.98.12 RC when working on the next release.&lt;/p&gt;</comment>
                            <comment id="14359085" author="jamestaylor" created="Thu, 12 Mar 2015 18:00:35 +0000"  >&lt;p&gt;Want to make sure I understand the b/w compat implications. Does this mean that our current 4.3 and below releases will no longer work with 0.98.12 and above? And that 4.4 and above will only work with 0.98.12 and above?&lt;/p&gt;</comment>
                            <comment id="14359115" author="apurtell" created="Thu, 12 Mar 2015 18:22:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;Want to make sure I understand the b/w compat implications. Does this mean that our current 4.3 and below releases will no longer work with 0.98.12 and above? And that 4.4 and above will only work with 0.98.12 and above?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&amp;lt;= 4.3 won&apos;t compile.&lt;/p&gt;

&lt;p&gt;I ran the binary compatibility checker and it says the addition of the abstract method getNextIndexedKey( ) to the interfaces has no effect.&lt;/p&gt;</comment>
                            <comment id="14359130" author="apurtell" created="Thu, 12 Mar 2015 18:29:51 +0000"  >&lt;p&gt;If we add base classes and change the inheritance hierarchy that may impact binary compat.&lt;/p&gt;</comment>
                            <comment id="14359189" author="lhofhansl" created="Thu, 12 Mar 2015 19:06:16 +0000"  >&lt;p&gt;It&apos;d be best to add the methods to Phoenix. If we do not add an override annotation that would work with old and new versions of HBase.&lt;/p&gt;</comment>
                            <comment id="14361526" author="apurtell" created="Sat, 14 Mar 2015 02:23:27 +0000"  >&lt;p&gt;So here&apos;s where I think we are:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This commit is fine.&lt;/li&gt;
	&lt;li&gt;No new base classes and inheritance hierarchy changes&lt;/li&gt;
	&lt;li&gt;Handle updates to Phoenix on a Phoenix JIRA. I can push a 0.98.12 SNAPSHOT to Maven if that would help.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Any issues with this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=giacomotaylor&quot; class=&quot;user-hover&quot; rel=&quot;giacomotaylor&quot;&gt;James Taylor&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; ?&lt;/p&gt;</comment>
                            <comment id="14361604" author="jamestaylor" created="Sat, 14 Mar 2015 04:33:26 +0000"  >&lt;p&gt;I believe this essentially breaks all existing 4.x Phoenix releases (at a minimum, it would break mutable and local secondary indexes). The only way Phoenix users will be able to use 0.98.12+ is to wait for the next Phoenix release and upgrade to that one (at a minimum on the server side). Not sure if this is a problem for the user community. &lt;/p&gt;</comment>
                            <comment id="14362120" author="apurtell" created="Sun, 15 Mar 2015 00:47:17 +0000"  >&lt;p&gt;Which user community? HBase is the operative one here. Of which phoenix users are a part, of course. &lt;/p&gt;

&lt;p&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; Can this change be implemented without adding the new member to this interface?&lt;/p&gt;

&lt;p&gt;If yes, we should fix Phoenix compilation issues as an accommodation.&lt;/p&gt;

&lt;p&gt;If no, well these are private annotated interfaces after all and this is a nice perf gain for HBase users, so as 0.98 RM I&apos;ll call it as good to stay. &lt;/p&gt;</comment>
                            <comment id="14362121" author="apurtell" created="Sun, 15 Mar 2015 00:49:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=giacomotaylor&quot; class=&quot;user-hover&quot; rel=&quot;giacomotaylor&quot;&gt;James Taylor&lt;/a&gt; JavaACC says the changes have no binary compat impact with already compiled code. I don&apos;t see how previous releases of Phoenix are broken. I think that states the problem too strongly. It is true that recompilation will be problematic without accommodation (see above) or local patching, but that&apos;s not the same thing as broken, right?&lt;/p&gt;</comment>
                            <comment id="14362123" author="jamestaylor" created="Sun, 15 Mar 2015 00:58:26 +0000"  >&lt;p&gt;Not positive it&apos;s broken, so we should try it for sure. Is it available in maven? &lt;/p&gt;

&lt;p&gt;Yes, I meant the combined HBase+Phoenix community. Of course it&apos;s absolutely your call - would just be good if we knew in advance.&lt;/p&gt;</comment>
                            <comment id="14362125" author="apurtell" created="Sun, 15 Mar 2015 01:02:01 +0000"  >&lt;p&gt;Let&apos;s see what Lars says first. I&apos;d like to accommodate Phoenix if we can. &lt;/p&gt;</comment>
                            <comment id="14362197" author="lhofhansl" created="Sun, 15 Mar 2015 04:30:09 +0000"  >&lt;p&gt;I do not think I can fix this without the extra methods. Lemme have a look.&lt;br/&gt;
We can also undo this for 0.98.12 and put it into 0.98.13 instead, which time there should be new point versions of Phoenix.&lt;/p&gt;</comment>
                            <comment id="14362243" author="lhofhansl" created="Sun, 15 Mar 2015 06:09:15 +0000"  >&lt;p&gt;Ultimately I only need this method in: KeyValueHeap, StoreScanner, StoreFileScanner, and AbstractHFileReader.Scanner. But doing only would litter class casts all over the code along with class checks in hot code paths. I do not think that makes sense.&lt;/p&gt;

&lt;p&gt;So, we can undo this from 0.98 altogether. (but -1 on that from me). Or we can delay this until 0.98.13. By then Phoenix needs to have new minor versions of 4.2 and 4.3. I&apos;d be +0 on that. And just in case, -1 on delaying this further than 0.98.13...&lt;/p&gt;</comment>
                            <comment id="14362250" author="apurtell" created="Sun, 15 Mar 2015 06:33:50 +0000"  >&lt;p&gt;Thanks for checking. I&apos;d be +0 on a delay as well &lt;/p&gt;</comment>
                            <comment id="14362251" author="apurtell" created="Sun, 15 Mar 2015 06:34:09 +0000"  >&lt;p&gt;And -1 for permanent revert&lt;/p&gt;</comment>
                            <comment id="14362609" author="lhofhansl" created="Sun, 15 Mar 2015 23:33:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=giacomotaylor&quot; class=&quot;user-hover&quot; rel=&quot;giacomotaylor&quot;&gt;James Taylor&lt;/a&gt;, what do you think? If we delay to 0.98.13, I think we can have new versions of Phoenix by then.&lt;br/&gt;
(If not, might as well leave it in 0.98.12)&lt;/p&gt;

&lt;p&gt;We should also check a version Phoenix built against an 0.98.11, and then run it against a version of HBase with this patch. I guess the only case in which we&apos;d have an issue is with indexes.&lt;/p&gt;</comment>
                            <comment id="14362744" author="jamestaylor" created="Mon, 16 Mar 2015 04:58:33 +0000"  >&lt;p&gt;Would it be possible to get the 0.98.12 snapshot into maven so we can see if/how Phoenix will work with it? We plan on releasing a 4.3.1 soon - perhaps we can start a vote in a week. What&apos;s your time frame for 0.98.12?&lt;/p&gt;
</comment>
                            <comment id="14363659" author="stack" created="Mon, 16 Mar 2015 18:27:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Would it be possible to get the 0.98.12 snapshot into maven so we can see if/how Phoenix will work with it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can&apos;t you not build it local? This will install it in your local repo. You can then check phoenix against the locally installed version?&lt;/p&gt;</comment>
                            <comment id="14363670" author="apurtell" created="Mon, 16 Mar 2015 18:31:34 +0000"  >&lt;p&gt;I&apos;ll publish a snapshot today, so you can do either. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14364356" author="apurtell" created="Tue, 17 Mar 2015 01:11:10 +0000"  >&lt;p&gt;I&apos;ve confirmed 0.98.12 snapshots are available in Apache Maven now.&lt;/p&gt;

&lt;p&gt;Be sure the Apache snapshots repository is included in your POM:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    &amp;lt;repository&amp;gt;
      &amp;lt;id&amp;gt;apache.snapshots&amp;lt;/id&amp;gt;
      &amp;lt;url&amp;gt;http://repository.apache.org/snapshots/&amp;lt;/url&amp;gt;
      &amp;lt;snapshots&amp;gt;
        &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;
      &amp;lt;/snapshots&amp;gt;
    &amp;lt;/repository&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Use the versions &quot;0.98.12-hadoop2-SNAPSHOT&quot; for the Hadoop 2 build, &quot;0.98.12-hadoop1-SNAPSHOT&quot; for the Hadoop 1 build.&lt;/p&gt;</comment>
                            <comment id="14364428" author="jamestaylor" created="Tue, 17 Mar 2015 02:13:06 +0000"  >&lt;p&gt;Thanks, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mujtabachohan&quot; class=&quot;user-hover&quot; rel=&quot;mujtabachohan&quot;&gt;Mujtaba Chohan&lt;/a&gt; - would you mind trying existing Phoenix binary release (4.3.0 is fine) against this snapshot. In particular, do mutable and local indexing still work correctly?&lt;/p&gt;</comment>
                            <comment id="14365400" author="apurtell" created="Tue, 17 Mar 2015 16:07:30 +0000"  >&lt;p&gt;Re-resolving. Follow up in &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1731&quot; title=&quot;Add getNextIndexedKey() to IndexHalfStoreFileReader and FilteredKeyValueScanner&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1731&quot;&gt;&lt;del&gt;PHOENIX-1731&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14365866" author="mujtabachohan" created="Tue, 17 Mar 2015 19:30:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jamestaylor&quot; class=&quot;user-hover&quot; rel=&quot;jamestaylor&quot;&gt;James Taylor&lt;/a&gt; Checked. Mutable/local index using existing 4.3.0 release works fine with 0.98.12-SNAPSHOT.&lt;/p&gt;</comment>
                            <comment id="14366046" author="lhofhansl" created="Tue, 17 Mar 2015 20:43:32 +0000"  >&lt;p&gt;Pffeeewww... Good. (I admit I am surprised, since the HBase core code would call the new method on the HFileScanner and KeyValueScanner interfaces)&lt;/p&gt;

&lt;p&gt;The fact remains, though, that we have to get a new version of Phoenix 4.3 and 4.2 out before we ship 0.98.12, else there would be no released version of Phoenix to compile against the current version of 0.98. I discussed offline with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, and we think that might the best option. I assume if we can&apos;t make that, we&apos;ll delay this until 0.98.13.&lt;/p&gt;

&lt;p&gt;(Sorry for the pain caused here. It&apos;s instructive, though, and worth the performance gains)&lt;/p&gt;</comment>
                            <comment id="14366050" author="apurtell" created="Tue, 17 Mar 2015 20:46:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;I admit I am surprised, since the HBase core code would call the new method on the HFileScanner and KeyValueScanner interfaces&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Phoenix code does not call the new method, of course, which is why the binary compatibility checker didn&apos;t flag this as a problem. It would have been a different story if there was a removal or rename of a specific method used by Phoenix.&lt;/p&gt;</comment>
                            <comment id="14366055" author="lhofhansl" created="Tue, 17 Mar 2015 20:49:28 +0000"  >&lt;p&gt;But the HBase code would call into the scanners injected by the Phoenix coprocessors... Anyway, since it works fine, there&apos;s something I am missing, which is just fine &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14366730" author="lhofhansl" created="Wed, 18 Mar 2015 06:43:36 +0000"  >&lt;p&gt;For the record... The full patch (with followup javadoc fixes) committed to 0.98.&lt;/p&gt;</comment>
                            <comment id="14372491" author="lhofhansl" created="Sat, 21 Mar 2015 03:57:16 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vik.karma&quot; class=&quot;user-hover&quot; rel=&quot;vik.karma&quot;&gt;Vikas Vishwakarma&lt;/a&gt; confirmed that the scan mentioned in the description is about 3x faster. That&apos;s a 3x end-to-end improvement in an M/R job!&lt;/p&gt;</comment>
                            <comment id="14381180" author="hudson" created="Thu, 26 Mar 2015 01:22:58 +0000"  >&lt;p&gt;ABORTED: Integrated in Phoenix-master #638 (See &lt;a href=&quot;https://builds.apache.org/job/Phoenix-master/638/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/Phoenix-master/638/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1642&quot; title=&quot;Make Phoenix Master Branch pointing to HBase1.0.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1642&quot;&gt;&lt;del&gt;PHOENIX-1642&lt;/del&gt;&lt;/a&gt; Make Phoenix Master Branch pointing to HBase1.0.0 - ADDENDUM for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13109&quot; title=&quot;Make better SEEK vs SKIP decisions during scanning&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13109&quot;&gt;&lt;del&gt;HBASE-13109&lt;/del&gt;&lt;/a&gt; (enis: rev ad2ad0cefd5d19a9bc84345444455a9ecbb55c78)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;phoenix-core/src/main/java/org/apache/phoenix/hbase/index/scanner/FilteredKeyValueScanner.java&lt;/li&gt;
	&lt;li&gt;phoenix-core/src/main/java/org/apache/hadoop/hbase/regionserver/IndexHalfStoreFileReader.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14517738" author="enis" created="Tue, 28 Apr 2015 19:18:29 +0000"  >&lt;p&gt;Closing this issue after 1.0.1 release.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12781663">PHOENIX-1731</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12674058">HBASE-9778</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12781663">PHOENIX-1731</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12673948">HBASE-9769</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12702094" name="13109-0.98-v4.txt" size="27555" author="lhofhansl" created="Tue, 3 Mar 2015 06:44:22 +0000"/>
                            <attachment id="12705287" name="13109-0.98-v5.txt" size="27189" author="lhofhansl" created="Wed, 18 Mar 2015 06:43:36 +0000"/>
                            <attachment id="12701779" name="13109-trunk-v2.txt" size="24867" author="lhofhansl" created="Mon, 2 Mar 2015 04:02:23 +0000"/>
                            <attachment id="12701810" name="13109-trunk-v3.txt" size="24281" author="lhofhansl" created="Mon, 2 Mar 2015 07:11:38 +0000"/>
                            <attachment id="12702072" name="13109-trunk-v4.txt" size="25884" author="lhofhansl" created="Tue, 3 Mar 2015 04:28:27 +0000"/>
                            <attachment id="12702102" name="13109-trunk-v5.txt" size="35834" author="lhofhansl" created="Tue, 3 Mar 2015 07:19:29 +0000"/>
                            <attachment id="12701657" name="13109-trunk.txt" size="27996" author="lhofhansl" created="Sun, 1 Mar 2015 02:11:33 +0000"/>
                            <attachment id="12702089" name="nextIndexKVChange_new.patch" size="6344" author="ram_krish" created="Tue, 3 Mar 2015 06:19:38 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12863566">HBASE-14418</subtask>
                            <subtask id="12902058">HBASE-14539</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 1 Mar 2015 07:14:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 33 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i262lj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>