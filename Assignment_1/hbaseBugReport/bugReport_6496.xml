<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:37:16 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6496/HBASE-6496.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6496] Example ZK based scan policy</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6496</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Provide an example of a RegionServer that listens to a ZK node to learn about what set of KVs can safely be deleted during a compaction.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12601164">HBASE-6496</key>
            <summary>Example ZK based scan policy</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12599399">HBASE-6427</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Thu, 2 Aug 2012 05:37:55 +0000</created>
                <updated>Thu, 2 May 2013 02:29:55 +0000</updated>
                            <resolved>Sat, 25 Aug 2012 00:02:28 +0000</resolved>
                                                    <fixVersion>0.94.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13427561" author="lhofhansl" created="Thu, 2 Aug 2012 19:55:56 +0000"  >&lt;p&gt;Here&apos;s a work in progress.&lt;br/&gt;
It wasn&apos;t actually as straightforward as I thought, as there is no place within a RegionServer that would allow coprocessors to share some state.&lt;/p&gt;

&lt;p&gt;Furthermore I could not use the RegionServer&apos;s ZooKeeperWatcher as there is no way to unregister a Listener, hence as RegionObservers come and go their listeners would pile up firing uselessly and preventing the RegionObserver implementation from the being GC&apos;d.&lt;/p&gt;

&lt;p&gt;So instead the RegionObserver itself is a watcher, which on other hand now leads to a Watcher per region.&lt;/p&gt;

&lt;p&gt;I could use some advice here, will such use of ZK scale?&lt;br/&gt;
If it doesn&apos;t I could&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;add a removeListenere method to ZooKeeperWatcher (would still need to work out how avoid many watches for the same node) or&lt;/li&gt;
	&lt;li&gt;Have a way for RegionCoprocessorEnvironment to host some shared state for RegionObserver to coordinate in case such as this one. (could just be a Map that is accessible to all RegionObservers).&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13427594" author="apurtell" created="Thu, 2 Aug 2012 20:42:20 +0000"  >&lt;p&gt;In an earlier iteration of CPs the coprocessor host provided an environment variable like facility, so for all CPs installed on a region could share state among themselves. This was a map provided by the CP host, so all CPs installed on a region could share state. We could bring that back as a map like you suggest but shared across all Observers in a RS, perhaps one map for every class that asks for it. (So, shared across the RS but private to each CP implementation.)&lt;/p&gt;

&lt;p&gt;It could also be useful to have a controlled facility for ZK watchers anyway:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Add to RegionServerServices a facility for getting ZK watchers on demand&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Add to the RegionCoprocessorEnvironment an API for getting ZK watchers from the RS, handing them back to be reaped, and dealing with freeing up dangling resources from any CP termination / unload.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Extend above facility for shared watchers, one watcher per RS for a given CP, perhaps again keyed on class name.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13427634" author="lhofhansl" created="Thu, 2 Aug 2012 21:27:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;Extend above facility for shared watchers, one watcher per RS for a given CP, perhaps again keyed on class name.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I like this one. In this case the hooks implemented by the region observer are in a critical path (at least preStoreScannerOpen is), so I do not want to call zk.getData(...) in that hook, and hence the need for a watcher to be asynchronously notified of changes.&lt;br/&gt;
Each RegionObserver instance would need to be notified about this, and if I understand the code right there is always exactly one instance per Region for which the observer is loaded. So sharing a single watcher with a listener for each CP would be ideal.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We could bring that back as a map like you suggest but shared across all Observers in a RS, perhaps one map for every class that asks for it&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That seems generally useful, and maybe even better suited for the problem mentioned above. A CP would check whether a watcher has been created (an object in that shared map), create one if not, and then add a listener. The watcher would need to support removing listeners.&lt;br/&gt;
With that CPs would be able to coordinate among themselves. It&apos;s not hard to make a ZK watcher, so the generality of this might be better.&lt;br/&gt;
We have found need for this in other projects, but so far have worked around it.&lt;/p&gt;

&lt;p&gt;How would that shared be exposed to a RegionObserver? Via the RegionCoprocessorEnvironment, or the CoprocessorContext?&lt;/p&gt;</comment>
                            <comment id="13427662" author="apurtell" created="Thu, 2 Aug 2012 22:04:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;How would that shared be exposed to a RegionObserver? Via the RegionCoprocessorEnvironment, or the CoprocessorContext?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was thinking addition to interface CoprocessorEnvironment or RegionCoprocessorEnvironment and implementation in RegionCoprocessorHost.&lt;/p&gt;

&lt;p&gt;Context is meant to hold state scoped to the invocation of a CP chain on a particular hook.&lt;/p&gt;</comment>
                            <comment id="13427687" author="lhofhansl" created="Thu, 2 Aug 2012 22:38:38 +0000"  >&lt;p&gt;That makes sense. Then the only part is cleanup. CP classes are not unloaded, right?&lt;br/&gt;
So the onus would have to be on the CP implementation to the right thing in start/stop.&lt;/p&gt;</comment>
                            <comment id="13427689" author="lhofhansl" created="Thu, 2 Aug 2012 22:39:44 +0000"  >&lt;p&gt;I created &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6505&quot; title=&quot;Allow shared RegionObserver state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6505&quot;&gt;&lt;del&gt;HBASE-6505&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13427693" author="apurtell" created="Thu, 2 Aug 2012 22:49:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;CP classes are not unloaded, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct.&lt;/p&gt;

&lt;p&gt;But they can be blacklisted via removal from the list of active loaded coprocessors if they throw an Error. See CoprocessorHost#handleCoprocessorThrowable. &lt;/p&gt;

&lt;p&gt;The CoprocessorHost should clean up if the CP doesn&apos;t, or can&apos;t (due to deregistration).&lt;/p&gt;
</comment>
                            <comment id="13429921" author="lhofhansl" created="Tue, 7 Aug 2012 04:28:55 +0000"  >&lt;p&gt;Here&apos;s a patch based on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6505&quot; title=&quot;Allow shared RegionObserver state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6505&quot;&gt;&lt;del&gt;HBASE-6505&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
All CP instances will use a single watcher, which keeps the date up to date asynchronously.&lt;br/&gt;
If the watcher get disconnected from ZK it will try reconnect periodically.&lt;/p&gt;</comment>
                            <comment id="13430497" author="zhihyu@ebaysf.com" created="Tue, 7 Aug 2012 18:22:40 +0000"  >&lt;p&gt;In process():&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException ix) {
+      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (KeeperException kx) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please restore interrupt status above.&lt;/p&gt;

&lt;p&gt;License header missing in several files.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// there is a &lt;span class=&quot;code-object&quot;&gt;short&lt;/span&gt; race here
&lt;/span&gt;+      &lt;span class=&quot;code-comment&quot;&gt;// in the worst &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; we create a watcher that will be notified once
&lt;/span&gt;+      re.getSharedData().putIfAbsent(
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should shared data provide putIfAbsent() functionality ?&lt;/p&gt;</comment>
                            <comment id="13430616" author="lhofhansl" created="Tue, 7 Aug 2012 20:49:32 +0000"  >&lt;p&gt;Thanks Ted,&lt;/p&gt;

&lt;p&gt;Yep, will add the license header. This was just to get a general feeling for whether the logic is even correct... Dealing with ZK correctly is tricky.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should shared data provide putIfAbsent() functionality ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not sure what you mean. It does (the interface it exposes is a ConcurrentMap as per &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6505&quot; title=&quot;Allow shared RegionObserver state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6505&quot;&gt;&lt;del&gt;HBASE-6505&lt;/del&gt;&lt;/a&gt;). Do you think it should not?&lt;/p&gt;

&lt;p&gt;Will add Thread.interrupt (I keep forgetting about that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).&lt;/p&gt;</comment>
                            <comment id="13430624" author="zhihyu@ebaysf.com" created="Tue, 7 Aug 2012 21:05:35 +0000"  >&lt;p&gt;w.r.t. putIfAbsent(), I meant if you use re.getSharedData().putIfAbsent() directly, you don&apos;t need the containsKey() check.&lt;br/&gt;
ZKWatcher needs to be disposed of in case an entry already existed in shared data.&lt;/p&gt;</comment>
                            <comment id="13430762" author="zhihyu@ebaysf.com" created="Wed, 8 Aug 2012 00:18:39 +0000"  >&lt;p&gt;Unnecessary ZKWatcher creation / disposal can be avoided if you have a singleton ZKWatcher to be placed into shared data map first.&lt;br/&gt;
If the placement was successful, a new ZKWatcher can be created and replace the singleton for the same key.&lt;/p&gt;</comment>
                            <comment id="13430877" author="lhofhansl" created="Wed, 8 Aug 2012 05:24:49 +0000"  >&lt;p&gt;@Ted: I see...&lt;br/&gt;
There is no reliable way to have a singleton, though, since the instances could potentially have been loaded by separate classloaders.&lt;/p&gt;

&lt;p&gt;Hence the containsKey() check to avoid creating a ZKWatcher unless necessary. The putIfAbsent just guards against the short race that another CP created the shared ZK between the contains check and the put.&lt;br/&gt;
Could also synchronize on this CP&apos;s sharedData; that would be the equivalent of a class lock. Taking the rare chance of unnecessarily creating a ZKWatcher seemed to be better approach.&lt;/p&gt;</comment>
                            <comment id="13430980" author="zhihyu@ebaysf.com" created="Wed, 8 Aug 2012 09:36:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;potentially have been loaded by separate classloaders&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;One singleton (marker) per classloader is not too bad, IMHO.&lt;/p&gt;</comment>
                            <comment id="13431606" author="lhofhansl" created="Thu, 9 Aug 2012 06:24:37 +0000"  >&lt;p&gt;I don&apos;t think statics are advised in coprocessor, and thus providing an example using them is setting the wrong expectations.&lt;/p&gt;

&lt;p&gt;Do you think the current way I have it is bad?&lt;/p&gt;</comment>
                            <comment id="13431801" author="zhihyu@ebaysf.com" created="Thu, 9 Aug 2012 13:35:33 +0000"  >&lt;p&gt;@Lars:&lt;br/&gt;
The current way is fine too.&lt;/p&gt;</comment>
                            <comment id="13435651" author="lhofhansl" created="Thu, 16 Aug 2012 00:33:18 +0000"  >&lt;p&gt;OK... If there is no objections I would like to commit this soon.&lt;/p&gt;</comment>
                            <comment id="13437056" author="stack" created="Fri, 17 Aug 2012 20:43:38 +0000"  >&lt;p&gt;+1 on commit.  Add licenses on commit.&lt;/p&gt;</comment>
                            <comment id="13441633" author="lhofhansl" created="Fri, 24 Aug 2012 23:54:55 +0000"  >&lt;p&gt;Patch rebased for 0.96.&lt;/p&gt;</comment>
                            <comment id="13441634" author="lhofhansl" created="Fri, 24 Aug 2012 23:56:43 +0000"  >&lt;p&gt;And finally a version with licenses.&lt;/p&gt;</comment>
                            <comment id="13441638" author="lhofhansl" created="Sat, 25 Aug 2012 00:01:03 +0000"  >&lt;p&gt;And an 0.94 patch&lt;/p&gt;</comment>
                            <comment id="13441640" author="lhofhansl" created="Sat, 25 Aug 2012 00:02:28 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96.&lt;/p&gt;</comment>
                            <comment id="13441706" author="hudson" created="Sat, 25 Aug 2012 01:12:30 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3273 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3273/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3273/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Example ZK based scan policy (Revision 1377156)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/example/ZooKeeperScanPolicyObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13441724" author="zhihyu@ebaysf.com" created="Sat, 25 Aug 2012 01:36:55 +0000"  >&lt;p&gt;I don&apos;t see QA report in this JIRA.&lt;/p&gt;

&lt;p&gt;TestZooKeeperScanPolicyObserver lacks test category (&lt;a href=&quot;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/3273/testReport/org.apache.hadoop.hbase/TestCheckTestClasses/checkClasses/):&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/3273/testReport/org.apache.hadoop.hbase/TestCheckTestClasses/checkClasses/):&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.AssertionError: There are 1 test classes without category: [class org.apache.hadoop.hbase.coprocessor.example.TestZooKeeperScanPolicyObserver]
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.apache.hadoop.hbase.TestCheckTestClasses.checkClasses(TestCheckTestClasses.java:58)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13441727" author="lhofhansl" created="Sat, 25 Aug 2012 01:40:11 +0000"  >&lt;p&gt;I didn&apos;t run HadoopQA on all new code (I ran the added test locally).&lt;br/&gt;
Will add the test category.&lt;/p&gt;</comment>
                            <comment id="13441730" author="hudson" created="Sat, 25 Aug 2012 01:52:31 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #432 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/432/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/432/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Example ZK based scan policy (Revision 1377155)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example/ZooKeeperScanPolicyObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13441752" author="hudson" created="Sat, 25 Aug 2012 02:57:10 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3274 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3274/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3274/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Addendum - add test category (Revision 1377178)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13441755" author="hudson" created="Sat, 25 Aug 2012 03:10:51 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #433 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/433/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/433/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Addendum - add test category (Revision 1377177)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13441838" author="hudson" created="Sat, 25 Aug 2012 11:17:42 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #147 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/147/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/147/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Addendum - add test category (Revision 1377178)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Example ZK based scan policy (Revision 1377156)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/example/ZooKeeperScanPolicyObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13441856" author="hudson" created="Sat, 25 Aug 2012 11:37:40 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #50 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/50/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/50/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Addendum - add test category (Revision 1377177)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Example ZK based scan policy (Revision 1377155)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example/ZooKeeperScanPolicyObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13448296" author="hudson" created="Wed, 5 Sep 2012 00:57:14 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security-on-Hadoop-23 #7 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security-on-Hadoop-23/7/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Addendum - add test category (Revision 1377177)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6496&quot; title=&quot;Example ZK based scan policy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6496&quot;&gt;&lt;del&gt;HBASE-6496&lt;/del&gt;&lt;/a&gt; Example ZK based scan policy (Revision 1377155)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/coprocessor/example/ZooKeeperScanPolicyObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/coprocessor/example/TestZooKeeperScanPolicyObserver.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13624635" author="stack" created="Sun, 7 Apr 2013 04:32:25 +0000"  >&lt;p&gt;Fix up after bulk move overwrote some 0.94.2 fix versions w/ 0.95.0 (Noticed by Lars Hofhansl)&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12601280">HBASE-6505</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12542374" name="6496-0.94.txt" size="14488" author="lhofhansl" created="Sat, 25 Aug 2012 00:01:03 +0000"/>
                            <attachment id="12542372" name="6496-0.96-v2.txt" size="14709" author="lhofhansl" created="Fri, 24 Aug 2012 23:56:43 +0000"/>
                            <attachment id="12542371" name="6496-0.96.txt" size="13020" author="lhofhansl" created="Fri, 24 Aug 2012 23:54:55 +0000"/>
                            <attachment id="12539419" name="6496-v2.txt" size="12963" author="lhofhansl" created="Tue, 7 Aug 2012 04:28:55 +0000"/>
                            <attachment id="12538943" name="6496.txt" size="10364" author="lhofhansl" created="Thu, 2 Aug 2012 19:55:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Aug 2012 20:42:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>248631</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 36 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i09xcf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>55843</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>