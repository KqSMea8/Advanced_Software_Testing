<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:30:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12213/HBASE-12213.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12213] HFileBlock backed by Array of ByteBuffers</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12213</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In L2 cache (offheap) an HFile block might have been cached into multiple chunks of buffers. If HFileBlock need single BB, we will end up in recreation of bigger BB and copying. Instead we can make HFileBlock to serve data from an array of BBs.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12746935">HBASE-12213</key>
            <summary>HFileBlock backed by Array of ByteBuffers</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12724166">HBASE-11425</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="anoop.hbase">Anoop Sam John</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Oct 2014 05:53:28 +0000</created>
                <updated>Mon, 27 Jul 2015 16:26:00 +0000</updated>
                            <resolved>Fri, 17 Jul 2015 08:00:38 +0000</resolved>
                                                                    <component>regionserver</component>
                    <component>Scanners</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="14166001" author="ndimiduk" created="Thu, 9 Oct 2014 23:40:35 +0000"  >&lt;p&gt;I assume you&apos;re aware of util.ByteBufferArray already used by the ByteBufferIOEngine.&lt;/p&gt;</comment>
                            <comment id="14173684" author="anoop.hbase" created="Thu, 16 Oct 2014 12:25:37 +0000"  >&lt;p&gt;Yep Nick.  Will make use..  If any addition needed, will do.&lt;/p&gt;</comment>
                            <comment id="14174872" author="ram_krish" created="Fri, 17 Oct 2014 09:10:48 +0000"  >&lt;p&gt;So here we will avoid the deserialization that happens in the BucketCache.&lt;/p&gt;</comment>
                            <comment id="14611833" author="ram_krish" created="Thu, 2 Jul 2015 11:54:54 +0000"  >&lt;p&gt;Trying for QA. I got a clean run locally. Let me see what QA bot says.&lt;/p&gt;</comment>
                            <comment id="14611841" author="ram_krish" created="Thu, 2 Jul 2015 11:58:38 +0000"  >&lt;p&gt;Uses MBB in the read path.  &lt;br/&gt;
-&amp;gt; Since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12295&quot; title=&quot;Prevent block eviction under us if reads are in progress from the BBs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12295&quot;&gt;&lt;del&gt;HBASE-12295&lt;/del&gt;&lt;/a&gt; is not there we cannot allow the Bucket Cache to use the actual MBB based Blocks without doing copy. For now we have copied the Bucketcache and created an MBB out of it.&lt;br/&gt;
-&amp;gt; the HFileReader uses MBB and the relative reads have been replaced with absolute position based reads.  &lt;br/&gt;
The absolute position based reads uses the UnsafeAccess APIs. So better to make use of them. Tried to do a small micro benchmark mimicing the logic in blockSeek with and without positional reads using MBB.&lt;br/&gt;
-&amp;gt; There are some TODOs that will get changed after BufferBackedCells come in to place.  &lt;br/&gt;
-&amp;gt; PrefixTree, blooms need to be handled to work with MBB that are offheap.  That can be done later.&lt;/p&gt;</comment>
                            <comment id="14611862" author="anoop.hbase" created="Thu, 2 Jul 2015 12:11:45 +0000"  >&lt;p&gt;Gone through the patch quickly once.  Some immediate comments&lt;br/&gt;
ByteBufferUtils -&amp;gt; already added getLong/getInt etc methods..  Named them as toInt/toLong to be consistent with Bytes.java..   So avoid..  Also looks like some methods moved from one place to another..  All these unwanted changes pls avoid.&lt;br/&gt;
UnsafeAccess -&amp;gt;  Here also methods are there to read int/long etc and making use of that in BBUtils.  Also in compare(BB,BB) also making use of this Unsafe based way..  Pls avoid the compare kind of logic from this class.&lt;/p&gt;

&lt;p&gt;Will do more closer look at other area.. Thanks&lt;/p&gt;</comment>
                            <comment id="14612765" author="ram_krish" created="Fri, 3 Jul 2015 02:23:14 +0000"  >&lt;p&gt;Okie. I will rework on that part now. I t hink it happened because I added this class before the BBUtils and UnsafeAccess got committed. Let me remove the unused APIs and repeated APIs from those classes.&lt;/p&gt;</comment>
                            <comment id="14612900" author="ram_krish" created="Fri, 3 Jul 2015 06:41:27 +0000"  >&lt;p&gt;Did some perf testing using the Performance evaluation tool.&lt;br/&gt;
For range scan there is no difference between with and without patch&lt;br/&gt;
ScanRange10000 rows=10000 with 25 threads, filterAll = true&lt;br/&gt;
without patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-07-03 17:06:35,332 INFO  [main] hbase.PerformanceEvaluation: [RandomScanWithRange10000Test] Summary of timings (ms): [573388, 574365, 573071, 571351, 572586, 572020, 572732, 573370, 573627, 573146, 573245, 574017, 573049, 574283, 571470, 574312, 574539, 574515, 571540, 574108, 573530, 574177, 574143, 572927, 574541]
2015-07-03 17:06:35,333 INFO  [main] hbase.PerformanceEvaluation: [RandomScanWithRange10000Test]        Min: 571351ms   Max: 574541ms   Avg: 573362ms

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;with patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-07-03 16:49:57,711 INFO  [main] hbase.PerformanceEvaluation: [RandomScanWithRange10000Test] Summary of timings (ms): [572276, 569970, 572610, 571517, 572027, 570168, 570932, 572951, 570492, 572410, 572037, 571495, 572238, 572055, 572114, 571142, 572500, 569813, 572383, 572223, 571191, 572197, 571473, 571235, 569209]
2015-07-03 16:49:57,715 INFO  [main] hbase.PerformanceEvaluation: [RandomScanWithRange10000Test]        Min: 569209ms   Max: 572951ms   Avg: 571546ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But when we do gets which involves lot of blockSeek code &lt;br/&gt;
randomReads = 10 threads, multiGets = 100, filterAll = true&lt;br/&gt;
withoutpatch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-07-03 17:13:37,172 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest] Summary of timings (ms): [158292, 158191, 157503, 158375, 158182, 158901, 157680, 158583, 158388, 158279]
2015-07-03 17:13:37,173 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest]      Min: 157503ms   Max: 158901ms   Avg: 158237ms

2015-07-03 17:33:36,854 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest] Summary of timings (ms): [163757, 163478, 163175, 163876, 163490, 163187, 163813, 163937, 162839, 163398]
2015-07-03 17:33:36,855 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest]      Min: 162839ms   Max: 163937ms   Avg: 163495ms

2015-07-03 17:36:44,255 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest] Summary of timings (ms): [161414, 162715, 162266, 162409, 161884, 162161, 162235, 162077, 162852, 161575]
2015-07-03 17:36:44,256 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest]      Min: 161414ms   Max: 162852ms   Avg: 162158ms
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;with patch&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2015-07-03 17:26:02,496 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest] Summary of timings (ms): [150311, 150721, 150350, 149602, 150339, 150593, 151117, 149046, 150403, 150087]
2015-07-03 17:26:02,497 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest]      Min: 149046ms   Max: 151117ms   Avg: 150256ms

2015-07-03 17:43:52,968 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest] Summary of timings (ms): [148812, 148077, 148482, 148160, 148479, 147835, 148461, 147683, 148499, 149299]
2015-07-03 17:43:52,970 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest]      Min: 147683ms   Max: 149299ms   Avg: 148378ms

2015-07-03 17:46:30,247 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest] Summary of timings (ms): [149254, 148839, 148658, 148982, 148443, 147960, 148590, 148508, 148855, 148767]
2015-07-03 17:46:30,248 INFO  [main] hbase.PerformanceEvaluation: [RandomReadTest]      Min: 147960ms   Max: 149254ms   Avg: 148685ms

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We see significant gain.  Currently note that we are copying the offheap buckets to the onheap single BB.  The blockSeek positional based reads and some optimization in the KeyOnlyKV is the reason for this performance gain.   Even without MBB we should be able to see the same gain because now the MBB is going to act as a wrapper over the single BB that was formed from the underlying offheap buckets.&lt;/p&gt;</comment>
                            <comment id="14612902" author="ram_krish" created="Fri, 3 Jul 2015 06:43:08 +0000"  >&lt;p&gt;We get around 9 to 10 % improvement.&lt;/p&gt;</comment>
                            <comment id="14612916" author="ram_krish" created="Fri, 3 Jul 2015 06:55:00 +0000"  >&lt;p&gt;Try QA.&lt;/p&gt;</comment>
                            <comment id="14612998" author="anoop.hbase" created="Fri, 3 Jul 2015 08:29:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;We get around 9 to 10 % improvement.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is great Ram.. Thanks for doing the perf test for every sub task..  Yes the MBB and usage of its we tried to save every op as much as possible..  When we avoid the temp on heap buffer creation and copy and MBB actually wraps the underlying offheap BBs only, we will be able to see much more gain.   Random performance is the main thing we are expecting there too.&lt;/p&gt;</comment>
                            <comment id="14613367" author="yuzhihong@gmail.com" created="Fri, 3 Jul 2015 18:10:59 +0000"  >&lt;p&gt;For MultiByteBufferInputStream :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (len &amp;lt;= 0) {
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 0;
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above check can be lifted to beginning of method.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; skip(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; n) {
+    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; k = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(n, available());
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (k &amp;lt; 0) {
+      k = 0;
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When k is 0, we can directly return from method, right ?&lt;/p&gt;</comment>
                            <comment id="14613620" author="hadoopqa" created="Sat, 4 Jul 2015 09:17:07 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12743465/HBASE-12213_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12743465/HBASE-12213_2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e640f1e76af8f32015f475629610da127897f01e.&lt;br/&gt;
  ATTACHMENT ID: 12743465&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 47 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 20 javac compiler warnings (more than the master&apos;s current 13 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1914 checkstyle errors (more than the master&apos;s current 1898 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +   * Fetches the short at the given index. Does not change position of the underlying ByteBuffers. The&lt;br/&gt;
+   * difference for this API from &lt;/p&gt;
{@link #getShort(int)}
&lt;p&gt; is the caller is sure that the index will be&lt;br/&gt;
+   * Fetches the long at the given index. Does not change position of the underlying ByteBuffers. The&lt;br/&gt;
+  public static void copy(ByteBuffer src, int srcOffset, ByteBuffer dest, int destOffset, int length) {&lt;br/&gt;
+            assertBuffersEqual(new MultiByteBuffer(expectedBuffer), actualBuffer, algo, encoding, pread);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 4 zombie test(s): 	at org.apache.hadoop.hbase.security.access.TestWithDisabledAuthorization.testPassiveMasterOperations(TestWithDisabledAuthorization.java:516)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14654//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14614793" author="ram_krish" created="Mon, 6 Jul 2015 09:48:07 +0000"  >&lt;p&gt;Updated patch correcting the javadoc and checkstyle comments.&lt;/p&gt;</comment>
                            <comment id="14614809" author="anoop.hbase" created="Mon, 6 Jul 2015 10:04:54 +0000"  >&lt;p&gt;Pls add the patch in RB&lt;/p&gt;</comment>
                            <comment id="14614969" author="hadoopqa" created="Mon, 6 Jul 2015 12:32:41 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12743695/HBASE-12213_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12743695/HBASE-12213_4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 7d3456d8fd027e252b1da7578e943f146626135d.&lt;br/&gt;
  ATTACHMENT ID: 12743695&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 51 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 20 javac compiler warnings (more than the master&apos;s current 16 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14673//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14673//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14673//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14673//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14673//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14673//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14673//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14673//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14614988" author="ram_krish" created="Mon, 6 Jul 2015 12:49:41 +0000"  >&lt;p&gt;Adding some jmh files that imitates the blockSeek behaviour in terms of the mark, reset and skipping to read till the end of the block.&lt;/p&gt;</comment>
                            <comment id="14615267" author="ram_krish" created="Mon, 6 Jul 2015 16:22:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/36206/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/36206/&lt;/a&gt; - RB link&lt;/p&gt;</comment>
                            <comment id="14622149" author="ram_krish" created="Fri, 10 Jul 2015 11:06:13 +0000"  >&lt;p&gt;Patch in RB.  For getting any checkstyles and longlines.&lt;/p&gt;</comment>
                            <comment id="14622310" author="hadoopqa" created="Fri, 10 Jul 2015 13:47:24 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12744692/HBASE-12213_8_withBBI.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12744692/HBASE-12213_8_withBBI.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit bff911a8e894f59f6efe6a24f39a7aef5d689882.&lt;br/&gt;
  ATTACHMENT ID: 12744692&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 65 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 24 javac compiler warnings (more than the master&apos;s current 20 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1914 checkstyle errors (more than the master&apos;s current 1896 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +   * The position, limit and mark of the new ByteBuff would be identical to this ByteBuff in terms of&lt;br/&gt;
+   * Copies the specified number of bytes from this ByteBuff&apos;s current position to the byte[]&apos;s offset.&lt;br/&gt;
+   * Fetches the short at the given index. Does not change position of the underlying ByteBuffers. The&lt;br/&gt;
+   * difference for this API from &lt;/p&gt;
{@link #getShort(int)}
&lt;p&gt; the index specified should be after the current&lt;br/&gt;
+   * Writes an int to this ByteBuff at its current position. Also advances the position by size of int&lt;br/&gt;
+   * difference for this API from &lt;/p&gt;
{@link #getInt(int)}
&lt;p&gt; the index specified should be after the current&lt;br/&gt;
+   * Writes a long to this ByteBuff at its current position. Also advances the position by size of long&lt;br/&gt;
+   * Fetches the long at the given index. Does not change position of the underlying ByteBuffers. The&lt;br/&gt;
+   * difference for this API from &lt;/p&gt;
{@link #getLong(int)}
&lt;p&gt; the index specified should be after the current&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14730//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14622530" author="ram_krish" created="Fri, 10 Jul 2015 16:11:43 +0000"  >&lt;p&gt;Corrected the test case. It was assert failure that happens only in test cases.  Corrected the checkstyle and javadoc.  May be some new ones may be due to UnsafeAccess. Renamed SingleByteBuffer to SingleByteBuff and MultiByteBuffer to MultiByteBuff.&lt;/p&gt;</comment>
                            <comment id="14622747" author="hadoopqa" created="Fri, 10 Jul 2015 18:54:31 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12744739/HBASE-12213_9_withBBI.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12744739/HBASE-12213_9_withBBI.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit bff911a8e894f59f6efe6a24f39a7aef5d689882.&lt;br/&gt;
  ATTACHMENT ID: 12744739&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 65 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 24 javac compiler warnings (more than the master&apos;s current 20 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1898 checkstyle errors (more than the master&apos;s current 1896 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14738//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14623361" author="ram_krish" created="Sat, 11 Jul 2015 11:29:55 +0000"  >&lt;p&gt;Updated patch addressing the comments in RB. The patch is still bigger because of the renamin go of the MultiByteBufferInputStream and its testcase to MultiBytebuffInputStream.&lt;/p&gt;</comment>
                            <comment id="14623363" author="ram_krish" created="Sat, 11 Jul 2015 11:34:21 +0000"  >&lt;p&gt;JMH result to indicate the benefit we get for doing ByteBuffer.get(index) with and without Unsafe usage.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Benchmark                                     Mode  Cnt          Score          Error  Units
ByteBufferOperations.getFromDBB              thrpt    5  553436792.275 &#177;  2439422.938  ops/s
ByteBufferOperations.getFromHBB              thrpt    5  350390020.038 &#177;  7289682.918  ops/s
ByteBufferOperations.getUsingBbUtilsFromDBB  thrpt    5  822765318.322 &#177; 31032738.527  ops/s
ByteBufferOperations.getUsingBbUtilsFromHBB  thrpt    5  551660820.090 &#177; 13224452.563  ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14623405" author="hadoopqa" created="Sat, 11 Jul 2015 14:03:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12744880/HBASE-12213_10_withBBI.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12744880/HBASE-12213_10_withBBI.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 5e708746b8d301c2fb22a85b8756129147012374.&lt;br/&gt;
  ATTACHMENT ID: 12744880&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 70 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 24 javac compiler warnings (more than the master&apos;s current 20 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 3 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1901 checkstyle errors (more than the master&apos;s current 1896 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14751//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14624265" author="ram_krish" created="Mon, 13 Jul 2015 06:36:18 +0000"  >&lt;p&gt;Removed some unused imports to correct the CheckStyle comments.&lt;/p&gt;</comment>
                            <comment id="14624405" author="hadoopqa" created="Mon, 13 Jul 2015 09:13:23 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12744988/HBASE-12213_11_withBBI.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12744988/HBASE-12213_11_withBBI.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 5e708746b8d301c2fb22a85b8756129147012374.&lt;br/&gt;
  ATTACHMENT ID: 12744988&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 70 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 24 javac compiler warnings (more than the master&apos;s current 20 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14753//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14624411" author="ram_krish" created="Mon, 13 Jul 2015 09:20:08 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[WARNING] /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBuffUtils.java:38: warning - @param argument &lt;span class=&quot;code-quote&quot;&gt;&quot;buffer&quot;&lt;/span&gt; is not a parameter name.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is the only javadoc warning now. In the last patch I did not change this thinking it was pointing to BytebufferUtils and no such arg was there. My bad. Will correct in follow up patch. &lt;/p&gt;</comment>
                            <comment id="14624441" author="ram_krish" created="Mon, 13 Jul 2015 09:43:13 +0000"  >&lt;p&gt;Corrected the javadoc warning. Also changed the asSubBuffer API that was returning a Pair to accept a Pair as an arg and use the same Pair to set the BB and offset instead of creating it every time.  As per the comments in RB.&lt;/p&gt;</comment>
                            <comment id="14624565" author="ram_krish" created="Mon, 13 Jul 2015 12:05:57 +0000"  >&lt;p&gt;A change needed in ByteBuffUtils.copy API.  Submitting for QA.&lt;/p&gt;</comment>
                            <comment id="14624743" author="hadoopqa" created="Mon, 13 Jul 2015 14:53:43 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12745027/HBASE-12213_12_withBBI.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12745027/HBASE-12213_12_withBBI.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 5e708746b8d301c2fb22a85b8756129147012374.&lt;br/&gt;
  ATTACHMENT ID: 12745027&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 70 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 24 javac compiler warnings (more than the master&apos;s current 20 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 3 zombie test(s): 	at org.apache.hadoop.hbase.wal.TestWALSplit.testLogCannotBeWrittenOnceParsed(TestWALSplit.java:235)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testNotCachingDataBlocksDuringCompactionInternals(TestCacheOnWrite.java:454)&lt;br/&gt;
	at org.apache.hadoop.hbase.io.hfile.TestCacheOnWrite.testNotCachingDataBlocksDuringCompaction(TestCacheOnWrite.java:479)&lt;br/&gt;
	at org.apache.hadoop.hbase.wal.TestWALSplit.testEmptyLogFiles(TestWALSplit.java:477)&lt;br/&gt;
	at org.apache.hadoop.hbase.wal.TestWALSplit.testEmptyOpenLogFiles(TestWALSplit.java:470)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14757//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14757//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14757//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14757//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14757//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14757//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14757//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14757//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14624896" author="ram_krish" created="Mon, 13 Jul 2015 16:31:17 +0000"  >&lt;p&gt;The test cases passes.  Not sure the reason for the failure here.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.dom4j.DocumentException: Error on line 85 of document file:&lt;span class=&quot;code-comment&quot;&gt;///home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase-server/target/surefire-reports/TEST-org.apache.hadoop.hbase.master.TestDistributedLogSplitting.xml : XML document structures must start and end within the same entity. Nested exception: XML document structures must start and end within the same entity.
&lt;/span&gt;	at org.dom4j.io.SAXReader.read(SAXReader.java:482)
	at org.dom4j.io.SAXReader.read(SAXReader.java:264)
	at hudson.tasks.junit.SuiteResult.parse(SuiteResult.java:123)
	at hudson.tasks.junit.TestResult.parse(TestResult.java:273)
	at hudson.tasks.junit.TestResult.parsePossiblyEmpty(TestResult.java:229)
	at hudson.tasks.junit.TestResult.parse(TestResult.java:164)
	at hudson.tasks.junit.TestResult.parse(TestResult.java:147)
	at hudson.tasks.junit.TestResult.&amp;lt;init&amp;gt;(TestResult.java:123)
	at hudson.tasks.junit.JUnitParser$ParseResultCallable.invoke(JUnitParser.java:117)
	at hudson.tasks.junit.JUnitParser$ParseResultCallable.invoke(JUnitParser.java:90)
	at hudson.FilePath$FileCallableWrapper.call(FilePath.java:2474)
	at hudson.remoting.UserRequest.perform(UserRequest.java:118)
	at hudson.remoting.UserRequest.perform(UserRequest.java:48)
	at hudson.remoting.Request$2.run(Request.java:328)
	at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14627635" author="ram_krish" created="Wed, 15 Jul 2015 06:58:22 +0000"  >&lt;p&gt;Updated patch updating the review comments over in RB. Submitting for QA report.&lt;/p&gt;</comment>
                            <comment id="14627654" author="ram_krish" created="Wed, 15 Jul 2015 07:18:18 +0000"  >&lt;p&gt;Consolidating the changes done in this patch as per the discussions/comments over in RB&lt;br/&gt;
-&amp;gt; This patch now allows the read path to work with ByteBuff a new abstract class added (since we cannot subclass ByteBuffers).&lt;br/&gt;
The name ByteBuff was selected to avoid conflict with netty&apos;s ByteBuf and also that ByteBuffer is already used by nio.&lt;br/&gt;
-&amp;gt; This abstract class can have a SingleByteBuff impl or MultipleByteBuff impl.  In case of the blocks coming out of L1 cache HDFS it will always be singleByteBuff.  This SingleByteBuff wraps the incoming BB from the HDFS and L1 cache.&lt;br/&gt;
-&amp;gt; In case of BucketCache, we will create a MultiByteBuff (an array of BBs) and the read path would work on this MultiByteBuffs using the API in the ByteBuff interface.  For now, even from the BucketCache we copy the buckets to a single onheap BB. This can be changed only after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12295&quot; title=&quot;Prevent block eviction under us if reads are in progress from the BBs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12295&quot;&gt;&lt;del&gt;HBASE-12295&lt;/del&gt;&lt;/a&gt; goes in. Once &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12295&quot; title=&quot;Prevent block eviction under us if reads are in progress from the BBs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12295&quot;&gt;&lt;del&gt;HBASE-12295&lt;/del&gt;&lt;/a&gt; we will not copy the buckets and instead serve them directly from the buckets using the ByteBuff&apos;s APIs thus ensuring that an offheap bucket cache will serve the reads from the offheap.&lt;br/&gt;
-&amp;gt; After this change goes in and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12295&quot; title=&quot;Prevent block eviction under us if reads are in progress from the BBs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12295&quot;&gt;&lt;del&gt;HBASE-12295&lt;/del&gt;&lt;/a&gt;, we need to ensure that we use the BufferBacked cells in the read path both for the non DBE case and DBE case.&lt;br/&gt;
-&amp;gt; There are some changes done in the HFileReaderImpl blockSeek that tries to use the ByteBuff APIs such that they are more optimized and performance oriented, like getIntStrictlyFwd(), getLongStrictlyFwd() ( the naming of this API is under discussion and also thinking if we could pass a delta position from the current postion).  But the point is that these APIs try to utilize the position based BBUtils Unsafe accessing of the Bytebuffers and thus bypassing the ByteBuffer&apos;s bookkeeping that it does on the read APIs.&lt;/p&gt;
</comment>
                            <comment id="14627776" author="hadoopqa" created="Wed, 15 Jul 2015 09:24:05 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12745396/HBASE-12213_13_withBBI.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12745396/HBASE-12213_13_withBBI.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 2f327c911056d02813f642503db9a4383e8b4a2f.&lt;br/&gt;
  ATTACHMENT ID: 12745396&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 70 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 24 javac compiler warnings (more than the master&apos;s current 20 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1874 checkstyle errors (more than the master&apos;s current 1873 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +   *        a single ByteBuffer and offset in that Buffer where the bytes starts. Since this API gets&lt;br/&gt;
+   *        called in a loop we are passing a pair to it which could be created outside the loop and &lt;br/&gt;
+   *        the method would set the values on the pair that is passed in by the caller. This it avoid&lt;br/&gt;
+   *        more object creations that would happen if the pair that is returned is created by this method&lt;br/&gt;
+      searcher = DecoderFactory.checkOut(block.asSubByteBuffer(block.limit() - block.position()), true);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.cxf.jaxb.DocLiteralInInterceptorTest.testInterceptorInboundWrapped(DocLiteralInInterceptorTest.java:95)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14778//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14627929" author="ram_krish" created="Wed, 15 Jul 2015 11:47:00 +0000"  >&lt;p&gt;Updated patch fixing the checkstyle and javadoc.  Also removes the ByteBuff.copy() API - the static one and move that to as abstract method put(offset, src, srcOffset, srcLength) in the Bytebuff as per Anoop&apos;s suggestion. &lt;/p&gt;</comment>
                            <comment id="14628095" author="hadoopqa" created="Wed, 15 Jul 2015 14:09:45 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12745429/HBASE-12213_14_withBBI.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12745429/HBASE-12213_14_withBBI.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit a63e3ac83ffb91948f464e4f62111d29adc02812.&lt;br/&gt;
  ATTACHMENT ID: 12745429&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 70 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 24 javac compiler warnings (more than the master&apos;s current 20 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14782//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14782//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14782//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14782//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14782//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14782//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14782//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14782//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14628345" author="ram_krish" created="Wed, 15 Jul 2015 16:49:17 +0000"  >&lt;p&gt;The test failure seems to be unrelated.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.hadoop.hbase.master.TestDistributedLogSplitting.xml : XML document structures must start and end within the same entity. Nested exception: XML document structures must start and end within the same entity.
	at org.dom4j.io.SAXReader.read(SAXReader.java:482)
	at org.dom4j.io.SAXReader.read(SAXReader.java:264)
	at hudson.tasks.junit.SuiteResult.parse(SuiteResult.java:123)
	at hudson.tasks.junit.TestResult.parse(TestResult.java:273)
	at hudson.tasks.junit.TestResult.parsePossiblyEmpty(TestResult.java:229)
	at hudson.tasks.junit.TestResult.parse(TestResult.java:164)
	at hudson.tasks.junit.TestResult.parse(TestResult.java:147)
	at hudson.tasks.junit.TestResult.&amp;lt;init&amp;gt;(TestResult.java:123)
	at hudson.tasks.junit.JUnitParser$ParseResultCallable.invoke(JUnitParser.java:117)
	at hudson.tasks.junit.JUnitParser$ParseResultCallable.invoke(JUnitParser.java:90)
	at hudson.FilePath$FileCallableWrapper.call(FilePath.java:2474)
	at hudson.remoting.UserRequest.perform(UserRequest.java:118)
	at hudson.remoting.UserRequest.perform(UserRequest.java:48)
	at hudson.remoting.Request$2.run(Request.java:328)
	at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.run(&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.java:745)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Sometime this happens. The test case seems to pass locally.&lt;/p&gt;</comment>
                            <comment id="14630092" author="stack" created="Thu, 16 Jul 2015 18:00:48 +0000"  >&lt;p&gt;Porting +1 from rb. Fix javadoc before committing.  There are some followons on rb too.  Nice work &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ramkrishna.s.vasudevan%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;ramkrishna.s.vasudevan@gmail.com&quot;&gt;ramkrishna vasudevan&lt;/a&gt; Add fat release note talking up new ByteBuff.&lt;/p&gt;</comment>
                            <comment id="14630774" author="ram_krish" created="Fri, 17 Jul 2015 04:52:27 +0000"  >&lt;p&gt;Patch for one QA run before committing. In case there are any warnings.&lt;/p&gt;</comment>
                            <comment id="14630917" author="hadoopqa" created="Fri, 17 Jul 2015 07:44:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12745755/HBASE-12213_final.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12745755/HBASE-12213_final.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit a249989b93881b40a0919dc2fbd98530e05b6cf2.&lt;br/&gt;
  ATTACHMENT ID: 12745755&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 70 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The applied patch generated 24 javac compiler warnings (more than the master&apos;s current 20 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14811//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14811//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14811//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14811//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14811//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14811//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14811//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14811//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14630933" author="ram_krish" created="Fri, 17 Jul 2015 08:00:38 +0000"  >&lt;p&gt;Pushed to master. Will update the release notes shortly.&lt;br/&gt;
Thanks for the patient reviews and nice feedbacks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;.&lt;br/&gt;
The javac warnings should be due to the Unsafe method additions.&lt;/p&gt;</comment>
                            <comment id="14631034" author="anoop.hbase" created="Fri, 17 Jul 2015 08:49:39 +0000"  >&lt;p&gt;Excellent !! Appreciate your effort..&lt;/p&gt;</comment>
                            <comment id="14631061" author="hudson" created="Fri, 17 Jul 2015 09:05:19 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6660 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6660/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6660/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12213&quot; title=&quot;HFileBlock backed by Array of ByteBuffers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12213&quot;&gt;&lt;del&gt;HBASE-12213&lt;/del&gt;&lt;/a&gt; HFileBlock backed by Array of ByteBuffers (Ram) (ramkrishna: rev 834f87b23de533783ba5f5b858327a6164f17f55)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockCompatibility.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket/TestByteBufferIOEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CompoundBloomFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/ByteBufferIOEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/nio/TestMultiByteBuff.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/io/TestByteBufferInputStream.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV3.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/nio/ByteBuff.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/FileIOEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/io/TestMultiByteBuffInputStream.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileWriterV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/encoding/TestDataBlockEncoders.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/IOEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/PrefixTreeSeeker.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestChecksum.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/CacheTestUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketCache.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/UnsafeAccess.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuffer.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/nio/TestMultiByteBuffer.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestBloomFilterChunk.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/TableLockChecker.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/nio/SingleByteBuff.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBufferInputStream.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheableDeserializer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestByteBuffUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestHFile.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/Hash.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/MemcachedBlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestByteBufferUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilterChunk.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilterUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-prefix-tree/src/main/java/org/apache/hadoop/hbase/codec/prefixtree/PrefixTreeCodec.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBuffInputStream.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultDecodingContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14642948" author="hudson" created="Mon, 27 Jul 2015 16:26:00 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6679 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6679/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6679/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14063&quot; title=&quot;Use BufferBackedCell in read path after HBASE-12213 and HBASE-12295&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14063&quot;&gt;&lt;del&gt;HBASE-14063&lt;/del&gt;&lt;/a&gt; Use BufferBackedCell in read path after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12213&quot; title=&quot;HFileBlock backed by Array of ByteBuffers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12213&quot;&gt;&lt;del&gt;HBASE-12213&lt;/del&gt;&lt;/a&gt; and (ramkrishna: rev 3f80e0ea4f101298d9dbd574ffcf388afb621d55)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/ByteBufferedKeyOnlyKeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/NoTagsKeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/TestOffheapKeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/SizeCachedNoTagsKeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/OffheapKeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlockIndex.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/OffheapKeyOnlyKeyValue.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilterUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderImpl.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket/TestByteBufferIOEngine.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/ByteBufferIOEngine.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12838078">HBASE-13916</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12845881">HBASE-14116</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12845882">HBASE-14117</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12743292" name="HBASE-12213_1.patch" size="136937" author="ram_krish" created="Thu, 2 Jul 2015 11:54:54 +0000"/>
                            <attachment id="12744880" name="HBASE-12213_10_withBBI.patch" size="264260" author="ram_krish" created="Sat, 11 Jul 2015 11:29:55 +0000"/>
                            <attachment id="12744988" name="HBASE-12213_11_withBBI.patch" size="266215" author="ram_krish" created="Mon, 13 Jul 2015 06:36:18 +0000"/>
                            <attachment id="12745027" name="HBASE-12213_12_withBBI.patch" size="268017" author="ram_krish" created="Mon, 13 Jul 2015 12:05:57 +0000"/>
                            <attachment id="12745008" name="HBASE-12213_12_withBBI.patch" size="266996" author="ram_krish" created="Mon, 13 Jul 2015 09:43:13 +0000"/>
                            <attachment id="12745396" name="HBASE-12213_13_withBBI.patch" size="269107" author="ram_krish" created="Wed, 15 Jul 2015 06:58:22 +0000"/>
                            <attachment id="12745429" name="HBASE-12213_14_withBBI.patch" size="268426" author="ram_krish" created="Wed, 15 Jul 2015 11:47:00 +0000"/>
                            <attachment id="12743465" name="HBASE-12213_2.patch" size="128328" author="ram_krish" created="Fri, 3 Jul 2015 06:55:00 +0000"/>
                            <attachment id="12743695" name="HBASE-12213_4.patch" size="133156" author="ram_krish" created="Mon, 6 Jul 2015 09:48:07 +0000"/>
                            <attachment id="12744692" name="HBASE-12213_8_withBBI.patch" size="202838" author="ram_krish" created="Fri, 10 Jul 2015 11:06:13 +0000"/>
                            <attachment id="12744739" name="HBASE-12213_9_withBBI.patch" size="247757" author="ram_krish" created="Fri, 10 Jul 2015 16:11:43 +0000"/>
                            <attachment id="12745755" name="HBASE-12213_final.patch" size="268690" author="ram_krish" created="Fri, 17 Jul 2015 04:52:27 +0000"/>
                            <attachment id="12743717" name="HBASE-12213_jmh.zip" size="22222" author="ram_krish" created="Mon, 6 Jul 2015 12:49:41 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Oct 2014 23:40:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 20 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i20z0n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>The read path from the Hfileblock is now backed by a new data structure represented by an abstract class ByteBuff. The name is similar to nio ByteBuffer.&lt;br/&gt;
The new ByteBuff class has various APIs to read and write primitives to the underlying implementation similar to how nio ByteBuffer provides.&lt;br/&gt;
We have 2 implementations of the ByteBuff now - a single ByteBuffer backed implementation (SingleByteBuff) and a multiple ByteBuffer backed implementation (MultiByteBuff).&lt;br/&gt;
The single byte buffer (SingleByteBuff) backed implementation will be used for the HFileBlocks that come from HDFS and from LRU cachce.&lt;br/&gt;
The blocks that gets created out of BucketCache will be of type MultiByteBuff and the read operations are performed over this data structure which intelligently moves across different Byte buffers that it is formed of.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>