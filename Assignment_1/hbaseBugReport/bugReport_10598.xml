<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:15:24 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10598/HBASE-10598.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10598] Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10598</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In our test environment, we find written data can&apos;t be read out occasionally. After debugging, we find that maximumTimestamp/minimumTimestamp of MemStore#timeRangeTracker might decrease/increase when MemStore#timeRangeTracker is updated concurrently, which might make the MemStore/StoreFile to be filtered incorrectly when reading data out. Let&apos;s see how the concurrent updating of timeRangeTracker#maximumTimestamp cause this problem. &lt;br/&gt;
Imagining there are two threads T1 and T2 putting two KeyValues kv1 and kv2. kv1 and kv2 belong to the same Store(so belong to the same region), but contain different rowkeys. Consequently, kv1 and kv2 could be updated concurrently. When we see the implementation of HRegionServer#multi, kv1 and kv2 will be add to MemStore by HRegion#applyFamilyMapToMemstore in HRegion#doMiniBatchMutation. Then, MemStore#internalAdd will be invoked and MemStore#timeRangeTracker will be updated by TimeRangeTracker#includeTimestamp as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void includeTimestamp(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; timestamp) {
     ...
    &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (maximumTimestamp &amp;lt; timestamp) {
      maximumTimestamp = timestamp;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Imagining the current maximumTimestamp of TimeRangeTracker is t0 before includeTimestamp(...) invoked, kv1.timestamp=t1,  kv2.timestamp=t2, t1 and t2 are both set by user(then, user knows the timestamps of kv1 and kv2), and t1 &amp;gt; t2 &amp;gt; t0. T1 and T2 will be executed concurrently, therefore, the two threads might both find the current maximumTimestamp is less than the timestamp of its kv. After that, T1 and T2 will both set maximumTimestamp to timestamp of its kv. If T1 set maximumTimestamp before T2 doing that, the maximumTimestamp will be set to t2. Then, before any new update with bigger timestamp has been applied to the MemStore, if we try to read out kv1 by HTable#get and set the timestamp of &apos;Get&apos; to t1, the StoreScanner will decide whether the MemStoreScanner(imagining kv1 has not been flushed) should be selected as candidate scanner by MemStoreScanner#shouldUseScanner. Then, the MemStore won&apos;t be selected in MemStoreScanner#shouldUseScanner because maximumTimestamp of the MemStore has been set to t2 (t2 &amp;lt; t1). Consequently, the written kv1 can&apos;t be read out and kv1 is lost from user&apos;s perspective.&lt;br/&gt;
If the above analysis is right, after maximumTimestamp of MemStore#timeRangeTracker has been set to t2, user will experience data lass in the following situations:&lt;br/&gt;
1. Before any new write with kv.timestamp &amp;gt; t1 has been add to the MemStore, read request of kv1 with timestamp=t1 can not read kv1 out.&lt;br/&gt;
2. Before any new write with kv.timestamp &amp;gt; t1 has been add to the MemStore, if a flush happened, the data of MemStore will be flushed to StoreFile with StoreFile#maximumTimestamp set to t2. After that, any read request with timestamp=t1 can not read kv1 before next compaction(Actually, kv1.timestamp might not be included in timeRange of the StoreFile even after compaction).&lt;br/&gt;
The second situation is much more serious because the incorrect timeRange of MemStore has been persisted to the file. &lt;br/&gt;
Similarly, the concurrent update of TimeRangeTracker#minimumTimestamp may also cause this problem.&lt;br/&gt;
As a simple way to fix the problem, we could add synchronized to TimeRangeTracker#includeTimestamp so that this method won&apos;t be invoked concurrently.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12696880">HBASE-10598</key>
            <summary>Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cuijianwei">Jianwei Cui</assignee>
                                    <reporter username="cuijianwei">Jianwei Cui</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Feb 2014 10:02:20 +0000</created>
                <updated>Thu, 14 Aug 2014 20:20:09 +0000</updated>
                            <resolved>Wed, 26 Feb 2014 23:13:59 +0000</resolved>
                                    <version>0.94.16</version>
                                    <fixVersion>0.96.2</fixVersion>
                    <fixVersion>0.98.1</fixVersion>
                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>0.94.18</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13910669" author="enis" created="Mon, 24 Feb 2014 19:08:53 +0000"  >&lt;p&gt;Nice finding! Can we do this with two AtomicLongs with compare and set? &lt;/p&gt;</comment>
                            <comment id="13911035" author="stack" created="Tue, 25 Feb 2014 00:21:46 +0000"  >&lt;p&gt;Excellent digging &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cuijianwei&quot; class=&quot;user-hover&quot; rel=&quot;cuijianwei&quot;&gt;Jianwei Cui&lt;/a&gt;.   Good job.   I wonder if given all other accesses are not synchronized, should we do as Enis suggests?  (I was going to talk of making the data members volatile... which would be about the same thing.&lt;/p&gt;</comment>
                            <comment id="13911125" author="xieliang007" created="Tue, 25 Feb 2014 02:11:43 +0000"  >&lt;p&gt;raise to &quot;critical&quot; since this multi-thread issue intruduced a correctness problem...&lt;/p&gt;</comment>
                            <comment id="13911161" author="cuijianwei" created="Tue, 25 Feb 2014 02:45:37 +0000"  >&lt;p&gt;Thanks for your comments &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt;. Becuase AtomicLong#compareAndSet can only update value based on equivalent judgement, we might need the following code to update maximumTimestamp in TimeRangeTracker#includeTimestamp if defining it as AtomicLong.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
AtomicLong maximumTimestamp = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AtomicLong(-1);
...
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void includeTimestamp(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; timestamp) {
    ....
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; lastTimestamp = maximumTimestamp.get();
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (lastTimestamp &amp;lt; timestamp &amp;amp;&amp;amp; maximumTimestamp.compareAndSet(lastTimestamp, timestamp)) {
      lastTimestamp = maximumTimestamp.get();
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Will there be a simple way to use AtomicLong to do the logic in this method? On the other hand, if we add synchronized to TimeRangeTracker#includeTimestamp, we also need to make the data members volatile as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; suggested. &lt;/p&gt;</comment>
                            <comment id="13911912" author="enis" created="Tue, 25 Feb 2014 19:16:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;Will there be a simple way to use AtomicLong to do the logic in this method?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think the way you put is correct. I don&apos;t think we can simplify it further. &lt;br/&gt;
I suggested AtomicLongs, because we need to sync other methods as well. Have not done a perf comparison for which would be faster. &lt;/p&gt;</comment>
                            <comment id="13911977" author="lhofhansl" created="Tue, 25 Feb 2014 19:58:48 +0000"  >&lt;p&gt;Scary stuff.&lt;br/&gt;
I&apos;d say we make this one method synchronized and all members volatile. (and cross finger it won&apos;t cause a perf issue)&lt;/p&gt;</comment>
                            <comment id="13911994" author="stack" created="Tue, 25 Feb 2014 20:12:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d say we make this one method synchronized and all members volatile. (and cross finger it won&apos;t cause a perf issue)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds reasonable... (This method is only writer?)&lt;/p&gt;</comment>
                            <comment id="13912087" author="lhofhansl" created="Tue, 25 Feb 2014 21:32:15 +0000"  >&lt;p&gt;Thinking about it a bit more, so &lt;b&gt;every&lt;/b&gt; memstore add will now need to go through synchronized (even if uncontended in most case there&apos;s still the cost of memory fences).&lt;br/&gt;
I guess there is no other way.&lt;/p&gt;</comment>
                            <comment id="13912109" author="stack" created="Tue, 25 Feb 2014 21:40:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;I guess there is no other way.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can the class be immutable? Make a new one when you&apos;d change the values?&lt;/p&gt;</comment>
                            <comment id="13912195" author="enis" created="Tue, 25 Feb 2014 22:49:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can the class be immutable? Make a new one when you&apos;d change the values?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Even so you need compareAndSet(). &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;so every memstore add will now need to go through synchronized&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I am not sure whether sync + volatile&apos;s or atomicLongs with compareAndSet()&apos;s would be faster. &lt;/p&gt;</comment>
                            <comment id="13912206" author="lhofhansl" created="Tue, 25 Feb 2014 23:01:25 +0000"  >&lt;p&gt;volatile/synchronized/amotics will all be equally bad. This is a very hot code path and each memory fence taken will hurt. Maybe we can lock outlike (at the memstore or even store level). That way we can lock only once for a bulkput.&lt;/p&gt;</comment>
                            <comment id="13912452" author="cuijianwei" created="Wed, 26 Feb 2014 02:48:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;I suggested AtomicLongs, because we need to sync other methods as well. Have not done a perf comparison for which would be faster. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It seems TimeRangeTracker#includeTimestamp is the only write method which will update the data member. Therefore, sync + volatile&apos;s should do the same thing as atomicLongs. I think we can do some pressure tests to see whether there will be performance issue(sync + volatile&apos;s, or AtomicLong)? and which one will be faster? &lt;/p&gt;</comment>
                            <comment id="13912456" author="cuijianwei" created="Wed, 26 Feb 2014 02:53:02 +0000"  >{quota}Maybe we can lock outlike (at the memstore or even store level). That way we can lock only once for a bulkput.{quota}
&lt;p&gt;Sounds reasonable, if a put contains many kvs under the same column family, it seems locking at store level will do better.&lt;/p&gt;</comment>
                            <comment id="13912493" author="lhofhansl" created="Wed, 26 Feb 2014 04:15:55 +0000"  >&lt;p&gt;In other tests on the scanning side I found that explicit locks (ReentrantLock) perform better under low contention compared to intrinsic locks (synchronized), that is counter to common wisdom but could easily validate that across various architectures and JDK versions. We should experiment with this here as well.&lt;/p&gt;</comment>
                            <comment id="13912520" author="stack" created="Wed, 26 Feb 2014 05:05:09 +0000"  >&lt;p&gt;Hmm... we take a read lock on the HStore to &apos;add&apos; a kv.&lt;/p&gt;

&lt;p&gt;Looking, TimeRangeTracker is just not thread safe (and it implements Writable still).&lt;/p&gt;

&lt;p&gt;Make it correct first and then work on fixing speed up in another issue?&lt;/p&gt;

&lt;p&gt;The two internal longs are tied.  Just synchronize the method that changes them and the getters?  They are updated on every add/delete and read frequently seeking checking time range so yeah, hotspot here.&lt;/p&gt;
</comment>
                            <comment id="13912588" author="lhofhansl" created="Wed, 26 Feb 2014 06:59:08 +0000"  >&lt;p&gt;Agreed. Let&apos;s make it correct first.&lt;br/&gt;
(my observation was that if we do a single put into the memstore we probably do not care that much about some extra overhead since it would be negligible compared to the RPC/network times, but if we do batch puts we might care).&lt;/p&gt;</comment>
                            <comment id="13912602" author="cuijianwei" created="Wed, 26 Feb 2014 07:25:55 +0000"  >&lt;p&gt;Agreed. I add synchronize to the update method and the getters of data member. We can check whether there will performance issue in another jira. &lt;/p&gt;</comment>
                            <comment id="13913700" author="stack" created="Wed, 26 Feb 2014 23:13:59 +0000"  >&lt;p&gt;Committed to 0.94-0.99.  Nice find &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cuijianwei&quot; class=&quot;user-hover&quot; rel=&quot;cuijianwei&quot;&gt;Jianwei Cui&lt;/a&gt;  Thanks for the patch.&lt;/p&gt;</comment>
                            <comment id="13913827" author="hudson" created="Thu, 27 Feb 2014 00:54:15 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94-security #424 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/424/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/424/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572334)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13913887" author="hudson" created="Thu, 27 Feb 2014 01:34:29 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94 #1302 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/1302/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/1302/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572334)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13913890" author="hudson" created="Thu, 27 Feb 2014 01:37:32 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.94-JDK7 #66 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-JDK7/66/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-JDK7/66/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572334)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13913907" author="hudson" created="Thu, 27 Feb 2014 01:49:27 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.94-on-Hadoop-2 #34 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-on-Hadoop-2/34/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-on-Hadoop-2/34/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572334)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13913929" author="hudson" created="Thu, 27 Feb 2014 02:08:13 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.96-hadoop2 #218 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96-hadoop2/218/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96-hadoop2/218/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572331)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13914031" author="hudson" created="Thu, 27 Feb 2014 04:05:09 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #188 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/188/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/188/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572332)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13914086" author="hudson" created="Thu, 27 Feb 2014 05:11:56 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #176 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/176/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/176/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572332)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13914099" author="hudson" created="Thu, 27 Feb 2014 05:34:12 +0000"  >&lt;p&gt;FAILURE: Integrated in hbase-0.96 #318 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96/318/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96/318/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572331)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13914112" author="hudson" created="Thu, 27 Feb 2014 05:49:52 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #4961 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4961/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4961/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572333)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13915313" author="hudson" created="Fri, 28 Feb 2014 01:14:27 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK-on-Hadoop-1.1 #101 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/101/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/101/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently (cuijianwei) (stack: rev 1572333)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13919032" author="lhofhansl" created="Tue, 4 Mar 2014 05:28:55 +0000"  >&lt;p&gt;FYI. did some adhoc perf tests, could not discern any performance degradation due to this. The other costs around memstore inserts dominate by far it seems. Will do some more tests, but this is probably not going to cause a perf issue.&lt;/p&gt;</comment>
                            <comment id="13919783" author="hudson" created="Tue, 4 Mar 2014 19:11:19 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94-security #430 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/430/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/430/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574161)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13919839" author="hudson" created="Tue, 4 Mar 2014 19:45:55 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94-JDK7 #73 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-JDK7/73/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-JDK7/73/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574161)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13919880" author="hudson" created="Tue, 4 Mar 2014 20:23:05 +0000"  >&lt;p&gt;ABORTED: Integrated in HBase-0.94-on-Hadoop-2 #40 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-on-Hadoop-2/40/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-on-Hadoop-2/40/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574161)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13919988" author="hudson" created="Tue, 4 Mar 2014 20:47:41 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #4978 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4978/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4978/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574149)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13919992" author="hudson" created="Tue, 4 Mar 2014 20:48:59 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.94 #1309 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/1309/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/1309/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574161)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13920040" author="hudson" created="Tue, 4 Mar 2014 21:26:25 +0000"  >&lt;p&gt;FAILURE: Integrated in hbase-0.96 #327 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96/327/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96/327/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574152)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13920046" author="hudson" created="Tue, 4 Mar 2014 21:29:30 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #187 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/187/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/187/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574148)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13920335" author="hudson" created="Wed, 5 Mar 2014 01:13:42 +0000"  >&lt;p&gt;FAILURE: Integrated in hbase-0.96-hadoop2 #225 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96-hadoop2/225/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96-hadoop2/225/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574152)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13920342" author="hudson" created="Wed, 5 Mar 2014 01:17:34 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK-on-Hadoop-1.1 #107 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/107/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-1.1/107/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574149)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13921454" author="hudson" created="Wed, 5 Mar 2014 21:38:52 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #200 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/200/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/200/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10624&quot; title=&quot;Fix 2 new findbugs warnings introduced by HBASE-10598&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10624&quot;&gt;&lt;del&gt;HBASE-10624&lt;/del&gt;&lt;/a&gt; Fix 2 new findbugs warnings introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10598&quot; title=&quot;Written data can not be read out because MemStore#timeRangeTracker might be updated concurrently&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10598&quot;&gt;&lt;del&gt;HBASE-10598&lt;/del&gt;&lt;/a&gt; (tedyu: rev 1574148)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.98/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/TimeRangeTracker.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12631165" name="HBASE-10598-0.94-v2.patch" size="1605" author="cuijianwei" created="Wed, 26 Feb 2014 07:25:55 +0000"/>
                            <attachment id="12630641" name="HBASE-10598-0.94.v1.patch" size="782" author="cuijianwei" created="Mon, 24 Feb 2014 10:23:29 +0000"/>
                            <attachment id="12631166" name="HBASE-10598-trunk-v1.patch" size="1657" author="cuijianwei" created="Wed, 26 Feb 2014 07:25:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Feb 2014 19:08:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>375355</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 41 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1sokn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>375651</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>