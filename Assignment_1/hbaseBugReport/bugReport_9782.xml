<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:07:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9782/HBASE-9782.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9782] ColumnPaginationFilter doesn&apos;t return the expected versions.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9782</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When ColumnPaginationFilter is used to paginate over the versions of a single row, it&apos;s not returning the exected cells.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12674172">HBASE-9782</key>
            <summary>ColumnPaginationFilter doesn&apos;t return the expected versions.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="jmspaggi">Jean-Marc Spaggiari</assignee>
                                    <reporter username="jmspaggi">Jean-Marc Spaggiari</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Oct 2013 18:32:59 +0000</created>
                <updated>Wed, 16 Oct 2013 18:34:20 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13797090" author="jmspaggi" created="Wed, 16 Oct 2013 18:34:20 +0000"  >&lt;p&gt;The code below creates 10K version of the same cell then try to get the 25 first versions, then the 25 next.&lt;/p&gt;

&lt;p&gt;The first get call will only return 12 cells, and the 2nd one nothing. I will have expected to get the 25 cells each time.&lt;/p&gt;

&lt;p&gt;Tried on 0.94.12.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HBaseConfiguration;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.KeyValue;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Get;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.HTable;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Put;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Result;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Scan;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.filter.ColumnPaginationFilter;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.util.Bytes;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestPut {

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] CF = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;f1&quot;&lt;/span&gt;);
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] C = Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;c&quot;&lt;/span&gt;);

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) {
    HTable table;
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      table = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTable(HBaseConfiguration.create(),Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;t1&quot;&lt;/span&gt;));
      ArrayList&amp;lt;Put&amp;gt; puts = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Put&amp;gt;(10000);
      &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; time = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis();
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; 10000; i++) {
        Put put  = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put (Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;rowid&quot;&lt;/span&gt;));
        put.add(CF, C, time+i, Bytes.toBytes(i));
        puts.add(put);
      }
      table.put(puts);

      Get get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get (Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;rowid&quot;&lt;/span&gt;));
      get.setFilter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ColumnPaginationFilter(25, 0));
      get.addColumn(CF, C);
      get.setMaxVersions(99999);
      Result result = table.get(get); 
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(result.toString());
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (KeyValue kv : result.list() ) {
              &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println( Bytes.toString( kv.getQualifier() ) + &lt;span class=&quot;code-quote&quot;&gt;&quot; : &quot;&lt;/span&gt; + Bytes.toInt( kv.getValue() ) );
      } 

      get = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Get (Bytes.toBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;rowid&quot;&lt;/span&gt;));
      get.setFilter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ColumnPaginationFilter(25, 25));
      get.addColumn(CF, C);
      get.setMaxVersions(99999);
      result = table.get(get); 
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(result.toString());
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (KeyValue kv : result.list() ) {
              &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println( Bytes.toString( kv.getQualifier() ) + &lt;span class=&quot;code-quote&quot;&gt;&quot; : &quot;&lt;/span&gt; + Bytes.toInt( kv.getValue() ) );
      } 

      table.close();
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
      &lt;span class=&quot;code-comment&quot;&gt;// TODO Auto-generated &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; block
&lt;/span&gt;      e.printStackTrace();
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>353794</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 9 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ozw7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354086</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>