<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:53:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8205/HBASE-8205.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8205] HBCK support for table locks</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8205</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Table locks have been introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7305&quot; title=&quot;ZK based Read/Write locks for table operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7305&quot;&gt;&lt;del&gt;HBASE-7305&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7546&quot; title=&quot;Obtain a table read lock on region split operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7546&quot;&gt;&lt;del&gt;HBASE-7546&lt;/del&gt;&lt;/a&gt;, and others (see the design doc at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7305&quot; title=&quot;ZK based Read/Write locks for table operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7305&quot;&gt;&lt;del&gt;HBASE-7305&lt;/del&gt;&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;This issue adds support in HBCK to report and fix possible conditions about table locks. Namely, if due to some bug, the table lock remains not-released, then HBCK should be able to report it, and remove the lock, so that normal table operations will continue. &lt;/p&gt;

&lt;p&gt;Also see the comments in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7977&quot; title=&quot;Online merge should acquire table lock&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7977&quot;&gt;&lt;del&gt;HBASE-7977&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12639470">HBASE-8205</key>
            <summary>HBCK support for table locks</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="enis">Enis Soztutar</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Mar 2013 21:58:21 +0000</created>
                <updated>Mon, 23 Sep 2013 19:08:17 +0000</updated>
                            <resolved>Fri, 12 Apr 2013 22:34:43 +0000</resolved>
                                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.95.1</fixVersion>
                                    <component>hbck</component>
                    <component>master</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13615810" author="enis" created="Wed, 27 Mar 2013 22:02:27 +0000"  >&lt;p&gt;Attaching a patch: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Adds configuration &quot;hbase.table.lock.expire.ms&quot;, 10min by default.&lt;/li&gt;
	&lt;li&gt;HBCK, by default checks for &quot;expired&quot; table locks. Only errors out if some table lock is expired.&lt;/li&gt;
	&lt;li&gt;Adds -fixTableLocks arg to hbck. When set, it deletes the locks, so normal operation can continue.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13615829" author="enis" created="Wed, 27 Mar 2013 22:11:26 +0000"  >&lt;p&gt;Added new file. &lt;/p&gt;</comment>
                            <comment id="13615953" author="jmspaggi" created="Thu, 28 Mar 2013 01:23:44 +0000"  >&lt;p&gt;I gave it a quick look, and it sound good to me. Does it worth it to add a test for TableLockManager.readLock too?&lt;/p&gt;</comment>
                            <comment id="13615970" author="enis" created="Thu, 28 Mar 2013 01:52:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;Does it worth it to add a test for TableLockManager.readLock too?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In terms of zk operations, read and write locks are similar. I don&apos;t think we need to test read locks separately. &lt;/p&gt;</comment>
                            <comment id="13616473" author="jmhsieh" created="Thu, 28 Mar 2013 17:49:41 +0000"  >&lt;p&gt;High order bit &amp;#8211; looks good but have questions about lock semantics in some places.  Please consider improving the javadoc (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8177&quot; title=&quot;Improve javadoc to including more about table lock semantics (failure handling, canonical usage pattern, what the lock guards) &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8177&quot;&gt;HBASE-8177&lt;/a&gt;) so that the table locks  are easier to use/review.&lt;/p&gt;

&lt;p&gt;This seems out of place for the generic lock interface.  Can you explain why this changed?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   */
-  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void reapAllLocks() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void reapAllWriteLocks() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;javadoc: this is both the read and write aspects of the table lock right?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   /**
+   * Visits all table locks, and lock attempts with the given callback
+   * MetadataHandler.
+   * @param handler the metadata handler to call
+   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException If there is an unrecoverable error
+   */
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; void visitLocks(MetadataHandler handler) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
+
+  /**
+   * Force releases table locks that have been held longer than &lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.table.lock.expire.ms&quot;&lt;/span&gt;.
+   * The behavior of the lock holders still thinking that they have the lock is undefined.
+   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException If there is an unrecoverable error
+   */
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; void reapExpiredLocks() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;javadoc here says the value must not be null&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;.  Why is this lock.writeLock(null) ok?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName : tableNames) {
+    @Override
+    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void reapExpiredLocks() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+      &lt;span class=&quot;code-comment&quot;&gt;//get the table names
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableName : getTableNames()) {
           &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tableLockZNode = ZKUtil.joinZNode(zkWatcher.tableLockZNode, tableName);
           ZKInterProcessReadWriteLock lock = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ZKInterProcessReadWriteLock(
               zkWatcher, tableLockZNode, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
-          lock.writeLock(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;).reapAllLocks();
+          lock.writeLock(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;).reapExpiredLocks(lockExpireTimeoutMs);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Should this happen before or after the other repairs?  At the least it should be documented so that the user could pick and choose which repair to do.  It might be better to have it so that if no other repair features are flagged this is the only thing run (so we don&apos;t pound the fs gathering info).&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -455,6 +457,8 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class HBaseFsck &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Configured &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Tool {
 
     offlineReferenceFileRepair();
 
+    checkAndFixTableLocks();
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;comment nit: double negatives are complicated&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    hbck = doFsck(conf, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
+    assertNoErrors(hbck); &lt;span class=&quot;code-comment&quot;&gt;//should not have expired no problems
&lt;/span&gt;+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;nit: changed to more explicit code for readability?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

     @Override
     &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; compare(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; zNode1, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; zNode2) {
-      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; seq1 = getChildSequenceId(zNode1);
-      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; seq2 = getChildSequenceId(zNode2);
-      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; seq1 - seq2;
+      &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; seq1 = getChildSequenceId(zNode1);
+      &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; seq2 = getChildSequenceId(zNode2);
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (seq1 == seq2) {
+        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 0;
+      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; seq1 &amp;lt; seq2 ? -1 : 1;
+      }
     }
   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Need to explain the false cases in javadoc.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -304,28 +308,40 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class ZKInterProcessLockBase &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; InterProcessLock {
   }
 
   /**
+   * &lt;span class=&quot;code-object&quot;&gt;Process&lt;/span&gt; metadata stored in a ZNode using a callback
+   * &amp;lt;p&amp;gt;
+   * @param lockZNode The node holding the metadata
+   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; True &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; metadata was ready and processed
+   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException If an unexpected ZooKeeper error occurs
+   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException If interrupted when reading the metadata
+   */
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; handleLockMetadata(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; lockZNode)
+      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; handleLockMetadata(lockZNode, handler);
+  }
+
+  /**
    * &lt;span class=&quot;code-object&quot;&gt;Process&lt;/span&gt; metadata stored in a ZNode using a callback object passed to
    * &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; instance.
    * &amp;lt;p&amp;gt;
    * @param lockZNode The node holding the metadata
+   * @param handler the metadata handler
    * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; True &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; metadata was ready and processed
    * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException If an unexpected ZooKeeper error occurs
    * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException If interrupted when reading the metadata
    */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;help me here &amp;#8211; what does the magic value mean?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (children.size() &amp;gt; 0) {
+      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; currentLockHolder = getLockPath(&lt;span class=&quot;code-quote&quot;&gt;&quot;lock-9999999999&quot;&lt;/span&gt;, children);
+      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; child : children) {
+        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; znode = ZKUtil.joinZNode(parentLockNode, child);
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ah &amp;#8211; here&apos;s the javadoc on the behavior of reapAll* and r/w aspects that I asked about earlier I believe.  Put this in the interface and then inheritdoc + add the zk data here?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  /**
+   * Will delete all lock znodes (read and write) which are &lt;span class=&quot;code-quote&quot;&gt;&quot;expired&quot;&lt;/span&gt; according to
+   * timeout. Assumption is that the clock skew between zookeeper and &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; servers
+   * is negligible.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;nice test in TestHBaseFsck.&lt;/p&gt;



&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://hbase.apache.org/apidocs/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadWriteLock.html#readLock(byte[&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/apidocs/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadWriteLock.html#readLock(byte[&lt;/a&gt;])&lt;/p&gt;</comment>
                            <comment id="13616515" author="enis" created="Thu, 28 Mar 2013 18:37:53 +0000"  >&lt;p&gt;Thanks Jon for taking a look,&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This seems out of place for the generic lock interface. Can you explain why this changed?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;To reflect what the function actually does. It only deletes write locks. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;javadoc: this is both the read and write aspects of the table lock right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, if it does not say read or write explicitly, it means all locks. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;javadoc here says the value must not be null&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;. Why is this lock.writeLock(null) ok?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We are passing null, because we won&apos;t attempt to acquire() the lock. So it is fine. Metadata is serialized inside the znode. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;comment nit: double negatives are complicated&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should have read: &quot;should not have expired, no problems&quot; (notice the added &quot;,&quot;). Added it in the next version&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Need to explain the false cases in javadoc.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;done&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;help me here &#8211; what does the magic value mean?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Zk SEQUENTIAL nodes contain 10-digit sequence number appended, which is explained in ZKInterProcessLockBase.ZNodeComparator.getChildSequenceId(). This sends the largest sequence value. I&apos;ll add some more comments in the line. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Put this in the interface and then inheritdoc + add the zk data here?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Those interfaces are not in a hierarchy. TableLockManager.reapExpiredLocks() uses ZKInterProcessWriteLock.reapExpiredLocks() internally. &lt;/p&gt;

&lt;p&gt;I&apos;ve put up the patch in RB, should you have any further comments.&lt;/p&gt;</comment>
                            <comment id="13616517" author="enis" created="Thu, 28 Mar 2013 18:40:39 +0000"  >&lt;p&gt;RB here: &lt;a href=&quot;https://reviews.apache.org/r/10169/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/10169/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13616809" author="hadoopqa" created="Thu, 28 Mar 2013 23:22:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12575777/hbase-8205_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12575777/hbase-8205_v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5034//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5034//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13629455" author="enis" created="Thu, 11 Apr 2013 22:02:44 +0000"  >&lt;p&gt;Re-attaching rebased patch for hadoopqa. Will commit if passes. &lt;/p&gt;</comment>
                            <comment id="13629546" author="hadoopqa" created="Thu, 11 Apr 2013 23:17:44 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12578294/hbase-8205_v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12578294/hbase-8205_v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 6 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5276//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13629877" author="enis" created="Fri, 12 Apr 2013 07:20:41 +0000"  >&lt;p&gt;Fixed javadoc. &lt;/p&gt;</comment>
                            <comment id="13629879" author="hadoopqa" created="Fri, 12 Apr 2013 07:23:04 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12578390/hbase-8205_v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12578390/hbase-8205_v5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5286//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5286//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13630011" author="jmspaggi" created="Fri, 12 Apr 2013 12:25:03 +0000"  >&lt;p&gt;Patch V5 content seems to be wrong. Take a look at it.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
M       hbase-protocol/src/main/protobuf/ZooKeeper.proto
M       hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos.java
M       hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java
M       hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java
M       hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestTableLockManager.java
M       hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase.java
M       hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessWriteLock.java
M       hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadLock.java
M       hbase-server/src/main/java/org/apache/hadoop/hbase/InterProcessReadWriteLock.java
M       hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java
M       hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
M       hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableLockManager.java
M       hbase-server/src/main/java/org/apache/hadoop/hbase/InterProcessLock.java
M       hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
?       hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/TableLockChecker.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13630620" author="enis" created="Fri, 12 Apr 2013 21:01:17 +0000"  >&lt;p&gt;Thanks J-M. Attaching the correct patch. &lt;/p&gt;</comment>
                            <comment id="13630680" author="hadoopqa" created="Fri, 12 Apr 2013 22:06:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12578502/hbase-8205_v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12578502/hbase-8205_v6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5298//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13630698" author="enis" created="Fri, 12 Apr 2013 22:33:55 +0000"  >&lt;p&gt;v6 contains the javadoc fix for some unrelated patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8119&quot; title=&quot;Optimize StochasticLoadBalancer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8119&quot;&gt;&lt;del&gt;HBASE-8119&lt;/del&gt;&lt;/a&gt;). v7 is what I&apos;ll commit. &lt;/p&gt;

&lt;p&gt;Sorry for many iterations. I am a bit sloppy today. &lt;/p&gt;</comment>
                            <comment id="13630699" author="enis" created="Fri, 12 Apr 2013 22:34:43 +0000"  >&lt;p&gt;Committed this. Thanks for reviews. &lt;/p&gt;</comment>
                            <comment id="13630803" author="hudson" created="Sat, 13 Apr 2013 00:11:07 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4059 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4059/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4059/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8205&quot; title=&quot;HBCK support for table locks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8205&quot;&gt;&lt;del&gt;HBASE-8205&lt;/del&gt;&lt;/a&gt;. HBCK support for table locks. Addendum for adding new class (Revision 1467499)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8205&quot; title=&quot;HBCK support for table locks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8205&quot;&gt;&lt;del&gt;HBASE-8205&lt;/del&gt;&lt;/a&gt;. HBCK support for table locks (Revision 1467497)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/TableLockChecker.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/ZooKeeper.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/InterProcessLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/InterProcessReadWriteLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableLockManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessWriteLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestTableLockManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13630883" author="hudson" created="Sat, 13 Apr 2013 02:43:48 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #67 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/67/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/67/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8205&quot; title=&quot;HBCK support for table locks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8205&quot;&gt;&lt;del&gt;HBASE-8205&lt;/del&gt;&lt;/a&gt;. HBCK support for table locks (Revision 1467500)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/ZooKeeper.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/InterProcessLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/InterProcessReadWriteLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableLockManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/TableLockChecker.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessWriteLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestTableLockManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13630908" author="hudson" created="Sat, 13 Apr 2013 03:07:57 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #496 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/496/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/496/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8205&quot; title=&quot;HBCK support for table locks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8205&quot;&gt;&lt;del&gt;HBASE-8205&lt;/del&gt;&lt;/a&gt;. HBCK support for table locks. Addendum for adding new class (Revision 1467499)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8205&quot; title=&quot;HBCK support for table locks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8205&quot;&gt;&lt;del&gt;HBASE-8205&lt;/del&gt;&lt;/a&gt;. HBCK support for table locks (Revision 1467497)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/TableLockChecker.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/ZooKeeper.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/InterProcessLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/InterProcessReadWriteLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableLockManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessWriteLock.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestTableLockManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/hbck/HbckTestingUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12575775" name="hbase-8205_v1.patch" size="40618" author="enis" created="Wed, 27 Mar 2013 22:02:27 +0000"/>
                            <attachment id="12575777" name="hbase-8205_v2.patch" size="44467" author="enis" created="Wed, 27 Mar 2013 22:11:26 +0000"/>
                            <attachment id="12578294" name="hbase-8205_v4.patch" size="53751" author="enis" created="Thu, 11 Apr 2013 22:02:44 +0000"/>
                            <attachment id="12578390" name="hbase-8205_v5.patch" size="1341" author="enis" created="Fri, 12 Apr 2013 07:20:41 +0000"/>
                            <attachment id="12578502" name="hbase-8205_v6.patch" size="55089" author="enis" created="Fri, 12 Apr 2013 21:01:17 +0000"/>
                            <attachment id="12578527" name="hbase-8205_v7.patch" size="50768" author="enis" created="Fri, 12 Apr 2013 22:33:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 28 Mar 2013 01:23:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>319940</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 35 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1j7bz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320281</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>