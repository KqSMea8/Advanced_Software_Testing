<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:41:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6919/HBASE-6919.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6919] Remove unnecessary throws IOException from Bytes.readVLong</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6919</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Remove the throws IOException so that caller doesn&apos;t have to catch and ignore.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; readVLong(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] buffer, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset)
  &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, add&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; readVInt(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] buffer, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset)
  &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)readVLong(buffer,offset);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and these are useful too:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * Put &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; as variable length encoded number at the offset in
     * the result &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; array.
     * @param vint &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; to make a vint of.
     * @param result buffer to put vint into
     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; Vint length in bytes of vint
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; vintToBytes(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] result, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; vint) {
      &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; i = vint;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt;= -112 &amp;amp;&amp;amp; i &amp;lt;= 127) {
        result[offset] = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;) i;
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 1;
      }

      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; len = -112;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; 0) {
        i ^= -1L; &lt;span class=&quot;code-comment&quot;&gt;// take one&apos;s complement&apos;
&lt;/span&gt;        len = -120;
      }

      &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; tmp = i;
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (tmp != 0) {
        tmp = tmp &amp;gt;&amp;gt; 8;
        len--;
      }

      result[offset++] = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;) len;

      len = (len &amp;lt; -120) ? -(len + 120) : -(len + 112);

      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; idx = len; idx != 0; idx--) {
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; shiftbits = (idx - 1) * 8;
        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; mask = 0xFFL &amp;lt;&amp;lt; shiftbits;
        result[offset++] = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)((i &amp;amp; mask) &amp;gt;&amp;gt; shiftbits);
      }
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; len + 1;
    }

    /**
     * Decode a vint from the buffer pointed at to by ptr and
     * increment the offset of the ptr by the length of the
     * vint.
     * @param ptr a pointer to a &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; array buffer
     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the decoded vint value as an &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; vintFromBytes(ImmutableBytesWritable ptr) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;) vlongFromBytes(ptr);
    }
    
    /**
     * Decode a vint from the buffer pointed at to by ptr and
     * increment the offset of the ptr by the length of the
     * vint.
     * @param ptr a pointer to a &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; array buffer
     * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the decoded vint value as a &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;
     */
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; vlongFromBytes(ImmutableBytesWritable ptr) {
        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] buffer = ptr.get();
        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset = ptr.getOffset();
        &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; firstByte = buffer[offset];
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; len = WritableUtils.decodeVIntSize(firstByte);
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (len == 1) {
            ptr.set(buffer, offset+1, ptr.getLength());
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; firstByte;
        }
        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; i = 0;
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; idx = 0; idx &amp;lt; len-1; idx++) {
            &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; b = buffer[offset + 1 + idx];
            i = i &amp;lt;&amp;lt; 8;
            i = i | (b &amp;amp; 0xFF);
        }
        ptr.set(buffer, offset+len, ptr.getLength());
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (WritableUtils.isNegativeVInt(firstByte) ? ~i : i);
    }


&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12609935">HBASE-6919</key>
            <summary>Remove unnecessary throws IOException from Bytes.readVLong</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="appy">Appy</assignee>
                                    <reporter username="giacomotaylor">James Taylor</reporter>
                        <labels>
                            <label>beginner</label>
                    </labels>
                <created>Tue, 2 Oct 2012 16:32:56 +0000</created>
                <updated>Mon, 8 Jun 2015 15:03:59 +0000</updated>
                            <resolved>Sat, 4 Apr 2015 02:56:00 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                    <fixVersion>0.98.12</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="13467852" author="stack" created="Tue, 2 Oct 2012 16:50:18 +0000"  >&lt;p&gt;Make a patch James and we&apos;ll commit.&lt;/p&gt;</comment>
                            <comment id="13475932" author="lhofhansl" created="Mon, 15 Oct 2012 01:10:38 +0000"  >&lt;p&gt;Hey Mr. Taylor... Wanna make a patch. We can sit and do together. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13484273" author="lhofhansl" created="Thu, 25 Oct 2012 16:55:20 +0000"  >&lt;p&gt;You need these for Phoenix, James?&lt;/p&gt;</comment>
                            <comment id="13620659" author="stack" created="Wed, 3 Apr 2013 06:15:41 +0000"  >&lt;p&gt;Moving out.  No movement.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=giacomotaylor&quot; class=&quot;user-hover&quot; rel=&quot;giacomotaylor&quot;&gt;James Taylor&lt;/a&gt; There is a question for you on end of this issue.  Put up a patch and we&apos;ll commit it.&lt;/p&gt;</comment>
                            <comment id="14269126" author="clehene" created="Thu, 8 Jan 2015 10:12:18 +0000"  >&lt;p&gt;Markign as improvement&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tscurtu&quot; class=&quot;user-hover&quot; rel=&quot;tscurtu&quot;&gt;Tudor Scurtu&lt;/a&gt; this looks like your cup of tea as well &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; would you care to look at?&lt;/p&gt;</comment>
                            <comment id="14382619" author="appy" created="Thu, 26 Mar 2015 20:37:22 +0000"  >&lt;p&gt;Here are few change suggestions I came up with, requesting community&apos;s views on them.&lt;/p&gt;

&lt;p&gt;1) deprecate IOException in readVLong:&lt;br/&gt;
(From offline discussions with Jon) it seems that code can never throw IOException. Should we remove the exception? Since this thread is from before compatibility standards, it might be a bit more difficult to do this change now. One possible way is:&lt;br/&gt;
a) add new function, say toVLong(...) (to keep name consistent with ~40 other toXYZ() functions) without exception and deprecate current readVLong() in release in 1.1&lt;br/&gt;
b) Remove the deprecated function in 2.0 release&lt;/p&gt;

&lt;p&gt;2) Rename bytesToInt() to toVInt() :&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This is the only function in Bytes class with name like bytesToXX(). I think we should rename it to toVInt() to be consistent with other functions.&lt;/li&gt;
	&lt;li&gt;Also, I am confused as to why it returns a long. Although technically correct, shouldn&apos;t it return an int instead? Should we change it or is there a reason it&apos;s that way?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;3) Add following functions. Alternatively we can use the names writeVLong / writeVInt, any preferences?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; putVLong(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] bytes, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; val);
&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; putVInt(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] bytes, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; val);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4) code duplication: I see code duplication in lots of functions (grouped together below)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] vintToBytes(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; vint);
void WritableUtils.writeVInt(DataOutput stream, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i);
(proposed above) &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; putVLong(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] bytes, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset, &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; val);
(proposed above) &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; putVInt(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] bytes, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; val);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; readVLong(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] buffer, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset);
&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; bytesToVint(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] buffer);
&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; WritableUtils.readVInt((DataInput stream) ;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(From discussion with Jon) It&apos;s possible that the duplication is for efficiency, however I don&apos;t see any comments suggesting that. What do others think? Should we change them to use WritableUtils class&apos; functions which do exactly same thing but accept DataInput/DataOutput as params instead of byte[].&lt;/p&gt;

&lt;p&gt;5) Description above suggests to add vlongFromBytes(ImmutableBytesWritable ptr) and vintFromBytes(ImmutableBytesWritable ptr). However I think that it&apos;ll be redundant code as one can simply use toVLong(ptr.get()) or toVInt(ptr.get()) instead. Should we still have them?&lt;/p&gt;</comment>
                            <comment id="14382698" author="appy" created="Thu, 26 Mar 2015 21:23:05 +0000"  >&lt;p&gt;Hi,&lt;br/&gt;
Also, what would be the best way to proceed&lt;br/&gt;
a) Only deprecate IOException in this jira and create a new jira for other changes&lt;br/&gt;
OR&lt;br/&gt;
b) Increase scope of this jira by updating title and description and fix all agreed-upon changes in this jira itself. &lt;/p&gt;</comment>
                            <comment id="14382719" author="jmhsieh" created="Thu, 26 Mar 2015 21:33:55 +0000"  >&lt;blockquote&gt;
&lt;p&gt;a) add new function, say toVLong(...) (to keep name consistent with ~40 other toXYZ() functions) without exception and deprecate current readVLong() in release in 1.1&lt;br/&gt;
b) Remove the deprecated function in 2.0 release&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Our API compat standards say apis can change between minor versions but since this one is marked stable I&apos;d be slower to just yank the api.  IMO, deprecating in 1.1 and also deprecating in 2.0 seems reasonable.&lt;/p&gt;

&lt;p&gt;This would be a simple enough patch so that maybe you could just present a patch and we could provide feedback in the review?&lt;/p&gt;

&lt;p&gt;For Q2, Q3, Q4, Q5, they seem related but increases scope and likely should be a separate issue(s).  Let&apos;s keep this one focused on the issue mentioned in the title.  We can consider the others in another issue or a discusion on dev@hbase.apache.org&lt;/p&gt;</comment>
                            <comment id="14382796" author="appy" created="Thu, 26 Mar 2015 22:12:06 +0000"  >&lt;p&gt;Submitting first patch.&lt;/p&gt;</comment>
                            <comment id="14383055" author="hadoopqa" created="Fri, 27 Mar 2015 00:31:56 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12707614/HBASE-6919.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12707614/HBASE-6919.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 18256fc9544866fc7182dfc5dd9d73b8cef02d66.&lt;br/&gt;
  ATTACHMENT ID: 12707614&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13451//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13451//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13451//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13451//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13451//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13451//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13451//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13451//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14387837" author="srikanth235" created="Tue, 31 Mar 2015 02:21:34 +0000"  >&lt;p&gt;Patch looks good to me. Minor nit.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
* Reads a zero-compressed encoded &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; from input buffer and returns it.
* @param buffer Binary array
* @param offset Offset into array at which vint begins.
* @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; deserialized &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; from stream.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Looks like both buffer and stream are being used interchangeably. May be use buffer in the description of return param. something like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
* @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; deserialized &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; from buffer.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14388132" author="busbey" created="Tue, 31 Mar 2015 06:50:36 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; readAsVLong(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] buffer, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset) {
+    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; readVLong(buffer, offset);
+    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(e);
+    }
+  }
+
+  /**
+   * Reads a zero-compressed encoded &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; from input buffer and returns it.
    * @param buffer Binary array
    * @param offset Offset into array at which vint begins.
    * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; java.io.IOException e
    * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; deserialized &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; from stream.
+   * @deprecated Use {@link #readAsVLong()} instead.
    */
+  @Deprecated
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; readVLong(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] buffer, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset)
   &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If readVLong&apos;s implementation doesn&apos;t actually throw IOException, then you should instead have the new readAsVLong use that implementation directly and avoid the try/catch. Then the deprecated readVLong can claim to throw IOExceptoin and just call the new method.&lt;/p&gt;</comment>
                            <comment id="14389206" author="appy" created="Tue, 31 Mar 2015 19:02:28 +0000"  >&lt;p&gt;Thanks for review. Here&apos;s updated patch.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;: liked your suggestion. Deleting deprecated fn will not require code refactoring now.&lt;/p&gt;</comment>
                            <comment id="14389440" author="hadoopqa" created="Tue, 31 Mar 2015 21:22:54 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12708499/HBASE-6919-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12708499/HBASE-6919-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit f1f4b6618334767d0da0f47965309b21676e7e9f.&lt;br/&gt;
  ATTACHMENT ID: 12708499&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13510//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13510//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13510//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13510//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13510//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13510//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13510//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13510//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14389953" author="busbey" created="Wed, 1 Apr 2015 04:02:18 +0000"  >&lt;p&gt;Hurm. I don&apos;t see anything in TestBytes that covers VLong. mind adding a simple round-trip test?&lt;/p&gt;</comment>
                            <comment id="14394979" author="appy" created="Fri, 3 Apr 2015 19:39:38 +0000"  >&lt;p&gt;Added test for readAsVLong(). Since there is no function in Bytes to write a VLong, had to use WritableUtils.&lt;br/&gt;
Thinking of fixing that and add tests for similar functions related to VInt in another jira.&lt;/p&gt;</comment>
                            <comment id="14394988" author="busbey" created="Fri, 3 Apr 2015 19:46:16 +0000"  >&lt;p&gt;+1 lgtm. that sounds like a great follow-on ticket. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14395137" author="hadoopqa" created="Fri, 3 Apr 2015 21:55:03 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12709300/HBASE-6919-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12709300/HBASE-6919-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit d8b10656d00779e194c3caca118995136babce99.&lt;br/&gt;
  ATTACHMENT ID: 12709300&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13559//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13559//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13559//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13559//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13559//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13559//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13559//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13559//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14395152" author="busbey" created="Fri, 3 Apr 2015 22:08:40 +0000"  >&lt;p&gt;Sorry for the delay. It looks like you had a collision with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13373&quot; title=&quot;Squash HFileReaderV3 together with HFileReaderV2 and AbstractHFileReader; ditto for Scanners and BlockReader, etc.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13373&quot;&gt;&lt;del&gt;HBASE-13373&lt;/del&gt;&lt;/a&gt;. could you rebase to current master?&lt;/p&gt;</comment>
                            <comment id="14395155" author="busbey" created="Fri, 3 Apr 2015 22:10:48 +0000"  >&lt;p&gt;Also please generate the patch with the Author string and commit message you&apos;d prefer, via &lt;tt&gt;git format-patch&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="14395388" author="appy" created="Sat, 4 Apr 2015 00:15:01 +0000"  >&lt;p&gt;I have no idea why it collided with the issue you mentioned.&lt;br/&gt;
Generated patch using git format-patch (hopefully did it right).&lt;/p&gt;</comment>
                            <comment id="14395399" author="appy" created="Sat, 4 Apr 2015 00:28:30 +0000"  >&lt;p&gt;Ahh, so noob of me, of course it collided, i was changing file which was deleted.&lt;br/&gt;
Attaching correct patch.&lt;/p&gt;</comment>
                            <comment id="14395493" author="busbey" created="Sat, 4 Apr 2015 02:56:00 +0000"  >&lt;p&gt;Updated subject to better reflect what the patch does. also tweaked the commit message to include the jira ref. Pushed to 0.98, 1.1, 2.0. (using essentially v2 for 1.1 and 0.98)&lt;/p&gt;

&lt;p&gt;Thanks Appy!&lt;/p&gt;</comment>
                            <comment id="14395553" author="hudson" created="Sat, 4 Apr 2015 05:19:28 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6344 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6344/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6344/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6919&quot; title=&quot;Remove unnecessary throws IOException from Bytes.readVLong&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6919&quot;&gt;&lt;del&gt;HBASE-6919&lt;/del&gt;&lt;/a&gt; Remove unnecessary throws IOException from Bytes.readVLong. (busbey: rev e252c30645d416697bbb22f1ca20846b3256a92a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestBytes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderImpl.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14395557" author="hudson" created="Sat, 4 Apr 2015 05:28:02 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #359 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/359/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/359/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6919&quot; title=&quot;Remove unnecessary throws IOException from Bytes.readVLong&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6919&quot;&gt;&lt;del&gt;HBASE-6919&lt;/del&gt;&lt;/a&gt; Remove unnecessary throws IOException from Bytes.readVLong. (busbey: rev 4d8bcd46298f6e613e37757e5eb141d5c6192a07)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV3.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestBytes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14395597" author="hudson" created="Sat, 4 Apr 2015 07:03:43 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98 #935 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/935/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/935/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6919&quot; title=&quot;Remove unnecessary throws IOException from Bytes.readVLong&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6919&quot;&gt;&lt;del&gt;HBASE-6919&lt;/del&gt;&lt;/a&gt; Remove unnecessary throws IOException from Bytes.readVLong. (busbey: rev a734fdb60f36722aeca509c4c7e3c87a3569f6fc)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestBytes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV3.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14395620" author="hudson" created="Sat, 4 Apr 2015 08:03:50 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #888 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/888/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/888/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6919&quot; title=&quot;Remove unnecessary throws IOException from Bytes.readVLong&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6919&quot;&gt;&lt;del&gt;HBASE-6919&lt;/del&gt;&lt;/a&gt; Remove unnecessary throws IOException from Bytes.readVLong. (busbey: rev a734fdb60f36722aeca509c4c7e3c87a3569f6fc)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV3.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/test/java/org/apache/hadoop/hbase/util/TestBytes.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14571122" author="ndimiduk" created="Wed, 3 Jun 2015 15:29:07 +0000"  >&lt;p&gt;Closing issues released in 1.1.0.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12708499" name="HBASE-6919-v1.patch" size="4899" author="appy" created="Tue, 31 Mar 2015 19:02:28 +0000"/>
                            <attachment id="12709300" name="HBASE-6919-v2.patch" size="6450" author="appy" created="Fri, 3 Apr 2015 19:39:38 +0000"/>
                            <attachment id="12709362" name="HBASE-6919-v3.patch" size="5688" author="appy" created="Sat, 4 Apr 2015 00:28:30 +0000"/>
                            <attachment id="12707614" name="HBASE-6919.patch" size="4862" author="appy" created="Thu, 26 Mar 2015 22:04:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 2 Oct 2012 16:50:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>241838</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 28 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02e5z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11896</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>