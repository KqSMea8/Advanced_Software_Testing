<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:30:12 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5705/HBASE-5705.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5705] Introduce Protocol Buffer RPC engine</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5705</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Introduce Protocol Buffer RPC engine in the RPC core. Protocols that are PB aware can be made to go through this RPC engine. The approach, in my current thinking, would be similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-7773&quot; title=&quot;Add support for protocol buffer based RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-7773&quot;&gt;&lt;del&gt;HADOOP-7773&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12549380">HBASE-5705</key>
            <summary>Introduce Protocol Buffer RPC engine</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12540505">HBASE-5305</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="devaraj">Devaraj Das</assignee>
                                    <reporter username="devaraj">Devaraj Das</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Apr 2012 18:36:58 +0000</created>
                <updated>Tue, 15 Oct 2013 04:46:50 +0000</updated>
                            <resolved>Mon, 30 Jul 2012 07:08:09 +0000</resolved>
                                                    <fixVersion>0.95.0</fixVersion>
                                    <component>IPC/RPC</component>
                    <component>master</component>
                    <component>migration</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13402637" author="devaraj" created="Wed, 27 Jun 2012 22:54:07 +0000"  >&lt;p&gt;Early patch that at least builds. Still working on it. &lt;/p&gt;</comment>
                            <comment id="13405414" author="devaraj" created="Mon, 2 Jul 2012 22:58:01 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/5714/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/5714/&lt;/a&gt; is the RB page with the patch..&lt;/p&gt;</comment>
                            <comment id="13406255" author="zhihyu@ebaysf.com" created="Wed, 4 Jul 2012 03:30:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6039&quot; title=&quot;Remove HMasterInterface and replace with something similar to RegionServerStatusProtocol&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6039&quot;&gt;&lt;del&gt;HBASE-6039&lt;/del&gt;&lt;/a&gt; has removed HMasterInterface.&lt;br/&gt;
Please adjust patch accordingly.&lt;/p&gt;</comment>
                            <comment id="13406330" author="devaraj" created="Wed, 4 Jul 2012 07:25:14 +0000"  >&lt;p&gt;Thanks for looking at the patch, Ted. I&apos;ll update it soon.&lt;/p&gt;</comment>
                            <comment id="13406557" author="stack" created="Wed, 4 Jul 2012 14:35:00 +0000"  >&lt;p&gt;I added some comments up in RB.  Seems like pb stuff goes via Writables still?  Would be nice if I did not have to read hadoop-7773 patch to figure out what this change is doing.  Any chance of a sentence or two on intent?  Good stuff DD.&lt;/p&gt;</comment>
                            <comment id="13409917" author="zhihyu@ebaysf.com" created="Mon, 9 Jul 2012 22:27:43 +0000"  >&lt;p&gt;Patch from Devaraj.&lt;br/&gt;
I verified that it compiles against latest trunk.&lt;/p&gt;</comment>
                            <comment id="13409983" author="devaraj" created="Tue, 10 Jul 2012 00:36:46 +0000"  >&lt;p&gt;I updated RB with the new patch. Yes, the PB stuff goes via writables still. Some of the stuff can be put within a if/else logic for PB vs. Writable but when I did it, it seemed to make the code complex. So am thinking of doing the work of making RPC use as much of PB as possible as a follow up (and at that time, remove the WritableRpcEngine/Invocation classes), when all the application protocols are converted to PB. Open to feedback on this aspect. &lt;br/&gt;
Once the above is done, the use of PB RPC Engine should make things more efficient in terms of avoiding copies in the rpc layer (for example in the RPC layer, if we needed to write a pair of &lt;/p&gt;
{message-length, message}
&lt;p&gt;, in the current RPC, we would need to serialize the Writable object into a buffer, and then get the length of the buffer. In the PB world, every message has a getSerializedSize method generated..)&lt;/p&gt;</comment>
                            <comment id="13410283" author="hadoopqa" created="Tue, 10 Jul 2012 12:08:41 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12535753/5705-2.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12535753/5705-2.1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 17 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorExceptionWithAbort&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2356//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2356//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2356//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2356//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2356//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2356//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2356//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2356//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13422313" author="stack" created="Wed, 25 Jul 2012 14:34:25 +0000"  >&lt;p&gt;I&apos;d vote for removing Writables engine once all pb converted.&lt;/p&gt;</comment>
                            <comment id="13422338" author="stack" created="Wed, 25 Jul 2012 15:12:13 +0000"  >&lt;p&gt;RB is not working for me at mo so reviews here:&lt;/p&gt;

&lt;p&gt;I asked about comment in ClientCache in previous reviews but it went unanswered.  I&apos;m talking about the old Doug comment on a. vs. b. choice.  I didn&apos;t understand it then and less so now.  Is it a copy/paste error?&lt;/p&gt;

&lt;p&gt;The writing to a buffer before we write on the line goes away if we move to a pure pb engine?&lt;/p&gt;

&lt;p&gt;Is the size used here right for case where we have an exception? (Or its just a hint?)&lt;/p&gt;

&lt;p&gt;     ByteBufferOutputStream buf = new ByteBufferOutputStream(size);&lt;/p&gt;

&lt;p&gt;And RPCRequestWritable and RPCResponseWritable will go away too when we do pb? (You&apos;ve answered yes to this multiple times I believe).&lt;/p&gt;

&lt;p&gt;Why the need for a setRPC w/ no params?&lt;/p&gt;

&lt;p&gt;This stuff passed to Server, whats it about?  Is this some Hadoop thing about being able to do multiple serializations?&lt;/p&gt;

&lt;p&gt;                  Class&amp;lt;? extends Writable&amp;gt; paramClass,&lt;/p&gt;

&lt;p&gt;When we do logResponse, we no longer take a Call but we pass in its name and methodnames and params.... is that a regression?  Would it be better to take the Invocation?&lt;/p&gt;


&lt;p&gt;The below doesn&apos;t look too bad:&lt;/p&gt;

&lt;p&gt;&amp;lt;&quot;hrpc&quot;-bytearray&amp;gt;&amp;lt;&apos;5&apos;-byte&amp;gt;&amp;lt;length-of-serialized-ConnectionHeader-obj&lt;span class=&quot;error&quot;&gt;&amp;#91;int32&amp;#93;&lt;/span&gt;&amp;gt;&amp;lt;ConnectionHeader-object serialized&amp;gt;&lt;/p&gt;

&lt;p&gt;In header can we say if its pbs that follow?  Or will we have to always calc message size before sending?&lt;/p&gt;

&lt;p&gt;Why we need this: clientProtocolVersion  in request?  Is this Writables thing?  It goes away when we go pb?&lt;/p&gt;


&lt;p&gt;My general thought on this is we commit.  This patch has same shape as our current rpc&apos;ing; same classes, etc. just moved over some to support pb.  We need to go pure pb and get rid of Writables in this rpc call path.  I see this as a stepping stone so we should get it in so we can undo it later w/ pb engine.&lt;/p&gt;
</comment>
                            <comment id="13422356" author="devaraj" created="Wed, 25 Jul 2012 15:36:53 +0000"  >&lt;p&gt;Sorry, seems like I forgot to &quot;publish&quot; my responses to the comments on RB on some occasions. I &quot;published&quot; all of them now. Apologize for the out-of-order responses. I&apos;ll respond to your comments shortly, Stack (thanks for looking).&lt;/p&gt;</comment>
                            <comment id="13422623" author="stack" created="Wed, 25 Jul 2012 21:21:25 +0000"  >&lt;p&gt;np I responded up on rb.  See my other comments above (ignore stuff that is duplicated and already answered).  Any useful stuff in above feedback?  If so, address and lets get this in.&lt;/p&gt;</comment>
                            <comment id="13422793" author="devaraj" created="Thu, 26 Jul 2012 01:05:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;I asked about comment in ClientCache in previous reviews but it went unanswered. I&apos;m talking about the old Doug comment on a. vs. b. choice. I didn&apos;t understand it then and less so now. Is it a copy/paste error?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Answered on RB but a little bit more here - I think it makes sense to remove this confusing comment (since now the ClientCache class has some javadoc). I&apos;ll remove it in the next patch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The writing to a buffer before we write on the line goes away if we move to a pure pb engine?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is the size used here right for case where we have an exception? (Or its just a hint?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hint.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And RPCRequestWritable and RPCResponseWritable will go away too when we do pb? (You&apos;ve answered yes to this multiple times I believe).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes (AFAICT).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why the need for a setRPC w/ no params?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Could you please point me to the block of code in the patch where this is.. If you are referring to the setRPC with two params that I added here, that I reverted back in my current update.. (and added a comment up on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6282&quot; title=&quot;The introspection, etc. of objects in the RPC has to be handled for PB objects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6282&quot;&gt;&lt;del&gt;HBASE-6282&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This stuff passed to Server, whats it about? Is this some Hadoop thing about being able to do multiple serializations?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is to handle WritableRpcEngine and ProtobufRpcEngine equally well. In the case of WritableRpcEngine, the RPC request is serialized using Invocation objects and in the case of ProtobufRpcEngine, they are done using RpcRequestWritable (a thin wrapper over PB objects).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When we do logResponse, we no longer take a Call but we pass in its name and methodnames and params.... is that a regression? Would it be better to take the Invocation?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is handled in the way that the method now takes methodname and params explicitly (as opposed to how it is in the current trunk where an Invocation object is passed and the method body extracts the params and methodname). This was needed to support ProtobufRpc. Also, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6282&quot; title=&quot;The introspection, etc. of objects in the RPC has to be handled for PB objects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6282&quot;&gt;&lt;del&gt;HBASE-6282&lt;/del&gt;&lt;/a&gt; is applicable here.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In header can we say if its pbs that follow? Or will we have to always calc message size before sending?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The RPC requires that any RPC message is preceded by the length of the same. In that sense, we need the message size.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why we need this: clientProtocolVersion in request? Is this Writables thing? It goes away when we go pb?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The clientProtocolVersion is currently unused on the server side (and it&apos;s optional in the .proto definition), but it could potentially be used in the server to decide how to best service the client&apos;s RPC (if there were multiple implementations for a method, and the server could pick an implementation based on client version). If this use case seems like we probably won&apos;t need to support, we can drop the clientProtocolVersion (btw it being optional in the .proto definition makes it amenable to easy removal even later). By keeping it, it doesn&apos;t hurt either..&lt;/p&gt;</comment>
                            <comment id="13422818" author="devaraj" created="Thu, 26 Jul 2012 01:36:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;My general thought on this is we commit. This patch has same shape as our current rpc&apos;ing; same classes, etc. just moved over some to support pb. We need to go pure pb and get rid of Writables in this rpc call path. I see this as a stepping stone so we should get it in so we can undo it later w/ pb engine.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13422838" author="hadoopqa" created="Thu, 26 Jul 2012 02:01:36 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12537940/5705-2.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12537940/5705-2.2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 17 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 15 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2438//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13422971" author="stack" created="Thu, 26 Jul 2012 09:02:48 +0000"  >&lt;p&gt;All of above seems reasonable.  Here is some response.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;...Could you please point me to the block of code in the patch where this is.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I do not see it now.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;...and in the case of ProtobufRpcEngine, they are done using RpcRequestWritable (a thin wrapper over PB objects).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The Writable wrapper goes away when we move to pb engine?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;...In that sense, we need the message size.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Its header length only right?   Thats ok I&apos;d say.  But for the value, when its a 50M cell, we won&apos;t have to read it into a buffer to find its size before sending will we when we are pb?  (pb does this internally probably but we do we have to do it again outside of pb to put it in rpc header?)&lt;/p&gt;
</comment>
                            <comment id="13423311" author="devaraj" created="Thu, 26 Jul 2012 18:10:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;The Writable wrapper goes away when we move to pb engine?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes (AFAICT).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Its header length only right? Thats ok I&apos;d say. But for the value, when its a 50M cell, we won&apos;t have to read it into a buffer to find its size before sending will we when we are pb? (pb does this internally probably but we do we have to do it again outside of pb to put it in rpc header?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No we don&apos;t have to write to a buffer in the case of PB objects. There is a getSerializedSize method on PB objects (and assuming that the 50M cell is encapsulated in the PB object as a byte-array, PB would simply call byte-array.length...).&lt;/p&gt;
</comment>
                            <comment id="13423331" author="stack" created="Thu, 26 Jul 2012 18:27:32 +0000"  >&lt;p&gt;I&apos;m going to commit this in next day unless objection.&lt;/p&gt;</comment>
                            <comment id="13424015" author="devaraj" created="Fri, 27 Jul 2012 17:56:31 +0000"  >&lt;p&gt;Thanks for the reviews, Stack &amp;amp; Ted.&lt;/p&gt;</comment>
                            <comment id="13424645" author="devaraj" created="Mon, 30 Jul 2012 00:16:59 +0000"  >&lt;p&gt;Noticed that the patch went stale. Updated. (Can this please be committed.)&lt;/p&gt;</comment>
                            <comment id="13424654" author="hadoopqa" created="Mon, 30 Jul 2012 01:12:25 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12538291/5705-2.3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12538291/5705-2.3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 17 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 6 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestMasterReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2452//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13424720" author="stack" created="Mon, 30 Jul 2012 07:08:09 +0000"  >&lt;p&gt;Committed to trunk.  Thanks Deveraj.&lt;/p&gt;</comment>
                            <comment id="13424738" author="hudson" created="Mon, 30 Jul 2012 08:06:58 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3183 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3183/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3183/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5705&quot; title=&quot;Introduce Protocol Buffer RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5705&quot;&gt;&lt;del&gt;HBASE-5705&lt;/del&gt;&lt;/a&gt; Introduce Protocol Buffer RPC engine (Revision 1367009)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/ClientCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPC.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/Invocation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/ProtobufRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/monitoring/MonitoredRPCHandlerImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/generated/RPCProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/protobuf/RPC.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestProtoBufRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/protobuf&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/protobuf/generated&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/protobuf/generated/TestProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/protobuf/generated/TestRpcServiceProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/protobuf&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/protobuf/test.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/protobuf/test_rpc_service.proto&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13424849" author="hudson" created="Mon, 30 Jul 2012 13:31:35 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #115 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/115/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/115/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5705&quot; title=&quot;Introduce Protocol Buffer RPC engine&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5705&quot;&gt;&lt;del&gt;HBASE-5705&lt;/del&gt;&lt;/a&gt; Introduce Protocol Buffer RPC engine (Revision 1367009)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/ClientCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPC.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/Invocation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/ProtobufRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/monitoring/MonitoredRPCHandlerImpl.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/protobuf/generated/RPCProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/protobuf/RPC.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestProtoBufRpc.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/protobuf&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/protobuf/generated&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/protobuf/generated/TestProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/protobuf/generated/TestRpcServiceProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/protobuf&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/protobuf/test.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/protobuf/test_rpc_service.proto&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13540138" author="stack" created="Thu, 27 Dec 2012 20:38:51 +0000"  >&lt;p&gt;It looks like this patch made it so that when we set up the proxy, we no longer ask the server what its version of the protocol is.  Instead we return the client&apos;s version of the protocol.  See below.&lt;/p&gt;

&lt;p&gt;+  static long getProtocolVersion(Class&amp;lt;? extends VersionedProtocol&amp;gt; protocol)&lt;br/&gt;
+      throws NoSuchFieldException, IllegalAccessException &lt;/p&gt;
{
+    Field versionField = protocol.getField(&quot;VERSION&quot;);
+    versionField.setAccessible(true);
+    return versionField.getLong(protocol);
+  }

&lt;p&gt;Was expediency the reason the querying of server version was undone?  Something to be addressed later when VersionedProtocol was fixed up?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13540306" author="devaraj" created="Fri, 28 Dec 2012 04:52:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, yes. The idea was to have the server decide how to best handle the rpc method call based on the client&apos;s protocol version. Though the server currently ignores the version, this is something that can be used to implement versioning. Please have a look at ProtobufRpcServerEngine.java around the area with the comment &quot;TODO: use the clientVersion..&quot;. Other than that, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6521&quot; title=&quot;Address the handling of multiple versions of a protocol&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6521&quot;&gt;&lt;del&gt;HBASE-6521&lt;/del&gt;&lt;/a&gt; should address versioning in a more complete fashion (and I guess we should unify all the versioning stories there).&lt;/p&gt;</comment>
                            <comment id="13775112" author="stack" created="Mon, 23 Sep 2013 18:30:45 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12533726" name="5705-1.patch" size="50304" author="devaraj" created="Wed, 27 Jun 2012 22:54:07 +0000"/>
                            <attachment id="12535753" name="5705-2.1.patch" size="258071" author="zhihyu@ebaysf.com" created="Mon, 9 Jul 2012 22:27:43 +0000"/>
                            <attachment id="12537940" name="5705-2.2.patch" size="256771" author="devaraj" created="Thu, 26 Jul 2012 01:05:02 +0000"/>
                            <attachment id="12538291" name="5705-2.3.patch" size="257196" author="devaraj" created="Mon, 30 Jul 2012 00:16:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 4 Jul 2012 03:30:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>234371</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i09y8f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>55987</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.96notable</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>