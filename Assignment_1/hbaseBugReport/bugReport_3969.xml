<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:14:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3969/HBASE-3969.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3969] Outdated data can not be cleaned in time</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3969</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Compaction checker will send regions to the compact queue to do compact. But the priority of these regions is too low if these regions have only a few storefiles. When there is large through output, and the compact queue will aways have some regions with higher priority. This may causing the major compact be delayed for a long time(even a few days),  and outdated data cleaning will also be delayed.&lt;br/&gt;
In our test case, we found some regions sent to the queue by major compact checker hunging in the queue for more than 2 days! Some scanners on these regions cannot get availably data for a long time and lease expired.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12509672">HBASE-3969</key>
            <summary>Outdated data can not be cleaned in time</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zhoushuaifeng">zhoushuaifeng</assignee>
                                    <reporter username="zhoushuaifeng">zhoushuaifeng</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Jun 2011 07:21:49 +0000</created>
                <updated>Fri, 20 Nov 2015 11:53:21 +0000</updated>
                            <resolved>Thu, 23 Jun 2011 03:52:09 +0000</resolved>
                                    <version>0.90.1</version>
                    <version>0.90.2</version>
                    <version>0.90.3</version>
                                    <fixVersion>0.90.4</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13046372" author="zhoushuaifeng" created="Thu, 9 Jun 2011 07:36:32 +0000"  >&lt;p&gt;There may be several solution to this problem:&lt;br/&gt;
1, Setting a proper and configure able priority to regions need major compact when sending them to the compact queue; (attached patch solution1)&lt;br/&gt;
2,  Setting the priority of regions need compact according how long it&apos;s keyvalues outdated.&lt;br/&gt;
3, Run a thread to check the compact queue, if some regions hanging in the quene for a long time, increase it&apos;s priority level.&lt;/p&gt;</comment>
                            <comment id="13046573" author="koven2049" created="Thu, 9 Jun 2011 14:30:12 +0000"  >&lt;p&gt;This bug is very difficult to find. Is there any way to let regions modified their priorities in Runtime?&lt;/p&gt;</comment>
                            <comment id="13046679" author="stack" created="Thu, 9 Jun 2011 17:12:13 +0000"  >&lt;p&gt;Not that I know of.  Can you add one?&lt;/p&gt;</comment>
                            <comment id="13046949" author="zhoushuaifeng" created="Fri, 10 Jun 2011 01:20:04 +0000"  >&lt;p&gt;It&apos;s difficult to find this problem. We do a long and large amount data read/write test then find it. After all, I think major compact is a little more important(that&apos;s why it&apos;s &apos;major&apos;), it&apos;s reasonable to have a little higher priority. &lt;br/&gt;
And solution1 need the least change, others may be more complex.&lt;/p&gt;</comment>
                            <comment id="13049579" author="zhoushuaifeng" created="Wed, 15 Jun 2011 02:29:59 +0000"  >&lt;p&gt;For the 3rd solution, the trunk has a lot of change on compact thread, it&apos;s a big change. It&apos;s a little easier to the branch 0.90.x&lt;/p&gt;</comment>
                            <comment id="13050237" author="zhoushuaifeng" created="Thu, 16 Jun 2011 06:26:31 +0000"  >&lt;p&gt;I have done a test on hbase use ycsb. 3 region servers and 30,000 insert per second. With no patch solution1, we can see from ganglia that after 3 days, about 50 regions stay in the compact queue, and out dated data can not be cleaned intime. And after added patch solution1, out dated data can be cleaned in time.&lt;br/&gt;
Logs show that how the patch works:(our setings: blockingStoreFiles is 10, compactionThreshold is 3, so the priority is 6.)&lt;br/&gt;
2011-06-16 13:06:31,667 DEBUG org.apache.hadoop.hbase.regionserver.CompactSplitThread: Compaction requested for ufdr1,0201586139100003#4523000,1308096774090.080ad1468ece2c12efeb2480be632871. because regionserver60020.majorCompactionChecker requests major compaction; priority=6, compaction queue size=25&lt;br/&gt;
2011-06-16 13:06:31,670 DEBUG org.apache.hadoop.hbase.regionserver.CompactSplitThread: Compaction requested for ufdr2,00380,1308118259184.75a7c5da1c2ffadd043f7f6eea2b22b5. because regionserver60020.majorCompactionChecker requests major compaction; priority=6, compaction queue size=26&lt;br/&gt;
2011-06-16 13:06:31,675 DEBUG org.apache.hadoop.hbase.regionserver.CompactSplitThread: Compaction requested for ufdr1,0198486139199963#0404000,1308093001292.50c82e3de192aa621d3d68465f3f9530. because regionserver60020.majorCompactionChecker requests major compaction; priority=6, compaction queue size=27&lt;/p&gt;</comment>
                            <comment id="13050238" author="zhoushuaifeng" created="Thu, 16 Jun 2011 06:30:59 +0000"  >&lt;p&gt;because the trunk and branch has done much change on major compact checker, this is for the branch.&lt;/p&gt;</comment>
                            <comment id="13050250" author="zhoushuaifeng" created="Thu, 16 Jun 2011 07:14:03 +0000"  >&lt;p&gt;Hi St, the 3rd solution may be not so good. For the regions in the queue, regions have files number close to or more than blockingStoreFiles should have the most higher priority, because if not, flush will be blocked and impact put. The secondary important is regions that need major compact to clean outdated data, reason has mentioned in this issue. But regions with few files(for example, only reach the compactionThreshold), and should do a minor compact should have the lowest priority, it does no matter how these regions hanging in the queue. &lt;br/&gt;
So, I think may be setting the major compact priority to a proper value(between 1 and blockingStoreFiles - compactionThreshold) may be a better choice. How do you think?&lt;/p&gt;</comment>
                            <comment id="13050594" author="stack" created="Thu, 16 Jun 2011 17:48:40 +0000"  >&lt;p&gt;@ zhoushuaifeng I take it you are doing lots of deletes or you are doing lots of aging out of old versions?  Do you think the ycsb represents what your actual loading will be like?&lt;/p&gt;

&lt;p&gt;You have identified an issue with our scheme where-by we assign a priority on initial queuing and while the priority may have been correct at the time, circumstances change over time.  Its as though the priority should change with as the situation evolves?  If something has been queued a long time, its priority should go up?  Perhaps go up only if a major compaction?   This would require us adding something to peek at queues on a period.&lt;/p&gt;

&lt;p&gt;The solution of (between 1 and blockingStoreFiles - compactionThreshold) seems unsatisfactory, don&apos;t you agree.  Its hard to tell how it will play out over time on a cluster?&lt;/p&gt;

&lt;p&gt;Looking at your patch, you might want to do a check for hbase.hstore.blockingStoreFiles &amp;gt; hbase.hstore.compactionThreshold&lt;/p&gt;</comment>
                            <comment id="13050745" author="yuzhihong@gmail.com" created="Thu, 16 Jun 2011 21:31:51 +0000"  >&lt;p&gt;Should we introduce expiration to requests in compaction queue ?&lt;/p&gt;</comment>
                            <comment id="13050754" author="stack" created="Thu, 16 Jun 2011 21:44:52 +0000"  >&lt;p&gt;@Ted I don&apos;t think will make zhoushuaifeng happy; he wants the major compaction to run, not be discarded because it too old.  Or what you thinking?&lt;/p&gt;</comment>
                            <comment id="13050781" author="yuzhihong@gmail.com" created="Thu, 16 Jun 2011 22:48:22 +0000"  >&lt;p&gt;Compaction code has been rewritten in TRUNK.&lt;/p&gt;

&lt;p&gt;For 0.90, PriorityCompactionQueue.addToRegionsInQueue() wouldn&apos;t touch a request which was already in regionsInQueue.&lt;br/&gt;
If we record the time when CompactionRequest for a major compaction was put in regionsInQueue, the above check can be modified to boost the priority of the request after specified amount of time has elapsed.&lt;br/&gt;
Changes in add() method is also required.&lt;/p&gt;</comment>
                            <comment id="13050850" author="zhoushuaifeng" created="Fri, 17 Jun 2011 01:46:05 +0000"  >&lt;p&gt;Hi st, I don&apos;t do any deletes, I only set the TTL of the table to a few days.  When data&apos;s timestamps are old than the TTL, these data should be cleaned by a major compact. But if the region have no new data inserted for a while, there would be only 1 or 2 files in it, so the priority is very low. If there is large  through output, major compact will be delayed.&lt;br/&gt;
About the ycsb, we have done some change on it, it can load data as we want(the key, value, speed is all customized). THe scan is randomly, so it have a chance on the regions lots of data outdated but haven&apos;t cleaned intime.&lt;br/&gt;
I think there is no need to check for hbase.hstore.blockingStoreFiles &amp;gt; hbase.hstore.compactionThreshold, because the priority can be negative. When there are more files in the store than blockingStoreFiles, the flush operation will triger a compact, and the priority will be negative, we have seen that before. The negitive priority means that there are too many files in the store, and the flushing of this store may be blocked for at most 90 seconds. We have seen this in the logs before.&lt;br/&gt;
And also, the user mustn&apos;t set hbase.hstore.blockingStoreFiles &amp;lt;= hbase.hstore.compactionThreshold, if so, blocking will aways happen.&lt;/p&gt;
</comment>
                            <comment id="13050857" author="zhoushuaifeng" created="Fri, 17 Jun 2011 02:05:20 +0000"  >&lt;p&gt;I agree Changes in add() method is required. Because when flush a file, it will triger a compact, and it should renew the priority of the region if it&apos;s file count increase.&lt;br/&gt;
And this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getCompactPriority() {
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(Store store : stores.values()) {
      count = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.min(count, store.getCompactPriority());
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; count;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think may be Math.max may be better. In case some store have too much files and blocked.&lt;br/&gt;
To boost the priority of the request after specified amount of time has elapsed is a good solution, but I&apos;m afraid it will impact the regions needs compaction more as described in my comments 16/Jun/11 07:14&lt;/p&gt;</comment>
                            <comment id="13050870" author="zhoushuaifeng" created="Fri, 17 Jun 2011 02:34:16 +0000"  >&lt;p&gt;Sorry, I confused for a while about higher and lower priority, count = Math.min(count, store.getCompactPriority()); is ok. &lt;/p&gt;</comment>
                            <comment id="13050879" author="zhoushuaifeng" created="Fri, 17 Jun 2011 03:05:36 +0000"  >&lt;p&gt;What will happen if we seting major priority between 1 and blockingStoreFiles - compactionThreshold may be like this: for example, blockingStoreFiles = 7, compactionThreshold = 3, we set major compact priority to 2:&lt;br/&gt;
If some region have 3 or 4 files, it&apos;s priority is lower than the major compact, the major compact will do first. But if the files in this region increase to 6 or 7, it&apos;s priority will be 1 or 0, the compact on this region will do first. So, the major compact will have a little higher priority but will not causing other regions blocked. Is it satisfactory?&lt;/p&gt;</comment>
                            <comment id="13050889" author="stack" created="Fri, 17 Jun 2011 03:59:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think there is no need to check for hbase.hstore.blockingStoreFiles &amp;gt; hbase.hstore.compactionThreshold, because the priority can be negative&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok.  Makes sense.&lt;/p&gt;

&lt;p&gt;On raising major compaction priority, can you make major compaction a configuration with the default being what it is currently?  So the default behavior is not changed?  If so, that would be easy to commit.&lt;/p&gt;</comment>
                            <comment id="13050917" author="zhoushuaifeng" created="Fri, 17 Jun 2011 07:36:39 +0000"  >&lt;blockquote&gt;
&lt;p&gt;can you make major compaction a configuration with the default being what it is currently?  So the default behavior is not changed?  If so, that would be easy to commit.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Good suggestion, thaks st. I made the change and attached the patch.&lt;/p&gt;</comment>
                            <comment id="13050930" author="zhoushuaifeng" created="Fri, 17 Jun 2011 08:19:01 +0000"  >&lt;p&gt;Make more improvement, if configured majorCompactPriority &amp;gt; r.getCompactPriority(), also use default priority.&lt;/p&gt;</comment>
                            <comment id="13053045" author="stack" created="Wed, 22 Jun 2011 05:15:12 +0000"  >&lt;p&gt;You are using this.instance.conf.getInt(&quot;hbase.hstore.blockingStoreFiles&quot;, 7) to indicate that we should use the default priority?  If so, why not just use a -1 altogether?  The mention of &quot;hbase.hstore.blockingStoreFiles&quot; I think will confuse folks who come along and read this code later.&lt;/p&gt;

&lt;p&gt;Something like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Index: org/apache/hadoop/hbase/regionserver/HRegionServer.java
===================================================================
--- org/apache/hadoop/hbase/regionserver/HRegionServer.java     (revision 1138255)
+++ org/apache/hadoop/hbase/regionserver/HRegionServer.java     (working copy)
@@ -1050,12 +1050,22 @@
    */
   &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class CompactionChecker &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Chore {
     &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HRegionServer instance;
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; majorCompactPriority;
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; DEFAULT_PRIORITY = -1;
 
     CompactionChecker(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HRegionServer h, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; sleepTime,
         &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Stoppable stopper) {
       &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;code-quote&quot;&gt;&quot;CompactionChecker&quot;&lt;/span&gt;, sleepTime, h);
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.instance = h;
       LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Runs every &quot;&lt;/span&gt; + StringUtils.formatTime(sleepTime));
+      
+      /* MajorCompactPriority is configurable.
+       * If not set, it will get the value of hbase.hstore.blockingStoreFiles,
+       * and the compaction will use &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; priority.
+       */
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.majorCompactPriority = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.instance.conf.
+        getInt(&lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.regionserver.compactionChecker.majorCompactPriority&quot;&lt;/span&gt;,
+        DEFAULT_PRIORITY);      
     }
 
     @Override
@@ -1065,10 +1075,19 @@
           &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
         &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Store s : r.getStores().values()) {
           &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
-            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (s.isMajorCompaction() || s.needsCompaction()) {
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (s.needsCompaction()) {
               &lt;span class=&quot;code-comment&quot;&gt;// Queue a compaction. Will recognize &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; major is needed.
&lt;/span&gt;               &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.instance.compactSplitThread.requestCompaction(r, s,
-                  getName() + &lt;span class=&quot;code-quote&quot;&gt;&quot; requests major compaction&quot;&lt;/span&gt;);
+                getName() + &lt;span class=&quot;code-quote&quot;&gt;&quot; requests compaction&quot;&lt;/span&gt;);
+            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (s.isMajorCompaction()) {
+              &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (majorCompactPriority == DEFAULT_PRIORITY ) {
+                &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.instance.compactSplitThread.requestCompaction(r, s,
+                    getName() + &lt;span class=&quot;code-quote&quot;&gt;&quot; requests major compaction; use &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; priority&quot;&lt;/span&gt;);
+              } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+               &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.instance.compactSplitThread.requestCompaction(r, s,
+                  getName() + &lt;span class=&quot;code-quote&quot;&gt;&quot; requests major compaction; use configured priority&quot;&lt;/span&gt;,
+                  &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.majorCompactPriority); 
+              }
             }
           } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
             LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;Failed major compaction check on &quot;&lt;/span&gt; + r, e);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does this give you what you want?  If so, I&apos;ll commit (I can make it work for branch too).&lt;/p&gt;</comment>
                            <comment id="13053114" author="zhoushuaifeng" created="Wed, 22 Jun 2011 08:00:35 +0000"  >&lt;p&gt;Yes St, it&apos;s what I mean. Thanks a lot.&lt;br/&gt;
But here I think need small change:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (s.isMajorCompaction()) {
+              &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (majorCompactPriority == DEFAULT_PRIORITY ) {
+                &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.instance.compactSplitThread.requestCompaction(r, s,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;change to like this is better, because if the region have more storefiles, it will get higher priority by default than the configured settings, and at this situation, it&apos;s better to use default priority:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (s.isMajorCompaction()) {
+              &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (majorCompactPriority == DEFAULT_PRIORITY || 
+        	        majorCompactPriority &amp;gt; r.getCompactPriority()) {
+                &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.instance.compactSplitThread.requestCompaction(r, s,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And may be it&apos;s better to set DEFAULT_PRIORITY to max integer, because compact priority can be -1 when the store files number equal to blockingStoreFiles+1.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; DEFAULT_PRIORITY = &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13053589" author="zhoushuaifeng" created="Thu, 23 Jun 2011 01:26:44 +0000"  >&lt;p&gt;I have made the change and attached the patch, please review it.&lt;/p&gt;</comment>
                            <comment id="13053635" author="stack" created="Thu, 23 Jun 2011 03:52:09 +0000"  >&lt;p&gt;Thank you for providing the v4s of the patch Zhou.  Committed branch and trunk.&lt;/p&gt;</comment>
                            <comment id="13056861" author="hudson" created="Tue, 28 Jun 2011 22:42:51 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1995 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/1995/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/1995/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="15015962" author="lars_francke" created="Fri, 20 Nov 2015 11:53:21 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12482901" name="HBASE-3969-solution1-for-branch-v2.patch" size="2238" author="zhoushuaifeng" created="Fri, 17 Jun 2011 07:36:39 +0000"/>
                            <attachment id="12482908" name="HBASE-3969-solution1-for-branch-v3.patch" size="2302" author="zhoushuaifeng" created="Fri, 17 Jun 2011 08:19:01 +0000"/>
                            <attachment id="12483537" name="HBASE-3969-solution1-for-branch-v4.patch" size="1987" author="zhoushuaifeng" created="Thu, 23 Jun 2011 01:26:44 +0000"/>
                            <attachment id="12482751" name="HBASE-3969-solution1-for-branch.patch" size="1506" author="zhoushuaifeng" created="Thu, 16 Jun 2011 06:30:59 +0000"/>
                            <attachment id="12482902" name="HBASE-3969-solution1-for-trunk-v2.patch" size="2539" author="zhoushuaifeng" created="Fri, 17 Jun 2011 07:36:39 +0000"/>
                            <attachment id="12482909" name="HBASE-3969-solution1-for-trunk-v3.patch" size="2605" author="zhoushuaifeng" created="Fri, 17 Jun 2011 08:19:01 +0000"/>
                            <attachment id="12483538" name="HBASE-3969-solution1-for-trunk-v4.patch" size="2291" author="zhoushuaifeng" created="Thu, 23 Jun 2011 01:26:44 +0000"/>
                            <attachment id="12481893" name="HBASE-3969-solution1.patch" size="1966" author="zhoushuaifeng" created="Thu, 9 Jun 2011 07:36:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Jun 2011 14:30:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33301</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0horj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101274</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>