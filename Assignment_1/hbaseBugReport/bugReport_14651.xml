<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:55:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14651/HBASE-14651.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14651] Default minimum compaction size is too high</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14651</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&lt;b&gt;hbase.hstore.compaction.min.size&lt;/b&gt; defines minimum selection size which is always eligible for minor compaction (no compaction ratio check is performed on such file selections). Default size is equals to memstore flush size (128MB).  First of all, even this value is too high for some (many) deployments, especially for write intensive, because of  a small sizes of a memstore flushes, and if user increases memstore flush size (they usually set it to at least 256MB), they have no idea how will it impact the overall compaction process efficiency. With 256MB of minimum size to compact, compactor most of the time skips necessary file ratio checks and this will result in increased read/write IO during compactions, because of the unbalanced selections where relatively large files can be mixed with a newly created small store files. I think we should set this default minimum  to 64MB and not to link it to memstore flush size at all.     &lt;/p&gt;</description>
                <environment></environment>
        <key id="12906101">HBASE-14651</key>
            <summary>Default minimum compaction size is too high</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="vrodionov">Vladimir Rodionov</assignee>
                                    <reporter username="vrodionov">Vladimir Rodionov</reporter>
                        <labels>
                    </labels>
                <created>Mon, 19 Oct 2015 23:02:30 +0000</created>
                <updated>Mon, 2 Nov 2015 23:48:59 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14964317" author="hadoopqa" created="Tue, 20 Oct 2015 00:39:27 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12767495/HBASE-14651-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12767495/HBASE-14651-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit c1f0442045f44fcbb3935f9244794929a5d0caea.&lt;br/&gt;
  ATTACHMENT ID: 12767495&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestDefaultCompactSelection&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16100//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16100//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16100//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16100//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16100//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16100//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16100//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16100//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14964953" author="anoop.hbase" created="Tue, 20 Oct 2015 10:38:01 +0000"  >&lt;p&gt;But the cluster configs to be adjusted so as to avoid the premature memstore flushes no?  So the flushed files will have sizes of this memstore flush size.  If we reduce the def size of min compaction to be much smaller than this, will that be good.. at least we want the immediate flushed files to be compacted..  And if user dont want that, he can always reduce the config value.  Do we really need to reduce this default value?&lt;/p&gt;</comment>
                            <comment id="14965980" author="vrodionov" created="Tue, 20 Oct 2015 23:40:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; So the flushed files will have sizes of this memstore flush size.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nope. Memstore size in Java Heap != compressed (serialized) store file. Usually, serialized  representation is 3-4x smaller + compression, we can talk about 8-10x reduction.&lt;/p&gt;

&lt;p&gt;Example (7 flushes):&lt;br/&gt;
Memstore flush size = 128MB&lt;br/&gt;
Store file size = 15MB &lt;br/&gt;
Minimum compaction size = 128MB&lt;/p&gt;

&lt;p&gt;15,&lt;br/&gt;
15,15&lt;br/&gt;
15,15,15&lt;br/&gt;
45&lt;br/&gt;
15,45&lt;br/&gt;
15,15,45&lt;br/&gt;
75&lt;br/&gt;
15,75&lt;br/&gt;
15,15,75&lt;br/&gt;
105&lt;/p&gt;

&lt;p&gt;Read=225MB&lt;br/&gt;
Write=330MB&lt;/p&gt;

&lt;p&gt;Memstore flush size = 128MB&lt;br/&gt;
Store file size = 15MB &lt;br/&gt;
Minimum compaction size = 64MB&lt;/p&gt;

&lt;p&gt;15,&lt;br/&gt;
15,15&lt;br/&gt;
15,15,15&lt;br/&gt;
45&lt;br/&gt;
15,45&lt;br/&gt;
15,15,45&lt;br/&gt;
15,15,15,45 (will be selected because of file ratio = 1.2)&lt;br/&gt;
90&lt;br/&gt;
15,90&lt;/p&gt;

&lt;p&gt;Read = 135MB&lt;br/&gt;
Write = 240MB&lt;/p&gt;</comment>
                            <comment id="14965986" author="vrodionov" created="Tue, 20 Oct 2015 23:48:23 +0000"  >&lt;p&gt;Continued ...&lt;/p&gt;

&lt;p&gt;With default minimum compaction size 128MB, compaction policy does two sub-optimal choices because of minimum compaction size:&lt;br/&gt;
15,15,45 = 75 (75/45 = 1.67)&lt;br/&gt;
15,15,75 = 105 (105/75 = 1.4)&lt;/p&gt;

&lt;p&gt;With 64MB, there is no suboptimal selections.&lt;/p&gt;</comment>
                            <comment id="14966025" author="vrodionov" created="Wed, 21 Oct 2015 00:23:43 +0000"  >&lt;p&gt;v2. Set default minimum compaction size to 1/2 of memstore flush size. Fixed one test.&lt;/p&gt;</comment>
                            <comment id="14966195" author="hadoopqa" created="Wed, 21 Oct 2015 03:51:02 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12767700/HBASE-14651-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12767700/HBASE-14651-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit a532ed73d808f543909c5563999405c82fa9b1d5.&lt;br/&gt;
  ATTACHMENT ID: 12767700&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16131//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16131//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16131//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16131//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16131//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16131//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16131//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16131//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14966259" author="stack" created="Wed, 21 Oct 2015 05:23:08 +0000"  >&lt;p&gt;Nice &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; How&apos;d you figure this? You see this in the wild? Yes on detaching from flush size given your reasoning above... the two should not be tied.&lt;/p&gt;

&lt;p&gt;Needs a fat release note.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; Take a look here sir.&lt;/p&gt;

&lt;p&gt;I always want to do up an excel spread sheet or a python script (there used to be one IIRC but could not find it just now) or I suppose it could be java script, that might be easiest to include actual policies, that could do compaction generations using our actual compaction selection policy... and our configs. It would take inputs that were the pathological state as well as optimal... and work out the write amplification a particular set of configs/policy would result in.&lt;/p&gt;
</comment>
                            <comment id="14966263" author="stack" created="Wed, 21 Oct 2015 05:28:31 +0000"  >&lt;p&gt;Found it. See attachement on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5626&quot; title=&quot;Compactions simulator tool for proofing algorithms&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5626&quot;&gt;HBASE-5626&lt;/a&gt;  Sergey says in the issue that it should be java so can use actual policy and configs.&lt;/p&gt;</comment>
                            <comment id="14967601" author="vrodionov" created="Wed, 21 Oct 2015 18:24:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nice Vladimir Rodionov How&apos;d you figure this? You see this in the wild?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Its analytical work &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; With default minimum size to compact RS can perform 1-2 compaction cycles w/o applying any smart heuristics at all.    &lt;/p&gt;</comment>
                            <comment id="14983163" author="stack" created="Fri, 30 Oct 2015 19:46:02 +0000"  >&lt;p&gt;I applied the patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; and it does not seem to make any difference.&lt;/p&gt;

&lt;p&gt;I have a cluster of 5 nodes with one RS on it. I load it using a YCSB all-writes workload. I start with an empty table for both tests.  I use 25 clients.&lt;/p&gt;

&lt;p&gt;The count of files compacted and the number of bytes charts have the same shape (its uncanny).&lt;/p&gt;

&lt;p&gt;I checked that the patch was indeed applied.&lt;/p&gt;</comment>
                            <comment id="14986147" author="vrodionov" created="Mon, 2 Nov 2015 22:06:06 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;What are the key-value sizes?&lt;/li&gt;
	&lt;li&gt;Values are random bytes?&lt;/li&gt;
	&lt;li&gt;Do you have stats on memstore flush sizes?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14986161" author="stack" created="Mon, 2 Nov 2015 22:12:52 +0000"  >&lt;p&gt;YCSB. So, rows are number and value is 1k.&lt;br/&gt;
Yes, random bytes.&lt;br/&gt;
How you mean stats for memstore flush sizes?&lt;/p&gt;

&lt;p&gt;I&apos;d think that if this patch was going to make a difference, the simple YCSB with regular keys would be where it would shine best?&lt;/p&gt;</comment>
                            <comment id="14986179" author="vrodionov" created="Mon, 2 Nov 2015 22:32:43 +0000"  >&lt;p&gt;With large random values, memstore flush size is dominated by value sizes (non-compressible in YCSB case), therefore if you have flush size close to minimum compaction size you will always have compaction selection size (min 3 files) greater than minimum compaction size, hence the patch won&apos;t give you anything.&lt;/p&gt;

&lt;p&gt;The good scenario is any Phoenix application (large keys, small values, highly compressible) or similar. &lt;/p&gt;
</comment>
                            <comment id="14986224" author="stack" created="Mon, 2 Nov 2015 23:05:38 +0000"  >&lt;p&gt;The similarity in the two graphs is uncanny. I was expecting some difference. Do you have test runs that show other that what I found? Do you have recommendation on how I might make this patch look good? Thanks.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12862595">HBASE-14383</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12767495" name="HBASE-14651-v1.patch" size="1109" author="vrodionov" created="Mon, 19 Oct 2015 23:15:47 +0000"/>
                            <attachment id="12767700" name="HBASE-14651-v2.patch" size="2004" author="vrodionov" created="Wed, 21 Oct 2015 00:23:43 +0000"/>
                            <attachment id="12769848" name="bytes.png" size="24172" author="stack" created="Fri, 30 Oct 2015 19:46:02 +0000"/>
                            <attachment id="12769847" name="files.png" size="27136" author="stack" created="Fri, 30 Oct 2015 19:46:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Oct 2015 00:39:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 6 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2n7p3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>