<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:28:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5569/HBASE-5569.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5569] Do not collect deleted KVs when they are still in use by a scanner.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5569</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I noticed this because TestAtomicOperation.testMultiRowMutationMultiThreads fails rarely.&lt;br/&gt;
The solution is similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;, where expired KVs are not collected when in use by a scanner.&lt;/p&gt;

&lt;p&gt;&amp;#8212;&lt;br/&gt;
What I pieced together so far is that it is the &lt;b&gt;scanning&lt;/b&gt; side that has problems sometimes.&lt;/p&gt;

&lt;p&gt;Every time I see a assertion failure in the log I see this before:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2012-03-12 21:48:49,523 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-211&amp;#93;&lt;/span&gt; regionserver.StoreScanner(499): Storescanner.peek() is changed where before = rowB/colfamily11:qual1/75366/Put/vlen=6,and after = rowB/colfamily11:qual1/75203/DeleteColumn/vlen=0&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The order of if the Put and Delete is sometimes reversed.&lt;/p&gt;

&lt;p&gt;The test threads should always see exactly one KV, if the &quot;before&quot; was the Put the thread see 0 KVs, if the &quot;before&quot; was the Delete the threads see 2 KVs.&lt;/p&gt;

&lt;p&gt;This debug message comes from StoreScanner to checkReseek. It seems we still some consistency issue with scanning sometimes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12546184">HBASE-5569</key>
            <summary>Do not collect deleted KVs when they are still in use by a scanner.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Mar 2012 04:40:27 +0000</created>
                <updated>Tue, 26 Feb 2013 08:12:36 +0000</updated>
                            <resolved>Wed, 21 Mar 2012 00:01:13 +0000</resolved>
                                                    <fixVersion>0.94.0</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                            <comments>
                            <comment id="13228200" author="lhofhansl" created="Tue, 13 Mar 2012 04:43:18 +0000"  >&lt;p&gt;Here&apos;s the other case.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2012-03-13 01:34:06,674 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-287&amp;#93;&lt;/span&gt; regionserver.StoreScanner(499): Storescanner.peek() is changed where before = rowB/colfamily11:qual1/56043/DeleteColumn/vlen=0,and after = rowB/colfamily11:qual1/54931/Put/vlen=6&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Locally I have not been able to reproduce this, yet.&lt;/p&gt;</comment>
                            <comment id="13228204" author="stack" created="Tue, 13 Mar 2012 04:50:49 +0000"  >&lt;p&gt;This is the failures we saw up on builds.apache.org?  There was a fail in hadoopqa too.  You including that?  Good on you Lars.&lt;/p&gt;</comment>
                            <comment id="13228205" author="stack" created="Tue, 13 Mar 2012 04:51:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;This debug message comes from StoreScanner to checkReseek. It seems we still some consistency issue with scanning sometimes &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Or is this a bug we&apos;ve introduced recently?&lt;/p&gt;</comment>
                            <comment id="13228206" author="lhofhansl" created="Tue, 13 Mar 2012 04:51:20 +0000"  >&lt;p&gt;A bit more context:&lt;/p&gt;

&lt;p&gt;One case:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2012-03-12 21:48:49,497 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-260&amp;#93;&lt;/span&gt; regionserver.Store(796): Added /home/jenkins/jenkins-slave/workspace/HBase-TRUNK/trunk/target/test-data/e923fe0e-3b3e-4c67-89ec-4cac8c991955/TestIncrementtestMultiRowMutationMultiThreads/testtable/446f80b650aa093734c2dff4b9581ff8/colfamily11/e0930b6c478c4a5db9eceaead90bc80e, entries=7, sequenceid=75545, filesize=1.0k&lt;br/&gt;
2012-03-12 21:48:49,522 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-260&amp;#93;&lt;/span&gt; regionserver.HRegion(1552): Finished memstore flush of ~87.4k/89544, currentsize=20.8k/21320 for region testtable,,1331588915162.446f80b650aa093734c2dff4b9581ff8. in 63ms, sequenceid=75545, compaction requested=true&lt;br/&gt;
2012-03-12 21:48:49,523 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-211&amp;#93;&lt;/span&gt; regionserver.StoreScanner(499): Storescanner.peek() is changed where before = rowB/colfamily11:qual1/75366/Put/vlen=6,and after = rowB/colfamily11:qual1/75203/DeleteColumn/vlen=0&lt;br/&gt;
2012-03-12 21:48:49,523 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-211&amp;#93;&lt;/span&gt; regionserver.TestAtomicOperation$2(390): []&lt;br/&gt;
Exception in thread &quot;Thread-211&quot; junit.framework.AssertionFailedError	at junit.framework.Assert.fail(Assert.java:48)&lt;br/&gt;
	at junit.framework.Assert.fail(Assert.java:56)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation$2.run(TestAtomicOperation.java:392)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Another case:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2012-03-13 01:34:06,655 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-212&amp;#93;&lt;/span&gt; regionserver.Store(748): Flushed , sequenceid=56173, memsize=1.8k, into tmp file /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/target/test-data/48f0d653-d644-41be-80ff-90e726af10d4/TestIncrementtestMultiRowMutationMultiThreads/testtable/00fad569500db871769b9d5951b3ed16/.tmp/a0e1d5df9b5344c19ddbc7b11e0cd9d2&lt;br/&gt;
2012-03-13 01:34:06,656 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-212&amp;#93;&lt;/span&gt; regionserver.Store(773): Renaming flushed file at /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/target/test-data/48f0d653-d644-41be-80ff-90e726af10d4/TestIncrementtestMultiRowMutationMultiThreads/testtable/00fad569500db871769b9d5951b3ed16/.tmp/a0e1d5df9b5344c19ddbc7b11e0cd9d2 to /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/target/test-data/48f0d653-d644-41be-80ff-90e726af10d4/TestIncrementtestMultiRowMutationMultiThreads/testtable/00fad569500db871769b9d5951b3ed16/colfamily11/a0e1d5df9b5344c19ddbc7b11e0cd9d2&lt;br/&gt;
2012-03-13 01:34:06,661 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-212&amp;#93;&lt;/span&gt; regionserver.Store(796): Added /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/trunk/target/test-data/48f0d653-d644-41be-80ff-90e726af10d4/TestIncrementtestMultiRowMutationMultiThreads/testtable/00fad569500db871769b9d5951b3ed16/colfamily11/a0e1d5df9b5344c19ddbc7b11e0cd9d2, entries=11, sequenceid=56173, filesize=1.2k&lt;br/&gt;
2012-03-13 01:34:06,674 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-287&amp;#93;&lt;/span&gt; regionserver.StoreScanner(499): Storescanner.peek() is changed where before = rowB/colfamily11:qual1/56043/DeleteColumn/vlen=0,and after = rowB/colfamily11:qual1/54931/Put/vlen=6&lt;br/&gt;
2012-03-13 01:34:06,674 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-287&amp;#93;&lt;/span&gt; regionserver.TestAtomicOperation$2(390): &lt;span class=&quot;error&quot;&gt;&amp;#91;rowA/colfamily11:qual1/56043/Put/vlen=6, rowB/colfamily11:qual1/54931/Put/vlen=6&amp;#93;&lt;/span&gt;&lt;br/&gt;
Exception in thread &quot;Thread-287&quot; junit.framework.AssertionFailedError	at junit.framework.Assert.fail(Assert.java:48)&lt;br/&gt;
	at junit.framework.Assert.fail(Assert.java:56)&lt;br/&gt;
	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation$2.run(TestAtomicOperation.java:392)&lt;br/&gt;
2012-03-13 01:34:06,675 INFO  &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-212&amp;#93;&lt;/span&gt; regionserver.HRegion(1552): Finished memstore flush of ~380.5k/389664, currentsize=28.5k/29192 for region testtable,,1331602436835.00fad569500db871769b9d5951b3ed16. in 44ms, sequenceid=56173, compaction requested=true&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So it seems this is related to flushing (test test flushes frequently - 1/s - precisely to exercise this scenario)&lt;/p&gt;</comment>
                            <comment id="13228211" author="lhofhansl" created="Tue, 13 Mar 2012 05:02:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;This is the failures we saw up on builds.apache.org? There was a fail in hadoopqa too. You including that?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yep those are the ones. I recall now that I have occasionally seen these before.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Or is this a bug we&apos;ve introduced recently?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Possible, but I do not think that is likely.&lt;br/&gt;
Maybe the test code is not valid?&lt;br/&gt;
Or maybe there is more work to do for multi-row transactions and scanners do not yet see Puts and Deletes atomically across multiple rows...?&lt;/p&gt;</comment>
                            <comment id="13228225" author="lhofhansl" created="Tue, 13 Mar 2012 05:34:23 +0000"  >&lt;p&gt;I wonder if this has to do with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5568&quot; title=&quot;Multi concurrent flushcache() for one region could cause data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5568&quot;&gt;&lt;del&gt;HBASE-5568&lt;/del&gt;&lt;/a&gt;?&lt;br/&gt;
I have multiple threads here that flush the same HRegion directly.&lt;/p&gt;</comment>
                            <comment id="13228236" author="stack" created="Tue, 13 Mar 2012 06:00:24 +0000"  >&lt;p&gt;Ugh.  Indexing JIRA lost my comment.&lt;/p&gt;

&lt;p&gt;Looking at builds, we don&apos;t have much of a history on trunk builds but TestAtomicOperation started failing today when &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5399&quot; title=&quot;Cut the link between the client and the zookeeper ensemble&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5399&quot;&gt;&lt;del&gt;HBASE-5399&lt;/del&gt;&lt;/a&gt; Cut the link between the client and the zookeeper ensemble&quot; went in (among others).  I see over in hadoopqa builds that it doesn&apos;t fail if I go back twenty odd builds.  It did break here, &lt;a href=&quot;https://builds.apache.org/view/G-L/view/HBase/job/PreCommit-HBASE-Build/1168/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/G-L/view/HBase/job/PreCommit-HBASE-Build/1168/&lt;/a&gt;, and on a later build.  Should I try reverting it?&lt;/p&gt;</comment>
                            <comment id="13228498" author="lhofhansl" created="Tue, 13 Mar 2012 16:33:45 +0000"  >&lt;p&gt;I&apos;ll run this in a loop on my work machine (8 core + hyperthreading), should increase the likelihood of this happening.&lt;br/&gt;
Will then avoid the parallel flushing, and see of that fixes the problem.&lt;/p&gt;

&lt;p&gt;I think the test always had this problem. On the other I do think this indicates a problem with scanning.&lt;br/&gt;
This is suspicious, and the code producing this was also added relatively recently:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Storescanner.peek() is changed where before = rowB/colfamily11:qual1/75366/Put/vlen=6,and after = rowB/colfamily11:qual1/75203/DeleteColumn/vlen&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13228546" author="lhofhansl" created="Tue, 13 Mar 2012 18:02:59 +0000"  >&lt;p&gt;I cannot make this test fail locally it seems. Running in a loop for an hour now (test takes ~12s on my machine).&lt;/p&gt;</comment>
                            <comment id="13228553" author="lhofhansl" created="Tue, 13 Mar 2012 18:12:11 +0000"  >&lt;p&gt;Are my assumptions about scanning wrong here?&lt;/p&gt;

&lt;p&gt;The test works as follows:&lt;br/&gt;
A bunch of thread alternate putting a column on RowA and deleting that column on RowB in a transaction (next time delete is on RowA and put on RowB).&lt;br/&gt;
The they each scan starting with RowA and then expect to always see exactly one KV (either the column in RowA or the one in RowB).&lt;/p&gt;

&lt;p&gt;So this relies on a scan providing an atomic view over the two rows (which is think should work if both RowA and RowB are rolled forward with the same MVCC writepoint).&lt;/p&gt;</comment>
                            <comment id="13228554" author="lhofhansl" created="Tue, 13 Mar 2012 18:14:11 +0000"  >&lt;p&gt;Ok... Failed locally once now as well.&lt;/p&gt;</comment>
                            <comment id="13228568" author="lhofhansl" created="Tue, 13 Mar 2012 18:34:20 +0000"  >&lt;p&gt;The check that issues the above DEBUG message was added as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5121&quot; title=&quot;MajorCompaction may affect scan&amp;#39;s correctness&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5121&quot;&gt;&lt;del&gt;HBASE-5121&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Interestingly that issue is only about major compactions, and this test does not have any major compactions, so maybe &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5121&quot; title=&quot;MajorCompaction may affect scan&amp;#39;s correctness&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5121&quot;&gt;&lt;del&gt;HBASE-5121&lt;/del&gt;&lt;/a&gt; is incorrect?&lt;/p&gt;</comment>
                            <comment id="13228592" author="stack" created="Tue, 13 Mar 2012 19:01:16 +0000"  >&lt;p&gt;hbase-5121 does mess w/ scanners... Seems like pretty issue though, what hbase-5121 is trying to solve.  Pity its so hard verifying this started the failures else we could back it out for now.  Should we back it out anyways and see if we get failures over the next few days?&lt;/p&gt;</comment>
                            <comment id="13228665" author="lhofhansl" created="Tue, 13 Mar 2012 20:26:20 +0000"  >&lt;p&gt;I can try to back out &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5121&quot; title=&quot;MajorCompaction may affect scan&amp;#39;s correctness&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5121&quot;&gt;&lt;del&gt;HBASE-5121&lt;/del&gt;&lt;/a&gt; and see if I can still get this fail.&lt;/p&gt;

&lt;p&gt;I do think my assumption about scanning were wrong, though. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt; is still valid (in that it allows a bunch of operations across multiple rows either all fail or all succeed), just that there is currently no way to get a consistent scan over &lt;b&gt;multiple&lt;/b&gt; rows when flushing is involved (which is OK, because the scanner contract never guaranteed that). If that is the case I should disable the test.&lt;/p&gt;

&lt;p&gt;TestAtomicOperation.testRowMutationMultiThreads basically does the same thing only within the same row, I have never seen that one fail.&lt;/p&gt;</comment>
                            <comment id="13228802" author="nkeywal" created="Tue, 13 Mar 2012 23:15:49 +0000"  >&lt;p&gt;testRowMutationMultiThreads logs, on trunk as of today. It failed after 200 iterations.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 9.007 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
testRowMutationMultiThreads(org.apache.hadoop.hbase.regionserver.TestAtomicOperation)  Time elapsed: 8.651 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
junit.framework.AssertionFailedError: expected:&amp;lt;0&amp;gt; but was:&amp;lt;8&amp;gt;
	at junit.framework.Assert.fail(Assert.java:50)
	at junit.framework.Assert.failNotEquals(Assert.java:287)
	at junit.framework.Assert.assertEquals(Assert.java:67)
	at junit.framework.Assert.assertEquals(Assert.java:199)
	at junit.framework.Assert.assertEquals(Assert.java:205)
	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation.testRowMutationMultiThreads(TestAtomicOperation.java:331)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13228982" author="zjushch" created="Wed, 14 Mar 2012 05:27:24 +0000"  >&lt;p&gt;The check that issues the above DEBUG message added as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5121&quot; title=&quot;MajorCompaction may affect scan&amp;#39;s correctness&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5121&quot;&gt;&lt;del&gt;HBASE-5121&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
&#65288;Storescanner.peek() is changed&#12290;&#12290;&#12290;&#65289; will also may print after flush.&lt;/p&gt;

&lt;p&gt;This DEBUG message means StoreScanner.peek() is changed after a compaction or a flush or others who calls Store notifyChangedReadersObservers().&lt;/p&gt;
</comment>
                            <comment id="13228988" author="zjushch" created="Wed, 14 Mar 2012 05:33:32 +0000"  >&lt;p&gt;I think it&apos;s may the test case&apos;s problem.&lt;/p&gt;

&lt;p&gt;Between the time thread1 execute &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;region.mutateRowsWithLocks(mrm, rowsToLock);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Scan s = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Scan(row);
RegionScanner rs = region.getScanner(s);
              List&amp;lt;KeyValue&amp;gt; r = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;KeyValue&amp;gt;();
              &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(rs.next(r));&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;another thread2 may execute &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Put p = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put(row2, ts);
                p.add(fam1, qual1, value1);
                mrm.add(p);
                Delete d = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(row);
                d.deleteColumns(fam1, qual1, ts);
                mrm.add(d);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;, and it will delete row, &lt;br/&gt;
So thread1 may couldn&apos;t get any data.&lt;/p&gt;

&lt;p&gt;suggestion if uncorrect,thanks.&lt;/p&gt;</comment>
                            <comment id="13228993" author="zhihyu@ebaysf.com" created="Wed, 14 Mar 2012 05:45:38 +0000"  >&lt;p&gt;@Chunhui:&lt;br/&gt;
This makes sense.&lt;/p&gt;

&lt;p&gt;Looks like the test case can utilize &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5515&quot; title=&quot;Add a processRow API that supports atomic multiple reads and writes on a row&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5515&quot;&gt;&lt;del&gt;HBASE-5515&lt;/del&gt;&lt;/a&gt;: Add a processRow API that supports atomic multiple reads and writes on a row&lt;/p&gt;</comment>
                            <comment id="13228998" author="lhofhansl" created="Wed, 14 Mar 2012 05:55:52 +0000"  >&lt;p&gt;Well... The whole point of the new API was to have atomic operations.&lt;br/&gt;
The Put and the Delete are executed atomically together and visible at the same time.&lt;br/&gt;
Note that the code alternates putting row and deleting row2, and then putting row2 and deleting row. The scan than ensure that only exactly one column is visible.&lt;/p&gt;

&lt;p&gt;In this case the scan &lt;b&gt;itself&lt;/b&gt; is inconsistent. And worse, as Nicolas (N) found out is that even testRowMutationMultiThreads fails sometimes, and that is just a single row and should never happen.&lt;/p&gt;

&lt;p&gt;So I am not entirely convinced the test is at fault.&lt;/p&gt;

&lt;p&gt;For example the scenario described above:&lt;br/&gt;
if&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Put p = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put(row2, ts);
                p.add(fam1, qual1, value1);
                mrm.add(p);
                Delete d = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Delete(row);
                d.deleteColumns(fam1, qual1, ts);
                mrm.add(d);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;happened between &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
region.mutateRowsWithLocks(mrm, rowsToLock);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

Scan s = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Scan(row);
RegionScanner rs = region.getScanner(s);
              List&amp;lt;KeyValue&amp;gt; r = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;KeyValue&amp;gt;();
              &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(rs.next(r));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both the Put and the Delete would happen atomically with the same WALEdit and the same MVCC writepoint. So the scan will now see the other row (it sees either row or row, because row &lt;del&gt;RowA&lt;/del&gt; sorts before row2 &lt;del&gt;RowB&lt;/del&gt;)&lt;br/&gt;
This has nothing to do with race conditions between threads, but only occurs with flushes in the test. I&apos;ll remove the forced flushes and then run the test again.&lt;/p&gt;</comment>
                            <comment id="13229016" author="lhofhansl" created="Wed, 14 Mar 2012 06:28:05 +0000"  >&lt;p&gt;Can&apos;t unpack the rar file (guess I need the non-free unrar package, and as a principle I do not install non-free software on my machines).&lt;br/&gt;
What I really just need to know is whether there are messages like those in the description right before any assertion failures.&lt;/p&gt;</comment>
                            <comment id="13229018" author="zjushch" created="Wed, 14 Mar 2012 06:29:20 +0000"  >&lt;p&gt;@Lars&lt;br/&gt;
Maybe I don&apos;t say clearly.&lt;/p&gt;

&lt;p&gt;We could consider the following scenario:&lt;/p&gt;

&lt;p&gt;Time 1,Thread 1, row is deleted and row2 is put, so now in the hbase, the real KV is only row2&lt;/p&gt;

&lt;p&gt;Time 2,Thread 1, do RegionScanner rs = region.getScanner(s);RS open the scanner, and ponit the next KV is row2&lt;/p&gt;

&lt;p&gt;Time 3,Thread 2, row2 is deleted and row is put,so now in the hbase, the real KV is only row&lt;/p&gt;

&lt;p&gt;Time 4,Thread 1 do while(rs.next(r)); because the scanner is pointing row2, however it is deleted now, so rs.next(r) will get nothing even if row is in the hbase.&lt;/p&gt;

&lt;p&gt;To fix this issue, we should do scanner.seek in scanner.next() rather than in construction of scanner.&lt;/p&gt;</comment>
                            <comment id="13229021" author="lhofhansl" created="Wed, 14 Mar 2012 06:37:32 +0000"  >&lt;p&gt;Each scanner should only see KVs according to its mvcc readpoint.&lt;br/&gt;
What you describe could also happen with KVs &quot;inside&quot; the same row, and the mvcc readpoint guards against this.&lt;/p&gt;</comment>
                            <comment id="13229023" author="zjushch" created="Wed, 14 Mar 2012 06:44:05 +0000"  >&lt;p&gt;Is there any possibility that region.flush break the rule: each scanner should only see KVs according to its mvcc readpoint.&lt;br/&gt;
Because in current flush logic, KVs will be deleted when flushing if there is tag of delete type. &lt;/p&gt;</comment>
                            <comment id="13229025" author="lhofhansl" created="Wed, 14 Mar 2012 06:46:43 +0000"  >&lt;p&gt;But here&apos;s a thought. Unless KEEP_DELETED_CELLS is set to true for a store, a flush will unconditionally purge all deleted rows (I put that in that optimization myself &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )... That might be a hole in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt;, since this was never needed.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; delay expiration of KVs until all scans are finished, but it does not do this for deleted cells.&lt;/p&gt;

&lt;p&gt;I&apos;m trying now with KEEP_DELETED_CELLS enabled to see if I can still reproduce this problem.&lt;/p&gt;</comment>
                            <comment id="13229026" author="lhofhansl" created="Wed, 14 Mar 2012 06:47:11 +0000"  >&lt;p&gt;Comment crossing... We had the same thought. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13229028" author="lhofhansl" created="Wed, 14 Mar 2012 06:48:35 +0000"  >&lt;p&gt;But note that sometime the other case happens, and we see two rows!&lt;/p&gt;</comment>
                            <comment id="13229035" author="nkeywal" created="Wed, 14 Mar 2012 06:54:23 +0000"  >&lt;p&gt;There&apos;s no message on Storescanner.peek, nor error or warning. Here&apos;s the log when it fails:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2012-03-14 03:14:02,146 DEBUG [Thread-51] regionserver.TestAtomicOperation$1(305): keyvalues=NONE
Exception in thread &quot;Thread-51&quot; 
junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:48)
	at junit.framework.Assert.fail(Assert.java:56)
	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation$1.run(TestAtomicOperation.java:307)
2012-03-14 03:14:02,228 DEBUG [Thread-92] regionserver.TestAtomicOperation$1(279): flushing
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Reproduced on Feb&apos; 24th trunk as well, after ~700 iterations, same logs.&lt;/p&gt;</comment>
                            <comment id="13229037" author="zjushch" created="Wed, 14 Mar 2012 06:55:54 +0000"  >&lt;p&gt;Since mvcc readpoint guards against scanner see KVs out of its readpoint, why could we see two rows?&lt;/p&gt;</comment>
                            <comment id="13229044" author="lhofhansl" created="Wed, 14 Mar 2012 07:10:16 +0000"  >&lt;p&gt;That is the question &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13229498" author="lhofhansl" created="Wed, 14 Mar 2012 18:53:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; added logic about when KVs can be expired (either by version or TTL), it did not add this same logic for deleted rows (i.e. for deletes the rug can be pulled from under a scan).&lt;br/&gt;
I added that (which ended up being a one line change once I understood what is going on). Running test in a loop now.&lt;/p&gt;</comment>
                            <comment id="13229501" author="lhofhansl" created="Wed, 14 Mar 2012 18:56:51 +0000"  >&lt;p&gt;Here&apos;s the patch. Still running tests in a loop, no failure, yet.&lt;br/&gt;
Attaching here, so that I can get a HadoopQA run.&lt;/p&gt;</comment>
                            <comment id="13229523" author="zhihyu@ebaysf.com" created="Wed, 14 Mar 2012 19:19:42 +0000"  >&lt;p&gt;+1 on patch.&lt;/p&gt;</comment>
                            <comment id="13229539" author="lhofhansl" created="Wed, 14 Mar 2012 19:30:02 +0000"  >&lt;p&gt;I notice the test takes much longer to complete now. Before the change it was 11s,  now it&apos;s about 90s.&lt;br/&gt;
That might just be the nature of the test, as it deletes and put a &lt;b&gt;lot&lt;/b&gt;, and the actual removal of the deleted KVs is delayed (just as it is for expired KVs).&lt;/p&gt;</comment>
                            <comment id="13229541" author="lhofhansl" created="Wed, 14 Mar 2012 19:32:10 +0000"  >&lt;p&gt;Specifically the test deletes a lot of KVs that are still part of a scan and hence cannot be removed, so I think this is ok as far as this test goes.&lt;/p&gt;</comment>
                            <comment id="13229542" author="zhihyu@ebaysf.com" created="Wed, 14 Mar 2012 19:34:10 +0000"  >&lt;p&gt;Currently the test is marked as medium test.&lt;br/&gt;
Can we lower the number of threads in the test ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; numThreads; i++) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13229549" author="hadoopqa" created="Wed, 14 Mar 2012 19:46:01 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12518357/5569.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12518357/5569.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 161 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1188//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1188//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1188//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1188//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1188//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1188//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13229552" author="lhofhansl" created="Wed, 14 Mar 2012 19:50:38 +0000"  >&lt;p&gt;@Ted: Probably. Or make it a large test.&lt;br/&gt;
I&apos;ll leave the test running in a loop for the rest of the day before I conclude anything. There might just be lower concurrency now and hence the problem is less likely to see.&lt;br/&gt;
BTW. On my machine at home the time went from 70s to 400s.&lt;/p&gt;

&lt;p&gt;I assume we&apos;d see the same in a test with a CF with VERSIONS=1 and then we put and scan in parallel. After &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; went in, these puts could not be collected at flush time as they are used in a scan, now with this change the same happens for deletes.&lt;/p&gt;</comment>
                            <comment id="13229676" author="lhofhansl" created="Wed, 14 Mar 2012 22:05:08 +0000"  >&lt;p&gt;Test is still running in a loop, hasn&apos;t failed, yet.&lt;br/&gt;
I&apos;ll do some more performance tests to make sure this is only slowed down when needed (I need when scans are being performed)&lt;/p&gt;</comment>
                            <comment id="13229703" author="lhofhansl" created="Wed, 14 Mar 2012 22:26:51 +0000"  >&lt;p&gt;If I remove the scanning from the tests the times are back to what it was before, suggesting that the extra work is due to keeping (and flushing) deleted cells that cannot be collected because they are part of a scan.&lt;/p&gt;

&lt;p&gt;I&apos;m happy with this outcome, and I would like to commit this change. &lt;br/&gt;
Ted +1&apos;d, I&apos;m +1 (obviously), but it wouldn&apos;t hurt to have another pair of eyes or two looking at this.&lt;/p&gt;</comment>
                            <comment id="13229790" author="lhofhansl" created="Thu, 15 Mar 2012 00:23:10 +0000"  >&lt;p&gt;Same change.&lt;br/&gt;
In addition reduced number of threads to 50 and number of iterations to 500 to bring test runtimes to about 15s (on my machine).&lt;/p&gt;</comment>
                            <comment id="13229813" author="lhofhansl" created="Thu, 15 Mar 2012 01:00:57 +0000"  >&lt;p&gt;Will run tests over night and commit tomorrow morning unless I see a test failure or I get any objections.&lt;/p&gt;</comment>
                            <comment id="13229830" author="hadoopqa" created="Thu, 15 Mar 2012 01:51:44 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12518404/5569-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12518404/5569-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 161 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1190//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1190//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1190//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1190//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1190//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1190//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13230207" author="lhofhansl" created="Thu, 15 Mar 2012 14:42:05 +0000"  >&lt;p&gt;Ran all tests in TestAtomicOperation more that 3000 times without a failure.&lt;/p&gt;</comment>
                            <comment id="13230295" author="lhofhansl" created="Thu, 15 Mar 2012 16:55:11 +0000"  >&lt;p&gt;3500 test runs, no failures. Going to commit if nobody objects.&lt;/p&gt;</comment>
                            <comment id="13230417" author="lhofhansl" created="Thu, 15 Mar 2012 18:50:00 +0000"  >&lt;p&gt;Committed to 0.94 and trunk&lt;/p&gt;</comment>
                            <comment id="13230428" author="stack" created="Thu, 15 Mar 2012 19:00:46 +0000"  >&lt;p&gt;@Lars Good one.&lt;/p&gt;</comment>
                            <comment id="13230492" author="hudson" created="Thu, 15 Mar 2012 20:05:04 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #32 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/32/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/32/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt;  Do not collect deleted KVs when they are still in use by a scanner. (Revision 1301138)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13230537" author="hudson" created="Thu, 15 Mar 2012 20:59:02 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2683 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2683/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2683/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt;  Do not collect deleted KVs when they are still in use by a scanner. (Revision 1301135)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13230913" author="hudson" created="Fri, 16 Mar 2012 05:52:19 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #139 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/139/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/139/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt;  Do not collect deleted KVs when they are still in use by a scanner. (Revision 1301135)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13231610" author="nkeywal" created="Fri, 16 Mar 2012 20:48:29 +0000"  >&lt;p&gt;fwiw, I still have the error on testRowMutationMultiThreads, after a few hundreds iterations... Same logs as above.&lt;/p&gt;</comment>
                            <comment id="13231680" author="lhofhansl" created="Fri, 16 Mar 2012 22:15:23 +0000"  >&lt;p&gt;Hmm... I ran the tests (all of them - including testRowMutationMultiThreads) over 4000 times, didn&apos;t fail.&lt;br/&gt;
testMultiRowMutationMultiThreads is definitely fixed (failed after a few dozen executions before).&lt;/p&gt;

&lt;p&gt;There might be yet another much rarer problem with testRowMutationMultiThreads. I&apos;ve never seen it fail on the build machines, yet.&lt;/p&gt;

&lt;p&gt;Any chance you could attach the latest logs (as zip or tar)?&lt;/p&gt;

&lt;p&gt;Btw, this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2012-03-14 03:14:02,146 DEBUG [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-51] regionserver.TestAtomicOperation$1(305): keyvalues=NONE
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-51&quot;&lt;/span&gt; 
junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:48)
	at junit.framework.Assert.fail(Assert.java:56)
	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation$1.run(TestAtomicOperation.java:307)
2012-03-14 03:14:02,228 DEBUG [&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-92] regionserver.TestAtomicOperation$1(279): flushing
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is just when the test detects the problem. The actual problem should be in the logs some time before that.&lt;/p&gt;</comment>
                            <comment id="13231815" author="lhofhansl" created="Sat, 17 Mar 2012 02:35:28 +0000"  >&lt;p&gt;Ran testRowMutationMultiThreads another 1000 times on my work machine without any failures.&lt;br/&gt;
Then I ran it at home (much slower machine - but fast SSD) and saw a failure indeed pretty quickly. Hmm...&lt;/p&gt;</comment>
                            <comment id="13231816" author="lhofhansl" created="Sat, 17 Mar 2012 02:37:24 +0000"  >&lt;p&gt;Interestingly I saw this right before:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2012-03-16 19:24:30,523 DEBUG &lt;span class=&quot;error&quot;&gt;&amp;#91;Thread-46&amp;#93;&lt;/span&gt; regionserver.StoreScanner(499): Stores&lt;br/&gt;
canner.peek() is changed where before = rowA/colfamily11:qual1/2561/DeleteColumn&lt;br/&gt;
/vlen=0,and after = rowA/colfamily11:qual1/2561/DeleteColumn/vlen=0&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Which makes no sense, because before and after are the same KV.&lt;/p&gt;</comment>
                            <comment id="13231818" author="lhofhansl" created="Sat, 17 Mar 2012 02:53:46 +0000"  >&lt;p&gt;So I suppose this can happen when the two deletes differ only by memstoreTS.&lt;br/&gt;
This is a different problem from I fixed in this issue.&lt;/p&gt;</comment>
                            <comment id="13231825" author="lhofhansl" created="Sat, 17 Mar 2012 03:46:43 +0000"  >&lt;p&gt;Added some extra logging. Turns out that the after KV always has memstoreTS=0.&lt;br/&gt;
I have to conclude that this is not fixed, yet.&lt;/p&gt;</comment>
                            <comment id="13231833" author="lhofhansl" created="Sat, 17 Mar 2012 04:16:26 +0000"  >&lt;p&gt;This must be some strange timing issue since it &lt;b&gt;never&lt;/b&gt; happens on my fast work machine.&lt;br/&gt;
I think I&apos;ll revert the change until I understand this better.&lt;/p&gt;</comment>
                            <comment id="13231873" author="lhofhansl" created="Sat, 17 Mar 2012 07:14:13 +0000"  >&lt;p&gt;Reverted from 0.94 and trunk. Sigh.&lt;br/&gt;
A few more details:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This has definitely something to do with StoreScanner.
{checkReseek|resetScannerStack}
&lt;p&gt;.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;I &lt;b&gt;always&lt;/b&gt; see the DEBUG message about the StoreScanner.peek being changed.&lt;/li&gt;
	&lt;li&gt;Removing the code for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5121&quot; title=&quot;MajorCompaction may affect scan&amp;#39;s correctness&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5121&quot;&gt;&lt;del&gt;HBASE-5121&lt;/del&gt;&lt;/a&gt; does &lt;b&gt;not&lt;/b&gt; fix this problem.&lt;/li&gt;
	&lt;li&gt;This is not related to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5568&quot; title=&quot;Multi concurrent flushcache() for one region could cause data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5568&quot;&gt;&lt;del&gt;HBASE-5568&lt;/del&gt;&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;The new KV on the heap is always older than the existing one (so the scanner is going backwards in this case)! In this test the client threads assign the timestamps, so one of them might just fall behind.&lt;/li&gt;
	&lt;li&gt;The new KV on the head always has memstoreTS=0.&lt;/li&gt;
	&lt;li&gt;Either the new or the old KV is a delete marker (but that might be because of the nature of this test).&lt;/li&gt;
	&lt;li&gt;Both testRowMutationMultiThreads and testMultiRowMutationMultiThreads have the same problem. So this happens even for Puts and Deletes for the &lt;b&gt;same&lt;/b&gt; Row, even when they written with the same mvcc writenumber and the in the same WALEdit.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll see if I can write a more deterministic test for this.&lt;/p&gt;</comment>
                            <comment id="13231876" author="lhofhansl" created="Sat, 17 Mar 2012 07:21:49 +0000"  >&lt;p&gt;One last point: This seems to be extremely sensitive to the machine it is running on.&lt;br/&gt;
Among the various loops I ran on my work machine I ran the test close to 10000 times and have not observed a single failure on that machine (with my changes applied), while on my home machine this is relatively easy to reproduce.&lt;/p&gt;</comment>
                            <comment id="13231885" author="hudson" created="Sat, 17 Mar 2012 07:40:14 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #38 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/38/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/38/&lt;/a&gt;)&lt;br/&gt;
    Revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt; (Revision 1301873)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13232184" author="hudson" created="Sun, 18 Mar 2012 06:16:11 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #141 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/141/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/141/&lt;/a&gt;)&lt;br/&gt;
    Revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt; (Revision 1301872)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13232341" author="lhofhansl" created="Sun, 18 Mar 2012 19:38:26 +0000"  >&lt;p&gt;I spent a lot of more time looking at this. I thought it might be due to the flushes being executed in parallel by multiple threads, but synchronizing this part made the failure more likely!&lt;br/&gt;
Doing this and increasing the frequency of flushes reproduces the problem multiple times on every test run now, which it good.&lt;/p&gt;

&lt;p&gt;But... My initial hunch was correct. When I enable KEEP_DELETED_CELLS on the store the problem goes away!&lt;br/&gt;
Hence this definitely has to do with collection of deletes and delete markers.&lt;/p&gt;</comment>
                            <comment id="13232349" author="lhofhansl" created="Sun, 18 Mar 2012 20:11:15 +0000"  >&lt;p&gt;Here&apos;s my theory...&lt;br/&gt;
In ScanQueryMatcher we have this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; type = kv.getType();
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (kv.isDelete()) {
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!keepDeletedCells) {
    ...
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.deletes.add(bytes, offset, qualLength, timestamp, type);
  }
  ...
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.deletes.isEmpty()) {
  DeleteResult deleteResult = deletes.isDeleted(bytes, offset, qualLength,
      timestamp);
  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And in StoreScanner.resetScannerStack&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// Reset the state of the Query Matcher and set to top row.
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// Only reset and call setRow &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the row changes; avoids confusing the
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// query matcher &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; scanning intra-row.
&lt;/span&gt;...
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ((matcher.row == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) || !kv.matchingRow(matcher.row)) {
  matcher.reset();
  matcher.setRow(kv.getRow());
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So, the SQM might already have a delete registered, or might miss a delete.&lt;br/&gt;
With KEEP_DELETED_CELLS that race does not happen, because deletes are simply not registered.&lt;/p&gt;</comment>
                            <comment id="13232359" author="lhofhansl" created="Sun, 18 Mar 2012 20:40:05 +0000"  >&lt;p&gt;This&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (includeDeleteMarker
    &amp;amp;&amp;amp; kv.getMemstoreTS() &amp;lt;= maxReadPointToTrackVersions) {
   &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.deletes.add(bytes, offset, qualLength, timestamp, type);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Fixes the issue. Note that maxReadPointToTrackVersions is actually the minimum readpoint of any scanner still operating in the region and it is &lt;b&gt;only&lt;/b&gt; set during compaction.&lt;br/&gt;
I think this correct because of the following:&lt;br/&gt;
All delete markers precede the KVs they affect. So by not adding the delete marker it is guarantees that no KVs will be removed during flush that might still be in use. It also removes this race condition between scanner and flushes.&lt;/p&gt;

&lt;p&gt;So my previous fix was almost correct (in thought at least). I had believed it to be correct, because I had not been able - not even a single time - to reproduce this on my work machine.&lt;br/&gt;
I&apos;ll attach a patch soon.&lt;/p&gt;</comment>
                            <comment id="13232360" author="lhofhansl" created="Sun, 18 Mar 2012 20:42:21 +0000"  >&lt;p&gt;New patch.&lt;br/&gt;
Also adds code to show the memstoreTS in KV.toString.&lt;br/&gt;
The number of loops on the TestAtomicOperation was reduced and the number of a flushes increased.&lt;/p&gt;

&lt;p&gt;Please have a careful look.&lt;br/&gt;
If possible if some other folks could run TestAtomicOperation in a loop for a while that would be very helpful (considering that this problem did not occur at all on my work machine).&lt;/p&gt;</comment>
                            <comment id="13232361" author="lhofhansl" created="Sun, 18 Mar 2012 20:42:39 +0000"  >&lt;p&gt;Getting a test run.&lt;/p&gt;</comment>
                            <comment id="13232365" author="hadoopqa" created="Sun, 18 Mar 2012 21:00:26 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12518850/5569-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12518850/5569-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 160 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestCompaction&lt;br/&gt;
                  org.apache.hadoop.hbase.TestKeyValue&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1220//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1220//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1220//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1220//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1220//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1220//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13232366" author="stack" created="Sun, 18 Mar 2012 21:01:08 +0000"  >&lt;p&gt;Nice work Lars.  Will review/test tomorrow.&lt;/p&gt;</comment>
                            <comment id="13232380" author="lhofhansl" created="Sun, 18 Mar 2012 21:33:00 +0000"  >&lt;p&gt;Thanks Stack.&lt;br/&gt;
TestKeyValue is a simple fix (because I changed the output of KV.toString()).&lt;br/&gt;
TestCompaction looks worrisome, checking it out now.&lt;/p&gt;</comment>
                            <comment id="13232382" author="nkeywal" created="Sun, 18 Mar 2012 21:41:01 +0000"  >&lt;p&gt;I&apos;ve got the testRowMutationMultiThreads running currently on the patch v3. No issue so far. I will make it run 5000 times, previously it always failed before 1000 iterations.&lt;/p&gt;</comment>
                            <comment id="13232383" author="lhofhansl" created="Sun, 18 Mar 2012 21:41:51 +0000"  >&lt;p&gt;TestCompaction.testMajorCompactingToNoOutput fails because the first scanner in the test was not closed, then the compaction was done. Hence the compaction could not remove the deleted rows, because a scanner is still (potentially) using them.&lt;/p&gt;

&lt;p&gt;The test is easily fixed (need to close the first scanner), but we need to think about whether this is the design we want.&lt;br/&gt;
This &lt;b&gt;is&lt;/b&gt; the same behavior we have with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; for expired rows (TTL or too many version): If a scanner is open with an earlier readpoint these will not be collected.&lt;/p&gt;</comment>
                            <comment id="13232384" author="lhofhansl" created="Sun, 18 Mar 2012 21:43:29 +0000"  >&lt;p&gt;Thanks N.!&lt;/p&gt;</comment>
                            <comment id="13232385" author="lhofhansl" created="Sun, 18 Mar 2012 21:44:45 +0000"  >&lt;p&gt;Same patch with fixes for TestKeyValue and TestCompaction.&lt;/p&gt;</comment>
                            <comment id="13232386" author="lhofhansl" created="Sun, 18 Mar 2012 21:46:51 +0000"  >&lt;p&gt;@N.: Note that the patch also reduces the number of threads for the test&lt;span class=&quot;error&quot;&gt;&amp;#91;Multi&amp;#93;&lt;/span&gt;RowMutationMultipleThreads and increases the rate of flushes per thread.&lt;br/&gt;
This made it (far) more likely on my home machine to fail, might be different on your machine.&lt;/p&gt;

&lt;p&gt;I should note that on my home machine both test fail every time now on my home machine, but do not with this patch.&lt;/p&gt;</comment>
                            <comment id="13232390" author="nkeywal" created="Sun, 18 Mar 2012 22:20:47 +0000"  >&lt;p&gt;Right now it&apos;s still running well. I&apos;m doing the test on a small server, with a 4 core Intel Xeon E3-1220.&lt;/p&gt;</comment>
                            <comment id="13232393" author="hadoopqa" created="Sun, 18 Mar 2012 22:35:34 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12518856/5569-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12518856/5569-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 160 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1221//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1221//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1221//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1221//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1221//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1221//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13232513" author="nkeywal" created="Mon, 19 Mar 2012 08:54:08 +0000"  >&lt;p&gt;I stopped it after 2700 iterations (10 hours), no error =&amp;gt; patch seems to be fix the issue...&lt;/p&gt;</comment>
                            <comment id="13232693" author="lhofhansl" created="Mon, 19 Mar 2012 15:50:27 +0000"  >&lt;p&gt;Thanks N. Good news! Tests pass too. I&apos;m going to wait for some other folks to test on their machines to be extra sure this time.&lt;/p&gt;

&lt;p&gt;I need to be extra clear here:&lt;br/&gt;
This patch will prevent any deleted KVs from being collected upon flush or compaction if there is a scanner open with a readpoint smaller than the KV&apos;s memstoreTS (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; does the same for expired KVs).&lt;br/&gt;
Furthermore this is only needed for mixed delete and put operations, although it will generally prevent a flush/compaction from pulling the rug under a scanner.&lt;/p&gt;

&lt;p&gt;Personally, I think this is an important fix. However, I want to mention that the alternative is to remove the mutateRows functionality (obviously not my favorite choice), or to document that it only works with KEEP_DELETED_CELLS enabled (also not my favorite outcome).&lt;/p&gt;</comment>
                            <comment id="13232765" author="lhofhansl" created="Mon, 19 Mar 2012 17:48:50 +0000"  >&lt;p&gt;If some more folks would run the tests in a loop with the patch applied that&apos;d be of great help.&lt;/p&gt;</comment>
                            <comment id="13232896" author="lhofhansl" created="Mon, 19 Mar 2012 20:58:59 +0000"  >&lt;p&gt;Ran more variations of the test (different number of threads, loops, synchronized flushing or not). Each time I see a failure after 2-3 runs without the patch, and no failures with the patch after at least 20 iterations.&lt;/p&gt;</comment>
                            <comment id="13233569" author="lhofhansl" created="Tue, 20 Mar 2012 17:15:34 +0000"  >&lt;p&gt;One more +1 anyone?&lt;br/&gt;
I think this is an important feature.&lt;/p&gt;</comment>
                            <comment id="13233612" author="zhihyu@ebaysf.com" created="Tue, 20 Mar 2012 17:49:12 +0000"  >&lt;p&gt;+1 from me.&lt;/p&gt;</comment>
                            <comment id="13233682" author="lhofhansl" created="Tue, 20 Mar 2012 19:33:53 +0000"  >&lt;p&gt;Thanks. Going to commit soon.&lt;br/&gt;
@Stack: wanna have a quick look (also at my comment from 19/Mar/12 15:50)? &lt;/p&gt;</comment>
                            <comment id="13233734" author="stack" created="Tue, 20 Mar 2012 20:50:29 +0000"  >&lt;p&gt;Your &apos;being extra clear&apos; note needs to become the release note.&lt;/p&gt;

&lt;p&gt;What does this mean?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This patch will prevent any deleted KVs from being collected upon flush or compaction if there is a scanner open with a readpoint smaller than the KV&apos;s memstoreTS (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; does the same for expired KVs).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;They stay in memstore or in the snapshot or rather, they are attached to the outstanding scanners or rather, we still &apos;see&apos; them in files or memstores if outstanding scanners and delete is newer than the scanner read point.&lt;/p&gt;

&lt;p&gt;Patch looks fine &amp;#8211; makes sense even &amp;#8211; but I&apos;m not up on subtleties that abound in this code.&lt;/p&gt;

&lt;p&gt;We didn&apos;t output ts in toString KV?  Thats odd.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;

</comment>
                            <comment id="13233845" author="lhofhansl" created="Tue, 20 Mar 2012 21:53:54 +0000"  >&lt;p&gt;@Stack:&lt;br/&gt;
So &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; has logic that prevents KVs from being removed in a flush or compaction when it has expired (due to TTL or too many version) but there is still a scanner open with a readpoint &amp;lt;= the KV&apos;s memstoreTS. (which means these KVs were created after the scanner was opened)&lt;br/&gt;
Say you have set your store set 3 versions. Now you create 10 versions of a KV, the extra 7 versions are not removed during a flush or compaction when a scanner that was opened before the KVs were created.&lt;br/&gt;
This patch adds the same for deleted KVs (IMHO that is something that &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; missed). So now expired and deleted KVs are not collected if a scanner could still access them.&lt;/p&gt;

&lt;p&gt;It means that a flush or compaction needs to copy these KVs to the new store file instead of skipping them. This only happens for KVs that were created (or now deleted) after the scanner(s) were openened.&lt;/p&gt;

&lt;p&gt;The output I added is the memstoreTS. The ts is already part toString.&lt;/p&gt;

&lt;p&gt;I don&apos;t think that needs to be part of the release notes (at least we did not add this to the release notes for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2856&quot; title=&quot;TestAcidGuarantee broken on trunk &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2856&quot;&gt;&lt;del&gt;HBASE-2856&lt;/del&gt;&lt;/a&gt; or its backport).&lt;/p&gt;</comment>
                            <comment id="13233896" author="stack" created="Tue, 20 Mar 2012 22:43:13 +0000"  >&lt;p&gt;Ok.  Thanks for explaination.  +1 on commit.&lt;/p&gt;</comment>
                            <comment id="13233962" author="lhofhansl" created="Tue, 20 Mar 2012 23:59:56 +0000"  >&lt;p&gt;Committed to 0.94 and trunk. Pheeww.&lt;/p&gt;</comment>
                            <comment id="13233986" author="hudson" created="Wed, 21 Mar 2012 00:37:44 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #43 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/43/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/43/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt; Do not collect deleted KVs when they are still in use by a scanner. (Revision 1303222)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13234134" author="hudson" created="Wed, 21 Mar 2012 05:50:25 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #144 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/144/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/144/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt; Do not collect deleted KVs when they are still in use by a scanner. (Revision 1303220)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13234829" author="hudson" created="Wed, 21 Mar 2012 18:37:48 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2689 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2689/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2689/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt; Do not collect deleted KVs when they are still in use by a scanner. (Revision 1303220)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestAtomicOperation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompaction.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12469746">HBASE-2856</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12499999">HBASE-3584</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12518404" name="5569-v2.txt" size="2944" author="lhofhansl" created="Thu, 15 Mar 2012 00:23:10 +0000"/>
                            <attachment id="12518850" name="5569-v3.txt" size="4875" author="lhofhansl" created="Sun, 18 Mar 2012 20:42:20 +0000"/>
                            <attachment id="12518856" name="5569-v4.txt" size="5979" author="lhofhansl" created="Sun, 18 Mar 2012 21:44:43 +0000"/>
                            <attachment id="12518357" name="5569.txt" size="756" author="lhofhansl" created="Wed, 14 Mar 2012 18:56:51 +0000"/>
                            <attachment id="12518266" name="TestAtomicOperation-output.trunk_120313.rar" size="19099" author="nkeywal" created="Tue, 13 Mar 2012 23:15:49 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12548382">HBASE-5659</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Mar 2012 04:50:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>231342</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 39 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i06947:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34408</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>