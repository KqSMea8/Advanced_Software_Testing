<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:40:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6874/HBASE-6874.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6874] Implement prefetching for scanners</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6874</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I did some quick experiments by scanning data that should be completely in memory and found that adding pre-fetching increases the throughput by about 50% from 26MB/s to 39MB/s.&lt;/p&gt;

&lt;p&gt;The idea is to perform the next in a background thread, and keep the result ready. When the scanner&apos;s next comes in, return the pre-computed result and issue another background read.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12608950">HBASE-6874</key>
            <summary>Implement prefetching for scanners</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12609956">HBASE-6922</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="karthik.ranga">Karthik Ranganathan</assignee>
                                    <reporter username="karthik.ranga">Karthik Ranganathan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Sep 2012 00:33:50 +0000</created>
                <updated>Sat, 25 May 2013 07:07:57 +0000</updated>
                            <resolved>Thu, 25 Apr 2013 18:03:04 +0000</resolved>
                                                    <fixVersion>0.89-fb</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13488448" author="lhofhansl" created="Thu, 1 Nov 2012 04:26:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=karthik.ranga&quot; class=&quot;user-hover&quot; rel=&quot;karthik.ranga&quot;&gt;Karthik Ranganathan&lt;/a&gt; Do you have a patch. We were just discussing something similar here and I was about to open a similar issue before I found this one. This is even more useful with scanner caching.&lt;/p&gt;

&lt;p&gt;One could even go a step further and parallelize the prefetching into N threads (useful if the results are heavily prefiltered at the server).&lt;/p&gt;

&lt;p&gt;We do our own parallel scanner fetching (not necessarily on region or buffer boundaries), but it would be nice if that could be generalized and be part of HBase.&lt;/p&gt;</comment>
                            <comment id="13488463" author="karthik.ranga" created="Thu, 1 Nov 2012 04:58:05 +0000"  >&lt;p&gt;Thought about the N scanners, its a complicated change - you would have to change the entire scan protocol. Each of the next calls in scans are not numbered, and so you could go out of whack if prefetching N (and throw in exceptions). There is also the basic issue right now that scans do retries which is wrong. Also, reasoning about it another way, if your in memory scan throughput is &amp;gt; the time to read from disk, you&apos;re probably good. I found that there are other unrelated bottlenecks preventing this from being the case. Of course, if the filtering is very heavy then this will breakdown... you probably want to implement prefetching based on the num filtered rows, which should not be too hard.&lt;/p&gt;

&lt;p&gt;I have a patch I have tested with, but its waiting on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6770&quot; title=&quot;Allow scanner setCaching to specify size instead of number of rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6770&quot;&gt;&lt;del&gt;HBASE-6770&lt;/del&gt;&lt;/a&gt; - that is going to refactor scans quite a bit. Will put a patch out once that is done.&lt;/p&gt;</comment>
                            <comment id="13488473" author="lhofhansl" created="Thu, 1 Nov 2012 05:19:52 +0000"  >&lt;p&gt;Yeah, it&apos;s tricky to do that at the Scanner level.&lt;/p&gt;

&lt;p&gt;In our case we have N ClientScanners. We break up the scan into chunks and for each chunk we use a separate ClientScanner (in a nutshell). We then sort the chunks (only the chunks not all the KVs) at the client based on the startkey for that chunk.&lt;br/&gt;
Some of our usecases do relatively large scans (hundreds of millions of rows), and we want to engage many cores and spindles at the RegionServers in parallel (we control the level of parallelism we want by the chunking)... This is for online analytics over preaggregated data.&lt;br/&gt;
It&apos;s quite possible that our use case is too special to fit into any kind of generalized scheme.&lt;/p&gt;</comment>
                            <comment id="13488689" author="karthik.ranga" created="Thu, 1 Nov 2012 13:30:05 +0000"  >&lt;p&gt;Actually did this analysis and enhancement for an online analytics use-case as well (and search indexing), and most of what you say maps one to one. The only difference I guess is that so far we are not heavily relying on server side filtering much, so decided on punting on the prefetching=n case for now (we actually discussed this).&lt;/p&gt;</comment>
                            <comment id="13489546" author="stack" created="Fri, 2 Nov 2012 17:09:48 +0000"  >&lt;p&gt;Just to say that in trunk, next invocations now carry a sequence number &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5974&quot; title=&quot;Scanner retry behavior with RPC timeout on next() seems incorrect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5974&quot;&gt;&lt;del&gt;HBASE-5974&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13490898" author="karthik.ranga" created="Mon, 5 Nov 2012 20:27:08 +0000"  >&lt;p&gt;Awesome, then layering in multi-pre-fetch should be very easy!&lt;/p&gt;</comment>
                            <comment id="13490940" author="mcorgan" created="Mon, 5 Nov 2012 21:27:49 +0000"  >&lt;p&gt;Have you guys considered the possibility fetching multiple blocks in a single call to HDFS?  If compressed block size is 10KB, then maybe large scans should be requesting 100+ blocks (1MB) at a time given that rotational drives can read several MB in the same time they can do a seek.  The prefetch thread could chop the 1MB result into the individual blocks before putting them into the block cache.&lt;/p&gt;</comment>
                            <comment id="13491213" author="lhofhansl" created="Tue, 6 Nov 2012 05:03:41 +0000"  >&lt;p&gt;Why does this need &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6770&quot; title=&quot;Allow scanner setCaching to specify size instead of number of rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6770&quot;&gt;&lt;del&gt;HBASE-6770&lt;/del&gt;&lt;/a&gt;? Can&apos;t we just prefetch in multiple of the scanner caching (as long as the prefetching is optional)?&lt;/p&gt;</comment>
                            <comment id="13491695" author="karthik.ranga" created="Tue, 6 Nov 2012 18:40:25 +0000"  >&lt;p&gt;Lars - the dependency on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6770&quot; title=&quot;Allow scanner setCaching to specify size instead of number of rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6770&quot;&gt;&lt;del&gt;HBASE-6770&lt;/del&gt;&lt;/a&gt; is more to make the code simpler. Currently, the HRegionServer loops over numRows, and the RegionScanner loops over the columns in the various CF&apos;s but for one row. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6770&quot; title=&quot;Allow scanner setCaching to specify size instead of number of rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6770&quot;&gt;&lt;del&gt;HBASE-6770&lt;/del&gt;&lt;/a&gt; will move the looping on the numRows into the RegionScanner itself, because we need to track both memory size and number of rows - in order to respect the more restrictive of the two. Once that happens, we can implement prefetching in the RegionScanner itself, instead of spreading the logic in HRegionServer also. So more of a code-simplicity and not having to resolve conflicts thing.&lt;/p&gt;</comment>
                            <comment id="13491700" author="karthik.ranga" created="Tue, 6 Nov 2012 18:44:47 +0000"  >&lt;p&gt;Matt - Yes, we had chatted about that as well. But right now, the focus is to improve scan performance from memory. We should definitely cycle back to that as well. The thought is if we can get one thread reading one block from memory to outperform the disk, we can get the parallelism from multiple on-going scans. In addition, the scan perf when I started this effort was around 20MB/s from memory, so no matter how much we read from the disk, it would be slow. Now, I am able to benchmark more than 100MB/s (all results on one thread), so other things make sense. Will publish my results in detail.&lt;/p&gt;</comment>
                            <comment id="13491740" author="lhofhansl" created="Tue, 6 Nov 2012 19:27:08 +0000"  >&lt;p&gt;Oh, I see. I had assumed the prefetching would be implemented on the client only (the RPCs for scanning could be scheduled asynchronously, so the caller never has to wait for them); but obviously there are many ways to do this.&lt;/p&gt;</comment>
                            <comment id="13640532" author="jxiang" created="Wed, 24 Apr 2013 15:25:16 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=karthik.ranga&quot; class=&quot;user-hover&quot; rel=&quot;karthik.ranga&quot;&gt;Karthik Ranganathan&lt;/a&gt;, any update on this issue?&lt;/p&gt;</comment>
                            <comment id="13640748" author="karthik.ranga" created="Wed, 24 Apr 2013 18:21:25 +0000"  >&lt;p&gt;This has been implemented and checked in into the 0.89-fb branch.&lt;/p&gt;</comment>
                            <comment id="13640759" author="jxiang" created="Wed, 24 Apr 2013 18:29:22 +0000"  >&lt;p&gt;Cool.  I will port it to trunk (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8420&quot; title=&quot;Port  HBASE-6874  Implement prefetching for scanners from 0.89-fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8420&quot;&gt;&lt;del&gt;HBASE-8420&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13666879" author="hudson" created="Sat, 25 May 2013 00:55:13 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4142 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4142/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4142/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8420&quot; title=&quot;Port  HBASE-6874  Implement prefetching for scanners from 0.89-fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8420&quot;&gt;&lt;del&gt;HBASE-8420&lt;/del&gt;&lt;/a&gt; Port &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6874&quot; title=&quot;Implement prefetching for scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6874&quot;&gt;&lt;del&gt;HBASE-6874&lt;/del&gt;&lt;/a&gt; Implement prefetching for scanners from 0.89-fb (Revision 1486246)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jxiang : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionScannerHolder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/protobuf/TestProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerMetrics.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13666913" author="hudson" created="Sat, 25 May 2013 01:30:47 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #214 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/214/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/214/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8420&quot; title=&quot;Port  HBASE-6874  Implement prefetching for scanners from 0.89-fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8420&quot;&gt;&lt;del&gt;HBASE-8420&lt;/del&gt;&lt;/a&gt; Port &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6874&quot; title=&quot;Implement prefetching for scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6874&quot;&gt;&lt;del&gt;HBASE-6874&lt;/del&gt;&lt;/a&gt; Implement prefetching for scanners from 0.89-fb (Revision 1486247)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
jxiang : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallable.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionScannerHolder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/protobuf/TestProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerMetrics.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13666998" author="hudson" created="Sat, 25 May 2013 06:30:14 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #111 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/111/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/111/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8420&quot; title=&quot;Port  HBASE-6874  Implement prefetching for scanners from 0.89-fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8420&quot;&gt;&lt;del&gt;HBASE-8420&lt;/del&gt;&lt;/a&gt; Port &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6874&quot; title=&quot;Implement prefetching for scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6874&quot;&gt;&lt;del&gt;HBASE-6874&lt;/del&gt;&lt;/a&gt; Implement prefetching for scanners from 0.89-fb (Revision 1486247)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jxiang : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallable.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionScannerHolder.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/protobuf/TestProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerMetrics.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13667011" author="hudson" created="Sat, 25 May 2013 07:07:57 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #542 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/542/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/542/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8420&quot; title=&quot;Port  HBASE-6874  Implement prefetching for scanners from 0.89-fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8420&quot;&gt;&lt;del&gt;HBASE-8420&lt;/del&gt;&lt;/a&gt; Port &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6874&quot; title=&quot;Implement prefetching for scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6874&quot;&gt;&lt;del&gt;HBASE-6874&lt;/del&gt;&lt;/a&gt; Implement prefetching for scanners from 0.89-fb (Revision 1486246)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
jxiang : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ClientScanner.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-protocol/src/main/protobuf/Client.proto&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionScannerHolder.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRowProcessorEndpoint.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/protobuf/TestProtobufUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerMetrics.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12644411">HBASE-8420</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 1 Nov 2012 04:26:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>242477</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 29 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02v5r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14649</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>