<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:19:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16973/HBASE-16973.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16973] Revisiting default value for hbase.client.scanner.caching</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16973</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We are observing below logs for a long-running scan:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2016-10-30 08:51:41,692 WARN  [B.defaultRpcServer.handler=50,queue=12,port=16020] ipc.RpcServer:
(responseTooSlow-LongProcessTime): {&quot;processingtimems&quot;:24329,
&quot;call&quot;:&quot;Scan(org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ScanRequest)&quot;,
&quot;client&quot;:&quot;11.251.157.108:50415&quot;,&quot;scandetails&quot;:&quot;table: ae_product_image region: ae_product_image,494:
,1476872321454.33171a04a683c4404717c43ea4eb8978.&quot;,&quot;param&quot;:&quot;scanner_id: 5333521 number_of_rows: 2147483647
close_scanner: false next_call_seq: 8 client_handles_partials: true client_handles_heartbeats: true&quot;,
&quot;starttimems&quot;:1477788677363,&quot;queuetimems&quot;:0,&quot;class&quot;:&quot;HRegionServer&quot;,&quot;responsesize&quot;:818,&quot;method&quot;:&quot;Scan&quot;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;From which we found the &quot;number_of_rows&quot; is as big as &lt;tt&gt;Integer.MAX_VALUE&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;And we also observed a long filter list on the customized scan. After checking application code we confirmed that there&apos;s no &lt;tt&gt;Scan.setCaching&lt;/tt&gt; or &lt;tt&gt;hbase.client.scanner.caching&lt;/tt&gt; setting on client side, so it turns out using the default value the caching for Scan will be Integer.MAX_VALUE, which is really a big surprise.&lt;/p&gt;

&lt;p&gt;After checking code and commit history, I found it&apos;s &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt; which changes &lt;tt&gt;HConstants.DEFAULT_HBASE_CLIENT_SCANNER_CACHING&lt;/tt&gt; from 100 to Integer.MAX_VALUE, and from the release note there I could see below notation:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Scan caching default has been changed to Integer.Max_Value 
This value works together with the new maxResultSize value from HBASE-12976 (defaults to 2MB) 
Results returned from server on basis of size rather than number of rows 
Provides better use of network since row size varies amongst tables
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And I&apos;m afraid this lacks of consideration of the case of scan with filters, which may involve many rows but only return with a small result.&lt;/p&gt;

&lt;p&gt;What&apos;s more, we still have below comment/code in &lt;tt&gt;Scan.java&lt;/tt&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /*
   * -1 means no caching
   */
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; caching = -1;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But actually the implementation does not follow (instead of no caching, we are caching &lt;tt&gt;Integer.MAX_VALUE&lt;/tt&gt;...).&lt;/p&gt;

&lt;p&gt;So here I&apos;d like to bring up two points:&lt;br/&gt;
1. Change back the default value of HConstants.DEFAULT_HBASE_CLIENT_SCANNER_CACHING to some small value like 128&lt;br/&gt;
2. Reenforce the semantic of &quot;no caching&quot;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13016512">HBASE-16973</key>
            <summary>Revisiting default value for hbase.client.scanner.caching</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="carp84">Yu Li</assignee>
                                    <reporter username="carp84">Yu Li</reporter>
                        <labels>
                    </labels>
                <created>Mon, 31 Oct 2016 04:24:07 +0000</created>
                <updated>Fri, 18 Nov 2016 04:56:11 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                                                            <comments>
                            <comment id="15621319" author="anoop.hbase" created="Mon, 31 Oct 2016 05:37:25 +0000"  >&lt;p&gt;Interesting issue..  &lt;br/&gt;
You mean when set -1 explicitly treat as no caching? #1 says make the default as 128 so I dont think u mean to make def as no caching.&lt;/p&gt;</comment>
                            <comment id="15621321" author="anoop.hbase" created="Mon, 31 Oct 2016 05:38:25 +0000"  >&lt;p&gt;So still there is no timeouts happening because of the partial result return stuff and/or heart beat. Correct?&lt;/p&gt;</comment>
                            <comment id="15621385" author="carp84" created="Mon, 31 Oct 2016 06:15:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;You mean when set -1 explicitly treat as no caching? #1 says make the default as 128 so I dont think u mean to make def as no caching.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;From the comment of the code it should be treat as no caching when set -1, but actually it won&apos;t. In &lt;tt&gt;HTable#getScanner&lt;/tt&gt; of our current master branch code we have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (scan.getCaching() &amp;lt;= 0) {
      scan.setCaching(scannerCaching);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And this &lt;tt&gt;scannerCaching&lt;/tt&gt; is initialized as &lt;tt&gt;connConfiguration.getScannerCaching()&lt;/tt&gt; then:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.scannerCaching = conf.getInt(
      HConstants.HBASE_CLIENT_SCANNER_CACHING, HConstants.DEFAULT_HBASE_CLIENT_SCANNER_CACHING);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So with &lt;tt&gt;Scan.setCaching(-1)&lt;/tt&gt; we will have caching as Integer.MAX_VALUE. I checked our &lt;a href=&quot;http://hbase.apache.org/book.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;hbase book&lt;/a&gt; and there it already talks about default will be Integer.MAX_VALUE, so for this part I guess we should update the below comment of code to what it actually will be to avoid confusion:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /*
   * -1 means no caching
   */
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; caching = -1;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;&lt;p&gt;So still there is no timeouts happening because of the partial result return stuff and/or heart beat. Correct?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Correct, it runs for 24s and timeout set to 1min so no timeouts, and no partial result&lt;/p&gt;</comment>
                            <comment id="15621414" author="carp84" created="Mon, 31 Oct 2016 06:31:04 +0000"  >&lt;p&gt;Let me reword my question: Currently we set default of scanner caching to Integer.MAX_VALUE to make &lt;b&gt;&lt;em&gt;the network fill the chunk size defined by hbase.client.scanner.max.result.size rather than be limited by a particular number of rows&lt;/em&gt;&lt;/b&gt;, but what if the result never fills the chunk size due to some customized filter? Are we requesting too much for customers to know what size the result will be when using filters and explicitly set the caching size instead of simply using the default value? Should we use a smaller value or even no caching as the default and let advanced users to set it for performance optimization?&lt;/p&gt;

&lt;p&gt;Attached is a screenshot of the server side monitoring metrics of p999 of scan.next, which reduces from 1min+ to few seconds after customer setting the caching size from default to 10, FWIW.&lt;/p&gt;</comment>
                            <comment id="15621429" author="yangzhe1991" created="Mon, 31 Oct 2016 06:42:21 +0000"  >&lt;p&gt;Besides size limit, we also have time limit which is half of scanner timeout at client. If the scanner running time reach time limit, it will return what it has scanned. So in theory even if users use a sparse filter, they will still get some of rows in time?&lt;/p&gt;</comment>
                            <comment id="15621434" author="yangzhe1991" created="Mon, 31 Oct 2016 06:44:49 +0000"  >&lt;p&gt;For your case, if you want scanner.next only blocking several seconds, you can set hbase.client.scanner.timeout.period to 10000 at client. The time limit will be 5000. After 5 seconds and the scanner has scanned at least one row, the user will get at least one Result from next()&lt;/p&gt;</comment>
                            <comment id="15621488" author="carp84" created="Mon, 31 Oct 2016 07:19:43 +0000"  >&lt;p&gt;Thanks for chiming in &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yangzhe1991&quot; class=&quot;user-hover&quot; rel=&quot;yangzhe1991&quot;&gt;Phil Yang&lt;/a&gt; and mentioning timeLimit.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For your case, if you want scanner.next only blocking several seconds, you can set hbase.client.scanner.timeout.period to 10000 at client. The time limit will be 5000&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes but not before &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15593&quot; title=&quot;Time limit of scanning should be offered by client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15593&quot;&gt;&lt;del&gt;HBASE-15593&lt;/del&gt;&lt;/a&gt; right (btw good work at 15593&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)? Or say in current released versions, this time limit is controlled by server side settings and in our case &lt;tt&gt;hbase.client.scanner.timeout.period&lt;/tt&gt; is set to 180000 or say 3min...&lt;/p&gt;

&lt;p&gt;Still I&apos;d like to focus on the discussion about default value of &lt;tt&gt;hbase.client.scanner.caching&lt;/tt&gt;. Setting it to Integer.MAX_VALUE requires user to understand quite some details of our implementations and I&apos;m wondering whether this is proper.&lt;/p&gt;</comment>
                            <comment id="15621957" author="yangzhe1991" created="Mon, 31 Oct 2016 11:55:10 +0000"  >&lt;p&gt;Yes, in 1.2.x this feature is useless... But if this feature works, for example, since 1.3.0, I think for users time limit and size limit are more direct than caching and these two limit are enough. I don&apos;t think users need to know how many rows the client will &quot;cache&quot; for one call. Setting cache is an old style to limit size and time, what users really need is limit time and size, right? If we can guarantee we will response in time and will not response too much data, we should read as much as possible to speed up the total scanning operations.&lt;/p&gt;</comment>
                            <comment id="15622248" author="chenheng" created="Mon, 31 Oct 2016 14:08:44 +0000"  >&lt;p&gt;Notice that HBase-11544 has been only applied on branch-1.1.x,  So the default value for branch-1.2.x is still 100?  Did our default value has some compatibility rules (If not, should we have it)? It confused our users.  And in this case, i think we should keep the default value to be small as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; mentioned, and respect all configurations about scanner.&lt;/p&gt;</comment>
                            <comment id="15622598" author="carp84" created="Mon, 31 Oct 2016 16:09:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Setting cache is an old style to limit size and time, what users really need is limit time and size, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sounds reasonable, but I think we need more explicit description/instruction on hbase book. And still, there&apos;s no released version with client-controllable time limit yet, so this default value change (from 100 to Integer.MAX_VALUE) is something users must pay attention to when &lt;b&gt;migrating from branch-0.98&lt;/b&gt; (just like we did from 0.98.12 to 1.1.2), especially those using filters as well as &lt;tt&gt;Scan.addColumn&lt;/tt&gt; (yes this is another common case for application to only read a key column out of one row so the result might be small).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Notice that HBase-11544 has been only applied on branch-1.1.x, So the default value for branch-1.2.x is still 100? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks for chiming in &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chenheng&quot; class=&quot;user-hover&quot; rel=&quot;chenheng&quot;&gt;Heng Chen&lt;/a&gt;. I&apos;ve checked latest code of branch-1.2 and confirmed the default value has been changed to Integer.MAX_VALUE, so I guess &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt; goes in ever since v1.1.0...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt;/&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; could you also share your thoughts here Bosses? Many thanks.&lt;/p&gt;</comment>
                            <comment id="15622625" author="yangzhe1991" created="Mon, 31 Oct 2016 16:19:11 +0000"  >&lt;blockquote&gt;
&lt;p&gt;there&apos;s no released version with client-controllable time limit yet&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, my thought only applies to 1.3+ and we can discuss more about the suitable default value in 1.3+. The released branch is another issue. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15593&quot; title=&quot;Time limit of scanning should be offered by client&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15593&quot;&gt;&lt;del&gt;HBASE-15593&lt;/del&gt;&lt;/a&gt; showed the time limit is not useful because the time limit can not be controlled by client. So I agree that we should change the default value back in 1.2 and 1.1. &lt;/p&gt;</comment>
                            <comment id="15622704" author="stack" created="Mon, 31 Oct 2016 16:52:18 +0000"  >&lt;p&gt;Dang. Good finding &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lets make the &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yangzhe1991&quot; class=&quot;user-hover&quot; rel=&quot;yangzhe1991&quot;&gt;Phil Yang&lt;/a&gt; story the way it is going forward. File an issue to update refguide, javadoc., and unit tests all to enforce &quot;...Setting cache is an old style to limit size and time...&quot;.&lt;/p&gt;

&lt;p&gt;For released software, lets add to the refguide warning as per @yu li recommendation on migration from 0.98 to 1.1.x (New issue or part of this issue?). I think changing default at this stage in 1.1.x and 1.2.x lifecycle, it would surprise more than it would help changing the default but we could add a notice on downloads page and to release notes on this finding of &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;&apos;s?&lt;/p&gt;</comment>
                            <comment id="15623504" author="mantonov" created="Mon, 31 Oct 2016 21:37:39 +0000"  >&lt;p&gt;Will have a look later today&lt;/p&gt;</comment>
                            <comment id="15624092" author="enis" created="Tue, 1 Nov 2016 02:22:49 +0000"  >&lt;p&gt;We have three limits, the caching, time and size? So even with caching = MAX and time limit not implemented, the size limit defaults to 2MB, no? &lt;/p&gt;

&lt;p&gt;With very selective filters, it still will take a long time to accumulate 100 rows worth of data. But with the current defaults now, we will accumulate 2MB of data (without time limit). I guess, we should look at on average row sizes, 100 rows is smaller or 2MB is smaller. &lt;/p&gt;</comment>
                            <comment id="15624201" author="carp84" created="Tue, 1 Nov 2016 03:19:27 +0000"  >&lt;p&gt;Thanks for the quick response sir.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;File an issue to update refguide, javadoc., and unit tests all to enforce &quot;...Setting cache is an old style to limit size and time...&quot;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sounds great.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think changing default at this stage in 1.1.x and 1.2.x lifecycle, it would surprise more than it would help&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Makes sense, especially for those have noticed and adapted to the behavior change...&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt; there&apos;s already a release note talking about changing the default value for scan caching, but I think it&apos;s worthwhile to emphasize on the refguide of migration from 0.98 to 1.x so people won&apos;t neglect this change like we did...&lt;/p&gt;</comment>
                            <comment id="15624231" author="carp84" created="Tue, 1 Nov 2016 03:41:15 +0000"  >&lt;p&gt;Thanks for chiming in &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes we have 3 kinds of limit for scan and the rows limit is removed by default after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt;. I&apos;m convinced to keep the default as is for branch-1.1+, but this indeed is a behavior change from 0.98 to 1.x and requires user to specifically set &lt;tt&gt;hbase.client.scanner.caching&lt;/tt&gt; in some cases, like our case the scan.next p999 latency increased from seconds to minutes w/ the default value... It&apos;s a bad user experience since application unchanged but performance downgrades...&lt;/p&gt;</comment>
                            <comment id="15625987" author="carp84" created="Tue, 1 Nov 2016 16:55:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;Lets make the Phil Yang story the way it is going forward. File an issue to update refguide, javadoc., and unit tests all to enforce &quot;...Setting cache is an old style to limit size and time...&quot;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It seems this is the only work left here besides &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16970&quot; title=&quot;Clarify misleading Scan.java comment about caching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16970&quot;&gt;&lt;del&gt;HBASE-16970&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16986&quot; title=&quot;Add note on how scanner caching has changed since 0.98 to refguid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16986&quot;&gt;&lt;del&gt;HBASE-16986&lt;/del&gt;&lt;/a&gt;? Or anything else? Thanks.&lt;/p&gt;</comment>
                            <comment id="15626197" author="stack" created="Tue, 1 Nov 2016 18:10:15 +0000"  >&lt;p&gt;I filed a subtask for above.&lt;/p&gt;</comment>
                            <comment id="15626493" author="hudson" created="Tue, 1 Nov 2016 19:54:07 +0000"  >&lt;p&gt;SUCCESS: Integrated in Jenkins build HBase-Trunk_matrix #1897 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/1897/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/1897/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16973&quot; title=&quot;Revisiting default value for hbase.client.scanner.caching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16973&quot;&gt;HBASE-16973&lt;/a&gt; Revisiting default value for hbase.client.scanner.caching (stack: rev 9cfebf49339f1ce167fbee02b6d6d498eacc0ee5)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(edit) src/main/asciidoc/_chapters/upgrading.adoc&lt;br/&gt;
Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16973&quot; title=&quot;Revisiting default value for hbase.client.scanner.caching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16973&quot;&gt;HBASE-16973&lt;/a&gt; Revisiting default value for (stack: rev b2d1e21e77644c9b0b5e83dcb662e5b2f71df072)&lt;/li&gt;
	&lt;li&gt;(edit) src/main/asciidoc/_chapters/upgrading.adoc&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15627569" author="carp84" created="Wed, 2 Nov 2016 03:45:24 +0000"  >&lt;p&gt;Thank you sir. I guess we should leave this one open until &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16987&quot; title=&quot;Update javadoc, refguide, and unit tests so &amp;quot;&amp;quot;...setting [scan] cache is ... old style...&amp;quot;; instead limit by size and time.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16987&quot;&gt;HBASE-16987&lt;/a&gt; done, right?&lt;/p&gt;</comment>
                            <comment id="15627699" author="stack" created="Wed, 2 Nov 2016 04:42:09 +0000"  >&lt;p&gt;Yes &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15627712" author="mantonov" created="Wed, 2 Nov 2016 04:46:17 +0000"  >&lt;p&gt;&quot;I think changing default at this stage in 1.1.x and 1.2.x lifecycle, it would surprise more than it would help changing the default but we could add a notice on downloads page and to release notes on this finding of Yu Li&apos;s?&quot;&lt;/p&gt;

&lt;p&gt;I think above applies to 1.3 here as well. Current default / javadoc are misleading, but changing the default for that - seems like it could affect in negative ways people doing scans over pretty small rows or something. W/o any changes in their client config would be bad to debug and possibly seen as a regression? +1 for documentation and javadoc updates on 1.3. I think this default value change, if we decide on it, should not go to 1.3 (let me know if I&apos;m missing here).&lt;/p&gt;

&lt;p&gt;Conceptually I think &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yangzhe1991&quot; class=&quot;user-hover&quot; rel=&quot;yangzhe1991&quot;&gt;Phil Yang&lt;/a&gt; rightly pointed out that using size-time based limits provides for better bandwidth utilization and dynamic adaptations to workload/schema changes. Maybe there&apos;s more here to discuss.&lt;/p&gt;</comment>
                            <comment id="15628074" author="carp84" created="Wed, 2 Nov 2016 07:37:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think this default value change, if we decide on it, should not go to 1.3 (let me know if I&apos;m missing here).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks for chiming in sir, per discussion there won&apos;t be any change on the default value but only update on javadoc/refguid, JFYI.&lt;/p&gt;</comment>
                            <comment id="15628080" author="mantonov" created="Wed, 2 Nov 2016 07:39:19 +0000"  >&lt;p&gt;All right - that&apos;s what I think is the right thing to do. Thanks for checking!&lt;/p&gt;</comment>
                            <comment id="15628083" author="mantonov" created="Wed, 2 Nov 2016 07:39:57 +0000"  >&lt;p&gt;Assuming this jira would be..invalid or won&apos;t fix then or..?&lt;/p&gt;</comment>
                            <comment id="15628360" author="carp84" created="Wed, 2 Nov 2016 09:32:21 +0000"  >&lt;p&gt;Maybe mark as Resolved after all sub-tasks closed?&lt;/p&gt;</comment>
                            <comment id="15628435" author="carp84" created="Wed, 2 Nov 2016 10:01:31 +0000"  >&lt;p&gt;Changing the issue type from Bug to Task since there&apos;s actually no bug to fix here after all the discussions but still some javadoc/refguide work to complete.&lt;/p&gt;</comment>
                            <comment id="15669671" author="ndimiduk" created="Wed, 16 Nov 2016 07:07:40 +0000"  >&lt;p&gt;Trying to understand the state of things here for 1.1. Looks like &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; title=&quot;[Ergonomics] hbase.client.scanner.caching is dogged and will try to return batch even if it means OOME&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11544&quot;&gt;&lt;del&gt;HBASE-11544&lt;/del&gt;&lt;/a&gt; made it, meaning &lt;tt&gt;DEFAULT_HBASE_CLIENT_SCANNER_CACHING = Integer.MAX_VALUE&lt;/tt&gt;; thus the default limit based on total number of rows is effectively unbounded. We also have &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12976&quot; title=&quot;Set default value for hbase.client.scanner.max.result.size&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12976&quot;&gt;&lt;del&gt;HBASE-12976&lt;/del&gt;&lt;/a&gt;, so &lt;tt&gt;DEFAULT_HBASE_CLIENT_SCANNER_MAX_RESULT_SIZE = 2 * 1024 * 1024&lt;/tt&gt;. &lt;tt&gt;hbase.client.scanner.timeout.period&lt;/tt&gt; is 1m in hbase-defaults.xml. This means for a highly selective filter, we&apos;d end up hitting a timeout and throwing away any partial results before the 2mb is filled? Or does it mean we go back to the client after 1m with whatever we&apos;ve accumulated so far? The former is a pretty bad situation and warrants some comment about the sharp edge. I&apos;m against changing the default this late into the maintenance cycle, but a table in the book that breaks things out by release branch would help users stumbling through the mirk.&lt;/p&gt;</comment>
                            <comment id="15669881" author="carp84" created="Wed, 16 Nov 2016 09:00:02 +0000"  >&lt;p&gt;For 1.1, based on our observation from online, should be the former case...&lt;/p&gt;</comment>
                            <comment id="15675777" author="ndimiduk" created="Fri, 18 Nov 2016 04:56:11 +0000"  >&lt;p&gt;Ouch.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12836123" name="Scan.next_p999.png" size="617425" author="carp84" created="Mon, 31 Oct 2016 06:31:04 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="13016937">HBASE-16986</subtask>
                            <subtask id="13016374">HBASE-16970</subtask>
                            <subtask id="13016963">HBASE-16987</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 Oct 2016 05:37:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35lun:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>