<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:10:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10126/HBASE-10126.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10126] guarantee atomicity of multi-row mutation within a same region from a single HTable.batch</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10126</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We use this improvement together with DelimitedKeyPrefixRegionSplitPolicy.java to implement local secondary index without the help of coprocessor.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12683996">HBASE-10126</key>
            <summary>guarantee atomicity of multi-row mutation within a same region from a single HTable.batch</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="fenghh">Honghua Feng</assignee>
                                    <reporter username="fenghh">Honghua Feng</reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Dec 2013 08:57:14 +0000</created>
                <updated>Thu, 12 Dec 2013 22:09:08 +0000</updated>
                                                                            <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13845196" author="fenghh" created="Wed, 11 Dec 2013 08:59:06 +0000"  >&lt;p&gt;patch based on &lt;a href=&quot;http://svn.apache.org/repos/asf/hbase/branches/0.94&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/hbase/branches/0.94&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13845665" author="yuzhihong@gmail.com" created="Wed, 11 Dec 2013 19:34:24 +0000"  >&lt;p&gt;@Honghua:&lt;br/&gt;
Have you looked at MultiRowMutationEndpoint ?&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;</comment>
                            <comment id="13846013" author="fenghh" created="Thu, 12 Dec 2013 02:40:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; Yes, I know MultiRowMutationEndpoint can be used to achieve the same result, but it relies on coprocessor. The patch I proposed here doesn&apos;t use coprocessor, that&apos;s why I said &apos;without the help of coprocessor&apos;, it&apos;s more native in a sense. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13846022" author="enis" created="Thu, 12 Dec 2013 03:00:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; FYI. &lt;br/&gt;
I am not completely against the idea for enabling single-region atomic updates, however, this should only be used for a custom region split policy which might make the API confusing for the users. &lt;br/&gt;
Also, I think we should fix &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9797&quot; title=&quot;Multi row transactions are not atomic for scanners&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9797&quot;&gt;HBASE-9797&lt;/a&gt; first before adding a general API. &lt;/p&gt;</comment>
                            <comment id="13846089" author="lhofhansl" created="Thu, 12 Dec 2013 06:11:13 +0000"  >&lt;p&gt;The reason why my original patch didn&apos;t do that was that this relies on a proper region split policy to be setup. Without that what it is in a region is more or less random and atomic mutate is also slower as it cannot go in batches as it manages to acquire the rowlocks but must acquire all row locks ahead of time.&lt;br/&gt;
So making this the default is probably not a good idea.&lt;/p&gt;</comment>
                            <comment id="13846249" author="fenghh" created="Thu, 12 Dec 2013 11:14:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;So making this the default is probably not a good idea.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;this is not made default, default is still the previous logic(try best but not require to get all row-locks to proceed), see the change:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void batch(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; List&amp;lt;?&lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Row&amp;gt; actions, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;[] results)
      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException, IOException {
    batch(actions, results, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void batch(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; List&amp;lt;?&lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Row&amp;gt; actions, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;[] results,
      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; intraRegionAtomic)
      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; InterruptedException, IOException {
    connection.processBatch(actions, tableName, pool, results, intraRegionAtomic);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13846491" author="lhofhansl" created="Thu, 12 Dec 2013 17:46:14 +0000"  >&lt;p&gt;You&apos;re not using HRegion.mutateRowsWithLocks, which was added for this purpose. Why?&lt;br/&gt;
If this can be done with doMiniBatchMutation alone, we should get rid of mutateRowsWithLocks.&lt;/p&gt;

&lt;p&gt;The entire batch will not be atomic, only the parts that happen to fall within the same region. And without a split policy there is no way of knowing or guaranteeing which parts will be updated atomically.&lt;/p&gt;

&lt;p&gt;MultiRowMutationEndpoint (coprocessor) checks for that and thus ensures that in fact the entire batch can be performed atomically.&lt;/p&gt;

&lt;p&gt;If we turn this into a public API there better be no surprises. Your use case seems quite special in that you want all rows in a region to be updated atomically but you&apos;re fine with the batch in its entirety not.&lt;/p&gt;

&lt;p&gt;Why can&apos;t you use a coprocessor to achieve the same. I&apos;m all for making this a public API, but it does expose implementation details to the API (such that there are regions, for example).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-               &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; server.multi(multi);
+               &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; server.multi(multi, atomic);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Better to call server.multi(multi) when atomic is false, so that a new client can still work with an old server as long as no atomicity is requested.&lt;/p&gt;

&lt;p&gt;This needs more discussion.&lt;/p&gt;</comment>
                            <comment id="13846810" author="enis" created="Thu, 12 Dec 2013 22:09:08 +0000"  >&lt;p&gt;Thinking about how we can make this kind of row key grouping API. I think we should not expose the regions directly to clients still, but expose a way to the clients so that they can ensure some set of rows always falls into the same region. In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7716&quot; title=&quot;Row Groups / Row Family / Entity Groups in HBase&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7716&quot;&gt;HBASE-7716&lt;/a&gt; , I was thinking of adding one more dimension to KV to achieve this. However, that might not be needed after all. We can add the row key group dimension by adding an API to group row keys: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
class RowKeyFamily {
  &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] getRowKeyFamily(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] rowKey)
}
class PrefixRowKeyFamily &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; RowKeyFamily{
  &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; prefixLength;
  ..
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The RowKeyFamily is defined per table, Whenever it is set, there is a corresponding RegionSplitPolicy that ensures that the regions are not split in between region groups. We can then add a check for enforcing that constraint on the client side to enforce that batching can only span to the same row key group. Just some raw ideas. Take it with a grain of salt.  &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12618201" name="HBASE-10126-0.94-v0.patch" size="31322" author="fenghh" created="Wed, 11 Dec 2013 08:59:06 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Dec 2013 19:34:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>363068</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 1 week ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ql1b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>363374</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>