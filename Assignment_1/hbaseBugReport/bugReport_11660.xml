<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:25:24 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11660/HBASE-11660.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11660] Make WAL reader follow contract for java.io.InputStream.available()</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11660</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In the process of building support to running HBase on Microsoft Azure HDInsight, I hit an issue in the HBase WAL reading process that took a lot of time to debug. The WAL reading code depends on available() for the log InputStream never returing 0 until end of file. This is not the same as the contract in java.io.InputStream for available. &lt;/p&gt;

&lt;p&gt;To prevent future grief for others that may want to port HBase onto storage systems other than HDFS, I propose to change the HBase WAL reader so it does not assume that EOF has been reached when available() == 0. It instead would treat available only as described in InputStream, i.e. available() is merely the number of bytes that could be read from the stream without blocking. That could be 0 even before EOF.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12731777">HBASE-11660</key>
            <summary>Make WAL reader follow contract for java.io.InputStream.available()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ehans">Eric Hanson</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Aug 2014 16:46:10 +0000</created>
                <updated>Fri, 26 Jun 2015 21:18:34 +0000</updated>
                                            <version>0.99.0</version>
                    <version>2.0.0</version>
                    <version>0.98.6</version>
                                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="14084884" author="ehans" created="Mon, 4 Aug 2014 16:59:31 +0000"  >&lt;p&gt;Here&apos;s a patch that was enough to fix the problem for log files on Azure page blobs and block blobs. &lt;/p&gt;

&lt;p&gt;With quite a lot of effort to track this down and fix it, I&apos;ve worked around this in our Azure file system driver for Hadoop (the WASB driver). Nevertheless, I think that for the future it&apos;d be preferred to follow the InputStream contract for available(), which most input stream does. &lt;/p&gt;

&lt;p&gt;That can be good for HBase by letting more people port to different storage systems more easily.&lt;/p&gt;</comment>
                            <comment id="14084891" author="ehans" created="Mon, 4 Aug 2014 17:04:04 +0000"  >&lt;p&gt;The existing WAL reading code appears to take a hard dependency on the behavior of the available method in DFSInputStream.java, which looks like this in the Hadoop trunk:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/** Return the size of the remaining available bytes
* &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the size is less than or equal to {@link &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;#MAX_VALUE},
* otherwise, &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; {@link &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;#MAX_VALUE}.
*/
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; available() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (closed) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Stream closed&quot;&lt;/span&gt;);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; remaining = getFileLength() - pos;
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; remaining &amp;lt;= &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE? (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)remaining: &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This implied contract is different from the one in java.io.InputStream.&lt;/p&gt;</comment>
                            <comment id="14084908" author="busbey" created="Mon, 4 Aug 2014 17:14:28 +0000"  >&lt;p&gt;Thanks for the patch Eric. Could you include a test as well?&lt;/p&gt;</comment>
                            <comment id="14084916" author="ehans" created="Mon, 4 Aug 2014 17:20:59 +0000"  >&lt;p&gt;The existing WAL pretty printer code exercises this code path. The tests for that, and also for WAL splitting, should cover it. &lt;/p&gt;</comment>
                            <comment id="14084925" author="busbey" created="Mon, 4 Aug 2014 17:25:16 +0000"  >&lt;p&gt;I don&apos;t think those code paths test for the case where the stream for the WAL returns 0 bytes available when it is not at EOF, though. That kind of test is the best way to ensure that as the code base changes we keep accounting for the correct InputStream behavior.&lt;/p&gt;</comment>
                            <comment id="14084926" author="ehans" created="Mon, 4 Aug 2014 17:26:26 +0000"  >&lt;p&gt;I saw another check for available == 0 in the same file targeted by this patch. Perhaps there are more elsewhere. It&apos;d be good for somebody familiar with the WAL splitting/reading process to have a look and see if there needs to be more changes to make the code only rely on the available() contract from InputStream.&lt;/p&gt;</comment>
                            <comment id="14084934" author="mbertozzi" created="Mon, 4 Aug 2014 17:29:13 +0000"  >&lt;p&gt;if I read it correctly advance() now will always return true (and the hasNext boolean can be removed).&lt;br/&gt;
but this seems to work just because we know the number of items in the WAL ahead, or am I missing something?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HLogSplitter.java
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; count; i++) {
      &lt;span class=&quot;code-comment&quot;&gt;// Throw index out of bounds &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; our cell count is off
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!cells.advance()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
WALEdit.java:    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (kvs.size() &amp;lt; expectedCount &amp;amp;&amp;amp; cellDecoder.advance()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14085032" author="jeffreyz" created="Mon, 4 Aug 2014 18:19:16 +0000"  >&lt;p&gt;The issue is that HBase code is assuming InputStream.available() returns an accurate bytes left for reading. We have quite a few other places in IO operations rely on that. Even in ProtobufLogReader code we have a place like the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          available = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.inputStream.available();
          LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;available size from inputStream.available()=&quot;&lt;/span&gt; + available);
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (available &amp;gt; 0 &amp;amp;&amp;amp; available &amp;lt; size) {
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; EOFException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Available stream not enough &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; edit, &quot;&lt;/span&gt; +
                &lt;span class=&quot;code-quote&quot;&gt;&quot;inputStream.available()= &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.inputStream.available() + &lt;span class=&quot;code-quote&quot;&gt;&quot;, &quot;&lt;/span&gt; +
                &lt;span class=&quot;code-quote&quot;&gt;&quot;entry size= &quot;&lt;/span&gt; + size);
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The change will also incur one more IO seek because we can&apos;t rely on available() to exit early and after the change we force a last seek to trigger an EOF exception from underlying input stream. I&apos;d suggest we do a more wider evaluation to see the possibility to remove the dependency on available().&lt;/p&gt;</comment>
                            <comment id="14087018" author="ehans" created="Wed, 6 Aug 2014 00:24:27 +0000"  >&lt;p&gt;Thanks for the feedback. I agree with you that a wider evaluation is needed, and a test for a file input stream class that can return 0 before EOF. I&apos;m not able to help with this, at least in the next couple of weeks. Maybe we can keep this open for discussion or if somebody else wants to help.&lt;/p&gt;</comment>
                            <comment id="14093651" author="enis" created="Tue, 12 Aug 2014 02:13:50 +0000"  >&lt;p&gt;Agreed with Eric and Jeff that we should do a sweep for removing dependency on available() since it does not match the documented java semantics. Great find Eric! &lt;br/&gt;
I&apos;ll try to take a shot if I find time. &lt;/p&gt;</comment>
                            <comment id="14093741" author="stack" created="Tue, 12 Aug 2014 05:00:34 +0000"  >&lt;p&gt;Submitting patch to see how the patch does.  Would be cool if we could do w/o. I seem to remember it needed but can&apos;t remember why.&lt;/p&gt;</comment>
                            <comment id="14093778" author="hadoopqa" created="Tue, 12 Aug 2014 06:04:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12659674/hbase-11660.01.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12659674/hbase-11660.01.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12659674&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.codec.TestCellCodec&lt;br/&gt;
                  org.apache.hadoop.hbase.codec.TestKeyValueCodecWithTags&lt;br/&gt;
                  org.apache.hadoop.hbase.codec.TestKeyValueCodec&lt;br/&gt;
                  org.apache.hadoop.hbase.codec.TestCellCodecWithTags&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/10396//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12659674" name="hbase-11660.01.patch" size="721" author="ehans" created="Mon, 4 Aug 2014 16:59:31 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 4 Aug 2014 17:14:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>409806</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 18 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1yic7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>409800</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>