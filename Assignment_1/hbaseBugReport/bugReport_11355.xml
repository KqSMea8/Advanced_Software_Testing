<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:22:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11355/HBASE-11355.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11355] a couple of callQueue related improvements</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11355</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In one of my in-memory read only testing(100% get requests), one of the top scalibility bottleneck came from the single callQueue. A tentative sharing this callQueue according to the rpc handler number showed a big throughput improvement(the original get() qps is around 60k, after this one and other hotspot tunning, i got 220k get() qps in the same single region server) in a YCSB read only scenario.&lt;br/&gt;
Another stuff we can do is seperating the queue into read call queue and write call queue, we had done it in our internal branch, it would helpful in some outages, to avoid all read or all write requests ran out of all handler threads.&lt;br/&gt;
One more stuff is changing the current blocking behevior once the callQueue is full, considering the full callQueue almost means the backend processing is slow somehow, so a fail-fast here should be more reasonable if we using HBase as a low latency processing system. see &quot;callQueue.put(call)&quot;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12721329">HBASE-11355</key>
            <summary>a couple of callQueue related improvements</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mbertozzi">Matteo Bertozzi</assignee>
                                    <reporter username="xieliang007">Liang Xie</reporter>
                        <labels>
                    </labels>
                <created>Mon, 16 Jun 2014 02:54:43 +0000</created>
                <updated>Sat, 11 Jun 2016 18:30:50 +0000</updated>
                            <resolved>Tue, 1 Jul 2014 08:38:02 +0000</resolved>
                                    <version>0.99.0</version>
                    <version>0.94.20</version>
                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>0.98.4</fixVersion>
                                    <component>IPC/RPC</component>
                    <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>18</watches>
                                                                                                            <comments>
                            <comment id="14032097" author="zjushch" created="Mon, 16 Jun 2014 03:36:25 +0000"  >&lt;p&gt;220k qps seems a great performance. Waiting for the patch&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Agreeing with the other mentioned stuff, we also seperated the read and write request and make the fail-fast response after queue is full.&lt;/p&gt;


&lt;p&gt;Make these things into different  issues?&lt;/p&gt;</comment>
                            <comment id="14032181" author="xieliang007" created="Mon, 16 Jun 2014 07:22:20 +0000"  >&lt;p&gt; Unassigned from me. would be great if other guys pick it up, i am busy on other stuff.&lt;/p&gt;</comment>
                            <comment id="14032190" author="mbertozzi" created="Mon, 16 Jun 2014 07:33:29 +0000"  >&lt;p&gt;I&apos;ll take this one, since I&apos;m already playing with multiple call queues as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10994&quot; title=&quot;HBase Multi-Tenancy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10994&quot;&gt;HBASE-10994&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14032201" author="xieliang007" created="Mon, 16 Jun 2014 07:42:40 +0000"  >&lt;p&gt;Thank you, Matteo,  good on you&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14032504" author="stack" created="Mon, 16 Jun 2014 14:58:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;A tentative sharing this callQueue according to the rpc handler number...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt; What does the above mean?  Any chance of your pasting a patch, even if it is just your 0.94 rpc class... we can figure the rest (I have a little rig up here so can test np).  Thanks boss.&lt;/p&gt;</comment>
                            <comment id="14033389" author="xieliang007" created="Tue, 17 Jun 2014 03:16:57 +0000"  >&lt;p&gt;I don&apos;t have a normal 0.94 patch, it&apos;s a preliminary hack. Other hotspots includes: responseQueuesSizeThrottler, rpcMetrics, scannerReadPoints, etc.&lt;br/&gt;
The minor change about callQueue like below(we had seperated the original callQueue into readCallQueue and writeCallQueue):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; BlockingQueue&amp;lt;Call&amp;gt; readCallQueue; &lt;span class=&quot;code-comment&quot;&gt;// read queued calls
&lt;/span&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; List&amp;lt;BlockingQueue&amp;lt;Call&amp;gt;&amp;gt; readCallQueues; &lt;span class=&quot;code-comment&quot;&gt;// read queued calls
&lt;/span&gt;...
-          &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; success = readCallQueue.offer(call);
+          &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; success = readCallQueues.get(rand.nextInt(readHandlerCount)).offer(call);
...
-    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.readCallQueue = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;Call&amp;gt;(readQueueLength);
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.readHandlerCount = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.round(readQueueRatio * handlerCount);
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.readCallQueues = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedList&amp;lt;BlockingQueue&amp;lt;Call&amp;gt;&amp;gt;();
+    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=0; i&amp;lt; readHandlerCount; i++) {
+      readCallQueues.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;Call&amp;gt;(readQueueLength)) ;
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Every handler thread will consume its own queue, to eliminate the severe contention.&lt;br/&gt;
If considering correctness or more resource consumption, another call queue sharding solution here probably is introducing a queue number setting(i just took handler number for simplify to get a raw perf number), and letting all requests from same client go to the same queue always.&lt;/p&gt;</comment>
                            <comment id="14033433" author="stack" created="Tue, 17 Jun 2014 04:47:30 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14037266" author="mbertozzi" created="Thu, 19 Jun 2014 11:44:27 +0000"  >&lt;p&gt;Attached a patch that allows you to have multiple queues and the division between reads and writes.&lt;/p&gt;

&lt;p&gt;The default behavior is not changed, single queue with N handlers.&lt;/p&gt;

&lt;p&gt;by setting &quot;ipc.server.num.callqueue&quot; &amp;gt; 1 you get M queues and N handlers (where the N is still &quot;hbase.regionserver.handler.count&quot;)&lt;/p&gt;

&lt;p&gt;if the num.callqueus is &amp;gt; 1 and you set &quot;ipc.server.callqueue.read.share&quot; or &quot;ipc.server.callqueue.write.share&quot; you&apos;ll get the division between reads and writes. The num handlers will be (handler.count * share) and the  number of queues (num.callqueues * share).&lt;/p&gt;

&lt;p&gt;My code has changed the scheduler by moving the queues and thread creation in a RpcExecutor class with a SingleQueueRpcExecutor, MuliQueueRpcExecutor, RWQueueRpcExecutor variants. It is simpler for me since I&apos;m experimenting with lots of different queues for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10994&quot; title=&quot;HBase Multi-Tenancy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10994&quot;&gt;HBASE-10994&lt;/a&gt; and that allows me to simply create a different instance of the RpcExecutor without keep changing the SimpleScheduler, but I&apos;m open for suggestion if someone wants this stuff in 0.98 or 1.0&lt;/p&gt;</comment>
                            <comment id="14037498" author="apurtell" created="Thu, 19 Jun 2014 16:44:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;My code has changed the scheduler by moving the queues and thread creation in a RpcExecutor class with a SingleQueueRpcExecutor, MuliQueueRpcExecutor, RWQueueRpcExecutor variants. It is simpler for me since I&apos;m experimenting with lots of different queues for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10994&quot; title=&quot;HBase Multi-Tenancy&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10994&quot;&gt;HBASE-10994&lt;/a&gt; and that allows me to simply create a different instance of the RpcExecutor without keep changing the SimpleScheduler, but I&apos;m open for suggestion if someone wants this stuff in 0.98 or 1.0&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changing RPC internals for the sake of improving performance like this in 0.98 isn&apos;t a problem as long as public interfaces (including coprocessor related) are not touched. If that happens, then we&apos;d want to do a case by case evaluation.&lt;/p&gt;

&lt;p&gt;I looked at the attached patch and find no reason why it, and its prerequisite changes, could not go into 0.98. It would be good to have an opportunity to try it. If we find a significant regression during release candidate validation we can revert.&lt;/p&gt;</comment>
                            <comment id="14037661" author="yuzhihong@gmail.com" created="Thu, 19 Jun 2014 18:45:36 +0000"  >&lt;p&gt;For RWQueueRpcExecutor :&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;(name, &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.max(1, (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)&lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.round(handlerCount * writeShare)),
+      &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.max(1, (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)&lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.round(handlerCount * readShare)),
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is writeShare+readShare supposed to be 1.0 ?&lt;br/&gt;
If so, can you add some validation logic ? Specifying one of the two would be enough, right ?&lt;/p&gt;</comment>
                            <comment id="14038011" author="stack" created="Thu, 19 Jun 2014 22:25:36 +0000"  >&lt;p&gt;Looks great.   Will give closer review soon.  Testing...&lt;/p&gt;</comment>
                            <comment id="14042983" author="stack" created="Wed, 25 Jun 2014 02:39:05 +0000"  >&lt;p&gt;Doing basic random read test I don&apos;t see benefit just yet.  Let me try and load up more concurrency and see if that brings it out....&lt;/p&gt;</comment>
                            <comment id="14042989" author="xieliang007" created="Wed, 25 Jun 2014 02:50:02 +0000"  >&lt;p&gt;weird...&lt;br/&gt;
1. a full in-memory random read test, right? &lt;br/&gt;
2. How many ycsb processes and concurrent threads ?&lt;br/&gt;
3. Please ensure it&apos;s not a network saturated scenario(e.g. tuning ycsb setting like: readallfields, or small fieldcount/fieldlength in loading phase)&lt;br/&gt;
4. simple tens of thread dumps during testing could give more clues on current hotspot.&lt;/p&gt;</comment>
                            <comment id="14044174" author="stack" created="Wed, 25 Jun 2014 23:37:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=xieliang007&quot; class=&quot;user-hover&quot; rel=&quot;xieliang007&quot;&gt;Liang Xie&lt;/a&gt; Pilot error.&lt;/p&gt;

&lt;p&gt;I see more than 50% more throughput when pure random read from cache if I apply patch and set the below config:&lt;/p&gt;

&lt;p&gt;&amp;lt;property&amp;gt;&lt;br/&gt;
  &amp;lt;name&amp;gt;ipc.server.num.callqueue&amp;lt;/name&amp;gt;&lt;br/&gt;
  &amp;lt;value&amp;gt;10&amp;lt;/value&amp;gt;&lt;br/&gt;
&amp;lt;/property&amp;gt;&lt;/p&gt;

&lt;p&gt;My handler count is default for master: i.e. 30.&lt;/p&gt;

&lt;p&gt;Can we enable this by default?  Add fat release note and also in hbase-default.xml tie this new config. and handler count at least in the description?&lt;/p&gt;
</comment>
                            <comment id="14044178" author="stack" created="Wed, 25 Jun 2014 23:39:26 +0000"  >&lt;p&gt;Random reads per second.  First hump is w/o patch.  Second hump is w/ patch and config applied.&lt;/p&gt;

&lt;p&gt;Here is what I ran:&lt;/p&gt;

&lt;p&gt;for i in c2020 c2022 c2023 c2024 c2025; do echo $i; ssh $i &quot;nohup ./hbase-0.99.0-SNAPSHOT/bin/hbase --config ~/conf_hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --size=2.0 randomRead 30 &amp;gt; pe.out  2&amp;gt; pe.err &amp;lt; /dev/null  &amp;amp;&quot;; done&lt;/p&gt;</comment>
                            <comment id="14044180" author="apurtell" created="Wed, 25 Jun 2014 23:40:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;I see more than 50% more throughput when pure random read from cache&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nice. &lt;/p&gt;

&lt;p&gt;Shall we port to 0.98 also? See above discussion.&lt;/p&gt;
</comment>
                            <comment id="14044194" author="stack" created="Wed, 25 Jun 2014 23:53:23 +0000"  >&lt;p&gt;Could we have a version that is basic and that makes factor * handler count queues where factor is a number we decide on, say 1/5th or 1/10th.  The idea is that this facility is on by default and that user does not have to do configuration to get the basics working.  Should they later want to play w/ queue counts, then they can mess with configs setting up explicity queue number and/or read vs write proportions.&lt;/p&gt;

&lt;p&gt;I took a look at the patch, lgtm.  One day we should sweep through the code base and just make a Random per handler or so rather than create an instance per usage.  Later. &lt;/p&gt;

&lt;p&gt;On:&lt;/p&gt;

&lt;p&gt;+    // TODO: Is there a better way to do this?&lt;/p&gt;

&lt;p&gt;... yeah... but it ain&apos;t too bad.  You are narrowing when you do the interrogation and then you are looking for the Mutation marker Interface so not too fragile.&lt;/p&gt;

&lt;p&gt;On your model for plugging in different RpcExecutors, its good.&lt;/p&gt;

&lt;p&gt;Make info level:&lt;/p&gt;

&lt;p&gt;+    LOG.debug(&quot;Using &quot; + callQueueType + &quot; as user call queue, count=&quot; + numCallQueues);&lt;/p&gt;

&lt;p&gt;This is pretty important info... &lt;/p&gt;

&lt;p&gt;This is good:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return callQueue.size();&lt;br/&gt;
+    return callExecutor.getQueueLength();&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Its great &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14045682" author="mbertozzi" created="Fri, 27 Jun 2014 07:56:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; something like this?&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;ipc.server.callqueue.handler.factor
	&lt;ul&gt;
		&lt;li&gt;Factor to determine the number of call queues. (callq.factor * handlers.count)&lt;/li&gt;
		&lt;li&gt;A value of 0 means a single queue shared between all the handlers.&lt;/li&gt;
		&lt;li&gt;A value of 1 means that each handler has its own queue.&lt;/li&gt;
		&lt;li&gt;A value of 0.5 means that each 2 handlers share the same queue&lt;/li&gt;
		&lt;li&gt;A value &amp;gt; 1 will add more handlers, num queues = num handlers&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;ipc.server.callqueue.read.share&amp;lt;/name&amp;gt;
	&lt;ul&gt;
		&lt;li&gt;Split the call queues into read and write queues.&lt;/li&gt;
		&lt;li&gt;A value of 0 indicate to not split the call queues.&lt;/li&gt;
		&lt;li&gt;A value of 0.5 means there will be the same number of read and write queues&lt;/li&gt;
		&lt;li&gt;A value of 1.0 (or more) means that all the queues except one are used to dispatch read requests.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;the defaults are 0, which means single queue as before. or do you want bump the &quot;ipc.server.callqueue.handler.factor&quot; default to use more than one queue?&lt;/p&gt;</comment>
                            <comment id="14045793" author="anoop.hbase" created="Fri, 27 Jun 2014 10:31:28 +0000"  >&lt;p&gt;As we will need a restart after every config change, it will be excellent if we can auto adjust the number of read/write queues as per the read write pattern &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
But obviously another story and a future IA.  Just saying for ref.&lt;/p&gt;</comment>
                            <comment id="14046090" author="stack" created="Fri, 27 Jun 2014 15:56:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt; That&apos;d be excellent.  Suggest enabling multiqueues by default &amp;#8211; factor of .1? &amp;#8211; since such a nice benefit.&lt;/p&gt;

&lt;p&gt;Amen &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14047430" author="stack" created="Mon, 30 Jun 2014 06:51:46 +0000"  >&lt;p&gt;+1 Looks very nice.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; You probably want this too sir?&lt;/p&gt;</comment>
                            <comment id="14048301" author="apurtell" created="Mon, 30 Jun 2014 23:28:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; You probably want this too sir?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes please! +1&lt;/p&gt;</comment>
                            <comment id="14048771" author="hudson" created="Tue, 1 Jul 2014 11:19:38 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5254 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5254/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5254/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11355&quot; title=&quot;a couple of callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11355&quot;&gt;&lt;del&gt;HBASE-11355&lt;/del&gt;&lt;/a&gt; a couple of callQueue related improvements (matteo.bertozzi: rev 0e8e41d0ef5985aa3d424621eb8fcb1ca68838ab)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/MultipleQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SingleQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14048782" author="hudson" created="Tue, 1 Jul 2014 11:51:59 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.0 #2 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/2/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/2/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11355&quot; title=&quot;a couple of callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11355&quot;&gt;&lt;del&gt;HBASE-11355&lt;/del&gt;&lt;/a&gt; a couple of callQueue related improvements (matteo.bertozzi: rev 9a6a59c7b7d8357c50fd32f01d0ca21911db3da2)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SingleQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/MultipleQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14048787" author="hudson" created="Tue, 1 Jul 2014 11:59:09 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.98 #368 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/368/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/368/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11355&quot; title=&quot;a couple of callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11355&quot;&gt;&lt;del&gt;HBASE-11355&lt;/del&gt;&lt;/a&gt; a couple of callQueue related improvements (matteo.bertozzi: rev f8d50681f628bac50a0082c4c7db52cc0f96ae6a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SingleQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/MultipleQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14048868" author="hudson" created="Tue, 1 Jul 2014 13:28:36 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #348 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/348/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/348/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11355&quot; title=&quot;a couple of callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11355&quot;&gt;&lt;del&gt;HBASE-11355&lt;/del&gt;&lt;/a&gt; a couple of callQueue related improvements (matteo.bertozzi: rev f8d50681f628bac50a0082c4c7db52cc0f96ae6a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/MultipleQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SingleQueueRpcExecutor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14056817" author="apurtell" created="Wed, 9 Jul 2014 21:56:56 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-938?focusedCommentId=14056785&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14056785&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/PHOENIX-938?focusedCommentId=14056785&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14056785&lt;/a&gt; and successor comments. &lt;/p&gt;</comment>
                            <comment id="14103755" author="hudson" created="Wed, 20 Aug 2014 11:04:45 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5414 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5414/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5414/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11737&quot; title=&quot;Document callQueue improvements from HBASE-11355 and HBASE-11724&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11737&quot;&gt;&lt;del&gt;HBASE-11737&lt;/del&gt;&lt;/a&gt; Document callQueue improvements from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11355&quot; title=&quot;a couple of callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11355&quot;&gt;&lt;del&gt;HBASE-11355&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11724&quot; title=&quot;Add to RWQueueRpcExecutor the ability to split get and scan handlers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11724&quot;&gt;&lt;del&gt;HBASE-11724&lt;/del&gt;&lt;/a&gt; (Misty Stanley-Jones) (matteo.bertozzi: rev a55a65017cc182e3efd4639e3959af09f178d7d1)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;src/main/docbkx/performance.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14103902" author="hudson" created="Wed, 20 Aug 2014 14:06:27 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.0 #115 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/115/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/115/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11737&quot; title=&quot;Document callQueue improvements from HBASE-11355 and HBASE-11724&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11737&quot;&gt;&lt;del&gt;HBASE-11737&lt;/del&gt;&lt;/a&gt; Document callQueue improvements from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11355&quot; title=&quot;a couple of callQueue related improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11355&quot;&gt;&lt;del&gt;HBASE-11355&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11724&quot; title=&quot;Add to RWQueueRpcExecutor the ability to split get and scan handlers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11724&quot;&gt;&lt;del&gt;HBASE-11724&lt;/del&gt;&lt;/a&gt; (Misty Stanley-Jones) (matteo.bertozzi: rev 5c1ae840f21f7a3857543e408ef20a63be2b0751)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;src/main/docbkx/performance.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331191" author="enis" created="Sat, 21 Feb 2015 23:34:16 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                            <comment id="15325995" author="stack" created="Sat, 11 Jun 2016 18:22:05 +0000"  >&lt;p&gt;Just to say that investigating, a long time later, this patch alone doubled our throughput for random read workloads (workloadc in ycsb). &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12708663">HBASE-10994</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12708843">PHOENIX-938</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12651400" name="HBASE-11355-v0.patch" size="30931" author="mbertozzi" created="Thu, 19 Jun 2014 11:44:27 +0000"/>
                            <attachment id="12652777" name="HBASE-11355-v1.patch" size="32445" author="mbertozzi" created="Fri, 27 Jun 2014 07:56:51 +0000"/>
                            <attachment id="12653107" name="HBASE-11355-v2.patch" size="32447" author="mbertozzi" created="Mon, 30 Jun 2014 06:38:51 +0000"/>
                            <attachment id="12652519" name="gets.png" size="12571" author="stack" created="Wed, 25 Jun 2014 23:39:26 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12733945">HBASE-11737</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Jun 2014 03:36:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>399525</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            26 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ws0f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>399634</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Near double the random read throughput (On random test bench with 8 clients running ycsb workloadc against a single server, see throughput go from 180k to 335k ops a second).</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>