<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:18:16 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4364/HBASE-4364.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4364] Filters applied to columns not in the selected column list are ignored</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4364</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;For a scan, if you select some set of columns using addColumns(), and then apply a SingleColumnValueFilter that restricts the results based on some other columns which aren&apos;t selected, then those filter conditions are ignored.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12522487">HBASE-4364</key>
            <summary>Filters applied to columns not in the selected column list are ignored</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Sep 2011 23:02:32 +0000</created>
                <updated>Tue, 14 Jun 2016 07:37:37 +0000</updated>
                                            <version>0.90.4</version>
                    <version>0.92.0</version>
                    <version>0.94.0</version>
                                                    <component>Filters</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>17</watches>
                                                                <comments>
                            <comment id="13101629" author="tlipcon" created="Fri, 9 Sep 2011 23:05:35 +0000"  >&lt;p&gt;Example shell code to reproduce this:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;create &apos;t1&apos;, &apos;f1&apos;, f2&apos;
put &apos;t1&apos;, &apos;r1&apos;, &apos;f1:word&apos;, &apos;hello&apos;
put &apos;t1&apos;, &apos;r1&apos;, &apos;f2:word&apos;, &apos;bonjour&apos;
put &apos;t1&apos;, &apos;r2&apos;, &apos;f1:word&apos;, &apos;goodbye&apos;
put &apos;t1&apos;, &apos;r2&apos;, &apos;f2:word&apos;, &apos;au revoir&apos;

# scan whole table, has 2 rows, each with 2 cols
scan &apos;t1&apos;
# scan selecting only one column - returns 2 distinct rows
scan &apos;t1&apos;, { COLUMNS =&amp;gt; [&apos;f1:word&apos;] }
# scan with a predicate of the french word &amp;gt; &apos;b&apos;, returns 1 row
scan &apos;t1&apos;, { FILTER =&amp;gt; &quot;SingleColumnValueFilter(&apos;f2&apos;, &apos;word&apos;, &amp;gt;, &apos;binary:b&apos;)&quot;  }
# scan with a predicate of the french word &amp;gt; &apos;b&apos;, selecting only the english word
scan &apos;t1&apos;, { COLUMNS =&amp;gt; [&apos;f1:word&apos;], FILTER =&amp;gt; &quot;SingleColumnValueFilter(&apos;f2&apos;, &apos;word&apos;, &amp;gt;, &apos;binary:b&apos;)&quot;  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The incorrect result is as follows:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;hbase(main):008:0&amp;gt; scan &apos;t1&apos;
ROW                                COLUMN+CELL                                                                                       
 r1                                column=f1:word, timestamp=1315608975212, value=hello                                              
 r1                                column=f2:word, timestamp=1315608975238, value=bonjour                                            
 r2                                column=f1:word, timestamp=1315608975258, value=goodbye                                            
 r2                                column=f2:word, timestamp=1315608975286, value=au revoir                                          
2 row(s) in 0.0270 seconds

hbase(main):009:0&amp;gt; scan &apos;t1&apos;, { COLUMNS =&amp;gt; [&apos;f1:word&apos;] }
ROW                                COLUMN+CELL                                                                                       
 r1                                column=f1:word, timestamp=1315608975212, value=hello                                              
 r2                                column=f1:word, timestamp=1315608975258, value=goodbye                                            
2 row(s) in 0.0140 seconds

hbase(main):010:0&amp;gt; scan &apos;t1&apos;, { FILTER =&amp;gt; &quot;SingleColumnValueFilter(&apos;f2&apos;, &apos;word&apos;, &amp;gt;, &apos;binary:b&apos;)&quot;  }
ROW                                COLUMN+CELL                                                                                       
 r1                                column=f1:word, timestamp=1315608975212, value=hello                                              
 r1                                column=f2:word, timestamp=1315608975238, value=bonjour                                            
1 row(s) in 0.0250 seconds

hbase(main):011:0&amp;gt; scan &apos;t1&apos;, { COLUMNS =&amp;gt; [&apos;f1:word&apos;], FILTER =&amp;gt; &quot;SingleColumnValueFilter(&apos;f2&apos;, &apos;word&apos;, &amp;gt;, &apos;binary:b&apos;)&quot;  }
ROW                                COLUMN+CELL                                                                                       
 r1                                column=f1:word, timestamp=1315608975212, value=hello                                              
 r2                                column=f1:word, timestamp=1315608975258, value=goodbye                                            
2 row(s) in 0.0270 seconds &amp;lt;---- SHOULD NOT HAVE RETURNED ANY VALUE FOR r2!
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13101632" author="tlipcon" created="Fri, 9 Sep 2011 23:08:25 +0000"  >&lt;p&gt;Actually, it turns out this isn&apos;t due to column family pruning - the same behavior occurs even with just one column family:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;
create &apos;t2&apos;, &apos;f&apos;
put &apos;t2&apos;, &apos;r1&apos;, &apos;f:e_word&apos;, &apos;hello&apos;
put &apos;t2&apos;, &apos;r1&apos;, &apos;f:f_word&apos;, &apos;bonjour&apos;
put &apos;t2&apos;, &apos;r2&apos;, &apos;f:e_word&apos;, &apos;goodbye&apos;
put &apos;t2&apos;, &apos;r2&apos;, &apos;f:f_word&apos;, &apos;au revoir&apos;
scan &apos;t2&apos;
# scan selecting only one column - returns 2 distinct rows
scan &apos;t2&apos;, { COLUMNS =&amp;gt; [&apos;f:e_word&apos;] }
# scan with a predicate of the french word &amp;gt; &apos;b&apos;, returns 1 row
scan &apos;t2&apos;, { FILTER =&amp;gt; &quot;SingleColumnValueFilter(&apos;f&apos;, &apos;f_word&apos;, &amp;gt;, &apos;binary:b&apos;)&quot;  }
# scan with a predicate of the french word &amp;gt; &apos;b&apos;, selecting only the english word
scan &apos;t2&apos;, { COLUMNS =&amp;gt; [&apos;f:e_word&apos;], FILTER =&amp;gt; &quot;SingleColumnValueFilter(&apos;f&apos;, &apos;f_word&apos;, &amp;gt;, &apos;binary:b&apos;)&quot;  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13101638" author="tlipcon" created="Fri, 9 Sep 2011 23:15:52 +0000"  >&lt;p&gt;Updated description to reflect the above: this is a general issue, not related to CFs.&lt;/p&gt;</comment>
                            <comment id="13101641" author="tlipcon" created="Fri, 9 Sep 2011 23:25:53 +0000"  >&lt;p&gt;Apparently this is actually known behavior according to SingleColumnValueFilter. From the JavaDoc:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;When using this filter on a {@link Scan} with specified
 * inputs, the column to be tested should also be added as input (otherwise
 * the filter will regard the column as missing).
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;IMO, it&apos;s a bug, though, not a feature! Filters with requirements like this should automatically push their column requirements through to the ExplicitColumnTracker.&lt;/p&gt;</comment>
                            <comment id="13401902" author="grace.huang" created="Wed, 27 Jun 2012 02:41:17 +0000"  >&lt;p&gt;We have met the similar problem as well. After checking the code implementation and the JavaDoc, it may not be a bug from my perspective. According to its description, if the input doesn&apos;t include that column defined in the filter, that column will be regarded as missing. If filterIfMissing is true, that row will be omitted. Otherwise, you will get the row without filtering. &lt;/p&gt;


&lt;p&gt;Generally, in real world application, we&apos;d better to check that case on the client side before issuing the scan. In order to avoid the repetition of checking missing column on client side, we do a little modification on that file while using it (see patch file).&lt;/p&gt;</comment>
                            <comment id="13401907" author="grace.huang" created="Wed, 27 Jun 2012 02:45:45 +0000"  >&lt;p&gt;In order to get the configured columnfamily and qualifier in the SingleColumnValueFilter, we&apos;d better add two get functions in the class. &lt;/p&gt;

&lt;p&gt;And one coprocessor sample is added in this patch, which will add that configured qualifier into the tested set by default. &lt;/p&gt;

&lt;p&gt;The current patch file is against to 0.94.0 release version.&lt;/p&gt;</comment>
                            <comment id="13401911" author="grace.huang" created="Wed, 27 Jun 2012 02:47:34 +0000"  >&lt;p&gt;Sorry for mis-click the wrong button. I should supply a sample file only. &lt;/p&gt;</comment>
                            <comment id="13401947" author="grace.huang" created="Wed, 27 Jun 2012 03:58:44 +0000"  >&lt;p&gt;Sample file for workaround&lt;/p&gt;</comment>
                            <comment id="13402194" author="grace.huang" created="Wed, 27 Jun 2012 12:49:49 +0000"  >&lt;p&gt;One possible solution for the feature: &lt;br/&gt;
1. Add sanityCheck() API in Filter. And call the check function in getScanner(). So the filter can check the scan and its criteria before hand.&lt;br/&gt;
2. In SingleColumnValueFilter, if the tested set doesn&apos;t include the criteria column, add it in sanityCheck(). Afterwards,  remove the column in filterRow(kv), so that the user will get all required columns.&lt;/p&gt;

&lt;p&gt;I will add one corresponding testcase and do the verification later. Any comment, please let me know. thanks.&lt;/p&gt;</comment>
                            <comment id="13402800" author="grace.huang" created="Thu, 28 Jun 2012 03:04:53 +0000"  >&lt;p&gt;Provide the patch of one possible solution for this feature. I wonder if it is acceptable.&lt;/p&gt;</comment>
                            <comment id="13402820" author="hadoopqa" created="Thu, 28 Jun 2012 03:56:46 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533771/hbase-4364-0_94_0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533771/hbase-4364-0_94_0.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2276//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2276//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13402832" author="hadoopqa" created="Thu, 28 Jun 2012 04:23:20 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533774/hbase-4364-0_94_0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533774/hbase-4364-0_94_0.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2277//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2277//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13402869" author="hadoopqa" created="Thu, 28 Jun 2012 05:43:29 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533780/hbase-4364-0_94_0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533780/hbase-4364-0_94_0.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2278//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2278//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13405031" author="jq.hadoop" created="Mon, 2 Jul 2012 12:12:27 +0000"  >&lt;p&gt;Looks like a useful fix to me - the current behavior is very confusing to any average SQL user. Can anyone confirm if this is a valid patch?&lt;/p&gt;</comment>
                            <comment id="13413590" author="hadoopqa" created="Fri, 13 Jul 2012 09:02:46 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12536340/hbase-4364_trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12536340/hbase-4364_trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestSplitLogManager&lt;br/&gt;
                  org.apache.hadoop.hbase.catalog.TestMetaReaderEditor&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2382//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2382//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2382//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2382//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2382//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13435189" author="alexb" created="Wed, 15 Aug 2012 15:05:58 +0000"  >&lt;p&gt;Attached patch with simple custom filter unit-test that fails (which verifies the issue).&lt;/p&gt;</comment>
                            <comment id="13435239" author="hadoopqa" created="Wed, 15 Aug 2012 16:03:33 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12541070/HBASE-4364-failing-test-with-simplest-custom-filter.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12541070/HBASE-4364-failing-test-with-simplest-custom-filter.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.filter.TestFilterOnSelectedColumns&lt;br/&gt;
                  org.apache.hadoop.hbase.TestDrainingServer&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2588//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13435292" author="lucjb" created="Wed, 15 Aug 2012 16:54:47 +0000"  >
&lt;p&gt;Hi there, we&apos;re facing a similar issue. But I guess the first question would be, what is the expected behavior for the treatment of requested columns and filtered columns?&lt;br/&gt;
One possible use case is when I want to get a specific set of columns, but filter the row using another set of columns. For this use case it looks like the Filter should always be applied to all columns, regardless of the columns requested by the client. This would be SQL-like &apos;where&apos; and &apos;projection&apos;.&lt;br/&gt;
But, hbase is supposed to be able to handle tons of columns, so performance wise, the SQL-like behavior doesn&apos;t look like a good idea to me.&lt;br/&gt;
I think the behavior should be: filter is only applied on requested columns, a more bigdata oriented behavior. Or, may be add the posibility to specify, a set of &apos;projected&apos; columns and another set of filtered &apos;columns&apos;.&lt;/p&gt;

&lt;p&gt;Anyway, it looks like 0.92.1 does something really weird. It will apply the filter on the first column and the &apos;projected&apos; columns. This is closer to the bigdata oriented behavior, but with a bug, so, I think it should be fixed first, meaning just apply the filter to requested columns vs first column + requested columns. Once that works, we can think about filtering based on other columns.&lt;/p&gt;
</comment>
                            <comment id="13435296" author="zhihyu@ebaysf.com" created="Wed, 15 Aug 2012 16:57:29 +0000"  >&lt;p&gt;@Lucas:&lt;br/&gt;
Makes sense.&lt;br/&gt;
Any chance of a patch for trunk ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13435299" author="lucjb" created="Wed, 15 Aug 2012 17:02:24 +0000"  >&lt;p&gt;I&apos;ll try to look at it, any reccommendation on classes to start?&lt;/p&gt;</comment>
                            <comment id="13435340" author="zhihyu@ebaysf.com" created="Wed, 15 Aug 2012 17:44:17 +0000"  >&lt;p&gt;I just found that Grace provided a patch some time ago.&lt;br/&gt;
But the patch doesn&apos;t compile:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] /Users/zhihyu/trunk-hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/filter/FilterWrapper.java:[41,7] org.apache.hadoop.hbase.filter.FilterWrapper is not &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; and does not override &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; method sanityCheck(org.apache.hadoop.hbase.client.Scan) in org.apache.hadoop.hbase.filter.Filter
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;@Lucas:&lt;br/&gt;
You can use that as a starting point.&lt;/p&gt;

&lt;p&gt;@Grace:&lt;br/&gt;
You are welcome to refine your patch.&lt;/p&gt;</comment>
                            <comment id="13435659" author="grace.huang" created="Thu, 16 Aug 2012 00:46:48 +0000"  >&lt;p&gt;Yes. I will refine my patch against the trunk. &lt;/p&gt;</comment>
                            <comment id="13435767" author="hadoopqa" created="Thu, 16 Aug 2012 05:11:53 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12541179/hbase-4364_trunk-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12541179/hbase-4364_trunk-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 11 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestSplitLogManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2597//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13435775" author="grace.huang" created="Thu, 16 Aug 2012 05:55:14 +0000"  >&lt;p&gt;I have updated the patch file against the latest trunk version. This patch only aims to solve the problem which is stated in this bug entry. So that the user can do sth. like &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;create &apos;t2&apos;, &apos;f&apos;
put &apos;t2&apos;, &apos;r1&apos;, &apos;f:e_word&apos;, &apos;hello&apos;
put &apos;t2&apos;, &apos;r1&apos;, &apos;f:f_word&apos;, &apos;bonjour&apos;
put &apos;t2&apos;, &apos;r2&apos;, &apos;f:e_word&apos;, &apos;goodbye&apos;
put &apos;t2&apos;, &apos;r2&apos;, &apos;f:f_word&apos;, &apos;au revoir&apos;
# scan with a predicate of the french word &amp;gt; &apos;b&apos;, selecting only the english word
# it only returns &quot;r1 column=f:e_word, value=hello&quot; instead of 
# &quot;r1 column=f:e_word, value=hello; r2 column=f:e_word, value=goodbye&quot;
scan &apos;t2&apos;, { COLUMNS =&amp;gt; [&apos;f:e_word&apos;], FILTER =&amp;gt; &quot;SingleColumnValueFilter(&apos;f&apos;, &apos;f_word&apos;, &amp;gt;, &apos;binary:b&apos;)&quot;  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From my perspective, this case is different with that case stated in the unit-test file. Here is a simple solution to make that unit-test case passed. &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class ValueHasMoreThan2BytesFilter &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; FilterBase {
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ReturnCode filterKeyValue(KeyValue kv) {
      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] val = kv.getValue();
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (val.length &amp;gt; 2) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; ReturnCode.INCLUDE;
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; ReturnCode.NEXT_ROW; &lt;span class=&quot;code-comment&quot;&gt;// it should be &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; ReturnCode.SKIP;&quot;&lt;/span&gt;
&lt;/span&gt;      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;Then we can get the expected results here.&lt;/p&gt;</comment>
                            <comment id="13435933" author="alexb" created="Thu, 16 Aug 2012 12:45:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;return ReturnCode.NEXT_ROW; // it should be &quot;return ReturnCode.SKIP;&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changing to SKIP would help to get the correct results for sure. But I&apos;d highly doubt that in this case it will work correct internally. I.e. I believe it would still apply filter to all columns, but because any of these applications of filter doesn&apos;t affect the decision on whether include the whole row or not this works. But in the essence (applying filter to all columns instead of selected) this might work incorrect internally.&lt;/p&gt;

&lt;p&gt;That&apos;s why I added this unit-test, which actually verifies that &lt;b&gt;filter applied to selected columns only&lt;/b&gt; (and decisions about filtering rows are based on filters applied to selected columns only).&lt;/p&gt;</comment>
                            <comment id="13435934" author="alexb" created="Thu, 16 Aug 2012 12:48:25 +0000"  >&lt;p&gt;@&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=grace.huang&quot; class=&quot;user-hover&quot; rel=&quot;grace.huang&quot;&gt;Jie Huang&lt;/a&gt; Could you please create review on the review board?&lt;/p&gt;</comment>
                            <comment id="13435984" author="grace.huang" created="Thu, 16 Aug 2012 14:08:53 +0000"  >&lt;p&gt;@Alex, totally understand your point. Yes. What you have stated in the unit-test is a problem. Not only for the functionality, but also for the better performance as Lucas mentioned. We&apos;d better to feed all those &lt;b&gt;selected columns&lt;/b&gt; to the filter. &lt;/p&gt;

&lt;p&gt;However, to make the filter only work on those selected columns doesn&apos;t help to solve the original problem here. The problem is sth. like &lt;b&gt;select A from table where B &amp;gt; &apos;b&apos;&lt;/b&gt;. If we only applies the filtering criteria on column A as what we expected in the unit-test case, we will get empty result here. So basically, the solution proposed here is &lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;To add filterred column into the selected columns, and then do the filter. The sanityCheck() function gives the chance to combine &quot;projected&quot; and &quot;where&quot; if necessary.&lt;/li&gt;
	&lt;li&gt;To remove that newly added column before returning back to the end-user. Since that newly added column is not expected by the end-user.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;After making the filter only work on those required columns, using suck kind of solution, we still can extend the &quot;projected&quot; by adding those &quot;where&quot; columns. And the filter may apply on &quot;required&quot; + &quot;criteria column&quot; only, instead of going through the whole column list.&lt;/p&gt;

&lt;p&gt;How about to create a new issue about the &quot;only feeds those selected columns to the filter&quot;. The initial thought is to do some comparison work in the matcher. Any comment?&lt;/p&gt;
</comment>
                            <comment id="13435993" author="lucjb" created="Thu, 16 Aug 2012 14:27:12 +0000"  >&lt;p&gt;How about specifying filterColumns explictly on the client side?&lt;br/&gt;
So if i want to do something equivalent to select a, b from x where c&amp;gt;0 and d&amp;lt;1 in hbase it would be&lt;br/&gt;
get.addColumn(a);&lt;br/&gt;
get.addColumn(b);&lt;br/&gt;
get.addFilterColumn(c);&lt;br/&gt;
get.addFilterColumn(d);&lt;/p&gt;

&lt;p&gt;So the filter would only be applied on keyvalues for columns c and d.&lt;br/&gt;
If no filetrColumn is specified, then the filter would be applied on projected columns only.&lt;/p&gt;
</comment>
                            <comment id="13436027" author="alexb" created="Thu, 16 Aug 2012 15:13:26 +0000"  >&lt;p&gt;@Jie Yeah, seems you are right. The problem I&apos;m referring to is a bit different.&lt;/p&gt;

&lt;p&gt;Now that I re-read the issue description I think that two problems could be contradictory:&lt;br/&gt;
1. In this issue it is stated that &lt;b&gt;filters should be applied to the columns not in the selected list&lt;/b&gt;&lt;br/&gt;
2. In the problem I&apos;m referring to states that &lt;b&gt;filters should not be applied to the columns in the selected list&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;May be what I&apos;m pointing out with the unit-test is really not a bug, but &quot;designed to be&quot; so? Though it might be not, because it would make scanner to always fetch (physically from the storage) even those columns we are not interested in if filters are added to the scan. Which might add a lot of unnecessary work (currently - when data is in different columnfamilies, or in future for same CF if the storage format will be improved somehow that will allow avoid reading columns that are not requested from single CF). I&apos;d say it may be better to require users to specify explicitly columns to which the filters should be applied iff they are not in the selected list. In case of SingleColumnValueFilter, we may say that user specifies the column explicitly. I.e. we should also have ability, (or do we already?) for filter to add a column to that &quot;apply filter to but not transfer to the user&quot; column list.&lt;/p&gt;</comment>
                            <comment id="13436032" author="zhihyu@ebaysf.com" created="Thu, 16 Aug 2012 15:20:24 +0000"  >&lt;p&gt;@Alex:&lt;br/&gt;
Take a look at SingleColumnValueExcludeFilter&lt;/p&gt;</comment>
                            <comment id="13436036" author="lucjb" created="Thu, 16 Aug 2012 15:28:49 +0000"  >&lt;p&gt;Yeah, I agree with Alex, the problem I se is that now, the code it somewhere in the middle, the filter is applied to the first column, and selected columns. I&apos;m trying to figure out how to fix that, but I&apos;m having trouble to find whi the first column is passed to the filter.&lt;/p&gt;</comment>
                            <comment id="13436040" author="alexb" created="Thu, 16 Aug 2012 15:38:18 +0000"  >&lt;p&gt;RE SingleColumnValueExcludeFilter - then why this issue is a bug again? I believe this is the correct behavior (based on the thoughts in my last comment). Then one need to include the column is select columns list and use SingleColumnValueExcludeFilter.&lt;/p&gt;

&lt;p&gt;At the same time (different story/effort) we may want to make this &quot;apply filter but not transfer back to user&quot; feature be available in some more generic way. May be some filter wrapper or so.&lt;/p&gt;</comment>
                            <comment id="13436485" author="grace.huang" created="Fri, 17 Aug 2012 00:45:23 +0000"  >&lt;p&gt;Actually, I know we can use SingleColumnValueExcludeFilter to solve the problem somehow. That is why I said this is not a bug before. The document already hints to include both &quot;required&quot; and &quot;criteria&quot; columns altogether. Otherwise, the criteria column will be regarded as missing part in the filter. The correct way is:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; scan &apos;t2&apos;, { COLUMNS =&amp;gt; [&apos;f:e_word&apos;, &apos;f:f_word&apos;], FILTER =&amp;gt; &quot;SingleColumnValueExcludeFilter(&apos;f&apos;, &apos;f_word&apos;, &amp;gt;, &apos;binary:b&apos;)&quot;  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But, SingleColumnValueExcludeFilter only helps to not return that filter&apos;s &quot;criteria column&quot;. We still need to specify both &quot;e_word&quot; and &quot;f_word&quot; columns in the &quot;required&quot; list. Otherwise, we still get the wrong result like this:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;scan &apos;t2&apos;, { COLUMNS =&amp;gt; [&apos;f:e_word&apos;], FILTER =&amp;gt; &quot;SingleColumnValueExcludeFilter(&apos;f&apos;, &apos;f_word&apos;, &amp;gt;, &apos;binary:b&apos;)&quot;  }
ROW                            COLUMN+CELL
 r1                            column=f:e_word, timestamp=1345084564838, value=hello
 r2                            column=f:e_word, timestamp=1345084564895, value=goodbye
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The points of that proposal in the patch file are :&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;b&gt;select A from table where B&amp;gt;&apos;b&apos;&lt;/b&gt; is more acceptable by SQL user rather than &lt;b&gt;select A exclusively (B) from table where B&amp;gt;&apos;b&apos;&lt;/b&gt;&lt;/li&gt;
	&lt;li&gt;To add one chance to combine &quot;required&quot; and &quot;criteria&quot; columns before doing the filtering work, which may be used by other filter later. It is not only for SingleColumnValueFilter.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;For the other problem in the unit-test, shall we create a new issue and have further discussion there?&lt;/p&gt;</comment>
                            <comment id="13447693" author="grace.huang" created="Tue, 4 Sep 2012 13:51:09 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=alexb&quot; class=&quot;user-hover&quot; rel=&quot;alexb&quot;&gt;Alex Baranau&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lucjb&quot; class=&quot;user-hover&quot; rel=&quot;lucjb&quot;&gt;Lucas Bernardi&lt;/a&gt; I have checked those code related to the problem you mentioned. According to the comments, it seems that this topic has been discussed before. The conclusion is that&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
     * Filters should be checked before checking column trackers. If we &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;
     * otherwise, as was previously being done, ColumnTracker may increment its
     * counter &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; even that KV which may be discarded later on by Filter. This
     * would lead to incorrect results in certain cases.
     */
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (filter != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      ReturnCode filterResponse = filter.filterKeyValue(kv);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (filterResponse == ReturnCode.SKIP) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; MatchCode.SKIP;
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (filterResponse == ReturnCode.NEXT_COL) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; columns.getNextRowOrNextColumn(bytes, offset, qualLength);
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (filterResponse == ReturnCode.NEXT_ROW) {
        stickyNextRow = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; MatchCode.SEEK_NEXT_ROW;
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (filterResponse == ReturnCode.SEEK_NEXT_USING_HINT) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; MatchCode.SEEK_NEXT_USING_HINT;
      }
    }

    MatchCode colChecker = columns.checkColumn(bytes, offset, qualLength,
        timestamp, type, kv.getMemstoreTS() &amp;gt; maxReadPointToTrackVersions);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If both of you are still interested in this problem, we may try to figure out some potential solution. Any comment?&lt;/p&gt;</comment>
                            <comment id="13648893" author="jdcryans" created="Fri, 3 May 2013 23:18:48 +0000"  >&lt;p&gt;Unmarking patch available, the conversation died.&lt;/p&gt;</comment>
                            <comment id="13770217" author="vasu.mariyala@gmail.com" created="Wed, 18 Sep 2013 00:32:46 +0000"  >&lt;p&gt;I have attached the patch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4364&quot; title=&quot;Filters applied to columns not in the selected column list are ignored&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4364&quot;&gt;HBASE-4364&lt;/a&gt;.patch which provides the support for the filtering to be based on different column qualifiers/column families when compared to the selection list (scan.getFamilyMap()). This feature reduces the amount of data that is sent to the client in different scenarios.&lt;/p&gt;

&lt;p&gt;On a high level, the patch does the following&lt;/p&gt;

&lt;p&gt;a) Filter communicates its needs of the column qualifiers/column families through getFamilyMap() method of Filter. This method has been added in this patch.&lt;/p&gt;

&lt;p&gt;b) While selecting the store scanners, the requirement from the filters is considered as well.&lt;/p&gt;

&lt;p&gt;c) ScanQueryMatcher has been changed to apply the filter only if it is part of the required column qualifiers specified by the filter. It has also been changed to include a key value only if it is part of the scan family map.&lt;/p&gt;

&lt;p&gt;d) The change was implemented in a back ward compatible manner. The behavior of the existing filters would not be affected.&lt;/p&gt;

&lt;p&gt;Please review the first version of the patch and provide your valuable inputs on the approach that was used.&lt;/p&gt;

&lt;p&gt;If the approach is ok, then I will continue to work on refining the code and changing the existing filters like SingleColumnValueFilter to use the new approach.&lt;/p&gt;

&lt;p&gt;+ &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; to comment on this&lt;/p&gt;</comment>
                            <comment id="13770956" author="yuzhihong@gmail.com" created="Wed, 18 Sep 2013 16:52:17 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;// Select clause has its own column qualifiers&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Better replace &apos;Select clause&apos; with other term.&lt;/p&gt;

&lt;p&gt;Approach looks feasible.&lt;br/&gt;
Have you benchmarked the performance of the patch ?&lt;/p&gt;

&lt;p&gt;Please put next patch on review board.&lt;/p&gt;</comment>
                            <comment id="13771037" author="vasu.mariyala@gmail.com" created="Wed, 18 Sep 2013 18:18:52 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; for your comments. Before doing the performance benchmarking, I wanted to get some comments on the approach. I would work on it and post the observations. &lt;/p&gt;

&lt;p&gt;Sure, I would post the next patch on the review board.&lt;/p&gt;</comment>
                            <comment id="13786678" author="stack" created="Fri, 4 Oct 2013 22:07:38 +0000"  >&lt;p&gt;Log of failed test.&lt;/p&gt;</comment>
                            <comment id="15329022" author="ecamaj" created="Tue, 14 Jun 2016 07:37:37 +0000"  >&lt;p&gt;This was never solved? No Fix version on top... &lt;br/&gt;
thanks&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12657351">HBASE-8930</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12541070" name="HBASE-4364-failing-test-with-simplest-custom-filter.patch" size="4700" author="alexb" created="Wed, 15 Aug 2012 15:05:58 +0000"/>
                            <attachment id="12603723" name="HBASE-4364.patch" size="34522" author="vasu.mariyala@gmail.com" created="Wed, 18 Sep 2013 00:32:46 +0000"/>
                            <attachment id="12541179" name="hbase-4364_trunk-v2.patch" size="7508" author="grace.huang" created="Thu, 16 Aug 2012 04:12:41 +0000"/>
                            <attachment id="12536340" name="hbase-4364_trunk.patch" size="6749" author="grace.huang" created="Fri, 13 Jul 2012 06:58:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 27 Jun 2012 02:41:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27274</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            26 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00s6v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2499</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Phoenix</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>