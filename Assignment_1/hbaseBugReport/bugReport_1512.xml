<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:54:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1512/HBASE-1512.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1512] Coprocessors: Support aggregate functions</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1512</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Chatting with jgray and holstad at the kitchen table about counts, sums, and other aggregating facility, facility generally where you want to calculate some meta info on your table, it seems like it wouldn&apos;t be too hard making a filter type that could run a function server-side and return the result ONLY of the aggregation or whatever.&lt;/p&gt;

&lt;p&gt;For example, say you just want to count rows, currently you scan, server returns all data to client and count is done by client counting up row keys.  A bunch of time and resources have been wasted returning data that we&apos;re not interested in.  With this new filter type, the counting would be done server-side and then it would make up a new result that was the count only (kinda like mysql when you ask it to count, it returns a &apos;table&apos; with a count column whose value is count of rows).   We could have it so the count was just done per region and return that.  Or we could maybe make a small change in scanner too so that it aggregated the per-region counts.  &lt;/p&gt;</description>
                <environment></environment>
        <key id="12427760">HBASE-1512</key>
            <summary>Coprocessors: Support aggregate functions</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12441373">HBASE-2000</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="v.himanshu">Himanshu Vashishtha</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Jun 2009 16:13:48 +0000</created>
                <updated>Fri, 20 Nov 2015 13:02:01 +0000</updated>
                            <resolved>Mon, 25 Apr 2011 22:03:22 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>21</watches>
                                                                <comments>
                            <comment id="12851938" author="apurtell" created="Wed, 31 Mar 2010 16:37:07 +0000"  >&lt;p&gt;Current patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt; implements a map reduce framework in the regionserver that can calculate aggregates. A client would kick off a map reduce process distributed over each region in the table and then do an in memory merge of the results. This is roughly what is proposed in OP but uses a different server side framework than filters. &lt;/p&gt;</comment>
                            <comment id="12902534" author="v.himanshu" created="Wed, 25 Aug 2010 17:40:38 +0000"  >&lt;p&gt;Hello Andrew,&lt;br/&gt;
Can you please tell where should I start digging and changing stuff to make it work. I have seen your code under the patch 2001, and would like to work on coprocessors, starting from this jira. &lt;br/&gt;
Will fetching codebase from github (as mentioned there) will give me the right code base...seems things have changed since then. What is the right way to do this.&lt;br/&gt;
Thanks,&lt;br/&gt;
Himanshu&lt;/p&gt;</comment>
                            <comment id="12903275" author="mingjielai" created="Fri, 27 Aug 2010 07:19:39 +0000"  >&lt;p&gt;Hi Himanshu. &lt;/p&gt;

&lt;p&gt;Right now I&apos;m doing some cleanups for coprocessor. Here is the code: &lt;a href=&quot;http://github.com/mlai/hbase&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/mlai/hbase&lt;/a&gt;. Please use the branch &amp;#8211; coprocessors_mlai. &lt;/p&gt;

&lt;p&gt;However our current objective is to utilize CP to implement role based access control(RBAC) toward 0.90. We only need Coprocessor, RegionObservor, CommandType interfaces for this purpose. So I didn&apos;t include the MapReduce and FilterInterface in the branch (neither for 0.90 I think). &lt;/p&gt;

&lt;p&gt;You can take a look at that branch. It can pass all HBase test cases, but we still need to improve it a little for exception handling. &lt;/p&gt;

&lt;p&gt;If you have interests for Mapreduce implementation, you can also refer the first patch of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2001&quot; title=&quot;Coprocessors: Colocate user code with regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2001&quot;&gt;&lt;del&gt;HBASE-2001&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Mingjie &lt;/p&gt;</comment>
                            <comment id="12926830" author="v.himanshu" created="Mon, 1 Nov 2010 05:27:58 +0000"  >&lt;p&gt;agg functions poc&lt;/p&gt;</comment>
                            <comment id="12926831" author="v.himanshu" created="Mon, 1 Nov 2010 05:28:50 +0000"  >&lt;p&gt;With the 2001 patch, the basic infrastructure required by these functions is available. I wrote a test class to cover some of these, but am confused about their degree of &apos;generic&apos;-ness. &lt;/p&gt;

&lt;p&gt;Here, I assumed the user is aware of the table in context and the return types he is getting from the Coprocessor impls, and so the input/output types of these  agg operations will also be the same. Therefore he builds agg function classes with those &apos;types&apos;. I think it is kind of skewed assumption and seeks further clarification. What are the expectations from the &apos;end interface&apos;? &lt;/p&gt;

&lt;p&gt;I have attached the new/modified classes (2/1). &lt;br/&gt;
a) ProcessResultsFromCP: to be implemented by the agg functions (can be part of the Batch class). &lt;br/&gt;
b) TestAggFunctions: has the test case using the agg functions&lt;br/&gt;
c) HTable: one method to execute the aggregation functions.&lt;/p&gt;

&lt;p&gt;There is high probability that I have twisted the desired feature entirely, so please feel free to &apos;lambaste&apos; the code and its underlying assumptions.&lt;/p&gt;

&lt;p&gt;PS: I was thinking to make this jira a sub item for jira 2469, but couldn&apos;t come up with some thing worth mentioning.&lt;/p&gt;</comment>
                            <comment id="12927634" author="mingjielai" created="Tue, 2 Nov 2010 21:50:44 +0000"  >&lt;p&gt;Himanshu.&lt;/p&gt;

&lt;p&gt;The patch looks good. But it doesn&apos;t provide the whole picture of the solution. There are still some important questions unanswered for this feature:&lt;/p&gt;

&lt;p&gt;1) what&apos;s the interface provided to end users? HTableInterface.sum(...), HTableInterface.min/max()? Do we need shell support?&lt;/p&gt;

&lt;p&gt;2) how to implement the interface? (by utilizing coprocessor)&lt;/p&gt;

&lt;p&gt;3) how to make sure the coprocessor loaded properly if the feature is available. &lt;/p&gt;

&lt;p&gt;You patch addresses part of (2). And it only provides max() and countRow() implementation. &lt;/p&gt;

&lt;p&gt;IMO I don&apos;t think ProcessResultsFromCP is necessary. It doesn&apos;t really provide any convenience for developers to reduce development effort. &lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;</comment>
                            <comment id="12927706" author="ghelmling" created="Wed, 3 Nov 2010 01:06:50 +0000"  >&lt;p&gt;Thanks for the patch Himanshu!  &lt;/p&gt;

&lt;p&gt;For the scope of the functionality and what sort of aggregation functions you might cover, you might want to start with a comparison of common SQL functions (ex. &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/group-by-functions.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dev.mysql.com/doc/refman/5.5/en/group-by-functions.html&lt;/a&gt;).  I don&apos;t know if you really need to implement all of them, but a good start would probably be:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;COUNT&lt;/li&gt;
	&lt;li&gt;AVG&lt;/li&gt;
	&lt;li&gt;MIN&lt;/li&gt;
	&lt;li&gt;MAX&lt;/li&gt;
	&lt;li&gt;STD&lt;/li&gt;
	&lt;li&gt;SUM&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(just my opinion of course).  All of these would need some form of server side function, and in some cases the client/server coordination might be a little tricky when you have to span regions.&lt;/p&gt;

&lt;p&gt;The client side interface for these also has it&apos;s own needs.  Does it make sense to be able to combine different client side aggregation functions with unmatched server side functions?  Would you want to take a client side minimum of the per-region maximum values returned from the row range?  As far as I can see, you would mostly want a single client function paired with a given server-side method.&lt;/p&gt;

&lt;p&gt;I do see that the &quot;raw&quot; HTable.coprocessorExec() interface is a bit clumsy for these types of operations.  You really want to be able to return a single value, not a value per region.  But I think you can create some client helper methods to hide that complexity.&lt;/p&gt;

&lt;p&gt;For the current client classes ProcessResultsFromCP seems to have a lot of overlap with Batch.Callback.  The main difference being that HTable.processResultsFromCP() allows you to pass a list of instances (as opposed to a single Batch.Callback).  If using a single Callback instance is limiting, we could allow use of a list of Callbacks, or provide a Batch.callbackList() factory method that allows chaining multiple instances together.  But for the common cases here, it seems like you&apos;ll want a single client side function (min, max, etc) paired with a single server-side invocation (min, max, etc.), so the current Batch.Callback would probably suffice.&lt;/p&gt;

&lt;p&gt;So as an example on the client side, you could provide a client wrapper in the form:&lt;/p&gt;

&lt;p&gt;{{{&lt;br/&gt;
public class Aggregations {&lt;br/&gt;
    private static class ClientSum implements Batch.Callback&amp;lt;Long&amp;gt; {&lt;br/&gt;
        private long sum;&lt;br/&gt;
        public void update(byte[] region, byte[] row, Long value) &lt;/p&gt;
{
            sum += value;
        }
&lt;p&gt;        public long getValue() &lt;/p&gt;
{ return sum; }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    public static long sum(HTable table, byte[] start, byte[] end, byte[] family, byte[] col) {&lt;br/&gt;
        ClientSum sum = new ClientSum();&lt;br/&gt;
        table.coprocessorExec(AggFunctionProtocol.class, start, end, &lt;br/&gt;
            new Batch.Call&amp;lt;AggFunctionProtocol,Long&amp;gt;() {&lt;br/&gt;
                public Long call(AggFunctionProtocol instance) &lt;/p&gt;
{
                    return instance.sum(family, col);
                }
&lt;p&gt;            }, sum);&lt;br/&gt;
        return sum.getValue();&lt;br/&gt;
    }&lt;br/&gt;
}}}&lt;/p&gt;

&lt;p&gt;And so on for the other types of operations...  Then clients can just call Aggregations.sum() with the right args.&lt;/p&gt;

&lt;p&gt;There may be better ways to do it, this is just an illustration. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;And, please, if you see ways that HTable.coprocessorExec() can be improved to make this easier, comment on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;!&lt;/p&gt;

</comment>
                            <comment id="12964645" author="v.himanshu" created="Mon, 29 Nov 2010 07:47:59 +0000"  >&lt;p&gt;a patch for initial agg functions. It has the functionalities for max, min, sum, avg, rowcount, std. Please suggest further improvements.&lt;/p&gt;

&lt;p&gt;I am looking for Top K &amp;amp; group by like queries.  Gary suggested a scanner &apos;like&apos; functionality for Coprocessor for such queries to reduce ipc, which seems very relevant.&lt;br/&gt;
There are few question here: Is it like the proposed scanner should run on a precomputed resultset and its purpose is just to keep ipc in control by sending a fixed number of rows (cache limit set by client) &lt;br/&gt;
OR &lt;br/&gt;
it should process a fixed number of raw rows from the table (in the default access order) and send its result on the fly (processing means executing the coprocessor code)&lt;br/&gt;
The current scanner functionality that a client uses (RegionScanner) registers itself at the region server level and keep its state there. Calling next() from the client (HTable) results invoking next() on the registered scanner. So, it uses the second option as it is navigating in the table as such. &lt;/p&gt;

&lt;p&gt;There are some common links between coprocessors and current scanner implementations like: with coprocessor, one can intercept the result after every call to next (preScannerNext postScannerNext) and a coprocessor impl can massage the data accordingly. But this is not the purpose of ROs, as it will break th abstraction of RO&apos;s like they will be invoked in every client call in that case (inputs from Gary on irc today: just mentioning here for reference). &lt;/p&gt;

&lt;p&gt;Still the above Q holds good: whether cp-scanner should navigate through a computed result set or through raw table rows &amp;amp; invoke the CP impl (essentially an EndPoint impl) there by. &lt;br/&gt;
It can be use case specific. It needs more thought.&lt;/p&gt;</comment>
                            <comment id="13006385" author="coofucoo" created="Mon, 14 Mar 2011 11:36:22 +0000"  >&lt;p&gt;Hi guys, Could you tell me when do you plan to add this feature in Hbase? I think it is a very good feature. We need it very much. Thank you. &lt;/p&gt;</comment>
                            <comment id="13006777" author="lianhuiwang" created="Tue, 15 Mar 2011 03:06:58 +0000"  >&lt;p&gt;Great,this feature can resolve the real-time aggregate functions? now we use the redis to do the real-time aggregate in the memory,but when data increased,the memory cannot load the data.so we meet the bottleneck. i think this feature can give us some hope, or others have any suggestions? thank you.&lt;/p&gt;</comment>
                            <comment id="13006793" author="stack" created="Tue, 15 Mar 2011 04:52:26 +0000"  >&lt;p&gt;FYI, lines should be 80 characters or less.&lt;/p&gt;

&lt;p&gt;What you want here Himanshu?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// sleep here is an ugly hack to allow region transitions to finish
&lt;/span&gt;+    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(5000);
+    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (JVMClusterUtil.RegionServerThread t : cluster.getRegionServerThreads()) {
+      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (HRegionInfo r : t.getRegionServer().getOnlineRegions()) {
+        t.getRegionServer().getOnlineRegion(r.getRegionName()).
+          getCoprocessorHost().
+          load(AggregateProtocolImpl.class, &lt;span class=&quot;code-comment&quot;&gt;//TestAggFunctions.AggFunctionsCT.class,
&lt;/span&gt;+              Coprocessor.Priority.USER);
+        
+      }
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think there is probably better means of waiting on HRS startup than a timer (FYI, a delay will always fail up on the Apache build server &amp;#8211; it has a special knack for doing the unexpected).&lt;/p&gt;

&lt;p&gt;Our convention is spaces around operators.  Not...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i=0;i&amp;lt;n;i++) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... but&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; n; i++) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See the rest of the code base for examples.  These are not biggies.  I&apos;m just pointing them out.&lt;/p&gt;

&lt;p&gt;This CP is very cool.&lt;/p&gt;

&lt;p&gt;Would suggest you add more examples to your test. You just test one instance of each aggregate.  Shove in some edge cases if you can think of them (Debugging a unit tests is a million times better than trying to debug it out on live cluster).&lt;/p&gt;

&lt;p&gt;Do you think you should be a big more defensive here when scanning?  You assume a long:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        temp = Bytes.toLong(val.getValue());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Do you think you should check the cell length?  If &amp;gt; or &amp;lt; long length, then something is off and WARN?&lt;/p&gt;

&lt;p&gt;This log message is going to drive folks crazy:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        log.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;val read in the region is: &quot;&lt;/span&gt;+temp);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In any region of any decent size, there&apos;ll almost be a log line per cell?&lt;/p&gt;

&lt;p&gt;The below should be inside a finally:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      scanner.close();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just throw I&apos;d say, don&apos;t bother logging:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      log.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Some error occurred. Aborting the computation&quot;&lt;/span&gt;+ ie.getMessage());
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Aborting the Max aggregate computation&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Be careful w/ your formatting:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    }&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(done);
+    scanner.close();
+    }&lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ie){ 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Try to be consistent.&lt;/p&gt;

&lt;p&gt;Here is another example:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   /**
+    * For a given column family and column Qualifier &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a table, it gives its sum of all its values at the region level.
+    */
+  
+  @Override
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Why a Long object instead of just a long primitive type?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt; sum = 0l;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is messy here formatting-wise:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      KeyValue val = results.get(0);
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(val != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) counter++; &lt;span class=&quot;code-comment&quot;&gt;// TODO: Or shall it only caters to the row, and ignore whether a specific column is &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; or not. 
&lt;/span&gt;+                                    &lt;span class=&quot;code-comment&quot;&gt;// Or is it like a val can&apos;t be &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;. Need to look in to all possible values of keyval!
&lt;/span&gt;+    }&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(done);
+    }&lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt;{
+      scanner.close();  
+    }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Do you think we&apos;ll always be acting on a column only?  What if someone wants to act on a whole column family; i.e. no qualifier?&lt;/p&gt;


&lt;p&gt;Be careful w/ your white space.  For instance in the interface you have this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  List&amp;lt;LongWritable&amp;gt; getAvg(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] colFamily, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] colQualifier) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
+  List&amp;lt;LongWritable&amp;gt; getStd(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] colFamily, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] colQualifier) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
+  
+  
+ 
+}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Clear those empty lines.&lt;/p&gt;

&lt;p&gt;You should put the javadoc in the Interface on the Interface methods, rather than out in the implementations.  Thats how its usually done.  The implementations inherit the interface javadoc.&lt;/p&gt;

&lt;p&gt;Fill out the javadoc in your client, in particular description of the return in each case.&lt;/p&gt;

&lt;p&gt;So is stuff being averaged, and summed in the client?  Hows that done?&lt;/p&gt;

&lt;p&gt;Patch looks cool.&lt;/p&gt;</comment>
                            <comment id="13011750" author="v.himanshu" created="Sun, 27 Mar 2011 07:33:16 +0000"  >&lt;p&gt;Stack: Thanks for the review. &lt;/p&gt;

&lt;p&gt;I have revamped the patch and also incorporated your suggestions. There were bunch of discrepancies regarding the boundary conditions you mentioned in the previous version, where at the region level there was no knowledge of the exact start/stop rows as given by the user. To achieve this, I modified the agg functions signatures to include start/stop rows at the region level.&lt;/p&gt;

&lt;p&gt;Following are some key aspects for this version:&lt;br/&gt;
a) startEow &amp;lt; endRow is an essential condition now (other than when one is doing a full table scan, where startRow and endRow both are empty byte array). This helps in handling boundary conditions where the start row provided by the user is start row of a region (the default scanner impl returns null because it is a non-get query). Moreover, it is also aligned with the logic of these functions, where one is finding max, min, row count etc.&lt;/p&gt;

&lt;p&gt;b) For all computations like avg, sum, max etc, it is assumed the cell value is a long value (8 bytes); if this is not the case, that cell value is skipped from the computation&lt;/p&gt;

&lt;p&gt;c) For all functions, column family is essential (if it is null, an ioe is returned). &lt;br/&gt;
For max, min, avg, sum,std, when no column qualifier is provided, I aggregate all the values in that family. So, a sum for such a case is group sum of all CQ&apos;s values for one row key. I think it is a right approach. Please advice here.&lt;/p&gt;

&lt;p&gt;d) Now in case of rowcount, one can use FirstKeyValueFilter for optimisation. But it may give wrong result in case user has also provided a column qualifier. In such a case, the first value returned by the scanner might belong to other qualifier, but the FirstKeyValueFilter will set its flag to skip to next row, but that value is filtered out from the result set. Its overall effect is that row is not counted and scanner moves to the next row. I used this only when there is no column qualifier. ( I confirmed this during my testing, but will be good to have some comments here).&lt;/p&gt;

&lt;p&gt;d) As suggested, I have added bunch of boundary test cases for each of the six agg functions. Please let me know in case some more are to be added.&lt;/p&gt;

&lt;p&gt;e) Yes, its the client (here AggregationtClient), that will perform the &quot;reduce phase&quot;, where individual results from all the target regions are received and accumulated.&lt;/p&gt;
</comment>
                            <comment id="13011751" author="v.himanshu" created="Sun, 27 Mar 2011 07:34:22 +0000"  >&lt;p&gt;revised patch&lt;/p&gt;</comment>
                            <comment id="13013745" author="yuzhihong@gmail.com" created="Wed, 30 Mar 2011 23:55:55 +0000"  >&lt;p&gt;This feature is very useful.&lt;br/&gt;
Is it possible to pass some class to AggregateProtocolImpl which can interpret the type of value based on colFamily:colQualifier ?&lt;/p&gt;

&lt;p&gt;I tried adding type parameter (for type of value) to AggregateCpProtocol but encountered various compilation errors.&lt;/p&gt;</comment>
                            <comment id="13013820" author="yuzhihong@gmail.com" created="Thu, 31 Mar 2011 04:15:43 +0000"  >&lt;p&gt;I think AggregationClient should have a ctor which accepts Configuration and saves it.&lt;br/&gt;
Then Configuration can be used to point to a table in remote cluster:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    HTable table = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTable(conf, tableName);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13013826" author="v.himanshu" created="Thu, 31 Mar 2011 04:35:35 +0000"  >&lt;p&gt;Thanks for reviewing it Ted.&lt;/p&gt;

&lt;p&gt;I will add the constructor. &lt;/p&gt;

&lt;p&gt;yes, I was thinking about this dependency of having a long variable for all these methods. But flexibility of using any data type (by converting it to byte array) for even a specific column family: column qualifier makes it a bit tricky to go for a data type argument. I can have varying number of data types even for one CF:CQ combination. Rather I was considering the option to have one additional check for int type (4 bytes). But that is just me, will be great what others say on it.&lt;/p&gt;

&lt;p&gt;For adding the type parameter to the AggregateCpProtocol methods, there will be dependency with AggregationClient. Did you try adding it there too (apart from its impl).&lt;/p&gt;</comment>
                            <comment id="13013830" author="yuzhihong@gmail.com" created="Thu, 31 Mar 2011 04:55:56 +0000"  >&lt;p&gt;A 4 byte value can represent float. 8 byte value can represent double.&lt;/p&gt;

&lt;p&gt;As for the return type, Long, I tried to make AggregateCpProtocol generic but wasn&apos;t successful.&lt;br/&gt;
e.g. AggregateCpProtocol&amp;lt;Long&amp;gt;.class wouldn&apos;t compile. Since AggregateCpProtocol is interface, I cannot instantiate and obtain class afterward.&lt;/p&gt;</comment>
                            <comment id="13013831" author="yuzhihong@gmail.com" created="Thu, 31 Mar 2011 04:57:20 +0000"  >&lt;p&gt;AggregationClient with ctor accepting Configuration.&lt;/p&gt;</comment>
                            <comment id="13014087" author="yuzhihong@gmail.com" created="Thu, 31 Mar 2011 17:32:24 +0000"  >&lt;p&gt;Reattaching.&lt;br/&gt;
My attempt is to allow client to pass column interpreter to region server.&lt;br/&gt;
Still more work to be done to make the return type of column interpreter generic.&lt;br/&gt;
Also, column interpreter doesn&apos;t have access to table name currently. This may be minor issue because user can enforce uniform naming convention to map column name to actual type.&lt;br/&gt;
TestAggFunctions passes.&lt;/p&gt;</comment>
                            <comment id="13014091" author="yuzhihong@gmail.com" created="Thu, 31 Mar 2011 17:33:46 +0000"  >&lt;p&gt;Pardon me for attaching source files directly. svn diff doesn&apos;t recognize the changes I made on top of patch-1512-2.txt&lt;/p&gt;</comment>
                            <comment id="13014093" author="yuzhihong@gmail.com" created="Thu, 31 Mar 2011 17:44:52 +0000"  >&lt;p&gt;Table name can be embedded in LongColumnInterpreter.&lt;br/&gt;
This version of LongColumnInterpreter is simpler.&lt;/p&gt;</comment>
                            <comment id="13014563" author="yuzhihong@gmail.com" created="Fri, 1 Apr 2011 13:56:39 +0000"  >&lt;p&gt;Attaching generic implementation.&lt;/p&gt;</comment>
                            <comment id="13014564" author="yuzhihong@gmail.com" created="Fri, 1 Apr 2011 13:57:09 +0000"  >&lt;p&gt;See my thoughts on &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13014733" author="yuzhihong@gmail.com" created="Fri, 1 Apr 2011 16:46:57 +0000"  >&lt;p&gt;In AggregateProtocolImpl, I think the boolean done should be renamed. It actually indicates whether more rows exist after the current one.&lt;br/&gt;
The following loop condition may confuse someone:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      } &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (done);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13014908" author="v.himanshu" created="Sat, 2 Apr 2011 01:11:31 +0000"  >&lt;p&gt;Thanks for the suggestions Ted.&lt;/p&gt;

&lt;p&gt;a) Added generics functionality to the AggregationClient. As suggested by Ted, there should be a ColumnInterpreter thing to give the client a chance to describe the cell value type. I made this thing generic, in the sense that now client is supposed to give the column interpreter object along with the agg function calls. AggregationClient has such a implementation where client says that its cell value is a long. Other cell values can be used with a similar approach.&lt;/p&gt;

&lt;p&gt;b) While client can define the cell value type by implementing ColumnInterpreter,I still think the average and Standard deviation will be a double value. So, I added a wrapper on these methods to support the generic functionality. Please refer to AggreagationClient.getStdParams &amp;amp; getAvgParams. Let me know if it is &quot;un-intuitive&quot;. I think it is right though &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;c) Added a filter to each of the agg functions. They are just passed along with the call, and are stuffed in the Scan object at the region level during scanning. In case of row count, if client provides a filter, that one will be used. If neither a filter nor a qualifier is provided, FirstKeyValueFilter is used.&lt;/p&gt;

&lt;p&gt;d) Added more test cases for testing filter use cases (44 in total &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;). &lt;/p&gt;

&lt;p&gt;e) refactored the &quot;done&quot; variable as suggested by Ted.&lt;/p&gt;</comment>
                            <comment id="13014942" author="yuzhihong@gmail.com" created="Sat, 2 Apr 2011 03:38:16 +0000"  >&lt;p&gt;For LongColumnInterpreter.divide(), if l2 is null, I think we should return Double.NaN&lt;br/&gt;
I would write:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (l2 == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;.NaN;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (l1 == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 0;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think the following method can be named getAvgArgs (argument in place of parameter):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &amp;lt;R&amp;gt; List&amp;lt;R&amp;gt; getAvgParams(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] tableName,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But I don&apos;t have strong opinion here.&lt;/p&gt;

&lt;p&gt;getAvgParamsAsArray() of AvgCallBack can be named getAvgParams() because its return type is List&amp;lt;&amp;gt;.&lt;/p&gt;

&lt;p&gt;Overall, version 3 is great.&lt;/p&gt;</comment>
                            <comment id="13014947" author="yuzhihong@gmail.com" created="Sat, 2 Apr 2011 03:59:11 +0000"  >&lt;p&gt;Also, I think it is time to move LongColumnInterpreter out into its own file under src/main/java/org/apache/hadoop/hbase/client/coprocessor/.&lt;/p&gt;</comment>
                            <comment id="13016496" author="v.himanshu" created="Wed, 6 Apr 2011 19:53:41 +0000"  >&lt;p&gt;Thanks for review Ted. &lt;/p&gt;

&lt;p&gt;What I think in the divide method is returning Double.NaN if either of operand is null. Any operation on null should give null.&lt;/p&gt;

&lt;p&gt;Ok for the name refactoring.&lt;/p&gt;

&lt;p&gt;I don&apos;t have any strong feeling for making a separate class out if it at this point of time, as it doesn&apos;t add much on its own. But will do it if you say so.&lt;/p&gt;</comment>
                            <comment id="13016519" author="yuzhihong@gmail.com" created="Wed, 6 Apr 2011 20:38:49 +0000"  >&lt;p&gt;I think returning Double.NaN is fine. Normally either of operand being null would lead to NPE.&lt;br/&gt;
For making a separate class, it would be easier for users to produce other ColumnInterpreter classes based on LongColumnInterpreter.&lt;/p&gt;</comment>
                            <comment id="13016585" author="yuzhihong@gmail.com" created="Wed, 6 Apr 2011 22:31:08 +0000"  >&lt;p&gt;Version 4 is awesome.&lt;/p&gt;</comment>
                            <comment id="13018677" author="jiraposter@reviews.apache.org" created="Tue, 12 Apr 2011 02:29:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;br/&gt;
ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;br/&gt;
Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ted&lt;/p&gt;
</comment>
                            <comment id="13018686" author="jiraposter@reviews.apache.org" created="Tue, 12 Apr 2011 03:29:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review429&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review429&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment817&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment817&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    While working on a different jira, I saw that I am using wrong (old) key for registering the CP. It was working because in the code that follows this, Agg CP is loaded explicitly (line #102-106).&lt;br/&gt;
    One can update this either using the Region CP specific key: CoprocessorHost.REGION_COPROCESSOR_CONF_KEY, and remove the explicit loading below (and remove the explicit loading code below), OR entirely delete this statement. &lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-12 02:28:10, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-12 02:28:10)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13018703" author="jiraposter@reviews.apache.org" created="Tue, 12 Apr 2011 04:29:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-04-12 04:28:32.453024)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Switched to CoprocessorHost.REGION_COPROCESSOR_CONF_KEY and removed the manual loading of CPs.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;br/&gt;
ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;br/&gt;
Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ted&lt;/p&gt;
</comment>
                            <comment id="13018709" author="jiraposter@reviews.apache.org" created="Tue, 12 Apr 2011 04:43:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-04-12 04:41:49.068986)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Switched to CoprocessorHost.REGION_COPROCESSOR_CONF_KEY and removed the manual loading of CPs.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;br/&gt;
ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;br/&gt;
Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ted&lt;/p&gt;
</comment>
                            <comment id="13019209" author="jiraposter@reviews.apache.org" created="Wed, 13 Apr 2011 05:13:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review436&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review436&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I read half the patch.  Will finish in morning.  Comments below.  This utility looks really great.  Hurry up and finish it!&lt;/p&gt;


&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment828&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment828&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Its 2011!&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment829&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment829&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    There is xtra white space here and elsewhere in this block.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment830&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment830&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    should be &apos;handler&apos;&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment831&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment831&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do you want to make this actual javadoc link; e.g. &lt;/p&gt;
{@link Aggr....}
&lt;p&gt;  Is AggrationClient misspelled?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment832&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment832&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is this comment still right?  Says 8 byte long (Ted&apos;s blog seems to indicate this is not longer the case)&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment833&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment833&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Nice javadoc.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment834&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment834&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why this constructor?  We&apos;ll have a null conf?  Will that be dangerous later?  NPEs?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment835&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment835&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    White space&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment836&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment836&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Looks like this comment is no longer true?  The method has been genericized?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment837&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment837&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should you reuse the passed configuration else you are making a new COnnection per invocation.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment838&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment838&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats this?  The return?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment839&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment839&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Reuse passed conf?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment840&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment840&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats this?  Xtra white space.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment841&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment841&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Reuse conf creating HTable.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment842&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment842&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats this?  This prob. is in all subsequent methods... the xtra white space too.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment843&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment843&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This needs to be passed the conf.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment844&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment844&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    2011&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-12 04:41:49, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-12 04:41:49)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13019227" author="jiraposter@reviews.apache.org" created="Wed, 13 Apr 2011 06:24:06 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review438&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review438&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment855&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment855&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ill effects of copy-paste. will change.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment854&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment854&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Removed it.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment852&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment852&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I use Eclipse formatter (which says it is using Apache&apos;s standard, and it is inserting these spaces. I tried to edit the setting to make it work, but couldn&apos;t find the way for these extra spaces between doc and arg list. I removed them manually, but want to know the standard approach.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment853&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment853&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes, will do it. Thanks.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-12 04:41:49, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-12 04:41:49)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13019228" author="v.himanshu" created="Wed, 13 Apr 2011 06:32:04 +0000"  >&lt;p&gt;Stack reviewed it half on rb (&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;). Incorporated his suggestions and uploading the new patch here, as rb request is initiated by Ted (and I don&apos;t think I can upload this under the same rb request). &lt;br/&gt;
Ted, please post this version on rb for further reviews. &lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13019248" author="jiraposter@reviews.apache.org" created="Wed, 13 Apr 2011 08:36:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review440&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review440&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment863&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment863&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is the type parameter for return value.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-12 04:41:49, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-12 04:41:49)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13019250" author="jiraposter@reviews.apache.org" created="Wed, 13 Apr 2011 08:38:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-04-13 08:37:14.182698)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Himanshu updated the patch according to Stack&apos;s suggestions.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;br/&gt;
ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;br/&gt;
Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ted&lt;/p&gt;
</comment>
                            <comment id="13020187" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 04:53:05 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-13 08:35:42, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 143&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/3/?file=15640#file15640line143&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/3/?file=15640#file15640line143&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is the type parameter for return value.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review440&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review440&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020188" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 04:53:06 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-13 06:23:56, himanshu vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 81&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/3/?file=15640#file15640line81&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/3/?file=15640#file15640line81&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I use Eclipse formatter (which says it is using Apache&apos;s standard, and it is inserting these spaces. I tried to edit the setting to make it work, but couldn&apos;t find the way for these extra spaces between doc and arg list. I removed them manually, but want to know the standard approach.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;None of this kinda of white space is tolerated (well, I&apos;m not too bad about it but others are watching the codebase and will complain loudly if they see these)&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review438&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review438&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020190" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 04:57:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review466&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review466&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;This is review of diff between v3 and v4.&lt;/p&gt;


&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment894&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment894&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment895&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment895&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yeah, method doesn&apos;t take a &amp;lt;T&amp;gt;, it returns it&lt;/p&gt;



&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment896&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment896&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is good.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020198" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 05:45:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review467&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review467&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Here is more.  Submitting now in case I lose it.&lt;/p&gt;


&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment897&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment897&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You have double the class comment here.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment898&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment898&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Use Bytes.SIZEOF_LONG instead of &apos;8&apos;&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment899&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment899&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You could autobox and just return Bytes.toLong... I tihnk that&apos;ll work (not important).  If you are going to use Long, you might use Long.value of because JVM can cache often used Long instances: &lt;a href=&quot;http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Long.html#valueOf(long&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Long.html#valueOf(long&lt;/a&gt;)&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment900&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment900&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is there one instance of this class per thread?  Will it be accessed concurrently?  Should the base Long be an AtomicLong?  Or we need to synchronize updates on the KV?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment901&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment901&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I&apos;d name this multiply rather than &apos;mult&apos;&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment902&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment902&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You don&apos;t need to call through to the super for it to serialize the Writable?  And again for the write?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment903&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment903&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Say &apos;Defines&apos; rather than &apos;It defines&apos;&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment904&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment904&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment905&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment905&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Again here say &apos;Gives&apos; rather than &apos;It gives..&apos;&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment906&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment906&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good doc.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment907&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment907&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats a region level?  Try and have your max doc similar to your min doc with min/max the only diff.  Makes it easier on the reader.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment909&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment909&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why capital &apos;Q&apos; on qualifier?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment910&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment910&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Return is &amp;lt;T&amp;gt;?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment908&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment908&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why this empty line?&lt;/p&gt;



&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020202" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 06:11:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review469&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review469&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment914&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment914&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    sure&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment913&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment913&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    As per the current usage, it is one instance per thread. This method is called from the concrete coprocessor implementation deployed at region level. Though this instance is a singleton, but its a stateless, hence threadsafe. &lt;br/&gt;
    I can change it to AtomicLong if you say so.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment919&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment919&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    As this class implements Writable, it is handled by HBaseObjectWritable such that it writes its full class name onto the stream (and goes while reading it at server side). Since this is a stateless, I don&apos;t have anything to read write as such. &lt;br/&gt;
    No need to call super.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment922&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment922&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Ok. Will do all the formatting changes.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020203" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 06:15:05 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 06:10:48, himanshu vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java, line 66&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15695#file15695line66&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15695#file15695line66&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     As per the current usage, it is one instance per thread. This method is called from the concrete coprocessor implementation deployed at region level. Though this instance is a singleton, but its a stateless, hence threadsafe. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I can change it to AtomicLong if you say so.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;just to clarify, I meant the CP instance is a singleton (pardon my not so good English).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review469&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review469&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020209" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 06:45:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review468&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review468&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;A few comments in the below. See what you think.  This is close to commit I&apos;d say.&lt;/p&gt;


&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment916&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment916&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I&apos;d say change the name of this class to AggregateProtocol.  Leave off the &quot;Cp&apos; since its in the package name already.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment911&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment911&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &apos;Gives&apos; rather than &apos;It gives&apos;.  Are you repeating yourself i the javadoc here?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment912&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment912&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment917&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment917&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Call this class AggregateImplementation?  It&apos;ll implement AggregateProtocol.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment918&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment918&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Class comment explaining what this class does?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment923&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment923&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why this?  When we just made an empty one?  And whats the &apos;//&apos; on end of the line.&lt;/p&gt;

&lt;p&gt;    Oh, you did this each time through loop.... so you only work on one return at a time.... &lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment924&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment924&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    FYI there is an &apos;equals&apos; in Bytes so you don&apos;t have to do compareTo...0&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment929&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment929&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    hash code is what?  Can you print out encodedName? Thats better for identifying regions.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment930&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment930&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Its nice that this all genericized.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment939&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment939&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This three part test is used in all methods?  Might be big enough to move out  to a method (Not important)&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment940&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment940&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Missing period.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment941&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment941&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Missing period.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment942&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment942&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Should you say ColumnInterpreter for AggregateProtocol?&lt;/p&gt;



&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment943&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment943&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You should call it TestAggregateProtocol or TestAggregateCoprocessor... it should be name of class under test with a Test prefix.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020219" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 07:20:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review470&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review470&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Looks like this is coming along nicely.  Some overall comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;A fair amount of naming should be cleaned up.  For the client facing methods in AggregationClient, I would go for the simplest names:  max() instead of getMaximum(), min() instead of getMinimum(), etc.  But that is a matter of personal preference.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Think about providing simpler overloaded versions of the methods.  Seven parameters is a lot if you don&apos;t always care about all of them.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Look more closely at the parameterization of some of the methods.  I&apos;m not sure it&apos;s sufficient for getSum(), getAvg(), getStd(), where the return types may differ from the actual column value types.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment920&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment920&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Don&apos;t abbreviate in the javadoc comments.  This is part of the end user documentation so you need to spell it all out:&lt;/p&gt;

&lt;p&gt;    agg -&amp;gt; aggregation&lt;br/&gt;
    RS -&amp;gt; region server&lt;br/&gt;
    cp impls -&amp;gt; name the actual coprocessor&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment921&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment921&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    agg -&amp;gt; aggregation&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment925&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment925&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove trailing whitespace&lt;/p&gt;




&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment931&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment931&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Overload this with some briefer versions?  This is a real mouthful if you don&apos;t actually need all 7 parameters.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment932&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment932&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Again add some overloaded simpler versions of this.  Do you always need a filter?  What about column qualifier?  Maybe in most cases you do, just seeing if simplify usage in some cases.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment927&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment927&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    What is a row num?  Is this the number of rows?  How about using &quot;row count&quot; instead?  It&apos;s more consistent with other HBase tools.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment928&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment928&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    name getRowCount() instead?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment934&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment934&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Remove trailing whitespace&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment935&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment935&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Maybe a bit more description of the actual usage here.  The client needs to pass an instance of this in AggregationClient methods right?  Javadoc should make clear it&apos;s purpose and how to use it.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment936&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment936&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Drop the &quot;Cp&quot; from the name, it&apos;s extraneous.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment937&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment937&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is it correct that sum should always return the same type as the individual values?  If the values are Integers, you would want to return Long, right?  Otherwise you risk overflowing the max value.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment938&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment938&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Is the type correlation correct here as well?  Individual values may be Integers, but you may want a double for the average.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment944&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment944&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Same as with getAvg(), wouldn&apos;t you want this to possibly return a different type than the individual column values?  Like return a double even if the column values are ints?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment945&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment945&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I don&apos;t think you need the word &quot;Protocol&quot; in here.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment946&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment946&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Can you just set start and end rows on the scanner instead of checking each row?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment948&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment948&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If there are no results from the scanner would this return the value from ci.getMinValue()?  Shouldn&apos;t it return null instead?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment947&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment947&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    If there are no results from the scanner would this return the value from ci.getMaxValue()?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment949&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment949&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Does this need to be parameterized?  Would we ever want the returned row count to not be a Long?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment950&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment950&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Returning a two entry list here is a bit unclear.  Why not make it a Pair&amp;lt;Long,Long&amp;gt; or a specifically typed object?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment951&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment951&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Again, I would prefer a more clearly typed simple object here instead of a list with encoded meanings based on index.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020276" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 11:50:06 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review474&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review474&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment958&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment958&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think returning ci.getMinValue() is fine because AggregationClient would further consolidate partial results.&lt;br/&gt;
    If change is really needed, it should be made in AggregationClient.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020315" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 14:52:05 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 11:50:08, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java, line 73&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15697#file15697line73&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15697#file15697line73&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think returning ci.getMinValue() is fine because AggregationClient would further consolidate partial results.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     If change is really needed, it should be made in AggregationClient.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t agree.  This leaves no way to distinguish between a valid result of Long.MIN_VALUE and &lt;em&gt;no&lt;/em&gt; result.  What happens for an empty table?  I think returning Long.MIN_VALUE (or whatever might be the case) for an empty table is broken.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review474&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review474&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020377" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 18:02:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review476&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review476&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment960&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment960&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    w.r.t. Gary&apos;s comment, we need another boolean flag in MaxCallBack so that we can distinguish whether MaxCallBack.update() has been called.&lt;br/&gt;
    Currently ci.getMinValue() would be returned if there is no qualifying row (possibly due to the effect of Filter).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020381" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 18:12:05 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 18:02:26, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 98&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line98&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line98&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     w.r.t. Gary&apos;s comment, we need another boolean flag in MaxCallBack so that we can distinguish whether MaxCallBack.update() has been called.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Currently ci.getMinValue() would be returned if there is no qualifying row (possibly due to the effect of Filter).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;MaxCallBack.update() will still be called once per region, even if no rows matched.  It will just return the initial value that was set.  This is why I think the initial value should be null.  So when update() is called with null, it can be handled appropriately.&lt;/p&gt;

&lt;p&gt;In the same vein, I think &quot;max&quot; in MaxCallBack should initialize to null as well.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review476&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review476&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020384" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 18:20:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review478&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment962&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment962&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    The following code would produce NPE:&lt;br/&gt;
    	  Long l = null;&lt;br/&gt;
    	  if (l &amp;lt; Long.MIN_VALUE) {&lt;/p&gt;



&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020385" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 18:22:06 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 18:18:57, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 98&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line98&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line98&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     The following code would produce NPE:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     	  Long l = null;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     	  if (l &amp;lt; Long.MIN_VALUE) {&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, all this code needs to handle nulls.  I think that goes without saying.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review478&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review478&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020395" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 18:50:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review481&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review481&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment965&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment965&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Of these, I think only two are optional. colQualifier &amp;amp; filer. OK?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment966&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment966&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Agreed it should be initialized null to handle null resultset.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment967&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment967&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    same as the max one above. Yes, in case of a null qualifier, it computes the value for the overall family &lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment968&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment968&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ok&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment969&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment969&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ok&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment970&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment970&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes, more description should be added.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment971&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment971&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    hmm. the return type can be different. I will make it more generic to have a different return type.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment972&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment972&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I thought about it. I return a list but I see its not a right one to pass as one element contains the sum and other contains the rowCount. So, it should be like a Pair as you said. I will look into it.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment973&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment973&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    its in the Interface? Shall it be repeated here too?&lt;br/&gt;
    Ok, will do the name refactoring.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment974&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment974&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ok, will use the equals method.&lt;br/&gt;
    I thought since it is an internal scanner (local to a region), it should not cross out the boundaries while setting start-end rows. Will check it (should also improve performance).&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment975&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment975&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    right. a null is more pertinent here. will do it.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment976&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment976&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    yes, the current one does return min value. But as you said, it will return null now.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment977&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment977&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I thought about it and then just left it as its only three line of code and a separate call will be kind of over-refactoring. But once I set the start-end row as suggested by Gary, it should become more light.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment978&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment978&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    yes indeed. It occurred to me while I saw Stack&apos;s review last night and here you are &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I will do it.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment979&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment979&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ok. And what if I need to send more than 2 parameters as in case of Standard deviation?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment980&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment980&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    you mean a pojo with these many attributes. Is there exists such an object that i can reuse (should be rpc compatible--&amp;gt; like implementing writable).&lt;/p&gt;



&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment981&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment981&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    So yes, will do all the name/space/grammar refactorings as suggested. &lt;/p&gt;

&lt;p&gt;    Thanks a lot to all of you folks for this wonderful review.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020399" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 19:08:06 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review483&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review483&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment984&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment984&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think the startKey and endKey can be optional as well.&lt;br/&gt;
    Basically that means scanning the whole region.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020402" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 19:12:07 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 19:06:58, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the startKey and endKey can be optional as well.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Basically that means scanning the whole region.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;These start-end keys are used to locate the interested regions. Do you mean whole &lt;em&gt;table&lt;/em&gt;? If so, it will be like setting HConstants.START_ROW/STOP_ROW which are essentially empty byte arrays.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review483&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review483&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020403" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 19:18:05 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 19:06:58, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the startKey and endKey can be optional as well.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Basically that means scanning the whole region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;himanshu vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;These start-end keys are used to locate the interested regions. Do you mean whole &lt;em&gt;table&lt;/em&gt;? If so, it will be like setting HConstants.START_ROW/STOP_ROW which are essentially empty byte arrays.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This would be a bigger change, but maybe it would make sense to have the client pass a Scan object?  Then you could specify start/end row, time range, multiple column qualifiers, filter?&lt;/p&gt;

&lt;p&gt;It&apos;s starting to look like we&apos;re duplicating most of these arguments when there&apos;s already a good way of passing them.  What do you think?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review483&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review483&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020405" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 19:28:06 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 19:06:58, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the startKey and endKey can be optional as well.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Basically that means scanning the whole region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;himanshu vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;These start-end keys are used to locate the interested regions. Do you mean whole &lt;em&gt;table&lt;/em&gt;? If so, it will be like setting HConstants.START_ROW/STOP_ROW which are essentially empty byte arrays.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This would be a bigger change, but maybe it would make sense to have the client pass a Scan object?  Then you could specify start/end row, time range, multiple column qualifiers, filter?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It&apos;s starting to look like we&apos;re duplicating most of these arguments when there&apos;s already a good way of passing them.  What do you think?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, am wondering why it didn&apos;t occur to me before! As a matter of fact, we are creating a Scan object at region level. So, with passing the Scan object to the Aggregation client, it will call the appropriate HTable method (the existing one), but the CP&apos;s method will take the Scan object as a parameter, and let the client have its liberty. But it needs some code changes, like in validation stuff for one. &lt;br/&gt;
(I was thinking that it was good to go and now there is so much room for improvement. Good stuff).&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review483&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review483&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020414" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 20:10:06 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 19:06:58, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the startKey and endKey can be optional as well.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Basically that means scanning the whole region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;himanshu vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;These start-end keys are used to locate the interested regions. Do you mean whole &lt;em&gt;table&lt;/em&gt;? If so, it will be like setting HConstants.START_ROW/STOP_ROW which are essentially empty byte arrays.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This would be a bigger change, but maybe it would make sense to have the client pass a Scan object?  Then you could specify start/end row, time range, multiple column qualifiers, filter?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It&apos;s starting to look like we&apos;re duplicating most of these arguments when there&apos;s already a good way of passing them.  What do you think?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;himanshu vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yes, am wondering why it didn&apos;t occur to me before! As a matter of fact, we are creating a Scan object at region level. So, with passing the Scan object to the Aggregation client, it will call the appropriate HTable method (the existing one), but the CP&apos;s method will take the Scan object as a parameter, and let the client have its liberty. But it needs some code changes, like in validation stuff for one. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(I was thinking that it was good to go and now there is so much room for improvement. Good stuff).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In continuation of what I earlier said, in the current design we assume that client is interested in one family only. Shall this needs to be change too. &lt;br/&gt;
I am refactoring these methods to let the client pass a Scan object to the AggregationClient class, but a scan object as such can have multi families in it. Shall we need to change this assumption. I don&apos;t see any issue with it as such, but this is something I didn&apos;t plan originally and it needs change in test cases. Please comment.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review483&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review483&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020418" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 20:22:06 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review488&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review488&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment989&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment989&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is the first code review that evolves into a design session in my career - exciting.&lt;br/&gt;
    I think we should relax the initial assumption.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020426" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 20:42:06 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 20:21:01, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is the first code review that evolves into a design session in my career - exciting.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think we should relax the initial assumption.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I still think that I would go with one family, as the families are quite separate entities as such(HTable design wise), and I don&apos;t see any usage of doing aggregates on accumulated column families. If that is what is needed probably suggests some schema design rethinking. The point I raised was that the object we are now riding upon supports multiple families (which is very relevant for scanning a table), but we don&apos;t need it as per real usage. So, shall we support or not, this is the point of consideration. &lt;br/&gt;
Moreover, as the requirements are evolving (and I guess they will continue to do so), it might change again. I am happy as long as it is moving in the right direction. &lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review488&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review488&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020431" author="jiraposter@reviews.apache.org" created="Fri, 15 Apr 2011 21:16:07 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review490&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review490&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment993&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment993&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    One family is fine for the moment.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13020506" author="jiraposter@reviews.apache.org" created="Sat, 16 Apr 2011 00:27:05 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 19:06:58, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the startKey and endKey can be optional as well.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Basically that means scanning the whole region.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;himanshu vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;These start-end keys are used to locate the interested regions. Do you mean whole &lt;em&gt;table&lt;/em&gt;? If so, it will be like setting HConstants.START_ROW/STOP_ROW which are essentially empty byte arrays.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Gary Helmling wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This would be a bigger change, but maybe it would make sense to have the client pass a Scan object?  Then you could specify start/end row, time range, multiple column qualifiers, filter?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It&apos;s starting to look like we&apos;re duplicating most of these arguments when there&apos;s already a good way of passing them.  What do you think?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;himanshu vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Yes, am wondering why it didn&apos;t occur to me before! As a matter of fact, we are creating a Scan object at region level. So, with passing the Scan object to the Aggregation client, it will call the appropriate HTable method (the existing one), but the CP&apos;s method will take the Scan object as a parameter, and let the client have its liberty. But it needs some code changes, like in validation stuff for one. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(I was thinking that it was good to go and now there is so much room for improvement. Good stuff).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;himanshu vashishtha wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;In continuation of what I earlier said, in the current design we assume that client is interested in one family only. Shall this needs to be change too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I am refactoring these methods to let the client pass a Scan object to the AggregationClient class, but a scan object as such can have multi families in it. Shall we need to change this assumption. I don&apos;t see any issue with it as such, but this is something I didn&apos;t plan originally and it needs change in test cases. Please comment.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I refactored a agg method 1512 as per today&apos;s review (using scan object plus others) and its working fine (test passes for the method that i change). May be I need to add more boundary conditions to test the scan object. &lt;br/&gt;
I have some stuff for tonight/tomorrow, so will complete this by tomorrow night or by Sunday. I hope that should be ok&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review483&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review483&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13021101" author="jiraposter@reviews.apache.org" created="Mon, 18 Apr 2011 16:54:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review493&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review493&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1002&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1002&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    done&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1003&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1003&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    done&lt;/p&gt;




&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1004&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1004&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    done&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1005&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1005&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    done&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1006&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1006&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ok, using only Bytes.toLong now.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1007&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1007&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    done&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1008&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1008&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    done&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1009&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1009&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    removed the repeatition in the doc.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1010&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1010&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Column interpreter is more genericised now. It supports HBase cell data type and its promoted data type. For doing these computations, we will use this promoted data type. So, in case a cell value is int, we will be using a long type while computing sum to handle overflow. In case of finding max and min, we will still use the cell data type.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1011&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1011&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    coprocessor implementation returns a over all sum and row count, so no need to use a double/float in the return type. It is used at the Client side (AggregationClient).&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1012&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1012&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    done&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1013&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1013&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    added class java doc.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1014&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    refactored it&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1015&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1015&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    setting start/end rows does it. So, no need of checking now.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1016&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1016&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    done&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1017&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1017&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    now, current version returns a Pair&amp;lt;List&amp;lt;S&amp;gt;, Long&amp;gt; where the list contains the sum and sum of squares and Long is the row count. I can have a more specific object, but it seems it has to be added in the rpc stack (implementing Writable). Please comment if that is &lt;em&gt;the&lt;/em&gt; right way.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1001&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You mean to rename the class or just the javadoc (sorry I missed this review statement initially)&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1018&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1018&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This class is more genericised now. It defines two parameters type &amp;lt;T,Sbq. , where T is the cell value type and S is the promoted data type. S is used for doing arithmetic computations, T is used for finding min, max operation.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-13 08:37:14, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-13 08:37:14)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggFunctions.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13021111" author="v.himanshu" created="Mon, 18 Apr 2011 17:07:18 +0000"  >&lt;p&gt;Changes done as per review by Gary and Stack.&lt;/p&gt;</comment>
                            <comment id="13021121" author="jiraposter@reviews.apache.org" created="Mon, 18 Apr 2011 17:16:06 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-04-18 17:14:30.424344)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Latest update from Himanshu.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;br/&gt;
ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;br/&gt;
Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ted&lt;/p&gt;
</comment>
                            <comment id="13022607" author="jiraposter@reviews.apache.org" created="Thu, 21 Apr 2011 04:13:05 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-15 21:16:05, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java, line 84&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/4/?file=15694#file15694line84&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     One family is fine for the moment.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;FYI, more families can easily be added as client is passing the Scan object as such. It boils down to fetching the value of a cell from the columndescripter&apos;s getValue which takes family, qualifier and kv value; And then grouping it with other family values, but again I believe it is not the purpose of this jira ==&amp;gt; aggregating over multiple families. Please correct me if I am wrong. &lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review490&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review490&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-18 17:14:30, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-18 17:14:30)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13023572" author="v.himanshu" created="Sat, 23 Apr 2011 16:33:19 +0000"  >&lt;p&gt;removed an unnecessary import statement from LongColumnInterpreter. Thanks for pointing this Ted.&lt;/p&gt;</comment>
                            <comment id="13023573" author="jiraposter@reviews.apache.org" created="Sat, 23 Apr 2011 16:40:06 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-04-23 16:39:37.773505)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;import statement of TestAggregateProtocol is removed in LongColumnInterpreter&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;br/&gt;
ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;br/&gt;
Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ted&lt;/p&gt;
</comment>
                            <comment id="13024893" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 18:11:03 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review535&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review535&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I think its almost there.   This patch won&apos;t compile (see below for why).  I&apos;d be game for applying the next version.  This patch has come on a long way.  Lets make new issues after applying it for issues found in it (This patch does include a nice set of tests).&lt;/p&gt;


&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1116&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1116&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I agree w/ the review that suggested we spell out &apos;agg&apos; rather than use the abbreviation, especially in javadoc.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1117&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1117&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    if should be &apos;where&apos;.  Should we throw an exception if multiple families supplied so users are not surprised when they don&apos;t get answers for multiple families?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1118&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1118&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I&apos;d say leave implementation details out of the public javadoc (the bit about calling private methods)&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1119&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1119&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Does Scan do this test?  Internally? (I&apos;m not sure)&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1120&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1120&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &apos;should&apos; or &apos;does&apos;?  I think you want to say the latter?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1121&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1121&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Why this javadoc?  Don&apos;t we inherit javadoc from the Interface?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1122&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1122&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Whats this?  We do nothing on serialization?  Is that right?  It could be.  It just strikes me as a little odd.  Maybe put a comment in here to say &apos;nothing to serialize&apos;?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1123&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1123&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Do we agree that AggregateCpProtocol was not a good name, that rather it should be AggregateProtocol since cp is in the package name?&lt;/p&gt;

&lt;p&gt;    I see you have a AP later in this patch.  Let me go look at it.&lt;/p&gt;

&lt;p&gt;    I think I see whats going on... you didn&apos;t mean to include this in the patch?&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1124&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1124&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Otherwise, this Interface looks good.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocolImpl.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1125&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1125&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yeah, this class shouldn&apos;t be included either.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024894" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 18:11:04 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review536&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review536&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I think its almost there.   This patch won&apos;t compile (see below for why).  I&apos;d be game for applying the next version.  This patch has come on a long way.  Lets make new issues after applying it for issues found in it (This patch does include a nice set of tests).&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024900" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 18:31:03 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review537&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review537&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1126&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1126&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    In my version, I have:&lt;br/&gt;
    public interface ColumnInterpreter&amp;lt;T&amp;gt; extends Serializable {&lt;/p&gt;

&lt;p&gt;    There is no need to extend Writable.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024904" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 18:37:03 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-25 18:31:17, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java, line 99&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/3-6/?file=15641#file15641line99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/3-6/?file=15641#file15641line99&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     In my version, I have:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     public interface ColumnInterpreter&amp;lt;T&amp;gt; extends Serializable {&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     There is no need to extend Writable.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok.  Then we should remove that from the patch (Good one Ted)&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review537&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review537&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024906" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 18:39:03 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-25 18:31:17, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java, line 99&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/3-6/?file=15641#file15641line99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/3-6/?file=15641#file15641line99&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     In my version, I have:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     public interface ColumnInterpreter&amp;lt;T&amp;gt; extends Serializable {&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     There is no need to extend Writable.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ok.  Then we should remove that from the patch (Good one Ted)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Whoops.  Sorry, did you say Serializeable Ted as in java.io.serializable?  We don&apos;t want j.i.s.  Thats what Writable replaces.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review537&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review537&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024907" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 18:39:04 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review540&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review540&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1129&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1129&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes, but it seems Writable is the standard way to go in Hadoop for these RPCs. No big issue either way.&lt;br/&gt;
    Since it doesn&apos;t have any state, there is nothing to serialize here. It seems we can have make this as static util class &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024911" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 18:59:03 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review538&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review538&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1127&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1127&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I exchanged emails with Himanshu about supporting multiple column families.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1131&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1131&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I prefer using Serializable for the interpreter which is stateless.&lt;/p&gt;

&lt;p&gt;    It is supported by HbaseObjectWritable.&lt;/p&gt;



&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024917" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 19:25:03 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review542&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review542&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1132&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1132&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    ok. now it throws an exception when &amp;gt; 1 families are defined.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1133&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1133&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    removed the javadoc related to private method calls&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1134&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1134&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I didn&apos;t want it to propagate to the server just to return an exception. I thought that aggregate functions should work on distinct set of rows, ie, startRow &amp;lt; endRow should always be true (except when they are empty). &lt;br/&gt;
    There is a check in HTable-&amp;gt; getStartKeysInRange() that throws an exception when startRow &amp;gt; endRow, but I needed the boundary condition too.&lt;br/&gt;
    Please let me know if this condition we should remove this condition.&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateCpProtocol.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1135&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1135&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yes, its not there in later versions.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024919" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 19:29:04 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-25 18:58:37, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java, line 99&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/3-6/?file=15641#file15641line99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/3-6/?file=15641#file15641line99&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I prefer using Serializable for the interpreter which is stateless.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     It is supported by HbaseObjectWritable.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;My personal opinion is it will not go well with others if one uses Serializable. It is supported in HBaseObjectWritable only for legacy reasons I believe.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Himanshu&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review538&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review538&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024925" author="v.himanshu" created="Mon, 25 Apr 2011 19:43:51 +0000"  >&lt;p&gt;Changes as per Stack&apos;s review. &lt;br/&gt;
Major changes include:&lt;br/&gt;
a) LongColumnInterpreter still implements Writable (though with empty read/write methods). &lt;br/&gt;
b) Exception is thrown in case of more than one family is defined.&lt;/p&gt;</comment>
                            <comment id="13024926" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 19:45:03 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review546&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review546&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1140&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1140&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    There are 10 classes which implement Serializable under src/main/java/org/apache/hadoop/hbase/rest/model/&lt;/p&gt;

&lt;p&gt;    And:&lt;br/&gt;
    public class Pair&amp;lt;T1, T2&amp;gt; implements Serializable&lt;br/&gt;
    ./src/main/java/org/apache/hadoop/hbase/util/Pair.java&lt;br/&gt;
      public static class CustomSerializable implements Serializable {&lt;br/&gt;
    ./src/test/java/org/apache/hadoop/hbase/io/TestHbaseObjectWritable.java&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-23 16:39:37, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-23 16:39:37)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024932" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 19:55:03 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-04-25 19:44:07, Ted Yu wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java, line 99&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/diff/3-6/?file=15641#file15641line99&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff/3-6/?file=15641#file15641line99&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     There are 10 classes which implement Serializable under src/main/java/org/apache/hadoop/hbase/rest/model/&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     And:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     public class Pair&amp;lt;T1, T2&amp;gt; implements Serializable&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     ./src/main/java/org/apache/hadoop/hbase/util/Pair.java&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;       public static class CustomSerializable implements Serializable {&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     ./src/test/java/org/apache/hadoop/hbase/io/TestHbaseObjectWritable.java&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;My guess is that for REST, its because of the REST engine we use.  For Pair, we should probably change it to be Writable.  Same for CustomSerializable.&lt;/p&gt;

&lt;p&gt;Otherwise, Ted, if you +1 Himanshu&apos;s patch, I&apos;ll commit it.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review546&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review546&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-04-25 19:53:33, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-25 19:53:33)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/CursorCallable.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/CursorCp.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 1088894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/HTable.java 1088894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 1088894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/Scan.java 1088894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024933" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 19:55:04 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2011-04-25 19:53:33.129920)&lt;/p&gt;


&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Changes as per Stack&apos;s review.&lt;br/&gt;
Major changes include:&lt;br/&gt;
a) LongColumnInterpreter still implements Writable (though with empty read/write methods).&lt;br/&gt;
b) Exception is thrown in case of more than one family is defined.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;br/&gt;
ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;br/&gt;
Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/client/CursorCallable.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/CursorCp.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 1088894 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/HTable.java 1088894 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 1088894 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/Scan.java 1088894 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Ted&lt;/p&gt;
</comment>
                            <comment id="13024934" author="jiraposter@reviews.apache.org" created="Mon, 25 Apr 2011 19:57:05 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/585/#review548&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#review548&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/585/#comment1145&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/#comment1145&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I am fine with using Writable.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-04-25 19:53:33, Ted Yu wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/585/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-04-25 19:53:33)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Gary Helmling.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This patch provides reference implementation for aggregate function support through Coprocessor framework.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;ColumnInterpreter interface allows client to specify how the value&apos;s byte array is interpreted.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Some of the thoughts are summarized at &lt;a href=&quot;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://zhihongyu.blogspot.com/2011/03/genericizing-endpointcoprocessor.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Himanshu Vashishtha started the work. I provided some review comments and some of the code.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; title=&quot;Coprocessors: Support aggregate functions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1512&quot;&gt;&lt;del&gt;HBASE-1512&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1512&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-1512&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/CursorCallable.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/CursorCp.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 1088894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/HTable.java 1088894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 1088894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/Scan.java 1088894 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/client/coprocessor/LongColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/coprocessor/ColumnInterpreter.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/coprocessor/TestAggregateProtocol.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/585/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/585/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;TestAggFunctions passes.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Ted&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13024940" author="stack" created="Mon, 25 Apr 2011 20:14:14 +0000"  >&lt;p&gt;@Himanshu I think you uploaded the wrong patch for v8.  Its all about CursorCallable...&lt;/p&gt;</comment>
                            <comment id="13024949" author="v.himanshu" created="Mon, 25 Apr 2011 20:30:05 +0000"  >&lt;p&gt;My bad, uploaded a wrong patch. Sorry for the mishap Stack.&lt;/p&gt;</comment>
                            <comment id="13024982" author="stack" created="Mon, 25 Apr 2011 22:01:42 +0000"  >&lt;p&gt;Assigning Himanshu&lt;/p&gt;</comment>
                            <comment id="13024983" author="stack" created="Mon, 25 Apr 2011 22:03:22 +0000"  >&lt;p&gt;Committed to TRUNK.  Thank you for the nice feature Himanshu. Nice counseling and reviewing Ted.&lt;/p&gt;</comment>
                            <comment id="13025460" author="v.himanshu" created="Tue, 26 Apr 2011 21:55:33 +0000"  >&lt;p&gt;Its an addendum that incorporates Null handling of coprocessor results and AggregationClient validation. Build it on a clean main trunk and it seems to work good for TestAggregateProtocol, TestServerCustomProtocol and TestCoprocessEndpoint.&lt;/p&gt;</comment>
                            <comment id="13027260" author="hudson" created="Sat, 30 Apr 2011 00:53:41 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1888 (See &lt;a href=&quot;https://builds.apache.org/hudson/job/HBase-TRUNK/1888/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/HBase-TRUNK/1888/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="14662054" author="nmarasoi" created="Fri, 7 Aug 2015 16:27:44 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;Do you know if, related to this issue, or generally, is there a solution with HBase coprocessors for:&lt;br/&gt;
1. multiple metric columns e.g. group by (d1,..,dn) sum(c1) sum(c2)&lt;br/&gt;
2. custom metric columns e.g. group by (d1,..,dn) sum(c1) hyperlogUniq(c2)&lt;br/&gt;
3. sharing the components with map-reduce to run the same query for larger inputs&lt;/p&gt;

&lt;p&gt;Please advise,&lt;br/&gt;
Nicu&lt;/p&gt;</comment>
                            <comment id="15017955" author="lars_francke" created="Fri, 20 Nov 2015 13:02:01 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12523558">HBASE-4435</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12458533" name="1512.zip" size="17121" author="v.himanshu" created="Mon, 1 Nov 2010 05:27:58 +0000"/>
                            <attachment id="12475221" name="AggregateCpProtocol.java" size="4359" author="yuzhihong@gmail.com" created="Fri, 1 Apr 2011 13:56:38 +0000"/>
                            <attachment id="12475222" name="AggregateProtocolImpl.java" size="9814" author="yuzhihong@gmail.com" created="Fri, 1 Apr 2011 13:56:38 +0000"/>
                            <attachment id="12475223" name="AggregationClient.java" size="13326" author="yuzhihong@gmail.com" created="Fri, 1 Apr 2011 13:56:38 +0000"/>
                            <attachment id="12475224" name="ColumnInterpreter.java" size="1668" author="yuzhihong@gmail.com" created="Fri, 1 Apr 2011 13:56:38 +0000"/>
                            <attachment id="12477446" name="addendum_1512.txt" size="2022" author="v.himanshu" created="Tue, 26 Apr 2011 21:55:33 +0000"/>
                            <attachment id="12474727" name="patch-1512-2.txt" size="47553" author="v.himanshu" created="Sun, 27 Mar 2011 07:34:22 +0000"/>
                            <attachment id="12475271" name="patch-1512-3.txt" size="61801" author="v.himanshu" created="Sat, 2 Apr 2011 01:12:04 +0000"/>
                            <attachment id="12475627" name="patch-1512-4.txt" size="62803" author="v.himanshu" created="Wed, 6 Apr 2011 21:29:30 +0000"/>
                            <attachment id="12476216" name="patch-1512-5.txt" size="61952" author="v.himanshu" created="Wed, 13 Apr 2011 06:32:04 +0000"/>
                            <attachment id="12476629" name="patch-1512-6.txt" size="62396" author="v.himanshu" created="Mon, 18 Apr 2011 17:07:18 +0000"/>
                            <attachment id="12477212" name="patch-1512-7.txt" size="62338" author="v.himanshu" created="Sat, 23 Apr 2011 16:33:19 +0000"/>
                            <attachment id="12477327" name="patch-1512-8.txt" size="72752" author="v.himanshu" created="Mon, 25 Apr 2011 19:43:51 +0000"/>
                            <attachment id="12477332" name="patch-1512-9.txt" size="62103" author="v.himanshu" created="Mon, 25 Apr 2011 20:30:04 +0000"/>
                            <attachment id="12464830" name="patch-1512.txt" size="25468" author="v.himanshu" created="Mon, 29 Nov 2010 07:47:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 31 Mar 2010 16:37:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32173</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hdon:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99479</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>A coprocessor to do basic aggregating; max, min, counts, etc.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>