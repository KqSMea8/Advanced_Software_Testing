<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:42:24 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13351/HBASE-13351.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13351] Annotate internal MasterRpcServices methods with admin priority</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13351</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12071&quot; title=&quot;Separate out thread pool for Master &amp;lt;-&amp;gt; RegionServer communication&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12071&quot;&gt;&lt;del&gt;HBASE-12071&lt;/del&gt;&lt;/a&gt;, among other things, introduced annotating RPC methods to give certain methods priority over others. Namely, this helps ensure that client requests cannot starve out internal RPC between master and regionserver.&lt;/p&gt;

&lt;p&gt;Similarly, we can do the same thing for Master RPC methods that are invoked by RS&apos;s.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12786293">HBASE-13351</key>
            <summary>Annotate internal MasterRpcServices methods with admin priority</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="elserj">Josh Elser</assignee>
                                    <reporter username="elserj">Josh Elser</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Mar 2015 18:44:08 +0000</created>
                <updated>Mon, 13 Jul 2015 17:24:50 +0000</updated>
                            <resolved>Wed, 29 Apr 2015 06:46:41 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14384897" author="elserj" created="Fri, 27 Mar 2015 23:37:04 +0000"  >&lt;p&gt;Simple patch which increases priority on GetLastFlushedSequenceId, RegionServerReport, RegionServerStartup, ReportRSFatalError, and ReportRegionStateTransition on MasterRpcServices.&lt;/p&gt;</comment>
                            <comment id="14384988" author="hadoopqa" created="Sat, 28 Mar 2015 00:42:23 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12707920/HBASE-13351.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12707920/HBASE-13351.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0a500e5d305b0c75a6a357a5ff7a9210a615a007.&lt;br/&gt;
  ATTACHMENT ID: 12707920&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestQosFunction&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13465//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13465//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13465//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13465//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13465//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13465//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13465//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13465//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14385034" author="elserj" created="Sat, 28 Mar 2015 01:37:27 +0000"  >&lt;p&gt;Work around mockito&apos;s class being used instead of the actual server implementation&apos;s class.&lt;/p&gt;</comment>
                            <comment id="14385105" author="hadoopqa" created="Sat, 28 Mar 2015 04:02:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12707949/HBASE-13351-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12707949/HBASE-13351-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0a500e5d305b0c75a6a357a5ff7a9210a615a007.&lt;br/&gt;
  ATTACHMENT ID: 12707949&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.util.TestHBaseFsck.testHbckWithFewerReplica(TestHBaseFsck.java:706)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testRegionDeployedNotInHdfs(TestHBaseFsck.java:1888)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testValidLingeringSplitParent(TestHBaseFsck.java:1761)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testLingeringSplitParent(TestHBaseFsck.java:1713)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testHbckWithExcessReplica(TestHBaseFsck.java:779)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testQuarantineCorruptHFile(TestHBaseFsck.java:2155)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testFixHdfsHolesNotWorkingWithNoHdfsChecking(TestHBaseFsck.java:2085)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient.testCloneSnapshotOfCloned(TestRestoreSnapshotFromClient.java:245)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13469//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13469//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13469//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13469//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13469//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13469//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13469//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13469//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14392275" author="mantonov" created="Thu, 2 Apr 2015 07:15:26 +0000"  >&lt;p&gt;Good thing! few notes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;QosPriority now needs to have javadoc IMO&lt;/li&gt;
	&lt;li&gt;at first I was a bit surprised why do we need that change in HMaster - since tests which don&apos;t need cluster generally don&apos;t start master either, but looks like that&apos;s a bit special case here&lt;/li&gt;
	&lt;li&gt;do you think these RPCs should go with admin QoS, or we should have something with lower QoS (say, 50?) If HRS couldn&apos;t report to master in time about something, that might be less urgent compared to admin ops? on the other hand, avoiding having to add one more thread pool for this class of methods would be either.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14392801" author="elserj" created="Thu, 2 Apr 2015 15:03:35 +0000"  >&lt;p&gt;Thanks for the review.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;QosPriority now needs to have javadoc IMO&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Easy enough.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;on the other hand, avoiding having to add one more thread pool for this class of methods would be either&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I didn&apos;t think the attached patch actually changed the threadpools that were created (at least with SimpleRpcScheduler). Perhaps I missed something?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;do you think these RPCs should go with admin QoS, or we should have something with lower QoS (say, 50?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think that makes sense. Let me see if I can put up a new patch that does 50 like you suggest.&lt;/p&gt;</comment>
                            <comment id="14393076" author="mantonov" created="Thu, 2 Apr 2015 18:13:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;I didn&apos;t think the attached patch actually changed the threadpools that were created (at least with SimpleRpcScheduler). &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That was I meant, yeah - if we run it with Admin QoS we reuse the according threadpool, otherwise we might need to add the new one for new level of priority, if we introduce one.&lt;/p&gt;</comment>
                            <comment id="14393132" author="elserj" created="Thu, 2 Apr 2015 18:37:33 +0000"  >&lt;p&gt;Ah, now I&apos;m following you. Perhaps a pool of size 5? These calls should be quick, best I can tell.&lt;/p&gt;</comment>
                            <comment id="14393149" author="mantonov" created="Thu, 2 Apr 2015 18:44:39 +0000"  >&lt;p&gt;Yeah, I think so. I&apos;m also curious about others&apos; opinions on whether its good idea to add one more threadpool here.&lt;/p&gt;</comment>
                            <comment id="14483820" author="stack" created="Tue, 7 Apr 2015 19:04:06 +0000"  >&lt;p&gt;How about we commit this and come back later if we need another threadpool set on master (too many threads in hbase!)&lt;/p&gt;</comment>
                            <comment id="14483833" author="elserj" created="Tue, 7 Apr 2015 19:10:56 +0000"  >&lt;p&gt;WFM, I&apos;ve been waffling about whether or not this will actually have a perceived difference (for the end-user/admin). I feel like if the master&apos;s handler threads are saturated, the fact that RS can still chat with the master won&apos;t really matter.&lt;/p&gt;

&lt;p&gt;Ultimately, I think &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375&quot; title=&quot;Provide HBase superuser higher priority over other users in the RPC handling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13375&quot;&gt;&lt;del&gt;HBASE-13375&lt;/del&gt;&lt;/a&gt; would have a much bigger positive impact than this, but these changes do have some net-positive effect.&lt;/p&gt;</comment>
                            <comment id="14483858" author="stack" created="Tue, 7 Apr 2015 19:21:18 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=elserj&quot; class=&quot;user-hover&quot; rel=&quot;elserj&quot;&gt;Josh Elser&lt;/a&gt; I see this change as building block. Let me get &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; opinion. If he not averse, will commit. Thanks.&lt;/p&gt;</comment>
                            <comment id="14483884" author="mantonov" created="Tue, 7 Apr 2015 19:36:44 +0000"  >&lt;p&gt;Yeah, let&apos;s commit it. &lt;/p&gt;</comment>
                            <comment id="14483888" author="mantonov" created="Tue, 7 Apr 2015 19:38:52 +0000"  >&lt;p&gt;That actually good point about saturation!&lt;/p&gt;

&lt;p&gt;If we imagine we have 3 threadpools, (20 -regular, 5 - high, 5 - replication), for some some reason high QoS threads are saturated (as evidenced by retries), shall we be able to dynamically try to adjust request QoS to try to sneak in the other threadpool? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14484145" author="elserj" created="Tue, 7 Apr 2015 21:48:08 +0000"  >&lt;p&gt;Hrm, given &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;&apos;s &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=14484112#comment-14484112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;comment&lt;/a&gt;, maybe the above failures weren&apos;t unrelated.&lt;/p&gt;</comment>
                            <comment id="14484161" author="mantonov" created="Tue, 7 Apr 2015 21:54:50 +0000"  >&lt;p&gt;Yesh, I think you&apos;re right. If someone else could reproduce it too, would make sense to wait till it&apos;s figured out, I&apos;d say. Looking.&lt;/p&gt;</comment>
                            <comment id="14484441" author="mantonov" created="Wed, 8 Apr 2015 00:34:56 +0000"  >&lt;p&gt;So, both this patch and the one for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375&quot; title=&quot;Provide HBase superuser higher priority over other users in the RPC handling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13375&quot;&gt;&lt;del&gt;HBASE-13375&lt;/del&gt;&lt;/a&gt; could be fixed by setting hbase.regionserver.metahandler.count to 10 (not 2, as it is not in beforeClass call), I tried both patches with this fix. As stop-gap, probably that would make sense to do. What do you guys think?&lt;/p&gt;

&lt;p&gt;What&apos;s interesting, with this patch as well as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375&quot; title=&quot;Provide HBase superuser higher priority over other users in the RPC handling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13375&quot;&gt;&lt;del&gt;HBASE-13375&lt;/del&gt;&lt;/a&gt; for this particular test we route most of calls thru high-priority pool in SimpleRpcScheduler, but things work just fine without this patch. Suggests that high performance pool with same amount of handlers is less performand, than standard one.&lt;/p&gt;</comment>
                            <comment id="14484547" author="mantonov" created="Wed, 8 Apr 2015 02:02:05 +0000"  >&lt;p&gt;The practical (in our case) small difference between the two is that callExecutor uses bounded priority array-based queue, and priority and replicator executors are using linked blocking queues, and also with default configs callExecutor would have 1 backing queue (when 2 handlers are in use), and priority executor is hardcoded to use 2. Which probably doesn&apos;t really matter.&lt;/p&gt;

&lt;p&gt;Seems like in this case we&apos;re just happen to hit corner case in a sense that normally in prod cluster one expects user rpcs to be the prevailing type of calls, and in this test it&apos;s just not the case (btw..the same effect would apply when making admin-invoked calls to use high-priority thread pool, since inside minicluster..well, everyone is admin &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;).&lt;/p&gt;</comment>
                            <comment id="14484553" author="mantonov" created="Wed, 8 Apr 2015 02:10:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=elserj&quot; class=&quot;user-hover&quot; rel=&quot;elserj&quot;&gt;Josh Elser&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;  - how about we try this patch on hadoop qa with rpc metahandler count set in this test to something like 40, and see?&lt;/p&gt;

&lt;p&gt;Thinking about corner case we&apos;re hitting here - setting metahandler count to 8 or 10 still causes some (but not all) TestHbaseFsck tests fail, and setting it to 20 causes rare occasional failures.&lt;/p&gt;</comment>
                            <comment id="14484584" author="mantonov" created="Wed, 8 Apr 2015 02:30:44 +0000"  >&lt;p&gt;(on the other hand, out of curiosity, if I live metahandler count as 2 in the configuration, but change the QoS for these 5 methods in MasterRpcServices from admin to replication, everything works.. So..I don&apos;t think that&apos;s very realistic production usecase, but sometimes in corner case this contention may happen)&lt;/p&gt;</comment>
                            <comment id="14486274" author="elserj" created="Wed, 8 Apr 2015 23:03:28 +0000"  >&lt;p&gt;Interesting, I changed the metahandler count to 10 and it seems to be passing regularly for me. I need to look at your prev comment about the difference in queues used being a difference. Did you think that was the reason for the failure? Or were you just noting that as a difference?&lt;/p&gt;</comment>
                            <comment id="14486281" author="mantonov" created="Wed, 8 Apr 2015 23:07:44 +0000"  >&lt;p&gt;I don&apos;t really think type of blocking queue matters in this case. It&apos;s just without this patch the requests get distributed between call* and priority* executors, and now most of them (in this particular test) go thru the latter one. Just saturation I think. Which OS are you using? On my mac 10 handlers from IDE don&apos;t pass always. I&apos;ll set it to something higher just to be on the safe side. I don&apos;t think it&apos;s going to be critical (as all threads get shut down when test completes).&lt;/p&gt;</comment>
                            <comment id="14486291" author="elserj" created="Wed, 8 Apr 2015 23:10:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;Just saturation I think&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, I figured that was the case, just wasn&apos;t sure if I was missing something more.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Which OS are you using? On my mac 10 handlers from IDE don&apos;t pass always&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve running it on the CLI on my Mac as well. Just started a {{while true; do mvn... }} loop to see if I can make it fail that way &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;ll set it to something higher just to be on the safe side. I don&apos;t think it&apos;s going to be critical (as all threads get shut down when test completes).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok. I was poking at the history and noticed that they&apos;ve been set low for some time. I didn&apos;t dig far enough to see if there was a reason other than trying to limit test-resources needed.&lt;/p&gt;</comment>
                            <comment id="14486333" author="mantonov" created="Wed, 8 Apr 2015 23:34:02 +0000"  >&lt;p&gt;I see, thanks.&lt;/p&gt;

&lt;p&gt;Btw.. did you try also running TestAdmin2 with same settings for metahandler count? Does it pass locally for you? It seems to have similar case (and was failing on my patch if I don&apos;t set metahandler count higher than now).&lt;/p&gt;</comment>
                            <comment id="14486374" author="elserj" created="Thu, 9 Apr 2015 00:03:53 +0000"  >&lt;p&gt;Hah, made a liar out of me. Failed with 10 handlers almost right away this time &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;TestAdmin2 fails w/o change and appears to pass regularly with more metahandler threads.&lt;/p&gt;</comment>
                            <comment id="14486376" author="mantonov" created="Thu, 9 Apr 2015 00:05:39 +0000"  >&lt;p&gt;Same here, these 2 large tests seems to be the only ones affected.&lt;/p&gt;</comment>
                            <comment id="14486473" author="elserj" created="Thu, 9 Apr 2015 01:10:47 +0000"  >&lt;p&gt;Here&apos;s a v2 that ups the metahandler pool sizes to 30 for TestHBaseFsck and TestAdmin2. Let&apos;s see what jenkins thinks.&lt;/p&gt;</comment>
                            <comment id="14486498" author="mantonov" created="Thu, 9 Apr 2015 01:26:34 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=elserj&quot; class=&quot;user-hover&quot; rel=&quot;elserj&quot;&gt;Josh Elser&lt;/a&gt;, LGTM, non-binding +1 if jenkins passes. nit -&lt;/p&gt;

&lt;p&gt;  // normal_QOS &amp;lt; qos_threshold &amp;lt; replicationQOS &amp;lt; replay_QOS &amp;lt; high_QOS ---- could mention admin qos here?&lt;/p&gt;</comment>
                            <comment id="14486504" author="elserj" created="Thu, 9 Apr 2015 01:33:03 +0000"  >&lt;p&gt;ack! good catch. I totally missed that.&lt;/p&gt;</comment>
                            <comment id="14486505" author="elserj" created="Thu, 9 Apr 2015 01:34:51 +0000"  >&lt;p&gt;Fixed consolidated QOS priorities comment (and normalized the capitalization and punctuation)&lt;/p&gt;</comment>
                            <comment id="14486514" author="mantonov" created="Thu, 9 Apr 2015 01:38:34 +0000"  >&lt;p&gt;Thanks! Could you take a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375&quot; title=&quot;Provide HBase superuser higher priority over other users in the RPC handling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13375&quot;&gt;&lt;del&gt;HBASE-13375&lt;/del&gt;&lt;/a&gt;&apos;s last patch, as it&apos;s changing the same code? &lt;/p&gt;</comment>
                            <comment id="14486518" author="elserj" created="Thu, 9 Apr 2015 01:41:25 +0000"  >&lt;p&gt;Happy to. It was on my radar &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14486604" author="hadoopqa" created="Thu, 9 Apr 2015 02:39:41 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724089/HBASE-13351-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724089/HBASE-13351-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e2a90a71143f480621ccd935a0b9477d7ee4016f.&lt;br/&gt;
  ATTACHMENT ID: 12724089&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.http.TestHttpServerLifecycle.testStartedServerIsAlive(TestHttpServerLifecycle.java:71)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13633//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13633//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13633//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13633//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13633//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13633//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13633//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13633//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14486669" author="hadoopqa" created="Thu, 9 Apr 2015 04:34:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12724099/HBASE-13351-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12724099/HBASE-13351-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e2a90a71143f480621ccd935a0b9477d7ee4016f.&lt;br/&gt;
  ATTACHMENT ID: 12724099&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher&lt;br/&gt;
                  org.apache.hadoop.hbase.TestAcidGuarantees&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 9 zombie test(s): 	at org.apache.hadoop.hbase.client.TestFromClientSide3.testHTableExistsMethodMultipleRegionsSingleGet(TestFromClientSide3.java:338)&lt;br/&gt;
	at org.apache.hadoop.hbase.client.TestHTableMultiplexerFlushCache.testOnRegionChange(TestHTableMultiplexerFlushCache.java:114)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13634//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13634//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13634//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13634//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13634//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13634//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13634//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13634//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14488220" author="mantonov" created="Thu, 9 Apr 2015 20:34:24 +0000"  >&lt;p&gt;TestAcidGuarantees failed with Caused by: java.lang.RuntimeException: java.lang.OutOfMemoryError: unable to create new native thread. And when OOME shows up, a lot of other tests go flaky... I saw these a lot when trying to purge managed connection when there were leaks, but here..could&apos;ve been caused by running more handler threads in 2 zombie tests? Don&apos;t really think so.&lt;/p&gt;

&lt;p&gt;Want to retry again?&lt;/p&gt;</comment>
                            <comment id="14488576" author="stack" created="Fri, 10 Apr 2015 00:07:30 +0000"  >&lt;p&gt;You fellows think we should up the default hbase.regionserver.metahandler.count given your findings here (and that this patch makes it so admin exclusively runs on this pool?)?&lt;/p&gt;</comment>
                            <comment id="14488914" author="elserj" created="Fri, 10 Apr 2015 05:02:06 +0000"  >&lt;p&gt;That&apos;s a very good question. I need to look more closely at the failing tests to better understand why the contention came about before I make up my mind, but my initial thought is to agree with you.&lt;/p&gt;</comment>
                            <comment id="14488965" author="mantonov" created="Fri, 10 Apr 2015 05:45:18 +0000"  >&lt;p&gt;Yeah, now it&apos;s set to 10 (while some tests deliberately set it to lower value), and probably should be higher now. Let me try to bump it up to 20 in patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375&quot; title=&quot;Provide HBase superuser higher priority over other users in the RPC handling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13375&quot;&gt;&lt;del&gt;HBASE-13375&lt;/del&gt;&lt;/a&gt; and see how it goes.&lt;/p&gt;</comment>
                            <comment id="14494848" author="elserj" created="Tue, 14 Apr 2015 20:49:26 +0000"  >&lt;p&gt;Ah! I think I got to the bottom of why this deadlocks without sufficient priority-pool threads. &lt;tt&gt;MasterRpcServices#reportRegionStateTransition&lt;/tt&gt; ultimately makes another &lt;tt&gt;Get&lt;/tt&gt; to meta which automatically gets put at priority 200 (because it&apos;s a request against meta).&lt;/p&gt;

&lt;p&gt;So, the region server fires off reportRegionStateTransition calls to the Master, these end up going back into the same thread pool which has no more threads to handle the requests. Boom, deadlock. The confusing part (or at least the part I don&apos;t understand) is why this is going back to the Master and not a RS. Maybe it&apos;s due to the Master acting as a RS? Maybe I just don&apos;t understand how this works completely &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Daemon Thread [PriorityRpcServer.handler=1,queue=1,port=64100] (Suspended)	
	waiting for: AsyncCall  (id=891)	
	Object.wait(long) line: not available [native method]	
	AsyncCall(Object).wait(long, int) line: 461	
	AsyncCall(DefaultPromise&amp;lt;V&amp;gt;).await0(long, boolean) line: 355	
	AsyncCall(DefaultPromise&amp;lt;V&amp;gt;).await(long, TimeUnit) line: 266	
	AsyncCall(AbstractFuture&amp;lt;V&amp;gt;).get(long, TimeUnit) line: 42	
	AsyncRpcClient.call(PayloadCarryingRpcController, MethodDescriptor, Message, Message, User, InetSocketAddress) line: 226	
	AsyncRpcClient(AbstractRpcClient).callBlockingMethod(Descriptors$MethodDescriptor, PayloadCarryingRpcController, Message, Message, User, InetSocketAddress) line: 213	
	AbstractRpcClient$BlockingRpcChannelImplementation.callBlockingMethod(Descriptors$MethodDescriptor, RpcController, Message, Message) line: 287	
	ClientProtos$ClientService$BlockingStub.get(RpcController, ClientProtos$GetRequest) line: 32391	
	HTable$3.call(int) line: 686	
	HTable$3.call(int) line: 1	
	RpcRetryingCallerImpl&amp;lt;T&amp;gt;.callWithRetries(RetryingCallable&amp;lt;T&amp;gt;, int) line: 117	
	HTable.get(Get) line: 694	
	MetaTableAccessor.getTableState(Connection, TableName) line: 1075	
	TableStateManager.readMetaState(TableName) line: 187	
	TableStateManager.getTableState(TableName) line: 171	
	TableStateManager.isTableState(TableName, TableState$State...) line: 130	
	AssignmentManager.onRegionOpen(RegionState, HRegionInfo, ServerName, RegionServerStatusProtos$RegionStateTransition) line: 2183	
	AssignmentManager.onRegionTransition(ServerName, RegionServerStatusProtos$RegionStateTransition) line: 2754	
	MasterRpcServices.reportRegionStateTransition(RpcController, RegionServerStatusProtos$ReportRegionStateTransitionRequest) line: 1264	
	RegionServerStatusProtos$RegionServerStatusService$2.callBlockingMethod(Descriptors$MethodDescriptor, RpcController, Message) line: 8623	
	RpcServer.call(BlockingService, MethodDescriptor, Message, CellScanner, long, MonitoredRPCHandler) line: 2095	
	CallRunner.run() line: 101	
	BalancedQueueRpcExecutor(RpcExecutor).consumerLoop(BlockingQueue&amp;lt;CallRunner&amp;gt;) line: 130	
	RpcExecutor$2.run() line: 107	
	Thread.run() line: 745	
  
Daemon Thread [PostOpenDeployTasks:d923ab785d95578230ec49fbb1f40e8e] (Suspended)	
	waiting for: AsyncCall  (id=808)	
	Object.wait(long) line: not available [native method]	
	AsyncCall(Object).wait(long, int) line: 461	
	AsyncCall(DefaultPromise&amp;lt;V&amp;gt;).await0(long, boolean) line: 355	
	AsyncCall(DefaultPromise&amp;lt;V&amp;gt;).await(long, TimeUnit) line: 266	
	AsyncCall(AbstractFuture&amp;lt;V&amp;gt;).get(long, TimeUnit) line: 42	
	AsyncRpcClient.call(PayloadCarryingRpcController, MethodDescriptor, Message, Message, User, InetSocketAddress) line: 226	
	AsyncRpcClient(AbstractRpcClient).callBlockingMethod(Descriptors$MethodDescriptor, PayloadCarryingRpcController, Message, Message, User, InetSocketAddress) line: 213	
	AbstractRpcClient$BlockingRpcChannelImplementation.callBlockingMethod(Descriptors$MethodDescriptor, RpcController, Message, Message) line: 287	
	RegionServerStatusProtos$RegionServerStatusService$BlockingStub.reportRegionStateTransition(RpcController, RegionServerStatusProtos$ReportRegionStateTransitionRequest) line: 9030	
	MiniHBaseCluster$MiniHBaseClusterRegionServer(HRegionServer).reportRegionStateTransition(RegionServerStatusProtos$RegionStateTransition$TransitionCode, long, HRegionInfo...) line: 1949	
	MiniHBaseCluster$MiniHBaseClusterRegionServer(HRegionServer).postOpenDeployTasks(Region) line: 1884	
	OpenRegionHandler$PostOpenDeployTasksThread.run() line: 241	
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14494977" author="mantonov" created="Tue, 14 Apr 2015 21:50:51 +0000"  >&lt;p&gt;Nice catch!&lt;/p&gt;

&lt;p&gt;I believe meta is co-located with master (as per &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt;), so I can see why it&apos;s going to master again. But, OTOH, call in this call should be going thru short-circuit connection and not RPC layer..Let me take a look.&lt;/p&gt;</comment>
                            <comment id="14494984" author="elserj" created="Tue, 14 Apr 2015 21:53:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;I believe meta is co-located with master (as per &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Boom. This is the hunch I had, but I had no idea where to start looking to verify. Thanks!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;this call should be going thru short-circuit connection and not RPC layer..Let me take a look.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Absolutely. We shouldn&apos;t be making a separate RPC for this. MetaTableAccessor could hopefully shortcircuit out if we&apos;re running inside the Master (although I&apos;m not directly sure how we would determine this).&lt;/p&gt;</comment>
                            <comment id="14495009" author="mantonov" created="Tue, 14 Apr 2015 22:12:11 +0000"  >&lt;p&gt;SSC-s are set in HRegionServer#createClusterConnection.&lt;/p&gt;

&lt;p&gt;But as I&apos;m looking at it, MetaTableAccessor doesn&apos;t really make use of it?&lt;/p&gt;</comment>
                            <comment id="14495054" author="mantonov" created="Tue, 14 Apr 2015 22:43:03 +0000"  >&lt;p&gt;As a note..Looks like we don&apos;t gather metrics as to what percentage of rpc calls went thru which thread pool. Would it be useful for prod environment to have one? Thoughts?&lt;/p&gt;</comment>
                            <comment id="14495460" author="elserj" created="Wed, 15 Apr 2015 00:44:00 +0000"  >&lt;p&gt;It should.&lt;/p&gt;

&lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;TableStateManager.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @Nullable
  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; TableState readMetaState(TableName tableName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (tableName.equals(TableName.META_TABLE_NAME))
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TableState(tableName, TableState.State.ENABLED);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; MetaTableAccessor.getTableState(master.getConnection(), tableName);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When we read the state of a table from meta, we should be reusing the Master&apos;s cached connection (which has the opportunity to give us the short-circuit variant).&lt;/p&gt;

&lt;p&gt;The question I have, is are we actually getting a ShortCircuit connection when we think we should be&lt;/p&gt;

&lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;ConnectionUtils.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      @Override
      &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ClientService.BlockingInterface getClient(
          ServerName sn) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; serverName.equals(sn) ? client : &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.getClient(sn);
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My current hunch is that we&apos;re failing that conditional for one reason or another. Will dig into this next.&lt;/p&gt;</comment>
                            <comment id="14495461" author="elserj" created="Wed, 15 Apr 2015 00:44:46 +0000"  >&lt;p&gt;Makes sense to me.&lt;/p&gt;</comment>
                            <comment id="14496790" author="elserj" created="Wed, 15 Apr 2015 19:50:19 +0000"  >&lt;p&gt;Short answer: &lt;tt&gt;ConnectionUtils#createShortCircuitHConnection&lt;/tt&gt; doesn&apos;t actually do what it thinks its doing.&lt;/p&gt;

&lt;p&gt;For callers which directly try to get the client service stub, things are fine. However, in our specific case where we&apos;re constructing an HTable and calling a Get on it, these methods are invoked on the ConnectionImplementation, not the SCC stub. In other words, the HTable never even sees the SCC and always does a normal RPC.&lt;/p&gt;

&lt;p&gt;IMO, this is something to branch off into its own issue. The outstanding question at hand here is admin threadpool sizing concerns for real instances, of course this should likely also be done elsewhere &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I think the patch here is ready to go, but we might need some thought about how requests actually get routed since admin is already all meta requests + admin/server users (after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375&quot; title=&quot;Provide HBase superuser higher priority over other users in the RPC handling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13375&quot;&gt;&lt;del&gt;HBASE-13375&lt;/del&gt;&lt;/a&gt;) + hbase server-to-server RPCs (this ticket).&lt;/p&gt;</comment>
                            <comment id="14496820" author="mantonov" created="Wed, 15 Apr 2015 20:06:00 +0000"  >&lt;p&gt;Yeah, you&apos;re right, that&apos;s I&apos;ve seen there too in ConnectionAdapter impl we&apos;re using there.&lt;/p&gt;

&lt;p&gt;Regarding issue at hand - I &lt;em&gt;think&lt;/em&gt; for real cluster the percentage of all admin-QoS rpcs (as you enumeratad here) is still tiny % of all rpc requests, but for our miniclusters, so this patch looks good to me (if we could get the clean hadoop-qa run, perhaps bumping default metahandler count to 20? seems like it&apos;s prudent change to do regardless of the fix in SSC?)&lt;/p&gt;</comment>
                            <comment id="14496824" author="elserj" created="Wed, 15 Apr 2015 20:08:18 +0000"  >&lt;p&gt;Hrmph. Last patch had 30 which should be enough? Let me try to just kick off another test.&lt;/p&gt;</comment>
                            <comment id="14497167" author="hadoopqa" created="Wed, 15 Apr 2015 22:45:52 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12725667/HBASE-13351-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12725667/HBASE-13351-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 14261bc9e515bbaf2fa40f5779cb83a3372f0e57.&lt;br/&gt;
  ATTACHMENT ID: 12725667&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 16 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13714//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13714//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13714//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13714//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13714//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13714//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13714//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13714//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14497707" author="mantonov" created="Thu, 16 Apr 2015 08:13:42 +0000"  >&lt;p&gt;I meant - default hbase.regionserver.metahandler.count is 10 now (patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13375&quot; title=&quot;Provide HBase superuser higher priority over other users in the RPC handling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13375&quot;&gt;&lt;del&gt;HBASE-13375&lt;/del&gt;&lt;/a&gt; modified default to 20), may be try to bump this default up to 20 (for all tests, not just this 1 or 2, since lot of them would be affected, and, more importantly, real cluster behavior would change a bit, too).&lt;/p&gt;</comment>
                            <comment id="14498337" author="elserj" created="Thu, 16 Apr 2015 17:25:53 +0000"  >&lt;blockquote&gt;
&lt;p&gt;-1 core tests. The patch failed these unit tests:&lt;br/&gt;
org.apache.hadoop.hbase.regionserver.TestRegionReplicaFailover&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This one is failing locally for me too. I&apos;ll dig into it.&lt;/p&gt;</comment>
                            <comment id="14498592" author="elserj" created="Thu, 16 Apr 2015 19:56:48 +0000"  >&lt;p&gt;v4 ups the metahandler thread counts to get TestRegionReplicaFailover passing.&lt;/p&gt;</comment>
                            <comment id="14498885" author="hadoopqa" created="Thu, 16 Apr 2015 22:34:18 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12725963/HBASE-13351-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12725963/HBASE-13351-v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e08ef99e3042767eaf2d11adae783674acfdddeb.&lt;br/&gt;
  ATTACHMENT ID: 12725963&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 20 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13724//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13724//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13724//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13724//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13724//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13724//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13724//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13724//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14498918" author="elserj" created="Thu, 16 Apr 2015 22:49:39 +0000"  >&lt;p&gt;test-patch.sh seems confused. Jenkins isn&apos;t reporting any test failures (best as I can tell). Should I just try to re-run again?&lt;/p&gt;</comment>
                            <comment id="14499333" author="hadoopqa" created="Fri, 17 Apr 2015 06:21:22 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12726057/HBASE-13351-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12726057/HBASE-13351-v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 7fb6055ed7304b05a383a730b64e55e41772bcf8.&lt;br/&gt;
  ATTACHMENT ID: 12726057&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 20 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 6 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14500160" author="mantonov" created="Fri, 17 Apr 2015 16:42:06 +0000"  >&lt;p&gt;TestRollingRestart seems to have failed (&lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//testReport/TEST-org.apache.hadoop.hbase.master.TestRollingRestart/xml/_init_/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13729//testReport/TEST-org.apache.hadoop.hbase.master.TestRollingRestart/xml/_init_/&lt;/a&gt;), though it does look spurious to me..Want to retry?&lt;/p&gt;</comment>
                            <comment id="14500163" author="elserj" created="Fri, 17 Apr 2015 16:44:55 +0000"  >&lt;p&gt;I took a look at the stack dumps that have found a couple of tests that were just stuck in main. I think it&apos;s just maven or test-patch.sh not handling this goofball case. Will have a new patch in a little bit with some more test changes.&lt;/p&gt;</comment>
                            <comment id="14500170" author="mantonov" created="Fri, 17 Apr 2015 16:51:00 +0000"  >&lt;p&gt;Just wondering if you were going to also change default metahandler count (DEFAULT_REGION_SERVER_HIGH_PRIORITY_HANDLER_COUNT prop) to 20 as it seems like something worth trying?&lt;/p&gt;</comment>
                            <comment id="14500207" author="elserj" created="Fri, 17 Apr 2015 17:11:41 +0000"  >&lt;p&gt;I think between the two of us, it should happen. I can include it in my next patch since I&apos;m already working on it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14500209" author="mantonov" created="Fri, 17 Apr 2015 17:14:06 +0000"  >&lt;p&gt;I&apos;ve included it in the patch for superusers QoS already &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; but since that wasn&apos;t committed yet, this change doesn&apos;t help tests in this jira.&lt;/p&gt;</comment>
                            <comment id="14500275" author="elserj" created="Fri, 17 Apr 2015 17:42:57 +0000"  >&lt;p&gt;Ahh, forgot about that. FTR, it looks like 20 isn&apos;t enough for some of these still failing tests. Bumped up to 40 makes them pass. The short-circuit connection fix should help keep an upper bound there, so I&apos;m not too worried about it ATM.&lt;/p&gt;</comment>
                            <comment id="14500606" author="hadoopqa" created="Fri, 17 Apr 2015 20:28:26 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12726202/HBASE-13351-v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12726202/HBASE-13351-v5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0dfeba3d7854c66b80dfc4e0d465d63dce617bb9.&lt;br/&gt;
  ATTACHMENT ID: 12726202&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 36 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13734//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13734//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13734//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13734//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13734//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13734//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13734//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13734//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14500691" author="mantonov" created="Fri, 17 Apr 2015 21:17:41 +0000"  >&lt;p&gt;+1 (non-binding), long-awaited green run.&lt;/p&gt;

&lt;p&gt;I&apos;m not exactly sure if the build took longer (2 hr 40m) as a direct result of that or due to some other reason, but in any case, tests were going to be affected somewhat by this change.&lt;/p&gt;</comment>
                            <comment id="14506194" author="mantonov" created="Wed, 22 Apr 2015 01:19:54 +0000"  >&lt;p&gt;This patch has kind of stalled a bit on reviews..?&lt;/p&gt;</comment>
                            <comment id="14516209" author="ndimiduk" created="Tue, 28 Apr 2015 02:27:26 +0000"  >&lt;p&gt;Gentle reminder here for reviewers. Have concerns been addressed? Thanks.&lt;/p&gt;</comment>
                            <comment id="14516541" author="devaraj" created="Tue, 28 Apr 2015 06:56:23 +0000"  >&lt;p&gt;Skimmed. Looks good. The one nit I have though is whether the configs to do with metahandler count and the handler threads that are changed in the various tests should instead be put in the hbase-site.xml that we have for tests (e.g., hbase-server/src/test/resources/hbase-site.xml)&lt;/p&gt;</comment>
                            <comment id="14516628" author="anoop.hbase" created="Tue, 28 Apr 2015 08:10:59 +0000"  >&lt;p&gt;Looks good.&lt;br/&gt;
Any way we can write a FT test to assert that the RS-&amp;gt;Master APIs are treated with higher priority. I see your UT for asserting the annotation.  Not blocking for commit though.&lt;br/&gt;
+1&lt;/p&gt;</comment>
                            <comment id="14517198" author="elserj" created="Tue, 28 Apr 2015 15:25:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;whether the configs to do with metahandler count and the handler threads that are changed in the various tests should instead be put in the hbase-site.xml that we have for tests (e.g., hbase-server/src/test/resources/hbase-site.xml)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh, how about that. I wasn&apos;t aware of that configuration file &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. The drawback would be increasing the thread footprint of tests that don&apos;t need the larger thread pools. It would help from test cluster consistency so that may be worth it. Happy to do it if you think it&apos;s worth it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Any way we can write a FT test to assert that the RS-&amp;gt;Master APIs are treated with higher priority. I see your UT for asserting the annotation. Not blocking for commit though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, I&apos;d be happy to try to verify that. I&apos;m not sure of the best way off the top of my head, maybe mock out the thread pools for each handler and spoof some calls and make sure they hit the right pools? I&apos;ll file a follow-on to make sure this doesn&apos;t get lost.&lt;/p&gt;

&lt;p&gt;Thanks for the reviews, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="14517623" author="devaraj" created="Tue, 28 Apr 2015 18:36:16 +0000"  >&lt;p&gt;I am okay either way. +1 for commit.&lt;/p&gt;</comment>
                            <comment id="14518105" author="mantonov" created="Tue, 28 Apr 2015 21:26:09 +0000"  >&lt;p&gt;The patch does set DEFAULT_REGION_SERVER_HIGH_PRIORITY_HANDLER_COUNT in HConstants to higher value, right?&lt;/p&gt;</comment>
                            <comment id="14518371" author="ndimiduk" created="Tue, 28 Apr 2015 23:50:11 +0000"  >&lt;p&gt;I see some tentative +1&apos;s. Anyone willing to commit in the next couple hours?&lt;/p&gt;</comment>
                            <comment id="14518842" author="devaraj" created="Wed, 29 Apr 2015 06:46:41 +0000"  >&lt;p&gt;Done &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;. Thanks for the patch Josh!&lt;/p&gt;</comment>
                            <comment id="14518932" author="hudson" created="Wed, 29 Apr 2015 08:05:21 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.1 #444 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/444/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/444/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt; Annotate internal MasterRpcServices methods with admin priority (Josh Elser) (ddas: rev 0165fe6ce47eb97b26cfe9b18a4564eb6c3063d8)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/TestExportSnapshot.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterPriorityRpc.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicaFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestRollingRestart.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQosFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestCloneSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/QosPriority.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt; Addendum to remove reference to MasterTests class (ddas: rev 2ac0855c901d5eb1ecf738a57bfc8d6f5fe9223d)&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterPriorityRpc.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14518933" author="hudson" created="Wed, 29 Apr 2015 08:05:22 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6433 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6433/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6433/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt;. Annotate internal MasterRpcServices methods with admin priority (Josh Elser) (ddas: rev b27e9e70be888b50b2ceb21e16d201f6aba9ad42)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestCloneSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterPriorityRpc.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicaFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/QosPriority.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQosFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestRollingRestart.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/TestExportSnapshot.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14518934" author="hudson" created="Wed, 29 Apr 2015 08:05:26 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #41 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/41/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/41/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt; Annotate internal MasterRpcServices methods with admin priority (Josh Elser) (ddas: rev 8aae3bfab67e2840a1d7c6c4a8d55ab9fce916d2)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestCloneSnapshotFromClient.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionReplicaFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestQosFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/snapshot/TestExportSnapshot.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterPriorityRpc.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestRollingRestart.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/QosPriority.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13351&quot; title=&quot;Annotate internal MasterRpcServices methods with admin priority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13351&quot;&gt;&lt;del&gt;HBASE-13351&lt;/del&gt;&lt;/a&gt; Addendum to remove reference to MasterTests class (ddas: rev 699460aae006bcce8d1a3167d9eca2b21429f50b)&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterPriorityRpc.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14519446" author="elserj" created="Wed, 29 Apr 2015 14:38:34 +0000"  >&lt;p&gt;Sweet. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=devaraj&quot; class=&quot;user-hover&quot; rel=&quot;devaraj&quot;&gt;Devaraj Das&lt;/a&gt; for the apply and everyone else who spent time looking over this and giving feedback!&lt;/p&gt;</comment>
                            <comment id="14571048" author="ndimiduk" created="Wed, 3 Jun 2015 15:28:33 +0000"  >&lt;p&gt;Closing issues released in 1.1.0.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12826367">HBASE-13603</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12787254">HBASE-13375</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12743619">HBASE-12071</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12707949" name="HBASE-13351-v1.patch" size="16074" author="elserj" created="Sat, 28 Mar 2015 01:37:27 +0000"/>
                            <attachment id="12724089" name="HBASE-13351-v2.patch" size="19347" author="elserj" created="Thu, 9 Apr 2015 01:10:47 +0000"/>
                            <attachment id="12725667" name="HBASE-13351-v3.patch" size="19360" author="elserj" created="Wed, 15 Apr 2015 20:08:59 +0000"/>
                            <attachment id="12726057" name="HBASE-13351-v4.patch" size="20286" author="elserj" created="Fri, 17 Apr 2015 03:47:21 +0000"/>
                            <attachment id="12726202" name="HBASE-13351-v5.patch" size="24761" author="elserj" created="Fri, 17 Apr 2015 17:44:03 +0000"/>
                            <attachment id="12707920" name="HBASE-13351.patch" size="14354" author="elserj" created="Fri, 27 Mar 2015 23:37:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 28 Mar 2015 00:42:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 28 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i27gu7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>