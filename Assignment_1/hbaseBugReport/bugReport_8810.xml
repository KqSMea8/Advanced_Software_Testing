<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:58:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8810/HBASE-8810.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8810] Bring in code constants in line with default xml&apos;s</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8810</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;After the defaults were changed in the xml some constants were left the same.&lt;/p&gt;

&lt;p&gt;DEFAULT_HBASE_CLIENT_PAUSE for example.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12655014">HBASE-8810</key>
            <summary>Bring in code constants in line with default xml&apos;s</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="eclark">Elliott Clark</assignee>
                                    <reporter username="eclark">Elliott Clark</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Jun 2013 20:35:45 +0000</created>
                <updated>Wed, 16 Sep 2015 09:05:12 +0000</updated>
                            <resolved>Wed, 16 Sep 2015 09:05:12 +0000</resolved>
                                                                    <component>Usability</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13694480" author="anoop.hbase" created="Thu, 27 Jun 2013 04:22:28 +0000"  >&lt;p&gt;Some more&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;HConstants
public static final float HFILE_BLOCK_CACHE_SIZE_DEFAULT = 0.25f;

MemStoreFlusher
private static final float DEFAULT_LOWER = 0.35f;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Pls see my comment here &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8450?focusedCommentId=13671133&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13671133&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-8450?focusedCommentId=13671133&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13671133&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13694948" author="eclark" created="Thu, 27 Jun 2013 18:47:31 +0000"  >&lt;p&gt;Thanks I&apos;ll add those to my patch.&lt;/p&gt;</comment>
                            <comment id="13698781" author="nkeywal" created="Wed, 3 Jul 2013 09:30:50 +0000"  >&lt;p&gt;Following the discussion in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6295&quot; title=&quot;Possible performance improvement in client batch operations: presplit and send in background&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6295&quot;&gt;&lt;del&gt;HBASE-6295&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I do agree that we should combine all of the test hbase-site.xml&apos;s into one so that there&apos;s less confusion on which is being used.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we could have:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;a file called hbase-settings-sample.xml that would not be included when we read the conf (while we read hbase-default and hbase-site today). It would be for documentation only.&lt;/li&gt;
	&lt;li&gt;a unit test to load this file and compare with the code default, to ensure our doc is in line with the code.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="13699395" author="stack" created="Wed, 3 Jul 2013 20:17:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;a file called hbase-settings-sample.xml that would not be included when we read the conf (while we read hbase-default and hbase-site today). It would be for documentation only.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We could generate a hbase-default.&lt;/p&gt;
{html,txt}
&lt;p&gt; from hbase-default.xml into conf dir?  Or just put a README.txt into the conf or an xml comment into hbase-site.template.xml which pointed at the refguide or where to find hbase-default.xml in src or in jar?  This would be less likely to rot in a user deploy?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;a unit test to load this file and compare with the code default, to ensure our doc is in line with the code.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is a good idea except except how would it work?  How would the unit test find the code default setting?&lt;/p&gt;</comment>
                            <comment id="13699419" author="nkeywal" created="Wed, 3 Jul 2013 20:50:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;Or just put a README.txt into the conf or an xml comment into hbase-site.template.xml which pointed at the refguide or where to find hbase-default.xml in src or in jar? This would be less likely to rot in a user deploy?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think so &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is a good idea except except how would it work? How would the unit test find the code default setting?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I was thinking about loading hbase-default-sample and then checking against the value in HConstant by reflexivity.&lt;/p&gt;</comment>
                            <comment id="13699453" author="stack" created="Wed, 3 Jul 2013 21:20:52 +0000"  >&lt;p&gt;Here is result of a little experiment where I generate a java constants file from hbase-default.xml.&lt;/p&gt;

&lt;p&gt;Here is how I ran did the generation:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ java -classpath /opt/local/share/java/saxon9he.jar  net.sf.saxon.Transform -xsl:hbase-default_to_java_constants.xsl  ~/checkouts/hbase/hbase-common/src/main/resources/hbase-&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;.xml &amp;gt; HBaseDefaultXMLConstants.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We could have the build do this for us if we wanted.&lt;/p&gt;

&lt;p&gt;Attached are stylesheet and example generated class.   Needs a bit of work including marking the hbase-default.xml w/ type information; e.g. if a String, I&apos;d supply quotes.&lt;/p&gt;</comment>
                            <comment id="13699604" author="stack" created="Wed, 3 Jul 2013 23:47:33 +0000"  >&lt;p&gt;Bringing into 0.95.2.&lt;/p&gt;</comment>
                            <comment id="13699743" author="stack" created="Thu, 4 Jul 2013 03:52:46 +0000"  >&lt;p&gt;The hbase-default.xml is hard to get rid of.  While it is a pain to update it and code, hbase-default.xml is used to publish those configs. we think operators should be concerned with, it is used to generate documentation (the descriptions are in the xml file and no where else), and we sometimes make use of the interpolation feature which substitutes variables w/ environment defines: e.g. user or tmp.dir.&lt;/p&gt;

&lt;p&gt;So, styling hbase-default.xml to produce a constants file to include would be a bunch of work, too much work.&lt;/p&gt;

&lt;p&gt;1. I&apos;d have to add type attributes to hbase-default.xml and then in stylesheet dependent on whether string, boolean, int or long, format the value appropriately (bunch of ugly xsl).&lt;br/&gt;
2. Change build to generate then include this new file.&lt;br/&gt;
3. Go through code and change all hbase-default.xml properties to instead get their values out of this constants file.&lt;br/&gt;
4. Put in place docs and some constraint so adding a value to hbase-default.xml, you somehow would get it all right.&lt;/p&gt;

&lt;p&gt;Let me see if can generate unit test from hbase-default.xml.  Will have same typing issue though....&lt;/p&gt;</comment>
                            <comment id="13699762" author="stack" created="Thu, 4 Jul 2013 04:38:04 +0000"  >&lt;p&gt;Here is patch that has stylesheet to produce a junit test.  We can ignore typing just comparing strings of numbers, booleans, or strings.  What is missing now is finding in code where the defines are and adding calls in here.  This masses up our being able to generate this junit test going forward.  Any ideas for avoiding hard-coding the tests (and the variables we test)?  I could do defines in HConstants for all in hbase-default.xml?&lt;/p&gt;</comment>
                            <comment id="13699770" author="stack" created="Thu, 4 Jul 2013 04:56:39 +0000"  >&lt;p&gt;Here is the constants-making script and generated java files.  Typing is the issue.&lt;/p&gt;</comment>
                            <comment id="13699832" author="nkeywal" created="Thu, 4 Jul 2013 07:43:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;So, styling hbase-default.xml to produce a constants file to include would be a bunch of work, too much work. (bunch of ugly xsl).&lt;/p&gt;&lt;/blockquote&gt;


&lt;p&gt;I was thinking about something like this:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;hand written XML file, as today, except it is NOT loaded. We always use the code defaults&lt;/li&gt;
	&lt;li&gt;so we have one duplication (on this file and in the code), and we check it with a test.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;void testDefaultOk(){&lt;br/&gt;
    Configuration file = new Configuration();&lt;br/&gt;
    file.load(&quot;hbase-default-sample.xml&quot;);&lt;/p&gt;

&lt;p&gt;     Class&amp;lt;?&amp;gt; code = HConstant.class;&lt;br/&gt;
    for (String key: file.keys)&lt;/p&gt;
{
      String fileVal = file.get(key);
      String codeVal = &quot;&quot; + code.getField(&quot;DEFAULT_&quot; + key).val;
      Assert.assertEquals(codeVal, fileVal)
    }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;The issue with the generation .xml --&amp;gt; java is that we will need to add the typing in the xml (w/o this, we won&apos;t find an heuristic to choose between long &amp;amp; integer imho).&lt;/p&gt;</comment>
                            <comment id="13700199" author="stack" created="Thu, 4 Jul 2013 16:45:14 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; I&apos;d have to do the interpolations in code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &amp;lt;name&amp;gt;hbase.tmp.dir&amp;lt;/name&amp;gt;
  &amp;lt;value&amp;gt;${java.io.tmpdir}/hbase-${user.name}&amp;lt;/value&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;... which is then used later in stuff like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     &amp;lt;name&amp;gt;hbase.rootdir&amp;lt;/name&amp;gt;
     &amp;lt;value&amp;gt;file:&lt;span class=&quot;code-comment&quot;&gt;//${hbase.tmp.dir}/hbase&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Won&apos;t we have typing issue if we go your approach too?&lt;/p&gt;

&lt;p&gt;file.get returns a String.&lt;/p&gt;

&lt;p&gt;code.getField returns an Object (could be a String, could be long, etc.)&lt;/p&gt;

&lt;p&gt;Since types are not same, overloading will not be able to discern the right assertEquals&lt;/p&gt;

&lt;p&gt;I&apos;m fine hand-coding this all up but would like to avoid having to do update in two places.&lt;/p&gt;

&lt;p&gt;Could we mark public configs w/ annotation and generate the xml for inclusion in doc?  (There would still be the interpolation issue &amp;#8211; though I suppose this ain&apos;t the end of the world; we could just do system properties).&lt;/p&gt;</comment>
                            <comment id="13700233" author="nkeywal" created="Thu, 4 Jul 2013 17:22:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;Won&apos;t we have typing issue if we go your approach too?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it will work because I&apos;m converting the code value to a String, so I compare two strings.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&amp;lt;value&amp;gt;&lt;a href=&quot;file://${hbase.tmp.dir}/hbase&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file://${hbase.tmp.dir}/hbase&lt;/a&gt;&amp;lt;/value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I don&apos;t know for this one.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;public configs w/ annotation and generate the xml for inclusion in doc&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We can do that as well. Or we can ensure that the javadoc is very good and use it as a reference (this would solve everything actually).&lt;/p&gt;</comment>
                            <comment id="13700292" author="stack" created="Thu, 4 Jul 2013 18:41:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;Or we can ensure that the javadoc is very good and use it as a reference (this would solve everything actually).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We&apos;d break out the configs we think operators might want to tweak to a special java file and then we&apos;d point at it in the refguide?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think it will work because I&apos;m converting the code value to a String, so I compare two strings.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see.  Yes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t know for this one.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think we could work around this using system property so its easy-enough to override&lt;/p&gt;</comment>
                            <comment id="13700544" author="nkeywal" created="Fri, 5 Jul 2013 08:58:03 +0000"  >&lt;p&gt;I&apos;ve written this&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; org.apache.hadoop.hbase;


&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.commons.logging.Log;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.commons.logging.LogFactory;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.conf.Configuration;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.experimental.categories.Category;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.lang.reflect.Field;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Map;

@Category(SmallTests.class)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestDefaultSettings {

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Log LOG =
      LogFactory.getLog(TestDefaultSettings.class);

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; codeNameFromXMLName(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; xmlName){
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; codeName = &lt;span class=&quot;code-quote&quot;&gt;&quot;DEFAULT_&quot;&lt;/span&gt; + xmlName.toUpperCase().replace(&apos;.&apos;, &apos;_&apos;).trim();

    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; codeName;
  }

  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testDefaultSettings() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IllegalAccessException {
    Configuration codeConf = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Configuration();
    Configuration xmlConf  = HBaseConfiguration.create();

    &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; hcc = HConstants.class;

    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; e : xmlConf){
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; xmlName =  e.getKey();
      &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; codeName =  codeNameFromXMLName(xmlName);
      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        Field f = hcc.getField(codeName);
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; codeVal = (&quot;&quot; + f.get(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)).trim();

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e.getValue().equals(codeVal)){
          &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;OK  xmlName: &quot;&lt;/span&gt; + xmlName + &lt;span class=&quot;code-quote&quot;&gt;&quot;, codeConf: code=&quot;&lt;/span&gt; + codeVal + &lt;span class=&quot;code-quote&quot;&gt;&quot;   xml=&quot;&lt;/span&gt; + e.getValue());
        }&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
          &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.err.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;NOK xmlName: &quot;&lt;/span&gt; + xmlName + &lt;span class=&quot;code-quote&quot;&gt;&quot;, codeConf: code=&quot;&lt;/span&gt; + codeVal + &lt;span class=&quot;code-quote&quot;&gt;&quot;   xml=&quot;&lt;/span&gt; + e.getValue());
        }
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (NoSuchFieldException e1) {
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;               NoSuchFieldException: xmlName: &quot;&lt;/span&gt; + xmlName + &lt;span class=&quot;code-quote&quot;&gt;&quot;, &quot;&lt;/span&gt; + &lt;span class=&quot;code-quote&quot;&gt;&quot;codeConf: code=&quot;&lt;/span&gt; + codeName + &lt;span class=&quot;code-quote&quot;&gt;&quot;   xml=&quot;&lt;/span&gt; + e.getKey());
      }
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But it&apos;s not a huge success because the naming differs in most cases.&lt;/p&gt;</comment>
                            <comment id="13702618" author="stack" created="Mon, 8 Jul 2013 23:27:55 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt; Sounds like aligning the constants w/ the hbase-default.xml would be a big undertaking.  How to proceed with this issue?  Let Elliott and Anoops have their issue back and commit their patch for now that does some fixup and then continue the make-it-all-javadoc in another issue?&lt;/p&gt;</comment>
                            <comment id="13736004" author="stack" created="Sat, 10 Aug 2013 19:08:05 +0000"  >&lt;p&gt;Moving out.&lt;/p&gt;</comment>
                            <comment id="13758123" author="nkeywal" created="Wed, 4 Sep 2013 18:27:46 +0000"  >&lt;p&gt;I forgot about this one. Sorry.&lt;/p&gt;

&lt;p&gt;I&apos;m gonna propose a stupid patch for the main differences. By stupid I mean nothing fancy, just grep &amp;amp; change.&lt;/p&gt;</comment>
                            <comment id="13760395" author="nkeywal" created="Fri, 6 Sep 2013 17:33:23 +0000"  >&lt;p&gt;here is the result of a pass on the current defaults:&lt;/p&gt;

&lt;p&gt;hbase.master.logcleaner.ttl ok&lt;br/&gt;
hbase.master.catalog.timeout NOK not used anymore&lt;br/&gt;
hbase.master.dns.interface ok&lt;br/&gt;
hbase.master.dns.nameserver ok&lt;br/&gt;
hbase.regionserver.port ok&lt;br/&gt;
hbase.regionserver.info.port.auto NOK not used&lt;br/&gt;
hbase.regionserver.msginterval ok&lt;br/&gt;
hbase.regionserver.optionallogflushinterval ok&lt;br/&gt;
hbase.regionserver.regionSplitLimit ok&lt;br/&gt;
hbase.regionserver.logroll.period ok&lt;br/&gt;
hbase.regionserver.logroll.errors.tolerated NOK 2 or 0&lt;br/&gt;
hbase.regionserver.hlog.reader.impl ok&lt;br/&gt;
hbase.regionserver.global.memstore.upperLimit ok&lt;br/&gt;
hbase.regionserver.global.memstore.lowerLimit NOK .38 or .35&lt;br/&gt;
hbase.regionserver.optionalcacheflushinterval ok&lt;br/&gt;
hbase.regionserver.catalog.timeout NOK not used&lt;br/&gt;
hbase.regionserver.dns.interface ok&lt;br/&gt;
zookeeper.session.timeout NOK 3 minutes, 90s, 180 * 1000&lt;br/&gt;
zookeeper.znode.rootserver ok&lt;br/&gt;
hbase.zookeeper.peerport ok&lt;br/&gt;
hbase.zookeeper.leaderport ok&lt;br/&gt;
hbase.zookeeper.useMulti NOK true &amp;amp; false&lt;br/&gt;
hbase.config.read.zookeeper.config ok&lt;br/&gt;
hbase.client.write.buffer ok&lt;br/&gt;
hbase.client.pause NOK 100 1000&lt;br/&gt;
hbase.client.retries.number NOK 31 35&lt;br/&gt;
hbase.client.scanner.caching ok&lt;br/&gt;
hbase.client.keyvalue.maxsize NOK -1 and other&lt;br/&gt;
hbase.client.scanner.timeout.period ok&lt;br/&gt;
hbase.bulkload.retries.number ok&lt;br/&gt;
hbase.balancer.period ok&lt;br/&gt;
hbase.regions.slop NOK 0.01 .02&lt;br/&gt;
hbase.server.thread.wakefrequency NOK 10000 60000&lt;br/&gt;
hbase.server.versionfile.writeattempts ok&lt;br/&gt;
hbase.hregion.memstore.flush.size ok&lt;br/&gt;
hbase.hregion.preclose.flush.size ok&lt;br/&gt;
hbase.hregion.memstore.block.multiplier ok&lt;br/&gt;
hbase.hregion.memstore.mslab.enabled ok&lt;br/&gt;
hbase.hregion.max.filesize ok&lt;br/&gt;
hbase.hregion.majorcompaction ok&lt;br/&gt;
hbase.hregion.majorcompaction.jitter ok&lt;br/&gt;
hbase.hstore.compactionThreshold ok&lt;br/&gt;
hbase.hstore.blockingStoreFiles NOK 10 7&lt;br/&gt;
hbase.hstore.blockingWaitTime ok&lt;br/&gt;
hbase.hstore.compaction.max ok&lt;br/&gt;
hbase.hstore.compaction.kv.max ok&lt;br/&gt;
hbase.storescanner.parallel.seek.enable ok&lt;br/&gt;
hbase.storescanner.parallel.seek.threads ok&lt;br/&gt;
hfile.block.cache.size NOK 0.4 0.25&lt;br/&gt;
hfile.block.index.cacheonwrite ok&lt;br/&gt;
hfile.format.version ok&lt;br/&gt;
hfile.block.bloom.cacheonwrite ok&lt;br/&gt;
hbase.rs.cacheblocksonwrite ok&lt;br/&gt;
hbase.ipc.client.tcpnodelay ok&lt;br/&gt;
hbase.hstore.bytes.per.checksum ok&lt;/p&gt;</comment>
                            <comment id="13767690" author="stack" created="Sun, 15 Sep 2013 05:15:30 +0000"  >&lt;p&gt;Purging the unused would be coolio and fixing up the mismatches would help too.&lt;/p&gt;</comment>
                            <comment id="14747174" author="eclark" created="Wed, 16 Sep 2015 09:05:12 +0000"  >&lt;p&gt;Fixed most of these in other issues.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12666935">HBASE-9436</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12590781" name="8810.txt" size="50347" author="stack" created="Thu, 4 Jul 2013 04:38:04 +0000"/>
                            <attachment id="12590782" name="8810v2.txt" size="123092" author="stack" created="Thu, 4 Jul 2013 04:56:39 +0000"/>
                            <attachment id="12590721" name="HBaseDefaultXMLConstants.java" size="37106" author="stack" created="Wed, 3 Jul 2013 21:21:42 +0000"/>
                            <attachment id="12590722" name="hbase-default_to_java_constants.xsl" size="1553" author="stack" created="Wed, 3 Jul 2013 21:21:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 27 Jun 2013 04:22:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>335291</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 13 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1lu3z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>335615</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>