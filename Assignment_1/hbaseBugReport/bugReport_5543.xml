<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:28:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5543/HBASE-5543.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5543] Add a keepalive option for IPC connections</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5543</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;On the user list someone wrote in with a connection failure due to a long running coprocessor:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On Wed, Mar 7, 2012 at 10:59 PM, raghavendhra rahul wrote:&lt;br/&gt;
2012-03-08 12:03:09,475 WARN org.apache.hadoop.ipc.HBaseServer: IPC Server Responder, call execCoprocessor([B@50cb21, getProjection(), rpc version=1, client version=0, methodsFingerPrint=0), rpc version=1, client version=29, methodsFingerPrint=54742778 from 10.184.17.26:46472: output error&lt;br/&gt;
2012-03-08 12:03:09,476 WARN org.apache.hadoop.ipc.HBaseServer: IPC Server handler 7 on 60020 caught: java.nio.channels.ClosedChannelException&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I suggested in response we might consider give our RPC a keepalive option for calls that may run for a long time (like execCoprocessor).&lt;/p&gt;

&lt;p&gt;LarsH +1ed the idea:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;+1 on &quot;keepalive&quot;. It&apos;s a shame (especially for long running server code) to do all the work, just to find out at the end that the client has given up.&lt;/p&gt;

&lt;p&gt;Or maybe there should be a way to cancel an operation if the clients decides it does not want to wait any longer (PostgreSQL does that for example). Here that would mean the server would need to check periodically and coprocessors would need to be written to support that - so maybe that&apos;s no-starter.&lt;/p&gt;&lt;/blockquote&gt;</description>
                <environment></environment>
        <key id="12545709">HBASE-5543</key>
            <summary>Add a keepalive option for IPC connections</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Mar 2012 20:52:11 +0000</created>
                <updated>Sat, 11 Apr 2015 01:20:01 +0000</updated>
                            <resolved>Sat, 11 Apr 2015 01:20:01 +0000</resolved>
                                                                    <component>Client</component>
                    <component>Coprocessors</component>
                    <component>IPC/RPC</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13225566" author="stack" created="Thu, 8 Mar 2012 21:52:27 +0000"  >&lt;p&gt;Yeah, it looks like its inevitable that we&apos;ll ask the server to do legitimate stuff that will take longer than the rpctimeout yet the server is making headway: e.g. the reproducing test case, though a little artificial, for &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4890&quot; title=&quot;fix possible NPE in HConnectionManager&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4890&quot;&gt;&lt;del&gt;HBASE-4890&lt;/del&gt;&lt;/a&gt;  fix possible NPE in HConnectionManager&quot; was asking the regionserver to open 3k regions.&lt;/p&gt;

&lt;p&gt;If its a task like the above, there should be a facility for telling client we&apos;re alive still or we should just refuse the request because it will take too long (The latter we need to do toooo &amp;#8211; from Benoiit.  If server is going to take too long servicing a request, so long the client will be gone by the time its done its work, then refuse the request... don&apos;t do the increment or update that the updating client will not be around to see).&lt;/p&gt;</comment>
                            <comment id="13225573" author="tlipcon" created="Thu, 8 Mar 2012 21:58:21 +0000"  >&lt;p&gt;We have &quot;ipc.client.ping&quot;, right? What we want is sort of the opposite direction of that?&lt;/p&gt;</comment>
                            <comment id="13225575" author="apurtell" created="Thu, 8 Mar 2012 21:59:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;We have &quot;ipc.client.ping&quot;, right? What we want is sort of the opposite direction of that?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s what I had in mind.&lt;/p&gt;</comment>
                            <comment id="13225803" author="jmhsieh" created="Fri, 9 Mar 2012 03:05:52 +0000"  >&lt;p&gt;Instead of adding to the rpc to make it keep alive longer, maybe be make it async, returning some sort of uuid token that the client can poll (or get notified) for progress instead?&lt;/p&gt;</comment>
                            <comment id="13225818" author="stack" created="Fri, 9 Mar 2012 04:05:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;Instead of adding to the rpc to make it keep alive longer, maybe be make it async, returning some sort of uuid token that the client can poll (or get notified) for progress instead?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I like this idea.&lt;/p&gt;</comment>
                            <comment id="13227333" author="v.himanshu" created="Mon, 12 Mar 2012 06:26:07 +0000"  >&lt;p&gt;What is the scope of the uuid token in the Coprocessor context. The current approach is to subdivide the calls in terms of regions; then submit a Callable object for each of these Regions; obtain a Future object on each of these calls and block until all of them have returned some result. &lt;br/&gt;
So, a uuid from the client side server proxy object, or a list of uuids from all the involved regions, or something more elegant which I am missing. Please suggest. Thanks.&lt;/p&gt;</comment>
                            <comment id="13229551" author="jmhsieh" created="Wed, 14 Mar 2012 19:49:07 +0000"  >&lt;p&gt;A straw man:&lt;/p&gt;

&lt;p&gt;As a mechanism for dealing with long running rpcs, we could adding something similar to what I understand Hadoop&apos;s Progressable class (the uuid could be a reference to this in a map or something).  The coprocessor context would have a ref Progressable that the coprocessor would have to periodically call to demonstrate progress.  If it isn&apos;t called for a while, it is assumed to be hung.&lt;/p&gt;

&lt;p&gt;This could possibly be wired into the hbase rpc mechanism also &amp;#8211; for HBase ServerCallables on the server side, we might add a ref to a Progressable &amp;#8211; if a call is long running (like a bulk call), calls to the progress() method might reset the rpc timeout counter.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 8 Mar 2012 21:52:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>230892</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 40 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02el3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11964</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>