<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:55:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1622/HBASE-1622.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1622] Make KeyValue implement the Comparable interface to make it work with Cascading.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1622</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;As with making Result implement the Comparable interface, this is used for making HBase interact tightly with cascading, so that KeyValues can be put into Tuples.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12429735">HBASE-1622</key>
            <summary>Make KeyValue implement the Comparable interface to make it work with Cascading.</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="erikholstad@gmail.com">Erik Holstad</assignee>
                                    <reporter username="erikholstad@gmail.com">Erik Holstad</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Jul 2009 18:38:29 +0000</created>
                <updated>Fri, 20 Nov 2015 13:01:46 +0000</updated>
                            <resolved>Wed, 12 Aug 2009 22:49:11 +0000</resolved>
                                    <version>0.20.0</version>
                                    <fixVersion>0.20.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12728289" author="erikholstad@gmail.com" created="Tue, 7 Jul 2009 18:47:57 +0000"  >&lt;p&gt;Added Compare interface to KeyValue. Only added the compareTo method since all the logic was already taken care of by the comparators.&lt;br/&gt;
Added a small test just to verify that it works&lt;/p&gt;</comment>
                            <comment id="12728313" author="stack" created="Tue, 7 Jul 2009 19:27:37 +0000"  >&lt;p&gt;Erik, you should make KV a &lt;a href=&quot;http://hadoop.apache.org/core/docs/current/api/org/apache/hadoop/io/WritableComparable.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop.apache.org/core/docs/current/api/org/apache/hadoop/io/WritableComparable.html&lt;/a&gt;.  That&apos;d be better than making it a Writable and a Comparable.&lt;/p&gt;</comment>
                            <comment id="12728315" author="erikholstad@gmail.com" created="Tue, 7 Jul 2009 19:31:42 +0000"  >&lt;p&gt;@Stack, so you say just change the interfaces at the class declaration from Writable, Comparable to WritableComparable?&lt;/p&gt;</comment>
                            <comment id="12728333" author="stack" created="Tue, 7 Jul 2009 20:07:18 +0000"  >&lt;p&gt;Yes.&lt;/p&gt;</comment>
                            <comment id="12728392" author="erikholstad@gmail.com" created="Tue, 7 Jul 2009 22:07:22 +0000"  >&lt;p&gt;Changed from implementing Writable and Comparable to implement WritableComparable.&lt;/p&gt;</comment>
                            <comment id="12728492" author="stack" created="Wed, 8 Jul 2009 04:07:05 +0000"  >&lt;p&gt;Thanks for the patch Erik.&lt;/p&gt;</comment>
                            <comment id="12728495" author="stack" created="Wed, 8 Jul 2009 04:18:27 +0000"  >&lt;p&gt;Backed out the patch and reopened.  We&apos;re using default comparator.  Could be troublesome if catalog keys.  Lets chat Erik.  Same for result.&lt;/p&gt;</comment>
                            <comment id="12728530" author="streamy" created="Wed, 8 Jul 2009 06:28:43 +0000"  >&lt;p&gt;How would the KV know it&apos;s comparator?  Needs to be lightweight.&lt;/p&gt;

&lt;p&gt;Maybe we should have KeyValueComparable or something if we are going to end up extending KV in otherwise unnecessary ways (or more importantly, ways that might lead to misuse in other places).  Would just extend KV and add Comparable interface... we could even optionally pass in comparator on instantiation.&lt;/p&gt;

&lt;p&gt;Might do the same for Result?  I hate to add more classes, especially with long names... just thinking.&lt;/p&gt;</comment>
                            <comment id="12728782" author="erikholstad@gmail.com" created="Wed, 8 Jul 2009 16:42:33 +0000"  >&lt;p&gt;When it comes down to the use in Cascading I don&apos;t think that these things will be a problem, but if people are using the Comparable in other places and for catalog keys, this will cause confusion. I guess one use case would be to put KeyValues in a map and not specify a comparator. &lt;/p&gt;

&lt;p&gt;Not a big fan of Adding more classes either, but maybe we can put them in the mapreduce package or a Cascading package so we have them only where they should be used, to avoid miss use of these new classes too, and strap some warnings in the top.&lt;/p&gt;</comment>
                            <comment id="12728827" author="stack" created="Wed, 8 Jul 2009 18:00:19 +0000"  >&lt;p&gt;I could just commit.  Its only an issue if the KV is from an hbase catalog table.  How likely is that going to be in cascading context?&lt;/p&gt;</comment>
                            <comment id="12728850" author="erikholstad@gmail.com" created="Wed, 8 Jul 2009 18:57:30 +0000"  >&lt;p&gt;For the Cascading use case I really don&apos;t think it will be that much of an issue, since most data processed is not taken from those tables, but it might be confusing for users that might start using these properties in some other context, where it will cause more trouble.&lt;br/&gt;
thinking about it some more, I don&apos;t think that it is a really bad option to add these to classes to the mapreduce package and not pollute KeyValue with more stuff.&lt;br/&gt;
What do you think?&lt;/p&gt;</comment>
                            <comment id="12729890" author="stack" created="Fri, 10 Jul 2009 23:44:10 +0000"  >&lt;p&gt;I started to work on this a little but gave up because need to make a bunch of constructors in the new KVC class.   Here is what I had:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * A {@link java.lang.Comparable} KeyValue.
 * Compares the Key portion only of a KeyValue. Two KeyValues that have same
 * Key though different Value content will be equated.
 */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class KeyValueComparable &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; KeyValue
&lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; WritableComparable&amp;lt;KeyValue&amp;gt; {
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; KeyValue.KVComparator comparator;

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; KeyValueComparable() {
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
  }

  /**
   * @param c Comparator to use.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; KeyValueComparable(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; KeyValue.KVComparator c) {
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.comparator = c == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;? KeyValue.COMPARATOR: c;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; compareTo(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; KeyValue that) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.comparator.compare(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, that);
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12729905" author="stack" created="Sat, 11 Jul 2009 00:14:43 +0000"  >&lt;p&gt;Would this work Erik?&lt;/p&gt;

&lt;p&gt;How will Result work?  Since thats a return out of HBase, maybe you want to wrap the Result in a ResultComparable?  Then have all method invocations on ResultComparable delegated to the wrapped Result?  Maybe KV needs to work this way too?&lt;/p&gt;</comment>
                            <comment id="12729906" author="erikholstad@gmail.com" created="Sat, 11 Jul 2009 00:15:53 +0000"  >&lt;p&gt;I have code for this issue and the Result one already, that I can upload. My implementation actually takes a KeyValue in the constructor so you don&apos;t have to add all the constructors. This will be the use case in Cascading. The problem now is that Cascading is not yet Hadoop 0.20 mapreduce compatible so we can&apos;t use some of the new fancy things that we are using to deal with mapreduce in HBase 0.20. So I propose punting these 2 issues until we can do it right.&lt;/p&gt;</comment>
                            <comment id="12729909" author="erikholstad@gmail.com" created="Sat, 11 Jul 2009 00:21:28 +0000"  >&lt;p&gt;Yeah, I think the above code would work, looks kinda like the code that I have at the moment. Think that Result should be dealt with in the same fashion, since what we are going to get in Cascading is the result from a Scanner -&amp;gt; Result, which is wrapped into a ResultComparable to be able to put it into a Cascading.Tuple. After that you can split it up into it&apos;s individual KeyValues and wrap these in the KeyValueComparable type for the same reasons.&lt;/p&gt;</comment>
                            <comment id="12729950" author="stack" created="Sat, 11 Jul 2009 05:14:49 +0000"  >&lt;p&gt;@Erik: Going by what you say above, you are making an argument that KV and R should just be WritableComparables; creating a new class, a KeyValueComparable by passing in a KV and then giving it to cascading sounds kinda painful.  The only time the Comparable is an issue is internally when we are doing the catalog table compares &amp;#8211; though nothing to stop a user scaning .META. and getting the special KVs back.  Doing a compareTo on these, they&apos;d be hosed.  Here we don&apos;t want to use the KVs internal default comparable but the one that knows how to deal with .META. keys.&lt;/p&gt;

&lt;p&gt;If we have to wait till cascading does new 0.20.0 MR interface, lets punt on these as you suggest but if we really need these things Comparable, would be good to make the change before 0.20.0 release.&lt;/p&gt;

&lt;p&gt;Do they have to be Comparable?  Can we not pass Comparator to use?&lt;/p&gt;</comment>
                            <comment id="12730012" author="erikholstad@gmail.com" created="Sat, 11 Jul 2009 20:37:59 +0000"  >&lt;p&gt;@Stack :Are you saying that you think we should just add comparable to KeyValue and Result and don&apos;t create this other classes? &lt;br/&gt;
According to my understanding, to be able to put a class into a Tuple, which is the structure that you pass around in Cascading, it needs to be comparable, but maybe that is something that we can ask Chris to change, doesn&apos;t seem like a to weird of a request I think. Will send him an email and see what he says, will post his answer.&lt;/p&gt;</comment>
                            <comment id="12731171" author="streamy" created="Tue, 14 Jul 2009 22:38:25 +0000"  >&lt;p&gt;+1 on punting to 0.20.1, if we come up with something sooner we can always bring this back to 0.20.0&lt;/p&gt;</comment>
                            <comment id="12732012" author="streamy" created="Thu, 16 Jul 2009 16:37:11 +0000"  >&lt;p&gt;Punted to 0.20.1 after no objections.&lt;/p&gt;</comment>
                            <comment id="12742633" author="streamy" created="Wed, 12 Aug 2009 22:49:11 +0000"  >&lt;p&gt;Cascading is going to allow for comparators to be passed in.  Don&apos;t need our stuff to be comparable anymore.&lt;/p&gt;</comment>
                            <comment id="15017888" author="lars_francke" created="Fri, 20 Nov 2015 13:01:46 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12413181" name="1622-3.patch" size="8349" author="stack" created="Sat, 11 Jul 2009 00:14:43 +0000"/>
                            <attachment id="12412774" name="HBASE-1622-v1.patch" size="1992" author="erikholstad@gmail.com" created="Tue, 7 Jul 2009 18:47:57 +0000"/>
                            <attachment id="12412796" name="HBASE-1622-v2.patch" size="2859" author="erikholstad@gmail.com" created="Tue, 7 Jul 2009 22:07:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Jul 2009 19:27:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32209</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hebz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99584</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>