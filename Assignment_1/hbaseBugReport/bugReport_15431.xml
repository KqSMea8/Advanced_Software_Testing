<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:03:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15431/HBASE-15431.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15431] A bunch of methods are hot and too big to be inlined</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15431</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I ran HBase with &quot;-XX:+PrintCompilation -XX:+UnlockDiagnosticVMOptions -XX:+PrintInlining&quot; and then looked for &quot;hot method too big&quot; log lines.&lt;/p&gt;

&lt;p&gt;I&apos;ll attach a log of those messages.&lt;br/&gt;
I tried to increase -XX:FreqInlineSize to 1010 to inline all these methods (as long as they&apos;re hot, but actually didn&apos;t see any improvement).&lt;/p&gt;

&lt;p&gt;In all cases I primed the JVM to make sure the JVM gets a chance to profile the methods and decide whether they&apos;re hot or not.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12948249">HBASE-15431</key>
            <summary>A bunch of methods are hot and too big to be inlined</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Mar 2016 02:10:23 +0000</created>
                <updated>Mon, 18 Jul 2016 18:49:48 +0000</updated>
                            <resolved>Mon, 18 Jul 2016 09:10:41 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="15186334" author="lhofhansl" created="Wed, 9 Mar 2016 02:10:50 +0000"  >&lt;p&gt;List of hot and big methods.&lt;/p&gt;</comment>
                            <comment id="15186342" author="lhofhansl" created="Wed, 9 Mar 2016 02:15:41 +0000"  >&lt;p&gt;The load I ran was a Phoenix count&amp;#40;*) query. Note that almost all interesting methods using during scanning are &lt;em&gt;not&lt;/em&gt; inlined.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;SQM.match&lt;/li&gt;
	&lt;li&gt;StoreScanner.next&lt;/li&gt;
	&lt;li&gt;HRegion$RegionScannerImpl::nextInternal&lt;/li&gt;
	&lt;li&gt;HFileReaderV2$ScannerV2::blockSeek&lt;/li&gt;
	&lt;li&gt;FastDiffDeltaEncoder$1::decode&lt;/li&gt;
	&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As said, increasing -XX:FreqInlineSize did not improve things. Presumably because now too much stuff is being inlined.&lt;/p&gt;</comment>
                            <comment id="15186345" author="lhofhansl" created="Wed, 9 Mar 2016 02:18:15 +0000"  >&lt;ul&gt;
	&lt;li&gt;KeyValue::createByteArray ... scary&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15186466" author="ram_krish" created="Wed, 9 Mar 2016 04:13:26 +0000"  >&lt;p&gt;This is 0.98 I belive?&lt;br/&gt;
I think in trunk &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;KeyValue::createByteArray&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Use of this is avoided as much as possible. If still there then an area that could be solved.&lt;/p&gt;</comment>
                            <comment id="15187468" author="lhofhansl" created="Wed, 9 Mar 2016 17:33:39 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Yeah... 0.98, sorry. Good catch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Most should translate to trunk, but some things will be different.&lt;/p&gt;</comment>
                            <comment id="15187490" author="stack" created="Wed, 9 Mar 2016 17:42:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;I tried to increase -XX:FreqInlineSize to 1010 to inline all these methods (as long as they&apos;re hot, but actually didn&apos;t see any improvement).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Was 1010 enough to get the list of methods inlined?&lt;/p&gt;

&lt;p&gt;Would be interesting messing w/ thise hot methods in JNP.&lt;/p&gt;</comment>
                            <comment id="15188823" author="lhofhansl" created="Thu, 10 Mar 2016 07:15:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;Was 1010 enough to get the list of methods inlined?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yep. The largest is 1006 bytes. After that I no longer see any &quot;hot method too big&quot; messages. But performance actually seemed to be slower. So maybe this is a dud...? I looked into breaking up StoreScanner.next(...), it&apos;s pretty messy now, with many exits (continue with the loop, break out of loop, return from the method with result true, return with false, etc). What we want to do is breaking up the larger method so that hot code is separate from the not so hot code. So in StoreScanner.next we&apos;d try to more DONE, DONE_SCAN, maybe XXX_SEEK code to separate methods. That would allow the more frequent and very hot SKIP and INCLUDE code paths to be inlined... But as I said, it&apos;s not a trivial quick fix, it&apos;s need to rethinking of the structure of this method. Others are similar.&lt;/p&gt;</comment>
                            <comment id="15191426" author="apurtell" created="Fri, 11 Mar 2016 19:27:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;After that I no longer see any &quot;hot method too big&quot; messages. But performance actually seemed to be slower. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is why you normally shouldn&apos;t try to tune inlining heuristics. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Note that almost all interesting methods using during scanning are not inlined.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s because interesting == nontrivial == big, right? &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But as I said, it&apos;s not a trivial quick fix, it&apos;s need to rethinking of the structure of this method. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I will venture the opinion that JVM compiler heuristics are pretty good. However it does make sense to look at methods right on the edge that show up as hot. By all means tinker and see if we can get an improvement after a refactor. It&apos;s a bit like prospecting though, you&apos;ll have to drill in a bunch of places before striking oil.&lt;/p&gt;

&lt;p&gt;Edit: And the payoff you see will depend on and vary between major JVM compiler drops. 7u versus 8u. 8u60 versus earlier versions, etc etc.&lt;/p&gt;</comment>
                            <comment id="15381952" author="lhofhansl" created="Mon, 18 Jul 2016 09:10:41 +0000"  >&lt;p&gt;Giving up on this.&lt;/p&gt;</comment>
                            <comment id="15382820" author="appy" created="Mon, 18 Jul 2016 18:49:48 +0000"  >&lt;p&gt;I haven&apos;t done this kind of thing in past, so out of curiosity, i&apos;d like to know what were the things you did and where did you hit the wall. Can you please enlighten us &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;. Thanks.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12792169" name="hotMethods.txt" size="9656" author="lhofhansl" created="Wed, 9 Mar 2016 02:10:50 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 Mar 2016 04:13:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            21 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2udin:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>