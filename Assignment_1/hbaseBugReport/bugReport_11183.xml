<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:20:55 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11183/HBASE-11183.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11183] Timeline Consistent region replicas - Phase 2 design</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11183</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Now that Phase 1 of parent issue &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10070&quot; title=&quot;HBase read high-availability using timeline-consistent region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10070&quot;&gt;&lt;del&gt;HBASE-10070&lt;/del&gt;&lt;/a&gt; is mostly done, it is time to think about remaining items in Phase 2 as per the design doc &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12616659/HighAvailabilityDesignforreadsApachedoc.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12616659/HighAvailabilityDesignforreadsApachedoc.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Phase 2 will conclude the work and include at least the following major features: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Async WAL Replication&lt;/li&gt;
	&lt;li&gt;Replication Interface changes (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10504&quot; title=&quot;Define Replication Interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10504&quot;&gt;HBASE-10504&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;Replication should guarantee seqId order (for region moves and RS failure)&lt;/li&gt;
	&lt;li&gt;Flush / Compaction events should be written to WAL&lt;/li&gt;
	&lt;li&gt;Flush / Memstore handling from secondary regions&lt;/li&gt;
	&lt;li&gt;Region split / merge handling for replicated regions&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In this issue, we can discuss the proposed design, and keep it as like a parent jira for Phase 2 work. We&apos;ll open subtasks agains the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10070&quot; title=&quot;HBase read high-availability using timeline-consistent region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10070&quot;&gt;&lt;del&gt;HBASE-10070&lt;/del&gt;&lt;/a&gt; jira for individual patches. &lt;/p&gt;
</description>
                <environment></environment>
        <key id="12714353">HBASE-11183</key>
            <summary>Timeline Consistent region replicas - Phase 2 design</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12682280">HBASE-10070</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="enis">Enis Soztutar</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 May 2014 23:41:30 +0000</created>
                <updated>Thu, 25 Jun 2015 22:51:54 +0000</updated>
                            <resolved>Thu, 25 Jun 2015 22:51:54 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>17</watches>
                                                                <comments>
                            <comment id="13998276" author="enis" created="Wed, 14 May 2014 23:44:02 +0000"  >&lt;p&gt;Here is an overview design doc for the items listed above. &lt;/p&gt;

&lt;p&gt;Let us know if it makes sense or not. All feedback welcome. &lt;/p&gt;</comment>
                            <comment id="14000418" author="stack" created="Fri, 16 May 2014 22:28:58 +0000"  >&lt;p&gt;When is phase 1 coming in?  How is it going?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This&#160;means&#160;that&#160;the&#160;new&#160;data&#160;will&#160;only&#160;become&#160;available&#160;after&#160;the&#160;primary&#160;does&#160;a&#160;flush,&#160;then&#160;after&#160;some&#160;time&#160;the&#160;secondary&#160;does&#160;the&#160;periodic&#160;file&#160;list&#160;and&#160;sees&#160;the&#160; new&#160;file&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What happens again if a file is compacted away and the replica tries to read it?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&#160;In&#160;case&#160;the&#160;edit&#160;cannot&#160;be&#160;put&#160;to&#160;memstore,&#160;because&#160;of&#160;mem&#160;pressure,&#160;we&#160;will&#160;trigger&#160;a&#160; flush&#160;of&#160;a&#160;primary&#160;region,&#160;and&#160;throw&#160;RegionTooBusyException&#160;which&#160;should&#160;throttle&#160;the&#160;client.&#160;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Throw the exception to the replicating client only?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For&#160;this,&#160;we&#160;will&#160;reintroduce&#160;WALEdits&#160;for&#160;persisting&#160;flush&#160;actions&#160;in&#160;WAL.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Allow&#160;multiple&#160;memstore&#160;snapshots:&#160;This&#160;will&#160;allow&#160;us&#160;to&#160;keep&#160;the&#160;memstore&#160;snapshot&#160; from&#160;aborted&#160;flush&#160;as&#160;it&#160;is.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Anoop needs something like this for his in-memory compaction of memstores.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Whenever&#160;a&#160;secondary&#160;sees&#160;a&#160;compaction&#160;entry,&#160;it&#160;will&#160;go&#160;ahead&#160;and&#160;apply&#160;the&#160;compaction.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nice.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;If replica crashes, it loses all inmemory state.  When it opens again, it will pick up hfiles.  What to do about the gap between the hfiles and what was in memory?  Wait until we get a new flush message from the primary before we start serving?&lt;/del&gt; &amp;lt;-- You answer my question later in the doc.&lt;/p&gt;

&lt;p&gt;Are &quot;Memstore snapshots on the secondary (no flushes for the secondary regions) &quot; and &quot;Allow Flushes for the secondary regions &quot; mutually exclusive &amp;#8211; one or the other?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;.&#160;In&#160;either&#160;of&#160;the&#160;approaches,&#160;new&#160;secondaries&#160;can&#160;be&#160;brought&#160;up&#160;to&#160;speed&#160;based&#160;on&#160;that&#160;data.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Only if the replica comes up post crash on same node?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The&#160;secondary&#160;serves&#160;reads&#160;from&#160;a&#160;merged&#160;view&#160;of&#160;primary&apos;s&#160;store&#160;files,&#160;secondary&apos;s&#160;memstore&#160;and&#160;secondary&apos;s&#160;spill&#160;file&#160;(which&#160; would&#160;be&#160;yet&#160;another&#160;storefile).&#160;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;On first read, strikes me as complicated.&lt;/p&gt;

&lt;p&gt;X-DC replication, each regionserver hosts a client that writes the WAL edits to a RS on remote cluster for it to distribute.  Here, we&apos;d host the distributing HTable instance inside the src RS?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Whenever&#160;a&#160;secondary&#160;starts&#160;serving,&#160;it&#160;will&#160;trigger&#160;a&#160;flush&#160;from&#160;the&#160;primary&#160;region&#160;..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How will this work?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In&#160;this&#160;design,&#160;there&#160;will&#160;be&#160;a&#160;replication&#160;queue&#160;per&#160;table&#160;per&#160;region&#160;replication&#160;count.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So, replication will update zk per region?  What sort of update rates in zk you thinking?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For&#160;replicating&#160;wal&#160;entries&#160;to&#160;secondaries,&#160;the&#160;client&#160;has&#160;to&#160;send&#160;the&#160;WALEdit/WALEntry&#160;objects.&#160;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is this what the client does currently when replicating?  Send WAL*s?  These are FAAAAAATTTTT objects.&lt;/p&gt;

&lt;p&gt;On first read, the first option &amp;#8211; not writing spill files seems more straightforward &amp;#8211; but will reread.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;The split using &apos;sync&apos; may not be tenable given close has data offline and the root of this work is minimizing offline time?  Might be worth a bit of measuring though.&lt;/del&gt; &amp;lt;- You come to same conclusion yourselves later in the doc (&quot;Fools seldom....&quot;).&lt;/p&gt;

&lt;p&gt;Nice write up lads.&lt;/p&gt;









</comment>
                            <comment id="14002552" author="enis" created="Mon, 19 May 2014 23:07:08 +0000"  >&lt;p&gt;Thanks Stack for taking a look. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;When is phase 1 coming in? How is it going? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Phase 1 work is nearly finished. Out of 40+ subtasks and linked issues of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10070&quot; title=&quot;HBase read high-availability using timeline-consistent region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10070&quot;&gt;&lt;del&gt;HBASE-10070&lt;/del&gt;&lt;/a&gt;, all of the 5 remaining jiras are not critical, and can be done in phase 2. We&apos;ll send an overview to the dev list soon. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;What happens again if a file is compacted away and the replica tries to read it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We read the file from the archive location as long as HFile TTL is set long enough it should be fine. Otherwise the secondary will reject the request. The user documentation at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10513&quot; title=&quot;Provide user documentation for region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10513&quot;&gt;&lt;del&gt;HBASE-10513&lt;/del&gt;&lt;/a&gt; mentions this in the configuration settings: &lt;/p&gt;

&lt;p&gt;(referring to hbase.regionserver.storefile.refresh.period) If the&#160;files&#160;cannot&#160;be refreshed&#160;for longer&#160;than HFile&#160;TTL (hbase.master.hfilecleaner.ttl)&#160;the&#160;requests&#160;are&#160;rejected.&#160;Configuring&#160;HFile TTL&#160;to&#160;a&#160;larger&#160;value&#160;is&#160;also&#160;recommended&#160;with&#160;this&#160;setting.&#160;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Throw the exception to the replicating client only?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. Only to the replicating client. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Anoop needs something like this for his in-memory compaction of memstores.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep, I think I am watching that issue. This is useful in general. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Are &quot;Memstore snapshots on the secondary (no flushes for the secondary regions) &quot; and &quot;Allow Flushes for the secondary regions &quot; mutually exclusive &#8211; one or the other?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think they are. We would like to evaluate both approaches to see which one we should go with. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;X-DC replication, each regionserver hosts a client that writes the WAL edits to a RS on remote cluster for it to distribute. Here, we&apos;d host the distributing HTable instance inside the src RS?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. We can directly do puts against the secondary regions in the replication thread. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;How will this work?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we can call the flush RPC and wait until we see that event. Actually, we will not start serving until we see the flush, so it is after region open and before serving. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;So, replication will update zk per region? What sort of update rates in zk you thinking?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Initial design was a replication queue per region. Now it is replication queue per table per region replication count. (2 tables with 3 region replicas = 2 * (3-1) queues). &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Is this what the client does currently when replicating? Send WAL*s? These are FAAAAAATTTTT objects.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is using:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
message ReplicateWALEntryRequest {
  repeated WALEntry entry = 1;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                            <comment id="14006675" author="mantonov" created="Fri, 23 May 2014 01:16:10 +0000"  >&lt;p&gt;Interesting reading!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The&#160;secondary&#160;serves&#160;reads&#160;from&#160;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;a&#160;merged&#160;view&#160;of&#160;primary&apos;s&#160;store&#160;files,&#160;secondary&apos;s&#160;memstore&#160;and&#160;secondary&apos;s&#160;spill&#160;file&#160;(which&#160;&lt;br/&gt;
would&#160;be&#160;yet&#160;another&#160;storefile)&lt;/p&gt;

&lt;p&gt;&quot;Yet another store file&quot; means that&apos;s it&apos;s file in local FS, but just in format of store file?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Though&#160;as&#160;already&#160;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;reported&#160;elsewhere,&#160;region&#160;moves&#160;and&#160;failures&#160;can&#160;cause&#160;concurrent&#160;or&#160;out&#173;of&#173;order&#160;delivery&#160;of&#160;&lt;br/&gt;
wal&#160;edits&#160;to&#160;the&#160;receiving&#160;side&lt;br/&gt;
Is that what happens now in this case for general replication queue, as I understand? out of order delivery of edits, how is it handled in receiving side?&lt;/p&gt;

&lt;p&gt;What are the numbers for replication queue source failover time (compared for example with the ones for RS failover currently - bounded by ZK timeout)?&lt;/p&gt;</comment>
                            <comment id="14007544" author="mantonov" created="Fri, 23 May 2014 18:56:55 +0000"  >&lt;p&gt;Sorry, copy-n-pasted from pdf, formatting evidently broke.&lt;/p&gt;</comment>
                            <comment id="14221856" author="enis" created="Sat, 22 Nov 2014 06:58:58 +0000"  >&lt;p&gt;A little update is in order. Good news is that, we were able to implement most of the stuff in this second phase design, and get it stable enough and useable (although on an earlier code base based on 0.98). I think, over the following weeks (hopefully), we can get most of the patches in master and resolve the remaining subtasks for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10070&quot; title=&quot;HBase read high-availability using timeline-consistent region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10070&quot;&gt;&lt;del&gt;HBASE-10070&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I am attaching an updated design doc, which contains some more details about remaining open tickets under &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10070&quot; title=&quot;HBase read high-availability using timeline-consistent region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10070&quot;&gt;&lt;del&gt;HBASE-10070&lt;/del&gt;&lt;/a&gt;, esp &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11569&quot; title=&quot;Flush / Compaction handling from secondary region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11569&quot;&gt;&lt;del&gt;HBASE-11569&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11580&quot; title=&quot;Failover handling for secondary region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11580&quot;&gt;&lt;del&gt;HBASE-11580&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11842&quot; title=&quot;Integration test for async wal replication to secondary regions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11842&quot;&gt;&lt;del&gt;HBASE-11842&lt;/del&gt;&lt;/a&gt; and memory pressure handling for secondary region replicas. &lt;/p&gt;</comment>
                            <comment id="14498155" author="devaraj" created="Thu, 16 Apr 2015 15:27:01 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; if the design is doc is current with the implementation should this be resolved..&lt;/p&gt;</comment>
                            <comment id="14602096" author="enis" created="Thu, 25 Jun 2015 22:51:54 +0000"  >&lt;p&gt;Resolving. The latest design is in the code, but doc reflects much of reality. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12683040" name="PhaseIIDesignforHBASE-10070.pdf" size="245130" author="enis" created="Sat, 22 Nov 2014 06:58:58 +0000"/>
                            <attachment id="12644914" name="PhaseIIDesignforHBASE-10070.pdf" size="204475" author="enis" created="Wed, 14 May 2014 23:44:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 May 2014 22:28:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>392666</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 25 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1vmcv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>392845</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>