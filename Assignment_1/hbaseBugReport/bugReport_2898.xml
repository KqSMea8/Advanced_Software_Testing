<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:05:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2898/HBASE-2898.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2898] MultiPut makes proper error handling impossible and leads to corrupted data</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2898</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;tl;dr version: I think the &lt;tt&gt;MultiPut&lt;/tt&gt; RPC needs to be completely rewritten.  The current code makes it totally impossible for an HBase client to do proper error handling.  When an edit fails, the client has no clue as to what the problem was (certain error cases can be retried, others cannot e.g. when using a non-existent family) and the client doesn&apos;t even know which of the edits have been applied successfully.  So the client often has to retry edits without knowing whether they&apos;ve been applied or not, which leads to extra unwanted versions for the &lt;tt&gt;KeyValue&lt;/tt&gt; that were successfully applied (for those who care about versions, this is essentially equivalent to data corruption).  In addition, there&apos;s no way for a client to properly handle &lt;tt&gt;NotServingRegionException&lt;/tt&gt;, the client has to unnecessarily invalidate cached locations of some regions and retry &lt;b&gt;all&lt;/b&gt; edits.&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;Lifeofafailedmultiput&quot;&gt;&lt;/a&gt;Life of a failed multi-put&lt;/h2&gt;

&lt;p&gt;Let&apos;s see why step by step what happens when a single edit in a multi-put fails.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;An HBase user calls any of the &lt;tt&gt;put&lt;/tt&gt; methods on an &lt;tt&gt;HTable&lt;/tt&gt; instance.&lt;/li&gt;
	&lt;li&gt;Eventually, &lt;tt&gt;HTable#flushCommits&lt;/tt&gt; is invoked to actually send the edits to the RegionServer(s).&lt;/li&gt;
	&lt;li&gt;This takes us to &lt;tt&gt;HConnectionManager#processBatchOfPuts&lt;/tt&gt; where all edits are sorted into one or more &lt;tt&gt;MultiPut&lt;/tt&gt;.  Each &lt;tt&gt;MultiPut&lt;/tt&gt; is aggregating all the edits that are going to a particular RegionServer.&lt;/li&gt;
	&lt;li&gt;A thread pool is used to send all the &lt;tt&gt;MultiPut&lt;/tt&gt; in parallel to their respective RegionServer.  Let&apos;s follow what happens for a single &lt;tt&gt;MultiPut&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;The &lt;tt&gt;MultiPut&lt;/tt&gt; travels through the IPC code on the client and then through the network and then through the IPC code on the RegionServer.&lt;/li&gt;
	&lt;li&gt;We&apos;re now in &lt;tt&gt;HRegionServer#multiPut&lt;/tt&gt; where a new &lt;tt&gt;MultiPutResponse&lt;/tt&gt; is created.&lt;/li&gt;
	&lt;li&gt;Still in &lt;tt&gt;HRegionServer#multiPut&lt;/tt&gt;.  Since a &lt;tt&gt;MultiPut&lt;/tt&gt; is essentially a map from region name to a list of &lt;tt&gt;Put&lt;/tt&gt; for that region, there&apos;s a &lt;tt&gt;for&lt;/tt&gt; loop that executes each list of &lt;tt&gt;Put&lt;/tt&gt; for each region sequentially.  Let&apos;s follow what happens for a single list of &lt;tt&gt;Put&lt;/tt&gt; for a particular region.&lt;/li&gt;
	&lt;li&gt;We&apos;re now in &lt;tt&gt;HRegionServer#put(byte[], List&amp;lt;Put&amp;gt;)&lt;/tt&gt;.  Each &lt;tt&gt;Put&lt;/tt&gt; is associated with the row lock that was specified by the client (if any).  Then the pairs of &lt;tt&gt;(Put, lock id)&lt;/tt&gt; are handed to the right &lt;tt&gt;HRegion&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;Now we&apos;re in &lt;tt&gt;HRegion#put(Pair&amp;lt;Put, Integer&amp;gt;[])&lt;/tt&gt;, which immediately takes us to &lt;tt&gt;HRegion#doMiniBatchPut&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;At this point, let&apos;s assume that we&apos;re doing just 2 edits.  So the &lt;tt&gt;BatchOperationInProgress&lt;/tt&gt; that &lt;tt&gt;doMiniBatchPut&lt;/tt&gt; contains just 2 &lt;tt&gt;Put&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;The &lt;tt&gt;while&lt;/tt&gt; loop in &lt;tt&gt;doMiniBatchPut&lt;/tt&gt; that&apos;s going to execute each &lt;tt&gt;Put&lt;/tt&gt; starts.&lt;/li&gt;
	&lt;li&gt;The first &lt;tt&gt;Put&lt;/tt&gt; fails because an exception is thrown when appending the edit to the &lt;tt&gt;WAL&lt;/tt&gt;.  Its &lt;tt&gt;batchOp.retCodes&lt;/tt&gt; is marked as &lt;tt&gt;OperationStatusCode.FAILURE&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;Because there was an exception, we&apos;re back to &lt;tt&gt;HRegion#put(Pair&amp;lt;Put, Integer&amp;gt;[])&lt;/tt&gt; where the &lt;tt&gt;while&lt;/tt&gt; loop will test that &lt;tt&gt;batchOp.isDone&lt;/tt&gt; is &lt;tt&gt;false&lt;/tt&gt; and do another iteration.&lt;/li&gt;
	&lt;li&gt;&lt;tt&gt;doMiniBatchPut&lt;/tt&gt; is called again and handles the remaining &lt;tt&gt;Put&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;The second &lt;tt&gt;Put&lt;/tt&gt; succeeds normally, so its &lt;tt&gt;batchOp.retCodes&lt;/tt&gt; is marked as &lt;tt&gt;OperationStatusCode.SUCCESS&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;tt&gt;doMiniBatchPut&lt;/tt&gt; is done and returns to &lt;tt&gt;HRegion#put(Pair&amp;lt;Put, Integer&amp;gt;[])&lt;/tt&gt;, which returns to &lt;tt&gt;HRegionServer#put(byte[], List&amp;lt;Put&amp;gt;)&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;At this point, &lt;tt&gt;HRegionServer#put(byte[], List&amp;lt;Put&amp;gt;)&lt;/tt&gt; does a &lt;tt&gt;for&lt;/tt&gt; loop and extracts the index of the &lt;b&gt;first&lt;/b&gt; &lt;tt&gt;Put&lt;/tt&gt; that failed out of the &lt;tt&gt;OperationStatusCode[]&lt;/tt&gt;.  In our case, it&apos;ll return 0 since the first &lt;tt&gt;Put&lt;/tt&gt; failed.&lt;/li&gt;
	&lt;li&gt;This index in the list of &lt;tt&gt;Put&lt;/tt&gt; of the first that failed (0 in this case) is returned to &lt;tt&gt;HRegionServer#multiPut&lt;/tt&gt;, which records in the &lt;tt&gt;MultiPutResponse&lt;/tt&gt; - the client knows that the first &lt;tt&gt;Put&lt;/tt&gt; failed but has no idea about the other one.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;So the client has no reliable way of knowing which &lt;tt&gt;Put&lt;/tt&gt; failed (if any) past the first failure.  All it knows is that for a particular region, they succeeded up to a particular &lt;tt&gt;Put&lt;/tt&gt;, at which point there was a failure, and then the remaining may or may not have succeeded.  Its best bet is to retry all the &lt;tt&gt;Put&lt;/tt&gt; past the index of the first failure for this region.  But this has an unintended consequence.  The &lt;tt&gt;Put&lt;/tt&gt; that were successful during the first run will be &lt;b&gt;re-applied&lt;/b&gt;.  This will unexpectedly create extra versions.  Now I realize most people don&apos;t really care about versions, so they won&apos;t notice.  But whoever relies on the versions for whatever reason will rightfully consider this to be data corruption.&lt;/p&gt;

&lt;p&gt;As it is now, &lt;tt&gt;MultiPut&lt;/tt&gt; makes proper error handling impossible.  Since this RPC cannot guarantee any atomicity other than at the individual &lt;tt&gt;Put&lt;/tt&gt; level, it should return to the client specific information about which &lt;tt&gt;Put&lt;/tt&gt; failed in case of a failure, so that the client can do proper error handling.&lt;/p&gt;

&lt;p&gt;This requires us to change the &lt;tt&gt;MultiPutResponse&lt;/tt&gt; so that it can indicate which &lt;tt&gt;Put&lt;/tt&gt; specifically failed.  We could do this for instance by giving the index of the &lt;tt&gt;Put&lt;/tt&gt; along with its &lt;tt&gt;OperationStatusCode&lt;/tt&gt;.  So in the scenario above, the &lt;tt&gt;MultiPutResponse&lt;/tt&gt; would essentially return something like: &quot;for that particular region, put #0 failed, put #1 succeeded&quot;.  If we want to save a bit of space, we may want to omit the successes from the response and only mention the failures - so a response that doesn&apos;t mention any failure means that everything was successful.  Not sure whether that&apos;s a good idea though.&lt;/p&gt;

&lt;p&gt;Since doing this require an incompatible RPC change, I propose that we take the opportunity to rewrite the &lt;tt&gt;MultiPut&lt;/tt&gt; RPC too.  Right now it&apos;s very inefficient, it&apos;s just a hack on top of &lt;tt&gt;Put&lt;/tt&gt;.  When &lt;tt&gt;MultiPut&lt;/tt&gt; is written to the wire, a lot of unnecessary duplicate data is sent out.  The timestamp, the row key and the family are sent out to the wire N+1 times, where N is the number of edits for a particular row, instead of just once &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/warning.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;Alternatively, if we don&apos;t want to change the RPCs, we can fix this issue in a backward compatible way by making the &lt;tt&gt;while&lt;/tt&gt; loop in &lt;tt&gt;HRegion#put(Pair&amp;lt;Put, Integer&amp;gt;[])&lt;/tt&gt; stop as soon as a failure is encountered.&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;Inabilitytoproperlyhandle%7B%7BNotServingRegionException%7D%7D&quot;&gt;&lt;/a&gt;Inability to properly handle &lt;tt&gt;NotServingRegionException&lt;/tt&gt;&lt;/h2&gt;

&lt;p&gt;Since the code in &lt;tt&gt;HRegionServer#multiPut&lt;/tt&gt; invokes &lt;tt&gt;HRegionServer#put(byte[], List&amp;lt;Put&amp;gt;)&lt;/tt&gt; for each region for which there are edits, it&apos;s possible that edits for a first region all get successfully applied, then when moving on the 2nd region, a &lt;tt&gt;NotServingRegionException&lt;/tt&gt; is thrown, which fails the RPC entirely and leaves the client with absolutely no clue as to which edits were successfully applied or not and which region caused the &lt;tt&gt;NotServingRegionException&lt;/tt&gt;.  Currently the code in &lt;tt&gt;HConnectionManager&lt;/tt&gt; will simply retry everything when that happens, and it&apos;ll invalidate the cached location of all the regions involved in the multi-put (even though it could well be that just a single region has to be invalidated).&lt;/p&gt;

&lt;p&gt;I&apos;m not sure how to best solve this problem because the Hadoop RPC protocol doesn&apos;t give us an easy way of passing data around in an exception.  The only two things I can think of are both really ugly:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;The message of the exception could contain the name of the region that caused the exception so that the client can parse the name out of the message and invalidate the right entry in its cache.&lt;/li&gt;
	&lt;li&gt;As a special case, instead of throwing a &lt;tt&gt;NotServingRegionException&lt;/tt&gt;, we&apos;d change &lt;tt&gt;MultiPutResponse&lt;/tt&gt; to also contain a list of regions no longer served by this region server, so the client could invalidate the right entries in its cache and retry just the edits that need to be retried.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;I think 2. is better but it also requires an incompatible RPC change.&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;Reprocode&quot;&gt;&lt;/a&gt;Repro code&lt;/h2&gt;

&lt;p&gt;Simple test case to highlight the bug (against HBase trunk).  The HBase client retries hopelessly until it reaches the maximum number of attempts before bailing out.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

hbase(main):001:0&amp;gt; describe &apos;mytable&apos;
DESCRIPTION                                                              ENABLED                                
 {NAME =&amp;gt; &apos;mytable&apos;, FAMILIES =&amp;gt; [{NAME =&amp;gt; &apos;myfam&apos;, BLOOMFILTER =&amp;gt; &apos;NONE &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;                                   
 &apos;, REPLICATION_SCOPE =&amp;gt; &apos;0&apos;, COMPRESSION =&amp;gt; &apos;NONE&apos;, VERSIONS =&amp;gt; &apos;1&apos;, TT                                        
 L =&amp;gt; &apos;2147483647&apos;, BLOCKSIZE =&amp;gt; &apos;65536&apos;, IN_MEMORY =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&apos;, BLOCKCAC                                        
 HE =&amp;gt; &apos;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&apos;}]}                                                                                                
1 row(s) in 0.7760 seconds
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.HBaseConfiguration;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.HTable;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.hbase.client.Put;

&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; class put {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[]a) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; HTable t = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTable(HBaseConfiguration.create(), &lt;span class=&quot;code-quote&quot;&gt;&quot;mytable&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Put p = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Put(&lt;span class=&quot;code-quote&quot;&gt;&quot;somerow&quot;&lt;/span&gt;.getBytes());
    p.add(&lt;span class=&quot;code-quote&quot;&gt;&quot;badfam&quot;&lt;/span&gt;.getBytes(), &lt;span class=&quot;code-quote&quot;&gt;&quot;qual2&quot;&lt;/span&gt;.getBytes(), &lt;span class=&quot;code-quote&quot;&gt;&quot;badvalue&quot;&lt;/span&gt;.getBytes());
    t.put(p);
    t.flushCommits();
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Excerpt of the log produced when running &lt;tt&gt;put&lt;/tt&gt;:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;HConnectionManager$TableServers: Found ROOT at 127.0.0.1:54754
HConnectionManager$TableServers: Cached location for .META.,,1.1028785192 is localhost.:54754
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 1000 ms!
HConnectionManager$TableServers: locateRegionInMeta(parentTable=.META., tableName=mytable, row=[115, 111, 109, 101, 114, 111, 119] (&quot;somerow&quot;), useCache=true)
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 1000 ms!
HConnectionManager$TableServers: locateRegionInMeta(parentTable=.META., tableName=mytable, row=[115, 111, 109, 101, 114, 111, 119] (&quot;somerow&quot;), useCache=true)
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 1000 ms!
HConnectionManager$TableServers: locateRegionInMeta(parentTable=.META., tableName=mytable, row=[115, 111, 109, 101, 114, 111, 119] (&quot;somerow&quot;), useCache=true)
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 2000 ms!
HConnectionManager$TableServers: locateRegionInMeta(parentTable=.META., tableName=mytable, row=[115, 111, 109, 101, 114, 111, 119] (&quot;somerow&quot;), useCache=true)
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 2000 ms!
HConnectionManager$TableServers: locateRegionInMeta(parentTable=.META., tableName=mytable, row=[115, 111, 109, 101, 114, 111, 119] (&quot;somerow&quot;), useCache=true)
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 4000 ms!
HConnectionManager$TableServers: locateRegionInMeta(parentTable=.META., tableName=mytable, row=[115, 111, 109, 101, 114, 111, 119] (&quot;somerow&quot;), useCache=true)
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 4000 ms!
HConnectionManager$TableServers: locateRegionInMeta(parentTable=.META., tableName=mytable, row=[115, 111, 109, 101, 114, 111, 119] (&quot;somerow&quot;), useCache=true)
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 8000 ms!
HConnectionManager$TableServers: locateRegionInMeta(parentTable=.META., tableName=mytable, row=[115, 111, 109, 101, 114, 111, 119] (&quot;somerow&quot;), useCache=true)
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 16000 ms!
HConnectionManager$TableServers: locateRegionInMeta(parentTable=.META., tableName=mytable, row=[115, 111, 109, 101, 114, 111, 119] (&quot;somerow&quot;), useCache=true)
HConnectionManager$TableServers: Cached location for mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. is localhost.:54754
HConnectionManager$TableServers: Failed past 0 for region: mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db., removing from cache
HConnectionManager$TableServers: Removed mytable,,1280754761944.db25b4cc63e97e6a7e1bc28402fe57db. for tableName=mytable from cache because of somerow
HConnectionManager$TableServers: processBatchOfPuts had some failures, sleeping for 32000 ms!
Exception in thread &quot;main&quot; org.apache.hadoop.hbase.client.RetriesExhaustedException: Still had 1 puts left after retrying 10 times.
	at org.apache.hadoop.hbase.client.HConnectionManager$TableServers.processBatchOfPuts(HConnectionManager.java:1534)
	at org.apache.hadoop.hbase.client.HTable.flushCommits(HTable.java:664)
	at org.apache.hadoop.hbase.client.HTable.doPut(HTable.java:549)
	at org.apache.hadoop.hbase.client.HTable.put(HTable.java:535)
	at put.main(put.java:10)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12470753">HBASE-2898</key>
            <summary>MultiPut makes proper error handling impossible and leads to corrupted data</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ryanobjc">ryan rawson</assignee>
                                    <reporter username="tsuna">Benoit Sigoure</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Aug 2010 19:00:00 +0000</created>
                <updated>Fri, 20 Nov 2015 12:41:45 +0000</updated>
                            <resolved>Wed, 10 Nov 2010 01:55:54 +0000</resolved>
                                    <version>0.89.20100621</version>
                                    <fixVersion>0.90.0</fixVersion>
                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12895054" author="stack" created="Tue, 3 Aug 2010 21:59:27 +0000"  >&lt;p&gt;Bringing into 0.90.  Agree its a blocker.&lt;/p&gt;</comment>
                            <comment id="12895057" author="ryanobjc" created="Tue, 3 Aug 2010 22:09:33 +0000"  >&lt;p&gt;At step 16, the return code of HRS#put(...) is the offset of which Put failed.  In ye olde days, this worked well because the first Put that failed in any way aborted and the return code would let the client know where to continue.&lt;/p&gt;

&lt;p&gt;The way it used to work is the first bad put we came across, we returned the index at which we failed.  If it was a WrongRegionException or a bad column family, either way we&apos;d just stop and the caller would know which put failed (but not the reason why).  &lt;/p&gt;

&lt;p&gt;If all you get is WRE, then the new code behaves much like the old code.  The first Put that runs into WRE will in step #16 cause a return code (ie: list offset) to return to the client.&lt;/p&gt;

&lt;p&gt;But when you run into bad column families.... what seems to be happening is the those puts are marked as &apos;bad&apos;, then we process the rest of the puts.  In the HRS wrapper (ie: step 16) we return a failure even though perhaps all but 1 succeeded.&lt;/p&gt;

&lt;p&gt;Previously there was no way to know which put failed and why, which is why the implementation of multiput made sense, but now with the detailed error codes we can do something more.&lt;/p&gt;</comment>
                            <comment id="12895123" author="tsuna" created="Wed, 4 Aug 2010 02:23:53 +0000"  >&lt;p&gt;I adjusted the description of the issue as it was inaccurate at some point, as Ryan pointed out.  The issue remains valid though.&lt;/p&gt;</comment>
                            <comment id="12898486" author="ryanobjc" created="Sat, 14 Aug 2010 00:53:30 +0000"  >&lt;p&gt;I am interested in a new multi-put for 0.90.  There are also cases for multi-get and multi just about everything. See &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1845&quot; title=&quot;MultiGet, MultiDelete, and MultiPut - batched to the appropriate region servers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1845&quot;&gt;&lt;del&gt;HBASE-1845&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Improving serialization would be nice, but we&apos;d have to wreck our KeyValue serialization mechanism and have something custom on the wire.  There is a similar situation in the Result serialization as well, it&apos;s just KeyValues all the way on down.&lt;/p&gt;</comment>
                            <comment id="12898489" author="tsuna" created="Sat, 14 Aug 2010 01:05:12 +0000"  >&lt;p&gt;I edited the description of the issue to further explain how it&apos;s impossible for clients to reasonably handle &lt;tt&gt;NotServingRegionException&lt;/tt&gt; when using multi-put.&lt;/p&gt;</comment>
                            <comment id="12929854" author="hbasereviewboard" created="Tue, 9 Nov 2010 00:53:36 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1176/#review1852&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#review1852&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Patch looks great.  Needs the test filled out before +1 and do all unit tests pass?  It changes a bunch of critical code so wouldn&apos;t be surprised if unexpected side effects.&lt;/p&gt;


&lt;p&gt;trunk/pom.xml&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6013&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6013&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You didn&apos;t mean this, right?  We can&apos;t have direct cloudera dependency.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6014&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6014&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    No one depends on these?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6015&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6015&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    review board is showing a bunch of white space on these lines?  Tabs?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6016&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6016&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    You changing public API here?&lt;/p&gt;

&lt;p&gt;    I suppose we are but only in HCM which is rarely used by other than internals... disregard this comment since I see you convert it in HTable below to an IOE.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6018&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6018&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Hmmm... would make life easier if we just let out the IE.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6020&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6020&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Long line.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6023&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6023&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Yeah, cleaner if IE is let out (I suppose).&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6024&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6024&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is kinda ugly.  For sure exceptions have been purged here?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6025&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6025&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Adding an IE here is ok?  Is this a new method in 0.90?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6026&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6026&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Oh, ok... then IE is fine.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6027&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6027&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Could there be exception here or its always Result?  If always Result why change type to Object?&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/RetriesExhaustedWithDetailsException.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6028&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6028&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Missing class comment on what this doohickey does&lt;/p&gt;



&lt;p&gt;trunk/src/test/java/org/apache/hadoop/hbase/client/MultiResponseTest.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6029&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6029&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Hey man, great test!  Can you add something in here?  Smile.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12929858" author="hbasereviewboard" created="Tue, 9 Nov 2010 01:01:23 +0000"  >&lt;p&gt;Message from: &quot;Ryan Rawson&quot; &amp;lt;ryanobjc@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1176/#review1855&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#review1855&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6033&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6033&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    people can selective not catch IE and then let their regular abort do it&apos;s job.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6034&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6034&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    yes, absolutely, because at the end we check every single entry in the results[] and if there are any failures (null, Throwable instances) we throw an exception. So one can be sure that everything is a Result during success, and if you get an exception you have the Throwable handy dandy in both the results array and in thrown exception. &lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6035&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6035&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this is a brand new method, never was in any previous 0.89 DR even.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6036&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6036&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    it could be either a Throwable or a Result. batch() shouldn&apos;t throw many exceptions, they should be identified and lined up with each index entry.&lt;/p&gt;



&lt;p&gt;trunk/src/test/java/org/apache/hadoop/hbase/client/MultiResponseTest.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6037&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6037&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I blame SVN!  It was including my scratch work &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ryan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12930335" author="hbasereviewboard" created="Tue, 9 Nov 2010 22:55:43 +0000"  >&lt;p&gt;Message from: &quot;Ryan Rawson&quot; &amp;lt;ryanobjc@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1176/#review1875&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#review1875&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1176/#comment6075&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1176/#comment6075&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    this was called by HTable, but those have shifted to use processBatch() instead.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ryan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12930423" author="ryanobjc" created="Wed, 10 Nov 2010 01:55:54 +0000"  >&lt;p&gt;committed a fix to this. We now detail which puts/gets/deletes failed and the client code takes appropriate action to retry appropriately.&lt;/p&gt;</comment>
                            <comment id="15017065" author="lars_francke" created="Fri, 20 Nov 2015 12:41:45 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12435843">HBASE-1845</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Aug 2010 21:59:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26523</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hjqf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100459</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>data corruption</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>