<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:09:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3322/HBASE-3322.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3322] HLog sync slowdown under heavy load with HBASE-2467</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3322</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Testing &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2467&quot; title=&quot;Concurrent flushers in HLog sync using HDFS-895&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2467&quot;&gt;&lt;del&gt;HBASE-2467&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-895&quot; title=&quot;Allow hflush/sync to occur in parallel with new writes to the file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HDFS-895&quot;&gt;&lt;del&gt;HDFS-895&lt;/del&gt;&lt;/a&gt; on 100 node cluster w/ a heavy increment workload we experienced significant slowdown.&lt;/p&gt;

&lt;p&gt;Stack traces show that most threads are on HLog.updateLock.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12492800">HBASE-3322</key>
            <summary>HLog sync slowdown under heavy load with HBASE-2467</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Dec 2010 06:55:42 +0000</created>
                <updated>Fri, 20 Nov 2015 12:42:39 +0000</updated>
                            <resolved>Mon, 21 Mar 2011 21:53:52 +0000</resolved>
                                    <version>0.90.0</version>
                                    <fixVersion>0.92.0</fixVersion>
                                    <component>io</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12969646" author="tlipcon" created="Thu, 9 Dec 2010 06:56:46 +0000"  >&lt;p&gt;It&apos;s strange because I experienced significant speedup! Can we try YCSB for easy comparison?&lt;/p&gt;</comment>
                            <comment id="12969647" author="stack" created="Thu, 9 Dec 2010 07:19:32 +0000"  >&lt;p&gt;We are blocked either at #978 in the below sync&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 977   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void sync() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
 978     &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
 979       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.closed) {
 980         &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
 981       }
 982     }
 983     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
 984       &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; now = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis();
 985       &lt;span class=&quot;code-comment&quot;&gt;// Done in parallel &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; all writer threads, thanks to HDFS-895
&lt;/span&gt; 986       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer.sync();
 987       &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
 988         syncTime += &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis() - now;
 989         syncOps++;
 990         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!logRollRequested) {
 991           checkLowReplication();
 992           &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writer.getLength() &amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.logrollsize) {
 993             requestLogRoll();
 994           }
 995         }
 996       }
 997 
 998     } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
 999       LOG.fatal(&lt;span class=&quot;code-quote&quot;&gt;&quot;Could not append. Requesting close of hlog&quot;&lt;/span&gt;, e);
1000       requestLogRoll();
1001       &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
1002     }
1003   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or at #917 in the append method:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 910   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void append(HRegionInfo info, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] tableName, WALEdit edits,
 911     &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; now)
 912   &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
 913     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (edits.isEmpty()) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
 914     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.closed) {
 915       &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Cannot append; log is closed&quot;&lt;/span&gt;);
 916     }
 917     &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
 918       &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; seqNum = obtainSeqNum();
 919       &lt;span class=&quot;code-comment&quot;&gt;// The &apos;lastSeqWritten&apos; map holds the sequence number of the oldest
&lt;/span&gt; 920       &lt;span class=&quot;code-comment&quot;&gt;// write &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; each region (i.e. the first edit added to the particular
&lt;/span&gt; 921       &lt;span class=&quot;code-comment&quot;&gt;// memstore). . When the cache is flushed, the entry &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the
&lt;/span&gt; 922       &lt;span class=&quot;code-comment&quot;&gt;// region being flushed is removed &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the sequence number of the flush
&lt;/span&gt; 923       &lt;span class=&quot;code-comment&quot;&gt;// is greater than or equal to the value in lastSeqWritten.
&lt;/span&gt; 924       &lt;span class=&quot;code-comment&quot;&gt;// Use encoded name.  Its shorter, guaranteed unique and a subset of
&lt;/span&gt; 925       &lt;span class=&quot;code-comment&quot;&gt;// actual  name.
&lt;/span&gt; 926       &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] hriKey = info.getEncodedNameAsBytes();
 927       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lastSeqWritten.putIfAbsent(hriKey, seqNum);
 928       HLogKey logKey = makeKey(hriKey, tableName, seqNum, now);
 929       doWrite(info, logKey, edits);
 930       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.numEntries.incrementAndGet();
 931     }
 932     &lt;span class=&quot;code-comment&quot;&gt;// Sync &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; catalog region, and &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; not then check &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; that table supports
&lt;/span&gt; 933     &lt;span class=&quot;code-comment&quot;&gt;// deferred log flushing
&lt;/span&gt; 934     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (info.isMetaRegion() ||
 935         !info.getTableDesc().isDeferredLogFlush()) {
 936       &lt;span class=&quot;code-comment&quot;&gt;// sync txn to file system
&lt;/span&gt; 937       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.sync();
 938     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Whats odd about the thread dumps is that the thread that has the lock, does not seem to proceed beyond lock acquisition; the thread depth is same for those waiting on the lock.  Here is what I mean.  Below is what the thread dumps are filled with.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Server handler 71 on 60020&quot;&lt;/span&gt; daemon prio=10 tid=0x00002aaebc088000 nid=0x4d26 waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; monitor entry [0x0000000048eb6000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: BLOCKED (on object monitor)
    at org.apache.hadoop.hbase.regionserver.wal.HLog.sync(HLog.java:987)
    - waiting to lock &amp;lt;0x00002aaabb1189d0&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
    at org.apache.hadoop.hbase.regionserver.wal.HLog.append(HLog.java:937)
    at org.apache.hadoop.hbase.regionserver.HRegion.increment(HRegion.java:3038)
    at org.apache.hadoop.hbase.regionserver.HRegionServer.increment(HRegionServer.java:2415)
    at sun.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.hadoop.hbase.ipc.HBaseRPC$Server.call(HBaseRPC.java:570)
    at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1036)

&lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Server handler 74 on 60020&quot;&lt;/span&gt; daemon prio=10 tid=0x00002aaebc08e000 nid=0x4d29 waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; monitor entry [0x00000000491b9000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: BLOCKED (on object monitor)
    at org.apache.hadoop.hbase.regionserver.wal.HLog.append(HLog.java:917)
    - waiting to lock &amp;lt;0x00002aaabb1189d0&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
    at org.apache.hadoop.hbase.regionserver.HRegion.increment(HRegion.java:3038)
    at org.apache.hadoop.hbase.regionserver.HRegionServer.increment(HRegionServer.java:2415)
    at sun.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.hadoop.hbase.ipc.HBaseRPC$Server.call(HBaseRPC.java:570)
    at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1036)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, here is the thread that has the lock.  Its doing nothing seemingly.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;IPC Server handler 140 on 60020&quot;&lt;/span&gt; daemon prio=10 tid=0x00002aaebc152000 nid=0x4d6b waiting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; monitor entry [0x000000004d3fb000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: BLOCKED (on object monitor)
    at org.apache.hadoop.hbase.regionserver.wal.HLog.sync(HLog.java:987)
    - locked &amp;lt;0x00002aaabb1189d0&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
    at org.apache.hadoop.hbase.regionserver.wal.HLog.append(HLog.java:937)
    at org.apache.hadoop.hbase.regionserver.HRegion.increment(HRegion.java:3038)
    at org.apache.hadoop.hbase.regionserver.HRegionServer.increment(HRegionServer.java:2415)
    at sun.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.hadoop.hbase.ipc.HBaseRPC$Server.call(HBaseRPC.java:570)
    at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1036)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is true of all of Jon&apos;s thread dumps but one which showed us down in append#doWrite.&lt;/p&gt;</comment>
                            <comment id="12969806" author="stack" created="Thu, 9 Dec 2010 16:55:03 +0000"  >&lt;p&gt;This JVM has -XX:+UseMembar set to get around lost notifications on outstanding waits (default is false, XX:-UseMembar, I believe &amp;#8211; can&apos;t find the random page written by a random russian that says this at the mo).  I went looking for corresponding SUN bug.  I found this &lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6822370&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6822370&lt;/a&gt; which suggests the workaround of +UseMembar though the bug is in explicit locations, found on solaris, for concurrent locks rather than synchronized it seems, and fixed in u18 (Sun JVM is currently at u23).&lt;/p&gt;

&lt;p&gt;I read this interesting note in &lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6546278&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6546278&lt;/a&gt;, a problem found in the &apos;psuedo memory barrier code&apos;.&lt;/p&gt;

&lt;p&gt;&quot;We verified this by attempting to use the reinstated -XX:+UseMembar&lt;br/&gt;
option. This did appear to clear the problem, however the overall&lt;br/&gt;
performance of the system was not acceptable with this option invoked&lt;br/&gt;
since it uses a true memory barrier instruction to synchronized the&lt;br/&gt;
multiple processors.&quot;&lt;/p&gt;</comment>
                            <comment id="12973356" author="streamy" created="Mon, 20 Dec 2010 20:48:49 +0000"  >&lt;p&gt;Punting from 0.90.0 because I have not had sufficient time to research this.  Planning on doing more work on it this week but until then I don&apos;t want to hold up 0.90 release since no one else has seen this.&lt;/p&gt;</comment>
                            <comment id="12990765" author="tlipcon" created="Fri, 4 Feb 2011 22:00:13 +0000"  >&lt;p&gt;Kicking out of 0.90.1&lt;/p&gt;</comment>
                            <comment id="13009417" author="streamy" created="Mon, 21 Mar 2011 21:53:52 +0000"  >&lt;p&gt;There is an issue here but upon further investigation, it&apos;s not really a bug.&lt;/p&gt;

&lt;p&gt;The issue is around heavy concurrency / high number of threads in HLog.  The current behavior is that each thread does a notify to the LogSyncer and then does a wait on a single object.  The LogSyncer waits to be notified, then syncs what is pending, and then does a notifyAll to all the threads waiting for their sync.&lt;/p&gt;

&lt;p&gt;This is a straightforward and correct pattern but under heavy concurrency, the fact that all threads are waiting on a single object to be notified becomes a bottleneck.&lt;/p&gt;

&lt;p&gt;Will open other JIRAs to deal with solutions to this.  Closing this one as this is not a blocking bug.&lt;/p&gt;</comment>
                            <comment id="15017306" author="lars_francke" created="Fri, 20 Nov 2015 12:42:39 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Dec 2010 06:56:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26783</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hlr3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100786</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>