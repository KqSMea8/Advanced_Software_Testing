<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:20:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11135/HBASE-11135.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11135] Change region sequenceid generation so happens earlier in the append cycle rather than just before added to file</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11135</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently we assign the region edit/sequence id just before we put it in the WAL.  We do it in the single thread that feeds from the ring buffer.  Doing it at this point, we can ensure order, that the edits will be in the file in accordance w/ the ordering of the region sequence id.&lt;/p&gt;

&lt;p&gt;But the point at which region sequence id is assigned an edit is deep down in the WAL system and there is a lag between our putting an edit into the WAL system and the edit actually getting its edit/sequence id.&lt;/p&gt;

&lt;p&gt;This lag &amp;#8211; &quot;late-binding&quot; &amp;#8211; complicates the unification of mvcc and region sequence id, especially around async WAL writes (and, related, for no-WAL writes) &amp;#8211; the parent for this issue (For async, how you get the edit id in our system when the threads have all gone home &amp;#8211; unless you make them wait?)&lt;/p&gt;

&lt;p&gt;Chatting w/ Jeffrey Zhong yesterday, we came up with a crazypants means of getting the region sequence id near-immediately.  We&apos;ll run two ringbuffers.  The first will mesh all handler threads and the consumer will generate ids (we will have order on other side of this first ring buffer), and then if async or no sync, we will just let the threads return ... updating mvcc just before we let them go.  All other calls will go up on to the second ring buffer to be serviced as now (batching, distribution out among the sync&apos;ing threads).  The first rb will have no friction and should turn at fast rates compared to the second.  There should not be noticeable slowdown nor do I foresee this refactor intefering w/ our multi-WAL plans.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12712974">HBASE-11135</key>
            <summary>Change region sequenceid generation so happens earlier in the append cycle rather than just before added to file</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12653582">HBASE-8763</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 May 2014 23:16:54 +0000</created>
                <updated>Sat, 21 Feb 2015 23:31:31 +0000</updated>
                            <resolved>Wed, 4 Jun 2014 21:00:12 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13992347" author="stack" created="Wed, 7 May 2014 23:17:47 +0000"  >&lt;p&gt;This issue should make &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11109&quot; title=&quot;flush region sequence id may not be larger than all edits flushed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11109&quot;&gt;&lt;del&gt;HBASE-11109&lt;/del&gt;&lt;/a&gt; redundant. Verify and close &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11109&quot; title=&quot;flush region sequence id may not be larger than all edits flushed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11109&quot;&gt;&lt;del&gt;HBASE-11109&lt;/del&gt;&lt;/a&gt; if so (make sure pull over the doc changes from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11109&quot; title=&quot;flush region sequence id may not be larger than all edits flushed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11109&quot;&gt;&lt;del&gt;HBASE-11109&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="13993368" author="stack" created="Fri, 9 May 2014 04:03:23 +0000"  >&lt;p&gt;wip&lt;/p&gt;

&lt;p&gt;Includes doc cleanup from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11109&quot; title=&quot;flush region sequence id may not be larger than all edits flushed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11109&quot;&gt;&lt;del&gt;HBASE-11109&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Does not do double ring buffer.  Instead, when we appendNoSync, we just wait for the append to complete before returning (early-binding instead of late-binding).  Also changed signature for HLog#appendNoSync so it takes a HLogKey.  We stick the region edit/sequence id into the HLogKey so it is available on return from appendNoSync.&lt;/p&gt;

&lt;p&gt;Region sequence id is now always updated by the WAL system (Need to finish getting an id &amp;#8211; plumb it through).&lt;/p&gt;

&lt;p&gt;Should fix &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11109&quot; title=&quot;flush region sequence id may not be larger than all edits flushed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11109&quot;&gt;&lt;del&gt;HBASE-11109&lt;/del&gt;&lt;/a&gt;.  This patch includes the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11109&quot; title=&quot;flush region sequence id may not be larger than all edits flushed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11109&quot;&gt;&lt;del&gt;HBASE-11109&lt;/del&gt;&lt;/a&gt; tests.&lt;/p&gt;

&lt;p&gt;Need to see how much perf we are losing doing this wait on append and then a wait on sync.&lt;/p&gt;

&lt;p&gt;Need to do cleanup too.&lt;/p&gt;


</comment>
                            <comment id="13993796" author="jeffreyz" created="Fri, 9 May 2014 18:25:49 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt; on this patch! I&apos;ll take a deeper look at this patch.&lt;/p&gt;</comment>
                            <comment id="13994009" author="stack" created="Fri, 9 May 2014 22:45:08 +0000"  >&lt;p&gt;More cleanup.  Let me get some perf numbers now.&lt;/p&gt;</comment>
                            <comment id="13994134" author="stack" created="Sat, 10 May 2014 04:04:13 +0000"  >&lt;p&gt;This patch is a little slower until you get up into the high contention when it is half the speed:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
nopatch.1.1.txt:2014-05-09 19:48:37,386 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=1, iterations=100000, syncInterval=0 took 127.035s 787.185ops/s
nopatch.1.2.txt:2014-05-09 19:50:37,795 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=1, iterations=100000, syncInterval=0 took 114.834s 870.822ops/s
nopatch.1.3.txt:2014-05-09 19:52:53,660 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=1, iterations=100000, syncInterval=0 took 130.308s 767.413ops/s
wpatch.1.1.txt:2014-05-09 17:30:25,190 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=1, iterations=100000, syncInterval=0 took 132.137s 756.790ops/s
wpatch.1.2.txt:2014-05-09 17:32:42,833 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=1, iterations=100000, syncInterval=0 took 132.289s 755.921ops/s
wpatch.1.3.txt:2014-05-09 17:34:58,673 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=1, iterations=100000, syncInterval=0 took 130.434s 766.671ops/s

nopatch.3.1.txt:2014-05-09 19:55:05,481 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=3, iterations=100000, syncInterval=0 took 126.320s 2374.921ops/s
nopatch.3.2.txt:2014-05-09 19:57:28,185 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=3, iterations=100000, syncInterval=0 took 137.013s 2189.573ops/s
nopatch.3.3.txt:2014-05-09 19:59:32,166 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=3, iterations=100000, syncInterval=0 took 118.471s 2532.265ops/s
wpatch.3.1.txt:2014-05-09 17:36:58,489 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=3, iterations=100000, syncInterval=0 took 114.463s 2620.934ops/s
wpatch.3.2.txt:2014-05-09 17:39:39,187 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=3, iterations=100000, syncInterval=0 took 155.323s 1931.459ops/s
wpatch.3.3.txt:2014-05-09 17:41:40,454 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=3, iterations=100000, syncInterval=0 took 115.876s 2588.974ops/s

nopatch.5.1.txt:2014-05-09 20:01:21,396 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=5, iterations=100000, syncInterval=0 took 103.697s 4821.740ops/s
nopatch.5.2.txt:2014-05-09 20:03:05,134 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=5, iterations=100000, syncInterval=0 took 98.228s 5090.198ops/s
nopatch.5.3.txt:2014-05-09 20:04:51,957 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=5, iterations=100000, syncInterval=0 took 101.291s 4936.272ops/s
wpatch.5.1.txt:2014-05-09 17:43:37,261 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=5, iterations=100000, syncInterval=0 took 111.320s 4491.556ops/s
wpatch.5.2.txt:2014-05-09 17:45:28,071 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=5, iterations=100000, syncInterval=0 took 105.417s 4743.068ops/s
wpatch.5.3.txt:2014-05-09 17:47:19,337 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=5, iterations=100000, syncInterval=0 took 105.852s 4723.577ops/s

nopatch.10.1.txt:2014-05-09 20:07:08,696 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=10, iterations=100000, syncInterval=0 took 131.271s 7617.829ops/s
nopatch.10.2.txt:2014-05-09 20:09:24,856 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=10, iterations=100000, syncInterval=0 took 130.635s 7654.917ops/s
nopatch.10.3.txt:2014-05-09 20:11:43,358 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=10, iterations=100000, syncInterval=0 took 132.942s 7522.077ops/s
wpatch.10.1.txt:2014-05-09 17:49:46,955 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=10, iterations=100000, syncInterval=0 took 142.240s 7030.371ops/s
wpatch.10.2.txt:2014-05-09 17:52:07,756 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=10, iterations=100000, syncInterval=0 took 135.400s 7385.525ops/s
wpatch.10.3.txt:2014-05-09 17:54:33,216 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=10, iterations=100000, syncInterval=0 took 140.080s 7138.778ops/s

nopatch.50.1.txt:2014-05-09 20:14:12,700 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=50, iterations=100000, syncInterval=0 took 143.818s 34766.164ops/s
nopatch.50.2.txt:2014-05-09 20:16:41,113 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=50, iterations=100000, syncInterval=0 took 142.902s 34989.016ops/s
nopatch.50.3.txt:2014-05-09 20:19:09,663 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=50, iterations=100000, syncInterval=0 took 142.667s 35046.645ops/s
wpatch.50.1.txt:2014-05-09 17:57:14,739 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=50, iterations=100000, syncInterval=0 took 156.166s 32017.213ops/s
wpatch.50.2.txt:2014-05-09 17:59:55,556 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=50, iterations=100000, syncInterval=0 took 155.452s 32164.270ops/s
wpatch.50.3.txt:2014-05-09 18:02:38,522 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=50, iterations=100000, syncInterval=0 took 157.546s 31736.762ops/s

nopatch.200.1.txt:2014-05-09 20:22:17,858 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=200, iterations=100000, syncInterval=0 took 182.661s 109492.453ops/s
nopatch.200.2.txt:2014-05-09 20:25:25,797 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=200, iterations=100000, syncInterval=0 took 182.456s 109615.477ops/s
nopatch.200.3.txt:2014-05-09 20:28:34,084 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=200, iterations=100000, syncInterval=0 took 182.813s 109401.406ops/s
wpatch.200.1.txt:2014-05-09 18:07:47,814 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=200, iterations=100000, syncInterval=0 took 303.894s 65812.422ops/s
wpatch.200.2.txt:2014-05-09 18:12:59,591 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=200, iterations=100000, syncInterval=0 took 306.374s 65279.691ops/s
wpatch.200.3.txt:2014-05-09 18:18:08,532 INFO  [main] wal.HLogPerformanceEvaluation: Summary: threads=200, iterations=100000, syncInterval=0 took 303.555s 65885.922ops/s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let me play w/ doing original idea of two ring buffers &amp;#8211; a fast, front one and then a slow back one to do appends and syncs.&lt;/p&gt;</comment>
                            <comment id="13994282" author="stack" created="Sat, 10 May 2014 18:58:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; has been reviewing offline.  Comments that if CP is slow doing pre/post append, then as is, we will slow throughput.  But as he notes, this is as it is in 0.98 and not really a way around it since cp, and wal listeners are inline w/ the actual append.&lt;/p&gt;

&lt;p&gt;In this patch over most of the appendNoSyncs to use new method (so edit/sequence id is availble on return out of append).  Changed the append to use a latch.  This gained me back a few percent... maybe 5%... but this patch makes us slower appending.  When 200 threads contending, about half slower again (180seconds vs 280 seconds to complete test):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; i in 1 3 5 10 50 200; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; j in 1 2 3; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; perf stat ./hbase-0.99.0-SNAPSHOT/bin/hbase --config /home/stack/conf_hbase org.apache.hadoop.hbase.regionserver.wal.HLogPerformanceEvaluation -threads $i   -iterations 100000 -keySize 50 -valueSize 100  &amp;amp;&amp;gt; &lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/wpatch_latch_barrier.${i}.${j}.txt&quot;&lt;/span&gt;; done; done
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I tried then also using a cyclicbarrier in the SyncFuture for the handler thread and the the sync&apos;ing thread to coordinate around but no noticeable difference (perhaps a little slower).&lt;/p&gt;

&lt;p&gt;I&apos;d be good committing this for now since it simplifies the unification of mvcc and sequence id.  Even when we are half slower again we are still about 0.98 throughput in trunk since the claim in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10156&quot; title=&quot;FSHLog Refactor (WAS -&amp;gt; Fix up the HBASE-8755 slowdown when low contention)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10156&quot;&gt;&lt;del&gt;HBASE-10156&lt;/del&gt;&lt;/a&gt; is that it doubled our throughput at 200 threads.&lt;/p&gt;

&lt;p&gt;After the unification happens, we can come back here again to do see if we can get perf back.&lt;/p&gt;</comment>
                            <comment id="13994775" author="jeffreyz" created="Mon, 12 May 2014 03:40:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;  Have you played the following? Because HRegion#getNextSequenceId() is called during a flush with updatesLock.writeLock(). If we use two ring buffer,  HRegion#getNextSequenceId() will return very quickly because it won&apos;t wait for previous work items such as preWAL, postWAL, writer.append() etc. Should be fast than 0.98. Current implementation matches 0.98&apos;s behavior, every appendNoSyn is synchronized just like we put everything in one ring buffer(queue).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let me play w/ doing original idea of two ring buffers &#8211; a fast, front one and then a slow back one to do appends and syncs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Rest patch looks good to me. Thanks.&lt;/p&gt;</comment>
                            <comment id="13994786" author="stack" created="Mon, 12 May 2014 04:19:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; Sorry, can you restate the below.  I do not follow:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Stack Have you played the following? Because HRegion#getNextSequenceId() is called during a flush with updatesLock.writeLock().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What are you saying with the above? (Pardon me)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If we use two ring buffer, HRegion#getNextSequenceId() will return very quickly because it won&apos;t wait for previous work items such as preWAL, postWAL, writer.append() etc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I can try it.  Looking at it, it just seemed overly-complicated.&lt;/p&gt;

&lt;p&gt;It is my sense that the slow down is the hand-off across the ring buffer, the passing back off the sequence id to the handler, that is holding it up (I did a quick measure where I commented out the latch code that is in this patch &amp;#8211; i.e. not having the handler wait on the sequence id &amp;#8211; and I got back the same numbers we currently have in trunk).   If we do double ring buffer, we will still have to do thread handoff across the first buffer so I foresee us having the same slow down only w/ a more complex system.  What you think?&lt;/p&gt;

&lt;p&gt;Does this patch get you what you wanted and unblocks your mvcc + sequence id unificattion?  If so, should we commit it?  This patch is getting big.  I can work on perf in a new issue, a smaller one.&lt;/p&gt;</comment>
                            <comment id="13994798" author="jeffreyz" created="Mon, 12 May 2014 04:44:42 +0000"  >&lt;p&gt;Sorry &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;. I mean the following you mentioned earlier:&lt;br/&gt;
&lt;blockquote&gt;
&lt;p&gt;Let me play w/ doing original idea of two ring buffers &#8211; a fast, front one and then a slow back one to do appends and syncs.&lt;/p&gt;&lt;/blockquote&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If we do double ring buffer, we will still have to do thread handoff across the first buffer so I foresee us having the same slow down only w/ a more complex system. What you think?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok. Fair enough then don&apos;t do it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Does this patch get you what you wanted and unblocks your mvcc + sequence id unificattion? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think so. How long could you hold before check it in? To be conservative, I can firstly migrate my patch on top of your patch and run all tests. How do you think? Thanks.&lt;/p&gt;</comment>
                            <comment id="13995236" author="stack" created="Mon, 12 May 2014 16:56:48 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; What ever is most convenient for you, just let me know.  Let me try and get hadoopqa to run against this last version.&lt;/p&gt;

&lt;p&gt;I tested 0.98.  Even w/ the latch in place doing the hand off of the squence id, we seem to do between 1/2 and 1/3rd more throughput than 0.98.&lt;/p&gt;

&lt;p&gt;One thought I had was could you update the mvcc in the ring buffer consumer thread just after we up the region edit/sequence id?  If so, I could undo the latching.&lt;/p&gt;</comment>
                            <comment id="13995238" author="stack" created="Mon, 12 May 2014 16:57:25 +0000"  >&lt;p&gt;Retry for hadoopqa&lt;/p&gt;</comment>
                            <comment id="13995267" author="jeffreyz" created="Mon, 12 May 2014 17:19:07 +0000"  >&lt;blockquote&gt;
&lt;p&gt;One thought I had was could you update the mvcc in the ring buffer consumer thread just after we up the region edit/sequence id? If so, I could undo the latching.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, I can do that. Today I&apos;ll migrate my patch and run tests to see if there is any issue.&lt;/p&gt;</comment>
                            <comment id="13995336" author="stack" created="Mon, 12 May 2014 17:58:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Yes, I can do that. Today I&apos;ll migrate my patch and run tests to see if there is any issue.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then we&apos;d get our perf back!&lt;/p&gt;

&lt;p&gt;I can make it so we only use the latch at particular times, say at flush time so I can be sure of sequence ids... so we can avoid sync under lock.&lt;/p&gt;</comment>
                            <comment id="13995355" author="jeffreyz" created="Mon, 12 May 2014 18:06:26 +0000"  >&lt;p&gt;Great! Should I wait for you to migrate my patch on top of your latest change?&lt;/p&gt;</comment>
                            <comment id="13995591" author="hadoopqa" created="Mon, 12 May 2014 20:33:45 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12644431/11135v5.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12644431/11135v5.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12644431&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 12 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +            i.visitLogEntryBeforeWrite(entry.getHTableDescriptor(), entry.getKey(), entry.getEdit());&lt;br/&gt;
+   * @deprecated Use &lt;/p&gt;
{@link #appendNoSync(HRegionInfo, HLogKey, WALEdit, HTableDescriptor, AtomicLong, boolean)}
&lt;p&gt;+        fsUtils.recoverFileLease(((HFileSystem)fs).getBackingFs(), p, TEST_UTIL.getConfiguration(), null);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestMultiParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.wal.TestLogRolling&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9502//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13995597" author="stack" created="Mon, 12 May 2014 20:41:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; I am not going to migrate your patch on top of mine.  I don&apos;t know the unification project well enough.&lt;/p&gt;

&lt;p&gt;This patch is getting big.  It is mostly doc improvement obscuring actual change.  Should I commit it?  It could serve as a baseline and gets you to first base in terms of the edit/sequence id being immediately available?  We&apos;d then work to undo the passing of sequence id back from the ring buffer consumer to the handlers via the latch &amp;#8211; the idea suggested above &amp;#8211; in a new JIRA to get our perf back.  It&apos;d be easier checking and reviewing smaller, focused changes?&lt;/p&gt;</comment>
                            <comment id="13995703" author="stack" created="Mon, 12 May 2014 22:04:59 +0000"  >&lt;p&gt;The TestLogRolling was a real issue (I love unit tests).  TestMultiParallel is not me.  This has just started failing generally.  Fix line lengths.&lt;/p&gt;</comment>
                            <comment id="13995972" author="hadoopqa" created="Tue, 13 May 2014 02:43:45 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12644499/11135v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12644499/11135v6.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12644499&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 12 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 5 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRolling&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9509//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13996024" author="stack" created="Tue, 13 May 2014 04:09:12 +0000"  >&lt;p&gt;Fix findbugs and javadoc.  The failure is odd (says only one replica).  Can&apos;t repro down here.  Retry.&lt;/p&gt;</comment>
                            <comment id="13996046" author="jeffreyz" created="Tue, 13 May 2014 04:40:05 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I am not going to migrate your patch on top of mine. I don&apos;t know the unification project well enough&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No. Sorry for the confusion. I mean I&apos;ll migrate my patch on top of yours and run tests.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Should I commit it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure. +1. Thanks.&lt;/p&gt;</comment>
                            <comment id="13996701" author="jeffreyz" created="Tue, 13 May 2014 17:58:51 +0000"  >&lt;p&gt;The v8 patch says following. I think it&apos;s out of date. &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;It will block waiting on this
+   * method if on initialization our edit/sequence id is {@link HLogKey#NO_SEQ_NO}.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13996811" author="stack" created="Tue, 13 May 2014 19:34:40 +0000"  >&lt;p&gt;Let me commit.  hadoopqa is sporadic.  I ran test suite locally and it passed:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
...
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 50.138 sec

Results :

Tests run: 1187, Failures: 0, Errors: 0, Skipped: 6
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13996843" author="stack" created="Tue, 13 May 2014 20:13:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; I committed this addendum to make comments match the implementation.  Thanks for review.&lt;/p&gt;</comment>
                            <comment id="13999380" author="hudson" created="Thu, 15 May 2014 23:09:53 +0000"  >&lt;p&gt;ABORTED: Integrated in HBase-TRUNK #5132 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5132/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5132/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11135&quot; title=&quot;Change region sequenceid generation so happens earlier in the append cycle rather than just before added to file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11135&quot;&gt;&lt;del&gt;HBASE-11135&lt;/del&gt;&lt;/a&gt; addendum fixing comments (stack: rev 1594366)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11135&quot; title=&quot;Change region sequenceid generation so happens earlier in the append cycle rather than just before added to file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11135&quot;&gt;&lt;del&gt;HBASE-11135&lt;/del&gt;&lt;/a&gt; Change region sequenceid generation so happens earlier in the append cycle rather than just before added to file (stack: rev 1594345)&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryption.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogFactory.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/RingBufferTruck.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/SyncFuture.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALActionsListener.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEdit.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestLogRolling.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14018169" author="stack" created="Wed, 4 Jun 2014 21:00:12 +0000"  >&lt;p&gt;This was committed a while back.  Resolving.&lt;/p&gt;</comment>
                            <comment id="14330835" author="enis" created="Sat, 21 Feb 2015 23:31:31 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12711364">HBASE-11099</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12711882">HBASE-11109</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12644070" name="11135.wip.txt" size="63373" author="stack" created="Fri, 9 May 2014 04:03:23 +0000"/>
                            <attachment id="12644203" name="11135v2.txt" size="82653" author="stack" created="Fri, 9 May 2014 22:45:08 +0000"/>
                            <attachment id="12644431" name="11135v5.txt" size="88078" author="stack" created="Mon, 12 May 2014 16:57:25 +0000"/>
                            <attachment id="12644319" name="11135v5.txt" size="88078" author="stack" created="Sun, 11 May 2014 05:50:56 +0000"/>
                            <attachment id="12644294" name="11135v5.txt" size="88078" author="stack" created="Sat, 10 May 2014 18:58:53 +0000"/>
                            <attachment id="12644499" name="11135v6.txt" size="93734" author="stack" created="Mon, 12 May 2014 22:04:59 +0000"/>
                            <attachment id="12644552" name="11135v7.txt" size="4493" author="stack" created="Tue, 13 May 2014 04:09:12 +0000"/>
                            <attachment id="12644687" name="11135v8.addendum.doc.txt" size="1594" author="stack" created="Tue, 13 May 2014 20:13:21 +0000"/>
                            <attachment id="12644647" name="11135v8.txt" size="94640" author="stack" created="Tue, 13 May 2014 16:55:49 +0000"/>
                            <attachment id="12644646" name="11135v8.txt" size="94640" author="stack" created="Tue, 13 May 2014 16:53:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 9 May 2014 18:25:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>391290</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ve53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>391510</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>