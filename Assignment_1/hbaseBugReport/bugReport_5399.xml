<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:27:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5399/HBASE-5399.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5399] Cut the link between the client and the zookeeper ensemble</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5399</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The link is often considered as an issue, for various reasons. One of them being that there is a limit on the number of connection that ZK can manage. Stack was suggesting as well to remove the link to master from HConnection.&lt;/p&gt;

&lt;p&gt;There are choices to be made considering the existing API (that we don&apos;t want to break).&lt;/p&gt;

&lt;p&gt;The first patches I will submit on hadoop-qa should not be committed: they are here to show the progress on the direction taken.&lt;/p&gt;


&lt;p&gt;ZooKeeper is used for:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public getter, to let the client do whatever he wants, and close ZooKeeper when closing the connection =&amp;gt; we have to deprecate this but keep it.&lt;/li&gt;
	&lt;li&gt;read get master address to create a master =&amp;gt; now done with a temporary zookeeper connection&lt;/li&gt;
	&lt;li&gt;read root location =&amp;gt; now done with a temporary zookeeper connection, but questionable. Used in public function &quot;locateRegion&quot;. To be reworked.&lt;/li&gt;
	&lt;li&gt;read cluster id =&amp;gt; now done once with a temporary zookeeper connection.&lt;/li&gt;
	&lt;li&gt;check if base done is available =&amp;gt; now done once with a zookeeper connection given as a parameter&lt;/li&gt;
	&lt;li&gt;isTableDisabled/isTableAvailable =&amp;gt; public functions, now done with a temporary zookeeper connection.&lt;/li&gt;
	&lt;li&gt;Called internally from HBaseAdmin and HTable&lt;/li&gt;
	&lt;li&gt;getCurrentNrHRS(): public function to get the number of region servers and create a pool of thread =&amp;gt; now done with a temporary zookeeper connection&lt;br/&gt;
-&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Master is used for:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getMaster public getter, as for ZooKeeper =&amp;gt; we have to deprecate this but keep it.&lt;/li&gt;
	&lt;li&gt;isMasterRunning(): public function, used internally by HMerge &amp;amp; HBaseAdmin&lt;/li&gt;
	&lt;li&gt;getHTableDescriptor*: public functions offering access to the master.  =&amp;gt; we could make them using a temporary master connection as well.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Main points are:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;hbase class for ZooKeeper; ZooKeeperWatcher is really designed for a strongly coupled architecture &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. This can be changed, but requires a lot of modifications in these classes (likely adding a class in the middle of the hierarchy, something like that). Anyway, non connected client will always be really slower, because it&apos;s a tcp connection, and establishing a tcp connection is slow.&lt;/li&gt;
	&lt;li&gt;having a link between ZK and all the client seems to make sense for some Use Cases. However, it won&apos;t scale if a TCP connection is required for every client&lt;/li&gt;
	&lt;li&gt;if we move the table descriptor part away from the client, we need to find a new place for it.&lt;/li&gt;
	&lt;li&gt;we will have the same issue if HBaseAdmin (for both ZK &amp;amp; Master), may be we can put a timeout on the connection. That would make the whole system less deterministic however.&lt;/li&gt;
&lt;/ul&gt;


</description>
                <environment>&lt;p&gt;all&lt;/p&gt;</environment>
        <key id="12542599">HBASE-5399</key>
            <summary>Cut the link between the client and the zookeeper ensemble</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nkeywal">Nicolas Liochon</assignee>
                                    <reporter username="nkeywal">Nicolas Liochon</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Feb 2012 21:14:47 +0000</created>
                <updated>Mon, 23 Sep 2013 18:31:10 +0000</updated>
                            <resolved>Thu, 15 Mar 2012 10:46:21 +0000</resolved>
                                    <version>0.94.0</version>
                                    <fixVersion>0.95.0</fixVersion>
                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13208032" author="stack" created="Tue, 14 Feb 2012 21:37:20 +0000"  >&lt;p&gt;Hurray on below:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  @Deprecated
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ZooKeeperWatcher getZooKeeperWatcher() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

...

+   * @deprecated Removed because it was a mistake exposing zookeeper in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;
+   * &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; (ZooKeeper is an implementation detail).
    */
+  @Deprecated
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HMasterInterface getMaster()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Why are these deprecated? (Add why to the deprecated note &amp;#8211; add pointer to where user can get functionality elsewise):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  @Deprecated
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; HRegionInterface getHRegionConnection(HServerAddress regionServer)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Fix your comments in HCM.  Missing &apos;e&apos; on &apos;not&apos; and &apos;d&apos; on &apos;use&apos;&lt;/p&gt;

&lt;p&gt;Do we get the clusterid on connection setup?  Do we have to?  Can we just get that when someone asks for it?&lt;/p&gt;

&lt;p&gt;Fix...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-comment&quot;&gt;// We will ope/close a ZooKeeper &lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What about isTableEnabled, etc., should they be deprecated, moved out of HConnnection?  Or that is for a different issue?&lt;/p&gt;

&lt;p&gt;Should we be using straight ZooKeeper instead of ZooKeeperWatcher?  We don&apos;t need watch facility?&lt;/p&gt;

&lt;p&gt;So far so good...&lt;/p&gt;

</comment>
                            <comment id="13208051" author="nkeywal" created="Tue, 14 Feb 2012 21:53:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;Why are these deprecated: getHRegionConnection(HServerAddress regionServer)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s because HServerAddress is deprecated. I will check that all the redirection are there.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do we get the clusterid on connection setup? Do we have to? Can we just get that when someone asks for it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Today yes, but we also manage the case when there is no id.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should we be using straight ZooKeeper instead of ZooKeeperWatcher? We don&apos;t need watch facility?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We can do that, it requires some work to do it well (ZooKeeperWatcher has spread too much, and has a lot of responsibilities (for example, it&apos;s the owner of the znode names, created from the config parameters)). It would be much cleaner, and a little bit faster. We would still pay for the tcp connection however.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;isTableEnabled, etc., should they be deprecated, moved out of HConnnection&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I was thinking putting them in HBaseAdmin, does it makes sense?&lt;/p&gt;
</comment>
                            <comment id="13208061" author="stack" created="Tue, 14 Feb 2012 21:59:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;We can do that, it requires some work to do it well (ZooKeeperWatcher has spread too much, and has a lot of responsibilities (for example, it&apos;s the owner of the znode names, created from the config parameters)). It would be much cleaner, and a little bit faster. We would still pay for the tcp connection however.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok.  For another patch then I&apos;d say (Agree ZKW is like a dumping ground for zk ops)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;isTableEnabled, etc., should they be deprecated, moved out of HConnnection .... I was thinking putting them in HBaseAdmin, does it makes sense?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it makes sense... deprecate them in HCM and move to HBaseAdmin.... &lt;/p&gt;

&lt;p&gt;Sweet.&lt;/p&gt;</comment>
                            <comment id="13209565" author="nkeywal" created="Thu, 16 Feb 2012 18:12:39 +0000"  >&lt;p&gt;After some thinking and different tries; I believe it makes sense to have a shared master connection and a shared zookeeper connection with a reference counter. The creation/release/close function would be in HConnection. We could add the refCounter in ZooKeeperWatcher, but it&apos;s more difficult to add in the proxy (I could do it however).&lt;/p&gt;

&lt;p&gt;Ideally, there would be a keep alive, i.e. we would not close the physical connection after when the counter becomes zero, but wait a minute or so. I&apos;am just not sure on how to distinguish cleanly a simple release to a jvm shutdown.&lt;/p&gt;

&lt;p&gt;Patch is underway, I think the complete version for review will be ready tomorrow.&lt;/p&gt;

&lt;p&gt;However, I have not found a new place for the table descriptor part, today it&apos;s still in the connection.&lt;/p&gt;</comment>
                            <comment id="13210561" author="nkeywal" created="Fri, 17 Feb 2012 20:59:38 +0000"  >&lt;p&gt;It&apos;s not the last version (it needs more comments, unit tests and likely bug fixes), but there is already a lot. Master &amp;amp; ZooKeeper connection are now created only when necessary, and are closed if not used for 5 minutes.&lt;br/&gt;
I added the keep alive stuff. It&apos;s not a nice to have; without it the unit tests take twice more time.&lt;br/&gt;
There is an issue with the masterCheck part, the previous behavior was strange. I need to review it in details.&lt;br/&gt;
The patch is on monday trunk. I will make it compatible on current trunk this week-end.&lt;br/&gt;
I will move isTableEnabled &amp;amp; so on in an other patch, this one is already too big...&lt;/p&gt;</comment>
                            <comment id="13210616" author="stack" created="Fri, 17 Feb 2012 22:22:29 +0000"  >&lt;p&gt;I don&apos;t follow:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// todo stack nkeywal
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;// We used to check in a loop that the master was running.
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;// 1) There were imbricated &lt;span class=&quot;code-quote&quot;&gt;&quot;tries&quot;&lt;/span&gt; loop. One here and one in getMaster
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;// 2) As the master can disappear, it may not be necessary to check it.
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;// We don&apos;t need the connection immediately, but we used to check the
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;//  connection at the beginning in the past, and it&apos;s more user friendly
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;//  to have the error immediately.
&lt;/span&gt;+    &lt;span class=&quot;code-comment&quot;&gt;// connection.isMasterRunning();&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;d say lets not check master is there till we need it.  Seems like a PITA going ahead and checking master on construction.  This changes the behavior but I think its one thats ok to change.&lt;/p&gt;

&lt;p&gt;You are doing your own Callables.  You&apos;ve seen the Callables that go on in HTable.  Any reason you avoid them?  I suppose this is different in that you want to let go of the shared master.  Looks fine.&lt;/p&gt;

&lt;p&gt;Are we getting retrieveClusterId on startup?  Can we not do that?  Can we do that when someone asks for it? Or is it happening after we&apos;ve set up the zk connection anyways?&lt;/p&gt;

&lt;p&gt;Patch makes sense so far.  Good stuff N.&lt;/p&gt;










</comment>
                            <comment id="13211313" author="nkeywal" created="Sun, 19 Feb 2012 11:21:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;Are we getting retrieveClusterId on startup? Can we not do that? Can we do that when someone asks for it? Or is it happening after we&apos;ve set up the zk connection anyways?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We&apos;re doing it when we create the connection, so we&apos;re connection for ZK just for this today. However, I think that we should also connect to ZK to get the master address (this would allow to start a client without specifying the master address: today it must be in ZK but also in client configuration). Wet would still connect to ZK at starting time, so, but for two reasons instead of only one. &lt;/p&gt;

&lt;p&gt;On another hand, There&apos;s a comment from Gary on the bug review tracker (&lt;a href=&quot;https://review.cloudera.org//r/1669/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://review.cloudera.org//r/1669/&lt;/a&gt;) for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3677&quot; title=&quot;Generate a globally unique identifier for a cluster and store in /hbase/hbase.id&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3677&quot;&gt;&lt;del&gt;HBASE-3677&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
&lt;cite&gt;Yes, no real need for a tracker.  Andy and I had discussed that previously.  ZK is just used to broadcast the ID to clients and servers without the need for HBase RPC (which for token authentication requires selection of the right token, but we don&apos;t know the token without the ID...).  I&apos;ll post an update that just reads the ID from ZK without using a tracker.&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;So It seems that we could safely:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;remove the clusterIdWatcher class&lt;/li&gt;
	&lt;li&gt;replace the conf parameter &quot;hbase.cluster.id&quot; by a simple getter on Connection. That would allow to get the id only when asked, with a lazy initialization, hence connecting later to ZK.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I don&apos;t mind doing this, but it&apos;s better to do it in another jira (this one&apos;s too big already).&lt;/p&gt;</comment>
                            <comment id="13211422" author="nkeywal" created="Sun, 19 Feb 2012 17:21:53 +0000"  >&lt;p&gt;In v9 I added some comments and fixed some issues. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;d say lets not check master is there till we need it. Seems like a PITA going ahead and checking master on construction. This changes the behavior but I think its one thats ok to change.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agreed, removed in v9.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You are doing your own Callables. You&apos;ve seen the Callables that go on in HTable. Any reason you avoid them? I suppose this is different in that you want to let go of the shared master. Looks fine.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I could also add the master management in the HTable callables. I would still need the one I wrote for HBaseAdmin, but it could be useful to be able to use master from the HTable callables?&lt;/p&gt;

&lt;p&gt;I still need to work on the unit tests, some large tests are failing today:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Failed tests:   testBackgroundEvictionThread[1](org.apache.hadoop.hbase.io.hfile
.TestLruBlockCache)
  testShutdownFixupWhenDaughterHasSplit(org.apache.hadoop.hbase.regionserver.Tes
tSplitTransactionOnCluster): expected:&amp;lt;1&amp;gt; but was:&amp;lt;0&amp;gt;
  queueFailover(org.apache.hadoop.hbase.replication.TestReplication): Waited too
 much time for queueFailover replication
  testMergeTool(org.apache.hadoop.hbase.util.TestMergeTool): &apos;merging regions 0
and 1&apos; failed with errCode -1

Tests in error:
  test3686a(org.apache.hadoop.hbase.client.TestScannerTimeout): 64142ms passed s
ince the last invocation, timeout is currently set to 10000
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For some of them it could be random and unrelated, but I am sure there are some real issues for of them.&lt;br/&gt;
I am on vacations next week; so I will come back to it the week after...&lt;/p&gt;
</comment>
                            <comment id="13211435" author="nkeywal" created="Sun, 19 Feb 2012 17:33:19 +0000"  >&lt;p&gt;Moreover, v9 patch work on trunk as of today.&lt;/p&gt;</comment>
                            <comment id="13211612" author="lhofhansl" created="Mon, 20 Feb 2012 00:10:54 +0000"  >&lt;p&gt;@Nicolas: Could you upload the patch to RB? That would make it easier to review.&lt;br/&gt;
I&apos;m loving all changes discussed here so far &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13211703" author="nkeywal" created="Mon, 20 Feb 2012 07:20:11 +0000"  >&lt;p&gt;@Lars and all: done see &lt;a href=&quot;https://reviews.apache.org/r/3967/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3967/&lt;/a&gt;&lt;br/&gt;
I sent it to the whole hbase group, I hope it&apos;s the right thing to do.&lt;/p&gt;

&lt;p&gt;I&apos;m on vacation this week so I will see the comments after the 27th... &lt;/p&gt;</comment>
                            <comment id="13212121" author="stack" created="Mon, 20 Feb 2012 21:55:06 +0000"  >&lt;p&gt;@N Have a good holiday.  When you get back, this seems good to do... can do in another issue:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
remove the clusterIdWatcher class
replace the conf parameter &lt;span class=&quot;code-quote&quot;&gt;&quot;hbase.cluster.id&quot;&lt;/span&gt; by a simple getter on Connection. That would allow to get the id only when asked, with a lazy initialization, hence connecting later to ZK.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also like the bit where we remove master location as required in conf &amp;#8211; rather, the only required conf is zk ensemble and get the master there.&lt;/p&gt;

&lt;p&gt;On reusing HTable Callables doing master stuff, lets not pollute HTable with master-isms so on &apos;...but it could be useful to be able to use master from the HTable callables?&apos;... I&apos;d say no.&lt;/p&gt;</comment>
                            <comment id="13215945" author="stack" created="Fri, 24 Feb 2012 21:44:11 +0000"  >&lt;p&gt;Another thought:&lt;/p&gt;

&lt;p&gt;Do we have to have the getSharedZookeeperWatcher and releaseSharedZookeeperWatcher and getSharedMaster, etc., in the HConnection API?  Are these not implementation details? (Or would it be too hard to undo them &amp;#8211; you&apos;d have not way of counting zk and master connections?)&lt;/p&gt;</comment>
                            <comment id="13217177" author="nkeywal" created="Mon, 27 Feb 2012 13:01:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do we have to have the getSharedZookeeperWatcher and releaseSharedZookeeperWatcher and getSharedMaster, etc., in the HConnection API? Are these not implementation details? (Or would it be too hard to undo them &#8211; you&apos;d have not way of counting zk and master connections?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, we need the user to explicitly release the connection, as we can&apos;t hide that we managing the object life cycle. I would prefer to use &quot;close&quot; for this, but I didn&apos;t find an easy way to extend the master proxy to make it closeable. So I preferred to use &quot;release&quot; for both objects to make it consistent.&lt;/p&gt;</comment>
                            <comment id="13217266" author="stack" created="Mon, 27 Feb 2012 16:42:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;...but I didn&apos;t find an easy way to extend the master proxy to make it closeable&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What is the issue w/ the above? (I wonder why its hard to do?)&lt;/p&gt;</comment>
                            <comment id="13217267" author="stack" created="Mon, 27 Feb 2012 16:42:40 +0000"  >&lt;p&gt;Ditto w/ zk?  Can&apos;t we just add close to the HConnection Interface and it will decrement the ref counting?&lt;/p&gt;</comment>
                            <comment id="13217289" author="nkeywal" created="Mon, 27 Feb 2012 17:00:36 +0000"  >&lt;p&gt;yep, for zk it easy.&lt;br/&gt;
For HMasterInterface, I don&apos;t know: I need to modify the interface but also HBaseRPC.getProxy and then VersionedProtocol and so on, no?&lt;/p&gt;</comment>
                            <comment id="13217293" author="stack" created="Mon, 27 Feb 2012 17:03:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;For HMasterInterface, I don&apos;t know: I need to modify the interface but also HBaseRPC.getProxy and then VersionedProtocol and so on, no?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;.... to add the close?  (I am not following closely but would like to understand if possible so throw me a clue or two on what issue is).  Thanks N.&lt;/p&gt;</comment>
                            <comment id="13217305" author="nkeywal" created="Mon, 27 Feb 2012 17:16:30 +0000"  >&lt;p&gt;yes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
The user would code something like:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    HMasterInterface master = connection.getSharedMaster();
    try {
      master.move(encodedRegionName, destServerName);
    } finally {
      master.close();
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HMasterInterface is an interface, with a proxy sending the calls to the master server.&lt;br/&gt;
I would need to add a &quot;close&quot; that would not be a remote call but would decrement a reference counter.&lt;/p&gt;

&lt;p&gt;I could add another proxy object, but it&apos;s not very clean (it should work however, may be it&apos;s an option).&lt;br/&gt;
If I don&apos;t want to do that, I need to add the method in the object returned by getProxy. You think it makes sense?&lt;/p&gt;



</comment>
                            <comment id="13217311" author="stack" created="Mon, 27 Feb 2012 17:34:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;.. If I don&apos;t want to do that, I need to add the method in the object returned by getProxy. You think it makes sense?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How would that work (I&apos;ve wanted to add a method to the returned proxy in the past).  Would you have returned proxy implement another Interface (That sounds hard).  Make the returned Interface implement Closeable?  Or, even, whats wrong w/ the close going remote?   Maybe there are resources master-side to clean up (if not now, maybe one day?... though yeah, if client doesn&apos;t have to make the RPC, lets not bother if possible).   Sounds like something to try and figure &amp;#8211; if possible (Of course I&apos;ve no ideas?)&lt;/p&gt;

&lt;p&gt;BTW, what you have above for conenction w/ try/finally looks ideal&lt;/p&gt;
</comment>
                            <comment id="13218257" author="nkeywal" created="Tue, 28 Feb 2012 15:11:53 +0000"  >&lt;p&gt;If we really want it, I found 3 options, and tried 2.&lt;/p&gt;

&lt;p&gt;1) Adding &apos;close&apos; to the HMasterInterface&lt;br/&gt;
After looking at it, I don&apos;t think it&apos;s a good option: HMasterInterface is an interface shared between the client &amp;amp; the server. So adding a close function to it would mean the server must implement it, while it&apos;s a client side function only. I believe that&apos;s the reason why there is already a function &apos;stopProxy&apos; in the RPCENgine instead of a close function. &lt;/p&gt;

&lt;p&gt;2) Adding the possibility to have a delayed close in RPCENgine&lt;br/&gt;
Instead of doing it for HMasterInterface in Connection only, we could do it all proxies and code this in RPCENgine.&lt;br/&gt;
There is already a reference counting in the hbase RPCENgine. So we could add here some code to allow a delayed close. I don&apos;t see why it would not be possible, all the code seems to be in the hbase package (and not hadoop). This would require smart convention to make it configurable on a per proxy basis, but it should work.&lt;/p&gt;

&lt;p&gt;3) Add an class with a delegation &lt;br/&gt;
So I&apos;ve got this&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;public interface SharedMaster extends HMasterInterface, Closeable {}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this in HConnection&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;public interface HConnection extends Abortable, Closeable {
  public SharedMaster  getSharedMaster()
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then the client writes&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;SharedMaster  master = connection.getSharedMaster();
try {
   master.move(encodedRegionName, destServerName);
} finally {
   master.close();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With a java proxy to manage the delegation for us:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    private static class SharedMasterHandler implements InvocationHandler {
       private HConnectionImplementation connection;
       private HMasterInterface master;
      SharedMasterHandler(HConnectionImplementation connection, HMasterInterface master){
        this.connection = connection;
        this.master = master;
      }

      @Override
      public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        if (method.getName().equals(&quot;close&quot;)){
          connection.releaseSharedMaster((HMasterInterface)master);
          return null;
        } else {
          return method.invoke(master, args);
        }
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;releaseSharedMaster is private in this solution.&lt;/p&gt;

&lt;p&gt;It was not really my first idea, but it&apos;s a reasonable way to get to the objective. The reflective delegation is not fast, obviously, but it doesn&apos;t matter here as there is much more expensive remote call just after...&lt;/p&gt;


&lt;p&gt;I&apos;am currently testing it, it seems to work.  &lt;/p&gt;</comment>
                            <comment id="13218514" author="stack" created="Tue, 28 Feb 2012 19:25:50 +0000"  >&lt;p&gt;On 1., yeah, the close should close the connection &amp;#8211; a client-side thing....&lt;/p&gt;

&lt;p&gt;On 2., not so mad about it.&lt;/p&gt;

&lt;p&gt;On 3., you obtain the objective it seems but the solution does seem convoluted (more indirection in the client makes it yet more obtuse). Put up a patch I&apos;d say.  Lets have a look.  SharedMaster is probably not the right name for the Interface?  CloseableMaster or MasterConnection and doc that the close applies to the closing of the client connection to master only.&lt;/p&gt;

&lt;p&gt;Good on you N&lt;/p&gt;
</comment>
                            <comment id="13218755" author="nkeywal" created="Wed, 29 Feb 2012 00:27:58 +0000"  >&lt;p&gt;Yes, that&apos;s why I rejected it initially. But I can&apos;t find a better one.&lt;br/&gt;
Moreover, I can&apos;t share the code with ZooKeeperWatcher, but they can have&lt;br/&gt;
the same interface. I can simplify the internal code, but the indirection&lt;br/&gt;
will remain.&lt;/p&gt;

&lt;p&gt;On Tue, Feb 28, 2012 at 8:27 PM, stack (Commented) (JIRA)&lt;/p&gt;
</comment>
                            <comment id="13219681" author="nkeywal" created="Thu, 1 Mar 2012 00:33:15 +0000"  >&lt;p&gt;v16 (still in progress, some unit tests fail, indent &amp;amp; comments to redo &amp;amp; so on), after a discussion with Stack.&lt;/p&gt;

&lt;p&gt;HConnection is a connection to the cluster.&lt;br/&gt;
However, the fact that the cluster is composed of master, zookeeper and region servers should be hidden from the client: some functions need a master some others not. This is not the client problem. Especially, these functions can move (from example, getting a table descriptor, today a master function, could become a region server function). So the getMaster &amp;amp; getZookeeperWatcher, shared or not, should not be in HConnection interface.&lt;/p&gt;

&lt;p&gt;Client functions are today split in two classes HBaseAdmin &amp;amp; HConnection (with stuff like processBatch, listTables, getHTableDescriptor). It could make sense to split HConnection further, but anyway we already have two classes using master, and the master connection should remain shared between these two classes. This should be handled by the HConnection as it is its core responsibility and it&apos;s as well much simpler technically. So we need to have package visible function to get them for HBaseAdmin. I prefer to have them in HConnectionImplementation only, even it it implies a cast in HBaseAdmin, as this makes HConnection clean from a client point of view.&lt;/p&gt;

&lt;p&gt;We stick to the keep alive mechanism with the Closeable, and hence a dynamic proxy for master and a subclass for ZooKeeperMaster.&lt;/p&gt;

&lt;p&gt;Note that if master &amp;amp; zookeeper are implementation details, the same should apply to HRegionInterface (HConnection#getHRegionConnection). But there are dependencies from the master package so it can not be included in this jira. The keep alive mechanism could be applied to HRegionInterface as well.&lt;/p&gt;</comment>
                            <comment id="13220154" author="hadoopqa" created="Thu, 1 Mar 2012 16:53:03 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12516700/5399_inprogress.v18.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12516700/5399_inprogress.v18.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1070//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1070//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13220156" author="nkeywal" created="Thu, 1 Mar 2012 16:54:23 +0000"  >&lt;p&gt;The patch is still in progress. Submitted to the build to see how it goes in hadoop-qa.&lt;/p&gt;</comment>
                            <comment id="13220166" author="stack" created="Thu, 1 Mar 2012 17:19:41 +0000"  >&lt;p&gt;@N 1 out of 29 hunks FAILED &amp;#8211; saving rejects to file src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java.rej&lt;/p&gt;

&lt;p&gt;Is it because I just committed fat 4403 patch?&lt;/p&gt;</comment>
                            <comment id="13220167" author="stack" created="Thu, 1 Mar 2012 17:20:25 +0000"  >&lt;p&gt;@N Probably should post the patch up on reviewboard.. its certainly fat enough&lt;/p&gt;</comment>
                            <comment id="13220171" author="nkeywal" created="Thu, 1 Mar 2012 17:30:37 +0000"  >&lt;p&gt;@stack: done on &lt;a href=&quot;https://reviews.apache.org/r/3967/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3967/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13220176" author="hadoopqa" created="Thu, 1 Mar 2012 17:32:56 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12516702/5399_inprogress.v20.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12516702/5399_inprogress.v20.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1071//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1071//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1071//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1071//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13220222" author="hadoopqa" created="Thu, 1 Mar 2012 18:35:34 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12516703/5399_inprogress.v21.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12516703/5399_inprogress.v21.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -130 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 158 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestScannerTimeout&lt;br/&gt;
                  org.apache.hadoop.hbase.replication.TestReplicationPeer&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMergeTool&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestSplitLogManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1072//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1072//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1072//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1072//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1072//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1072//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13220317" author="nkeywal" created="Thu, 1 Mar 2012 20:18:58 +0000"  >&lt;p&gt;fyi, here are the results on 4 runs.&lt;/p&gt;

&lt;p&gt;HADOOP-QA 1&lt;br/&gt;
org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
org.apache.hadoop.hbase.client.TestScannerTimeout&lt;br/&gt;
org.apache.hadoop.hbase.replication.TestReplicationPeer&lt;br/&gt;
org.apache.hadoop.hbase.util.TestMergeTool&lt;br/&gt;
org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
org.apache.hadoop.hbase.master.TestSplitLogManager&lt;/p&gt;

&lt;p&gt;Local 1&lt;br/&gt;
org.apache.hadoop.hbase.regionserver.TestAtomicOperation&lt;br/&gt;
org.apache.hadoop.hbase.regionserver.wal.TestHLog&lt;br/&gt;
org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
org.apache.hadoop.hbase.replication.TestReplication&lt;br/&gt;
org.apache.hadoop.hbase.util.TestMergeTool&lt;br/&gt;
org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
org.apache.hadoop.hbase.client.TestScannerTimeout&lt;/p&gt;

&lt;p&gt;Local 2&lt;br/&gt;
org.apache.hadoop.hbase.regionserver.TestSplitLogWorker&lt;br/&gt;
org.apache.hadoop.hbase.client.TestScannerTimeout&lt;br/&gt;
org.apache.hadoop.hbase.util.TestMergeTool&lt;/p&gt;

&lt;p&gt;Local 3&lt;br/&gt;
org.apache.hadoop.hbase.coprocessor.TestClassLoading&lt;br/&gt;
org.apache.hadoop.hbase.master.TestSplitLogManager&lt;br/&gt;
org.apache.hadoop.hbase.util.TestMergeTool&lt;br/&gt;
org.apache.hadoop.hbase.coprocessor.TestAggregateProtocol&lt;br/&gt;
org.apache.hadoop.hbase.io.encoding.TestChangingEncoding&lt;br/&gt;
org.apache.hadoop.hbase.TestZooKeeper&lt;br/&gt;
org.apache.hadoop.hbase.client.TestScannerTimeout&lt;br/&gt;
org.apache.hadoop.hbase.replication.TestReplication&lt;/p&gt;</comment>
                            <comment id="13220721" author="stack" created="Fri, 2 Mar 2012 06:27:15 +0000"  >&lt;p&gt;Thats a wide variety in the types of failures. You get same kind of variance absent your patch N?&lt;/p&gt;
</comment>
                            <comment id="13220964" author="nkeywal" created="Fri, 2 Mar 2012 14:41:44 +0000"  >&lt;p&gt;@stack. A lot of variance, but not that much. So I know I broke something somewhere. I fixed a synchronization issue in v23 (plus the points mentioned in you review). &lt;/p&gt;</comment>
                            <comment id="13220965" author="hadoopqa" created="Fri, 2 Mar 2012 14:43:29 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12516840/5399_inprogress.v23.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12516840/5399_inprogress.v23.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1081//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1081//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13221389" author="zhihyu@ebaysf.com" created="Sat, 3 Mar 2012 00:36:42 +0000"  >&lt;p&gt;@N:&lt;br/&gt;
Can you update the patch on review board ?&lt;br/&gt;
It is 6 rev&apos;s behind.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13221430" author="hadoopqa" created="Sat, 3 Mar 2012 01:29:43 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12516907/5399.v27.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12516907/5399.v27.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 18 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -129 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 155 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestZooKeeper&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestMergeTool&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1083//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1083//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1083//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1083//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1083//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1083//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13221911" author="hadoopqa" created="Sun, 4 Mar 2012 15:02:56 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517002/5399_inprogress.v32.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517002/5399_inprogress.v32.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 30 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1088//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1088//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13221973" author="hadoopqa" created="Sun, 4 Mar 2012 18:53:49 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517013/5399.v38.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517013/5399.v38.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 30 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The patch appears to cause mvn compile goal to fail.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1095//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1095//testReport/&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1095//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1095//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13221995" author="hadoopqa" created="Sun, 4 Mar 2012 20:02:38 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517015/5399.v39.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517015/5399.v39.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 30 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -129 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 155 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestZooKeeper&lt;br/&gt;
                  org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1097//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1097//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1097//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1097//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1097//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1097//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13222436" author="nkeywal" created="Mon, 5 Mar 2012 16:25:55 +0000"  >&lt;p&gt;org.apache.hadoop.hbase.TestZooKeeper is surprising, because:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if we add a 7s sleep before in  testMasterSessionExpired(), then it&apos;s much more difficult to reproduce.&lt;/li&gt;
	&lt;li&gt;in RecovableZooKeeper, there is no tests for SESSIONEXPIRED: if it happens there is no retry.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So I will tend to think it&apos;s an existing issue, even if I need to understand how it&apos;s supposed to work when there is a session timeout. I tried to add it but it does not work.&lt;/p&gt;</comment>
                            <comment id="13223089" author="nkeywal" created="Tue, 6 Mar 2012 08:35:03 +0000"  >&lt;p&gt;TestRegionRebalancing: seems to be a flaky test. Will retry on Hadoop-QA, but I don&apos;t reproduce it here.&lt;br/&gt;
TestRegionRebalancing: With the 7s sleep (i.e. same sleep as before), I don&apos;t reproduce it. I will try to understand why this sleep changes the result, but anyway it&apos;s not a regression. &lt;/p&gt;

&lt;p&gt;So this patch is a good candidate for a commit I think. Further enhancement (clusterId, ZK watcher replacement by simple calls) could be put in another JIRA.&lt;/p&gt;</comment>
                            <comment id="13223138" author="hadoopqa" created="Tue, 6 Mar 2012 10:17:14 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517212/5399.v40.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517212/5399.v40.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 30 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -129 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 155 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1114//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1114//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1114//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1114//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1114//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1114//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13223532" author="lhofhansl" created="Tue, 6 Mar 2012 18:47:27 +0000"  >&lt;p&gt;Too big for 0.94. Agreed?&lt;/p&gt;</comment>
                            <comment id="13223579" author="zhihyu@ebaysf.com" created="Tue, 6 Mar 2012 19:28:17 +0000"  >&lt;p&gt;Should the following be modified to reflect the current target ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   *  Deprecated in february 2012, targeted release: 0.94
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13223606" author="zhihyu@ebaysf.com" created="Tue, 6 Mar 2012 20:04:17 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// We put that all the possible setting to make it fails asap&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;should read &apos;put all the possible settings to make it fail&apos;.&lt;/p&gt;

&lt;p&gt;Please remove extra empty lines in checkHBaseAvailable().&lt;/p&gt;

&lt;p&gt;In HConnectionManager.java, can the java imports be moved back to top of file ?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// We have a single lock &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; master &amp;amp; zk to prevents deadlocks. Having&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;should read &apos;to prevent&apos;.&lt;/p&gt;

&lt;p&gt;Please use spaces around &apos;+&apos; below:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-quote&quot;&gt;&quot;hconnection &quot;&lt;/span&gt;+hashCode();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13223615" author="stack" created="Tue, 6 Mar 2012 20:17:46 +0000"  >&lt;p&gt;@LarsH I think its too radical a change in client behavior for 0.94.  If we target it for 0.96, it&apos;ll be a ripple only compared to rpc changes; it won&apos;t be noticed.&lt;/p&gt;</comment>
                            <comment id="13223657" author="nkeywal" created="Tue, 6 Mar 2012 20:59:52 +0000"  >&lt;p&gt;@all; Ok, I will provide an updated patch with the comments taken into account. I also understood the issue behind TestZooKeeper. My fix currently breaks other unit tests, but if I manage to make it work I will include it.&lt;/p&gt;

&lt;p&gt;For 0.94 vs. 0.96 ok as well, however, it would makes sense to deprecate some methods in the 0.94, especially getMaster &amp;amp; getZooKeeper in HConnection: people will get more time to react this way.&lt;/p&gt;</comment>
                            <comment id="13223660" author="stack" created="Tue, 6 Mar 2012 21:02:12 +0000"  >&lt;p&gt;@nkeywal yes, agree, good to deprecate in 0.94 rather than 0.96 so more time to move off the old methods&lt;/p&gt;</comment>
                            <comment id="13223662" author="stack" created="Tue, 6 Mar 2012 21:02:33 +0000"  >&lt;p&gt;... so it seems like there needs to be a separate patch for 0.94?&lt;/p&gt;</comment>
                            <comment id="13223664" author="nkeywal" created="Tue, 6 Mar 2012 21:11:55 +0000"  >&lt;p&gt;I can do a patch with only the deprecated stuff, or it can be be added in a&lt;br/&gt;
raw commit, as you like.&lt;/p&gt;

&lt;p&gt;On Tue, Mar 6, 2012 at 10:03 PM, stack (Commented) (JIRA)&lt;/p&gt;
</comment>
                            <comment id="13223857" author="lhofhansl" created="Wed, 7 Mar 2012 00:23:10 +0000"  >&lt;p&gt;Let&apos;s file a child jira for the 0.94 deprecation.&lt;/p&gt;</comment>
                            <comment id="13226134" author="nkeywal" created="Fri, 9 Mar 2012 15:26:43 +0000"  >&lt;p&gt;This version integrates the last comments + the trunk. Locally, I&apos;ve got random failures I didn&apos;t get 3 days ago. So ley me confirm before committing.&lt;/p&gt;</comment>
                            <comment id="13226140" author="hadoopqa" created="Fri, 9 Mar 2012 15:31:47 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517728/5399.v41.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517728/5399.v41.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 30 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1143//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1143//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13226180" author="hadoopqa" created="Fri, 9 Mar 2012 16:34:07 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517731/5399.v42.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517731/5399.v42.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 30 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -123 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 160 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1144//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1144//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1144//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1144//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1144//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1144//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13226195" author="nkeywal" created="Fri, 9 Mar 2012 16:53:08 +0000"  >&lt;p&gt;They&apos;re all different from the ones I got locally. It could be pure test flakiness. Let&apos;s retry.&lt;/p&gt;</comment>
                            <comment id="13226245" author="hadoopqa" created="Fri, 9 Mar 2012 17:45:32 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517743/5399.v42.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517743/5399.v42.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 30 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -123 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 160 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1147//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1147//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1147//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1147//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1147//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1147//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13226522" author="stack" created="Fri, 9 Mar 2012 21:56:33 +0000"  >&lt;p&gt;That looks ok N?  Will I commit?&lt;/p&gt;</comment>
                            <comment id="13226903" author="nkeywal" created="Sat, 10 Mar 2012 17:24:21 +0000"  >&lt;p&gt;I don&apos;t know. The errors are the same, but I don&apos;t reproduce them locally.&lt;br/&gt;
Let&apos;s retry, if we have them a third time I will look at them tomorrow or Monday.&lt;/p&gt;</comment>
                            <comment id="13226909" author="hadoopqa" created="Sat, 10 Mar 2012 17:46:59 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517856/5399.v42.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517856/5399.v42.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 30 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -123 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 160 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestColumnSeeking&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1157//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1157//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1157//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1157//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1157//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1157//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13226927" author="hadoopqa" created="Sat, 10 Mar 2012 18:44:41 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517858/5399.v42.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517858/5399.v42.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 30 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -123 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 160 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1158//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1158//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1158//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1158//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1158//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1158//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13227436" author="hadoopqa" created="Mon, 12 Mar 2012 11:18:57 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517999/nochange.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517999/nochange.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -123 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 159 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1162//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1162//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1162//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1162//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1162//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1162//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13227455" author="nkeywal" created="Mon, 12 Mar 2012 12:21:00 +0000"  >&lt;p&gt;Ok, even an empty patch gets these errors from hadoop-qa, so the v42 can be committed imho.&lt;/p&gt;</comment>
                            <comment id="13227918" author="stack" created="Mon, 12 Mar 2012 21:21:50 +0000"  >&lt;p&gt;I tried it locally and saw some flakeyness in the medium test runs... They don&apos;t seem to pass reliably anymore but its with or without this patch.  I&apos;m committing to trunk before this fat patch rots.  We can come back to work on the flakey tests after it goes in.  Thanks Nicolas for the nice patch.  Applied to trunk.&lt;/p&gt;</comment>
                            <comment id="13227983" author="hudson" created="Mon, 12 Mar 2012 22:15:00 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2676 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2676/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2676/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5399&quot; title=&quot;Cut the link between the client and the zookeeper ensemble&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5399&quot;&gt;&lt;del&gt;HBASE-5399&lt;/del&gt;&lt;/a&gt; Cut the link between the client and the zookeeper ensemble (Revision 1299872)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/MasterNotRunningException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MasterKeepAliveConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/ZooKeeperKeepAliveConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/replication/VerifyReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/replication/ReplicationZookeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/Merge.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/RecoverableZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/RootRegionTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperNodeTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestDeadServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestRollingRestart.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationPeer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/rest/client/TestRemoteTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMergeTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMergeTool.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13227997" author="yuzhihong@gmail.com" created="Mon, 12 Mar 2012 22:25:31 +0000"  >&lt;p&gt;TestAtomicOperation failed in latest TRUNK build:&lt;br/&gt;
&lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2676/testReport/org.apache.hadoop.hbase.regionserver/TestAtomicOperation/testMultiRowMutationMultiThreads/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2676/testReport/org.apache.hadoop.hbase.regionserver/TestAtomicOperation/testMultiRowMutationMultiThreads/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similar failure shows up in the latest Hadoop QA run of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542&quot; title=&quot;Unify HRegion.mutateRowsWithLocks() and HRegion.processRow()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5542&quot;&gt;&lt;del&gt;HBASE-5542&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228009" author="yuzhihong@gmail.com" created="Mon, 12 Mar 2012 22:38:08 +0000"  >&lt;p&gt;From test output:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Exception in thread &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;-211&quot;&lt;/span&gt; junit.framework.AssertionFailedError	at junit.framework.Assert.fail(Assert.java:48)
	at junit.framework.Assert.fail(Assert.java:56)
	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation$2.run(TestAtomicOperation.java:392)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here is related code in test:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
              &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (r.size() != 1) {
                LOG.debug(r);
                failures.incrementAndGet();
                fail();
              }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13228106" author="hudson" created="Tue, 13 Mar 2012 00:56:34 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #135 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/135/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/135/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5399&quot; title=&quot;Cut the link between the client and the zookeeper ensemble&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5399&quot;&gt;&lt;del&gt;HBASE-5399&lt;/del&gt;&lt;/a&gt; Cut the link between the client and the zookeeper ensemble (Revision 1299872)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/MasterNotRunningException.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/HTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/MasterKeepAliveConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/ZooKeeperKeepAliveConnection.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/mapreduce/replication/VerifyReplication.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/replication/ReplicationZookeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/util/Merge.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/RecoverableZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/RootRegionTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperNodeTracker.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestAdmin.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestDeadServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/master/TestRollingRestart.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationPeer.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/rest/client/TestRemoteTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMergeTable.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/util/TestMergeTool.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13228148" author="lhofhansl" created="Tue, 13 Mar 2012 02:31:56 +0000"  >&lt;p&gt;Yeah!&lt;/p&gt;</comment>
                            <comment id="13228149" author="lhofhansl" created="Tue, 13 Mar 2012 02:32:20 +0000"  >&lt;p&gt;I should look at TestAtomicOperation.&lt;/p&gt;</comment>
                            <comment id="13228160" author="stack" created="Tue, 13 Mar 2012 03:05:55 +0000"  >&lt;p&gt;@Nicolas What you make of Ted&apos;s comment above?  You think it related in anyway?  I&apos;d doubt it is since this is client-side hackery, nought to do w/ serverside row level commits.  Its just suspicious because build broke on TestAtomicOperation when this issue went in (But a bunch of others went in at same time...)&lt;/p&gt;</comment>
                            <comment id="13228161" author="stack" created="Tue, 13 Mar 2012 03:05:59 +0000"  >&lt;p&gt;@Nicolas What you make of Ted&apos;s comment above?  You think it related in anyway?  I&apos;d doubt it is since this is client-side hackery, nought to do w/ serverside row level commits.  Its just suspicious because build broke on TestAtomicOperation when this issue went in (But a bunch of others went in at same time...)&lt;/p&gt;</comment>
                            <comment id="13228300" author="nkeywal" created="Tue, 13 Mar 2012 09:49:08 +0000"  >&lt;p&gt;@stack&lt;br/&gt;
Yes, this test is flaky... I reproduce the error on the trunk as of March 10th as well. I&apos;ve seen it failing previously, I think it&apos;s flaky for at the very least a month (and may be much more)&lt;/p&gt;

&lt;p&gt;git log:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;commit 0f3e025a62f89763fffbf8298d565a6c4e5b7d06
Date:   Sat Mar 10 02:27:05 2012 +0000
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;With the same stack as in trunk #2676:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 7.444 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!
testMultiRowMutationMultiThreads(org.apache.hadoop.hbase.regionserver.TestAtomicOperation)  Time elapsed: 7.083 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!
junit.framework.AssertionFailedError: expected:&amp;lt;0&amp;gt; but was:&amp;lt;1&amp;gt;
	at junit.framework.Assert.fail(Assert.java:50)
	at junit.framework.Assert.failNotEquals(Assert.java:287)
	at junit.framework.Assert.assertEquals(Assert.java:67)
	at junit.framework.Assert.assertEquals(Assert.java:199)
	at junit.framework.Assert.assertEquals(Assert.java:205)
	at org.apache.hadoop.hbase.regionserver.TestAtomicOperation.testMultiRowMutationMultiThreads(TestAtomicOperation.java:416)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13228464" author="stack" created="Tue, 13 Mar 2012 15:53:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yes, this test is flaky... I reproduce the error on the trunk as of March 10th as well. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How do you do this?  You run the test multiple times?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think it&apos;s flaky for at the very least a month (and may be much more)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In your estimation, we broke this a while back. Any clue what did it?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</comment>
                            <comment id="13228488" author="lhofhansl" created="Tue, 13 Mar 2012 16:23:17 +0000"  >&lt;p&gt;Only testMultiRowMutationMultiThreads is failing, which I added recently.&lt;br/&gt;
I now think the test always had this problem.&lt;/p&gt;</comment>
                            <comment id="13228587" author="nkeywal" created="Tue, 13 Mar 2012 18:58:28 +0000"  >&lt;p&gt;@Stack; I think it fails 20% of the time. I run it alone, i.e. with -Dtest=TestAtomicOperation#testMultiRowMutationMultiThreads with nothing else running on the machine, and a mvn clean. No clue on when it started to happen.&lt;/p&gt;

&lt;p&gt;@Lars: I&apos;m not sure I haven&apos;t seen failures on testRowMutationMultiThreads as well, I will launch a few tests to see if it happens.&lt;/p&gt;</comment>
                            <comment id="13228593" author="zhihyu@ebaysf.com" created="Tue, 13 Mar 2012 19:01:19 +0000"  >&lt;p&gt;Lars has found some clue in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228662" author="nkeywal" created="Tue, 13 Mar 2012 20:22:40 +0000"  >&lt;p&gt;@Lars, Stack:&lt;br/&gt;
After 50 tries, on trunk (fbd4bebd5cca129f49e91ec9936f604998a7025a) + 5572 I got it:&lt;/p&gt;

&lt;p&gt;testRowMutationMultiThreads(org.apache.hadoop.hbase.regionserver.TestAtomicOperation): expected:&amp;lt;0&amp;gt; but was:&amp;lt;5&amp;gt;&lt;br/&gt;
at org.apache.hadoop.hbase.regionserver.TestAtomicOperation.testRowMutationMultiThreads(TestAtomicOperation.java:331)&lt;/p&gt;

&lt;p&gt;So the probability for testRowMutationMultiThreads is 10 times inferior than for testMultiRowMutationMultiThreads but it can occur as well..&lt;/p&gt;</comment>
                            <comment id="13228753" author="lhofhansl" created="Tue, 13 Mar 2012 22:00:45 +0000"  >&lt;p&gt;Arrgghhh... That&apos;s not good!&lt;br/&gt;
Do you see above message in that case in the logs?&lt;br/&gt;
Do you still have the log output? (Feel free to send a zip via email or attach here).&lt;/p&gt;</comment>
                            <comment id="13228771" author="nkeywal" created="Tue, 13 Mar 2012 22:22:19 +0000"  >&lt;p&gt;I&apos;m going to rerun it on trunk and on a 2 weeks old trunk as well. Except if you think differently, I will put in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt;, it seems to be the best place.&lt;/p&gt;</comment>
                            <comment id="13228798" author="lhofhansl" created="Tue, 13 Mar 2012 23:10:50 +0000"  >&lt;p&gt;Yeah. Let&apos;s move the discussion to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5569&quot; title=&quot;Do not collect deleted KVs when they are still in use by a scanner.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5569&quot;&gt;&lt;del&gt;HBASE-5569&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Thanks for doing this Nicolas (pardon me if I misspelled your name). You don&apos;t have to, though. Your change here is almost certainly not causing this problem.&lt;/p&gt;</comment>
                            <comment id="13228816" author="nkeywal" created="Tue, 13 Mar 2012 23:56:36 +0000"  >&lt;p&gt;It&apos;s ok, we&apos;re all in the same boat &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I&apos;ve got the test running on a 2 weeks old version of the trunk, I will&lt;br/&gt;
have the result tomorrow.&lt;/p&gt;

&lt;p&gt;On Wed, Mar 14, 2012 at 12:12 AM, Lars Hofhansl (Commented) (JIRA) &amp;lt;&lt;/p&gt;
</comment>
                            <comment id="13229142" author="zhihyu@ebaysf.com" created="Wed, 14 Mar 2012 12:11:32 +0000"  >&lt;p&gt;TestZooKeeper fails quite often on Hadoop QA now.&lt;br/&gt;
Here is a recent one:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5542?focusedCommentId=13229008&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13229008&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-5542?focusedCommentId=13229008&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13229008&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When Ramkrishna worked on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5206&quot; title=&quot;Port HBASE-5155 to 0.92, 0.94, and TRUNK&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5206&quot;&gt;&lt;del&gt;HBASE-5206&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Tried out TestZookeeper.testClientSessionExpired.  With or without patch it is failing.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13229143" author="zhihyu@ebaysf.com" created="Wed, 14 Mar 2012 12:12:31 +0000"  >&lt;p&gt;TestZooKeeper.testClientSessionExpired fails on Hadoop QA after this patch went in.&lt;/p&gt;</comment>
                            <comment id="13229476" author="nkeywal" created="Wed, 14 Mar 2012 18:34:40 +0000"  >&lt;p&gt;You&apos;re right. It&apos;s a regression. I will fix this with 5549. I&apos;m having a hard time trying to understand what&apos;s going on exactly here, and the &quot;sleep&quot; coding pattern does not help to say the least.&lt;/p&gt;</comment>
                            <comment id="13230040" author="nkeywal" created="Thu, 15 Mar 2012 10:19:32 +0000"  >&lt;p&gt;I&apos;ve actually been able to reproduce the issue on a previous trunk version, so it&apos;s not linked to my changes, and that&apos;s a great step forward in term of rationality.&lt;/p&gt;

&lt;p&gt;Sometimes when we trigger a zk session expiry the zk connection remains in the &quot;connected&quot; state. I don&apos;t have any explication for this, but at least it&apos;s not a new behavior. I will manage this case explicitly in the version I&apos;m writing for #5549.&lt;/p&gt;</comment>
                            <comment id="13230049" author="stack" created="Thu, 15 Mar 2012 10:39:53 +0000"  >&lt;p&gt;If you were able to trigger it in a version before your patch, I&apos;d say reclose the issue N.&lt;/p&gt;</comment>
                            <comment id="13230050" author="stack" created="Thu, 15 Mar 2012 10:42:22 +0000"  >&lt;p&gt;I should have said, given you&apos;ve repro&apos;d in an older version &amp;#8211; freeing up this commit of blame &amp;#8211; AND that you are going to fix it anyways in 5549, I&apos;d say its good to close this issue again.  Good stuff.&lt;/p&gt;</comment>
                            <comment id="13775284" author="stack" created="Mon, 23 Sep 2013 18:31:10 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12545833">HBASE-5549</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12545837">HBASE-5550</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12545838">HBASE-5551</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12546256">HBASE-5573</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12516907" name="5399.v27.patch" size="102435" author="nkeywal" created="Sat, 3 Mar 2012 00:27:42 +0000"/>
                            <attachment id="12517013" name="5399.v38.patch" size="114360" author="nkeywal" created="Sun, 4 Mar 2012 18:47:39 +0000"/>
                            <attachment id="12517015" name="5399.v39.patch" size="118594" author="nkeywal" created="Sun, 4 Mar 2012 19:00:23 +0000"/>
                            <attachment id="12517212" name="5399.v40.patch" size="118877" author="nkeywal" created="Tue, 6 Mar 2012 09:30:25 +0000"/>
                            <attachment id="12517728" name="5399.v41.patch" size="119452" author="nkeywal" created="Fri, 9 Mar 2012 15:26:43 +0000"/>
                            <attachment id="12517858" name="5399.v42.patch" size="119240" author="nkeywal" created="Sat, 10 Mar 2012 17:50:46 +0000"/>
                            <attachment id="12517856" name="5399.v42.patch" size="119240" author="nkeywal" created="Sat, 10 Mar 2012 17:25:53 +0000"/>
                            <attachment id="12517743" name="5399.v42.patch" size="119240" author="nkeywal" created="Fri, 9 Mar 2012 16:53:34 +0000"/>
                            <attachment id="12517731" name="5399.v42.patch" size="119240" author="nkeywal" created="Fri, 9 Mar 2012 15:45:22 +0000"/>
                            <attachment id="12514549" name="5399_inprogress.patch" size="34837" author="nkeywal" created="Tue, 14 Feb 2012 21:22:11 +0000"/>
                            <attachment id="12516626" name="5399_inprogress.v16.patch" size="95218" author="nkeywal" created="Thu, 1 Mar 2012 00:33:34 +0000"/>
                            <attachment id="12516700" name="5399_inprogress.v18.patch" size="99888" author="nkeywal" created="Thu, 1 Mar 2012 16:49:39 +0000"/>
                            <attachment id="12516702" name="5399_inprogress.v20.patch" size="96956" author="nkeywal" created="Thu, 1 Mar 2012 17:28:31 +0000"/>
                            <attachment id="12516703" name="5399_inprogress.v21.patch" size="99448" author="nkeywal" created="Thu, 1 Mar 2012 17:41:36 +0000"/>
                            <attachment id="12516840" name="5399_inprogress.v23.patch" size="100803" author="nkeywal" created="Fri, 2 Mar 2012 14:40:03 +0000"/>
                            <attachment id="12515021" name="5399_inprogress.v3.patch" size="84307" author="nkeywal" created="Fri, 17 Feb 2012 20:52:09 +0000"/>
                            <attachment id="12517002" name="5399_inprogress.v32.patch" size="118806" author="nkeywal" created="Sun, 4 Mar 2012 15:00:40 +0000"/>
                            <attachment id="12515176" name="5399_inprogress.v9.patch" size="91729" author="nkeywal" created="Sun, 19 Feb 2012 17:15:18 +0000"/>
                            <attachment id="12516476" name="ASF.LICENSE.NOT.GRANTED--5399_inprogress.v14.patch" size="93955" author="nkeywal" created="Wed, 29 Feb 2012 00:28:00 +0000"/>
                            <attachment id="12517999" name="nochange.patch" size="338" author="nkeywal" created="Mon, 12 Mar 2012 10:23:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Feb 2012 21:37:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>227885</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0htbz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102014</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>