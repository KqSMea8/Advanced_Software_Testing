<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:30:55 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5782/HBASE-5782.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5782] Edits can be appended out of seqid order since HBASE-4487</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5782</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Create a table with 1000 splits, after the region assignemnt, kill the regionserver wich contains META table.&lt;/p&gt;

&lt;p&gt;Here few regions are missing after the log splitting and region assigment. HBCK report shows multiple region holes are got created.&lt;/p&gt;

&lt;p&gt;Same scenario was verified mulitple times in 0.92.1, no issues.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12550831">HBASE-5782</key>
            <summary>Edits can be appended out of seqid order since HBASE-4487</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="gopinathan.av">Gopinathan A</reporter>
                        <labels>
                    </labels>
                <created>Fri, 13 Apr 2012 14:31:34 +0000</created>
                <updated>Thu, 2 May 2013 02:29:52 +0000</updated>
                            <resolved>Wed, 18 Apr 2012 20:38:44 +0000</resolved>
                                    <version>0.94.0</version>
                                    <fixVersion>0.94.0</fixVersion>
                                    <component>wal</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13253418" author="ram_krish" created="Fri, 13 Apr 2012 14:38:16 +0000"  >&lt;p&gt;@Lars&lt;br/&gt;
I was checking this issue.  I think it has to be fixed before RC? What you say?&lt;br/&gt;
Not sure of the root cause still.&lt;/p&gt;</comment>
                            <comment id="13253886" author="lhofhansl" created="Fri, 13 Apr 2012 23:55:46 +0000"  >&lt;p&gt;Did you have &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5778&quot; title=&quot;Fix HLog compression&amp;#39;s incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5778&quot;&gt;&lt;del&gt;HBASE-5778&lt;/del&gt;&lt;/a&gt; enabled?&lt;/p&gt;</comment>
                            <comment id="13253978" author="gopinathan.av" created="Sat, 14 Apr 2012 03:56:07 +0000"  >&lt;p&gt;Initially I also doubted the same. I am able to reproduce same issue after disabling the wal compression.&lt;/p&gt;
</comment>
                            <comment id="13253990" author="lhofhansl" created="Sat, 14 Apr 2012 04:50:11 +0000"  >&lt;p&gt;You tried multiple times in 0.92.1, and no problem?&lt;br/&gt;
Any chance to capture this in a test? (Although that might be difficult)&lt;/p&gt;</comment>
                            <comment id="13253996" author="lhofhansl" created="Sat, 14 Apr 2012 05:48:57 +0000"  >&lt;p&gt;And is there anything interesting in the log files?&lt;/p&gt;</comment>
                            <comment id="13254261" author="lhofhansl" created="Sun, 15 Apr 2012 04:40:14 +0000"  >&lt;p&gt;Assigning to 0.94.0 for now&lt;/p&gt;</comment>
                            <comment id="13254385" author="ram_krish" created="Sun, 15 Apr 2012 17:56:22 +0000"  >&lt;p&gt;@LArs&lt;br/&gt;
Tomorrow i can try writing a test with similar scenario.  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;(Although that might be difficult)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it should be easier.  Hopefully tomorrow can come up with some initial analysis.&lt;/p&gt;</comment>
                            <comment id="13254433" author="lhofhansl" created="Sun, 15 Apr 2012 21:09:07 +0000"  >&lt;p&gt;Thanks Ram!&lt;/p&gt;</comment>
                            <comment id="13254646" author="ram_krish" created="Mon, 16 Apr 2012 11:47:18 +0000"  >&lt;p&gt;Found the problem and working on soln.  Infact this problem would have introduced data loss easily in simple RS going down scenario.&lt;/p&gt;</comment>
                            <comment id="13254666" author="ram_krish" created="Mon, 16 Apr 2012 13:06:39 +0000"  >&lt;p&gt;The problem here is &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
HLogKey logKey = makeKey(encodedRegionName, tableName, seqNum, now, clusterId);
doWrite(info, logKey, edits, htd);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We form a key here which is unique based on the seqNum. Now as we do appendNoSync() there is no sync called in append flow.  But there is always the LogSyncer thread which periodically syncs.&lt;br/&gt;
All the edits are added to &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; void append(Entry e) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      pendingWrites.add(e);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here the pendingWrites are obtained and then it is flushed one by one.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
pending = logSyncerThread.getPendingWrites();
        &lt;span class=&quot;code-comment&quot;&gt;// First flush all the pending writes to HDFS. Then 
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// issue the sync to HDFS. If sync is successful, then update
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// syncedTillHere to indicate that transactions till &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// number has been successfully synced.
&lt;/span&gt;        logSyncerThread.hlogFlush(tempWriter, pending);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here there is no synchronization and hence the pendingwrites are not in sequence.  Because it is not in sequence the recovered.edits file is also created with no sequence in some cases.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (key.getLogSeqNum() &amp;lt;= currentEditSeqId) {
        	  LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;******** key is &quot;&lt;/span&gt; + key.getLogSeqNum()
						+ &lt;span class=&quot;code-quote&quot;&gt;&quot;current edit is &quot;&lt;/span&gt; + currentEditSeqId);  
            skippedEdits++;
            &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I just added the above log while replayRecoveredEdits and i can find &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
******** key is 175current edit is 176
******** key is 174current edit is 176
******** key is 186current edit is 187
******** key is 188current edit is 190
******* key is 189current edit is 190
******** key is 204current edit is 205
******** key is 206current edit is 207
******** key is 217current edit is 218
******** key is 216current edit is 218
******** key is 255current edit is 256
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This leads to dataloss.  Correct me if am wrong.&lt;/p&gt;


</comment>
                            <comment id="13254669" author="ram_krish" created="Mon, 16 Apr 2012 13:10:12 +0000"  >&lt;p&gt;We can easily reproduce this problem.  I think it applies to any edit that happens and if it is synced by the log syncer thread.&lt;br/&gt;
So we must have some sync mechanism here to ensure this problem does not happen.&lt;/p&gt;

&lt;p&gt;Based on one of our requirements i was thinking that the log syncer thread should be configurable like either to use it or not use it. &lt;br/&gt;
Please provide your suggestions.&lt;/p&gt;</comment>
                            <comment id="13254724" author="zhihyu@ebaysf.com" created="Mon, 16 Apr 2012 14:31:02 +0000"  >&lt;p&gt;One option is to not use appendNoSync() in doMiniBatchPut(). For high write throughput, I think &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5699&quot; title=&quot;Run with &amp;gt; 1 WAL in HRegionServer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5699&quot;&gt;&lt;del&gt;HBASE-5699&lt;/del&gt;&lt;/a&gt; should be the long-term solution.&lt;/p&gt;</comment>
                            <comment id="13254728" author="ram_krish" created="Mon, 16 Apr 2012 14:41:40 +0000"  >&lt;p&gt;@Zhihong&lt;br/&gt;
Yes &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5699&quot; title=&quot;Run with &amp;gt; 1 WAL in HRegionServer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5699&quot;&gt;&lt;del&gt;HBASE-5699&lt;/del&gt;&lt;/a&gt; can provide high write throughput.  But even there the syncing should be done for every WAL that we will  be writing there we should ensure that we do not sync everytime holding some locks. &lt;br/&gt;
So ideally this problem is coming out of parallel syncs(which may happen even if we have &amp;gt; 1 WAL).  Correct me if am wrong.&lt;/p&gt;</comment>
                            <comment id="13254782" author="ram_krish" created="Mon, 16 Apr 2012 16:07:46 +0000"  >&lt;p&gt;This patch passes TestHLog and TestHRegion.  Not able to run the testsuite as at home.&lt;br/&gt;
The idea here is the edits till the seq id already persisted can be safely ignored.&lt;br/&gt;
Now from this issue we are sure that the edits can appear in diff seq not necessary in the ascending order.&lt;/p&gt;

&lt;p&gt;So all the edits less than the seq id from the store files are skipped and all other edits are consdiered.  Please provide your comments.&lt;/p&gt;</comment>
                            <comment id="13254805" author="jdcryans" created="Mon, 16 Apr 2012 16:57:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;Based on one of our requirements i was thinking that the log syncer thread should be configurable like either to use it or not use it. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As long as it&apos;s enabled by default I&apos;m good with that.&lt;/p&gt;</comment>
                            <comment id="13254810" author="hadoopqa" created="Mon, 16 Apr 2012 17:02:48 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522794/HBASE-5782.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522794/HBASE-5782.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestForceCacheImportantBlocks&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1537//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1537//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1537//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1537//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1537//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1537//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13254892" author="jdcryans" created="Mon, 16 Apr 2012 18:40:07 +0000"  >&lt;p&gt;Looking more into this, I think &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; is the real issue. I think I can also prove that you can get the issue even with a disabled &lt;tt&gt;LogSyncer&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;t1 does &lt;tt&gt;appendNoSync&lt;/tt&gt; of k1&lt;br/&gt;
t1 does &lt;tt&gt;syncer&lt;/tt&gt; up to &lt;tt&gt;getPendingWrites&lt;/tt&gt;&lt;br/&gt;
t2 does &lt;tt&gt;appendNoSync&lt;/tt&gt; of k2&lt;br/&gt;
t2 does &lt;tt&gt;syncer&lt;/tt&gt; up to the end&lt;/p&gt;

&lt;p&gt;In the log you&apos;d see k2 then k1 so what&apos;s really wrong to me is this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// Done in parallel &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; all writer threads, thanks to HDFS-895
&lt;/span&gt;List&amp;lt;Entry&amp;gt; pending = logSyncerThread.getPendingWrites();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Although accessing pending writes is done in sync, you can apply them in whichever way.&lt;/p&gt;

&lt;p&gt;Furthermore, &lt;tt&gt;logSyncerThread.hlogFlush&lt;/tt&gt; can also append entries to the WAL in any order. For example, if both t1 and t2 have multiple edits they could end up intermingled in the WAL simply by doing &lt;tt&gt;hlogFlush&lt;/tt&gt; at the same time.&lt;/p&gt;

&lt;p&gt;If &lt;tt&gt;LogSyncer&lt;/tt&gt; was really an issue then &lt;tt&gt;HRegion.put&lt;/tt&gt; and &lt;tt&gt;HRegion.delete&lt;/tt&gt; would need to be disabled too since they don&apos;t use &lt;tt&gt;appendNoSync&lt;/tt&gt; and just sync everything &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;How this used to work is that threads could only append to the WAL under the &lt;tt&gt;updateLock&lt;/tt&gt; and that was done at the same time as the &lt;tt&gt;doWrite&lt;/tt&gt; which creates the key. The call to sync could be done by any number of threads at the same time.&lt;/p&gt;

&lt;p&gt;If this is right, then we should pull back &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; or add more locks.&lt;/p&gt;

&lt;p&gt;We should also change this Jira&apos;s title once we get a better understanding of the problem because it&apos;s not a region assignment problem.&lt;/p&gt;</comment>
                            <comment id="13254917" author="zhihyu@ebaysf.com" created="Mon, 16 Apr 2012 18:56:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;If this is right, then we should pull back &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; or add more locks&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Adding more locks would take more time to validate / test.&lt;/p&gt;

&lt;p&gt;In order to get 0.94.0 out the door, can we pull back &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; in 0.94 and pursue the locking approach in trunk (or separate branch) ?&lt;/p&gt;</comment>
                            <comment id="13254925" author="lhofhansl" created="Mon, 16 Apr 2012 19:01:37 +0000"  >&lt;p&gt;So the problem is that logSyncerThread keeps the edit in order but the syncer then applies the pending batches potentially out of order?&lt;/p&gt;

&lt;p&gt;We might just need a &quot;sync lock&quot; to prevent two threads syncing at the same time. This is different from the update lock, which also prevents writing any edits.&lt;/p&gt;</comment>
                            <comment id="13254932" author="jdcryans" created="Mon, 16 Apr 2012 19:08:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;In order to get 0.94.0 out the door, can we pull back &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; in 0.94 and pursue the locking approach in trunk (or separate branch) ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1, we might want to review &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4282&quot; title=&quot;RegionServer should abort when WAL close encounters an error with unflushed edits&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4282&quot;&gt;&lt;del&gt;HBASE-4282&lt;/del&gt;&lt;/a&gt; too as it seems to do something similar with the transaction ids.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So the problem is that logSyncerThread keeps the edit in order but the syncer then applies the pending batches potentially out of order?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s sad that the pending edits live in &lt;tt&gt;LogSyncer&lt;/tt&gt;, that thread is really just suppose to call sync... but yeah so they are added there in order but then it&apos;s a free for all in &lt;tt&gt;syncer&lt;/tt&gt;. Adding a sync there could solve the issue but in the end what it does is moving the log from appending (pre &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt;) to syncing plus a &lt;em&gt;ton&lt;/em&gt; of new complexity in HLog. I&apos;d prefer solution that doesn&apos;t add a lock to patch something that&apos;s broken.&lt;/p&gt;</comment>
                            <comment id="13254959" author="zhihyu@ebaysf.com" created="Mon, 16 Apr 2012 19:41:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d prefer solution that doesn&apos;t add a lock to patch something that&apos;s broken.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree.&lt;/p&gt;

&lt;p&gt;I suggest the following actions:&lt;br/&gt;
1. pull back &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; in 0.94 and trunk&lt;br/&gt;
2. a) spend major effort on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5699&quot; title=&quot;Run with &amp;gt; 1 WAL in HRegionServer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5699&quot;&gt;&lt;del&gt;HBASE-5699&lt;/del&gt;&lt;/a&gt; (multiple WALs per region server)&lt;br/&gt;
2. b) make &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; semantically correct&lt;/p&gt;

&lt;p&gt;2.a and 2.b can proceed in parallel. But I think &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5699&quot; title=&quot;Run with &amp;gt; 1 WAL in HRegionServer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5699&quot;&gt;&lt;del&gt;HBASE-5699&lt;/del&gt;&lt;/a&gt; is the long-term solution.&lt;/p&gt;</comment>
                            <comment id="13254994" author="zhihyu@ebaysf.com" created="Mon, 16 Apr 2012 20:06:19 +0000"  >&lt;p&gt;HLog.appendNoSync() is used by HRegion.&lt;/p&gt;
{append|doMiniBatchPut|mutateRowsWithLocks}
&lt;p&gt;.&lt;br/&gt;
Those methods would be affected when HLog.appendNoSync() is removed.&lt;/p&gt;</comment>
                            <comment id="13255034" author="stack" created="Mon, 16 Apr 2012 20:45:59 +0000"  >&lt;p&gt;I just committed a tool over on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5792&quot; title=&quot;HLog Performance Evaluation Tool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5792&quot;&gt;&lt;del&gt;HBASE-5792&lt;/del&gt;&lt;/a&gt;.  It tests WALs. If you pass the -verify flag, you&apos;ll see that even w/ just three threads, sequence ids are out of order.  Could be useful verifying whatever fix we have here.&lt;/p&gt;</comment>
                            <comment id="13255094" author="lhofhansl" created="Mon, 16 Apr 2012 21:40:28 +0000"  >&lt;p&gt;The short term choices we have are:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4528&quot; title=&quot;The put operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4528&quot;&gt;&lt;del&gt;HBASE-4528&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt;, and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5541&quot; title=&quot;Avoid holding the rowlock during HLog sync in HRegion.mutateRowWithLocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5541&quot;&gt;&lt;del&gt;HBASE-5541&lt;/del&gt;&lt;/a&gt; (are there others?)&lt;/li&gt;
	&lt;li&gt;Partially revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2467&quot; title=&quot;Concurrent flushers in HLog sync using HDFS-895&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2467&quot;&gt;&lt;del&gt;HBASE-2467&lt;/del&gt;&lt;/a&gt; (or devise other ways to have strictly one thread flushing an HLog).&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Maybe Todd as the author of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2467&quot; title=&quot;Concurrent flushers in HLog sync using HDFS-895&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2467&quot;&gt;&lt;del&gt;HBASE-2467&lt;/del&gt;&lt;/a&gt; could chime in... Todd?&lt;/p&gt;</comment>
                            <comment id="13255096" author="lhofhansl" created="Mon, 16 Apr 2012 21:44:01 +0000"  >&lt;p&gt;Simple patch to ensure only one thread flushes the log.&lt;br/&gt;
Don&apos;t hate me, just throwing this out there.&lt;/p&gt;</comment>
                            <comment id="13255102" author="stack" created="Mon, 16 Apr 2012 21:48:02 +0000"  >&lt;p&gt;The test passes w/ your patch in place Lars.  Let me try a perf compare.&lt;/p&gt;</comment>
                            <comment id="13255121" author="zhihyu@ebaysf.com" created="Mon, 16 Apr 2012 22:13:15 +0000"  >&lt;p&gt;Interesting patch.&lt;br/&gt;
How do we measure / compare the following combinations:&lt;br/&gt;
1. HLog.appendNoSync() used with one sync thread doing flush&lt;br/&gt;
2. HLog.appendNoSync() not used, multiple sync threads doing flush in parallel&lt;/p&gt;</comment>
                            <comment id="13255130" author="jdcryans" created="Mon, 16 Apr 2012 22:31:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;Don&apos;t hate me, just throwing this out there.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;LOL&lt;/p&gt;

&lt;p&gt;My current concerns:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Performance, and I&apos;m not the only one concerned.&lt;/li&gt;
	&lt;li&gt;OOME, what happens if you enable deferred log flush and HDFS is slowing down? That&apos;s actually an issue with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; since the &lt;tt&gt;LinkedList&lt;/tt&gt; of pending writes is unbounded whereas before simply appending to the file would slow you down.&lt;/li&gt;
	&lt;li&gt;This patch will make it that threads can sync data from threads that came in later. You need to check &lt;tt&gt;txid &amp;lt;= this.syncedTillHere&lt;/tt&gt; again once you are past the &lt;tt&gt;synchronized(syncLock)&lt;/tt&gt; and return if it was taken care of while you were blocking.&lt;/li&gt;
	&lt;li&gt;Deadlocks, you never know when adding new locks &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13255132" author="jdcryans" created="Mon, 16 Apr 2012 22:34:17 +0000"  >&lt;p&gt;Changing the summary to something more relevant.&lt;/p&gt;</comment>
                            <comment id="13255135" author="hadoopqa" created="Mon, 16 Apr 2012 22:38:52 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522867/5782.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522867/5782.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1545//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1545//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1545//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1545//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1545//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1545//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13255168" author="lhofhansl" created="Mon, 16 Apr 2012 23:04:26 +0000"  >&lt;p&gt;Is this really only a problem because of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4528&quot; title=&quot;The put operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4528&quot;&gt;&lt;del&gt;HBASE-4528&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt;?&lt;br/&gt;
It seems even without HLog.appendNoSync() is is possible that one threads flushes an entire batch of pending write before an thread that started earlier can get to it.&lt;/p&gt;</comment>
                            <comment id="13255172" author="jdcryans" created="Mon, 16 Apr 2012 23:09:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;It seems even without HLog.appendNoSync() is is possible that one threads flushes an entire batch of pending write before an thread that started earlier can get to it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We didn&apos;t have pending writes before, it was inside the sequence file writer, and we append under lock. Managing those pending writes is what&apos;s giving us trouble.&lt;/p&gt;</comment>
                            <comment id="13255186" author="tlipcon" created="Mon, 16 Apr 2012 23:44:18 +0000"  >&lt;p&gt;half-done patch of a proposed solution... got to run at the moment but will come back later with something more complete. The idea is to only have one &quot;seqnum&quot; in use, and make sure only a single thread pushes from the pending edits queue into a seqfile writer at a time.&lt;/p&gt;</comment>
                            <comment id="13255191" author="lhofhansl" created="Mon, 16 Apr 2012 23:51:06 +0000"  >&lt;p&gt;Sketched patch looks good, making sure that we do sync&apos; a batch of write before the previous batch is done.&lt;/p&gt;

&lt;p&gt;I was thinking about something similar, but still allowing multiple threads to write, just that a thread cannot start writing before the previous batch is confirmed sync&apos;ed. I guess we actually wouldn&apos;t get more parallelism out that than with your approach.&lt;/p&gt;</comment>
                            <comment id="13255201" author="stack" created="Tue, 17 Apr 2012 00:12:48 +0000"  >&lt;p&gt;Not sure I follow but I do know this patch more ambitious than what I was at....&lt;/p&gt;

&lt;p&gt;+ You remove the &apos;other&apos; sequence numbering system, unflushedEntries?  That looks good.&lt;br/&gt;
+ Are asserts on by default?  We disabled them a while back I believe?  You run w/ asserts? (Yeah, thats a good thing to test &amp;#8211; should you use your guava test instead?)&lt;br/&gt;
+ Its ugly we call it hlogFlush but internal we do appends (thats not your change)&lt;br/&gt;
+ I agree that the reset of the the pending writes linked list needs to be done under the synchronization held by hlogFlush&lt;br/&gt;
+ I like how you do pushback of edits if we fail....in hlogFlush.&lt;br/&gt;
+ On  this thing: &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// TODO: restore metric syncBatchSize.addAndGet(doneUpto - &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.syncedTillHere);&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Its not used anywhere and it the math looked dodgy... then when you read it it gets set to zero so I&apos;m not so sure it is of any use.&lt;/p&gt;</comment>
                            <comment id="13255204" author="stack" created="Tue, 17 Apr 2012 00:15:50 +0000"  >&lt;p&gt;I started in on a patch but I prefer Todd&apos;s.  Mine just put together the getting of pending writes and their appending under same sync block but left sync outside of the synchronization.  Unfinished.&lt;/p&gt;</comment>
                            <comment id="13255239" author="hadoopqa" created="Tue, 17 Apr 2012 01:10:11 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522890/5782.unfinished-stack.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522890/5782.unfinished-stack.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRollingNoCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1548//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1548//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1548//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1548//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1548//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1548//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13255299" author="ram_krish" created="Tue, 17 Apr 2012 04:38:37 +0000"  >&lt;p&gt;Thanks to all for working on this.&lt;br/&gt;
@JD&lt;br/&gt;
I agree that LogSyncer thread is not the real problem, it can happen even without that.&lt;/p&gt;

&lt;p&gt;My initial thought was also to introduce some locks but finally thought that the expected parallelism cannot be obtained.  That is why i went with the fix while replayingtheRecoveredEdits. I will go thro the current patch also.&lt;/p&gt;</comment>
                            <comment id="13255308" author="lhofhansl" created="Tue, 17 Apr 2012 05:03:46 +0000"  >&lt;p&gt;@Ram: It looks like your patch should work for this scenario, but I&apos;d be generally wary about edits not being in order in the WAL.&lt;/p&gt;</comment>
                            <comment id="13255329" author="ram_krish" created="Tue, 17 Apr 2012 05:42:29 +0000"  >&lt;p&gt;@Lars&lt;br/&gt;
Correct me if am wrong.  &lt;br/&gt;
Currently the edits are ordered atleast in the memory so that the store file that is persisted is having the proper sequence number.&lt;br/&gt;
But it is when applying it to the WAL there is a change and the same needs to be taken care while replaying.  &lt;br/&gt;
Is there any special consideration needed that my edits have to ordered even in the WAL file? What is the design consideration behind this?&lt;br/&gt;
May be am missing something here.&lt;br/&gt;
@Stack&lt;br/&gt;
This patch is one similar to the one i had in mind.  Synchronize getPendingWrites and the &apos;writer.append(e);&apos;.&lt;/p&gt;</comment>
                            <comment id="13255344" author="stack" created="Tue, 17 Apr 2012 05:57:41 +0000"  >&lt;p&gt;@Ram Read over the HLog comments.  Its got stuff on why we want sequenceids in order and where we have dependency on their being ordered, at least they are notes on how we used to think.  I was wondering too about ordering today.  If we didn&apos;t have to have order, then it would make stuff like running a regionserver with N WALs a bit easier, and we don&apos;t try to guarantee sequence order when replicating.  But I&apos;m wary undoing order though without our giving the issue a bunch of thought first (Your patch above makes me nervous).&lt;/p&gt;

&lt;p&gt;On the patch, Todds&apos; seems way superior to me. His is more radical, removing what seems to be a confusing sequenceid double, and its more clear whats going on.&lt;/p&gt;

&lt;p&gt;Oh, and thanks to you fellas for finding this one.  Its a good one.&lt;/p&gt;</comment>
                            <comment id="13255353" author="tlipcon" created="Tue, 17 Apr 2012 06:11:07 +0000"  >&lt;p&gt;New rev - this one should even compile! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I tested a few of the hlog tests locally and they seem to pass. Also ran the standalone hlog tool with a bunch of threads and -verify. Throughput is identical, and errors are gone.&lt;/p&gt;

&lt;p&gt;I&apos;m nervous about error handling, though... seems like if the syncer thread had an error, another thread might wait forever.&lt;/p&gt;

&lt;p&gt;I&apos;d really like to rip this apart and make it all component-ized and unit-testable, but tried to keep this patch minimal.&lt;/p&gt;</comment>
                            <comment id="13255381" author="hadoopqa" created="Tue, 17 Apr 2012 07:07:45 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522913/hbase-5782.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522913/hbase-5782.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1549//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1549//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1549//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1549//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1549//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1549//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13255395" author="tlipcon" created="Tue, 17 Apr 2012 07:43:25 +0000"  >&lt;p&gt;Looks like some test timeouts... will investigate tomorrow.&lt;/p&gt;</comment>
                            <comment id="13255711" author="lhofhansl" created="Tue, 17 Apr 2012 16:46:08 +0000"  >&lt;p&gt;In the interest of keeping this simple, here&apos;s another simple patch.&lt;/p&gt;

&lt;p&gt;This patch assumes that:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;It is only the appends that need to happen in order.&lt;/li&gt;
	&lt;li&gt;The sync is the time consuming operation.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;So a special lock is only held for enforce the ordering of the appends (appends are single threaded) and syncs can happen in parallel without this lock held.&lt;/p&gt;

&lt;p&gt;This should give us the maximum concurrency possible, while keeping the change small and palletable for 0.94.&lt;/p&gt;

&lt;p&gt;Please let me know whether I am smoking something.&lt;/p&gt;</comment>
                            <comment id="13255718" author="tlipcon" created="Tue, 17 Apr 2012 16:54:51 +0000"  >&lt;p&gt;Don&apos;t think you&apos;re smoking something. It looks reasonable, though I think there are still races around the update of doneUpTo, syncedTilHere, etc. These races may be &quot;safe&quot; in that they only result in too-low values (and thus extra needless syncs) but I&apos;m not 100% sure of it. Maybe we can extend the verification test case to run as a stress test, including rolls, and run it overnight or something?&lt;/p&gt;</comment>
                            <comment id="13255760" author="hadoopqa" created="Tue, 17 Apr 2012 17:44:36 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522975/5782-lars-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522975/5782-lars-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1551//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1551//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1551//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1551//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1551//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1551//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13255770" author="lhofhansl" created="Tue, 17 Apr 2012 17:57:39 +0000"  >&lt;p&gt;Yep. It&apos;s crucial that syncTillHere is updated last.&lt;br/&gt;
The pendingWrites are appended strictly in order, so there is a very short race that might lead to sync be issued multiple time when only one was necessary (it seems the same race condition existed before).&lt;br/&gt;
So I think it is safe and low risk.&lt;/p&gt;

&lt;p&gt;The question now is: Do this for 0.94 and then a more elaborate rewrite in trunk, or do a more risky rewrite for 0.94?&lt;/p&gt;</comment>
                            <comment id="13255784" author="jdcryans" created="Tue, 17 Apr 2012 18:07:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;The pendingWrites are appended strictly in order, so there is a very short race that might lead to sync be issued multiple time when only one was necessary (it seems the same race condition existed before).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A short race is better than what we currently do in 0.92 (and before) where everything syncs everything.&lt;/p&gt;</comment>
                            <comment id="13255828" author="lhofhansl" created="Tue, 17 Apr 2012 18:57:30 +0000"  >&lt;p&gt;Anybody opposed to do my patch for 0.94 and do a rewrite in trunk? Todd? Stack? Ted?&lt;/p&gt;</comment>
                            <comment id="13255832" author="tlipcon" created="Tue, 17 Apr 2012 19:00:14 +0000"  >&lt;p&gt;Seems reasonable to me. Did yours pass tests, etc?&lt;/p&gt;</comment>
                            <comment id="13255834" author="zhihyu@ebaysf.com" created="Tue, 17 Apr 2012 19:01:30 +0000"  >&lt;p&gt;HLogPerformanceEvaluation verification is needed as well.&lt;/p&gt;</comment>
                            <comment id="13255877" author="stack" created="Tue, 17 Apr 2012 19:49:50 +0000"  >&lt;p&gt;Looking at Lars patch.&lt;/p&gt;

&lt;p&gt;On you 1. and 2. above, apparently the append is also expensive according to Dhruba.  Just saying.&lt;/p&gt;

&lt;p&gt;Also on.... &quot;...might lead to sync be issued multiple time when only one was necessary (it seems the same race condition existed before).&quot;&lt;/p&gt;

&lt;p&gt;Yes, this we have always had.&lt;/p&gt;

&lt;p&gt;I&apos;d say kill this stuff... it looks like rubbish to me:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      syncBatchSize.addAndGet(doneUpto - &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.syncedTillHere);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Its not read by anyone, looks like the math can go wonky, and when it is read, its set back to zero which is probably unexpected.  Kill it I&apos;d say.&lt;/p&gt;

&lt;p&gt;I think this is ok:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.syncedTillHere = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.max(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.syncedTillHere, doneUpto);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but this is racy&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; doneUpto = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.unflushedEntries.get();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It could be low in number; i.e. we could be putting into hdfs more edits than the current value of unflushedEntries if we read after an edit has been added to the queue but before the above is updated.  Is that ok?  Its ok if this is a little sloppy especially if it under reports?&lt;/p&gt;

&lt;p&gt;On tactic for 0.94, sure on doing this for 0.94 though I like Todds fix better.  The verification tool will help you figure if this slows stuff much and if we are writing out of order.  Let me know if you want me to run it for you.  Let me add in log rolling too as per Todd suggestion.&lt;/p&gt;</comment>
                            <comment id="13255885" author="stack" created="Tue, 17 Apr 2012 20:04:18 +0000"  >&lt;p&gt;Can we try and make Todd&apos;s work?  It does some nice cleanup.&lt;/p&gt;</comment>
                            <comment id="13255911" author="lhofhansl" created="Tue, 17 Apr 2012 20:36:57 +0000"  >&lt;p&gt;@Stack: the doneUpTo is fine, because it is only used to set syncedTillHere. We won&apos;t write more into the log (once we take the pendingWrites they are gone), but we might sync too much unnecessarily.&lt;br/&gt;
Will do the (performance) testing now. I don&apos;t have a cluster at my disposal atm, so I&apos;ll do it with a local HDFS instance.&lt;/p&gt;

&lt;p&gt;If we&apos;d rather finish Todd&apos;s for 0.94 that&apos;d be nice.&lt;/p&gt;</comment>
                            <comment id="13255937" author="stack" created="Tue, 17 Apr 2012 21:00:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;We won&apos;t write more into the log (once we take the pendingWrites they are gone&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is that so?  We don&apos;t get the pendingWrites until we are under the flush lock but we&apos;ve taken doneUpTo before we go under the lock.&lt;/p&gt;</comment>
                            <comment id="13255939" author="lhofhansl" created="Tue, 17 Apr 2012 21:02:21 +0000"  >&lt;p&gt;Ah, I see. Yes, doneUpto line should be pulled into the synchronized block.&lt;/p&gt;</comment>
                            <comment id="13255959" author="stack" created="Tue, 17 Apr 2012 21:23:25 +0000"  >&lt;p&gt;@Lars But it own&apos;t matter right since the map we are getting from is not under our new flush lock?  I think its harmless.  We will undercount whats been flushed I believe; we&apos;ll not overcount (and so possible lose data)?&lt;/p&gt;

&lt;p&gt;I added log rolling and tested your patch using HLogPerformanceEvaluation.  It &apos;works&apos; at least.  If you want me to compare before and after, just say.&lt;/p&gt;</comment>
                            <comment id="13255974" author="lhofhansl" created="Tue, 17 Apr 2012 21:40:11 +0000"  >&lt;p&gt;@Stack: I ran it too. It works fine. The &quot;interesting&quot; thing I find that it is faster &lt;b&gt;with&lt;/b&gt; the patch! And that scares me.&lt;br/&gt;
I ran with 100 threads, 10000 iterations. With the patch it took 29s, without it took 43s. This is on a 6 core machine with hyper threading.&lt;/p&gt;

&lt;p&gt;Now, the HLogPerformanceEvaluation does not work with -nosync and -verify, right? (presumably because no final sync is issued).&lt;/p&gt;

&lt;p&gt;Wouldn&apos;t mind to get some other numbers from you as well if you had some time.&lt;/p&gt;</comment>
                            <comment id="13256030" author="tlipcon" created="Tue, 17 Apr 2012 22:55:33 +0000"  >&lt;p&gt;I think for 0.94.0 we should commit Lars&apos;s, and file another JIRA to clean up / rewrite this stuff to be less circuitous. Could definitely do with a cleanup.&lt;/p&gt;</comment>
                            <comment id="13256043" author="stack" created="Tue, 17 Apr 2012 23:15:53 +0000"  >&lt;p&gt;I made the hlog perf tool work on hdfs and ran some basic tests.  Both Todd an Lars&apos; patches seem faster than what we have currently.&lt;/p&gt;

&lt;p&gt;Running w/o a fix on hdfs w/ current trunk I have to disable verify because it fails (verify happens after we print out test timings).&lt;/p&gt;

&lt;p&gt;$ ./bin/hbase org.apache.hadoop.hbase.regionserver.wal.HLogPerformanceEvaluation -conf /home/stack/hadoop-conf/core-site.xml -path hdfs://sv4r11s38:7000/tmp -threads 100 -roll 10000&lt;/p&gt;

&lt;p&gt;12/04/17 22:58:28 INFO wal.HLogPerformanceEvaluation: Summary: threads=100, iterations=10000 took 100.630s 9937.395ops/s&lt;br/&gt;
12/04/17 23:00:33 INFO wal.HLogPerformanceEvaluation: Summary: threads=100, iterations=10000 took 94.945s 10532.413ops/s&lt;/p&gt;

&lt;p&gt;Todd patch on hdfs:&lt;/p&gt;

&lt;p&gt;$ ./bin/hbase org.apache.hadoop.hbase.regionserver.wal.HLogPerformanceEvaluation -conf /home/stack/hadoop-conf/core-site.xml -path hdfs://sv4r11s38:7000/tmp -threads 100 -roll 10000 -verify&lt;/p&gt;

&lt;p&gt;12/04/17 22:53:35 INFO wal.HLogPerformanceEvaluation: Summary: threads=100, iterations=10000 took 81.202s 12314.967ops/s&lt;/p&gt;

&lt;p&gt;Lars patch:&lt;/p&gt;

&lt;p&gt;12/04/17 23:07:08 INFO wal.HLogPerformanceEvaluation: Summary: threads=100, iterations=10000 took 76.800s 13020.833ops/s&lt;/p&gt;

&lt;p&gt;For Todd and Lars, both pass verify which checks that seqids are ordered and that we wrote as much as we think we did.&lt;/p&gt;</comment>
                            <comment id="13256044" author="stack" created="Tue, 17 Apr 2012 23:16:32 +0000"  >&lt;p&gt;Ok on lars patch into 0.94.&lt;/p&gt;</comment>
                            <comment id="13256058" author="lhofhansl" created="Tue, 17 Apr 2012 23:30:41 +0000"  >&lt;p&gt;Thanks Stack!&lt;/p&gt;

&lt;p&gt;I&apos;ll run a test with fewer threads too, just to make sure, the fact that both of our patches are faster probably means that we did a lot of unnecessary sync&apos;ing before...? 20% performance increase is pretty damn awesome.&lt;/p&gt;</comment>
                            <comment id="13256061" author="jdcryans" created="Tue, 17 Apr 2012 23:38:28 +0000"  >&lt;p&gt;For my part I tested on a cluster with 1kb values, huge batches, and I don&apos;t see any improvement with Lars&apos; patch. Todd&apos;s peaks 20% higher.&lt;/p&gt;</comment>
                            <comment id="13256072" author="lhofhansl" created="Tue, 17 Apr 2012 23:50:48 +0000"  >&lt;p&gt;Did some more tests with HLogPerformanceEvaluation (and my patch):&lt;/p&gt;

&lt;p&gt;10 threads, 100000 iterations: with patch: 42s, without patch: 41s&lt;br/&gt;
5 threads, 200000 iterations:  with patch: 46s, without patch: 44s&lt;br/&gt;
2 threads, 200000 iterations:  with patch: 46s, without patch: 44s&lt;/p&gt;

&lt;p&gt;So for fewer threads my patch is slightly slower.&lt;/p&gt;

&lt;p&gt;So... What do we do? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13256085" author="stack" created="Wed, 18 Apr 2012 00:04:24 +0000"  >&lt;p&gt;I tried to reproduce what JD is seeing on cluster using same sized keys and values but Lars&apos; patch completes before Todds.  My test run may be too small  I did thread dumps during Lars and Todd runs.  Both seem to be down in sync mostly, down here &apos;org.apache.hadoop.hdfs.DFSClient$DFSOutputStream.waitForAckedSeqno(DFSClient.java:3789)&apos; otherwise hung up on sync points around wal append/sync.&lt;/p&gt;

&lt;p&gt;Lets go w/ the Lars patch because minimal changes.  As per Todd, lets file an issue to clean up this stuff with his patch as seed.  From J-D work, any grease lightening we can apply around hlog append makes for a big difference in overall write throughput.&lt;/p&gt;</comment>
                            <comment id="13256087" author="stack" created="Wed, 18 Apr 2012 00:06:19 +0000"  >&lt;p&gt;@Lars As to your patch being &apos;slower&apos; when fewer threads, I think you can&apos;t do such a compare.  W/o your patch, we are broke.&lt;/p&gt;</comment>
                            <comment id="13256094" author="lhofhansl" created="Wed, 18 Apr 2012 00:14:25 +0000"  >&lt;p&gt;I&apos;m +1 on committing on my patch for 0.94.0. We can then either revisit for 0.94.1 or 0.96.&lt;/p&gt;</comment>
                            <comment id="13256176" author="ram_krish" created="Wed, 18 Apr 2012 03:42:58 +0000"  >&lt;p&gt;I&apos;m +1 on Lar&apos;s patch.  &lt;/p&gt;</comment>
                            <comment id="13256185" author="stack" created="Wed, 18 Apr 2012 04:06:25 +0000"  >&lt;p&gt;Want me to make a test that does simple three threads with just a few edits ... say 1k... and then verifies all in order and all edits written so we notice regression?&lt;/p&gt;</comment>
                            <comment id="13256187" author="zhihyu@ebaysf.com" created="Wed, 18 Apr 2012 04:11:29 +0000"  >&lt;p&gt;+1 on such a test which would prevent regression.&lt;/p&gt;</comment>
                            <comment id="13256200" author="lhofhansl" created="Wed, 18 Apr 2012 04:44:40 +0000"  >&lt;p&gt;Yes, we need a test for this. What scared me most about this bug was that no test caught it, and this one of &lt;b&gt;the&lt;/b&gt; core parts of HBase.&lt;/p&gt;

&lt;p&gt;This test would basically just call code from HLogPerformanceEvaluation, right?&lt;/p&gt;</comment>
                            <comment id="13256202" author="lhofhansl" created="Wed, 18 Apr 2012 04:45:56 +0000"  >&lt;p&gt;I can work on a test, unless you like to Stack, or maybe you have started on it anyway.&lt;/p&gt;</comment>
                            <comment id="13256203" author="lhofhansl" created="Wed, 18 Apr 2012 04:49:06 +0000"  >&lt;p&gt;This is what I would commit to 0.94. (plus a test that either Stack or I would write).&lt;/p&gt;</comment>
                            <comment id="13256211" author="stack" created="Wed, 18 Apr 2012 05:26:37 +0000"  >&lt;p&gt;A unit test.  Currently fails.&lt;/p&gt;</comment>
                            <comment id="13256220" author="hadoopqa" created="Wed, 18 Apr 2012 05:44:34 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12523074/5782-v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12523074/5782-v3.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    -1 tests included.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 6 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.TestSplitLogManager&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1560//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1560//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1560//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1560//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1560//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1560//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13256236" author="hadoopqa" created="Wed, 18 Apr 2012 06:24:40 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12523078/5782.unittest.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12523078/5782.unittest.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 6 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestHLog&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1562//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1562//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1562//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1562//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1562//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1562//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13256756" author="lhofhansl" created="Wed, 18 Apr 2012 17:57:53 +0000"  >&lt;p&gt;For some reason I cannot run TestHLog locally. I always get:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests run: 0, Failures: 0, Errors: 0, Skipped: 0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can run all other tests that I tried (including some others marked with @LargeTests). Verified again with HLogPerformanceEvaluation manually.&lt;br/&gt;
Should we put &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5792&quot; title=&quot;HLog Performance Evaluation Tool&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5792&quot;&gt;&lt;del&gt;HBASE-5792&lt;/del&gt;&lt;/a&gt; in 0.94 as well, so that we use this test?&lt;/p&gt;</comment>
                            <comment id="13256788" author="stack" created="Wed, 18 Apr 2012 18:29:28 +0000"  >&lt;p&gt;You will need to pull in HLogPerformanceEvaluation.  Copy it whole (don&apos;t do the hbase-5792 because it got mod&apos;d a few times subsequent to commit).  You could also just commit the unit test to trunk and not to 0.94; that should be fine long as we hold to committing patches to trunk first.&lt;/p&gt;</comment>
                            <comment id="13256930" author="lhofhansl" created="Wed, 18 Apr 2012 20:38:44 +0000"  >&lt;p&gt;Committed to 0.94 and 0.96 (including test)&lt;/p&gt;</comment>
                            <comment id="13256933" author="lhofhansl" created="Wed, 18 Apr 2012 20:40:40 +0000"  >&lt;p&gt;Now note, that TestHLog still does not run anything locally (neither in 0.94 or trunk), there is something with that specific test it seems.&lt;/p&gt;</comment>
                            <comment id="13256968" author="stack" created="Wed, 18 Apr 2012 21:16:08 +0000"  >&lt;p&gt;Sorry. Dumb. The tool calls system.exit.  Let me fix in another issue.&lt;/p&gt;</comment>
                            <comment id="13256978" author="hudson" created="Wed, 18 Apr 2012 21:24:11 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #15 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/15/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/15/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5782&quot; title=&quot;Edits can be appended out of seqid order since HBASE-4487&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5782&quot;&gt;&lt;del&gt;HBASE-5782&lt;/del&gt;&lt;/a&gt; Edits can be appended out of seqid order since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; (Revision 1327672)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13256993" author="hudson" created="Wed, 18 Apr 2012 21:43:26 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2783 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2783/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2783/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5782&quot; title=&quot;Edits can be appended out of seqid order since HBASE-4487&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5782&quot;&gt;&lt;del&gt;HBASE-5782&lt;/del&gt;&lt;/a&gt; Edits can be appended out of seqid order since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; (Revision 1327673)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13257005" author="hudson" created="Wed, 18 Apr 2012 21:52:27 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #129 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/129/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/129/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5782&quot; title=&quot;Edits can be appended out of seqid order since HBASE-4487&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5782&quot;&gt;&lt;del&gt;HBASE-5782&lt;/del&gt;&lt;/a&gt; Edits can be appended out of seqid order since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; (Revision 1327672)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13257100" author="zhihyu@ebaysf.com" created="Thu, 19 Apr 2012 00:02:42 +0000"  >&lt;p&gt;Do we need to log another issue for trunk which would finish Todd&apos;s work ?&lt;/p&gt;</comment>
                            <comment id="13257105" author="lhofhansl" created="Thu, 19 Apr 2012 00:14:13 +0000"  >&lt;p&gt;Yes.&lt;/p&gt;</comment>
                            <comment id="13257263" author="hudson" created="Thu, 19 Apr 2012 05:58:32 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #175 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/175/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/175/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5782&quot; title=&quot;Edits can be appended out of seqid order since HBASE-4487&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5782&quot;&gt;&lt;del&gt;HBASE-5782&lt;/del&gt;&lt;/a&gt; Edits can be appended out of seqid order since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; (Revision 1327673)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12551558">HBASE-5826</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12551534">HBASE-5825</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12550952">HBASE-5792</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12522975" name="5782-lars-v2.txt" size="2912" author="lhofhansl" created="Tue, 17 Apr 2012 16:46:07 +0000"/>
                            <attachment id="12522884" name="5782-sketch.txt" size="11553" author="tlipcon" created="Mon, 16 Apr 2012 23:44:17 +0000"/>
                            <attachment id="12523074" name="5782-v3.txt" size="3632" author="lhofhansl" created="Wed, 18 Apr 2012 04:49:03 +0000"/>
                            <attachment id="12522867" name="5782.txt" size="2637" author="lhofhansl" created="Mon, 16 Apr 2012 21:44:00 +0000"/>
                            <attachment id="12522890" name="5782.unfinished-stack.txt" size="6069" author="stack" created="Tue, 17 Apr 2012 00:15:50 +0000"/>
                            <attachment id="12523078" name="5782.unittest.txt" size="1056" author="stack" created="Wed, 18 Apr 2012 05:26:34 +0000"/>
                            <attachment id="12522794" name="HBASE-5782.patch" size="626" author="ram_krish" created="Mon, 16 Apr 2012 16:06:04 +0000"/>
                            <attachment id="12522913" name="hbase-5782.txt" size="14554" author="tlipcon" created="Tue, 17 Apr 2012 06:11:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Apr 2012 14:38:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>235695</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 35 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i068uv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34366</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>