<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:27:56 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5456/HBASE-5456.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5456] Introduce PowerMock into our unit tests to reduce unnecessary method exposure</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5456</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We should introduce PowerMock into our unit tests so that we don&apos;t have to expose methods intended to be used by unit tests.&lt;/p&gt;

&lt;p&gt;Here was Benoit&apos;s reply to a user of asynchbase about testability:&lt;/p&gt;

&lt;p&gt;OpenTSDB has unit tests that are mocking out HBaseClient just fine&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;.  You can mock out pretty much anything on the JVM: final,&lt;br/&gt;
private, JDK stuff, etc.  All you need is the right tools.  I&apos;ve been&lt;br/&gt;
very happy with PowerMock.  It supports Mockito and EasyMock.&lt;/p&gt;

&lt;p&gt;I&apos;ve never been keen on mutilating public interfaces for the sake of&lt;br/&gt;
testing.  With tools like PowerMock, we can keep the public APIs tidy&lt;br/&gt;
while mocking and overriding anything, even in the most private guts&lt;br/&gt;
of the classes.&lt;/p&gt;

&lt;p&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://github.com/stumbleupon/opentsdb/blob/master/src/uid/TestUniqueId.java#L66&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/stumbleupon/opentsdb/blob/master/src/uid/TestUniqueId.java#L66&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12543741">HBASE-5456</key>
            <summary>Introduce PowerMock into our unit tests to reduce unnecessary method exposure</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="zhihyu@ebaysf.com">Ted Yu</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Feb 2012 20:32:26 +0000</created>
                <updated>Tue, 25 Sep 2012 21:41:53 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13213990" author="mikhail" created="Wed, 22 Feb 2012 20:38:23 +0000"  >&lt;p&gt;I think this only makes sense for HBase if people start running all unit tests for every patch (not just &quot;small&quot; and &quot;medium&quot; tests). These advanced reflection features convert some frequent types of errors from compile-time to test-time. Also, a lot of IDE search and refactoring features will be broken.&lt;/p&gt;</comment>
                            <comment id="13214006" author="zhihyu@ebaysf.com" created="Wed, 22 Feb 2012 21:03:00 +0000"  >&lt;p&gt;My understanding is that Hadoop QA does run all tests.&lt;br/&gt;
From &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1013/console:&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1013/console:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests run: 885, Failures: 6, Errors: 1, Skipped: 10

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 37:16.809s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From &lt;a href=&quot;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/2665/console:&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/2665/console:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Tests run: 885, Failures: 0, Errors: 3, Skipped: 10

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 48:14.023s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13214013" author="zhihyu@ebaysf.com" created="Wed, 22 Feb 2012 21:31:27 +0000"  >&lt;p&gt;From Ted Dunning:&lt;/p&gt;

&lt;p&gt;Actually jmockit uses byte code patching so you may suffer less reflection overhead than expected. My guess is that powermock is doing something quite similar.&lt;/p&gt;</comment>
                            <comment id="13214029" author="tlipcon" created="Wed, 22 Feb 2012 21:54:17 +0000"  >&lt;p&gt;I tend to agree with Mikhail. The presence of a protected method named &quot;getRegionServerServicesForTests&quot; or something lets me know, when I&apos;m working on the code, that this method is used, and I can easily use eclipse to tell me which unit tests use it. PowerMock and other tools which use strings to refer to functions aren&apos;t going to play nice with that, so it&apos;s easy to be unaware of test dependencies.&lt;/p&gt;

&lt;p&gt;I think these tools are best used sparingly and only to mock out system dependencies (like &quot;new FileInputStream()&quot;, &quot;InetSocketAddress.getHostName()&quot;, or &quot;System.currentTimeMillis()&quot;)&lt;/p&gt;</comment>
                            <comment id="13214039" author="zhihyu@ebaysf.com" created="Wed, 22 Feb 2012 22:08:54 +0000"  >&lt;p&gt;If the following methods can be made protected or package private, that would be some progress:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;DataBlockEncoding, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; getEncodingCountsForTest() {
src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; SchemaMetrics getUnknownInstanceForTest() {
src/main/java/org/apache/hadoop/hbase/regionserver/metrics/SchemaMetrics.java
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void compactRecentForTesting(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; N) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
src/main/java/org/apache/hadoop/hbase/regionserver/Store.java
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; User createUserForTesting(Configuration conf,
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; User createUserForTesting(Configuration conf,
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; User createUserForTesting(Configuration conf,
src/main/java/org/apache/hadoop/hbase/security/User.java
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getNumQueriesForTesting(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; chunk) {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getNumPositivesForTesting(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; chunk) {
src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13214119" author="stack" created="Thu, 23 Feb 2012 00:13:50 +0000"  >&lt;p&gt;I don&apos;t think that this is the kind of thing you can do by fiat.  My take is that we&apos;ll use PowerMock when it makes sense (apart from the fact that PowerMock isn&apos;t exactly a walk-in-the-park).&lt;/p&gt;

&lt;p&gt;My current take on testing in hbase is that so much of our code base is test inscrutable and that anything we can do to shine light on these untested savannas of code is good by me, even unto adding public methods that allow injection of alternate classes.&lt;/p&gt;</comment>
                            <comment id="13214128" author="mikhail" created="Thu, 23 Feb 2012 00:30:30 +0000"  >&lt;p&gt;I think most of our access restriction problems occur when the test and the class being accessed are in different packages. An alternative way to restrict test-only method access while avoiding using reflection is to define the test-only method as protected and create a subclass in the test.&lt;/p&gt;</comment>
                            <comment id="13214131" author="zhihyu@ebaysf.com" created="Thu, 23 Feb 2012 00:33:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;to define the test-only method as protected and create a subclass in the test.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 to above suggestion.&lt;/p&gt;</comment>
                            <comment id="13214140" author="jesse_yates" created="Thu, 23 Feb 2012 00:46:40 +0000"  >&lt;p&gt;I don&apos;t see it as that big of a deal that power mock breaks the ide refactorings vs the gain of having truly cleaner code bases. Instead of having these protected test-only methods, you don&apos;t need to have any methods at all (also, why have them protected when you can just make them package private and just have tests in the same package? And should you really be testing across packages if this doesn&apos;t work? Probably not).&lt;/p&gt;

&lt;p&gt;Yeah, it can be a pain that the ide doesn&apos;t automagically take care of this stuff for you, but you should know which tests you are changing and if those elements are in fact correctly changed. On the small scale (per patch), you probably aren&apos;t going to be changing more than a handful of broken methods (if that).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;My take is that we&apos;ll use PowerMock when it makes sense&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Which is how it should be used - we just need to be diligent to make sure that we really need to dig into the internals of a class rather than test around the public interfaces. Granted, we do have a lot of stuff that isn&apos;t amiable to DI, but powermock can help a lot with that too (catching constructor calls,etc) without having to rewrite massive amounts of code.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;PowerMock isn&apos;t exactly a walk-in-the-park&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s got some &quot;interesting features&quot; but the docs are actually pretty comprehensive. It just takes a little getting used to &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13214156" author="zhihyu@ebaysf.com" created="Thu, 23 Feb 2012 01:13:28 +0000"  >&lt;p&gt;From Jim on asynchbase mailing list:&lt;/p&gt;

&lt;p&gt;Works like a champ! Thanks a ton for telling me this... I had never realized that PowerMock extended the other mocking frameworks to offer the extended functionality such as Mocking Static, Final, Private, Constructor, and Partial ... This makes things a lot easier to test.&lt;/p&gt;</comment>
                            <comment id="13214289" author="mikhail" created="Thu, 23 Feb 2012 04:26:04 +0000"  >&lt;p&gt;On PowerMock: yes, I agree that in some cases it is a cleaner solution than creating test-only methods.&lt;/p&gt;

&lt;p&gt;@Ted: I see 1406 tests in my full test suite run. Do you have some reasons to believe that the total number of small/medium/large tests should be 885?&lt;/p&gt;</comment>
                            <comment id="13214300" author="zhihyu@ebaysf.com" created="Thu, 23 Feb 2012 04:43:09 +0000"  >&lt;p&gt;@Mikhail:&lt;br/&gt;
Thanks for the reminder and pardon my math &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Looking at &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1013/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1013/console&lt;/a&gt; again, we can see:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Results :

Tests run: 519, Failures: 0, Errors: 0, Skipped: 0
...
Results :

Failed tests:   testMROnTable(org.apache.hadoop.hbase.mapreduce.TestImportTsv)
  testMROnTableWithCustomMapper(org.apache.hadoop.hbase.mapreduce.TestImportTsv)
  testMRIncrementalLoad(org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat)
  testMRIncrementalLoadWithSplit(org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat)
  testExcludeMinorCompaction(org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat)
  queueFailover(org.apache.hadoop.hbase.replication.TestReplication): Waited too much time &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; queueFailover replication

Tests in error: 
  testMultiRegionTable(org.apache.hadoop.hbase.mapred.TestTableMapReduce): Job failed!

Tests run: 885, Failures: 6, Errors: 1, Skipped: 10
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;519+885 is 1404 which is very close to what you have seen.&lt;/p&gt;</comment>
                            <comment id="13455151" author="jesse_yates" created="Thu, 13 Sep 2012 19:08:27 +0000"  >&lt;p&gt;Reviving this discussion after talking at recent pow-wow. In short, powermock has some &lt;em&gt;interesting&lt;/em&gt; features -making it very powerful - that will really help to cleanup the codebase. &lt;/p&gt;

&lt;p&gt;For instance, it can help get rid of are the test visible methods. Yes, on one hand you could subclass the class you are testing to get at the protected methods, but then you have the issue of making that class loadable as well. It can easily spiral out of control where everything is dynamically loadable, just so you can check the state of one variable. Also, this can lead to inadvertent race conditions for timing related things, where the test-exposed method could be really simple.&lt;/p&gt;

&lt;p&gt;Also, it helps you get real objects into a state that is more easily testable. Rather than rejiggering everything through a high-level interface, you can specify things succinctly and more easily when you can introspect the object.&lt;/p&gt;

&lt;p&gt;Another great use is for managing timing issues. A lot of times to test timing of things we rely on sleeps or adding latches. The former is really brittle and the latter makes the code incredibly more complicated than it needs to be, just for testing.&lt;/p&gt;

&lt;p&gt;Problems with powermock:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;complicated - yeah, it can be a bit funky, but you get used to it.&lt;/li&gt;
	&lt;li&gt;brittle - its doing reflection so there are a lot of string method/object names used. That&apos;s the problem with introspection of objects and the price we pay for cleaner running code. Tests break when you change stuff though, so you know if something goes arwy.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Stack raised a possible concern that he couldn&apos;t get powermock working on the current codebase. However, I volunteered to spend the time to figure that out (at least initially) and don&apos;t think it will be all that bad.&lt;/p&gt;

&lt;p&gt;Thoughts? If people are +1, I&apos;ll work on a simple patch that adds powermock to the pom and makes a change to a test to use it.&lt;/p&gt;</comment>
                            <comment id="13463251" author="jesse_yates" created="Tue, 25 Sep 2012 21:41:52 +0000"  >&lt;p&gt;Attaching patch to add jmockit and powermock to the test depdendencies.&lt;/p&gt;

&lt;p&gt;For more discussion and examples of why its the right way to go, see &lt;a href=&quot;http://search-hadoop.com/m/HbsjjRSKLc2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/HbsjjRSKLc2&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12546592" name="hbase-5456-v0.patch" size="3027" author="jesse_yates" created="Tue, 25 Sep 2012 21:41:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 Feb 2012 20:38:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>228980</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 12 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0htgf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102034</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>