<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:16:53 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16698/HBASE-16698.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16698] Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16698</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;As titled, on our production environment we observed 98 out of 128 handlers get stuck waiting for the CountDownLatch &lt;tt&gt;seqNumAssignedLatch&lt;/tt&gt; inside &lt;tt&gt;WALKey#getWriteEntry&lt;/tt&gt; under a high writing workload.&lt;/p&gt;

&lt;p&gt;After digging into the problem, we found that the problem is mainly caused by advancing mvcc in the append logic. Below is some detailed analysis:&lt;/p&gt;

&lt;p&gt;Under current branch-1 code logic, all batch puts will call &lt;tt&gt;WALKey#getWriteEntry&lt;/tt&gt; after appending edit to WAL, and &lt;tt&gt;seqNumAssignedLatch&lt;/tt&gt; is only released when the relative append call is handled by RingBufferEventHandler (see &lt;tt&gt;FSWALEntry#stampRegionSequenceId&lt;/tt&gt;). Because currently we&apos;re using a single event handler for the ringbuffer, the append calls are handled one by one (actually lot&apos;s of our current logic depending on this sequential dealing logic), and this becomes a bottleneck under high writing workload.&lt;/p&gt;

&lt;p&gt;The worst part is that by default we only use one WAL per RS, so appends on all regions are dealt with in sequential, which causes contention among different regions...&lt;/p&gt;

&lt;p&gt;To fix this, we could also take use of the &quot;sequential appends&quot; mechanism, that we could grab the WriteEntry before publishing append onto ringbuffer and use it as sequence id, only that we need to add a lock to make &quot;grab WriteEntry&quot; and &quot;append edit&quot; a transaction. This will still cause contention inside a region but could avoid contention between different regions. This solution is already verified in our online environment and proved to be effective.&lt;/p&gt;

&lt;p&gt;Notice that for master (2.0) branch since we already change the write pipeline to sync before writing memstore (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15158&quot; title=&quot;Change order in which we do write pipeline operations; do all under row locks!&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15158&quot;&gt;&lt;del&gt;HBASE-15158&lt;/del&gt;&lt;/a&gt;), this issue only exists for the ASYNC_WAL writes scenario.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13007245">HBASE-16698</key>
            <summary>Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="carp84">Yu Li</assignee>
                                    <reporter username="carp84">Yu Li</reporter>
                        <labels>
                    </labels>
                <created>Fri, 23 Sep 2016 19:53:17 +0000</created>
                <updated>Tue, 1 Nov 2016 16:59:08 +0000</updated>
                                            <version>1.2.3</version>
                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.4.0</fixVersion>
                                    <component>Performance</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>19</watches>
                                                                                                            <comments>
                            <comment id="15517473" author="carp84" created="Fri, 23 Sep 2016 20:22:30 +0000"  >&lt;p&gt;Patch for master branch to better show the idea of the fix, will upload a patch for branch-1 later after review.&lt;/p&gt;</comment>
                            <comment id="15517477" author="carp84" created="Fri, 23 Sep 2016 20:23:30 +0000"  >&lt;p&gt;Have ran several core tests in local and all passed, submit to get a HadoopQA report&lt;/p&gt;</comment>
                            <comment id="15517490" author="stack" created="Fri, 23 Sep 2016 20:29:40 +0000"  >&lt;p&gt;Thank you for digging in here &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This bit I don&apos;t follow....&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;....the append calls are handled one by one (actually lot&apos;s of our current logic depending on this sequential dealing logic), and this becomes a bottleneck under high writing workload....&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, intentionally one-by-one in a single thread (no need of locks, logic is easier to reason about, and less likely we&apos;ll stay on core).  How is it a bottleneck?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;....that we could grab the WriteEntry before publishing append onto ringbuffer and use it as sequence id....&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I considered doing this. Would need to set the ringbuffer initial sequence to be that of the most recent edit for the region. It is always increasing so could work but was wary tying mvcc tied to a ringbuffer intrinsic? Would be interested to hear/see what you are thinking &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;....only that we need to add a lock to make &quot;grab WriteEntry&quot; and &quot;append edit&quot; a transaction. ...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Won&apos;t this undo some of the ringbuffer benefit? Or, maybe I&apos;m misunderstanding.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This solution is already verified in our online environment and proved to be effective.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Production experience beats all theoretical reasoning (smile).&lt;/p&gt;


</comment>
                            <comment id="15517531" author="stack" created="Fri, 23 Sep 2016 20:46:36 +0000"  >&lt;p&gt;Oh. Saw the patch. Why is this faster? I see an added reentrant lock. Otherwise, all else is the same? Maybe I am not following. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15517563" author="carp84" created="Fri, 23 Sep 2016 21:01:33 +0000"  >&lt;p&gt;Thanks for chiming in boss &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Yes, intentionally one-by-one in a single thread... How is it a bottleneck&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Since there&apos;s only one WAL per RS, and single event handler for the ringbuffer, it makes contention among writes on different regions. And I forgot to attach the jstack when issue happens online (oops...), let me upload it. (the version is our modified 1.1.2, so lines may not match, but enough to show the issue I guess)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;...Would need to set the ringbuffer initial sequence to be that of the most recent edit for the region...Would be interested to hear/see what you are thinking&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Oh I meant to call &lt;tt&gt;writeEntry = mvcc.begin();&lt;/tt&gt; and set it into &lt;tt&gt;WALKey&lt;/tt&gt; before publishing the append to ringbuffer, the lock and ringbuffer&apos;s sequential mechanism could make sure writes with lower mvcc/sequenceId written into WAL first. Please check the patch for more details and let me know your thoughts sir.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I see an added reentrant lock. Otherwise, all else is the same?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In the patch we call &lt;tt&gt;writeEntry = mvcc.begin();&lt;/tt&gt; and set it into &lt;tt&gt;WALKey&lt;/tt&gt; before publishing the append to ringbuffer, so we won&apos;t block on waiting for the CountDownLatch. Previously the CountDownLatch will be released one by one due to ringbuffer sequential handling, so writes on different regions will race. Please check the attached jstack. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15517565" author="carp84" created="Fri, 23 Sep 2016 21:02:37 +0000"  >&lt;p&gt;Uploading the jstack demonstrating the problem mentioned here.&lt;/p&gt;</comment>
                            <comment id="15517572" author="carp84" created="Fri, 23 Sep 2016 21:05:17 +0000"  >&lt;p&gt;grep &quot;CountDownLatch.await&quot; in the jstack and we could see 98 handlers waiting there.&lt;/p&gt;</comment>
                            <comment id="15517679" author="eclark" created="Fri, 23 Sep 2016 21:56:28 +0000"  >&lt;p&gt;If mvcc isn&apos;t the same order as the wal log order then there&apos;s a chance of acid violations.&lt;/p&gt;</comment>
                            <comment id="15517689" author="stack" created="Fri, 23 Sep 2016 21:59:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;Previously the CountDownLatch will be released one by one due to ringbuffer sequential handling, so writes on different regions will race.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok. Helps if I look at the right branch (smile). Makes sense. It is branch-1 so flag makes sense. We might enable it by default in 1.3 since it not out yet (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; FYI).&lt;/p&gt;

&lt;p&gt;So, why is this patch faster? In current implementation, contention is farmed out to be per WALKey instance. Each has its own latch. This patch swaps this model for an upfront contention on a ReentrantLock that is scoped to the Region. You think that the freeing of the latches in order costs &amp;gt;&amp;gt;&amp;gt; reentrant lock on every append?&lt;/p&gt;

&lt;p&gt;I was thinking there a correctness issue but the numbering/mvcc is scoped to the region so if you lock across the region append while getting the mvcc, and this is only place mvcc is incremented, then all should be good (Lock is to ensure ordering of appends only.... so doesn&apos;t have to be across all mvcc.begin invocations).&lt;/p&gt;

&lt;p&gt;Pity we have to lock. Could we be more radical and use the ringbuffer bucket number? Then no locking needed. The change would be way more intrusive though. You&apos;d have to change a lot.&lt;/p&gt;

&lt;p&gt;On the patch, move these defines to the class where they are used I&apos;d say:&lt;/p&gt;

&lt;p&gt;1318	  /** Config key for using mvcc pre-assign feature for put */&lt;br/&gt;
1319	  public static final String HREGION_MVCC_PRE_ASSIGN = &quot;hbase.hregion.mvcc.preassign&quot;;&lt;br/&gt;
1320	  public static final boolean DEFAULT_HREGION_MVCC_PRE_ASSIGN = true;&lt;/p&gt;

&lt;p&gt;They are used once only in HRegion. HConstants is/was a bad idea.&lt;/p&gt;

&lt;p&gt;Otherwise, patch looks good to me (That jstack is crazy)&lt;/p&gt;</comment>
                            <comment id="15517721" author="carp84" created="Fri, 23 Sep 2016 22:15:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;So, why is this patch faster? In current implementation, contention is farmed out to be per WALKey instance. Each has its own latch. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, each WALKey has its own latch, but the contention is not on the latch itself, but the sequential handling of ringbuffer event. The whole process is like:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;RingBufferEventHandler grab one append
-&amp;gt; FSHLog#append is called
-&amp;gt; FSWALEntry#stampRegionSequenceId is called
-&amp;gt; One CountDownLatch is released
-&amp;gt; RingBufferEventHandler grab another append
-&amp;gt; Another CountDownLatch is released
-&amp;gt; Repeat
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So all CountDownLatch are released in sequential, no parallelism...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I was thinking there a correctness issue but the numbering/mvcc is scoped to the region so if you lock across the region append while getting the mvcc, and this is only place mvcc is incremented, then all should be good&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, agree. And it seems our mighty &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; has the same concern here. Hope this answers your question also &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Pity we have to lock. Could we be more radical and use the ringbuffer bucket number? Then no locking needed. The change would be way more intrusive though. You&apos;d have to change a lot&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Cannot agree more... Actually I ever tried to use multiple event handlers, but too much logic to make sure if breaking sequential append, so I finally quit... But I agree that we should revisit this sometime later, worth the efforts I think.&lt;/p&gt;</comment>
                            <comment id="15517748" author="stack" created="Fri, 23 Sep 2016 22:28:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;So all CountDownLatch are released in sequential, no parallelism...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So no speed up if one region only on a regionserver. Ok. I buy it.&lt;/p&gt;

&lt;p&gt;On what &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; raises, lets be careful. He spent a bunch of time tracking a super weird issue where sequenceids in the WAL were not monotonically increasing because of a hole in our locking/reasoning. Your patch looks safe to me though but let me think on it more....&lt;/p&gt;</comment>
                            <comment id="15517750" author="carp84" created="Fri, 23 Sep 2016 22:28:45 +0000"  >&lt;p&gt;Addressing review comments, moving constants from &lt;tt&gt;HConstants&lt;/tt&gt; to &lt;tt&gt;HRegion&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;btw, we could enable/disable this mvcc preassign feature by setting &lt;tt&gt;hbase.hregion.mvcc.preassign&lt;/tt&gt;, it could be set per-table, so if we know that workload won&apos;t introduce much write contention, we could set it to false to prevent the cost of preAssignMvccLock. This is specially useful if we use multiple WALs and some WALs are exclusive for specific application.&lt;/p&gt;</comment>
                            <comment id="15517763" author="carp84" created="Fri, 23 Sep 2016 22:35:43 +0000"  >&lt;blockquote&gt;&lt;p&gt;So no speed up if one region only on a regionserver. Ok. I buy it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On what Elliott Clark raises... Your patch looks safe to me though but let me think on it more....&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure, let me also revisit the whole logic. But maybe I&apos;m not that worried since this fix already ran on our production environment for weeks and no problem observed&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; In theory I think the lock plus ringbuffer&apos;s sequential handling could make sure MVCC and WAL have the same order.&lt;/p&gt;</comment>
                            <comment id="15517773" author="carp84" created="Fri, 23 Sep 2016 22:40:13 +0000"  >&lt;p&gt;btw, will try to get some perf comparison data through YCSB benchmark later if I could spare some time, crazy preparing for Alibaba&apos;s 11-11 festival recently (not advertising :-P)...&lt;/p&gt;</comment>
                            <comment id="15517980" author="aoxiang" created="Sat, 24 Sep 2016 00:23:07 +0000"  >&lt;p&gt;I think set per-table is not a good idea, because all regions in a some region server share the same HLogs, so they interact with each other.&lt;/p&gt;</comment>
                            <comment id="15518057" author="hadoopqa" created="Sat, 24 Sep 2016 01:06:52 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 1 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 40s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 59s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 49s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 40s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 40s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 48s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 28m 36s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseprotoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 2m 8s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 28s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 84m 20s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 13s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 126m 56s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; FindBugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; module:hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutate(HRegion$BatchOperation) does not release lock on all paths  At HRegion.java:on all paths  At HRegion.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;line 3262&amp;#93;&lt;/span&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.client.TestBlockEvictionFromClient &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestReplicasClient &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.TestClusterBootOrder &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestHCM &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12830123/HBASE-16698.v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12830123/HBASE-16698.v2.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux cbcd94f50984 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / 4082424 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/artifact/patchprocess/new-findbugs-hbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/artifact/patchprocess/new-findbugs-hbase-server.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3698/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15518215" author="hadoopqa" created="Sat, 24 Sep 2016 02:53:20 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 18s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 1 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 43s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 43s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 17s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 58s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 31s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 40s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 40s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 50s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 29m 9s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseprotoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 1m 59s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 89m 31s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 19s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 133m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; FindBugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; module:hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutate(HRegion$BatchOperation) does not release lock on all paths  At HRegion.java:on all paths  At HRegion.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;line 3262&amp;#93;&lt;/span&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestReplicasClient &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestFromClientSide &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestIncrementFromClientSideWithCoprocessor &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:7bda515 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12830123/HBASE-16698.v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12830123/HBASE-16698.v2.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux c6777619b1c9 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / 7ed93f8 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.8.0_101 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/artifact/patchprocess/new-findbugs-hbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/artifact/patchprocess/new-findbugs-hbase-server.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3700/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15518312" author="carp84" created="Sat, 24 Sep 2016 04:01:09 +0000"  >&lt;p&gt;ok, so firstly set per-table is an option not necessity, it&apos;s just like all other configuration properties. Secondly, consider this case: with multiple WAL enabled and &lt;tt&gt;hbase.wal.regiongrouping.strategy&lt;/tt&gt; set to &lt;tt&gt;NamespaceGroupingStrategy&lt;/tt&gt;, and namespace A has and will only have one table, then we could set this property to false for it.&lt;/p&gt;</comment>
                            <comment id="15521114" author="carp84" created="Sun, 25 Sep 2016 16:59:39 +0000"  >&lt;p&gt;Checked below failed UT cases in HadoopQA report and confirmed all could pass in local:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.hadoop.hbase.client.TestReplicasClient
org.apache.hadoop.hbase.client.TestFromClientSide
org.apache.hadoop.hbase.client.TestIncrementFromClientSideWithCoprocessor
org.apache.hadoop.hbase.client.TestMobCloneSnapshotFromClient
org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I have seen some of these failed cases in HadoopQA report for several JIRAs, not sure whether any JIRA already track them down.&lt;/p&gt;

&lt;p&gt;Regarding the findbugs issue:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Bug type UL_UNRELEASED_LOCK (click for details) 
In class org.apache.hadoop.hbase.regionserver.HRegion
In method org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutate(HRegion$BatchOperation)
At HRegion.java:[line 3262]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think it&apos;s a similar fingbugs false positive like this one in &lt;a href=&quot;http://stackoverflow.com/questions/5408940/possible-findbugs-false-positive-of-ul-unreleased-lock-exception-path&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;stackoverflow&lt;/a&gt;. I could see some methods suppress fingbugs warning through &lt;tt&gt;@edu.umd.cs.findbugs.annotations.SuppressWarnings&lt;/tt&gt; such as &lt;tt&gt;HRegion#doClose&lt;/tt&gt;, but I don&apos;t think it&apos;s a good idea doing the same thing for &lt;tt&gt;doMiniBatchMutate&lt;/tt&gt;. Any suggestions &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="15521975" author="stack" created="Mon, 26 Sep 2016 04:04:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;....but I don&apos;t think it&apos;s a good idea doing the same thing for doMiniBatchMutate.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why not? If a false positive and you can&apos;t clean it up, add the suppress with your justification. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15521978" author="stack" created="Mon, 26 Sep 2016 04:05:58 +0000"  >&lt;p&gt;On the patch, I&apos;d be good w/ it going in as off by default in branch-1 and on by default in master branch.&lt;/p&gt;</comment>
                            <comment id="15523055" author="carp84" created="Mon, 26 Sep 2016 13:28:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;Why not? If a false positive and you can&apos;t clean it up...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Because doMiniBatchMutate is a big and critical method, and I&apos;m afraid adding such a suppress will make us ignore some real bugs in future changes... Is this a valid concern or I should still add the suppress? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On the patch, I&apos;d be good w/ it going in as off by default in branch-1 and on by default in master branch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;ok, let me prepare a branch-1 patch&lt;/p&gt;</comment>
                            <comment id="15524987" author="chenheng" created="Tue, 27 Sep 2016 04:02:20 +0000"  >&lt;p&gt;How much the performance will be downgrade when ops are just for one region.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; do you have some performance results?  In our production cluster (Not big cluster),  many tables have just few regions but QPS is high,  have a litter worried about it after we set it to be default.&lt;/p&gt;</comment>
                            <comment id="15526894" author="carp84" created="Tue, 27 Sep 2016 17:44:47 +0000"  >&lt;p&gt;I don&apos;t have much benchmarking number at hand, but from our online cluster we see no regression on put average time.&lt;/p&gt;

&lt;p&gt;Notice that the problem exists even if there&apos;s only one region but many parallel writes (yes, after a relook I think I stated something wrong, the issue stands even if there&apos;s only one region), allow me to quote the existing code flow on append handling:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;RingBufferEventHandler grab one append
-&amp;gt; FSHLog#append is called
-&amp;gt; FSWALEntry#stampRegionSequenceId is called
-&amp;gt; One CountDownLatch is released
-&amp;gt; RingBufferEventHandler grab another append
-&amp;gt; Another CountDownLatch is released
-&amp;gt; Repeat
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;so the main problem is &lt;b&gt;sequential&lt;/b&gt; appends and the logic that getting MVCC has to wait for the relative append to finish.&lt;/p&gt;

&lt;p&gt;I&apos;ll supply some perf number with YCSB, but should be days later because of some headache online issues... Or it will be highly appreciated if anyone could offer some help on the bench testing.&lt;/p&gt;</comment>
                            <comment id="15528581" author="chenheng" created="Wed, 28 Sep 2016 06:26:06 +0000"  >&lt;blockquote&gt;
&lt;p&gt;so the main problem is sequential appends and the logic that getting MVCC has to wait for the relative append to finish.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah,  but just for this sequential dealing,  we could avoid lock to keep mvcc and wal in the same order.  &lt;br/&gt;
So i am not sure in which workload, the performance will be improved.  And i think &quot;per-table configuration&quot; makes sense if we could do it.    &lt;/p&gt;</comment>
                            <comment id="15540610" author="carp84" created="Sun, 2 Oct 2016 16:26:06 +0000"  >&lt;p&gt;Uploading patch for branch-1, will upload perf number later. Sorry for the lag.&lt;/p&gt;</comment>
                            <comment id="15540740" author="carp84" created="Sun, 2 Oct 2016 18:08:53 +0000"  >&lt;p&gt;Ok, here is the result with a single RS and PE tool, with below command:&lt;br/&gt;
&lt;tt&gt;hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --table=PERandomWrite --presplit=20 --latency randomWrite 20&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;round-1:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Type&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;AverageTime(ms)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;ThroughputPerClient&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/ patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;376150&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.74MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;382549&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.69MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;round-2:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Type&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;AverageTime(ms)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;ThroughputPerClient&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/ patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;381925&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.70MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;385666&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.67MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;round-3:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Type&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;AverageTime(ms)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;ThroughputPerClient&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/ patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;364555&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.83MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;374948&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.75MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;And when testing w/o patch we could easily see the waiting on CountDownLatch.&lt;/p&gt;

&lt;p&gt;This simple result could show the effect of the patch to some extent, but not quite obviously (I&apos;m afraid PE output for write is not well formatted and we could not see metrics like throughput directly...). Will upload more testing result with YCSB workload later.&lt;/p&gt;</comment>
                            <comment id="15540744" author="carp84" created="Sun, 2 Oct 2016 18:11:58 +0000"  >&lt;p&gt;This is a common workload and nothing special, I hope this simple result answers your question &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chenheng&quot; class=&quot;user-hover&quot; rel=&quot;chenheng&quot;&gt;Heng Chen&lt;/a&gt;, or else please wait for the YCSB result. Thanks.&lt;/p&gt;</comment>
                            <comment id="15540746" author="carp84" created="Sun, 2 Oct 2016 18:12:57 +0000"  >&lt;p&gt;btw, this testing is against latest code of branch-1, not master&lt;/p&gt;</comment>
                            <comment id="15540760" author="hadoopqa" created="Sun, 2 Oct 2016 18:22:22 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 26s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 1 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 59s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 31s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 33s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_111 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 53s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 16s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 1m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in branch-1 has 1 extant Findbugs warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 24s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 33s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_111 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 30s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 30s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_111 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 55s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 16s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 16m 4s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseprotoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 2m 6s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1) &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 23s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_111 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 82m 44s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 17s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 113m 20s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; FindBugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; module:hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion$BatchOperationInProgress) does not release lock on all paths  At HRegion.java:on all paths  At HRegion.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;line 3313&amp;#93;&lt;/span&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.regionserver.TestClusterId &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:date2016-10-02 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12831253/HBASE-16698.branch-1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12831253/HBASE-16698.branch-1.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux 4969730af172 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /testptch/patchprocess/precommit/personality/hbase.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; branch-1 / 06cc123 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_111 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/artifact/patchprocess/branch-findbugs-hbase-server-warnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/artifact/patchprocess/branch-findbugs-hbase-server-warnings.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/artifact/patchprocess/new-findbugs-hbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/artifact/patchprocess/new-findbugs-hbase-server.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3794/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15570145" author="stack" created="Wed, 12 Oct 2016 23:00:44 +0000"  >&lt;p&gt;So, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;, you running w/ this in production? I should apply this to master and branch-1 for hbase-1.4 and to branch-1.3 and branch-1.2 but with this option set to off as default? &lt;/p&gt;</comment>
                            <comment id="15570840" author="chenheng" created="Thu, 13 Oct 2016 04:50:55 +0000"  >&lt;p&gt;Numbers seems 20 regions on one RS.  If you have time,  please upload numbers one region on one RS.  I am very inerested about it.  As &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; said,  set it to off as default is good for me.&lt;/p&gt;

&lt;p&gt;BTW.  The patch lgtm. +1 for it.  &lt;/p&gt;</comment>
                            <comment id="15571584" author="carp84" created="Thu, 13 Oct 2016 10:52:27 +0000"  >&lt;p&gt;Thanks for revisiting this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes sir, we&apos;re running w/ this in production for more than 2 months and everything looks good, no more handler stuck at CountDownLatch ever since, no data loss observed.&lt;/p&gt;

&lt;p&gt;And yes, let&apos;s make this in with option set to off as default for branch-1.2/1.3, and we could revisit whether to set it on later when I have time to provide more perf data with YCSB. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15571587" author="carp84" created="Thu, 13 Oct 2016 10:53:51 +0000"  >&lt;p&gt;Thanks for review &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chenheng&quot; class=&quot;user-hover&quot; rel=&quot;chenheng&quot;&gt;Heng Chen&lt;/a&gt;, sure will upload numbers for single-region-single-RS case later, but probably after 11.11 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15572427" author="stack" created="Thu, 13 Oct 2016 16:31:16 +0000"  >&lt;p&gt;Pushed ot master with this speedup enabled by default. The numbers posted look good and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; is running it in production these last two months. I did not backport to branch-1. It does not apply cleanly. Thanks for the clever patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15572906" author="hudson" created="Thu, 13 Oct 2016 19:22:16 +0000"  >&lt;p&gt;FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1780 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/1780/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/1780/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; Performance issue: handlers stuck waiting for CountDownLatch (stack: rev 9b13514483991889cd6ebe097c3c8eb0e7983e6d)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15573654" author="stack" created="Fri, 14 Oct 2016 00:28:22 +0000"  >&lt;p&gt;Committed below addendum to address this FindBugs complaint:&lt;/p&gt;


&lt;p&gt;Code	Warning&lt;br/&gt;
UL	org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion$BatchOperationInProgress) does not release lock on all paths&lt;br/&gt;
Bug type UL_UNRELEASED_LOCK (click for details) &lt;br/&gt;
In class org.apache.hadoop.hbase.regionserver.HRegion&lt;br/&gt;
In method org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion$BatchOperationInProgress)&lt;br/&gt;
At HRegion.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;line 3313&amp;#93;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;stack-MBP:hbase stack$ git show -1&lt;br/&gt;
commit e1923b7c0c14b435ea0d9eb306d968f1927a0c6e&lt;br/&gt;
Author: Michael Stack &amp;lt;stack@apache.org&amp;gt;&lt;br/&gt;
Date:   Thu Oct 13 17:16:47 2016 -0700&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload; ADDENDUM. Fix findbugs&lt;/p&gt;

&lt;p&gt;diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
index 3715ca1..a486599 100644&lt;br/&gt;
&amp;#8212; a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
@@ -3310,7 +3310,6 @@ public class HRegion implements HeapSize, PropagatingConfigurationObserver, Regi&lt;br/&gt;
         this.mvcc.advanceTo(batchOp.getReplaySequenceId());&lt;br/&gt;
       } else &lt;/p&gt;
{
         // writeEntry won&apos;t be empty if not in replay mode
-        assert writeEntry != null;
         mvcc.completeAndWait(writeEntry);
         writeEntry = null;
       }

&lt;p&gt;@appy kicked me for committing w/ a FindBugs....  (Thanks @appy)&lt;/p&gt;</comment>
                            <comment id="15574087" author="hudson" created="Fri, 14 Oct 2016 03:48:20 +0000"  >&lt;p&gt;FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1782 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/1782/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/1782/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; Performance issue: handlers stuck waiting for CountDownLatch (stack: rev e1923b7c0c14b435ea0d9eb306d968f1927a0c6e)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15574288" author="allan163" created="Fri, 14 Oct 2016 05:35:59 +0000"  >&lt;p&gt;Why handlers stuck at CountDownLatch? In my opinion, if the write operation in &lt;tt&gt;doMiniBatchMutation&lt;/tt&gt; need to sync, after waiting for syncing, the seqid is assigned in RingBufferEventHandler as you pointed out. So when &lt;tt&gt;mvcc.completeMemstoreInsertWithSeqNum&lt;/tt&gt; is called, the latch is released already.&lt;br/&gt;
Unless you set the batch&apos;s durability to ASYNC or NOSYNC, then  there will be a problem. Though you don&apos;t want to wait for the sync, in order to get the right mvcc readpoint, you have to wait for the previous transaction to finish the sync. So that will cause the handlers stuck at CountDownLatch. &lt;br/&gt;
I think people set the transaction&apos;s durability to ASYNC or NOSYNC is to gain speed. But in branch 1 after merging the mvcc id with the seqid, sync no wal still have to wait other transaction to sync, that&apos;s a problem need to be fixed.&lt;/p&gt;</comment>
                            <comment id="15574336" author="stack" created="Fri, 14 Oct 2016 05:54:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;Why handlers stuck at CountDownLatch? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;They are waiting on sync threads to finish up their sync so they can return to the client.&lt;/p&gt;

&lt;p&gt;Where is mvcc.completeMemstoreInsertWithSeqNum ? I can&apos;t find it.&lt;/p&gt;

&lt;p&gt;Can you please say more &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=allan163&quot; class=&quot;user-hover&quot; rel=&quot;allan163&quot;&gt;Allan Yang&lt;/a&gt; I&apos;m not following exactly what you are saying. It sounds interesting though. Thanks.&lt;/p&gt;
</comment>
                            <comment id="15574381" author="allan163" created="Fri, 14 Oct 2016 06:14:27 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// ------------------------------------------------------------------
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// STEP 8. Advance mvcc. This will make &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; put visible to scanners and getters.
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// ------------------------------------------------------------------
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (writeEntry != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        mvcc.completeMemstoreInsertWithSeqNum(writeEntry, walKey);
        writeEntry = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It&apos;s in &lt;tt&gt;doMiniBatchMutation&lt;/tt&gt; of branch1.1 . In &lt;tt&gt;completeMemstoreInsertWithSeqNum&lt;/tt&gt;, It will get the seqid in &lt;tt&gt;walKey&lt;/tt&gt; to advance the mvcc, I think that&apos;s where &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; said &apos;stuck at CountDownLatch &apos;&lt;br/&gt;
My point is, even if we don&apos;t need to sync the wal, the batch still have to stuck here to advance mvcc, that it is a problem.&lt;br/&gt;
But, if we choose to sync the wal, seqid in walKey should have been assigned in sync operation. Handlers shouldn&apos;t stuck here.&lt;/p&gt;</comment>
                            <comment id="15574517" author="chenheng" created="Fri, 14 Oct 2016 07:22:32 +0000"  >&lt;p&gt;I think &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=allan163&quot; class=&quot;user-hover&quot; rel=&quot;allan163&quot;&gt;Allan Yang&lt;/a&gt; you are right.  &lt;br/&gt;
It is different between branch-1.1 and branch-1.2.   On branch-1.1,  we wait for the seqId assigned after sync.  So the issue is invalid for branch-1.1.  &lt;/p&gt;

&lt;p&gt;It seems the CountDownLatch could be removed for SYNC_WAL durability? &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; your online cluster is branch-1.2, right?&lt;/p&gt;</comment>
                            <comment id="15574563" author="aoxiang" created="Fri, 14 Oct 2016 07:44:59 +0000"  >&lt;p&gt; a forked 1.1.2 version.&lt;/p&gt;</comment>
                            <comment id="15574578" author="allan163" created="Fri, 14 Oct 2016 07:50:13 +0000"  >&lt;p&gt;The CountDownLatch can&apos;t be moved since we need to wait until the data we written can been seen (through advance mvcc). Since your online cluster is a forked 1.1.2 version, is your patch fix this problem, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="15574588" author="aoxiang" created="Fri, 14 Oct 2016 07:54:16 +0000"  >&lt;p&gt;There is no problem for master version, only some of the branch-1 version?&lt;/p&gt;</comment>
                            <comment id="15574596" author="aoxiang" created="Fri, 14 Oct 2016 07:58:21 +0000"  >&lt;p&gt;I find master branch-1.2 branch-1.1 they are all different.&lt;/p&gt;</comment>
                            <comment id="15576097" author="stack" created="Fri, 14 Oct 2016 18:24:26 +0000"  >&lt;p&gt;Pardon me. Was looking in master branch.&lt;/p&gt;

&lt;p&gt;Let me revert this patch from master branch. This discussion is not done.&lt;/p&gt;</comment>
                            <comment id="15576107" author="stack" created="Fri, 14 Oct 2016 18:28:13 +0000"  >&lt;p&gt;I reverted the commit against master. Discussion revived with some questions to answer.&lt;/p&gt;</comment>
                            <comment id="15576214" author="carp84" created="Fri, 14 Oct 2016 19:11:04 +0000"  >&lt;p&gt;Ok, let me explain.&lt;/p&gt;

&lt;p&gt;One of the main difference between our customized 1.1.2 and current branch-1.1 is that I&apos;ve backported &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14465&quot; title=&quot;Backport &amp;#39;Allow rowlock to be reader/write&amp;#39; to branch-1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14465&quot;&gt;&lt;del&gt;HBASE-14465&lt;/del&gt;&lt;/a&gt; (Allow rowlock to be read/write in branch-1) to improve the non-conditional put performance. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14465&quot; title=&quot;Backport &amp;#39;Allow rowlock to be reader/write&amp;#39; to branch-1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14465&quot;&gt;&lt;del&gt;HBASE-14465&lt;/del&gt;&lt;/a&gt; only goes in branch-1.2+, and this is what cause the confusion. Please check the latest branch-1 code and you&apos;ll find out what I&apos;m trying to fix in this JIRA &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=allan163&quot; class=&quot;user-hover&quot; rel=&quot;allan163&quot;&gt;Allan Yang&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Removing 1.1.6 from &quot;Affects Versions&quot; to avoid the confusion, and thanks for pointing this out &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=allan163&quot; class=&quot;user-hover&quot; rel=&quot;allan163&quot;&gt;Allan Yang&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="15576721" author="carp84" created="Fri, 14 Oct 2016 22:26:07 +0000"  >&lt;p&gt;Update patch for branch-1 after code rebase. Also make it able to work together with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16768&quot; title=&quot;Inconsistent results from the Append/Increment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16768&quot;&gt;&lt;del&gt;HBASE-16768&lt;/del&gt;&lt;/a&gt; (we should also call &lt;tt&gt;HRegion#updateSequenceId&lt;/tt&gt; when mvcc is preassigned after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16768&quot; title=&quot;Inconsistent results from the Append/Increment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16768&quot;&gt;&lt;del&gt;HBASE-16768&lt;/del&gt;&lt;/a&gt;, please refer to patch for the reason. I found this problem because &lt;tt&gt;TestHRegion#testReverseScanner_StackOverflow&lt;/tt&gt; failed w/o the new changes)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; could you help review the new branch-1 patch? Many thanks.&lt;/p&gt;</comment>
                            <comment id="15576730" author="carp84" created="Fri, 14 Oct 2016 22:29:06 +0000"  >&lt;p&gt;And I&apos;d say the previously existed &lt;tt&gt;cell.getSequenceId() == 0&lt;/tt&gt; check in &lt;tt&gt;HRegion#applyFamilyMapToMemstore&lt;/tt&gt; is some kind of protection mechanism from what I&apos;ve observed &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15576766" author="enis" created="Fri, 14 Oct 2016 22:39:15 +0000"  >&lt;p&gt;I also have a hard time understanding the patch. We are still serializing the seq assining, but this time via a lock. This lock is used from handlers to append to the ring buffer as well, which basically means that we are going back to the old model (0.98) and have no benefits coming from disruptor. Is the perf gains from context switches in case there is less contention for the mvcc lock? &lt;br/&gt;
We have to serialize the edits via ring buffer and assign seq ids in the same order anyway. Is the RBEH doing too much work for appending? maybe we need two consumers for the ring buffer, one for assigning seq ids, and the other for doing the actual append? &lt;/p&gt;</comment>
                            <comment id="15576798" author="enis" created="Fri, 14 Oct 2016 22:52:09 +0000"  >&lt;p&gt;The other thing is that we cannot maintain two different code paths for this core piece. We should pick an approach and go with it. The only acceptable thing is that if the plan is to switch to a new approach, and we will keep the old implementation as a safe guard. &lt;/p&gt;</comment>
                            <comment id="15576919" author="hudson" created="Fri, 14 Oct 2016 23:49:53 +0000"  >&lt;p&gt;SUCCESS: Integrated in Jenkins build HBase-Trunk_matrix #1787 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/1787/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/1787/&lt;/a&gt;)&lt;br/&gt;
Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; Performance issue: handlers stuck waiting for (stack: rev f555b5be9c4574be7969c734270bd8922f522391)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; Performance issue: handlers stuck waiting for (stack: rev 13baf4d37a7d3b4b0194dc616c8ac15959efa18f)&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15577362" author="carp84" created="Sat, 15 Oct 2016 04:46:42 +0000"  >&lt;p&gt;Thanks for chiming in &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We are still serializing the seq assining, but this time via a lock. This lock is used from handlers to append to the ring buffer as well&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;True, but the lock is per &lt;b&gt;region&lt;/b&gt; while the disruptor is per &lt;b&gt;regionserver&lt;/b&gt;. In another word, current implementation w/o patch makes parallel writes on &lt;b&gt;different&lt;/b&gt; regions serializing (waiting on the same disruptor for their mvcc number, with single WAL by default). Change to use lock, the contention could be limited to region level.&lt;/p&gt;

&lt;p&gt;IMHO one benefit from disruptor is that it makes the append asynchronous so appending to WAL and inserting into MemStore could be parallelized, but current impl doesn&apos;t take full advantage of it. From another perspective, currently we are making sure mvcc number and region sequence id are uniform by stamping them when append starts, while w/ patch we&apos;re stamping them at the very beginning and use the assigned number for both WAL and MemStore insertion.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The only acceptable thing is that if the plan is to switch to a new approach, and we will keep the old implementation as a safe guard.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed, and this is why I&apos;m making it optional for now. This way operators could easily rollback if any fatal bug observed, raise a JIRA here and won&apos;t be blocked before we address it.&lt;/p&gt;</comment>
                            <comment id="15577373" author="carp84" created="Sat, 15 Oct 2016 04:57:25 +0000"  >&lt;p&gt;The discussion is kind of a long thread so allow me to echo one fact:&lt;/p&gt;

&lt;p&gt;The contention and problem happens in the real world and the disaster scenario is saved in the attached jstack file, this is not some analysis and fix in theory. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15579526" author="carp84" created="Sun, 16 Oct 2016 07:38:15 +0000"  >&lt;p&gt;Submit patch so HadoopQA could check the new branch-1 patch&lt;/p&gt;</comment>
                            <comment id="15579535" author="carp84" created="Sun, 16 Oct 2016 07:43:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=allan163&quot; class=&quot;user-hover&quot; rel=&quot;allan163&quot;&gt;Allan Yang&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, please let me know whether my explanation address your concern, so we could move on here. Thanks.&lt;/p&gt;</comment>
                            <comment id="15579655" author="hadoopqa" created="Sun, 16 Oct 2016 09:23:38 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 19s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 1 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 6s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 34s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 56s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 16s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 1m 53s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in branch-1 has 1 extant Findbugs warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 46s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 30s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 30s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 34s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 34s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 55s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 16s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 16m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseprotoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 2m 12s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1) &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 24s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 34s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 72m 57s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 104m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; FindBugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; module:hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion$BatchOperationInProgress) does not release lock on all paths  At HRegion.java:on all paths  At HRegion.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;line 3310&amp;#93;&lt;/span&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.mapreduce.TestMultiTableSnapshotInputFormat &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.TestHBaseTestingUtility &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.quotas.TestQuotaThrottle &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.regionserver.TestClusterId &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:b2c5d84 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12833460/HBASE-16698.branch-1.v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12833460/HBASE-16698.branch-1.v2.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux 6611806dfa79 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /testptch/patchprocess/precommit/personality/hbase.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; branch-1 / b7f283c &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-oracle:1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/artifact/patchprocess/branch-findbugs-hbase-server-warnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/artifact/patchprocess/branch-findbugs-hbase-server-warnings.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/artifact/patchprocess/new-findbugs-hbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/artifact/patchprocess/new-findbugs-hbase-server.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4038/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15580945" author="allan163" created="Mon, 17 Oct 2016 02:01:34 +0000"  >&lt;p&gt;After, carefully reviewed the code of branch-1.2, I understand your problem, in branch-1.2,the handler is stuck waiting for CountDownLatch after appending the WALKey to getting the writeEntry. But the latch is released only after sync completed.&lt;br/&gt;
But, my question is, even if you solved this problem, the handlers still have to waitting for &lt;tt&gt;syncOrDefer&lt;/tt&gt; to complete. So either you wait for the latch, or you wait for &lt;tt&gt;syncOrDefer&lt;/tt&gt;. What is the difference? &lt;/p&gt;</comment>
                            <comment id="15580967" author="carp84" created="Mon, 17 Oct 2016 02:18:52 +0000"  >&lt;p&gt;Actually we won&apos;t sync one by one, but sync a bunch at a time, or say we could regard &lt;tt&gt;syncOrDefer&lt;/tt&gt; in parallel under heavy workload. Refer to the while loop in &lt;tt&gt;FSHLog$SyncRunner#run&lt;/tt&gt; and &lt;tt&gt;FSHLog$SyncRunner#releaseSyncFutures&lt;/tt&gt; for more details.&lt;/p&gt;

&lt;p&gt;And believe it or not, the issue got resolved with the patch in our production cluster with 1000+ nodes. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15580977" author="carp84" created="Mon, 17 Oct 2016 02:25:00 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Update patch for branch-1 after code rebase. Also make it able to work together with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16768&quot; title=&quot;Inconsistent results from the Append/Increment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16768&quot;&gt;&lt;del&gt;HBASE-16768&lt;/del&gt;&lt;/a&gt; (we should also call HRegion#updateSequenceId when mvcc is preassigned after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16768&quot; title=&quot;Inconsistent results from the Append/Increment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16768&quot;&gt;&lt;del&gt;HBASE-16768&lt;/del&gt;&lt;/a&gt;, please refer to patch for the reason. I found this problem because TestHRegion#testReverseScanner_StackOverflow failed w/o the new changes)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Requesting some binding +1s on the new branch-1 patch gentlemen &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chenheng&quot; class=&quot;user-hover&quot; rel=&quot;chenheng&quot;&gt;Heng Chen&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;, thanks. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15580983" author="allan163" created="Mon, 17 Oct 2016 02:28:53 +0000"  >&lt;p&gt;Yes, I know sync operation will batch as many as possible. When you wait for the latch, it is actually waiting for sync as well, so in my analysis, waiting for sync and waiting for latch should take the same time. Have no idea why waiting for sync is faster, the only difference is that if choose to wait for sync, step 5 and step 6 in &lt;tt&gt;doMiniBatchMutation&lt;/tt&gt; is done without any blocking.&lt;/p&gt;</comment>
                            <comment id="15581067" author="chenheng" created="Mon, 17 Oct 2016 03:23:11 +0000"  >&lt;blockquote&gt;
&lt;p&gt;so in my analysis, waiting for sync and waiting for latch should take the same time. Have no idea why waiting for sync is faster&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=allan163&quot; class=&quot;user-hover&quot; rel=&quot;allan163&quot;&gt;Allan Yang&lt;/a&gt; Not exactly,  currently we waiting for seqId assigned in one handler,  but we do sync in multi threads parallel (5 default). &lt;/p&gt;</comment>
                            <comment id="15581074" author="chenheng" created="Mon, 17 Oct 2016 03:26:34 +0000"  >&lt;p&gt;patch for branch-1 LGTM.  +1 &lt;br/&gt;
We will open it by default on branch-1, right?  Just confirm it with all your guys. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15581674" author="carp84" created="Mon, 17 Oct 2016 09:15:57 +0000"  >&lt;p&gt;Current process of &lt;tt&gt;doMiniBatchMutation&lt;/tt&gt; for branch-1 is like:&lt;br/&gt;
1. acquire locks&lt;br/&gt;
2. update timestamps&lt;br/&gt;
3. build WAL edit&lt;br/&gt;
4. append edit to WAL&lt;br/&gt;
5. write to memstore&lt;br/&gt;
6. sync WAL or defer&lt;/p&gt;

&lt;p&gt;W/o patch mvcc number is attained between step #4 and #5, which makes step #4 and #5 serializing even though appending edit WAL is asynchronous through disruptor&lt;/p&gt;

&lt;p&gt;W/ patch mvcc number is preassigned and step#4 and #5 could run in parallel&lt;/p&gt;

&lt;p&gt;Since we will update the global &lt;tt&gt;highestSyncedSequence&lt;/tt&gt; in &lt;tt&gt;SyncRunner&lt;/tt&gt;, the sooner it arrives at &lt;tt&gt;syncOrDefer&lt;/tt&gt;, the more chance it will release other sync task/be released without waiting on real sync operation. To quote and emphasize, patch here limit the contention to region level instead of regionserver level, and parallel writes on different regions will benefit. &lt;/p&gt;

&lt;p&gt;What&apos;s more, all the back and forth discussions here are around SYNC_WAL, but don&apos;t forget the ASYNC_WAL writes, the improvement on ASYNC_WAL is way more obvious.&lt;/p&gt;</comment>
                            <comment id="15581685" author="carp84" created="Mon, 17 Oct 2016 09:22:41 +0000"  >&lt;p&gt;Thanks for the quick feedback &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chenheng&quot; class=&quot;user-hover&quot; rel=&quot;chenheng&quot;&gt;Heng Chen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The previous decision is for branch-1 or say branch-1.4 we open it by default, while for branch-1.2/1.3 make it off until more perf numbers are supplied.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, please share your thoughts, thanks.&lt;/p&gt;</comment>
                            <comment id="15584453" author="stack" created="Tue, 18 Oct 2016 04:50:28 +0000"  >&lt;p&gt;Let me answer &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; I just went through this issue again and the patch.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Our write path has gone through a bunch of change. Some stepped (The Xiaomi redo, the intro of ringbuffer). Others evolutions (Reorder because rely on mvcc instead of row locks). Its can be hard to keep it all straight. For example, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=allan163&quot; class=&quot;user-hover&quot; rel=&quot;allan163&quot;&gt;Allan Yang&lt;/a&gt;&apos;s comment above is against 1.1 but &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; patch is for the next version on &amp;#8211; 1.2 but patched back to 1.1.&lt;/li&gt;
	&lt;li&gt;Agree we should pick an approach with fall-back just-in-case. The patch here has that. Patch also has the benefit of having been run in production showing good numbers.&lt;/li&gt;
	&lt;li&gt;The lock is region-scoped. It is not across the ringbuffer. The RB can make progress on other region appends.&lt;/li&gt;
	&lt;li&gt;The perf gain looks to the result of two phenomenon: 1. parallelism: a single thread stamping every edit with a sequence id &amp;#8211; having to cross a region-scoped synchronize on each impression &amp;#8211; marching in order over all appends looks to be slower than a stamping that is done with some parallelism as each handler does its own imprint though there is friction as each handler has to contend on the reentrant lock with other handlers that are in the same region trying to do the same thing; and 2. no-wait: with the new patch, the handler can make progress after calling append where before not until the RB consumer on the other side of the RB had let go of the latch.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The RB is good as transmission between N handlers and the single WAL writer. The notion that the single consumer manage sequenceid assignment in line w/ the appends to WAL, while appealing because of its simplicity, seems to hold up throughput because our sequenceid is by region.&lt;/p&gt;
</comment>
                            <comment id="15584509" author="stack" created="Tue, 18 Oct 2016 05:25:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=allan163&quot; class=&quot;user-hover&quot; rel=&quot;allan163&quot;&gt;Allan Yang&lt;/a&gt; Thanks for the questions&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; So, story is clearer now after the recent discussion. I&apos;n +1 on the patch for branch-1. Since I spent more time looking at the patch (smile), what if you added a new constructor on HLogKey, one that took a WriteEntry. Then you wouldn&apos;t need setPreAssignedWriteEntry nor preAssignedWriteEntry... just assign writeEntry in the constructor. It&apos;d make the patch smaller/clearer? But no biggie.&lt;/p&gt;

&lt;p&gt;What to do for 1.3? Backport but flip the switch to false? We&apos;d have to ask Mikhail. I should see if this patch applies to 1.2 because I know at least one crew who&apos;d be interested.&lt;/p&gt;

&lt;p&gt;For Master, should we try and do something better?  Try batching up sequenceid assign. Apply a version of this patch in the meantime?&lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15585090" author="carp84" created="Tue, 18 Oct 2016 10:14:03 +0000"  >&lt;p&gt;Thanks for coming back sir &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;what if you added a new constructor on HLogKey, one that took a WriteEntry...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I ever tried this way and believe me it will make the patch bigger because of the new constructor (smile). And a new preAssignedWriteEntry won&apos;t interfere with existing writeEntry so maybe easier to understand the logic?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What to do for 1.3? Backport but flip the switch to false? We&apos;d have to ask Mikhail.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, I guess false for now, and we could turn it to true latter if the perf number shows no regression (I&apos;m running the YCSB case but still haven&apos;t got all numbers). And yes, I&apos;d also like to hear Mikhail&apos;s opinion.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For Master, should we try and do something better? Try batching up sequenceid assign.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I also tried batch seqId assign but found it hard to pass the UT (I think currently we have quite some logics depending on the fact of sequential seqId assign, the &lt;tt&gt;SafePointZigZagLatch&lt;/tt&gt; for example) so I applied current solution here with lower risk to resolve our online issue (smile). But yes definitely worthwhile to try since batch seqId assign is the real solution in my opinion.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Apply a version of this patch in the meantime?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, still a good work-around IMHO (smile).&lt;/p&gt;</comment>
                            <comment id="15585433" author="carp84" created="Tue, 18 Oct 2016 13:15:49 +0000"  >&lt;p&gt;Ok, here are more performance number with YCSB. First the testing environment:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;YCSB 0.7.0
4 physical client nodes, 8 YCSB processes per node, 32 threads per YCSB process
recordcount=3,200,000, fieldcount=1, fieldlength=1024, insertproportion=1, requestdistribution=uniform

1 single RS, regionnumber(presplit)=200, handlercount=128, hbase.wal.storage.policy=ALL_SSD

patch applied on not latest but recent branch-1 code (commit 06cc123849aefb67570f0c016829b53ab958721b),
not latest because using the same package doing PE testing
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the comparison data (two rounds):&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;TestCase&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Round&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Throughput&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;AverageLatency(us)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Round-1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;66554.48&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15263.36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/ patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Round-1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;91472.48&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11098.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Round-2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;66083.53&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15382.01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/ patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Round-2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;91420.26&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11104.37&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;This should be sufficient to prove the effect of the patch when heavy load on multiple regions. Feel free to reproduce the test and let me know if any different results.&lt;/p&gt;

&lt;p&gt;More data coming for heavy load on one single region to see whether there&apos;s perf regression for this case.&lt;/p&gt;</comment>
                            <comment id="15585764" author="stack" created="Tue, 18 Oct 2016 15:32:36 +0000"  >&lt;p&gt;Why the FindBugs warning? There is a finally to undo the reentrant lock. Retry the patch.&lt;/p&gt;</comment>
                            <comment id="15585766" author="stack" created="Tue, 18 Oct 2016 15:32:53 +0000"  >&lt;p&gt;Numbers looks good.&lt;/p&gt;</comment>
                            <comment id="15585776" author="stack" created="Tue, 18 Oct 2016 15:37:29 +0000"  >&lt;p&gt;I revert the revert of this change from master (so the master patch and the fixup for the findbugs is back in master branch).&lt;/p&gt;

&lt;p&gt;The findbugs out of branch-1 is not same as complaint that came out of master (and was fixed in subsequent commit)&lt;/p&gt;</comment>
                            <comment id="15585979" author="stack" created="Tue, 18 Oct 2016 16:55:23 +0000"  >&lt;p&gt;Ok on my suggestion actually making for a larger patch when I thought it would make a smaller one.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; Ok to back port this but off by default?&lt;/p&gt;

&lt;p&gt;I filed a subissue here, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16873&quot; title=&quot;WAL: SequenceId assign with less friction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16873&quot;&gt;HBASE-16873&lt;/a&gt;, to see if we can do better in master.&lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;. Am trying this patch with the WALPE test. Will report back.&lt;/p&gt;</comment>
                            <comment id="15586070" author="hadoopqa" created="Tue, 18 Oct 2016 17:32:08 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; reexec &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Docker mode activated. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch appears to include 1 new or modified test files. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 2m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 56s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 16s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 1m 53s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in branch-1 has 1 extant Findbugs warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 24s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 32s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; branch-1 passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 46s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 31s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 31s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 35s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 55s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 17s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 17m 21s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseprotoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 15s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 2m 23s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1) &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 33s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0_101 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 37s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 81m 16s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 14s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 113m 38s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; FindBugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; module:hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  org.apache.hadoop.hbase.regionserver.HRegion.doMiniBatchMutation(HRegion$BatchOperationInProgress) does not release lock on all paths  At HRegion.java:on all paths  At HRegion.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;line 3310&amp;#93;&lt;/span&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.master.balancer.TestStochasticLoadBalancer2 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.mapreduce.TestMultiTableSnapshotInputFormat &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Timed out junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.TestHBaseTestingUtility &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; org.apache.hadoop.hbase.filter.TestFuzzyRowFilterEndToEnd &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Docker &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Client=1.11.2 Server=1.11.2 Image:yetus/hbase:b2c5d84 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12833969/HBASE-16698.branch-1.v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12833969/HBASE-16698.branch-1.v2.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux a3380d596b6e 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /testptch/patchprocess/precommit/personality/hbase.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; branch-1 / 6694191 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-oracle:1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/artifact/patchprocess/branch-findbugs-hbase-server-warnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/artifact/patchprocess/branch-findbugs-hbase-server-warnings.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/artifact/patchprocess/new-findbugs-hbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/artifact/patchprocess/new-findbugs-hbase-server.html&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-server U: hbase-server &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4077/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.3.0   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15586211" author="carp84" created="Tue, 18 Oct 2016 18:15:59 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; for opening the sub issue.&lt;/p&gt;

&lt;p&gt;Regarding WALPE test, mind explain why this patch will affect that? It seems to me WALPE only tests the WAL append and sync part w/o writing through doMiniBatchMutation. Thanks.&lt;/p&gt;</comment>
                            <comment id="15586213" author="carp84" created="Tue, 18 Oct 2016 18:17:16 +0000"  >&lt;p&gt;I also have no idea why we introduce the findbugs issue, will also take a look at it later...&lt;/p&gt;</comment>
                            <comment id="15586429" author="stack" created="Tue, 18 Oct 2016 19:28:12 +0000"  >&lt;p&gt;I ran the WALPE too before and after this patch went into branch-1. Shows a consistent minor improvement all the ways from 1 thread up through 5, 25, and 100 concurrent writers that ranges from about 2-4% less time to complete test. At 100 threads there are less context switches... 176k vs 183k.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; i in 1 5 25 100; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; j in 1; &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; export HBASE_CLASSPATH_PREFIX=`pwd`/hbase/lib/hbase-server-1.4.0-SNAPSHOT-tests.jar ; ./hbase/bin/hbase --config conf_hbase classpath; perf stat ./hbase/bin/hbase --config /home/stack/conf_hbase org.apache.hadoop.hbase.wal.WALPerformanceEvaluation -threads $i   -iterations 1000000 -keySize 50 -valueSize 100  &amp;amp;&amp;gt; &lt;span class=&quot;code-quote&quot;&gt;&quot;/tmp/baseline${i}.${j}.txt&quot;&lt;/span&gt;; done; done
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15586638" author="hudson" created="Tue, 18 Oct 2016 20:56:50 +0000"  >&lt;p&gt;FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1810 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/1810/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/1810/&lt;/a&gt;)&lt;br/&gt;
Revert &quot;Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; Performance issue: handlers stuck waiting (stack: rev ec1adb7baaca5b89ff11a24f26f49fec63e754d8)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;br/&gt;
Revert &quot;Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; Performance issue: handlers stuck waiting (stack: rev 0d40a52ee82651866ad124183367edb4d9c52dda)&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15586840" author="stack" created="Tue, 18 Oct 2016 22:15:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; points out above that WALPE doesn&apos;t exercise this patch AT ALL so above runs were useless (would account for why the different so small). Ignore the above. Dumb on my part.&lt;/p&gt;</comment>
                            <comment id="15588348" author="carp84" created="Wed, 19 Oct 2016 10:48:27 +0000"  >&lt;p&gt;Perf data for one single region:&lt;/p&gt;

&lt;p&gt;Test environment (nothing changed but no presplit on the target table):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;YCSB 0.7.0
4 physical client nodes, 8 YCSB processes per node, 32 threads per YCSB process
recordcount=3,200,000, fieldcount=1, fieldlength=1024, insertproportion=1, requestdistribution=uniform

1 single RS, 1 single region (no presplit), handlercount=128, hbase.wal.storage.policy=ALL_SSD
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the comparison data (one round):&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;TestCase&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Throughput&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;AverageLatency(us)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;69924.42&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14544.38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;86373.70&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11770.09&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;From the result we could see even with one single region, performance w/ patch is better under high concurrency, which indicates that the discruptor publish and consume processing is more time-costing than the lock.&lt;/p&gt;

&lt;p&gt;I could see less CountDownLatch waiting in jstack during testing w/o patch, which could explain why the throughput is better than that against multiple regions.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chenheng&quot; class=&quot;user-hover&quot; rel=&quot;chenheng&quot;&gt;Heng Chen&lt;/a&gt; FYI.&lt;/p&gt;</comment>
                            <comment id="15590555" author="carp84" created="Thu, 20 Oct 2016 02:37:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; mind if I push this to branch-1(branch-1.4) first to avoid further code rebase?&lt;/p&gt;

&lt;p&gt;Since YCSB data indicates in both single region and multiple regions scenarios performance is better w/ patch, I think this also applies for branch-1.2/1.3, but will wait for your decisions on whether to let it in &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Echo the YCSB data here for your convenience:&lt;br/&gt;
testing environment:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;YCSB 0.7.0
4 physical client nodes, 8 YCSB processes per node, 32 threads per YCSB process
recordcount=3,200,000, fieldcount=1, fieldlength=1024, insertproportion=1, requestdistribution=uniform
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;200 regions:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;TestCase&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Round&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Throughput&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;AverageLatency(us)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Round-1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;66554.48&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15263.36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/ patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Round-1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;91472.48&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11098.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Round-2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;66083.53&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15382.01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/ patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Round-2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;91420.26&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11104.37&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;single region:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;TestCase&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Throughput&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;AverageLatency(us)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w/o patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;69924.42&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14544.38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;w patch&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;86373.70&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11770.09&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</comment>
                            <comment id="15590613" author="stack" created="Thu, 20 Oct 2016 03:14:32 +0000"  >&lt;p&gt;+1 on push to branch-1. Let me know if you want me to do it for you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;, at your service. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; You want this back in 1.3? Can be off by default?&lt;/p&gt;</comment>
                            <comment id="15591092" author="carp84" created="Thu, 20 Oct 2016 07:36:39 +0000"  >&lt;p&gt;Thank you sir &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, I&apos;ve just pushed it into branch-1 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15592412" author="mantonov" created="Thu, 20 Oct 2016 17:25:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; after testing on my side I think we&apos;ve reached the point where the the most pressing issues on 1.3 have been fixed, so I really want to draw the line and get the first RC for it out.&lt;/p&gt;

&lt;p&gt;We may be able to pull it later in 1.3.1. Should be good for branch-1 meanwhile.&lt;/p&gt;</comment>
                            <comment id="15592458" author="stack" created="Thu, 20 Oct 2016 17:39:37 +0000"  >&lt;p&gt;Makes sense &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15592549" author="hudson" created="Thu, 20 Oct 2016 18:12:57 +0000"  >&lt;p&gt;SUCCESS: Integrated in Jenkins build HBase-1.4 #482 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.4/482/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.4/482/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16698&quot; title=&quot;Performance issue: handlers stuck waiting for CountDownLatch inside WALKey#getWriteEntry under high writing workload&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16698&quot;&gt;HBASE-16698&lt;/a&gt; Performance issue: handlers stuck waiting for CountDownLatch (liyu: rev a7a4e17f1d04d389f87ad22da96d72cd3be050d9)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSWALEntry.java&lt;/li&gt;
	&lt;li&gt;(edit) hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15593072" author="enis" created="Thu, 20 Oct 2016 21:28:45 +0000"  >&lt;p&gt;Time to resolve this? &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; thanks for the explanations earlier. One last question, did you do the tests with 2.0 code or branch-1 code? The issue description says: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Notice that &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; master (2.0) branch since we already change the write pipeline to sync before writing memstore (HBASE-15158), &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; issue only exists &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the ASYNC_WAL writes scenario.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so we have committed this only for ASYNC_WAL for the master code? We wait for the whole sync() to happen before proceeding to the memstore inserts anyway in master. &lt;/p&gt;</comment>
                            <comment id="15593766" author="carp84" created="Fri, 21 Oct 2016 02:56:59 +0000"  >&lt;p&gt;Thanks for the question &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, the above numbers are against branch-1 codes, not master.&lt;/p&gt;

&lt;p&gt;For master branch, the issue description only talks in theory and no real testing done. Let me add the testing and will upload data later.&lt;/p&gt;

&lt;p&gt;It&apos;s confirmed we won&apos;t pull this in for branch-1.3 until 1.3.0 got released and 1.3.1 comes out. For branch-1.2, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; could you help confirm sir? Thanks.&lt;/p&gt;

&lt;p&gt;Will resolve this JIRA if perf data against master branch is good as expected and decision for branch-1.2 is made. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15593787" author="carp84" created="Fri, 21 Oct 2016 03:08:54 +0000"  >&lt;p&gt;Thanks for the confirmation &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15595796" author="stack" created="Fri, 21 Oct 2016 17:35:40 +0000"  >&lt;p&gt;Lets not backport to 1.2 until it in 1.3. Thats how we generally do it. Else the discontinuity confuses.&lt;/p&gt;

&lt;p&gt;On Master, yeah, the benefit this patch brings is theoretical though the tests done here would seem to promise master branch benefit. The patch has been committed to master.  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16873&quot; title=&quot;WAL: SequenceId assign with less friction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16873&quot;&gt;HBASE-16873&lt;/a&gt; is about doing something better.&lt;/p&gt;</comment>
                            <comment id="15596488" author="enis" created="Fri, 21 Oct 2016 21:53:07 +0000"  >&lt;p&gt;On master, when I do a jstack with some load, almost all the handlers are waiting for sync(), and since the memstore insert does not happen until sync() completes, we do not have to wait for the latch. Actually, the latch can be removed as well (for Durability.SYNC_WAL). For async, we still have to have the latch I think. &lt;/p&gt;

&lt;p&gt;The other reason I was asking about this is that I have a hacked up patch which divides the batchMutate() into 3 phases. The first phase is the parts to compute the WALEdit to write, second part is the actual append + sync() and the last part is all other steps after sync() (memstore insert, etc). This architecture makes it possible to do the flush pipelining idea talked about here: &lt;a href=&quot;http://pandis.net/resources/vldb10aether.pdf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pandis.net/resources/vldb10aether.pdf&lt;/a&gt;  (section 4). The theory is that we can free up the handler to process more requests while we are waiting for the sync to happen. After sync some other handler or thread will complete the work.  &lt;/p&gt;</comment>
                            <comment id="15598266" author="stack" created="Sat, 22 Oct 2016 18:22:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;On master, when I do a jstack with some load, almost all the handlers are waiting for sync(), and since the memstore insert does not happen until sync() completes, we do not have to wait for the latch. Actually, the latch can be removed as well (for Durability.SYNC_WAL). For async, we still have to have the latch I think.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, the reordering of the write pipeline in Master changes the equation. It is currently at a &apos;safe&apos; place. Review and discussion could buy us some more improvement here especially it now much easier to reason about what is happening given the reordering. Consider too though that master branch write path will change again if/when asyncWAL becomes default (there is no ringbuffer when asyncwal). I am of the opinion that we need to get a handle on the dfsclient&apos;s packet-sending rhythm if we are to make any progress WAL writing. In studies over the last few days, it is beyond our influence and does the same old behavior whatever we do on our side (ringbuffer aggregations and appends for sure help but having to rely on five syncer threads each interrupting packet formation hopefully w/ jigger so not too many null sends is voodoo engineering and says to me that we need to own the client &amp;#8211; e.g. asyncwal &amp;#8211; or expose more means of controlling the flow in dfsclient#dfsoutputstream to us, the client).&lt;/p&gt;

&lt;p&gt;Thanks for the paper reference &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; Looks great. Handlers having to wait on syncs messes us up (or, not being async in our core messes us up &amp;#8211; take your pick). We should be able to make do with one sync&apos;ing thread but when only one syncer, we are aggregating 70 handlers waiting on sync in primitive tests which means 70 handlers that are stuck NOT adding more load on the server; hence 5 syncers each aggregating 10 or 12 syncs works a bit better. What are you thinking regards where the handler goes after it starts the sync? It goes back to the client? (FB had a Delay thing hacked in once that seems similar). How is the &apos;pickup&apos; done? It sounds great.&lt;/p&gt;

&lt;p&gt;On rewrite of batchMutate, our HRegion has loads of duplication by method. You see the batchMutate refactor working elsewhere for other methods?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15598402" author="stack" created="Sat, 22 Oct 2016 20:02:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; you think we could park &apos;context&apos; in the log, let the handler go to do another transacton, and then as it is leaving the logging subsystem, see if any completed transactions to return to the client? That&apos;d be cool.&lt;/p&gt;</comment>
                            <comment id="15598586" author="stack" created="Sat, 22 Oct 2016 22:17:58 +0000"  >&lt;p&gt;Reinstitute hbase-3899?&lt;/p&gt;</comment>
                            <comment id="15599149" author="carp84" created="Sun, 23 Oct 2016 06:08:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;Lets not backport to 1.2 until it in 1.3. Thats how we generally do it. Else the discontinuity confuses.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok, got it, thanks for the confirmation &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On master, when I do a jstack with some load, almost all the handlers are waiting for sync()... For async, we still have to have the latch I think.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see, and makes sense. Let me test to make sure 1) the patch here introduce no perf regression for SYNC_WAL and 2) it benefits ASYNC_WAL, for master branch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The other reason I was asking about this is that I have a hacked up patch which divides the batchMutate() into 3 phases... After sync some other handler or thread will complete the work.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks for bring this up and mentioning the paper &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, I think this cooperates the idea of &quot;SEDA&quot; JIRA mentioned weeks ago, and we also have some initial work in progress here in Alibaba-search. I believe this is something able to increase our overall throughput and worth a standalone JIRA for further discussion (smile).&lt;/p&gt;

&lt;p&gt;Also glanced at &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3899&quot; title=&quot;enhance HBase RPC to support free-ing up server handler threads even if response is not ready&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3899&quot;&gt;&lt;del&gt;HBASE-3899&lt;/del&gt;&lt;/a&gt;, seems like a similar idea but somehow commit reverted... mind telling the whole story sir &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="15600905" author="stack" created="Mon, 24 Oct 2016 04:27:35 +0000"  >&lt;p&gt;On &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3899&quot; title=&quot;enhance HBase RPC to support free-ing up server handler threads even if response is not ready&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3899&quot;&gt;&lt;del&gt;HBASE-3899&lt;/del&gt;&lt;/a&gt;, I remembered it as an experiment that was never finished (maybe someone else has a better memory of what happened then). I went back and looked at code and seems like it was not hooked up out in Apache HBase. Only TestDelayedRpc used it ( It may have been working internally at FB). It was reverted because it was not being used and much of the machinery it had wired up had been moved or removed (HBaseServer).&lt;/p&gt;

&lt;p&gt;Above I say owning the dfsclient is the way ouf our WAL perf trough but the SEDA core, as you remind us &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;, would be another where threads can be let go after dumping payload on the WAL to go bring on more data while waiting on the syncs to come home.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="13013248">HBASE-16873</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12831253" name="HBASE-16698.branch-1.patch" size="14977" author="carp84" created="Sun, 2 Oct 2016 16:26:06 +0000"/>
                            <attachment id="12833969" name="HBASE-16698.branch-1.v2.patch" size="15703" author="stack" created="Tue, 18 Oct 2016 15:32:36 +0000"/>
                            <attachment id="12833460" name="HBASE-16698.branch-1.v2.patch" size="15703" author="carp84" created="Fri, 14 Oct 2016 22:26:07 +0000"/>
                            <attachment id="12830108" name="HBASE-16698.patch" size="12362" author="carp84" created="Fri, 23 Sep 2016 20:22:30 +0000"/>
                            <attachment id="12830123" name="HBASE-16698.v2.patch" size="12123" author="carp84" created="Fri, 23 Sep 2016 22:28:45 +0000"/>
                            <attachment id="12830114" name="hadoop0495.et2.jstack" size="356111" author="carp84" created="Fri, 23 Sep 2016 21:02:37 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="13013248">HBASE-16873</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 Sep 2016 20:29:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i340tj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Assign sequenceid to an edit before we go on the ringbuffer; undoes contention on WALKey latch. Adds a new config &amp;quot;hbase.hregion.mvcc.preassign&amp;quot; which defaults to true: i.e. this speedup is enabled.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        </customfields>
    </item>
</channel>
</rss>