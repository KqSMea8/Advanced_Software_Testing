<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:39:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13103/HBASE-13103.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13103] [ergonomics] add region size balancing as a feature of master</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13103</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Often enough, folks miss-judge split points or otherwise end up with a suboptimal number of regions. We should have an automated, reliable way to &quot;reshape&quot; or &quot;balance&quot; a table&apos;s region boundaries. This would be for tables that contain existing data. This might look like:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Admin#reshapeTable(TableName, int numSplits);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or from the shell:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&amp;gt; reshape TABLE, numSplits
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Better still would be to have a maintenance process, similar to the existing Balancer that runs AssignmentManager on an interval, to run the above &quot;reshape&quot; operation on an interval. That way, the cluster will automatically self-correct toward a desirable state.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12777641">HBASE-13103</key>
            <summary>[ergonomics] add region size balancing as a feature of master</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mantonov">Mikhail Antonov</assignee>
                                    <reporter username="ndimiduk">Nick Dimiduk</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 Feb 2015 19:19:10 +0000</created>
                <updated>Wed, 16 Mar 2016 15:42:19 +0000</updated>
                            <resolved>Tue, 23 Jun 2015 06:08:07 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.2.0</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                                    <component>Balancer</component>
                    <component>Usability</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>29</watches>
                                                                <comments>
                            <comment id="14337062" author="jmspaggi" created="Wed, 25 Feb 2015 19:44:05 +0000"  >&lt;p&gt;I love the idea, but do you see any way to do that online? &lt;/p&gt;

&lt;p&gt;Using merges and splits we might be able to do that.&lt;/p&gt;

&lt;p&gt;Do you have any design in mind?&lt;/p&gt;</comment>
                            <comment id="14337084" author="mantonov" created="Wed, 25 Feb 2015 20:03:13 +0000"  >&lt;p&gt;Online - you mean table-wise, or region-wise? I would think, this might work in 2 steps:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;command runs and generates &quot;reshaping plan&quot;, which is series or split/merge commands recommended. Then they could be either confirmed by admin (and pushed to execution), or exported as a script for further review?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14337086" author="mantonov" created="Wed, 25 Feb 2015 20:04:56 +0000"  >&lt;p&gt;My guess would be that if a command executes a number of splits and merges behind the scene, production admins would want to review and approve them first?&lt;/p&gt;</comment>
                            <comment id="14337249" author="enis" created="Wed, 25 Feb 2015 21:30:38 +0000"  >&lt;p&gt;Related, Accumulo has merge command which merges a range into a single tablet. We can do this and the merge range together for max flexibility. &lt;/p&gt;</comment>
                            <comment id="14343658" author="ndimiduk" created="Mon, 2 Mar 2015 19:49:53 +0000"  >&lt;p&gt;I&apos;d like to see the cluster make iterative attempts toward an ideal state, not require users to track this stuff manually.&lt;/p&gt;

&lt;p&gt;Just like we have a balancer chore in master that aims to keep assignment healthy, we could have a split/merge chore that tries the same. Would need some way to decide if a region is &quot;hot&quot; or not, but I think a simple bit of conservative logic might look like &quot;region is 50% smaller than average or 50% larger than average and hasn&apos;t served writes in the last hour&quot;.&lt;/p&gt;</comment>
                            <comment id="14354522" author="mantonov" created="Tue, 10 Mar 2015 08:22:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; if this chore (RegionEqualizer? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; or better name?) is pluggable the guarding logic would be easy to experiment with. If I could help with this one, I&apos;d be glad to.&lt;/p&gt;

&lt;p&gt;As a complementary idea - we can have web UI showing unevenly split regions/alerts etc.&lt;/p&gt;</comment>
                            <comment id="14355288" author="ndimiduk" created="Tue, 10 Mar 2015 17:39:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; yeah, RegionEqualizer sounds like the right idea. Maybe &quot;normalizer&quot;? But yes, a background chore invokes something that analyzes current state and makes efforts to move toward an ideal state.&lt;/p&gt;

&lt;p&gt;UI improvements across the board are always welcome and very much encouraged. We don&apos;t get enough love in that department. A (graphical?) representation of region sizes and distribution would be awesome.&lt;/p&gt;</comment>
                            <comment id="14357769" author="mantonov" created="Wed, 11 Mar 2015 23:07:19 +0000"  >&lt;p&gt;Doing some prototyping here, may have something to show next week..&lt;/p&gt;</comment>
                            <comment id="14364754" author="mantonov" created="Tue, 17 Mar 2015 08:13:52 +0000"  >&lt;p&gt;Some notes as I&apos;m sketching the draft:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;generally looks like the basic balancing architecture would just work - a chore on master, interface + pluggable initialization, main invocation gets kicked in HMaster, period and cutoff time limits.&lt;/li&gt;
	&lt;li&gt;runs on per-table basis (for first cut - could just do all or nothing, then add normalization params to table level configuration if needed)&lt;/li&gt;
	&lt;li&gt;normalizer computes list of normalization plans (which are simply, either split R1, or merge R1 and R1), those plans then executed one by one, I guess we don&apos;t want more than one merge or split going on the table in most cases? Execution of plan is simply figuring currently assigned HRS and requesting split over rpc.&lt;/li&gt;
	&lt;li&gt;whole thing is stateless, if master crashed during normalization, on next scheduled iteration it will be recomputed anyway&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; thoughts?&lt;/p&gt;</comment>
                            <comment id="14366012" author="ndimiduk" created="Tue, 17 Mar 2015 20:28:40 +0000"  >&lt;p&gt;Sounds about right! I&apos;d say the plan can come up with a single action to execute per table, and then sleep again &amp;#8211; merging has impact on availability. Perhaps it wakes up more frequently than the BalancerChore, maybe every minute instead of every 5 by default. Should also have some back-pressure mechanism, so it shouldn&apos;t start a new merge if existing merge is gummed up. I don&apos;t think we can do that without &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12439&quot; title=&quot;Procedure V2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12439&quot;&gt;HBASE-12439&lt;/a&gt;. Maybe it cannot be stateless is that&apos;s the case, or perhaps it can check if any merge operations are in flight for the target table and if so, go back to sleep (or move onto the next table).&lt;/p&gt;</comment>
                            <comment id="14366112" author="mantonov" created="Tue, 17 Mar 2015 21:19:47 +0000"  >&lt;p&gt;Yep, that&apos;s how I see it too.&lt;/p&gt;

&lt;p&gt;Practically, I think, splitting of excessively large regions (in environments with very high max region size or pre-split policy in place) would be more frequent usecase, than merging, since tables tend to grow up over time, not shrink down.&lt;/p&gt;</comment>
                            <comment id="14366193" author="ndimiduk" created="Tue, 17 Mar 2015 22:12:51 +0000"  >&lt;p&gt;I&apos;ve been thinking a lot about this feature in the context of a user who&apos;s upgrading from 0.92 or 0.94 with little 1-2g regions. Suddenly they have way more regions than necessary, so the region merge becomes very useful.&lt;/p&gt;</comment>
                            <comment id="14366195" author="mantonov" created="Tue, 17 Mar 2015 22:17:50 +0000"  >&lt;p&gt;Huh, right. I didn&apos;t think from that perspective. Thanks for the pointer.&lt;/p&gt;</comment>
                            <comment id="14366255" author="davelatham" created="Tue, 17 Mar 2015 22:59:34 +0000"  >&lt;p&gt;We also have cases where some regions of data are correlated with time and also have a TTL.  Over time those regions end up with little data in them and other regions end up with more data.  It would be great for the small regions to merge.&lt;/p&gt;</comment>
                            <comment id="14370963" author="mantonov" created="Fri, 20 Mar 2015 08:42:44 +0000"  >&lt;p&gt;Is it fair to say this one supersedes the one I linked?&lt;/p&gt;</comment>
                            <comment id="14372509" author="ndimiduk" created="Sat, 21 Mar 2015 04:38:13 +0000"  >&lt;p&gt;Ha! Seems of identical intent. Good find. Might as well mark this one as a dupe and carry on.&lt;/p&gt;</comment>
                            <comment id="14390652" author="mantonov" created="Wed, 1 Apr 2015 14:44:20 +0000"  >&lt;p&gt;Here&apos;s draft patch. Would appreciate any comments.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; - as you suggested this idea, I&apos;d be glad to re-think &amp;amp; discuss how exactly the normalization rules should look like, what makes sense as parametrizable options etc. &lt;/p&gt;</comment>
                            <comment id="14390744" author="mantonov" created="Wed, 1 Apr 2015 15:00:53 +0000"  >&lt;p&gt;Since that&apos;s the draft, many obviously needed things are missing, namely:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;being able to choose which table to normalize&lt;/li&gt;
	&lt;li&gt;need to define normalization rules more strictly (including priority of operations? if table has both types of outlier in the ranks of its regions - too small and too big regions, then what action is more urgent)&lt;/li&gt;
	&lt;li&gt;run normalization across several tables in parallel - is that something we should/shouldn&apos;t do&lt;/li&gt;
	&lt;li&gt;detecting currently running merges and splits. Current simple rules are just that we don&apos;t touch system tables and tables with less than 3 regions.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14390977" author="hadoopqa" created="Wed, 1 Apr 2015 16:57:23 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12708703/HBASE-13103-v0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12708703/HBASE-13103-v0.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 874aa9eb85077a4e5ab42d06820692ed379775ca.&lt;br/&gt;
  ATTACHMENT ID: 12708703&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 10 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1928 checkstyle errors (more than the master&apos;s current 1924 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.coprocessor.TestRegionServerObserver.testCoprocessorHooksInRegionsMerge(TestRegionServerObserver.java:100)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13520//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14391934" author="mantonov" created="Thu, 2 Apr 2015 01:45:06 +0000"  >&lt;p&gt;TestRegionServerObserver failure is unrelated, javadoc &amp;amp; checkstyle will be fixed in v1 patch&lt;/p&gt;</comment>
                            <comment id="14393411" author="mantonov" created="Thu, 2 Apr 2015 21:06:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/32790/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/32790/&lt;/a&gt; - up on RB&lt;/p&gt;</comment>
                            <comment id="14482210" author="mantonov" created="Mon, 6 Apr 2015 23:41:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; any thoughts on the patch? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14483558" author="ndimiduk" created="Tue, 7 Apr 2015 17:24:03 +0000"  >&lt;p&gt;Nice work &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;. I left some comments over on RB.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;being able to choose which table to normalize&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d like this to eventually be a globally enabled feature, with opt-out via table configuration. For it&apos;s initial commit, it should probably be opt-in instead. Having a global kill switch is probably a good idea too.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;need to define normalization rules more strictly (including priority of operations? if table has both types of outlier in the ranks of its regions - too small and too big regions, then what action is more urgent)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, priorities will become a useful feature. I think what you have here is a nice, committable first pass though.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;run normalization across several tables in parallel - is that something we should/shouldn&apos;t do&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Probably that&apos;s something we can and should do. Can be future patch though.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;detecting currently running merges and splits. Current simple rules are just that we don&apos;t touch system tables and tables with less than 3 regions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why no touch regions with fewer than 3 regions?&lt;/p&gt;

&lt;p&gt;These are all good questions for our operator friends. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; any opinions here? Think you fellas may be interested in this feature.&lt;/p&gt;</comment>
                            <comment id="14484275" author="phobos182" created="Tue, 7 Apr 2015 22:53:58 +0000"  >&lt;p&gt;Few comments from my side of things. As a setup, in our architecture, we run master / slave HBase clusters with replication setup between them.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Since this operation is pretty impactful on performance most likely we would do this on the slave cluster first. Switch the roles between master / slave. Then run the command on the master. Given the time difference between when the commands were run, this could end up with different region boundaries between the clusters &amp;#8211; which is not desired. So I second the idea of  generates &quot;reshaping plan&quot; so it can be applied in the same manner on the slave cluster.&lt;/li&gt;
	&lt;li&gt;Probably should think about performing a major compaction operation before the normalize policy runs. We have a lot of tombstones on some of our clusters, which can inflate the region size by 60%. So splitting / merging in this condition is not ideal since the condition is temporary. Though after a compaction where you have the steady state is more realistic.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think it&apos;s a great feature. Though most of our clusters are balanced for QPS distribution, as CPU is one of our primary capacity planning metrics. Any tool which makes it easier to recover from pre-splitting mistakes is welcome.&lt;/p&gt;</comment>
                            <comment id="14484842" author="mantonov" created="Wed, 8 Apr 2015 06:53:03 +0000"  >&lt;p&gt;Thanks for review guys!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;d like this to eventually be a globally enabled feature, with opt-out via table configuration. For it&apos;s initial commit, it should probably be opt-in instead. Having a global kill switch is probably a good idea too.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How about adding a boolean flag it table descriptor (false by default) to bring a table to normalizers attention? Global switch would be still in place to turn everything off if so desired (probably just like with balancer, there shoud be admin rpc call to turn balancer on/off?)&lt;/p&gt;

&lt;p&gt;.bq Yes, priorities will become a useful feature. I think what you have here is a nice, committable first pass though.&lt;br/&gt;
Thanks, yeah - that would probably be subsequent patch (as well as running in parallel on all tables opted-in)&lt;/p&gt;

&lt;p&gt;.bq Why no touch regions with fewer than 3 regions?&lt;br/&gt;
2 considerations I had in mind - tables with fewer than 3 regions probably too small to be hot spots in terms of cluster throughout (that may be not true?), and also they would require more thought-out rules. Let&apos;s say you have table with 2 regions, 10 and 70 gb. This current logic would say - well, 70 is &amp;lt; than 40 * 2, so no normalization for you &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; What you may really want is 2 regions of 40, or 5 regions by 16. Need to have &quot;ideal&quot; region size? &lt;/p&gt;



</comment>
                            <comment id="14484844" author="mantonov" created="Wed, 8 Apr 2015 06:54:01 +0000"  >&lt;p&gt;(sorry, formatting slided off)&lt;/p&gt;</comment>
                            <comment id="14484867" author="mantonov" created="Wed, 8 Apr 2015 07:10:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phobos182&quot; class=&quot;user-hover&quot; rel=&quot;phobos182&quot;&gt;Jeremy Carroll&lt;/a&gt; thanks for feedback! Very useful. I guess I have a lot of questions I&apos;d like to ask, if you don&apos;t mind, to better understand the real needs.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Given the time difference between when the commands were run, this could end up with different region boundaries between the clusters &#8211; which is not desired. So I second the idea of generates &quot;reshaping plan&quot; so it can be applied in the same manner on the slave cluster.&lt;/p&gt;&lt;/blockquote&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;How strictly consistent are you master and slave clusters? How much can they diverge? Is second cluster mostly for long-running analytics, which only dumps output in some other table?&lt;/li&gt;
	&lt;li&gt;So you don&apos;t have automatic splits now, as I understand, only pre-split tables? Otherwise how are you ensuring that the region boundaries are exactly the same? What&apos;s the avg region size?&lt;/li&gt;
	&lt;li&gt;Do you want region boundaries to be exactly the same, or approximately the same?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Current patch has notion of &quot;reshaping plan&quot;, which includes params like split point (currently not computed though &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).  It&apos;d be feasible to send these plans to normalizer on the other side (or rather, expose normalize() call, which accepts serialized reshaping plan, in master rpc services, but, the region names wouldn&apos;t be the same anyway)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Probably should think about performing a major compaction operation before the normalize policy runs.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, that makes sense. Though I think most people run major compactions infrequently, so making this prerequisite would change that operational practice? How often do you run major compactions?&lt;/p&gt;</comment>
                            <comment id="14485581" author="ndimiduk" created="Wed, 8 Apr 2015 17:22:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;probably just like with balancer, there shoud be admin rpc call to turn balancer on/off?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, that would be good. Exposure through shell would be desirable as well, and a get status as well.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Need to have &quot;ideal&quot; region size?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s a good point. Probably &quot;ideal size&quot; is some percentage (70% ?) of the max region size, with a close enough allowance (ie, this normalizer&apos;s target region size is 70 +/- 5% of &lt;tt&gt;hbase.hregion.max.filesize&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for coming around &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phobos182&quot; class=&quot;user-hover&quot; rel=&quot;phobos182&quot;&gt;Jeremy Carroll&lt;/a&gt;!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Since this operation is pretty impactful on performance...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see this as not a single operation you run to normalize a table all at once, but rather something that happens in the background all the time, a kind of &quot;active anti-entropy&quot; happening behind the scenes to nudge a table into an ideal state. You think even a single split/merge operation is too heavy-weight to be done without premeditation?&lt;/p&gt;</comment>
                            <comment id="14486812" author="lhofhansl" created="Thu, 9 Apr 2015 06:24:22 +0000"  >&lt;p&gt;Just reading through the comments here. Unless the &quot;reshaper&quot; perfectly takes all factors into account I&apos;d be very hesitant to run it on our clusters. With perfect I mean that it knows about load, disk IO, etc. Since that&apos;s hard (or impossible) I think I&apos;d prefer to trigger this manually, as suggested in the description. But maybe I am overly cautious.&lt;/p&gt;

&lt;p&gt;Split decisions can be made locally and are rarely bad (unless really excessive). Merge decisions need (a) global knowledge - not all regions may on the same server and (b) can possibly lead to worse performance (hot regions merged together, etc)&lt;br/&gt;
What we can automate is merging empty regions away.&lt;/p&gt;</comment>
                            <comment id="14486827" author="mantonov" created="Thu, 9 Apr 2015 06:35:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=larsh&quot; class=&quot;user-hover&quot; rel=&quot;larsh&quot;&gt;larsh&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think I&apos;d prefer to trigger this manually&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You mean - you&apos;d prefer to do splits and merges manually, or you&apos;d prefer to kick the &quot;reshaping&quot; manually (via admin command, rather than letting it run as a chore)?&lt;/p&gt;

&lt;p&gt;I&apos;m thinking what could be done to make it safer and more conservative, while still reliving cluster admin of at least some housekeeping tasks. If this isn&apos;t safe, most people probably just won&apos;t turn it on..&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;since as you said, split decisions are generally safer than merge decisions, could have policy which is much more conservative in merging, than it is in splitting&lt;/li&gt;
	&lt;li&gt;regarding the load..What&apos;s there in ServerLoad and RegionLoad won&apos;t suffice you think? Would it help it we grab some OS-level info in ServerLoad (or similar class)?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14486829" author="mantonov" created="Thu, 9 Apr 2015 06:36:52 +0000"  >&lt;p&gt;I meant &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;, sorry, mistyped..&lt;/p&gt;</comment>
                            <comment id="14486831" author="mantonov" created="Thu, 9 Apr 2015 06:38:23 +0000"  >&lt;p&gt;Also could have a variation of &quot;reshaping&quot; which doesn&apos;t really take any action, but writes down recommended merge/splits command into a file and makes it available somewhere?&lt;/p&gt;</comment>
                            <comment id="14486841" author="lhofhansl" created="Thu, 9 Apr 2015 06:46:34 +0000"  >&lt;p&gt;Yeah, meant the &quot;reshaping&quot; after I identified that something is odd/bad about a table.&lt;br/&gt;
But maybe it&apos;s better to just automate, otherwise nobody would use it, as you say.&lt;/p&gt;

&lt;p&gt;Splits already happen automatically with nice simple local-only logic do we need more logic for those? (but we could get rid of IncreasingToUpperBoundRegionSplitPolicy and combine it all in one class, which would be nice).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;could have policy which is much more conservative in merging, than it is in splitting&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think that&apos;d be nice. With IncreasingToUpperBoundRegionSplitPolicy it&apos;s possible that we get a 2x size difference between regions for a bit. Hard to say whether a region will be written to in the future, and avoid an early merge. Maybe we can track the age of a region? And then favor older regions for merges unless they&apos;re hot...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;ServerLoad and RegionLoad won&apos;t suffice you think?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You&apos;re right, that&apos;s probably all the information we need. And if not, we&apos;d add it.&lt;/p&gt;</comment>
                            <comment id="14486884" author="mantonov" created="Thu, 9 Apr 2015 07:19:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yeah, meant the &quot;reshaping&quot; after I identified that something is odd/bad about a table. But maybe it&apos;s better to just automate, otherwise nobody would use it, as you say.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I could have a switch like &quot;auto&quot; (chore + admin rpc calls accepted), &quot;manual&quot; (no chore, admin calls accepted), &quot;disabled&quot; (no chore, no rpc calls allowed) in hbase config for master. Or just &quot;auto&quot; and &quot;manual&quot;. Also thinking may be exposing more params to adjust the aggressiveness of reshaping would help people to adopt it. Probably better have policy which improves cluster state little bit, which many people are willing to turn on and forget about, rather than a policy, which could theoretically improve cluster state a lot, which most of production users would be afraid to turn on.&lt;/p&gt;

&lt;p&gt;As you said (and many users would likely agree!) that you&apos;d be hesitant to turn it on unless you know that it takes nearly perfect decision. What if we try to formalize these rules, like - &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;only normalize tables which opted in (like in table descriptor)&lt;/li&gt;
	&lt;li&gt;don&apos;t touch regions which served writes in last N minutes, or served more than X reads last hour&lt;/li&gt;
	&lt;li&gt;don&apos;t normalize if balancer is in progress, or any splits/merges are in progress&lt;/li&gt;
	&lt;li&gt;don&apos;t normalize if RS hosting regions we want to split/merge is under high load (need to define it)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;May be you could list some more? Thanks for highlighting that point. W/o proper/configurable safeguarding probably many people won&apos;t have it enabled.&lt;/p&gt;
</comment>
                            <comment id="14497774" author="mantonov" created="Thu, 16 Apr 2015 08:36:09 +0000"  >&lt;p&gt;All right, let me revise the suggestions here and I&apos;ll try to roll out next version of patch next week or so.&lt;/p&gt;</comment>
                            <comment id="14498445" author="ndimiduk" created="Thu, 16 Apr 2015 18:20:20 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;, it&apos;ll be good to get this out for folks to start playing with it in 1.1.0.&lt;/p&gt;</comment>
                            <comment id="14516202" author="ndimiduk" created="Tue, 28 Apr 2015 02:23:14 +0000"  >&lt;p&gt;Looks like this didn&apos;t quite make it for 1.1.0. So close!&lt;/p&gt;</comment>
                            <comment id="14516547" author="mantonov" created="Tue, 28 Apr 2015 07:00:27 +0000"  >&lt;p&gt;Yeah &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; that still needs some more work from my side to incorporate the feedbacks and probably several more rounds of reviews to get something ready for folks to try.&lt;/p&gt;</comment>
                            <comment id="14554925" author="ndimiduk" created="Thu, 21 May 2015 19:33:03 +0000"  >&lt;p&gt;Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt;, this is the ticket I mentioned.&lt;/p&gt;

&lt;p&gt;In another conversation I had recently, it occurred to me that this would be really handy for folks running elastic deployments, environments like EC2, YARN/Slider or Mesos where clusters are intentionally growing and shrinking capacity as business requirements change (cc &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=clehene&quot; class=&quot;user-hover&quot; rel=&quot;clehene&quot;&gt;Cosmin Lehene&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stmcpherson&quot; class=&quot;user-hover&quot; rel=&quot;stmcpherson&quot;&gt;Steve McPherson&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stevel%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;stevel@apache.org&quot;&gt;Steve Loughran&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="14585015" author="mantonov" created="Sun, 14 Jun 2015 09:51:06 +0000"  >&lt;p&gt;Here&apos;s v1 patch (will update RB as well); still draft-like a bit. Summary:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add a field in table descriptor for normalization on-off (part of standard table name-&amp;gt;value configuration), so should be able to update that from shell as well.&lt;/li&gt;
	&lt;li&gt;addressed most of comments from RB, notably an issue when non-adjacent regions would be attempted to get merged.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Open questions (still need discussion/improvements in this or next patch):&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I added shuffle in the code which selects next table for normalization..Looking at the similar codepath for balancer - we don&apos;t really do parallel balancing for tables in seems. Running normalization independently for each table in parallel would require adding new EventType and/or ExecutorType (or we may reuse ExecutorType#MASTER_TABLE_OPERATIONS here). Not sure if that&apos;s needed in this patch. Thoughts?&lt;/li&gt;
	&lt;li&gt;Didn&apos;t do part about ideal (target) size yet, this needs a bit more thinking.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Still thinking about that as a baseline to create more sophisticated normalizers (like CompactionAwareNormalizer, which would only run if compaction happened in last hour), as I think I need more input from operational side. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; what do you think?&lt;/p&gt;</comment>
                            <comment id="14585016" author="mantonov" created="Sun, 14 Jun 2015 09:57:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;it&apos;ll be good to get this out for folks to start playing with it in 1.1.0.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That&apos;s what I&apos;m thinking too. Apparently nobody is going to turn it on in production env (yet); thinking what would be the most conservative yet usable strategy folks may want to play with in some sandbox clusters?&lt;/p&gt;</comment>
                            <comment id="14585051" author="hadoopqa" created="Sun, 14 Jun 2015 12:20:41 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12739481/HBASE-13103-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12739481/HBASE-13103-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 682b8ab8a542a903e5807053282693e3a96bad2d.&lt;br/&gt;
  ATTACHMENT ID: 12739481&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1908 checkstyle errors (more than the master&apos;s current 1907 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.master.regionnormalizer.TestSimpleRegionNormalizerOnCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14403//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14592689" author="ndimiduk" created="Thu, 18 Jun 2015 22:58:56 +0000"  >&lt;p&gt;Left some comments on RB.&lt;/p&gt;

&lt;p&gt;Further thinking about the use-case, this chore is aiming for an ideal state of even cluster utilization. We seem to think of this in terms of (1) evenly distributed load and (2) region servers are not hosting more regions than they can hold &amp;#8211; regions are sized &quot;just right&quot;. We assume schema design results in a natural application load over keys, so (1) can be approximated by uniform region size and count. Uniform count/server is handled by the Balancer, which leaves the Normalizer to worry about overall count and size. Too few overall and you have unused hosts (&quot;i just stood up a 10 node cluster but only one host is doing work!&quot;), too many and you end up with 1k regions/server.&lt;/p&gt;

&lt;p&gt;At the lower end, we probably want to split relatively empty tables toward a goal of &lt;tt&gt;# of regions = 2x number of region servers&lt;/tt&gt;. Or maybe 3x or 5x?&lt;/p&gt;

&lt;p&gt;At the upper end, we want to push toward a target of ~250 regions per region server and those regions being of uniform size if possible.&lt;/p&gt;</comment>
                            <comment id="14592702" author="ndimiduk" created="Thu, 18 Jun 2015 23:08:28 +0000"  >&lt;p&gt;Oh, and probably we&apos;ll want coprocessor hooks pre- and post balancer invocation, but that can be a follow-on ticket.&lt;/p&gt;</comment>
                            <comment id="14593220" author="mantonov" created="Fri, 19 Jun 2015 08:55:03 +0000"  >&lt;p&gt;Yeah. We used to mention here that region has some &quot;ideal&quot; size and we should try to get each region to this size, and I think we mentioned that ideal size might be a fixed fraction of max size or something like that. May&apos;be needs to be more configurable.&lt;/p&gt;

&lt;p&gt;I guess you assume here that every large table is supposed to be spread across all RSs, and not just some subset (group?) of them? Also, to make sure I understand right, when you say &quot;250 regions per RS&quot;, you mean 250regions of each table, or across all tables? Also this number of regions per RS.. I suppose we can derive it dynamically like (max number of regions total in cluster, as limited by AM performance, see issue about scaling to 1M regions) / # of RS? Total max number of regions could be set in config,like 100k or 300k?&lt;/p&gt;

&lt;p&gt;I&apos;m thinking about roughly same logic for lower and upper ends (for lower end another implicit threshold would be max size of each region, and for upper limit I think there should be 2 more guards - 1) should check that total number of regions doesn&apos;t approach the limits of AM and 2) we don&apos;t break table into ridiculously small regions (less than N hdfs blocks?).&lt;/p&gt;
</comment>
                            <comment id="14593235" author="mantonov" created="Fri, 19 Jun 2015 09:04:47 +0000"  >&lt;p&gt;Thanks for review, will fix remaining items and update patch (do you think what&apos;s discussed here about ideal size should go there, or in subsequent ticket?)&lt;/p&gt;</comment>
                            <comment id="14593598" author="ndimiduk" created="Fri, 19 Jun 2015 16:32:21 +0000"  >&lt;p&gt;Max of 250 total regions on a region server, not per table. This is a rough guideline, and will vary based on individual cluster configuration. Yes, this is definitely related to the 1M regions ticket.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;1) should check that total number of regions doesn&apos;t approach the limits of AM&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, there should be some upper bound on the total number of regions, which I assume would be something like &lt;tt&gt;$MAX_REGIONS_PER_SERVER * $NUM_SERVERS&lt;/tt&gt;, where max regions per server is configurable.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2) we don&apos;t break table into ridiculously small regions (less than N hdfs blocks?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Generally yes, but there is the counter case example i mentioned above, where I&apos;m new to HBase and my &quot;big table&quot; is only a single region on a single host. We want the beginners to have a good experience too. More, smaller regions spread over an overpowered cluster should result in everything being cached and a better intro experience.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;do you think what&apos;s discussed here about ideal size should go there, or in subsequent ticket?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m fine with improvements on the normalizer algorithms going in with subsequent patches. I think your harness here is enough to let people get started &amp;#8211; for instance, Nasron from the user list thread titled &quot;Stochastic Balancer by tables&quot;.&lt;/p&gt;</comment>
                            <comment id="14594050" author="mantonov" created="Fri, 19 Jun 2015 22:38:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yeah, there should be some upper bound on the total number of regions, which I assume would be something like $MAX_REGIONS_PER_SERVER * $NUM_SERVERS, where max regions per server is configurable.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I thought the limit is the other way around, i.e. the total number of regions is more or less fixed (as assignment manager won&apos;t handle that properly), hence, increasing number of region servers would inevitably decrease number of regions per RS -&amp;gt; larger and larger regions?&lt;/p&gt;</comment>
                            <comment id="14594149" author="ndimiduk" created="Sat, 20 Jun 2015 00:03:32 +0000"  >&lt;p&gt;Yes there&apos;s a global upper bound as well, much more discussion over on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11165&quot; title=&quot;Scaling so cluster can host 1M regions and beyond (50M regions?)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11165&quot;&gt;HBASE-11165&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&apos;m talking about a local upper bound on an individual region server&apos;s ability to maintain active regions online for reads and writes. Usually this is confined by memory pressure due to active memstores of open regions.&lt;/p&gt;

&lt;p&gt;I dunno though. Maybe &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phobos182&quot; class=&quot;user-hover&quot; rel=&quot;phobos182&quot;&gt;Jeremy Carroll&lt;/a&gt; want to meter this upper bound differently?&lt;/p&gt;</comment>
                            <comment id="14594207" author="mantonov" created="Sat, 20 Jun 2015 00:42:28 +0000"  >&lt;p&gt;Here&apos;s patch w/ comments from RB addressed, also fixed on-cluster test and added testcase to check that small but non-adjacent regions aren&apos;t attempted to merge.&lt;/p&gt;</comment>
                            <comment id="14594427" author="hadoopqa" created="Sat, 20 Jun 2015 06:09:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12740774/HBASE-13103-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12740774/HBASE-13103-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit db08013ebeeaa85802d9795cc72b4c29c5338a47.&lt;br/&gt;
  ATTACHMENT ID: 12740774&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1908 checkstyle errors (more than the master&apos;s current 1906 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.TestRegionRebalancing&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 5 zombie test(s): 	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels.testVisibilityLabelsThatDoesNotPassTheCriteria(TestVisibilityLabels.java:231)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels.testVisibilityLabelsInGetThatDoesNotMatchAnyDefinedLabels(TestVisibilityLabels.java:400)&lt;br/&gt;
	at org.apache.hadoop.hbase.security.visibility.TestVisibilityLabelsWithDeletes.testVisibilityLabelsWithDeleteColumnsWithNoMatchVisExpWithMultipleVersionsNoTimestamp(TestVisibilityLabelsWithDeletes.java:376)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14477//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14477//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14477//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14477//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14477//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14477//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14477//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14477//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14595466" author="mantonov" created="Mon, 22 Jun 2015 07:43:26 +0000"  >&lt;p&gt;Test failures don&apos;t seem to be related (TestRegionRebalancing is generally flaky and fails for me on and off, and visibility labels tests pass on my local). Checkstyles (lack of final on 2 classes) I&apos;ll add in next version of patch.&lt;/p&gt;</comment>
                            <comment id="14596185" author="busbey" created="Mon, 22 Jun 2015 16:37:06 +0000"  >&lt;p&gt;I&apos;d like to see this in 1.2, but feature freeze is nigh. I&apos;ll leave this targeting until I actually cut the RC this afternoon/evening. Feel free to bump out to 1.3 if you don&apos;t think things will be ready.&lt;/p&gt;</comment>
                            <comment id="14596251" author="ndimiduk" created="Mon, 22 Jun 2015 17:11:17 +0000"  >&lt;p&gt;Looks great &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;, +1 ship it. Only thing is you&apos;re using java language &lt;tt&gt;assert&lt;/tt&gt; in a couple places in test; instead use JUnit&apos;s &lt;tt&gt;assertTrue&lt;/tt&gt;, but that can be fixed on commit.&lt;/p&gt;</comment>
                            <comment id="14596309" author="mantonov" created="Mon, 22 Jun 2015 17:42:24 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; (will fix this remaining nits on commit), &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt; - thanks! I&apos;ll commit this shortly in an hour or two unless there&apos;s objections.&lt;/p&gt;</comment>
                            <comment id="14596809" author="mantonov" created="Mon, 22 Jun 2015 22:59:33 +0000"  >&lt;p&gt;here&apos;s v3 with comments from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt; (on RB)  and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; addressed, also updated RB.&lt;/p&gt;</comment>
                            <comment id="14596982" author="hadoopqa" created="Tue, 23 Jun 2015 01:37:13 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12741160/HBASE-13103-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12741160/HBASE-13103-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit d51a184051d968dc3bdc00b1c9257c0a9e5ff8a6.&lt;br/&gt;
  ATTACHMENT ID: 12741160&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14511//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14511//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14511//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14511//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14511//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14511//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14511//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14511//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14597046" author="yuzhihong@gmail.com" created="Tue, 23 Jun 2015 02:59:49 +0000"  >&lt;p&gt;Latest patch should be good to go.&lt;br/&gt;
There is room for improvement which can be addressed in follow-on JIRAs.&lt;/p&gt;</comment>
                            <comment id="14597089" author="mantonov" created="Tue, 23 Jun 2015 03:18:10 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt;, agree there&apos;s room to further improve. I&apos;m going to commit v3 to master, branch-1 and branch-1.2 then.&lt;/p&gt;</comment>
                            <comment id="14597180" author="mantonov" created="Tue, 23 Jun 2015 05:11:19 +0000"  >&lt;p&gt;Committed to master, will commit version for branch-1 and branch-1.2 shortly&lt;/p&gt;</comment>
                            <comment id="14597212" author="mantonov" created="Tue, 23 Jun 2015 05:56:49 +0000"  >&lt;p&gt;This is version I committed to branch-1 and branch-1.2. Thanks for review!&lt;/p&gt;

&lt;p&gt;I&apos;ll keep an eye on integ build.&lt;/p&gt;</comment>
                            <comment id="14597230" author="hadoopqa" created="Tue, 23 Jun 2015 06:11:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12741223/HBASE-13103-branch-1.v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12741223/HBASE-13103-branch-1.v3.patch&lt;/a&gt;&lt;br/&gt;
  against branch-1 branch at commit 6a537eb8545c7dd6c01c0d911ad12e789eeab3ae.&lt;br/&gt;
  ATTACHMENT ID: 12741223&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/14521//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/14521//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14597260" author="hudson" created="Tue, 23 Jun 2015 06:44:23 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6591 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6591/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6591/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13103&quot; title=&quot;[ergonomics] add region size balancing as a feature of master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13103&quot;&gt;&lt;del&gt;HBASE-13103&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;ergonomics&amp;#93;&lt;/span&gt; add region size balancing as a feature of master (antonov: rev fd37ccb63c545850c08c132b2f6470354a6629f9)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerChore.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/NormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SplitNormalizationPlan.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14597337" author="hudson" created="Tue, 23 Jun 2015 08:27:28 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3 #10 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/10/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/10/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13103&quot; title=&quot;[ergonomics] add region size balancing as a feature of master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13103&quot;&gt;&lt;del&gt;HBASE-13103&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;ergonomics&amp;#93;&lt;/span&gt; add region size balancing as a feature of master (antonov: rev 84675ef6159692b0a8da219df5abcf111fe46845)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/NormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SplitNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14597364" author="hudson" created="Tue, 23 Jun 2015 08:54:06 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #17 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/17/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/17/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13103&quot; title=&quot;[ergonomics] add region size balancing as a feature of master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13103&quot;&gt;&lt;del&gt;HBASE-13103&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;ergonomics&amp;#93;&lt;/span&gt; add region size balancing as a feature of master (antonov: rev 5d1603f7591d22c212c2869d4cc820790a0a2f11)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SplitNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/NormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14597378" author="hudson" created="Tue, 23 Jun 2015 09:02:57 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #24 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/24/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/24/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13103&quot; title=&quot;[ergonomics] add region size balancing as a feature of master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13103&quot;&gt;&lt;del&gt;HBASE-13103&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;ergonomics&amp;#93;&lt;/span&gt; add region size balancing as a feature of master (antonov: rev 5d1603f7591d22c212c2869d4cc820790a0a2f11)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/NormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SplitNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14597385" author="hudson" created="Tue, 23 Jun 2015 09:11:05 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3-IT #2 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/2/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/2/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13103&quot; title=&quot;[ergonomics] add region size balancing as a feature of master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13103&quot;&gt;&lt;del&gt;HBASE-13103&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;ergonomics&amp;#93;&lt;/span&gt; add region size balancing as a feature of master (antonov: rev 84675ef6159692b0a8da219df5abcf111fe46845)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SplitNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/NormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/resources/hbase-default.xml&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SimpleRegionNormalizer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizerChore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/RegionNormalizer.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14597915" author="ndimiduk" created="Tue, 23 Jun 2015 16:39:59 +0000"  >&lt;p&gt;Woo! Nice work &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For reference, please update the FixVersion such that every branch committed to is represented. Right now, master branch is JIRA version 2.0.0; branch-1 is 1.3.0, branch-1.2 is 1.2.0. This JIRA should be marked fixVerions=2.0.0, 1.3.0, 1.2.0.&lt;/p&gt;</comment>
                            <comment id="14598114" author="mantonov" created="Tue, 23 Jun 2015 18:19:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; done, I see - thanks! I thought I should only set the earliest branch where it was committed. &lt;/p&gt;</comment>
                            <comment id="14598150" author="ndimiduk" created="Tue, 23 Jun 2015 18:41:23 +0000"  >&lt;p&gt;Yeah, I thought as much; no problem. We should really update &lt;a href=&quot;https://hbase.apache.org/book.html#_guide_for_hbase_committers&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hbase.apache.org/book.html#_guide_for_hbase_committers&lt;/a&gt; !&lt;/p&gt;</comment>
                            <comment id="14599540" author="yuzhihong@gmail.com" created="Wed, 24 Jun 2015 15:08:04 +0000"  >&lt;p&gt;I have been thinking about the implications of this feature when namespace quota is turned on.&lt;br/&gt;
Consider this scenario: the sum of regions of the tables in a particular namespace is close to the quota of this namespace. After some normalization activities, the sum of regions of the tables approaches the quota even further.&lt;br/&gt;
When user wants to create a (pre-split) table in the same namespace, he / she may find out that there is not enough quota for the new table.&lt;/p&gt;

&lt;p&gt;I have a simple patch which disables normalization when the underlying namespace is under quota control.&lt;/p&gt;

&lt;p&gt;If people think the above idea is plausible, I can create a JIRA so that we continue discussion there.&lt;/p&gt;</comment>
                            <comment id="14599574" author="busbey" created="Wed, 24 Jun 2015 15:26:28 +0000"  >&lt;p&gt;Is the quota on # of regions or size of regions?&lt;/p&gt;</comment>
                            <comment id="14599586" author="yuzhihong@gmail.com" created="Wed, 24 Jun 2015 15:33:20 +0000"  >&lt;p&gt;Quota is based on number of regions.&lt;/p&gt;</comment>
                            <comment id="14599639" author="busbey" created="Wed, 24 Jun 2015 16:11:39 +0000"  >&lt;p&gt;sure then, let&apos;s continue on a new jira.&lt;/p&gt;</comment>
                            <comment id="14599985" author="mantonov" created="Wed, 24 Jun 2015 19:21:25 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt;, I opened and linked &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13964&quot; title=&quot;Skip region normalization for tables under namespace quota&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13964&quot;&gt;&lt;del&gt;HBASE-13964&lt;/del&gt;&lt;/a&gt; for that.&lt;/p&gt;</comment>
                            <comment id="14723616" author="larsgeorge" created="Mon, 31 Aug 2015 16:17:54 +0000"  >&lt;p&gt;Is there follow up work or a JIRA tracking adding this to the shell? Is the only way to enable this per table using the Java API?&lt;/p&gt;</comment>
                            <comment id="14723619" author="larsgeorge" created="Mon, 31 Aug 2015 16:18:52 +0000"  >&lt;p&gt;Sorry, above was for &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; I guess. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Please advise.&lt;/p&gt;</comment>
                            <comment id="14723836" author="mantonov" created="Mon, 31 Aug 2015 18:38:06 +0000"  >&lt;p&gt;Normalization enable/disable flag per table is set in HTableDescriptor like, for example, compaction, so you should be able to do it from shell?&lt;/p&gt;

&lt;p&gt;alter &apos;table1&apos;, &lt;/p&gt;
{NORMALIZATION_ENABLED =&amp;gt; &apos;true&apos;}</comment>
                            <comment id="14725094" author="larsgeorge" created="Tue, 1 Sep 2015 09:50:29 +0000"  >&lt;p&gt;Nope: &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;hbase(main):028:0&amp;gt; alter &apos;testtable&apos;, {NORMALIZATION_ENABLED =&amp;gt; &apos;true&apos;}
NameError: uninitialized constant NORMALIZATION_ENABLED
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And even if so, it requires knowledge about the internal key name (says in the Java doc for the key in HTD).&lt;/p&gt;</comment>
                            <comment id="14725107" author="larsgeorge" created="Tue, 1 Sep 2015 09:54:36 +0000"  >&lt;p&gt;You may be able to force it like so:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;hbase(main):035:0&amp;gt; alter &apos;normtable&apos;, {CONFIGURATION =&amp;gt; {&apos;NORMALIZATION_ENABLED&apos; =&amp;gt; &apos;true&apos;}}
Updating all regions with the new schema...
1/1 regions updated.
Done.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but that is error-prone as you could easily misspell the arbitrary key string. I vote for proper shell support.&lt;/p&gt;</comment>
                            <comment id="14725155" author="mantonov" created="Tue, 1 Sep 2015 10:31:25 +0000"  >&lt;p&gt;Totally agreed - and thanks for bringing it up! Would you open a jira for that, or I can open one? Adding this support shouldn&apos;t be a lot of work..&lt;/p&gt;</comment>
                            <comment id="14725156" author="mantonov" created="Tue, 1 Sep 2015 10:32:44 +0000"  >&lt;p&gt;That would be something to go in 1.3 and 2.*, or how do you see it? Does 1.2 next minor (patch?) release sound good?&lt;/p&gt;</comment>
                            <comment id="14725679" author="ndimiduk" created="Tue, 1 Sep 2015 16:52:17 +0000"  >&lt;p&gt;Getting this in for 1.2.0 would be great, if there&apos;s time. ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14725773" author="busbey" created="Tue, 1 Sep 2015 17:51:53 +0000"  >&lt;p&gt;if it&apos;s in branch-1.2 it&apos;s good to go.&lt;/p&gt;</comment>
                            <comment id="14725775" author="ndimiduk" created="Tue, 1 Sep 2015 17:53:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;if it&apos;s in branch-1.2 it&apos;s good to go.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;They&apos;re talking about a new shell feature to better expose what&apos;s committed here. So the current feature is on branch-1.2, but the new shell code isn&apos;t there yet.&lt;/p&gt;</comment>
                            <comment id="14725794" author="busbey" created="Tue, 1 Sep 2015 18:00:29 +0000"  >&lt;p&gt;ah. sorry, missed that. Do we have a jira yet? is the ETA a matter of hours or days?&lt;/p&gt;

&lt;p&gt;I&apos;m probably not going to make RC0 today. I would like to make it tomorrow or Thursday.&lt;/p&gt;</comment>
                            <comment id="14730821" author="larsgeorge" created="Fri, 4 Sep 2015 13:18:25 +0000"  >&lt;p&gt;Added linked issue &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14367&quot; title=&quot;Add normalization support to shell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14367&quot;&gt;&lt;del&gt;HBASE-14367&lt;/del&gt;&lt;/a&gt; for the shell work. It is an easy one but needs a little insight into how to do this best. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt;, you want to take a stab?&lt;/p&gt;</comment>
                            <comment id="14731177" author="mantonov" created="Fri, 4 Sep 2015 18:08:48 +0000"  >&lt;p&gt;Sure, let me assign it to me. Thanks Lars!&lt;/p&gt;</comment>
                            <comment id="15103516" author="stack" created="Sun, 17 Jan 2016 00:32:19 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; The release note is no correct (or circumstance has changed since you wrote it?) It says this feature is off but it is on by default in 1.2, right sir?&lt;/p&gt;</comment>
                            <comment id="15103526" author="stack" created="Sun, 17 Jan 2016 00:43:23 +0000"  >&lt;p&gt;Yeah, and add a note on what the &apos;normalize&apos; process is sir. Thanks boss.&lt;/p&gt;</comment>
                            <comment id="15103549" author="stack" created="Sun, 17 Jan 2016 02:15:50 +0000"  >&lt;p&gt;nvm &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mantonov&quot; class=&quot;user-hover&quot; rel=&quot;mantonov&quot;&gt;Mikhail Antonov&lt;/a&gt; Lets just work on a bit of doc for this new feature instead.  Release was &apos;correct&apos; as of writing.&lt;/p&gt;</comment>
                            <comment id="15108227" author="mantonov" created="Wed, 20 Jan 2016 08:46:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; - missed that comments, sorry. I&apos;ve assigned to myself jira to create refguide on that.&lt;/p&gt;

&lt;p&gt;Normalization is operated on/off in the same way as balancer or other znode-based trackers. I&apos;m actually torn on whether we should have it on or off by default. Having it on by default sounds a bit aggressive, having it off might delay adoption. What do you think? I&apos;m inclined to have it on by default with appropriate release note. If it misbehaves for someone, it&apos;s one shell command to disable completely, and any feedback on such case would help to improve &quot;self-healing&quot; heuristics.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12929808">HBASE-15098</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12861837">HBASE-14367</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12931723">HBASE-15124</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12914333">HBASE-14838</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12927900">HBASE-15073</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12840303">HBASE-13964</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12628385">HBASE-7629</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12498210">HBASE-3521</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12741223" name="HBASE-13103-branch-1.v3.patch" size="58229" author="mantonov" created="Tue, 23 Jun 2015 05:56:49 +0000"/>
                            <attachment id="12708703" name="HBASE-13103-v0.patch" size="49701" author="mantonov" created="Wed, 1 Apr 2015 14:44:20 +0000"/>
                            <attachment id="12739481" name="HBASE-13103-v1.patch" size="54636" author="mantonov" created="Sun, 14 Jun 2015 09:51:06 +0000"/>
                            <attachment id="12740774" name="HBASE-13103-v2.patch" size="57509" author="mantonov" created="Sat, 20 Jun 2015 00:42:28 +0000"/>
                            <attachment id="12741160" name="HBASE-13103-v3.patch" size="57436" author="mantonov" created="Mon, 22 Jun 2015 22:59:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 25 Feb 2015 19:44:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            47 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i261xb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This patch adds optional ability for HMaster to normalize regions in size (disabled by default, change hbase.normalizer.enabled property to true to turn it on). If enabled, HMaster periodically (every 30 minutes by default) monitors tables for which normalization is enabled in table configuration and performs splits/merges as seems appropriate. Users may implement their own normalization strategies by implementing RegionNormalizer interface and configuring it in hbase-site.xml. </customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>