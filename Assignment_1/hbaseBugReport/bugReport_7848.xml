<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:49:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7848/HBASE-7848.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7848] Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7848</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Current region split following flush would fail snapshot.&lt;/p&gt;

&lt;p&gt;We can utilize ZK-based read/write lock to make flush-type snapshot robust&lt;/p&gt;</description>
                <environment></environment>
        <key id="12632485">HBASE-7848</key>
            <summary>Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yuzhihong@gmail.com">Ted Yu</assignee>
                                    <reporter username="yuzhihong@gmail.com">Ted Yu</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Feb 2013 22:32:11 +0000</created>
                <updated>Mon, 23 Sep 2013 18:30:30 +0000</updated>
                            <resolved>Sat, 23 Mar 2013 01:49:29 +0000</resolved>
                                    <version>0.95.2</version>
                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                    <component>snapshots</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="13589587" author="jmhsieh" created="Thu, 28 Feb 2013 15:06:18 +0000"  >&lt;p&gt;I&apos;m in the process of distilling the semantics of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7305&quot; title=&quot;ZK based Read/Write locks for table operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7305&quot;&gt;&lt;del&gt;HBASE-7305&lt;/del&gt;&lt;/a&gt;.  It seems that all table ops currently take the write lock but I think we&apos;ll just need the read table lock.  We&apos;d add a prepare call that takes the read lock of a source table when calling TakeSnapshotHandler, and a release in the completeSnapshot call.  &lt;/p&gt;</comment>
                            <comment id="13590002" author="yuzhihong@gmail.com" created="Thu, 28 Feb 2013 22:31:41 +0000"  >&lt;p&gt;Patch v1 adds read lock to EnabledTableSnapshotHandler&lt;/p&gt;</comment>
                            <comment id="13590042" author="yuzhihong@gmail.com" created="Thu, 28 Feb 2013 23:26:18 +0000"  >&lt;p&gt;TestSnapshotCloneIndependence.java is modified to relax split policy constraint.&lt;/p&gt;

&lt;p&gt;This requires &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7546&quot; title=&quot;Obtain a table read lock on region split operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7546&quot;&gt;&lt;del&gt;HBASE-7546&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13590051" author="enis" created="Thu, 28 Feb 2013 23:32:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;It seems that all table ops currently take the write lock but I think we&apos;ll just need the read table lock&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think you would really need a write lock. &lt;/p&gt;

&lt;p&gt;Patch looks good, except:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     conf.set(HConstants.HBASE_REGION_SPLIT_POLICY_KEY,
-      ConstantSizeRegionSplitPolicy.class.getName());
+      ConstantSizeRegionSplitPolicy.class.getName()); */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can you remove these completely instead of commenting out. &lt;/p&gt;</comment>
                            <comment id="13590059" author="enis" created="Thu, 28 Feb 2013 23:36:33 +0000"  >&lt;p&gt;Spoke too early, although super.prepare() does not do anything, can you also guard against that throwing exceptions, in case we add more stuff later. Meaning, releasing the table lock if super.prepare() throws exception. &lt;/p&gt;</comment>
                            <comment id="13590172" author="enis" created="Fri, 1 Mar 2013 01:58:36 +0000"  >&lt;p&gt;Ted and I have been digging around why this patch + region split table locks (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7546&quot; title=&quot;Obtain a table read lock on region split operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7546&quot;&gt;&lt;del&gt;HBASE-7546&lt;/del&gt;&lt;/a&gt;) fails for TestSnapshotCloneIndependence. The issue is that, TestSnapshotCloneIndependence sets a very small memstore flush, and this patch reverts the ConstantSizeRegionSplitPolicy change in favor of the default one. Now, the problem occurs because even before the snapshot + clone is created we do some splitting, and after the clone, we issue one more, but it fails &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
cannot split because midkey is the same as first or last row
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is because, we already pre-maturely split. If we just remove the commenting out split policy changes, we should be fine.&lt;/p&gt;</comment>
                            <comment id="13590508" author="jmhsieh" created="Fri, 1 Mar 2013 13:20:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, can you spell out the rules for using the locks in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7305&quot; title=&quot;ZK based Read/Write locks for table operations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7305&quot;&gt;&lt;del&gt;HBASE-7305&lt;/del&gt;&lt;/a&gt;? &lt;/p&gt;

&lt;p&gt;My initial thought was that we take the write lock when we essentially want to exclusively modify meta (split, move, create, enable/disable), and take the read lock when you want to prevent other processes from modifying table meta data (taking snapshot, reading meta whtiout having to worry about it changing before the next action).   It sounds like from conversation yesterday that this is not correct.   &lt;/p&gt;</comment>
                            <comment id="13607058" author="enis" created="Tue, 19 Mar 2013 23:55:59 +0000"  >&lt;p&gt;Updated Ted&apos;s patch with some review comments: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;EnabledTableSnapshotHandler.prepare() first calls super.prepare()&lt;/li&gt;
	&lt;li&gt;Instead of wrapping around completeSnapshot(), we wrap around process() for catching exceptions, and releasing the table lock in finally.&lt;/li&gt;
	&lt;li&gt;reverted the split policy change in TestSnapshotCloneIndependence. If we use the default policy, it causes a lot of splits due to the small flush size, and once we do the snapshot and want to do another split, it fails because it cannot find a midkey for the split.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13607155" author="enis" created="Wed, 20 Mar 2013 01:17:26 +0000"  >&lt;p&gt;Tested in local cluster. no issues.  &lt;/p&gt;</comment>
                            <comment id="13607156" author="hadoopqa" created="Wed, 20 Mar 2013 01:22:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574450/hbase-7848_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574450/hbase-7848_v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestHLogSplitCompressed&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4900//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13607172" author="yuzhihong@gmail.com" created="Wed, 20 Mar 2013 01:52:50 +0000"  >&lt;p&gt;Failed test should have been caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7878&quot; title=&quot;recoverFileLease does not check return value of recoverLease&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7878&quot;&gt;&lt;del&gt;HBASE-7878&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13607900" author="hadoopqa" created="Wed, 20 Mar 2013 17:37:10 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574566/7848-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574566/7848-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4911//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13608453" author="enis" created="Thu, 21 Mar 2013 00:30:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmhsieh&quot; class=&quot;user-hover&quot; rel=&quot;jmhsieh&quot;&gt;Jonathan Hsieh&lt;/a&gt; should we go with v2? &lt;/p&gt;</comment>
                            <comment id="13608501" author="jmhsieh" created="Thu, 21 Mar 2013 01:11:11 +0000"  >&lt;p&gt;Do we need to explicitly call the release table lock release in the catch case here?  an exn in the prepare could be a failed taken (which won&apos;t need release) or some io exception (where we don&apos;t know if we need to release it or not?).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
       &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; HBaseSnapshotException {
     TakeSnapshotHandler handler;
     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
-      handler = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; EnabledTableSnapshotHandler(snapshot, master, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
+      handler = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; EnabledTableSnapshotHandler(snapshot, master, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;).prepare();
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.executorService.submit(handler);
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.handler = handler;
-    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
+    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
       &lt;span class=&quot;code-comment&quot;&gt;// cleanup the working directory by trying to delete it from the fs.
&lt;/span&gt;       Path workingDir = SnapshotDescriptionUtils.getWorkingSnapshotDir(snapshot, rootDir);
       &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13608518" author="enis" created="Thu, 21 Mar 2013 01:28:29 +0000"  >&lt;p&gt;In all other handlers, the contract is that if prepare() throws an exception, we can assume that the table lock is not held. Prepare is responsible for catching the exception, and releasing the lock (see CreateTableHandler.prepare()). Unfortunately there is no single super class for all the handlers to document this, so I lefts some comments on table lock acquire(). Other than that, I don&apos;t know how we can better document this. Suggestions welcome. &lt;/p&gt;</comment>
                            <comment id="13608947" author="jmhsieh" created="Thu, 21 Mar 2013 14:01:04 +0000"  >&lt;p&gt;Then I&apos;m concerned that all the other handlers may have the same problem.&lt;/p&gt;

&lt;p&gt;Other operations (ZK nodes in splitting for example) have had a history of assuming exn means failure (when it could mean success but temporary network partition).   Looking at &lt;a href=&quot;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableLockManager.java#L223&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableLockManager.java#L223&lt;/a&gt; it seem that when interruptions and timeouts exceptions are thrown, the lock could be taken but reported as an exception.&lt;/p&gt;

&lt;p&gt;Can you give me a pointer to some tests that exercies the timeout and/or interrupt path?  &lt;/p&gt;

&lt;p&gt;A quick solution may be to use the is a slight modification of the canonical java lock pattern &amp;#8211; put the acquire inside the try block, and make sure the release is called and is able to differentiate between the different lock acquire failure modes or can release when acquire returned in the questionable state)&lt;/p&gt;</comment>
                            <comment id="13609072" author="ram_krish" created="Thu, 21 Mar 2013 16:12:03 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8131&quot; title=&quot;Create table handler needs to handle failure cases.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8131&quot;&gt;&lt;del&gt;HBASE-8131&lt;/del&gt;&lt;/a&gt; modifies the way CreateTableHandler releases the lock.  It was me who changed that.&lt;br/&gt;
So even incase of exceptions while creating table the lock would be released.  Otherwise the user was unable to perform the create table operation once again.&lt;br/&gt;
Pls do correct me if that was wrong.&lt;/p&gt;</comment>
                            <comment id="13609194" author="enis" created="Thu, 21 Mar 2013 17:52:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;Looking at &lt;a href=&quot;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableLockManager.java#L223&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/TableLockManager.java#L223&lt;/a&gt; it seem that when interruptions and timeouts exceptions are thrown, the lock could be taken but reported as an exception.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;On timeout, we delete the lock znode already, ZKInterProcessLockBase, line 199. In case of interruptions, I think we should ensure that the lock znode is deleted before throwing the exception. This seems to be the model taken by ReentrantLock in java. I&apos;ll open a jira for that.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Can you give me a pointer to some tests that exercies the timeout and/or interrupt path?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;There are timeout tests in TestTableLockManager, and TestZKInterProcessReadWriteLock. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;A quick solution may be to use the is a slight modification of the canonical java lock pattern &#8211; put the acquire inside the try block&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;From the javadoc &lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/ReentrantLock.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/ReentrantLock.html&lt;/a&gt;, the canonical model is not to put acquire() in try, but rest of the code after acquire().&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void m() { 
     lock.lock();  &lt;span class=&quot;code-comment&quot;&gt;// block until condition holds
&lt;/span&gt;     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
       &lt;span class=&quot;code-comment&quot;&gt;// ... method body
&lt;/span&gt;     } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
       lock.unlock()
     }
   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Though you are right that we have to ensure lock is properly cleaned up on Interruption. This has not been a problem, since currently only the server shutdown interrupts the lock waiting, and zk cleans the znodes since they are EPHEMERAL. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8131&quot; title=&quot;Create table handler needs to handle failure cases.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8131&quot;&gt;&lt;del&gt;HBASE-8131&lt;/del&gt;&lt;/a&gt; modifies the way CreateTableHandler releases the lock. It was me who changed that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, in CreateTableHandler, we should have guarded against the whole process(), instead of the subcall handleCreateTable(). Your patch fixes the condition where lock is acquired(). What Jonathan is pointing to is inside the acquire() call. &lt;/p&gt;</comment>
                            <comment id="13609578" author="jmhsieh" created="Thu, 21 Mar 2013 22:12:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;On timeout, we delete the lock znode already, ZKInterProcessLockBase, line 199. In case of interruptions, I think we should ensure that the lock znode is deleted before throwing the exception. This seems to be the model taken by ReentrantLock in java. I&apos;ll open a jira for that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually, can these more detailed semantics be added to the TableLock.acquire() javadoc (follow on issue)?  From what currently exists I don&apos;t know what to expect in those error situations and would have needed to dig through a few layers to get to it.  Also I don&apos;t know the behavior from the release java doc either if a lock wan&apos;t held.   &lt;a href=&quot;http://hbase.apache.org/apidocs/org/apache/hadoop/hbase/master/TableLockManager.TableLock.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/apidocs/org/apache/hadoop/hbase/master/TableLockManager.TableLock.html&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Though you are right that we have to ensure lock is properly cleaned up on Interruption&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Follow on issue? I think after an interrupts you&apos;d have to check somehow or force a release.&lt;/p&gt;
</comment>
                            <comment id="13609618" author="jmhsieh" created="Thu, 21 Mar 2013 22:35:00 +0000"  >&lt;p&gt;nit:  should probably return the value of super.prepare() in case the base class changes in the future somehow.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; EnabledTableSnapshotHandler prepare() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
+    &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.prepare();
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.tableLock.acquire(); &lt;span class=&quot;code-comment&quot;&gt;//after &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, you should ensure to release &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; lock in
&lt;/span&gt;+                              &lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; of exceptions
&lt;/span&gt;+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;;
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m thinking about why we only do this on the enabled table snapshot but not on the disabled table snapshot.  I think we would want to block the enables (or enables and then alters) from happening while a disabled table snapshot is happening.  &lt;/p&gt;

&lt;p&gt;If we add to the disabled case, I think we are missing a call to prepare() here, and might want to move the prepare() implementation to TakeSnapshotHandler.java.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java#L431&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java#L431&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13609636" author="enis" created="Thu, 21 Mar 2013 22:47:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m thinking about why we only do this on the enabled table snapshot but not on the disabled table snapshot. I think we would want to block the enables (or enables and then alters) from happening while a disabled table snapshot is happening.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If there is no other guard against taking a snapshot and enabling the table, it makes sense to acquire a table lock. &lt;/p&gt;</comment>
                            <comment id="13609657" author="jmhsieh" created="Thu, 21 Mar 2013 23:06:02 +0000"  >&lt;p&gt;Ok so I agree.  Do you want to tackle it here? (or should I take this on?)&lt;/p&gt;</comment>
                            <comment id="13609664" author="enis" created="Thu, 21 Mar 2013 23:09:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;Ok so I agree. Do you want to tackle it here? (or should I take this on?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;ll update the patch shortly. &lt;/p&gt;</comment>
                            <comment id="13609763" author="enis" created="Fri, 22 Mar 2013 01:01:19 +0000"  >&lt;p&gt;Ok, how about this patch. Snapshot tests passed locally. &lt;/p&gt;</comment>
                            <comment id="13609811" author="hadoopqa" created="Fri, 22 Mar 2013 02:13:12 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12574931/hbase-7848_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12574931/hbase-7848_v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/4957//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13609814" author="yuzhihong@gmail.com" created="Fri, 22 Mar 2013 02:18:20 +0000"  >&lt;p&gt;Patch v3 looks good.&lt;/p&gt;</comment>
                            <comment id="13610258" author="jmhsieh" created="Fri, 22 Mar 2013 13:33:48 +0000"  >&lt;p&gt;looks good to me.  would love it if a test was added (maybe try to alter while snapshotting) but feel free to commit.  Thanks for answering my questions &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;.&lt;/p&gt;
</comment>
                            <comment id="13611524" author="enis" created="Sat, 23 Mar 2013 01:49:29 +0000"  >&lt;p&gt;Committed the patch. Thanks Ted, Jonathan. &lt;/p&gt;</comment>
                            <comment id="13611578" author="hudson" created="Sat, 23 Mar 2013 04:25:53 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #460 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/460/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/460/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7848&quot; title=&quot;Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7848&quot;&gt;&lt;del&gt;HBASE-7848&lt;/del&gt;&lt;/a&gt; Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter (Revision 1460074)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/DisabledTableSnapshotHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/EnabledTableSnapshotHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13611584" author="hudson" created="Sat, 23 Mar 2013 04:27:29 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3988 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3988/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3988/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7848&quot; title=&quot;Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7848&quot;&gt;&lt;del&gt;HBASE-7848&lt;/del&gt;&lt;/a&gt; Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter (Revision 1460074)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/DisabledTableSnapshotHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/EnabledTableSnapshotHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13611612" author="hudson" created="Sat, 23 Mar 2013 04:43:18 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #38 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/38/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/38/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7848&quot; title=&quot;Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7848&quot;&gt;&lt;del&gt;HBASE-7848&lt;/del&gt;&lt;/a&gt; Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter (Revision 1460075)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/DisabledTableSnapshotHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/EnabledTableSnapshotHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13611636" author="hudson" created="Sat, 23 Mar 2013 06:17:40 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #100 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/100/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/100/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7848&quot; title=&quot;Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7848&quot;&gt;&lt;del&gt;HBASE-7848&lt;/del&gt;&lt;/a&gt; Use ZK-based read/write lock to make flush-type snapshot robust against table enable/disable/alter (Revision 1460075)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/DisabledTableSnapshotHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/EnabledTableSnapshotHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13622550" author="jinghe" created="Thu, 4 Apr 2013 17:25:59 +0000"  >&lt;p&gt;Hi, Ted, Jonathan&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;My initial thought was that we take the write lock when we essentially want to exclusively modify meta (split, move, create, enable/disable), &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is probably a general question on snapshot and specific to this TableLock. During snapshot, with this TableLock, do we block writes/puts going into the table/memstore?&lt;br/&gt;
or it is done thru other mechanism?&lt;/p&gt;</comment>
                            <comment id="13622574" author="jmhsieh" created="Thu, 4 Apr 2013 17:52:47 +0000"  >&lt;p&gt;We currently do not block writes/puts while snapshots are going on (and we don&apos;t really want to from the client point of view).   The table locks are blocking changes to the table schema and region splits and region merges.  &lt;/p&gt;

&lt;p&gt;Future fancier snapshots may try to shrink the window of time where we do not honor snapshot/point in time/causal consistency.&lt;/p&gt;</comment>
                            <comment id="13622764" author="jinghe" created="Thu, 4 Apr 2013 20:53:00 +0000"  >&lt;p&gt;Thanks for clarifying.&lt;/p&gt;</comment>
                            <comment id="13774989" author="stack" created="Mon, 23 Sep 2013 18:30:30 +0000"  >&lt;p&gt;Marking closed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12619005">HBASE-7290</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12622994">HBASE-7305</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12571491" name="7848-v1.txt" size="5055" author="yuzhihong@gmail.com" created="Thu, 28 Feb 2013 23:26:18 +0000"/>
                            <attachment id="12574566" name="7848-v2.txt" size="3900" author="yuzhihong@gmail.com" created="Wed, 20 Mar 2013 16:24:14 +0000"/>
                            <attachment id="12574450" name="hbase-7848_v2.patch" size="3900" author="enis" created="Tue, 19 Mar 2013 23:55:59 +0000"/>
                            <attachment id="12574931" name="hbase-7848_v3.patch" size="8310" author="enis" created="Fri, 22 Mar 2013 01:01:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 28 Feb 2013 15:06:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>312981</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 12 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1i0f3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>313327</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>