<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:15:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10595/HBASE-10595.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10595] HBaseAdmin.getTableDescriptor can wrongly get the previous table&apos;s TableDescriptor even after the table dir in hdfs is removed</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10595</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When a table dir (in hdfs) is removed(by outside), HMaster will still return the cached TableDescriptor to client for getTableDescriptor request.&lt;/p&gt;

&lt;p&gt;On the contrary, HBaseAdmin.listTables() is handled correctly in current implementation, for a table whose table dir in hdfs is removed by outside, getTableDescriptor can still retrieve back a valid (old) table descriptor, while listTables says it doesn&apos;t exist, this is inconsistent&lt;/p&gt;

&lt;p&gt;The reason for this bug is because HMaster (via FSTableDescriptors) doesn&apos;t check if the table dir exists for getTableDescriptor() request, (while it lists all existing table dirs(not firstly respects cache) and returns accordingly for listTables() request)&lt;/p&gt;

&lt;p&gt;When a table is deleted via deleteTable, the cache will be cleared after the table dir and tableInfo file is removed, listTables/getTableDescriptor inconsistency should be transient(though still exists, when table dir is removed while cache is not cleared) and harder to expose&lt;/p&gt;</description>
                <environment></environment>
        <key id="12696778">HBASE-10595</key>
            <summary>HBaseAdmin.getTableDescriptor can wrongly get the previous table&apos;s TableDescriptor even after the table dir in hdfs is removed</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12697642">HBASE-10628</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="fenghh">Honghua Feng</assignee>
                                    <reporter username="fenghh">Honghua Feng</reporter>
                        <labels>
                    </labels>
                <created>Sun, 23 Feb 2014 04:18:41 +0000</created>
                <updated>Sat, 8 Mar 2014 10:04:07 +0000</updated>
                                                                            <component>master</component>
                    <component>util</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13909714" author="fenghh" created="Sun, 23 Feb 2014 08:44:52 +0000"  >&lt;p&gt;Patch attached&lt;/p&gt;

&lt;p&gt;A new unit test case is added to enforce the consistency between getTableDescriptor and listTables when the table dir is removed by outside. This case which should be taken for granted can&apos;t pass before the patch.&lt;/p&gt;</comment>
                            <comment id="13909715" author="fenghh" created="Sun, 23 Feb 2014 08:57:58 +0000"  >&lt;p&gt;Additional note: TestAssignmentManagerOnCluster#testMoveRegionOfDeletedTable uses an assumption that regions of a deleted table are guaranteed to be removed from RegionStates in HMaster after deleteTable() is done and expects to receive a UnknownRegionException(which is by checking that region is not in RegionStates) when moving a region after its table is deleted.&lt;/p&gt;

&lt;p&gt;But this assumption is wrong because though deleteTable() is synchronous but it only verify the table descriptor is empty before return, but in DeleteTableHandler the regions are removed from RegionStates &lt;b&gt;after&lt;/b&gt; region-data-dirs / table-dir are removed and table descriptor is removed from cache.&lt;/p&gt;

&lt;p&gt;Instead of fixing it in the unit test(we could sleep for a while before call move(), but it&apos;s weird since deleteTable() is synchronous!), I let move() throw UnknownRegionException as well when FSTableDescriptors.get(table) return null (means already deleted, but before regions are removed from RegionStates)&lt;/p&gt;</comment>
                            <comment id="13909716" author="fenghh" created="Sun, 23 Feb 2014 09:01:01 +0000"  >&lt;p&gt;TestMasterObserver fails when I run &apos;mvn test -P runAllTests&apos;, but it never fails when I run it separately many times(10+), any clue?&lt;/p&gt;</comment>
                            <comment id="13910053" author="fenghh" created="Mon, 24 Feb 2014 06:29:58 +0000"  >&lt;p&gt;New patch &apos;fixing&apos; previously failed TestMasterObserver case&lt;/p&gt;

&lt;p&gt;The cause of the failure for TestMasterObserver is similar as TestAssignmentManagerOnCluster#testMoveRegionOfDeletedTable : HBaseAdmin.deleteTable is &apos;synchronous&apos; to client in that it returns after it ensures table descriptor can&apos;t be retrieved back from master after asking master to delete a table. But DeleteTableHandler is processed asynchronously in master, and things such as &apos;clearing table descriptor cache&apos;, &apos;removing regions from RegionStates&apos; and &apos;calling all coprocessors&apos; postDeleteTableHandler&apos; are all done &lt;b&gt;after&lt;/b&gt; removing the table dir (it&apos;s &apos;removing table dir&apos; now that makes client can&apos;t get table descriptor and believe the table is deleted after this patch, not from table descriptor cache).&lt;/p&gt;

&lt;p&gt;Before this patch, the client can still get a valid table descriptor after master removes the table dir(first rename, then remove all region data dirs and finally remove table dir) until the table descriptor is removed from the table descriptor cache. But after this patch, client can&apos;t get table descriptor once master renames the table dir, so it makes the cases which assume &quot;regions are removed from RegionStates&quot; or &quot;coprocessors&apos; postDeleteTableHandler are called&quot; much more possible to fail since now it takes longer from &quot;client can&apos;t get table descriptor&quot; to &quot;regions are removed from RegionStates&quot; / &quot;coprocessors&apos; postDeleteTableHandler are called&quot;, and the code assuming such things fail when executed immediately after HBaseAdmin.deleteTable().&lt;/p&gt;

&lt;p&gt;In short, we can&apos;t assume &quot;regions are removed from RegionStates&quot; or &quot;coprocessors&apos; postDeleteTableHandler are called&quot; after HBaseAdmin.deleteTable() returns, though HBaseAdmin.deleteTable() is seemingly synchronous.&lt;/p&gt;</comment>
                            <comment id="13910114" author="hadoopqa" created="Mon, 24 Feb 2014 09:06:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12630609/HBASE-10595-trunk_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12630609/HBASE-10595-trunk_v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12630609&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.util.TestHBaseFsck.testSplitDaughtersNotInMeta(TestHBaseFsck.java:1477)&lt;br/&gt;
	at org.apache.hadoop.hbase.util.TestHBaseFsck.testOverlapAndOrphan(TestHBaseFsck.java:859)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8781//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13910362" author="hadoopqa" created="Mon, 24 Feb 2014 14:47:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12630659/HBASE-10595-trunk_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12630659/HBASE-10595-trunk_v3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12630659&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8784//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13910694" author="enis" created="Mon, 24 Feb 2014 19:20:36 +0000"  >&lt;p&gt;Going to NN for checking whether table dir exists basically means that we should not be using the cache at all. Users are expected to not delete the table directory from the file system, which will cause further inconsistencies. Why do you think this is a problem? &lt;/p&gt;</comment>
                            <comment id="13915541" author="fenghh" created="Fri, 28 Feb 2014 07:58:48 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; for comment! sorry for the late reply&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Going to NN for checking whether table dir exists basically means that we should not be using the cache at all. Users are expected to not delete the table directory from the file system, which will cause further inconsistencies. Why do you think this is a problem?&lt;/p&gt;&lt;/blockquote&gt;
&lt;ol&gt;
	&lt;li&gt;You meant HMaster when saying &apos;NN&apos;, right?&lt;/li&gt;
	&lt;li&gt;In the time interval that after table dir is moved to tmp folder and before it&apos;s removed from table descriptor cache, the results of listTables and getTableDescriptor contradict, don&apos;t you think it&apos;s a kind of inconsistency?&lt;/li&gt;
	&lt;li&gt;Users are surely NOT expected to delete table directory on purpose, but if they do delete table directory by accident, we should still ensure queries on HBase states get consistent results, right? Actually some HBCK unit tests aim for ensuring consistency under such corruption from user.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13915847" author="hadoopqa" created="Fri, 28 Feb 2014 15:10:31 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12631729/HBASE-10595-trunk_v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12631729/HBASE-10595-trunk_v4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12631729&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.1&lt;/font&gt;.  The patch compiles against the hadoop 1.1 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/8851//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13915909" author="fenghh" created="Fri, 28 Feb 2014 15:52:52 +0000"  >&lt;p&gt;To align with listTables() for which table is deemed nonexistent whenever its table dir is nonexistent, getTableDescriptor now gets TableNotFoundException whenever its table dir is nonexistent without regard to the table descriptor cache.&lt;/p&gt;

&lt;p&gt;During deleting table: table dir is renamed(moved) to tmp dir =&amp;gt; archive all region data =&amp;gt; remove table dir =&amp;gt; clear table descriptor cache =&amp;gt; remove from RegionStates =&amp;gt; remove from ZKTable =&amp;gt; execute postDeleteTable coprocessor&lt;/p&gt;

&lt;p&gt;By this patch, client now thinks deleting table succeeds after table dir is renamed(nonexistent), rather than after clearing the table descriptor cache, so some unit tests assuming states such as regions have been removed from RegionStates, postDeleteTable coprocessor has been executed now are more possible to fail (since archiving region data / removing table dir in tmp dir takes more time), that&apos;s why I add Threads.sleep() for some unit-tests in this patch &amp;#8211; Why these cases can pass before this patch is not by design, but by chance, because it takes much less time from clearing table descriptor cache to removing from RegionStates / executing postDeleteTable coprocessor(when without archiving table data / removing table dir), and they do fail when I add some extra sleep(it equals to scenario where HMaster could suddenly run slowly) after clearing table descriptor cache without this patch...&lt;/p&gt;

&lt;p&gt;The root cause of above test failure is another bug : HBaseAdmin.deleteTable is not &quot;really&quot; synchronous(some cleanups in HMaster are likely not done yet &lt;b&gt;after&lt;/b&gt; HBaseAdmin.deleteTable() returns). HBase-10636 is created for this bug. We can remove the added Threads.sleep() once HBase-10636 is done, and personally I think this patch can be resolved independently.&lt;/p&gt;

&lt;p&gt;Any opinion?&lt;/p&gt;</comment>
                            <comment id="13916130" author="v.himanshu" created="Fri, 28 Feb 2014 18:20:26 +0000"  >&lt;p&gt;Looking at the patch, &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;+    if (!fs.exists(getTableDir(tablename))) {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is a call to NN, and this patch would invoke it for every get request.&lt;br/&gt;
If a user deletes a table dir, wouldn&apos;t there be other (and more severe) consistencies such as meta being hosed, etc. What is the use case where a user is deleting the table dir behind the curtain ? &lt;/p&gt;</comment>
                            <comment id="13916180" author="enis" created="Fri, 28 Feb 2014 18:54:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;You meant HMaster when saying &apos;NN&apos;, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I meant NameNode, not HMaster. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In the time interval that after table dir is moved to tmp folder and before it&apos;s removed from table descriptor cache, the results of listTables and getTableDescriptor contradict, don&apos;t you think it&apos;s a kind of inconsistency?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is an inconsistency. But completely making the cache useless is not the way to solve it I think. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Users are surely NOT expected to delete table directory on purpose, but if they do delete table directory by accident, we should still ensure queries on HBase states get consistent results, right? Actually some HBCK unit tests aim for ensuring consistency under such corruption from user.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is the job of HBCK. There is no guarantees expected from the master if the user deletes dirs under it. &lt;/p&gt;</comment>
                            <comment id="13917343" author="fenghh" created="Sun, 2 Mar 2014 09:50:06 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=v.himanshu&quot; class=&quot;user-hover&quot; rel=&quot;v.himanshu&quot;&gt;Himanshu Vashishtha&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; for review and comments!&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This is a call to NN, and this patch would invoke it for every get request.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Actually before this patch every get request still need a call to NN, The call to NN is to determine if the request can be satisfied by the cache (getTableInfoModtime will ask NN for the last modified time of the table descriptor file...), so you can view the check of existence of table dir is a kind of shortcut.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cachedtdm != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-comment&quot;&gt;// Check mod time has not changed (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is trip to NN).
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (getTableInfoModtime(tablename) &amp;lt;= cachedtdm.getModtime()) {
        cachehits++;
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; cachedtdm.getTableDescriptor();
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;&lt;p&gt;If a user deletes a table dir, wouldn&apos;t there be other (and more severe) consistencies such as meta being hosed, etc. What is the use case where a user is deleting the table dir behind the curtain ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;User deleting a table dir should not be an expected / normal scenario, should be deemed as a special case to result in the inconsistency of this patch. HBCK should be used to remove the items of this table in meta table for overall consistency. This is an issue out of scope of this patch.&lt;br/&gt;
This patch in more sensce is to fix the bug that listTables() and getTableDescriptor() use different criterion when table dir isn&apos;t existent:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;listTables() : deems a table is nonexistent and doesn&apos;t return according item if the table dir isn&apos;t existent, without checking if there is a corresponding item in table descriptor cache&lt;/li&gt;
	&lt;li&gt;getTableDescriptor() : check the last modified time of the table descriptor file under table dir, if the file isn&apos;t existent or it&apos;s last modified time isn&apos;t newer than the one of table descriptor cache, deems as a cache hit and just return the one from cache&lt;/li&gt;
&lt;/ol&gt;


&lt;blockquote&gt;&lt;p&gt;I meant NameNode, not HMaster.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks you two clarifying on this, I now realize you meant the access to NN to checking existence of the table dir &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;That is an inconsistency. But completely making the cache useless is not the way to solve it I think.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Glad you agree it&apos;s an inconsistency&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Why I think completely making the cache useless is acceptable:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;In essence all &apos;cache&apos; item should be coherent to it backing store (think about all other kinds of cache&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;), the difference among various cache strategies(such as no-write / write-through / write-back...)  are when and how to keep cache to be coherent with its backing store, but not whether it should be coherent to its backing store, and whenever it isn&apos;t coherent with backing store, it&apos;s deemed as &apos;invalid&apos; and should not be used to serve request. In this scenario, the table descriptor file is the backing store of the table descriptor cache.&lt;/li&gt;
	&lt;li&gt;listTables() currently already use the semantic of above &apos;whenever cache isn&apos;t coherent with backing store, it&apos;s deemed as &apos;invalid&apos; and should not be used to serve request&apos; : it doesn&apos;t use cache if the table dir doesn&apos;t exist.&lt;/li&gt;
	&lt;li&gt;Whether an active master failover-switch happens is transparent to the client, what client cares about is its requests are served consistently. But if we still use cache for getTableDescriptor() even its backing store(table dir and table descriptor file) changes(being removed is a special kind of change, right?), inconsistency can happen for two consecutive getTableDescriptor() calls : the previous active master uses its cache for the first getTableDescriptor, then it fails, another master takes the active master role, it finds no table dir(hence no table descriptor file), so it returns null for the second getTableDescriptor...&lt;/li&gt;
&lt;/ol&gt;


&lt;blockquote&gt;&lt;p&gt;That is the job of HBCK. There is no guarantees expected from the master if the user deletes dirs under it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Partially agree&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. But it sounds much better if we could keep consistency from client perspective even under such corruption as table dir is removed from outside, right?&lt;/p&gt;

&lt;p&gt;Lastly, what about we don&apos;t check the existence of the table dir, and just return null if the table descriptor file doesn&apos;t exist(it&apos;s now treated a special case of &quot;modified time not newer than cache&quot;, IMHO it&apos;s incorrect)? This way we still align with the cache semantic &quot;invalidate cache if it&apos;s not coherent with its backing store&quot; but can save an access to NN if the table dir does exist.&lt;/p&gt;</comment>
                            <comment id="13917346" author="fenghh" created="Sun, 2 Mar 2014 09:52:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;Lastly, what about we don&apos;t check the existence of the table dir, and just return null if the table descriptor file doesn&apos;t exist(it&apos;s now treated a special case of &quot;modified time not newer than cache&quot;, IMHO it&apos;s incorrect)? This way we still align with the cache semantic &quot;invalidate cache if it&apos;s not coherent with its backing store&quot; but can save an access to NN if the table dir does exist.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I will make a new patch accordingly if you guys agree on above&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13918970" author="fenghh" created="Tue, 4 Mar 2014 03:08:56 +0000"  >&lt;p&gt;Ping for further comment&lt;/p&gt;</comment>
                            <comment id="13924783" author="fenghh" created="Sat, 8 Mar 2014 10:04:07 +0000"  >&lt;p&gt;Ping for review or further comment, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt; / &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=v.himanshu&quot; class=&quot;user-hover&quot; rel=&quot;v.himanshu&quot;&gt;Himanshu Vashishtha&lt;/a&gt; ? Thanks. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12696485">HBASE-10584</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12630547" name="HBASE-10595-trunk_v1.patch" size="4130" author="fenghh" created="Sun, 23 Feb 2014 08:44:52 +0000"/>
                            <attachment id="12630609" name="HBASE-10595-trunk_v2.patch" size="5121" author="fenghh" created="Mon, 24 Feb 2014 06:29:58 +0000"/>
                            <attachment id="12630659" name="HBASE-10595-trunk_v3.patch" size="4969" author="fenghh" created="Mon, 24 Feb 2014 13:06:17 +0000"/>
                            <attachment id="12631729" name="HBASE-10595-trunk_v4.patch" size="5339" author="fenghh" created="Fri, 28 Feb 2014 12:38:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Feb 2014 09:06:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>375253</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 40 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1snxz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>375549</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>