<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:02:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15340/HBASE-15340.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15340] Partial row result of scan may return data violates the row-level transaction </title>
                <link>https://issues.apache.org/jira/browse/HBASE-15340</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;There are cases the region sever will return partial row result, such as the client set batch for scan or configured size limit reached. In these situations, the client may return data that violates the row-level transaction to the application. The following steps show the problem:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// assume there is a test table &apos;test_table&apos; with one family &apos;F&apos; and one region &apos;region&apos;. 
&lt;/span&gt;&lt;span class=&quot;code-comment&quot;&gt;// meanwhile there are two region servers &apos;rsA&apos; and &apos;rsB&apos;.
&lt;/span&gt;1. Let &apos;region&apos; firstly located in &apos;rsA&apos; and put one row with two columns &apos;c1&apos; and &apos;c2&apos; as:
    &amp;gt; put &apos;test_table&apos;, &apos;row&apos;, &apos;F:c1&apos;, &apos;value1&apos;, &apos;F:c2&apos;, &apos;value1&apos;

2. Start a client to scan &apos;test_table&apos;, with scan.setBatch(1) and scan.setCaching(1). The client will get one column as : {column=&apos;F:c1&apos; and value=&apos;value1&apos;} in the first rpc call after scanner created, and the result will be returned to application.

3. Before the client issues the next request, the &apos;region&apos; was moved to &apos;rsB&apos; and accepted another mutations &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the two columns &apos;c1&apos; and &apos;c2&apos; as:
    &amp;gt; put &apos;test_table&apos;, &apos;row&apos;, &apos;F:c1&apos;, &apos;value2&apos;, &apos;F:c2&apos;, &apos;value2&apos;

4. Then, the client  will receive a RegionMovedException when issuing next request and will retry to open scanner on &apos;rsB&apos;. The newly opened scanner will higher mvcc than old data so that could read out column as : { column=&apos;F:c2&apos; with value=&apos;value2&apos;} and &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the result to application.
   Therefore, the application will get data as:

&apos;row&apos;    column=&apos;F:c1&apos;   value=&apos;value1&apos;
&apos;row&apos;    column=&apos;F:c2&apos;,  value=&apos;value2&apos;

   The returned data is combined from two different mutations and violates the row-level transaction.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The reason is that the newly opened scanner after region moved will get a different mvcc. I am not sure whether this result is by design for scan if partial row result is allowed. However, such row result combined from different transactions may make the application have unexpected state.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12944809">HBASE-15340</key>
            <summary>Partial row result of scan may return data violates the row-level transaction </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="cuijianwei">Jianwei Cui</reporter>
                        <labels>
                    </labels>
                <created>Fri, 26 Feb 2016 07:56:04 +0000</created>
                <updated>Sat, 5 Mar 2016 10:08:45 +0000</updated>
                                            <version>2.0.0</version>
                                                    <component>Scanners</component>
                    <component>Transactions/MVCC</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15168630" author="cuijianwei" created="Fri, 26 Feb 2016 08:08:29 +0000"  >&lt;p&gt;A direct solution is that we can make ClientScanner record the readPoint when the scanner for the region is firstly opened, the following scanners for the same region use the same readPoint if RegionMovedException happens. Any suggestion? &lt;/p&gt;</comment>
                            <comment id="15168642" author="ram_krish" created="Fri, 26 Feb 2016 08:16:39 +0000"  >&lt;p&gt;Is this same as &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15325?&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-15325?&lt;/a&gt;  Even there it talks about partial row results when the region moves.&lt;/p&gt;</comment>
                            <comment id="15168678" author="cuijianwei" created="Fri, 26 Feb 2016 08:56:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt;, this is a different problem caused by region move when scanning IMO. When &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15325&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-15325&lt;/a&gt; is resolved, there is no data miss, however, the returned data may combined from different row-level transactions which is unexpected for application. I think we should also keep the READ_COMMITTED isolation level in this situation?&lt;/p&gt;</comment>
                            <comment id="15168700" author="anoop.hbase" created="Fri, 26 Feb 2016 09:16:33 +0000"  >&lt;p&gt;After seeing an issue around partial results while region move yday, I was thinking on this ..   And the solution you mentioned only came first to my mind as well &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;    Ya in case of client recreate scanner (because of NSRE or region moved) the ReadPoint MVCC stuff will get broken.  As the new Scanner will have a new readPnt.&lt;/p&gt;</comment>
                            <comment id="15168702" author="anoop.hbase" created="Fri, 26 Feb 2016 09:17:50 +0000"  >&lt;p&gt;And this is an issue in all versions of HBase I think. From day one we have this issue &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15168727" author="ram_krish" created="Fri, 26 Feb 2016 09:39:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;When &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15325&quot; title=&quot;ResultScanner allowing partial result will miss the rest of the row if the region is moved between two rpc requests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15325&quot;&gt;&lt;del&gt;HBASE-15325&lt;/del&gt;&lt;/a&gt; is resolved, there is no data miss, however, the returned data may combined from different row-level transactions which is unexpected for application. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ya got it now.&lt;/p&gt;</comment>
                            <comment id="15168736" author="cuijianwei" created="Fri, 26 Feb 2016 09:47:30 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;, the intra-row scanning seems come from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1537&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-1537&lt;/a&gt;, so that versions after 0.90.0 will have this issue. I will make a patch following the idea and check the result&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15168742" author="anoop.hbase" created="Fri, 26 Feb 2016 09:54:06 +0000"  >&lt;p&gt;Not just intra row I would say.  Even consider a normal Scan. We have writes also in parallel.  A row &apos;r5&apos; (say only one cell in it ) is inserted after begin of the scan.  So if there is no region move in btw, we wont see this row at all. The cell will get removed from the return result by the seqId check against the readPnt.  But if there is a region move in btw, we may see it.   So it is a Q of consistency wrt results as well.  Get my point?  Just saying..    With intra row results (By setting batch on Scan/ result chunking)  this got to be more visible issue&lt;/p&gt;</comment>
                            <comment id="15168771" author="cuijianwei" created="Fri, 26 Feb 2016 10:14:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;, thanks for your comment, I get your point&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Yes, the case you mentioned will happen. The page &lt;a href=&quot;https://hbase.apache.org/acid-semantics.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hbase.apache.org/acid-semantics.html&lt;/a&gt; explains the consistency guarantee for scan:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
A scan is not a consistent view of a table. Scans &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not exhibit snapshot isolation.

Rather, scans have the following properties:

1. Any row returned by the scan will be a consistent view (i.e. that version of the complete row existed at some point in time) [1]
2. A scan will always reflect a view of the data at least as &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; as the beginning of the scan. This satisfies the visibility guarantees enumerated below.
    1. For example, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; client A writes data X and then communicates via a side channel to client B, any scans started by client B will contain data at least as &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; as X.
    2. A scan _must_ reflect all mutations committed prior to the construction of the scanner, and _may_ reflect some mutations committed subsequent to the construction of the scanner.
    3. Scans must include all data written prior to the scan (except in the &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; where data is subsequently mutated, in which &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; it _may_ reflect the mutation)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It seems the consistent for scan only guarantee to read out data at least as new as the beginning of the scan, but no guarantee to whether read out data concurrently written or written after the beginning of the scan. &lt;/p&gt;

&lt;p&gt;At the end of the page:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[1] A consistent view is not guaranteed intra-row scanning -- i.e. fetching a portion of a row in one RPC then going back to fetch another portion of the row in a subsequent RPC. Intra-row scanning happens when you set a limit on how many values to &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; per Scan#next (See Scan#setBatch(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)).
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It mentioned the problem of this jira that row-level consistent view is not guaranteed for intra-row scanning, so this is a known problem?&lt;/p&gt;</comment>
                            <comment id="15168785" author="anoop.hbase" created="Fri, 26 Feb 2016 10:25:12 +0000"  >&lt;p&gt;Yep. This is a known issue then..  The solution of having a client aware readPnt will solve even that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  That work has to consider comparability as well. old client -&amp;gt; new RS and reverse.&lt;/p&gt;</comment>
                            <comment id="15168829" author="cuijianwei" created="Fri, 26 Feb 2016 11:11:10 +0000"  >&lt;p&gt;After &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11544&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-11544&lt;/a&gt;, the maxScannerResultSize of ClientScanner will be 2MB default, this will make server return partial result more easily when size limit reached, and this issue will happen even when the user not set batch for scan.  &lt;/p&gt;</comment>
                            <comment id="15168832" author="cuijianwei" created="Fri, 26 Feb 2016 11:14:57 +0000"  >&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;p&gt;The solution of having a client aware readPnt will solve even that&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
{quota}
&lt;p&gt;It seems work IMO, I will try to find whether there is any discussion about this issue.&lt;/p&gt;</comment>
                            <comment id="15181663" author="cuijianwei" created="Sat, 5 Mar 2016 10:08:45 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The solution of having a client aware readPnt will solve even that&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It seems &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13099&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;HBASE-13099&lt;/a&gt; has proposed such solution: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13099?focusedCommentId=14337017&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14337017&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-13099?focusedCommentId=14337017&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14337017&lt;/a&gt;. However, there are cases the solution can&apos;t cover(if I am not wrong). For example:&lt;br/&gt;
1. the client holds the readPoint when the scanner is created on serverA and the client has read partial row data from serverA&lt;br/&gt;
2. move the region to another serverB before the whole row returned&lt;br/&gt;
3. before the client created a new scanner for the row with the readPoint on serverB: new mutations applied to the region, including deletes for the row, and a major compaction happens and completed.&lt;br/&gt;
The major compaction could delete the cells of the row because the new server can&apos;t get a proper smallestReadPoint for the compaction before all ongoing scan requests arrived. Then, the client can not read the remaining cells of the row after the compaction, and will break per-row atomicity for scan. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 26 Feb 2016 08:16:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            40 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2tsuf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>