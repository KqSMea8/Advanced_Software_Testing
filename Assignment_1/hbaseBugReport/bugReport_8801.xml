<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:58:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8801/HBASE-8801.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8801] Region level read/write degradation</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8801</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We would like to propose a tool for HBase administrators to disable read and/or write for single region temporarily.&lt;/p&gt;

&lt;p&gt;Our HBase table at weibo.com is accessed by many clients. We have experienced the following outage: due to bugs of user code, a small number of regions are reading at very high rate. Requests to other regions at the same RSs are affected. In such scenario, the admin would like to temporarily set the region to write-only (only forbids reads so writes can still being served).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12654649">HBASE-8801</key>
            <summary>Region level read/write degradation</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stepinto">Chao Shi</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Jun 2013 02:34:05 +0000</created>
                <updated>Tue, 9 Jul 2013 04:08:15 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13692696" author="stepinto" created="Tue, 25 Jun 2013 02:39:21 +0000"  >&lt;p&gt;Here is our proposed solutions (this is done by &lt;span class=&quot;error&quot;&gt;&amp;#91;~xingren23&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=boneylw&quot; class=&quot;user-hover&quot; rel=&quot;boneylw&quot;&gt;Wei Li&lt;/a&gt; and me). We are looking forward for advice from you experts.&lt;/p&gt;

&lt;h4&gt;&lt;a name=&quot;a%29clientsideblacklist&quot;&gt;&lt;/a&gt;a) client-side blacklist&lt;/h4&gt;
&lt;p&gt;A very naive solution is to introduce znodes: /hbase/unhealth/&amp;lt;region&amp;gt;. Once a region is set to read-only or write-only, we write something to the znode. Clients watch on /hbase/unhealth. Whenever get notified, the client start to reject read or write requests accordingly.&lt;/p&gt;

&lt;p&gt;This change should be simple as it does not touch anything at RS side. One shorthand is that it does not handle split easily: when a region splits, the child regions lose the blacklist settings.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=boneylw&quot; class=&quot;user-hover&quot; rel=&quot;boneylw&quot;&gt;Wei Li&lt;/a&gt; has made a prototype for approach a).&lt;/p&gt;

&lt;h4&gt;&lt;a name=&quot;b%29serversideblacklist&quot;&gt;&lt;/a&gt;b) server-side blacklist&lt;/h4&gt;
&lt;p&gt;Doing that at server-side is slight more complicated. We need to introduce a field in HRegionInfo in META table, indicating whether a region is allowed for read/write.&lt;/p&gt;

&lt;p&gt;1. A user calls RS to set a region&#8217;s read/write-only status.&lt;br/&gt;
2. The RS then updates the META table as well as its memory data structure. &lt;br/&gt;
3. From now on, new read or write requests to that region will be rejected with an exception (a subclass of NotServingRegionException). This could be done in HRegion#startRegionOperation, similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7006&quot; title=&quot;[MTTR] Improve Region Server Recovery Time - Distributed Log Replay&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7006&quot;&gt;&lt;del&gt;HBASE-7006&lt;/del&gt;&lt;/a&gt; does.&lt;br/&gt;
4. When the client receives NotServingRegionException, it rejects requests at client side. The current implementation talks to META table every retry. We need to cache the location for a short time (e.g. ~10s to 1min), preventing touching META table too frequently.&lt;/p&gt;

&lt;p&gt;On split, child regions inherit the blacklist settings.&lt;/p&gt;

&lt;p&gt;If we get timeout exception between 2 and 3, we don&#8217;t know what HRegionInfo in META will be. It is possible to get exception here but the mutation eventually get in. The risk is that RS think of the region is inconsistent with META table. We think it is okay because it is a tool and supposed to be executed manually. (Alternatively, we could abort RS just as split transaction does, but it is an over-kill).&lt;/p&gt;

&lt;p&gt;We have thought of using ZK rather than META table. We prefer META table as it is a central place for storing region states.&lt;/p&gt;</comment>
                            <comment id="13697596" author="jiangbinglover" created="Tue, 2 Jul 2013 08:02:21 +0000"  >&lt;p&gt; it is an interesting issue.I think the read/write degradation should contains:&lt;/p&gt;

&lt;p&gt;1.Based on table/region, it needs provide the interface to configure table, besides region alone.&lt;/p&gt;

&lt;p&gt;2.It is not enough to switch off/on region read/write, and whether to provide the read/write throughput level degradation or not.&lt;/p&gt;

&lt;p&gt;In my opinion,if set tag in .META., it will make more costs from maintenance, and not friendly with hbase-version upgrade. &lt;/p&gt;

&lt;p&gt;If this degradation is just designed to be an administrator&apos;s tool, maybe org.apache.hadoop.hbase.WritableRpcEngine is a very good choice.&lt;br/&gt;
When set &apos;org.apache.hadoop.ipc.HBaseServer.trace&apos; DEBUG, it will see:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2013-07-02 15:43:54,160 DEBUG org.apache.hadoop.ipc.HBaseServer.trace: Call #327005; Served: HRegionInterface#get queueTime=0 processingTime=2 contents=1 Get, 85 bytes}&lt;br/&gt;
2013-07-02 15:43:54,331 DEBUG org.apache.hadoop.ipc.HBaseServer.trace: Call #195052; Served: HRegionInterface#multi queueTime=0 processingTime=1 contents=5 Puts, 105 values [ min=0 max=416 avg=29 ], 105 KeyValues&lt;br/&gt;
2013-07-02 15:43:54,529 DEBUG org.apache.hadoop.ipc.HBaseServer.trace: Call #327009; Served: HRegionInterface#get queueTime=0 processingTime=341 contents=1 Get, 86 bytes&lt;br/&gt;
2013-07-02 15:43:54,532 DEBUG org.apache.hadoop.ipc.HBaseServer.trace: Call #327010; Served: HRegionInterface#get queueTime=0 processingTime=1 contents=1 Get, 85 bytes&lt;br/&gt;
2013-07-02 15:43:56,537 DEBUG org.apache.hadoop.ipc.HBaseServer.trace: Call #327094; Served: HRegionInterface#multi queueTime=0 processingTime=1 contents=4 Puts, 98 values [ min=0 max=297 avg=19 ], 98 KeyValues&lt;br/&gt;
2013-07-02 15:43:57,053 DEBUG org.apache.hadoop.ipc.HBaseServer.trace: Call #182856; Served: HRegionInterface#multi queueTime=0 processingTime=0 contents=3 Puts, 15 values [ min=1 max=16 avg=9 ], 15 KeyValues&lt;br/&gt;
processingTime=2 contents=6 Puts, 168 values [ min=0 max=119 avg=11 ], 168 KeyValues&lt;br/&gt;
2013-07-02 15:43:57,179 DEBUG org.apache.hadoop.ipc.HBaseServer.trace: Call #176328; Served: HRegionInterface#multi queueTime=0 processingTime=0 contents=8 Puts, 40 values [ min=1 max=16 avg=8 ], 40 KeyValues&lt;br/&gt;
2013-07-02 15:43:57,249 DEBUG org.apache.hadoop.ipc.HBaseServer.trace: Call #327109; Served: HRegionInterface#get queueTime=0 processingTime=1 contents=1 Get, 85 bytes&lt;br/&gt;
2013-07-02 15:43:57,341 DEBUG org.apache.hadoop.ipc.HBaseServer.trace: Call #509143; Served: HRegionInterface#multi queueTime=1 processingTime=0 contents=5 Puts, 140 values [ min=0 max=119 avg=11 ], 140 KeyValues&lt;br/&gt;
processingTime=0 contents=2 Puts, 10 values [ min=1 max=16 avg=9 ], 10 KeyValues&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;And try to add table/region filter in WritableRpcEngine, will function in an easier way, or maybe it can be used on interface(multi/put/get/openScanner/..) to control the region or table&apos;s throughput.&lt;br/&gt;
&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="13702873" author="stepinto" created="Tue, 9 Jul 2013 04:08:15 +0000"  >&lt;p&gt;Hi Bing,&lt;/p&gt;

&lt;p&gt;Thanks for sharing your thoughts on this. Throttling TPS/throughput is another interesting area to work on. Agree with you that META should be too heavy to save our little blacklist. Maybe ZK would be a nice choice. I&apos;m also working on a pluggable RpcScheduler (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8884&quot; title=&quot;Pluggable RpcScheduler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8884&quot;&gt;&lt;del&gt;HBASE-8884&lt;/del&gt;&lt;/a&gt;), hopefully we can simply implement a customized scheduler, which loads configruation from ZK and perform banning and throttling.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 2 Jul 2013 08:02:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>334926</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 23 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1lrv3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>335250</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>