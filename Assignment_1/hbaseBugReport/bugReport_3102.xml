<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:07:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3102/HBASE-3102.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3102] Enhance HBase rMetrics for Long-running Stats</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3102</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Example: a useful metric to observe track is compaction count + duration. Since compactions are long running and only happen infrequently, the avg/opcount stats are should be reset longer than the default polling period (5 sec). In addition to &apos;hbase.period&apos;, we should allow a different duration after which long-running metrics should expire. This would also fix our existing metrics problem where min/max stats are never reset until the process is restarted/upgraded.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12476974">HBASE-3102</key>
            <summary>Enhance HBase rMetrics for Long-running Stats</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nspiegelberg">Nicolas Spiegelberg</assignee>
                                    <reporter username="nspiegelberg">Nicolas Spiegelberg</reporter>
                        <labels>
                    </labels>
                <created>Mon, 11 Oct 2010 05:13:18 +0000</created>
                <updated>Fri, 20 Nov 2015 12:42:55 +0000</updated>
                            <resolved>Fri, 29 Oct 2010 04:49:15 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12919718" author="nspiegelberg" created="Mon, 11 Oct 2010 05:20:36 +0000"  >&lt;p&gt;A patch will soon be available for this.  I coined the long-running duration a &apos;marathon&apos;.  New compaction stats &amp;amp; all min/max stats expire after the marathon.  We plan to set it to 1hr, however the default is currently coded to never expire.  This will allow existing clients to upgrade without changing existing functionality.  However, a good case could be made for defaulting this to something like 1hr, so it&apos;s one less config knob the user has to explicitly set/find.  Thoughts?&lt;/p&gt;</comment>
                            <comment id="12919733" author="nspiegelberg" created="Mon, 11 Oct 2010 06:38:26 +0000"  >&lt;p&gt;minor fixes found while getting this ready for 0.90&lt;/p&gt;</comment>
                            <comment id="12920224" author="ghelmling" created="Tue, 12 Oct 2010 14:50:21 +0000"  >&lt;p&gt;For terminology, &quot;marathon&quot; seems a little opaque.  How about &quot;extendedperiod&quot; or something else that matches the current terminology?&lt;/p&gt;

&lt;p&gt;Also seems a little odd that this applies only to RegionServerMetrics.  Would be really nice if this could extend the current Hadoop metrics functionality and generically override refresh intervals per-metric.  So you could do something like: &quot;hbase.period.compaction=3600&quot; &lt;/p&gt;

&lt;p&gt;Just an idea, but is there some way to extend org.apache.hadoop.metrics.MetricsContext or org.apache.hadoop.metrics.Updater to provide these kinds of overrides?&lt;/p&gt;
</comment>
                            <comment id="12920308" author="nspiegelberg" created="Tue, 12 Oct 2010 19:03:31 +0000"  >&lt;p&gt;&apos;marathon&apos; could be named something different. It&apos;s just a longer-running period and I didn&apos;t want to use &apos;period2&apos;. The intent of this metric is to be abstract, although RS compactions &amp;amp; minMax are the only two uses currently. Good future candidates are HLogSplit and region rebalancing times on the Master. I don&apos;t think you want custom reset times per-metric. Every time you add a new metric, you&apos;d have to make sure the time is properly synchronized. &lt;/p&gt;

&lt;p&gt;I was not going to make the modification in Hadoop to ensure we can support 0.20-append through 0.22.  My original intent was to subclass from MetricsTimeVaryingRate to avoid the pushMetric hack, but the MetricContext implementation on 0.20-append used introspection and would require a complete reimplementation of the class. Mostly cut-paste, but I thought that was more hacky. &lt;/p&gt;

&lt;p&gt;Sent from my iPhone&lt;/p&gt;


</comment>
                            <comment id="12920602" author="ghelmling" created="Wed, 13 Oct 2010 15:20:31 +0000"  >&lt;p&gt;Actually I think extending (or reimplementing due to private access  &lt;br/&gt;
constraints) a MetricsTimeVaryingRate class may be the best approach  &lt;br/&gt;
given what the base hadoop classes allow. Then implement the interval  &lt;br/&gt;
checking in the class pushMetric() or intervalHeartbeat(). We already  &lt;br/&gt;
provide our own metric class in o.a.h.h.metrics.MetricsRate.&lt;/p&gt;

&lt;p&gt;When you mention introspection problems do you mean in  &lt;br/&gt;
MetricsMBeanBase?  We extend that as well in o.a.h.h.metrics to get  &lt;br/&gt;
around explicit type checking in the base class and allow  &lt;br/&gt;
MetricsRate.  Or is there another location where the hadoop classes do  &lt;br/&gt;
the same thing?&lt;/p&gt;



&lt;p&gt;On Oct 12, 2010, at 3:03 PM, &quot;Nicolas Spiegelberg (JIRA)&quot; &amp;lt;jira@apache.org &lt;/p&gt;
</comment>
                            <comment id="12922713" author="nspiegelberg" created="Tue, 19 Oct 2010 20:47:56 +0000"  >&lt;p&gt;The MetricsTimeVaryingRate introspection is primarily in MetricsDynamicMBeanBase.java, so that would need to be hand-rolled for a custom class.  All the class variables in MetricsTimeVaryingRate are private (at least, in 0.20), so there is no way to usefully subclass without nasty introspection.  If a completely custom class is necessary in the future, a refactoring jira can be created later &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I think most of these optimizations / refactoring would be good for a separate jira.  We don&apos;t need that level of granularity for polling periods, so I think it&apos;s best to wait until someone needs that requirement.&lt;/p&gt;</comment>
                            <comment id="12922787" author="ghelmling" created="Tue, 19 Oct 2010 23:32:30 +0000"  >&lt;p&gt;Sorry, I mis-spoke above (that will teach me to reply to JIRA emails from a phone).  We already extend MetricsDynamicMBeanBase as org.apache.hadoop.hbase.metrics.MetricsMBeanBase because we already ran into the overly restrictive introspection issue.  For a new metrics class, just add it to MetricsMBeanBase.getAttribute() and you&apos;re done.  Aside from implementing the metrics class itself, of course, which Hadoop 0.20 unfortunately makes difficult.&lt;/p&gt;

&lt;p&gt;For me the only issue is whether the configuration is obvious from an ops perspective.  It doesn&apos;t seem clear that the configuration would affect &quot;compaction&quot; here vs others, which was why I suggested the per-metric override.&lt;/p&gt;

&lt;p&gt;That said this is a pretty simple change.  Can we just change the config to something like &lt;/p&gt;

&lt;p&gt;&quot;hbase.regionserver.extendedrefresh&quot; or &lt;br/&gt;
&quot;hbase.regionserver.compactionrefresh&quot;&lt;/p&gt;

&lt;p&gt;to make it a little clearer?&lt;/p&gt;</comment>
                            <comment id="12923066" author="nspiegelberg" created="Wed, 20 Oct 2010 17:52:51 +0000"  >&lt;p&gt;Oh, I saw MetricsRate but only skimmed over the other class.  So that would definitely save some grief.  It&apos;s still a decent bit of copy-paste + testing, so I think I&apos;ll save that for later refactoring.  I&apos;m adding Master LogSplit metrics that will follow this same paradigm, so I&apos;ll update the patch when I have that added.&lt;/p&gt;

&lt;p&gt;How does &apos;hbase.extendedperiod&apos; sound?  That should be a little more explicit. &lt;/p&gt;</comment>
                            <comment id="12923071" author="ghelmling" created="Wed, 20 Oct 2010 18:11:08 +0000"  >&lt;p&gt;&apos;hbase.extendedperiod&apos; sounds good to me, especially since it&apos;ll apply to some merics in both RS and master.&lt;/p&gt;

&lt;p&gt;Maybe just add a comment line to the hadoop-metrics.properties file that we ship as well, with a short description.  Since we already include sample usage in there, that should be enough for description.&lt;/p&gt;</comment>
                            <comment id="12923235" author="hbasereviewboard" created="Wed, 20 Oct 2010 23:40:20 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1055/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Example: a useful metric to observe track is compaction count + duration. Since compactions are long running and only happen infrequently, the avg/opcount stats are should be reset longer than the default polling period (5 sec). In addition to &apos;hbase.period&apos;, we should allow a different duration after which long-running metrics should expire. This would also fix our existing metrics problem where min/max stats are never reset until the process is restarted/upgraded.&lt;/p&gt;

&lt;p&gt;This diff adds the capability for long-running metrics in addition to the infrastructure necessary to log compactions + log splits.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3102&quot; title=&quot;Enhance HBase rMetrics for Long-running Stats&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3102&quot;&gt;&lt;del&gt;HBASE-3102&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-3102&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-3102&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/conf/hadoop-metrics.properties 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetrics.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/metrics/PersistentMetricsTimeVaryingRate.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionServerMetrics.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java 1025790 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 1025790 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1055/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn clean install&lt;br/&gt;
cluster load test&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Note: this was primarily tested on 0.89.  Minimal testing on 0.90&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Nicolas&lt;/p&gt;

</comment>
                            <comment id="12923237" author="nspiegelberg" created="Wed, 20 Oct 2010 23:41:35 +0000"  >&lt;p&gt;Note : I put the 2nd patch in Review Board because this was starting to get a little unwieldy.  I added a class PersistentMetricsTimeVaryingRate to abstract out the persistence code.  I still went the derived class way because I got hung up trying to work with the registration in MetricsMBeanBase.&lt;/p&gt;</comment>
                            <comment id="12923316" author="hbasereviewboard" created="Thu, 21 Oct 2010 04:36:10 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1055/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-10-20 21:33:49.517352)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;added flush metrics + fixed TestHeapSize for HRegion&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Example: a useful metric to observe track is compaction count + duration. Since compactions are long running and only happen infrequently, the avg/opcount stats are should be reset longer than the default polling period (5 sec). In addition to &apos;hbase.period&apos;, we should allow a different duration after which long-running metrics should expire. This would also fix our existing metrics problem where min/max stats are never reset until the process is restarted/upgraded.&lt;/p&gt;

&lt;p&gt;This diff adds the capability for long-running metrics in addition to the infrastructure necessary to log compactions + log splits.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3102&quot; title=&quot;Enhance HBase rMetrics for Long-running Stats&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3102&quot;&gt;&lt;del&gt;HBASE-3102&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-3102&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-3102&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/conf/hadoop-metrics.properties 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetrics.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/metrics/PersistentMetricsTimeVaryingRate.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionServerMetrics.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java 1025790 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 1025790 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1055/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn clean install&lt;br/&gt;
cluster load test&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Note: this was primarily tested on 0.89.  Minimal testing on 0.90&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Nicolas&lt;/p&gt;

</comment>
                            <comment id="12923735" author="hbasereviewboard" created="Fri, 22 Oct 2010 01:52:05 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1055/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-10-21 18:50:11.325121)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;  1. changed *Length -&amp;gt; *Size&lt;br/&gt;
  2. Added Size metrics for Compactions + Flushes&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Note: One Hackathony thing is that Hadoop&apos;s MetricsTimeVaryingRate appends &apos;mintime&apos;, &apos;maxtime&apos;, etc to everything despite billing itself as a purpose-agnostic util.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Example: a useful metric to observe track is compaction count + duration. Since compactions are long running and only happen infrequently, the avg/opcount stats are should be reset longer than the default polling period (5 sec). In addition to &apos;hbase.period&apos;, we should allow a different duration after which long-running metrics should expire. This would also fix our existing metrics problem where min/max stats are never reset until the process is restarted/upgraded.&lt;/p&gt;

&lt;p&gt;This diff adds the capability for long-running metrics in addition to the infrastructure necessary to log compactions + log splits.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3102&quot; title=&quot;Enhance HBase rMetrics for Long-running Stats&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3102&quot;&gt;&lt;del&gt;HBASE-3102&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-3102&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-3102&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/conf/hadoop-metrics.properties 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetrics.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/metrics/PersistentMetricsTimeVaryingRate.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionServerMetrics.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java 1025790 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 1025790 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1055/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn clean install&lt;br/&gt;
cluster load test&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Note: this was primarily tested on 0.89.  Minimal testing on 0.90&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Nicolas&lt;/p&gt;

</comment>
                            <comment id="12923737" author="hbasereviewboard" created="Fri, 22 Oct 2010 02:00:05 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1055/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-10-21 18:59:12.941861)&lt;/p&gt;


&lt;p&gt;Review request for hbase.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added fix that was made to our internal 0.89 branch but forgot to port to 0.90 : initialize lastFlushInfo to null so the previous flushes metrics won&apos;t be used during a flush abort.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Example: a useful metric to observe track is compaction count + duration. Since compactions are long running and only happen infrequently, the avg/opcount stats are should be reset longer than the default polling period (5 sec). In addition to &apos;hbase.period&apos;, we should allow a different duration after which long-running metrics should expire. This would also fix our existing metrics problem where min/max stats are never reset until the process is restarted/upgraded.&lt;/p&gt;

&lt;p&gt;This diff adds the capability for long-running metrics in addition to the infrastructure necessary to log compactions + log splits.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3102&quot; title=&quot;Enhance HBase rMetrics for Long-running Stats&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3102&quot;&gt;&lt;del&gt;HBASE-3102&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-3102&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-3102&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/conf/hadoop-metrics.properties 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetrics.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/metrics/PersistentMetricsTimeVaryingRate.java PRE-CREATION &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/CompactSplitThread.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/Store.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionServerMetrics.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 1025790 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java 1025790 &lt;br/&gt;
  trunk/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java 1025790 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1055/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;mvn clean install&lt;br/&gt;
cluster load test&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;Note: this was primarily tested on 0.89.  Minimal testing on 0.90&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Nicolas&lt;/p&gt;

</comment>
                            <comment id="12924265" author="hbasereviewboard" created="Sat, 23 Oct 2010 23:41:05 +0000"  >&lt;p&gt;Message from: &quot;Nicolas&quot; &amp;lt;nspiegelberg@facebook.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1055/#review1638&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/#review1638&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;I know that the diffs were a little tempestuous as feature creep set in via internal reviews.  I think we&apos;ve settled on the metrics that we need (at least, for this jira).  any reservations/questions?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Nicolas&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12925144" author="hbasereviewboard" created="Tue, 26 Oct 2010 21:23:10 +0000"  >&lt;p&gt;Message from: &quot;Gary Helmling&quot; &amp;lt;ghelmling@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1055/#review1672&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/#review1672&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Looks pretty good.  These look like great metrics to add!&lt;/p&gt;

&lt;p&gt;Only issue I see is some odd naming that will happen for attributes used for the &quot;*Size&quot; metrics.  I&apos;d consider copying the rest of the implementation from MetricsTimeVaryingRate -&amp;gt; PersistentMetricsTimeVaryingRate and extending MetricsBase directly, to allow tweaking the naming.  Thoughts?&lt;/p&gt;

&lt;p&gt;A few trailing whitespace issues throughout.  Otherwise looks great!&lt;/p&gt;


&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetrics.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1055/#comment5547&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/#comment5547&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    I think using this type will result in the average split size for the period being reported as &quot;splitSize_avg_time&quot;?  The value should be right, the attribute name is just a little weird since it&apos;s size not time.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/master/metrics/MasterMetrics.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1055/#comment5546&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/#comment5546&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Drop trailing whitespace here and following sections &lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/metrics/PersistentMetricsTimeVaryingRate.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1055/#comment5548&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/#comment5548&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Given the above naming of &quot;splitSize_avg_time&quot;, maybe consider extending MetricsBase directly and essentially copy-n-paste forking MetricsTimeVaryingRate?&lt;/p&gt;

&lt;p&gt;    I know it sucks not being able to subclass cleanly here, but then you could at least expose the attributes as:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;name + &quot;_num_ops&quot;&lt;/li&gt;
	&lt;li&gt;name + &quot;_avg&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    and avoid the naming confusion.&lt;/p&gt;



&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionServerMetrics.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1055/#comment5549&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/#comment5549&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Same slightly weird naming for &quot;compactionSize&quot; and &quot;flushSize&quot; metrics will happen as for &quot;splitSize&quot; in MasterMetrics.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12925168" author="nspiegelberg" created="Tue, 26 Oct 2010 22:02:01 +0000"  >&lt;p&gt;@Gary: I started looking into the MetricsMBeanBase you suggested, but I was a little confused on how exactly to hook up a new class.  I thought that I would make less programming mistakes if I stuck with subclassing.  I agree the naming is kinda hacky, but of relatively trivial importance.  And really, the naming fix should be made on the Hadoop side of things.  Create some &apos;get/setSuffix()&apos; functionality to MetricsTimeVaryingRate and use reflection to setSuffix(&quot;&quot;).  The same argument could be made about data persistence, but persistence is not really optional functionality to maintain useable metrics.  &lt;/p&gt;

&lt;p&gt;I think the appropriate next step to completely resolve these loose ends is to file Hadoop jiras for all these issues.  Then, we&apos;ll migrate away from using the PersistentMetricsTimeVaryingRate over time.&lt;/p&gt;</comment>
                            <comment id="12925194" author="ghelmling" created="Tue, 26 Oct 2010 23:24:24 +0000"  >&lt;p&gt;@Nicolas: I agree that the naming issue isn&apos;t critical.  It&apos;s a bit wonky but not a big deal.  And understood that this is pushed down on us from the Hadoop metrics limitation.&lt;/p&gt;

&lt;p&gt;I&apos;m fine with closing this out and opening a new JIRA (low priority) to address the naming issue as time allows.  Hadoop metrics are already slated for an overhaul, hopefully in time for 0.22: &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6728&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HADOOP-6728&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope that those changes will make some of these issues a bit easier.  Will dig into the discussion there when I can.  Encourage you to do the same if you see anything.&lt;/p&gt;</comment>
                            <comment id="12925200" author="hbasereviewboard" created="Tue, 26 Oct 2010 23:44:16 +0000"  >&lt;p&gt;Message from: &quot;Gary Helmling&quot; &amp;lt;ghelmling@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1055/#review1676&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1055/#review1676&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Based on discussion in JIRA, I&apos;m fine addressing naming issue mentioned later.  FWIW, has my approval.  Ship it!&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12926171" author="stack" created="Fri, 29 Oct 2010 04:49:15 +0000"  >&lt;p&gt;Committing after Gary review.  Thanks for the patch Nicolas and thanks for the review Gary.&lt;/p&gt;</comment>
                            <comment id="15017381" author="lars_francke" created="Fri, 20 Nov 2015 12:42:55 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12479853">HBASE-3233</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12456831" name="HBASE-3102_90.patch" size="7888" author="nspiegelberg" created="Mon, 11 Oct 2010 06:38:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 12 Oct 2010 14:50:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32900</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hkqv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100623</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>