<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:44:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7280/HBASE-7280.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7280] TableNotFoundException thrown in peer cluster will incur endless retry for shipEdits, which in turn block following normal replication</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7280</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;in cluster replication, if the master cluster have 2 tables which have column-family declared with replication scope = 1, and add a peer cluster which has only 1 table with the same name as the master cluster, in the ReplicationSource (thread in master cluster) for this peer, edits (logs) for both tables will be shipped to the peer, the peer will fail applying the edits due to TableNotFoundException, and this exception will also be responsed to the original shipper (ReplicationSource in master cluster), and the shipper will fall into an endless retry for shipping the failed edits without proceeding to read the remained(newer) log files and to ship following edits(maybe the normal, expected edit for the registered table). the symptom looks like the TableNotFoundException incurs endless retry and blocking normal table replication&lt;/p&gt;</description>
                <environment></environment>
        <key id="12618832">HBASE-7280</key>
            <summary>TableNotFoundException thrown in peer cluster will incur endless retry for shipEdits, which in turn block following normal replication</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="fenghh">Honghua Feng</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Dec 2012 06:36:31 +0000</created>
                <updated>Mon, 17 Jun 2013 12:28:38 +0000</updated>
                            <resolved>Sun, 27 Jan 2013 08:01:37 +0000</resolved>
                                    <version>0.94.2</version>
                                                    <component>Replication</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                    <timeoriginalestimate seconds="1800">0.5h</timeoriginalestimate>
                            <timeestimate seconds="1800">0.5h</timeestimate>
                                        <comments>
                            <comment id="13510662" author="jdcryans" created="Wed, 5 Dec 2012 18:31:09 +0000"  >&lt;p&gt;This is &quot;by design&quot;, if a source cannot replicate one edit then replication is blocked. Apart from better alerting, what do you think HBase should do?&lt;/p&gt;</comment>
                            <comment id="13510993" author="jeason" created="Thu, 6 Dec 2012 00:57:55 +0000"  >&lt;p&gt;Yes, this is the expected behavior. In current implementation, backup cluster should create the tables by itself. &lt;/p&gt;</comment>
                            <comment id="13511021" author="fenghh" created="Thu, 6 Dec 2012 01:50:46 +0000"  >&lt;p&gt;I can understand the initiative of current design. A master cluster may have multiple tables with REPLICATION_SCOPE=1, but not all peer clusters want to replicate all these tables, current design prevents only replicating selective table(s). In our scenario, I expect peer cluster(sink) can omit the edits for which the table doesn&apos;t exist in peer cluster and only apply edits for which the table(s) exist in peer cluster(we really want to replicate). I make a minor change in ReplicationSink.java which just omits edits for non-existing table(s) in peer cluster and the behavior is what we want. Though this change doesn&apos;t reduce the needless network bandwidth it&apos;s at least doesn&apos;t block the normal replication.&lt;br/&gt;
Seems current replication&apos;s per-cluster granularity is a bit coarse-grained for many real-world scenarios. In my opinion adding such as table- or columnfamily- list configuration for peer when adding peer is more reasonable.&lt;/p&gt;</comment>
                            <comment id="13511053" author="jeason" created="Thu, 6 Dec 2012 03:23:31 +0000"  >&lt;p&gt;I agree with your suggesion of adding configuration list for each peer. So we need to maitain this list in Zookeeper for each peer. e.g. &lt;br/&gt;
  peer-1 -&amp;gt; table1&lt;span class=&quot;error&quot;&gt;&amp;#91;fam1, fam2&amp;#93;&lt;/span&gt;, table2&lt;span class=&quot;error&quot;&gt;&amp;#91;fam1&amp;#93;&lt;/span&gt;&lt;br/&gt;
  peer-2 -&amp;gt; table1&lt;span class=&quot;error&quot;&gt;&amp;#91;fam1&amp;#93;&lt;/span&gt;&lt;br/&gt;
So the related properties in table is use-less. right? Hope I understand you correctly.&lt;br/&gt;
But this will make things more difficult.&lt;/p&gt;

&lt;p&gt;Change in ReplicationSink seems simple, but master cluster will send some unneccessary edits to peers.&lt;/p&gt;</comment>
                            <comment id="13511076" author="fenghh" created="Thu, 6 Dec 2012 03:57:58 +0000"  >&lt;p&gt;yes, that&apos;s what I hope for the finer-grained cluster replication. for such design by default (without any table/cf configuration) peer receives all the edits from master cluster. Since in real-world scenario, we may have a master cluster, and a backup cluster which need to replicate the whole copy of the master cluster and it receives all edits, but at the same time maybe there are some experiment/down-stream clusters which just need a certain table or even some CF of a table from master cluster. by providing table/cf configurable peer we can enable such scenarios. &lt;/p&gt;

&lt;p&gt;ReplicationSource need to parse out the peer&apos;s table/cf configuration on creation, and filter the edits while reading the HLog files to determine which edits needs to be shipped to the corresponding peer. Looks like no more change in peer-side (ReplicationSink), right?&lt;/p&gt;

&lt;p&gt;Yes, my current change in ReplicationSink doesn&apos;t save the unnecessary edits to peers, but it&apos;s enough to unblocks us. A wiser treatment should be in ReplicationSource where we can filter out unnecessary edits before shipping out to peer cluster by checking if the table exists at peer cluster for each edit.&lt;/p&gt;</comment>
                            <comment id="13511590" author="jdcryans" created="Thu, 6 Dec 2012 18:27:04 +0000"  >&lt;p&gt;To give some background about replication, the reason that REPLICATION_SCOPE is an integer and not a boolean is that it is meant to be used to as a way to encode routing information but this has not been implemented yet.&lt;/p&gt;</comment>
                            <comment id="13527752" author="fenghh" created="Mon, 10 Dec 2012 07:41:19 +0000"  >&lt;p&gt;Thanks Jean-Daniel&lt;/p&gt;

&lt;p&gt;But even REPLICATION_SCOPE is implemented, I don&apos;t think it&apos;s as flexible as adding per-peer table/CF configuration. Let me know if I&apos;m wrong in understanding how REPLICATION_SCOPE is used as routing information: edits in master cluster will be shipped to all peer clusters whose peer_id-s are less_than_or_equal_to the REPLICATION_SCOPE. But what if a newly added peer want to replicate a table/CF with REPLICATION_SCOPE=A and another table/CF with REPLICATION=E, but doesn&apos;t want table/CF with REPLICATION_SCOPE=B/C/D (A&amp;gt;B&amp;gt;C&amp;gt;D&amp;gt;E here) ? Interpreting REPLICATION_SCOPE as bit-array and treating each bit as a peer_id has a similar problem. (At least we need to change REPLICATION_SCOPE if the original REPLICATION_SCOPE can&apos;t satisfy a later added peer&apos;s replication requirement)&lt;/p&gt;

&lt;p&gt;Why REPLICATION_SCOPE isn&apos;t a rescue here is because in many cases the master cluster doesn&apos;t know exactly which peer cluster will / want to replicate which table/CF from it when it creates tables/CFs. On the contrast, each peer cluster knows exactly which tables/CFs to replicate from the master cluster when it adds itself as peer to the master cluster. By introducing table/CF list configuration when adding peer, we don&apos;t bother with figuring out in advance which(how many) peers can replicate the table/CF when creating them in master cluster, and we don&apos;t need to change the REPLICATION_SCOPE later on. ReplicationSourceManager just listens on the peer ZK nodes and adds a new ReplicationSource for the new peer with configured table/CF list, reads/filters/ships edits of the configured tables/CFs to the corresponding peer.&lt;/p&gt;

&lt;p&gt;ReplicationSource also needs to listen on its peer ZK node for table/CF configuration change, which in turn influence which edits to ship to the peer from then on.&lt;/p&gt;

&lt;p&gt;Any opinion?&lt;/p&gt;</comment>
                            <comment id="13563758" author="lhofhansl" created="Sun, 27 Jan 2013 08:01:37 +0000"  >&lt;p&gt;Closing as &quot;Won&apos;t fix&quot;. This is working as designed.&lt;br/&gt;
We can of course discuss another approach that can also ship meta edits.&lt;/p&gt;</comment>
                            <comment id="13685495" author="fenghh" created="Mon, 17 Jun 2013 12:28:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeason&quot; class=&quot;user-hover&quot; rel=&quot;jeason&quot;&gt;Jieshan Bean&lt;/a&gt; You can refer to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8751&quot; title=&quot;Enable peer cluster to choose/change the ColumnFamilies/Tables it really want to replicate from a source cluster&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8751&quot;&gt;&lt;del&gt;HBASE-8751&lt;/del&gt;&lt;/a&gt; for per-peer cf/table granularity replication&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 5 Dec 2012 18:31:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>296086</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 26 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i145q7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>232391</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>