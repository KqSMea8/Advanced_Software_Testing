<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:19:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4487/HBASE-4487.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4487] The increment operation can release the rowlock before sync-ing the Hlog</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4487</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This allows for better throughput when there are hot rows.I have seen this change make a single row update improve from 400 increments/sec/server to 4000 increments/sec/server.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12524675">HBASE-4487</key>
            <summary>The increment operation can release the rowlock before sync-ing the Hlog</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dhruba">dhruba borthakur</assignee>
                                    <reporter username="dhruba">dhruba borthakur</reporter>
                        <labels>
                    </labels>
                <created>Mon, 26 Sep 2011 17:32:22 +0000</created>
                <updated>Fri, 12 Oct 2012 05:35:11 +0000</updated>
                            <resolved>Sun, 2 Oct 2011 21:42:22 +0000</resolved>
                                                    <fixVersion>0.94.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13117026" author="dhruba" created="Thu, 29 Sep 2011 06:09:09 +0000"  >&lt;p&gt;The increment operation releases the rowlock before doing the sync to the HLog. This improves performance of increments on hot rows.&lt;/p&gt;

&lt;p&gt;Introuced method HLog.appendNoSync() that returns a txid. The increment method then release the rowlock and invokes HLog.sync(txid). The HLog.sync(txid) returns only if all the transactions upto the one identified by that txid has been successfully sycned to HDFS. &lt;/p&gt;</comment>
                            <comment id="13117047" author="yuzhihong@gmail.com" created="Thu, 29 Sep 2011 06:35:05 +0000"  >&lt;p&gt;Nice feature.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.err.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Version Mismatch between client and server&quot;&lt;/span&gt; +
+                         &lt;span class=&quot;code-quote&quot;&gt;&quot;... command aborted.&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think LOG should be used.&lt;/p&gt;

&lt;p&gt;Incrementer thread should be set as Daemon thread.&lt;/p&gt;

&lt;p&gt;For HLog.unflushedEntries, since it is used to generate txid, I wonder if there is a better name for it.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// method is pretty heavyweight as far a locking is concerned. The&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should be &quot;as far as ...&quot;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// write out all accumulated Entries to hdfs.
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Entry e : pending) {
+        writer.append(e);
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think exception handling should be added here. What if writer.append() raises exception ? The remaining Entries would be lost ?&lt;/p&gt;</comment>
                            <comment id="13117059" author="dhruba" created="Thu, 29 Sep 2011 06:57:02 +0000"  >&lt;p&gt;Addressed Ted Yu&apos;s review comments. The code that does &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Entry e : pending) {
+        writer.append(e);
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;does not catch exceptions, instead throws an exception to the caller if any of the edits fail to make it to HDFS. In fact, Hbase regionserver exits if an HDFS write/sync fails, this is expected behaviour.&lt;/p&gt;</comment>
                            <comment id="13117074" author="yuzhihong@gmail.com" created="Thu, 29 Sep 2011 07:13:41 +0000"  >&lt;p&gt;Wow, this is the quickest turnaround for code review I have ever seen &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Normally you can wait for other people&apos;s comments before making the next patch.&lt;/p&gt;

&lt;p&gt;I still see System.err.println() call.&lt;br/&gt;
For my last comment, thanks for reminding me the current behavior. What I meant was that your change introduced some kind of buffering which would delay the bubbling of IOException.&lt;br/&gt;
I guess this is Okay. We should document this in release notes.&lt;/p&gt;

&lt;p&gt;Can I ask my favorite question ? Test suite.&lt;/p&gt;

&lt;p&gt;Also, using &lt;a href=&quot;https://reviews.apache.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/&lt;/a&gt; would be convenient.&lt;/p&gt;</comment>
                            <comment id="13117298" author="yuzhihong@gmail.com" created="Thu, 29 Sep 2011 13:37:11 +0000"  >&lt;p&gt;I got the following from test suite run:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testAppend(org.apache.hadoop.hbase.regionserver.wal.TestHLog)  Time elapsed: 0.037 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.lang.NullPointerException
        at org.apache.hadoop.hbase.regionserver.wal.TestHLog.testAppend(TestHLog.java:567)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please use my script on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4480&quot; title=&quot;Testing script to simplify local testing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4480&quot;&gt;&lt;del&gt;HBASE-4480&lt;/del&gt;&lt;/a&gt; to reproduce the above.&lt;br/&gt;
I can provide test output if needed.&lt;/p&gt;</comment>
                            <comment id="13117554" author="dhruba" created="Thu, 29 Sep 2011 19:23:33 +0000"  >&lt;p&gt;All unit tests pass now (expect TestDistributedLogSplitting, TestRollingRestart, TestHTablePool), but I am seeing the same test to fail on trunk, so these failures do not seem to be related to this patch.&lt;/p&gt;

&lt;p&gt;The one reference to System.err.println() is a printUsage() message that is needed only if u want to run the unit test as a standalone command line utility.&lt;/p&gt;

&lt;p&gt;There is a single test TestIncrement that creates a 100 threads and ensures that all the concurrent increments match the final expected result.&lt;/p&gt;

&lt;p&gt;There is a benchmark TestHLogBench that measures the performance of the appendNoSync call.&lt;/p&gt;</comment>
                            <comment id="13117556" author="jiraposter@reviews.apache.org" created="Thu, 29 Sep 2011 19:27:45 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2116/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase and Ted Yu.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;The increment operation releases the rowlock before doing the sync to the HLog. This improves performance of increments on hot rows. Introduced method HLog.appendNoSync() that returns a txid. The increment method then release the rowlock and invokes HLog.sync(txid). The HLog.sync(txid) returns only if all the transactions upto the one identified by that txid has been successfully sycned to HDFS.&lt;/p&gt;

&lt;p&gt;There is a single test TestIncrement that creates a 100 threads and ensures that all the concurrent increments match the final expected result. There is a benchmark TestHLogBench that measures the performance of the appendNoSync call.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4487&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  /src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1177401 &lt;br/&gt;
  /src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 1177401 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/TestIncrement.java PRE-CREATION &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogBench.java PRE-CREATION &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java 1177401 &lt;br/&gt;
  /src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java 1177401 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2116/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;All unit tests pass now (expect TestDistributedLogSplitting, TestRollingRestart, TestHTablePool), but I am seeing the same test to fail on trunk, so these failures do not seem to be related to this patch.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Dhruba&lt;/p&gt;
</comment>
                            <comment id="13117557" author="dhruba" created="Thu, 29 Sep 2011 19:27:58 +0000"  >&lt;p&gt;Review board: &lt;a href=&quot;https://reviews.apache.org/r/2116/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13117651" author="jiraposter@reviews.apache.org" created="Thu, 29 Sep 2011 21:59:45 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2116/#review2180&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/#review2180&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Patch v6 passed all unit tests.&lt;br/&gt;
Nice job Dhruba.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-09-29 19:27:36, Dhruba Borthakur wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2116/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-29 19:27:36)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Ted Yu.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The increment operation releases the rowlock before doing the sync to the HLog. This improves performance of increments on hot rows. Introduced method HLog.appendNoSync() that returns a txid. The increment method then release the rowlock and invokes HLog.sync(txid). The HLog.sync(txid) returns only if all the transactions upto the one identified by that txid has been successfully sycned to HDFS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;There is a single test TestIncrement that creates a 100 threads and ensures that all the concurrent increments match the final expected result. There is a benchmark TestHLogBench that measures the performance of the appendNoSync call.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4487&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestIncrement.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogBench.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2116/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;All unit tests pass now (expect TestDistributedLogSplitting, TestRollingRestart, TestHTablePool), but I am seeing the same test to fail on trunk, so these failures do not seem to be related to this patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Dhruba&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13117677" author="jiraposter@reviews.apache.org" created="Thu, 29 Sep 2011 22:31:45 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2116/#review2186&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/#review2186&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;Looks good. I like the bench marking tool.&lt;/p&gt;

&lt;p&gt;This is like a group commit in HLog.  We have a group committing going on inside in sync down in dfsclient.  Does this group commit not &apos;group&apos; enough.&lt;/p&gt;

&lt;p&gt;With this change, its no longer possible to sync each increment.  We ok w/ that?  We should at least release note this difference in increment behaviors and erring on the conservative side, I&apos;d mark this an &apos;incompatible change&apos; rather than an &apos;improvement&apos; just so its more likely folks will know of this changed increment behavior.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-09-29 19:27:36, Dhruba Borthakur wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2116/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-29 19:27:36)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Ted Yu.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The increment operation releases the rowlock before doing the sync to the HLog. This improves performance of increments on hot rows. Introduced method HLog.appendNoSync() that returns a txid. The increment method then release the rowlock and invokes HLog.sync(txid). The HLog.sync(txid) returns only if all the transactions upto the one identified by that txid has been successfully sycned to HDFS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;There is a single test TestIncrement that creates a 100 threads and ensures that all the concurrent increments match the final expected result. There is a benchmark TestHLogBench that measures the performance of the appendNoSync call.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4487&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestIncrement.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogBench.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2116/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;All unit tests pass now (expect TestDistributedLogSplitting, TestRollingRestart, TestHTablePool), but I am seeing the same test to fail on trunk, so these failures do not seem to be related to this patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Dhruba&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13117780" author="jiraposter@reviews.apache.org" created="Fri, 30 Sep 2011 00:29:45 +0000"  >

&lt;blockquote&gt;&lt;p&gt;On 2011-09-29 22:31:37, Michael Stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; Looks good. I like the bench marking tool.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This is like a group commit in HLog.  We have a group committing going on inside in sync down in dfsclient.  Does this group commit not &apos;group&apos; enough.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; With this change, its no longer possible to sync each increment.  We ok w/ that?  We should at least release note this difference in increment behaviors and erring on the conservative side, I&apos;d mark this an &apos;incompatible change&apos; rather than an &apos;improvement&apos; just so its more likely folks will know of this changed increment behavior.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;HRegion has:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Configuration conf;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can we pass new config parameter through conf which enables this new feature ?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ted&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2116/#review2186&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/#review2186&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;On 2011-09-29 19:27:36, Dhruba Borthakur wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2116/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-29 19:27:36)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Ted Yu.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The increment operation releases the rowlock before doing the sync to the HLog. This improves performance of increments on hot rows. Introduced method HLog.appendNoSync() that returns a txid. The increment method then release the rowlock and invokes HLog.sync(txid). The HLog.sync(txid) returns only if all the transactions upto the one identified by that txid has been successfully sycned to HDFS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;There is a single test TestIncrement that creates a 100 threads and ensures that all the concurrent increments match the final expected result. There is a benchmark TestHLogBench that measures the performance of the appendNoSync call.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4487&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestIncrement.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogBench.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2116/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;All unit tests pass now (expect TestDistributedLogSplitting, TestRollingRestart, TestHTablePool), but I am seeing the same test to fail on trunk, so these failures do not seem to be related to this patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Dhruba&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13117839" author="lhofhansl" created="Fri, 30 Sep 2011 02:42:14 +0000"  >&lt;p&gt;How does that relate to the logic in HLog.syncer, which explicitly syncs without holding the updateLock.&lt;br/&gt;
If I read the patch correctly it adds new sync calls that are performed with the updateLock held (locking out all updates while the sync operation is in progress).&lt;/p&gt;</comment>
                            <comment id="13117885" author="jiraposter@reviews.apache.org" created="Fri, 30 Sep 2011 05:02:45 +0000"  >
&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/2116/#review2206&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/#review2206&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;https://reviews.apache.org/r/2116/#comment5140&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/#comment5140&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Am not sure.  Just to clarify&lt;br/&gt;
    Is this check not needed here then?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ramkrishna&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;On 2011-09-29 19:27:36, Dhruba Borthakur wrote:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This is an automatically generated e-mail. To reply, visit:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/2116/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;(Updated 2011-09-29 19:27:36)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Review request for hbase and Ted Yu.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Summary&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;The increment operation releases the rowlock before doing the sync to the HLog. This improves performance of increments on hot rows. Introduced method HLog.appendNoSync() that returns a txid. The increment method then release the rowlock and invokes HLog.sync(txid). The HLog.sync(txid) returns only if all the transactions upto the one identified by that txid has been successfully sycned to HDFS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;There is a single test TestIncrement that creates a 100 threads and ensures that all the concurrent increments match the final expected result. There is a benchmark TestHLogBench that measures the performance of the appendNoSync call.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-4487&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diffs&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-----&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/TestIncrement.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogBench.java PRE-CREATION &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java 1177401 &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Diff: &lt;a href=&quot;https://reviews.apache.org/r/2116/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/2116/diff&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Testing&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;-------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;All unit tests pass now (expect TestDistributedLogSplitting, TestRollingRestart, TestHTablePool), but I am seeing the same test to fail on trunk, so these failures do not seem to be related to this patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Thanks,&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Dhruba&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13117889" author="dhruba" created="Fri, 30 Sep 2011 05:25:38 +0000"  >&lt;p&gt;&amp;gt; This is like a group commit in HLog. We have a group committing going on inside in sync down in dfsclient.&lt;/p&gt;

&lt;p&gt;The DFSClient write code path is pretty heavyweight (as it stands now), as shown in the code DFSClient.writeChunk(). It acquires a synchronized section, creates packets, stuffs crcs in it, acquires locks for the outgoing queue and queues the packet. And all this is done while holding the  HLog.updateLock, which means it blocks out any other writes to the HLog for this time. Instead, this patch queues the write-data completely inside the hbase code and the HLog.updateLock is released much much earlier.&lt;/p&gt;

&lt;p&gt;&amp;gt; If I read the patch correctly it adds new sync calls that are performed with the updateLock held&lt;/p&gt;

&lt;p&gt;There are no additional code paths that this patch introduced where a HLog.sync occurs within the HLog.updateLock. The only pre-existing place where a sync calls occurs within the HLog.updateLock is in HLog.cleanupCurrentWriter. This code path is invoked only during a logroll; and during a logroll all currently executing transactions are anyways quiesced, so I see no impact to concurrency in this code path. Please let me know if you disagree.&lt;/p&gt;

&lt;p&gt;&amp;gt; if (this.closed) : Is this check not needed here then?&lt;/p&gt;

&lt;p&gt;I think this code is still needed, this check was not introduced by this patch. Any reasons why you think it might not be needed?&lt;/p&gt;

&lt;p&gt;&amp;gt; Can we pass new config parameter through conf which enables this new feature ?&lt;/p&gt;

&lt;p&gt;I can surely make this configurable. But I am doubtful if anybody would care to run with this feature switched off (since it is a performance fix with potentially no downsides for any usecase). But if you feel strongly about it, I will make it configurable. However, most of the common code in HLog will not be inside this configurable parameter, only the change in HRegion.increment() can be switched on/off via this new config. Please let me know.&lt;/p&gt;


</comment>
                            <comment id="13118177" author="ram_krish" created="Fri, 30 Sep 2011 16:33:06 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updateLock) {
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.closed) {
-        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
-      }
+    syncer(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.unflushedEntries.get()); &lt;span class=&quot;code-comment&quot;&gt;// sync all pending items&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The patch shows that the above &apos;if&apos; check is been removed.  So it is needed.  &lt;/p&gt;</comment>
                            <comment id="13118183" author="dhruba" created="Fri, 30 Sep 2011 16:46:30 +0000"  >&lt;p&gt;Hi Ramakrishna, from my understanding, HLog.syncer() used to acquire the updateLock and then check this.closed, then used to &lt;b&gt;release&lt;/b&gt; the updateLock and proceed with the sync. So, essentially the check was providing no protection against the concurrent execution of the body of the code in syncer() vs some other thread marking this.closed to true.&lt;/p&gt;

&lt;p&gt;But I agree with you, that even prior to this patch, there is a rare possibility that a region server shutdown (via HLog.close) can race with a HLog.sync() that is in progress and cause exceptions. If I can recreate that race in a test case, I will submit it as part of another JIRA, does that sound reasonable?&lt;/p&gt;
</comment>
                            <comment id="13118186" author="dhruba" created="Fri, 30 Sep 2011 16:50:09 +0000"  >&lt;p&gt;&amp;gt; I&apos;d mark this an &apos;incompatible change&apos; rather than an &apos;improvement&apos; just so its more likely folks&lt;/p&gt;

&lt;p&gt;I could not find the place where to mark it as &quot;incompatible&quot;. Can you pl tell me where to mark it as such?&lt;/p&gt;</comment>
                            <comment id="13118189" author="apurtell" created="Fri, 30 Sep 2011 16:56:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;I could not find the place where to mark it as &quot;incompatible&quot;. Can you pl tell me where to mark it as such?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is a committer requirement Dhruba, don&apos;t worry about it, unless you disagree about the characterization. There is a checkbox to mark when resolving the issue and where the changelog line goes in CHANGES.txt is different.&lt;/p&gt;</comment>
                            <comment id="13118193" author="apurtell" created="Fri, 30 Sep 2011 17:02:41 +0000"  >&lt;p&gt;My comment lines up with Stack&apos;s on the code review, basically: This is a new code path for increments, and it means that one cannot guarantee that any individual increment has been committed to the WAL. For the increment case this walks back some representations we make about HBase for the sake of performance. I have mixed feelings about that. This should be configurable. Happy to agree the default is &quot;enabled&quot;.&lt;/p&gt;

&lt;p&gt;I believe there is another JIRA somewhere about making different config examples for users depending on their risk tolerance or interest in performance. Enabling this and deferred flushing etc. makes sense in a &quot;performance&quot; profile; conversely turned off in a &quot;strict&quot; profile.&lt;/p&gt;</comment>
                            <comment id="13118201" author="dhruba" created="Fri, 30 Sep 2011 17:11:35 +0000"  >&lt;p&gt;&amp;gt; one cannot guarantee that any individual increment has been committed to the WAL.&lt;/p&gt;

&lt;p&gt;Even prior to this patch, individual increments were batched-synced-by-hdfs, so there was no guarantee that each increment operation resulted in a sync.&lt;/p&gt;

&lt;p&gt;From my understanding, the contract for hbase clients is that an increment operation is deemed complete only after it has been sycned to the transaction log. This  contract is valid prior to this patch and this patch does not change this contract. The server does not return the RPC response back to the client until the increment operation has been sycned to the wal. &lt;/p&gt;

&lt;p&gt;Also, the increment operation does not follow the RWCC rules, thereby exposing uncommitted increment operations to readers. This patch does not change that behaviour either.&lt;/p&gt;

&lt;p&gt;is there something I am missing?&lt;/p&gt;</comment>
                            <comment id="13118203" author="tlipcon" created="Fri, 30 Sep 2011 17:14:28 +0000"  >&lt;p&gt;looking over the patch, I think I agree with Dhruba - dropping the row locks before syncing would only have effects on ACID if we were using row locks for visibility. But, we use RWCC/MVCC for visibility. So which guarantee are we losing?&lt;/p&gt;</comment>
                            <comment id="13118214" author="apurtell" created="Fri, 30 Sep 2011 17:25:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;Even prior to this patch, individual increments were batched-synced-by-hdfs, so there was no guarantee that each increment operation resulted in a sync.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Point taken.&lt;/p&gt;</comment>
                            <comment id="13118222" author="lhofhansl" created="Fri, 30 Sep 2011 17:37:22 +0000"  >&lt;p&gt;@ramkrishna and @dhruba. I agree with ramkrishna that the  if (this.closed)  is still needed.&lt;br/&gt;
True, there already was a race and that was the point of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4387&quot; title=&quot;Error while syncing: DFSOutputStream is closed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4387&quot;&gt;&lt;del&gt;HBASE-4387&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
We want to sync without the updateLock held, while at the same make sure we don&apos;t sync unless we need to (i.e. HLog not closed) and if we fail (which will be rare) without the lock we retry with the lock.&lt;/p&gt;</comment>
                            <comment id="13118236" author="ram_krish" created="Fri, 30 Sep 2011 17:53:33 +0000"  >&lt;p&gt;I feel that check will be helpful if at that point of calling syncer() the this.closed was true.&lt;br/&gt;
But there is a race condition there. &lt;/p&gt;</comment>
                            <comment id="13118258" author="yuzhihong@gmail.com" created="Fri, 30 Sep 2011 18:25:10 +0000"  >&lt;p&gt;Patch v7 adds check for closed in syncer(long txid).&lt;br/&gt;
Hopefully v7 can make Ramkrishna happy.&lt;/p&gt;</comment>
                            <comment id="13118260" author="ram_krish" created="Fri, 30 Sep 2011 18:30:03 +0000"  >&lt;p&gt;@Dhruba&lt;br/&gt;
I was happy with v6 itself. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;br/&gt;
Just a suggestion it was.&lt;br/&gt;
@Ted&lt;br/&gt;
&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13118291" author="dhruba" created="Fri, 30 Sep 2011 19:09:10 +0000"  >&lt;p&gt;v7 looks good to me, thanks for doing it Ted.&lt;/p&gt;</comment>
                            <comment id="13118308" author="stack" created="Fri, 30 Sep 2011 19:28:27 +0000"  >&lt;p&gt;+1 on v7 (IIUC, Ram and Lars close issue is addressed by the call to sync if edits and then the close).  From the back and forth above, my take away is this patch makes the grouping fatter but doesn&apos;t change current semantics &amp;#8211; we are as &apos;broke&apos; as we were before this patch.  I no longer think this an incompatible change.  We should release note the fatter grouping of increments on commit. &lt;/p&gt;</comment>
                            <comment id="13118311" author="streamy" created="Fri, 30 Sep 2011 19:31:40 +0000"  >&lt;p&gt;+1 as well.  And agree with your assessment above, Stack.  Potential fatter grouping of increments and significant improvement of per-row throughput.&lt;/p&gt;

&lt;p&gt;Looking forward to getting this working for Put/MultiPut!  Nice work, Dhruba.&lt;/p&gt;</comment>
                            <comment id="13118394" author="yuzhihong@gmail.com" created="Fri, 30 Sep 2011 20:23:55 +0000"  >&lt;p&gt;Integrated patch v7 to TRUNK.&lt;/p&gt;

&lt;p&gt;Thanks for the nice feature Dhruba.&lt;/p&gt;

&lt;p&gt;Thanks for the reviews from Jonathan, Stack, Lars, Todd, Andrew and Ramkrishna.&lt;/p&gt;</comment>
                            <comment id="13118630" author="hudson" created="Sat, 1 Oct 2011 02:03:18 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2274 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2274/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2274/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt;  The increment operation can release the rowlock before sync-ing&lt;br/&gt;
               the Hlog (dhruba borthakur)&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/TestIncrement.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogBench.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALActionsListener.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSourceManager.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13118960" author="lhofhansl" created="Sun, 2 Oct 2011 04:40:07 +0000"  >&lt;p&gt;Is this too risky for 0.92? I guess we have to draw the line somewhere, but this seems like a great performance enhancement (along with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4528&quot; title=&quot;The put operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4528&quot;&gt;&lt;del&gt;HBASE-4528&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13118967" author="dhruba" created="Sun, 2 Oct 2011 05:46:36 +0000"  >&lt;p&gt;Hi Lars, this is a performance fix, so it is unlikely to be a candidate for 0.92. How about we make frequent releases (say 0.94? coming out sooner rather than later) rather than porting these to existing release-candidates? &lt;/p&gt;</comment>
                            <comment id="13119080" author="yuzhihong@gmail.com" created="Sun, 2 Oct 2011 21:42:22 +0000"  >&lt;p&gt;Resolve for now.&lt;br/&gt;
Can backport to 0.92 in another JIRA.&lt;/p&gt;</comment>
                            <comment id="13256980" author="hudson" created="Wed, 18 Apr 2012 21:24:11 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #15 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/15/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/15/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5782&quot; title=&quot;Edits can be appended out of seqid order since HBASE-4487&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5782&quot;&gt;&lt;del&gt;HBASE-5782&lt;/del&gt;&lt;/a&gt; Edits can be appended out of seqid order since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; (Revision 1327672)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13256995" author="hudson" created="Wed, 18 Apr 2012 21:43:26 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2783 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2783/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2783/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5782&quot; title=&quot;Edits can be appended out of seqid order since HBASE-4487&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5782&quot;&gt;&lt;del&gt;HBASE-5782&lt;/del&gt;&lt;/a&gt; Edits can be appended out of seqid order since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; (Revision 1327673)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13257006" author="hudson" created="Wed, 18 Apr 2012 21:52:27 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #129 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/129/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/129/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5782&quot; title=&quot;Edits can be appended out of seqid order since HBASE-4487&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5782&quot;&gt;&lt;del&gt;HBASE-5782&lt;/del&gt;&lt;/a&gt; Edits can be appended out of seqid order since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; (Revision 1327672)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13257272" author="hudson" created="Thu, 19 Apr 2012 05:58:46 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-security #175 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-security/175/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-security/175/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5782&quot; title=&quot;Edits can be appended out of seqid order since HBASE-4487&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5782&quot;&gt;&lt;del&gt;HBASE-5782&lt;/del&gt;&lt;/a&gt; Edits can be appended out of seqid order since &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4487&quot; title=&quot;The increment operation can release the rowlock before sync-ing the Hlog&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4487&quot;&gt;&lt;del&gt;HBASE-4487&lt;/del&gt;&lt;/a&gt; (Revision 1327673)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
larsh : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13294282" author="shixing" created="Wed, 13 Jun 2012 08:56:51 +0000"  >&lt;p&gt;@&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; or  @&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dhruba&quot; class=&quot;user-hover&quot; rel=&quot;dhruba&quot;&gt;dhruba borthakur&lt;/a&gt;&lt;br/&gt;
I have a question about the code in the trunk:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; lid = getLock(lockid, row, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updatesLock.readLock().lock();
      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
          xxxx
      } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.updatesLock.readLock().unlock();
        releaseRowLock(lid);
      }
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (writeToWAL) {
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.log.sync(txid); &lt;span class=&quot;code-comment&quot;&gt;// sync the transaction log outside the rowlock
&lt;/span&gt;      }
} &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
      closeRegionOperation();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What will happen if&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.log.sync(txid);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;failed?&lt;/p&gt;

&lt;p&gt;As I know, the RS will tell client that this op failed, and the client will retry. So MemStore and hlog on HDFS are inconsistent. &lt;/p&gt;

&lt;p&gt;Am I right? Or the RS exits if an HDFS write/sync fails as Dhruba said?&lt;/p&gt;</comment>
                            <comment id="13294912" author="dhruba" created="Thu, 14 Jun 2012 09:01:09 +0000"  >&lt;p&gt;If the hlog sync failed, you can invoke&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

      &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the wal sync was unsuccessful, remove keys from memstore
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!walSyncSuccessful) {
        rollbackMemstore(batchOp, familyMaps, firstIndex, lastIndexExclusive);
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Similar code exists inside doMiniBatchPut&lt;/p&gt;</comment>
                            <comment id="13295432" author="shixing" created="Fri, 15 Jun 2012 02:41:22 +0000"  >&lt;p&gt;But now there is no code for hlog sync in Increment and Append&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12518559">HBASE-4192</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12497196" name="4487-v7.txt" size="38815" author="yuzhihong@gmail.com" created="Fri, 30 Sep 2011 18:25:10 +0000"/>
                            <attachment id="12496971" name="appendNoSync4.txt" size="38481" author="dhruba" created="Thu, 29 Sep 2011 06:09:09 +0000"/>
                            <attachment id="12496977" name="appendNoSync5.txt" size="38394" author="dhruba" created="Thu, 29 Sep 2011 06:57:02 +0000"/>
                            <attachment id="12497044" name="appendNoSync6.txt" size="38778" author="dhruba" created="Thu, 29 Sep 2011 19:23:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Sep 2011 06:35:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3204</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 27 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08qj3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>48898</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>The increment operation releases the rowlock before doing the sync to the HLog. This improves performance of increments on hot rows. There is a fundamental change to the group-commit behaviour: it batches transactions in HBase code before pushing it down to the wal.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>