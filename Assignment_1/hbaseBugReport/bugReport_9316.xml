<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:03:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9316/HBASE-9316.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9316] Use JoinedHeap between MUST_PASS_ALL filters to better leverage essential column family feature </title>
                <link>https://issues.apache.org/jira/browse/HBASE-9316</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently, all column families in a MUST_PASS_ALL filter list are loaded in advance of filtering. Instead, only the essential column family from the first filter should be loaded and then its heap joined with subsequent essential column family from the next filter in the list (probably up to some reasonable/configurable limit).&lt;/p&gt;

&lt;p&gt;One particular Phoenix use case for this is when a SQL query is trying to detect the absence of a KeyValue (though a &amp;lt;column&amp;gt; IS NULL clause). Our workaround for a Phoenix TABLE is to insert a known, empty key value with every row, or for a Phoenix VIEW (mapping to an existing HBase table) to project everything. With this feature, we could instead use a filter per column family and prevent the loading of the corresponding Store in many cases.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12665150">HBASE-9316</key>
            <summary>Use JoinedHeap between MUST_PASS_ALL filters to better leverage essential column family feature </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="giacomotaylor">James Taylor</reporter>
                        <labels>
                    </labels>
                <created>Fri, 23 Aug 2013 00:18:09 +0000</created>
                <updated>Fri, 23 Aug 2013 03:32:06 +0000</updated>
                                                                                <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13748143" author="yuzhihong@gmail.com" created="Fri, 23 Aug 2013 00:41:00 +0000"  >&lt;p&gt;+1 on this idea.&lt;/p&gt;</comment>
                            <comment id="13748175" author="lhofhansl" created="Fri, 23 Aug 2013 01:05:13 +0000"  >&lt;p&gt;I like this idea for performance reasons. But I do not understand how it would help to distinguish a null column from an absent column.&lt;/p&gt;</comment>
                            <comment id="13748192" author="giacomotaylor" created="Fri, 23 Aug 2013 01:41:58 +0000"  >&lt;p&gt;It doesn&apos;t help distinguish null columns, it just makes it more efficient. Maybe there&apos;s a existing, better way or another, different JIRA to file, but let me try to explain in a better way:&lt;/p&gt;

&lt;p&gt;Let&apos;s say you have a query like this:&lt;/p&gt;

&lt;p&gt;SELECT * FROM t WHERE c IS NULL&lt;/p&gt;

&lt;p&gt;If you have a regular Phoenix table, then we currently insert an empty key value for each row. So to satisfy this query, we can&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;project our empty KeyValue cf/cq plus the cf/cq for c.&lt;/li&gt;
	&lt;li&gt;in our filter, include the row if it doesn&apos;t have the c cf/cq. We know we&apos;ll get called, since we know that every row has this empty key value.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Another option in Phoenix is to create a VIEW (a read-only table that maps to an existing HBase table). In this case, we won&apos;t have our empty key value, so we have to project everything into the scan and do the same as above.&lt;/p&gt;

&lt;p&gt;So the problem stems from the lack of a way to be able to specify a filter that gets invoked when a KeyValue is &lt;b&gt;not&lt;/b&gt; present (or maybe there is a way?).&lt;/p&gt;

&lt;p&gt;Instead, if this JIRA is implemented, I was thinking that Phoenix could have a MUST_PASS_ALL filter list for each column family. If the first filter finds the c KeyValue, then it would filter the row. Otherwise, any of the subsequent filters would include the row. This way, you wouldn&apos;t necessarily load every store file or need to include an empty key value (though that still may be a more efficient way to go).&lt;/p&gt;

&lt;p&gt;Any ideas?&lt;/p&gt;</comment>
                            <comment id="13748250" author="lhofhansl" created="Fri, 23 Aug 2013 03:32:06 +0000"  >&lt;p&gt;No better ideas ATM, the dummy column is how I would have done it too, but that does not work if you do not control the table.&lt;br/&gt;
Hmm... This is at odds with other requirements. For example take a look at: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8930&quot; title=&quot;Filter evaluates KVs outside requested columns&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8930&quot;&gt;&lt;del&gt;HBASE-8930&lt;/del&gt;&lt;/a&gt; (which Vasu is working on). That issue would ensure that a Filter is never evaluated for something that is not projected.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 Aug 2013 00:41:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>345091</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 17 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1nid3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>345392</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Phoenix</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>