<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:33:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6014/HBASE-6014.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6014] Support for block-granularity bitmap indexes</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6014</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This came up in a discussion with Kannan today, so I promised to write something brief on JIRA &amp;#8211; this was suggested as a potential summer intern project. The idea is as follows:&lt;/p&gt;

&lt;p&gt;We have several customers who periodically run full table scan MR jobs against large HBase tables while applying fairly restrictive predicates. The predicates are often reasonably simple boolean expressions across known columns, and those columns often are enum-typed or otherwise have a fairly restricted range of values. For example, a real time process may mark rows as dirty, and a background MR job may scan for dirty rows in order to perform further processing like rebuilding inverted indexes.&lt;/p&gt;

&lt;p&gt;One way to speed up this type of query is to add bitmap indexes. In the context of HBase, I would envision this as a new type of metadata block included in the HFile which has a series of tuples: (qualifier, value range, compressed bitmap). A 1 bit in the bitmap indicates that the corresponding HFile block has at least one cell for which a column with the given qualifier falls within the given range. Queries which have an equality or comparison predicate against an indexed qualifier can then use the bitmap index to seek directly to those blocks which may contain relevant data.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12555955">HBASE-6014</key>
            <summary>Support for block-granularity bitmap indexes</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 May 2012 05:07:34 +0000</created>
                <updated>Mon, 7 Mar 2016 15:03:52 +0000</updated>
                                                                            <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>19</watches>
                                                                <comments>
                            <comment id="13287006" author="tlipcon" created="Thu, 31 May 2012 22:25:52 +0000"  >&lt;p&gt;I had some airplane time last week so I spent some of it thinking about how to go about this. It&apos;s not quite as straight-forward in HBase as it is in your standard RDBMS &amp;#8211; at least on the read path:&lt;/p&gt;

&lt;p&gt;This is because a given row may actually span multiple &quot;layers&quot; of the stack of storefiles. For example, for a query &quot;col_a = 1 AND col_b = 1&quot;, we may have the following files in a region:&lt;/p&gt;

&lt;p&gt;HFile 1: row1: col_a=&quot;1&quot;, no value for col_b&lt;br/&gt;
HFile 2: row1: col_a=&quot;2&quot;  col_b=&quot;1&quot;&lt;br/&gt;
(so the &quot;current&quot; version of the row has col_a=1 and col_b=1&lt;/p&gt;

&lt;p&gt;So, if we naively apply the bitmap index to each HFile in turn, we would end up excluding the block in both, and not see the correct result.&lt;/p&gt;

&lt;p&gt;Instead, I think we have to apply each predicate to each HFile in turn to come up with a set of ranges:&lt;/p&gt;

&lt;p&gt;Predicate col_a = 1, HFile 1: output key range for block containing row1&lt;br/&gt;
Predicate col_a = 1, HFile 2: no output&lt;/p&gt;

&lt;p&gt;Predicate col_b = 1, HFile 1: no output&lt;br/&gt;
Predicate col_b = 1, Hfile 2: output key range for block containing row1&lt;/p&gt;

&lt;p&gt;For each predicate, we take the union of the key ranges across HFiles. Then, we take the intersection across predicates, to come up with a total set of applicable key ranges. Then, we can push this key range list down into the scanner stack to provide skip-ahead hints in the filter.&lt;/p&gt;

&lt;p&gt;Any interns out there interested in this? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13287008" author="tlipcon" created="Thu, 31 May 2012 22:28:42 +0000"  >&lt;p&gt;Oh, I also did some hacking on the airplane: this WIP patch adds:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;a cuckoo hashtable implementation which uses byte array ranges as keys. I needed this to avoid having to do copies into byte[] for use with a normal TreeMap. It could have been a normal separate-chaining Hashtable, but I&apos;ve been wanting to implement a cuckoo hashmap for a while &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
	&lt;li&gt;imports JavaEWAH, a compressed bitmap index library&lt;/li&gt;
	&lt;li&gt;hooks into the HFile write path to write out bitmap index blocks with the hfile&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;obviously far from anything useful, but posting here in case anyone&apos;s interested in running with it&lt;/p&gt;</comment>
                            <comment id="13287139" author="zhihyu@ebaysf.com" created="Fri, 1 Jun 2012 04:12:38 +0000"  >&lt;p&gt;I didn&apos;t rebase Todd&apos;s patch for trunk cause the pom.xml structure changed.&lt;/p&gt;

&lt;p&gt;I moved TestByteArrayCuckooMap from src/main to src/test&lt;/p&gt;</comment>
                            <comment id="13289031" author="kannanm" created="Tue, 5 Jun 2012 00:51:03 +0000"  >&lt;p&gt;@Todd:&lt;/p&gt;

&lt;p&gt;Some early questions I have:&lt;/p&gt;

&lt;p&gt;1) A bit per block may not be very effective in many cases.. e.g., in the &quot;mark rows as dirty&quot; example in your description, suppose each HFileBlock has at least one dirty KV, then no blocks will get pruned. Similarly, many classic cases, like say state names, it is quite possible that every block contains almost every state. So the use of the feature will be limited for really narrow selectivity-- where we expect only a small % of the blocks in the file to contain the data of interest. Is this is the model/use case you are targeting? &lt;span class=&quot;error&quot;&gt;&amp;#91;Just want to make sure.&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2) Also, regarding &amp;lt;&amp;lt;&amp;lt; metadata block included in the HFile which has a series of tuples: (qualifier, value range, compressed bitmap).&amp;gt;&amp;gt;&amp;gt;. Could you clarify what the &quot;value range&quot; is about? For the &quot;enum&quot; type use, the tuples will be &quot;qualifier, enum for value, compressed bitmap&quot;, isn&apos;t it? and one such tuple per block for each enum, correct?  Is the &quot;value range&quot; for cases where say you want to query the column value by range (e.g., say temperature). And is the idea to slice the range of values for the column (say temperatures) into sub-ranges and have a bitmap per range, thus allowing users to do range queries by consulting the appropriate bit maps. &lt;/p&gt;


</comment>
                            <comment id="13289070" author="tlipcon" created="Tue, 5 Jun 2012 01:39:37 +0000"  >&lt;p&gt;Hey Kannan. You&apos;re exactly right on both cases. I&apos;m not certain if this is a huge win yet - it&apos;s probably only helpful on some very specific workloads. So, we&apos;re not prioritizing it here. But really curious to hear if you think there are some applications at FB that would benefit.&lt;/p&gt;</comment>
                            <comment id="13289619" author="kannanm" created="Tue, 5 Jun 2012 18:15:31 +0000"  >&lt;p&gt;Can&apos;t think of one that&apos;ll immediately benefit from this. So this will be low-pri for us too right now.&lt;/p&gt;</comment>
                            <comment id="15183104" author="lemire" created="Mon, 7 Mar 2016 15:03:52 +0000"  >&lt;p&gt;A good choice for this might be Roaring bitmaps (&lt;a href=&quot;http://roaringbitmap.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://roaringbitmap.org/&lt;/a&gt;). They are used by Apache Spark, Druid, Apache Kylin, Apache Lucene and so forth. No patent, Apache license.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12480471">HIVE-1803</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12595952">ACCUMULO-652</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12530510" name="6014-bitmap-hacking.txt" size="24168" author="zhihyu@ebaysf.com" created="Fri, 1 Jun 2012 04:12:38 +0000"/>
                            <attachment id="12530466" name="bitmap-hacking.txt" size="24168" author="tlipcon" created="Thu, 31 May 2012 22:28:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Jun 2012 04:12:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>256516</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            40 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0huef:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>102187</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>