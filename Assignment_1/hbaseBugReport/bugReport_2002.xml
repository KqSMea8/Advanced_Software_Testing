<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:58:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2002/HBASE-2002.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2002] Coprocessors: Client side support</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2002</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&quot;High-level call interface for clients. Unlike RPC, calls addressed to rows or ranges of rows. Coprocessor client library resolves to actual locations. Calls across multiple rows automatically split into multiple parallelized RPCs&quot;&lt;/p&gt;

&lt;p&gt;Generic multicall RPC facility which incorporates this and multiget/multiput/multidelete and parallel scanners.&lt;/p&gt;

&lt;p&gt;Group and batch RPCs by region server. Track and retry outstanding RPCs. Ride over region relocations. &lt;/p&gt;

&lt;p&gt;Support addressing by explicit region identifier or by row key or row key range. &lt;/p&gt;

&lt;p&gt;Include a facility for merging results client side. &lt;/p&gt;


</description>
                <environment></environment>
        <key id="12441379">HBASE-2002</key>
            <summary>Coprocessors: Client side support</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12441373">HBASE-2000</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ghelmling">Gary Helmling</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Sat, 21 Nov 2009 19:46:44 +0000</created>
                <updated>Fri, 20 Nov 2015 13:02:03 +0000</updated>
                            <resolved>Fri, 19 Nov 2010 21:17:52 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="12918234" author="hbasereviewboard" created="Tue, 5 Oct 2010 21:46:54 +0000"  >&lt;p&gt;Message from: &quot;Andrew Purtell&quot; &amp;lt;apurtell@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/816/#review1423&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/#review1423&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/Batch.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/#comment4956&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/#comment4956&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Could be setCause&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/Exec.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/#comment4957&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/#comment4957&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Agree, subpackage would be a pain but Javadoc can make it explicit for sure.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/Exec.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/#comment4955&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/#comment4955&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Only one instance of a given Coprocessor class can be bound to a region at a time.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/ExecResult.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/#comment4958&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/#comment4958&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This is pretty generic but currently has no other use, correct.&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/#comment4959&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/#comment4959&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    We should be getting rid of RowRange, right?&lt;/p&gt;



&lt;p&gt;src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/#comment4960&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/#comment4960&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    Good, likewise for exec() as below.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Andrew&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12918296" author="hbasereviewboard" created="Tue, 5 Oct 2010 22:51:30 +0000"  >&lt;p&gt;Message from: &quot;Gary Helmling&quot; &amp;lt;ghelmling@gmail.com&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Action.java, line 35&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13679#file13679line35&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13679#file13679line35&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Action is a new class so we are not breaking any pre-exisiting API here (Even so, erasure would reduce this API change to the old I believe anyways?).&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Action and MultiAction seem to just be internal implementation classes, so I thought this would be a safe refactoring.&lt;/p&gt;

&lt;p&gt;You mean for something like a rolling restart?  I believe the type erasure + ignoring return types on method lookup (getResult return type was parameterized so would be Object) should make this continue to work, but I may have introduced breakage elsewhere...&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Batch.java, line 37&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line37&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line37&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I think the fact that this class if of coprocessors needs to be highlighted better.  Batch is a super generic name yet this Batch is only for CPs.  A subpackage for these CP classes would be a pain would it?  Any other way of grouping these CP classes?  A prefix?  Just throwing it out there (I&apos;m sure you thought about it and had a reason for not going these routes).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The name is I guess a remnant of these changes starting out as overly-generic, then scaled back to coprocessors specific implementation.  I don&apos;t see any general applicability beyond that at the moment, so clearing up the naming would probably help.  Don&apos;t want to get too wordy though...  CoprocessorBatch?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Batch.java, line 50&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line50&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line50&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     cool&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     But, this method&apos;s name is &apos;returning&apos;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     So, it executes the &apos;method&apos; of &apos;protocol&apos; and returns the hosting  &apos;Call&apos; whose invocation has already run?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should it be &apos;execute&apos; or &apos;executeCall&apos; or &apos;invokeCall&apos;, etc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This just returns a Batch.Call instance, whose call() method will invoke the specified CoprocessorProtocol method.  So it returns a Batch.Call that returns the method result.  At this point the remote invocation has not yet happened.  That won&apos;t occur until down in HConnectionManager.HConnectionImplementation.processExecs().  Reached through passing the Batch.Call instance to HTable.exec(...).&lt;/p&gt;

&lt;p&gt;Yeah, &quot;returning()&quot; is a little generic too.  I could rename to forMethod() or callingMethod()?&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Batch.java, line 80&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line80&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line80&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Do you need the &apos;Batch.&apos; prefix here?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, it&apos;s extraneous and inconsistent with most HBase code.  I&apos;ll drop it.  I guess I was having a &quot;static method invocations should be referenced by class name&quot; moment...&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Batch.java, line 132&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line132&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line132&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should this method be &apos;public&apos; since its only called in here &amp;#8211; whats returned out of a &apos;returning&apos; is an exhausted call.. the receiving caller will not be doing a call invocation?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Could make this default access I suppose.  It&apos;s invoked down in HConnectionManager.HConnectionImplementation.processExecs(), which then will trigger the underlying CoprocessorProtocol method invocation and RPC call through ExecRPCInvoker.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Batch.java, line 140&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line140&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line140&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     I don&apos;t see Callback passed to call in the above.  I suppose how Callback works will become clear later.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, Callback is passed to the second version of HTable.exec() for specific handling of Batch.Call.call() return values.  The first version of HTable.exec() just uses a basic Callback that builds a Map with results.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Exec.java, line 65&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13681#file13681line65&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13681#file13681line65&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This is fair I suppose if only one coprocessor per region (Is that true)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct, only a single handler can be registered per CoprocessorProtocol subclass per region.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/ExecResult.java, line 33&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13682#file13682line33&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13682#file13682line33&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     This class is for CPs only?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, same as Exec above, could be renamed to CoprocessorExecResult for clarity.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HConnection.java, line 241&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13683#file13683line241&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13683#file13683line241&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Want to call this out as a CP method?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is actually a refactoring of the previous processBatch() method to accommodate Exec instances as well.&lt;/p&gt;

&lt;p&gt;The processExecs() method below doesn&apos;t make use of it yet, but I&apos;d like to incorporate that as an immediate next step for better RPC batching.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HConnection.java, line 252&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13683#file13683line252&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13683#file13683line252&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Cool&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     So this would be for a single cooprocessor implementation. &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You say above that we do an rpc per row but are the rpcs run serially or in parallell?  If parallel, thats sweet.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;They&apos;re parallelized using the existing HTable ExecutorService.&lt;/p&gt;

&lt;p&gt;But as an immediate next step, I would like to get them also batching into a single RPC call per CoprocessorProtocol method invocation, per region server.  The scaffolding is already there in the (Multi)Action parameterization and HConnection.processBatchCallback(), I just need to coordinate the per RS batching through ExecRPCInvoker.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java, line 1036&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13684#file13684line1036&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13684#file13684line1036&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Whats going on here?  You are rigging the createCallable so it can be used by CPs?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     (no objection, just asking)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct, this and the other (Multi)Action parameterization makes it possible to handle MultiAction&amp;lt;Exec&amp;gt; instances for full batching of the CP method calls per region server.  It&apos;s just the ExecRPCInvoker coordination that isn&apos;t quite there yet.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HConnection.java, line 255&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13683#file13683line255&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13683#file13683line255&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     So, here is a case where row designates a region, right?  Not a &apos;row&apos;.  If all these CP classes were in a sub-package, you could do a package-info on CP w/ examples, etc. &amp;#8211; copy/paste of the stuff you have above?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, in this case the row key is just used to lookup the region location, so we can ultimately do getRegionServerWithRetries().&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java, line 1087&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13684#file13684line1087&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13684#file13684line1087&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Should this be public?  Its not in HConnection, is it?  Or, rather, why is it not in HConnection?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Should be in HConnection as well.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java, line 1182&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13684#file13684line1182&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13684#file13684line1182&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Again, this is rigging MultiAction to support the CP parameterized types?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Correct, scaffolding for a better ExecRPCInvoker to be added.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java, line 353&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13686#file13686line353&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13686#file13686line353&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     oh, you don&apos;t have to repeat this doc up in HTable.  I&apos;d remove it and replace it &apos;@Override&apos;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah, ok, will remove the dupes.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/HTable.java, line 1340&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13685#file13685line1340&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13685#file13685line1340&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     What if I pass more than one key for a region?  Will CP run twice?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, if both keys fall into the same region, then it should just use the start key.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/RowRange.java, line 4&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13689#file13689line4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13689#file13689line4&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     You have to say something about &apos;inclusive&apos;?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll remove RowRange, since it was only used in a previous version of the HTable.exec() signatures.  It&apos;s nicely parallel to Row, but with only a single implementation (Scan), seems useless.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Batch.java, line 112&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line112&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13680#file13680line112&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     good&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     (but of interest, how does this differ from setCause?  Or, could you pass the ite to the IOE constructor?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, will just pass the ITE as the cause.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-04 23:09:49, stack wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; src/main/java/org/apache/hadoop/hbase/client/Exec.java, line 35&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/816/diff/9/?file=13681#file13681line35&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff/9/?file=13681#file13681line35&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     ... against a Coprocessor?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     Maybe add above?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, could rename CoprocessorExec for clarity.  It&apos;s fairly generic but there&apos;s no other usage.&lt;/p&gt;

&lt;p&gt;I guess in the naming here and elsewhere, I was envisioning Coprocessors as the sort of stored procedures of HBase.  A basic functionality &amp;#8211; execute this user code &amp;#8211; with coprocessors as the implementation.  So I took a general approach to naming the client interface.  It seemed to fit in with the basic operations: Get, Scan, Put, Delete, Exec.&lt;/p&gt;

&lt;p&gt;But if this is overly general and confusing, I have no problem renaming this and the other client bits with a &quot;Coprocessor&quot; prefix.&lt;/p&gt;

&lt;p&gt;Will definitely improve javadoc here as well.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Gary&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/816/#review1414&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/#review1414&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12919037" author="hbasereviewboard" created="Thu, 7 Oct 2010 19:37:05 +0000"  >&lt;p&gt;Message from: &quot;Gary Helmling&quot; &amp;lt;ghelmling@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/816/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;(Updated 2010-10-07 12:27:43.994582)&lt;/p&gt;


&lt;p&gt;Review request for hbase, stack, Andrew Purtell, and Jonathan Gray.&lt;/p&gt;


&lt;p&gt;Changes&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;Remove unnecessary List to array conversion and copy in refactored HConnectionMananger.HConnectionImplementation.processBatch() and fix retry-mishandling in refactored code.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;This is really two separate patches in one, though with some overlapping changes.  If necessary I can split them apart for separate review.  Please let me know if that would make review easier.&lt;/p&gt;

&lt;p&gt;Part 1:&lt;br/&gt;
==============&lt;br/&gt;
Port over of &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6422&quot; title=&quot;permit RPC protocols to be implemented by Avro&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6422&quot;&gt;&lt;del&gt;HADOOP-6422&lt;/del&gt;&lt;/a&gt; to the HBase RPC code.  The goal of this change is to allow alternate RPC client/server implementations to be enabled through a simple configuration change.  Ultimately I would like to use this to allow secure RPC to be enabled through configuration, while not blocking normal (current) RPC operation on non-secure Hadoop versions.&lt;/p&gt;

&lt;p&gt;This portion of the patch abstracts out two interfaces from the RPC code:&lt;/p&gt;

&lt;p&gt;RpcEngine: HBaseRPC uses this to obtain proxy instances for client calls and server instances for HMaster and HRegionServer&lt;br/&gt;
RpcServer: this allows differing RPC server implementations, breaking the dependency on HBaseServer&lt;/p&gt;

&lt;p&gt;The bulk of the current code from HBaseRPC is moved into WritableRpcEngine and is unchanged other than the interface requirements.  So the current call path remains the same, other than the HBaseRPC.getProtocolEngine() abstraction.&lt;/p&gt;


&lt;p&gt;Part 2:&lt;br/&gt;
===============&lt;br/&gt;
The remaining changes provide server-side hooks for registering new RPC protocols/handlers (per-region to support coprocessors), and client side hooks to support dynamic execution of the registered protocols.&lt;/p&gt;

&lt;p&gt;The new RPC protocol actions are constrained to org.apache.hadoop.hbase.ipc.CoprocessorProtocol implementations (which extends VersionedProtocol) to prevent arbitrary execution of methods against HMasterInterface, HRegionInterface, etc.&lt;/p&gt;

&lt;p&gt;For protocol handler registration, HRegionServer provides a new method:&lt;/p&gt;

&lt;p&gt;  public &amp;lt;T extends CoprocessorProtocol&amp;gt; boolean registerProtocol(&lt;br/&gt;
      byte[] region, Class&amp;lt;T&amp;gt; protocol, T handler)&lt;/p&gt;

&lt;p&gt;which builds a Map of region name to protocol instances for dispatching client calls.&lt;/p&gt;


&lt;p&gt;Client invocations are performed through HTable, which adds the following methods:&lt;/p&gt;


&lt;p&gt;  public &amp;lt;T extends CoprocessorProtocol&amp;gt; T proxy(Class&amp;lt;T&amp;gt; protocol, Row row)&lt;/p&gt;

&lt;p&gt;This directly returns a proxy instance to the CoprocessorProtocol implementation registered for the region serving row &quot;row&quot;.  Any method calls will be proxied to the region&apos;s server and invoked using the map of registered region name -&amp;gt; handler instances.&lt;/p&gt;

&lt;p&gt;Calls directed against multiple rows are a bit more complicated.  They are supported with the methods:&lt;/p&gt;

&lt;p&gt;  public &amp;lt;T extends CoprocessorProtocol, R&amp;gt; void exec(&lt;br/&gt;
      Class&amp;lt;T&amp;gt; protocol, List&amp;lt;? extends Row&amp;gt; rows,&lt;br/&gt;
      BatchCall&amp;lt;T,R&amp;gt; callable, BatchCallback&amp;lt;R&amp;gt; callback)&lt;/p&gt;

&lt;p&gt;  public &amp;lt;T extends CoprocessorProtocol, R&amp;gt; void exec(&lt;br/&gt;
      Class&amp;lt;T&amp;gt; protocol, RowRange range,&lt;br/&gt;
      BatchCall&amp;lt;T,R&amp;gt; callable, BatchCallback&amp;lt;R&amp;gt; callback)&lt;/p&gt;

&lt;p&gt;where BatchCall and BatchCallback are simple interfaces defining the methods to be called and a callback instance to be invoked for each result.&lt;/p&gt;

&lt;p&gt;For the sample CoprocessorProtocol interface:&lt;/p&gt;

&lt;p&gt;  interface PingProtocol extends CoprocessorProtocol &lt;/p&gt;
{
    public String ping();
    public String hello(String name);
  }

&lt;p&gt;a client invocation might look like:&lt;/p&gt;

&lt;p&gt;    final Map&amp;lt;byte[],R&amp;gt; results = new TreeMap&amp;lt;byte[],R&amp;gt;(...)&lt;br/&gt;
    List&amp;lt;Row&amp;gt; rows = ...&lt;br/&gt;
    table.exec(PingProtocol.class, rows,&lt;br/&gt;
        new HTable.BatchCall&amp;lt;PingProtocol,String&amp;gt;() {&lt;br/&gt;
          public String call(PingProtocol instance) &lt;/p&gt;
{
            return instance.ping();
          }
&lt;p&gt;        },&lt;br/&gt;
        new BatchCallback&amp;lt;R&amp;gt;(){&lt;br/&gt;
          public void update(byte[] region, byte[] row, R value) &lt;/p&gt;
{
            results.put(region, value);
          }
&lt;p&gt;        });&lt;/p&gt;

&lt;p&gt;The BatchCall.call() method will be invoked for each row in the passed in list, and the BatchCallback.update() method will be invoked for each return value.  However, currently the PingProtocol.ping() invocation will result in a separate RPC call per row, which is less that ideal.&lt;/p&gt;

&lt;p&gt;Support is in place to make use of the HRegionServer.multi() invocations for batched RPC (see the org.apache.hadoop.hbase.client.Exec class), but this does not mesh well with the current client-side interface.&lt;/p&gt;

&lt;p&gt;In addition to standard code review, I&apos;d appreciate any thoughts on the client interactions in particular, and whether they would meet some of the anticipated uses of coprocessors.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-2002&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-2002&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs (updated)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/client/Action.java 556ea81 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnection.java 65f7618 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java 4ad91c6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTable.java 0dbf263 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/HTableInterface.java 74593bf &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MultiAction.java c6ea838 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/MultiResponse.java 91bd04b &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/coprocessor/Batch.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/coprocessor/Exec.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/coprocessor/ExecResult.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/coprocessor/package-info.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/io/HbaseObjectWritable.java 83f623d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/ConnectionHeader.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/CoprocessorProtocol.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/ExecRPCInvoker.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseClient.java 2b5eeb6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseRPC.java e23a629 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HBaseServer.java e4c356d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/HRegionInterface.java ee5dd8f &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/Invocation.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/RpcEngine.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/ipc/WritableRpcEngine.java PRE-CREATION &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/master/HMaster.java 6b800e6 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 5f829e4 &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java 36c404d &lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/rest/client/RemoteHTable.java d4166cf &lt;br/&gt;
  src/main/resources/hbase-default.xml 5fafe65 &lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/regionserver/TestServerCustomProtocol.java PRE-CREATION &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/816/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Gary&lt;/p&gt;

</comment>
                            <comment id="12921644" author="stack" created="Sat, 16 Oct 2010 05:57:13 +0000"  >&lt;p&gt;Moving into 0.92 as per discussion up on dev list (Correct me if I&apos;m making wrong move here lads).&lt;/p&gt;</comment>
                            <comment id="12932296" author="hbasereviewboard" created="Tue, 16 Nov 2010 01:01:15 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/816/#review1933&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/816/#review1933&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;I did a quick pass over this. Most I&apos;d seen already over in the Minjgie patch. I&apos;m +1 getting it into TRUNK now early in the release cycle so probs. surface before release (You going to commit Andrew?).&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12933614" author="ghelmling" created="Thu, 18 Nov 2010 23:51:36 +0000"  >&lt;p&gt;Patch for commit from the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2321&quot; title=&quot;Support RPC interface changes at runtime&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2321&quot;&gt;&lt;del&gt;HBASE-2321&lt;/del&gt;&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2002&quot; title=&quot;Coprocessors: Client side support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2002&quot;&gt;&lt;del&gt;HBASE-2002&lt;/del&gt;&lt;/a&gt; patch on review board.&lt;/p&gt;

&lt;p&gt;The only changes from the review board patch are a merge up to the latest trunk for a clean diff, some whitespace and line wrapping fixes, and bumping the RPC version number to 28, since the connection header now contains the protocol interface name.&lt;/p&gt;</comment>
                            <comment id="12933616" author="ghelmling" created="Fri, 19 Nov 2010 00:02:31 +0000"  >&lt;p&gt;Updated version of review board patch now attached&lt;/p&gt;</comment>
                            <comment id="12933986" author="apurtell" created="Fri, 19 Nov 2010 21:17:52 +0000"  >&lt;p&gt;Committed to trunk. All tests pass locally.&lt;/p&gt;</comment>
                            <comment id="15017963" author="lars_francke" created="Fri, 20 Nov 2015 13:02:03 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12459043">HBASE-2321</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12439048">HBASE-1935</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12435843">HBASE-1845</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12380212">HBASE-74</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12538465">HBASE-5204</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12459886">HBASE-2357</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12459957" name="HBASE-2002_final.patch" size="151777" author="ghelmling" created="Thu, 18 Nov 2010 23:51:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 5 Oct 2010 21:46:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32358</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hg5z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99881</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Adds new HTable.coprocessorProxy() and HTable.coprocessorExec() calls, along with server-side hooks for registering user RPC protocol handlers.  Together these allow the invocation and execution of custom server-side code configured as coprocessors.&lt;br/&gt;
&lt;br/&gt;
Adds pluggable RPC engines as a first step towards alternate RPC implementations.  This adds a field for the RPC protocol interface on connection setup, so it&amp;#39;s not RPC wire compatible with previous versions.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>