<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:13:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3845/HBASE-3845.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3845] data loss because lastSeqWritten can miss memstore edits</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3845</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;(I don&apos;t have a test case to prove this yet but I have run it by Dhruba and Kannan internally and wanted to put this up for some feedback.)&lt;/p&gt;

&lt;p&gt;In this discussion let us assume that the region has only one column family. That way I can use region/memstore interchangeably.&lt;/p&gt;

&lt;p&gt;After a memstore flush it is possible for lastSeqWritten to have a log-sequence-id for a region that is not the earliest log-sequence-id for that region&apos;s memstore.&lt;/p&gt;

&lt;p&gt;HLog.append() does a putIfAbsent into lastSequenceWritten. This is to ensure that we only keep track  of the earliest log-sequence-number that is present in the memstore.&lt;/p&gt;

&lt;p&gt;Every time the memstore is flushed we remove the region&apos;s entry in lastSequenceWritten and wait for the next append to populate this entry again. This is where the problem happens.&lt;/p&gt;

&lt;p&gt;step 1:&lt;br/&gt;
flusher.prepare() snapshots the memstore under HRegion.updatesLock.writeLock().&lt;/p&gt;

&lt;p&gt;step 2 :&lt;br/&gt;
as soon as the updatesLock.writeLock() is released new entries will be added into the memstore.&lt;/p&gt;

&lt;p&gt;step 3 :&lt;br/&gt;
wal.completeCacheFlush() is called. This method removes the region&apos;s entry from lastSeqWritten.&lt;/p&gt;

&lt;p&gt;step 4:&lt;br/&gt;
the next append will create a new entry for the region in lastSeqWritten(). But this will be the log seq id of the current append. All the edits that were added in step 2 are missing.&lt;/p&gt;

&lt;p&gt;==&lt;/p&gt;

&lt;p&gt;as a temporary measure, instead of removing the region&apos;s entry in step 3 I will replace it with the log-seq-id of the region-flush-event.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12505973">HBASE-3845</key>
            <summary>data loss because lastSeqWritten can miss memstore edits</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="khemani">Prakash Khemani</reporter>
                        <labels>
                    </labels>
                <created>Mon, 2 May 2011 19:59:35 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:39 +0000</updated>
                            <resolved>Sat, 30 Jul 2011 11:37:36 +0000</resolved>
                                    <version>0.90.3</version>
                                    <fixVersion>0.92.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13027816" author="stack" created="Mon, 2 May 2011 20:09:44 +0000"  >&lt;p&gt;The scenario you describe seems plausible Prakash.  Let me up the priority of this issue.&lt;/p&gt;</comment>
                            <comment id="13027817" author="stack" created="Mon, 2 May 2011 20:10:54 +0000"  >&lt;p&gt;Filed against 0.90.3 and made critical.&lt;/p&gt;

&lt;p&gt;Any test to demo behavior P?&lt;/p&gt;</comment>
                            <comment id="13027823" author="dhruba" created="Mon, 2 May 2011 20:25:47 +0000"  >&lt;p&gt;Good finding Prakash!&lt;/p&gt;</comment>
                            <comment id="13068881" author="ram_krish" created="Thu, 21 Jul 2011 09:41:22 +0000"  >&lt;p&gt;I have submitted the patch for 0.90.4 version.&lt;br/&gt;
I ran all the testcases.  It was ok.&lt;br/&gt;
But automating this particular scenario through test case was not feasible.&lt;br/&gt;
Please review and provide your comments. &lt;br/&gt;
I can submit for trunk also. &lt;/p&gt;</comment>
                            <comment id="13069107" author="yuzhihong@gmail.com" created="Thu, 21 Jul 2011 18:08:16 +0000"  >&lt;p&gt;Patch doesn&apos;t apply cleanly on 0.90:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;patching file src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java
Hunk #1 FAILED at 40.
Hunk #2 succeeded at 131 (offset -1 lines).
Hunk #4 succeeded at 871 (offset -28 lines).
Hunk #6 succeeded at 1167 (offset -27 lines).
1 out of 7 hunks FAILED -- saving rejects to file src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java.rej
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13069380" author="ram_krish" created="Fri, 22 Jul 2011 04:55:17 +0000"  >&lt;p&gt;@Ted,&lt;br/&gt;
I think the file got changed after the patch was prepared.&lt;br/&gt;
Sorry for that.  I have resubmitted the patch once again.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="13069383" author="stack" created="Fri, 22 Jul 2011 04:59:21 +0000"  >&lt;p&gt;Ram:&lt;/p&gt;

&lt;p&gt;After setting wal.setFlushInProgress(true);, should we then go into a try/finally so we for sure clear this state if we get an exception before we get to the wal.setFlushInProgress(false);?&lt;/p&gt;

&lt;p&gt;We do this in two places:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.seqWrittenWhileFlush.putIfAbsent(hriKey, seqNum);
+      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.lastSeqWritten.putIfAbsent(hriKey, seqNum);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Maybe make a method?  Also, it seems a little odd that the first time we do the above, we pass a long to seqWrittenWhileFlush then to lastSeqWritten, we pass Bytes.toLong(seqNum) to lastSeqWritten but above, we pass the same value to both.  Is this right?&lt;/p&gt;

&lt;p&gt;Otherwise, patch looks great.&lt;/p&gt;</comment>
                            <comment id="13069385" author="dhruba" created="Fri, 22 Jul 2011 05:08:32 +0000"  >&lt;p&gt;Hi Prakash, would you like to review this one?&lt;/p&gt;</comment>
                            <comment id="13069405" author="ram_krish" created="Fri, 22 Jul 2011 06:14:56 +0000"  >&lt;p&gt;@Stack,&lt;br/&gt;
Thanks for the comments.&lt;br/&gt;
As wal.completeCacheFlush() may throw exception its better to reset  wal.setFlushInProgress(false); in try/finally block.  &lt;br/&gt;
I will also add a method for &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;      if (isFlushInProgress.get()) {
        this.seqWrittenWhileFlush.putIfAbsent(hriKey, seqNum);
      } else {
        this.lastSeqWritten.putIfAbsent(hriKey, seqNum);
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I will fix and resubmit it for both trunk and 0.90&lt;/p&gt;</comment>
                            <comment id="13069549" author="yuzhihong@gmail.com" created="Fri, 22 Jul 2011 13:49:57 +0000"  >&lt;p&gt;Can we fold wal.setFlushInProgress() into wal.startCacheFlush() and wal.abortCacheFlush() to make the code cleaner ?&lt;/p&gt;

&lt;p&gt;Actually we can check whether the current thread owns cacheFlushLock (see &lt;a href=&quot;http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/ReentrantLock.html#getOwner%28%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/ReentrantLock.html#getOwner%28%29&lt;/a&gt;) so that we don&apos;t need to introduce the new AtomicBoolean.&lt;/p&gt;</comment>
                            <comment id="13069657" author="ram_krish" created="Fri, 22 Jul 2011 18:10:01 +0000"  >&lt;p&gt;Thanks Ted for your comments.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Can we fold wal.setFlushInProgress() into wal.startCacheFlush() and wal.abortCacheFlush() to make the code cleaner ?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we may have to reset the atomic boolean even if exception happens like in completeCacheFlush or anywhere before it.&lt;br/&gt;
So only I did it with a try/finally block as per Stack&apos;s comments.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Actually we can check whether the current thread owns cacheFlushLock
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I checked the link. The ReentrantLock.getOwner() api is protected.  So to check if cacheFlushLock is acquired by the current thread we have to make cacheFlushLock as a class that extends ReentrantLock.&lt;br/&gt;
But if we can do this then we can avoid the Atomic Boolean.  &lt;br/&gt;
Correct me if am wrong.  &lt;br/&gt;
Please give your comments if any changes are needed.&lt;/p&gt;</comment>
                            <comment id="13069662" author="yuzhihong@gmail.com" created="Fri, 22 Jul 2011 18:16:30 +0000"  >&lt;p&gt;I should have looked further down the API list:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
http:&lt;span class=&quot;code-comment&quot;&gt;//download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/ReentrantLock.html#isHeldByCurrentThread%28%29&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13069669" author="ram_krish" created="Fri, 22 Jul 2011 18:34:29 +0000"  >&lt;p&gt;@Ted,&lt;br/&gt;
Thanks.. I too missed it.. Sorry.  Will prepare patch verify and resubmit it asap.&lt;/p&gt;</comment>
                            <comment id="13070374" author="ram_krish" created="Mon, 25 Jul 2011 08:52:07 +0000"  >&lt;p&gt;Ted,&lt;br/&gt;
I tried using the &apos;this.cacheFlushLock.isHeldByCurrentThread()&apos;.&lt;br/&gt;
The problem here is as HLog.append() may be called by other thread whereas the HRegion.internalFlushCache() is called by memstoreflusher thread.&lt;br/&gt;
So if we check this.cacheFlushLock.isHeldByCurrentThread() it returns false.&lt;/p&gt;

&lt;p&gt;So as per your suggestion i have inlined the isFlushInProgress into wal.startCacheFlush() and wal.abortCacheFlush() and still going with AtomicBoolean.&lt;br/&gt;
Is it fine Ted ? I am planning to upload the patch with these changes.&lt;/p&gt;</comment>
                            <comment id="13070470" author="yuzhihong@gmail.com" created="Mon, 25 Jul 2011 12:45:16 +0000"  >&lt;p&gt;That is fine. &lt;/p&gt;</comment>
                            <comment id="13070542" author="khemani" created="Mon, 25 Jul 2011 14:50:24 +0000"  >&lt;p&gt;In the patch that is deployed internally we have implemented a different approach. We remove the region&apos;s entry in startCacheFlush() and save it (as opposed to the current behavior of removing the entry in completeCacheFlush()). If the flush aborts then we restore the saved entry.&lt;/p&gt;

&lt;p&gt;The approach taken in the latest patch in this jira might also be OK. I have a few comments&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;           this.lastSeqWritten.remove(encodedRegionName);
+          Long seqWhileFlush = this.seqWrittenWhileFlush.get(encodedRegionName);
+          if (null != seqWhileFlush) {
+            this.lastSeqWritten.putIfAbsent(encodedRegionName, seqWhileFlush);
+            this.seqWrittenWhileFlush.remove(encodedRegionName);
+   
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;seqWrittenWhileFlush .get() and subsequent .remove() can be replaced by a single .remove()&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt; seqWhileFlush = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.seqWrittenWhileFlush.remove(encodedRegionName);
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; != seqWhileFlush) {
  lSW.put(encodedRegionName, seqWhileFlush);
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;
  lSW.remove(encodedRegionName);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;==&lt;br/&gt;
The bigger problem here is that completeCacheFlush() is not called with updatedLock acquired. Therefore there might still be correctness issues with the latest patch.&lt;/p&gt;

&lt;p&gt;==&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;   public void abortCacheFlush() {
+    this.isFlushInProgress.set(false);
     this.cacheFlushLock.unlock();
   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;shouldn&apos;t seqWrittenWhileFlush be cleaned up in abort cache?&lt;/p&gt;</comment>
                            <comment id="13070545" author="yuzhihong@gmail.com" created="Mon, 25 Jul 2011 14:59:26 +0000"  >&lt;p&gt;@Prakash:&lt;br/&gt;
Would you be able to share your patch ?&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; The bigger problem here is that completeCacheFlush() is not called with updatedLock acquired.&lt;br/&gt;
See line 1154 in HLog:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (updateLock) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13070548" author="ram_krish" created="Mon, 25 Jul 2011 15:10:20 +0000"  >&lt;p&gt;Thank you very much for the comments Prakash.&lt;br/&gt;
One query:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;The bigger problem here is that completeCacheFlush() is not called with updatedLock acquired. Therefore there might still be correctness issues with the latest patch.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As per the current code the completeCacheFlush() has acquired the updateLock. Only the sync() and finally block is out of the lock. So can you please elaborate on the correctness issue?&lt;br/&gt;
Other 2 comments i can implement.&lt;/p&gt;


</comment>
                            <comment id="13070614" author="khemani" created="Mon, 25 Jul 2011 17:02:09 +0000"  >&lt;p&gt;In the method internalFlushcache() I don&apos;t see updatesLock.writeLock() being held around the following piece of code.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (wal != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      wal.completeCacheFlush(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionInfo.getEncodedNameAsBytes(),
        regionInfo.getTableDesc().getName(), completeSequenceId,
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.getRegionInfo().isMetaRegion());
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;==&lt;/p&gt;

&lt;p&gt;I will upload the internal patch for reference ...&lt;/p&gt;


</comment>
                            <comment id="13070860" author="yuzhihong@gmail.com" created="Mon, 25 Jul 2011 23:42:43 +0000"  >&lt;p&gt;+1 on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3845&quot; title=&quot;data loss because lastSeqWritten can miss memstore edits&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3845&quot;&gt;&lt;del&gt;HBASE-3845&lt;/del&gt;&lt;/a&gt;_trunk_3.patch&lt;/p&gt;

&lt;p&gt;Ran unit tests and they passed.&lt;/p&gt;</comment>
                            <comment id="13071085" author="khemani" created="Tue, 26 Jul 2011 13:21:41 +0000"  >&lt;p&gt;patch deployed internally in facebook&lt;/p&gt;</comment>
                            <comment id="13071086" author="khemani" created="Tue, 26 Jul 2011 13:23:02 +0000"  >&lt;p&gt;patch deployed internally in facebook 0001-&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3845&quot; title=&quot;data loss because lastSeqWritten can miss memstore edits&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3845&quot;&gt;&lt;del&gt;HBASE-3845&lt;/del&gt;&lt;/a&gt;-data-loss-because-lastSeqWritten-can-miss.patch&lt;/p&gt;</comment>
                            <comment id="13071250" author="stack" created="Tue, 26 Jul 2011 18:12:15 +0000"  >&lt;p&gt;Nice explanatory comments.  This is radical &apos;+      Runtime.getRuntime().halt(1);&apos; but I can live with it (should never happen it seems).  getSnapshotName could use Bytes utility copying bytes but its fine as is.&lt;/p&gt;

&lt;p&gt;I&apos;m game for applying this version.  The patches do similar but this is a little more thorough with more explanation.  Sounds like it got a bit of airing on a real cluster too.&lt;/p&gt;
</comment>
                            <comment id="13071251" author="stack" created="Tue, 26 Jul 2011 18:15:23 +0000"  >&lt;p&gt;I applied patch to trunk.   Waiting till 0.90.4 clears the blocks before applying to 0.90.5.  Thanks for the patches Prakash and Ramakrishna.&lt;/p&gt;</comment>
                            <comment id="13071252" author="hudson" created="Tue, 26 Jul 2011 18:16:44 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2051 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2051/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2051/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3845&quot; title=&quot;data loss because lastSeqWritten can miss memstore edits&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3845&quot;&gt;&lt;del&gt;HBASE-3845&lt;/del&gt;&lt;/a&gt; data loss because lastSeqWritten can miss memstore edits&lt;/p&gt;

&lt;p&gt;stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLog.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestWALReplay.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13072082" author="ddvlad" created="Wed, 27 Jul 2011 22:50:11 +0000"  >&lt;p&gt;This patch seems to break TestResettingCounters for me.&lt;/p&gt;</comment>
                            <comment id="13072186" author="ram_krish" created="Thu, 28 Jul 2011 05:34:55 +0000"  >&lt;p&gt;The testcase TestResettingCounters is failing because as per the test case all the increments operation that we do is not written to wal.&lt;br/&gt;
But when we do a cache flush we call wal.startCacheFlush() where we check &lt;br/&gt;
&apos;Long seq = this.lastSeqWritten.remove(encodedRegionName)&apos;&lt;br/&gt;
 is null or not.&lt;br/&gt;
If null we throw error and halt the system.&lt;br/&gt;
In this testcase whereever we call region.increment&lt;br/&gt;
&apos;for (int i=0;i&amp;lt;5;i++) region.increment(odd, null, false);&apos;&lt;br/&gt;
we pass false for write to WAL.  Hence this problem occurs.  So we can correct this test case by passing true instead of false and i verified the same.  &lt;br/&gt;
But i think we shouldnot halt the system in this case. We can change this behaviour &lt;br/&gt;
Correct me if my analysis is wrong?&lt;/p&gt;</comment>
                            <comment id="13072189" author="khemani" created="Thu, 28 Jul 2011 05:41:09 +0000"  >&lt;p&gt;I agree that the test case is OK. We should change the HLog code to account for the case that lastSeqWritten might not be updated if WAL is not being written to.&lt;/p&gt;
</comment>
                            <comment id="13073139" author="anirudhtodi" created="Sat, 30 Jul 2011 05:40:58 +0000"  >&lt;p&gt;Hi folks - I have been working with Prakash&lt;/p&gt;

&lt;p&gt;The patch I have submitted should fix the issue with TestResettingCounters failing&lt;/p&gt;</comment>
                            <comment id="13073159" author="yuzhihong@gmail.com" created="Sat, 30 Jul 2011 11:37:24 +0000"  >&lt;p&gt;Applied to TRUNK.&lt;br/&gt;
TestResettingCounters passes now.&lt;/p&gt;

&lt;p&gt;Thanks for the patch Anirudh.&lt;/p&gt;</comment>
                            <comment id="13073168" author="hudson" created="Sat, 30 Jul 2011 13:15:56 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2064 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2064/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2064/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3845&quot; title=&quot;data loss because lastSeqWritten can miss memstore edits&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3845&quot;&gt;&lt;del&gt;HBASE-3845&lt;/del&gt;&lt;/a&gt; Addendum: relax lastSeqWritten check in case write to WAL is skipped&lt;/p&gt;

&lt;p&gt;tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13086728" author="sunnygao" created="Thu, 18 Aug 2011 01:28:45 +0000"  >&lt;p&gt;Hi,Patch has not yet apply to the branch ?  &lt;/p&gt;</comment>
                            <comment id="13086805" author="ram_krish" created="Thu, 18 Aug 2011 05:05:34 +0000"  >&lt;p&gt;Yes Gao.  The fix is not gone into 0.90.x version.  its available in trunk only.  &lt;/p&gt;</comment>
                            <comment id="13087528" author="stack" created="Fri, 19 Aug 2011 04:45:26 +0000"  >&lt;p&gt;@Gaojinchao Do you need this on branch?&lt;/p&gt;</comment>
                            <comment id="13087530" author="jeason" created="Fri, 19 Aug 2011 04:52:35 +0000"  >&lt;p&gt;Yes, we need this patch on branch&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13087534" author="stack" created="Fri, 19 Aug 2011 04:58:34 +0000"  >&lt;p&gt;Ok.  I wrote Gao to suggest he figure out what was finally applied to branch here, make a version of it for 0.90, test it, and apply the file here.  I&apos;ll commit it then.&lt;/p&gt;</comment>
                            <comment id="13090740" author="sunnygao" created="Thu, 25 Aug 2011 03:31:58 +0000"  >&lt;p&gt;@RAM&lt;br/&gt;
I have run all the unit tests, Please help to review it firstly. Thanks.&lt;/p&gt;


&lt;p&gt;I will construct the scene to verify today.&lt;/p&gt;</comment>
                            <comment id="13090756" author="ram_krish" created="Thu, 25 Aug 2011 04:22:59 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (wal != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) 
+        wal.abortCacheFlush(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.regionInfo.getEncodedNameAsBytes());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Pls uses braces as there is a second line.&lt;/p&gt;</comment>
                            <comment id="13090815" author="sunnygao" created="Thu, 25 Aug 2011 06:39:01 +0000"  >&lt;p&gt;According to review, modified the code.&lt;/p&gt;</comment>
                            <comment id="13090881" author="sunnygao" created="Thu, 25 Aug 2011 09:21:13 +0000"  >&lt;p&gt;I verified the patch. I think it is ok.&lt;br/&gt;
I created a table(one regoin) and put a lot of data. The log said that seq is continuous.&lt;br/&gt;
code :&lt;br/&gt;
      // updateLock not needed for removing snapshot&apos;s entry&lt;br/&gt;
      // Cleaning up of lastSeqWritten is in the finally clause because we&lt;br/&gt;
      // don&apos;t want to confuse getOldestOutstandingSeqNum()&lt;br/&gt;
      this.lastSeqWritten.remove(getSnapshotName(encodedRegionName));&lt;br/&gt;
      Long seq = this.lastSeqWritten.get(encodedRegionName);&lt;br/&gt;
      if (null != seq) &lt;/p&gt;
{
        LOG.error(&quot;gjc: end flush seq &quot; + logSeqId + &quot;current seq&quot; + seq);
      }
&lt;p&gt; else &lt;/p&gt;
{
        LOG.error(&quot;gjc: end flush seq &quot; + logSeqId);
      }
&lt;p&gt;logs:&lt;br/&gt;
2011-08-25 04:11:50,807 ERROR org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start flush seq495032&lt;br/&gt;
2011-08-25 04:11:50,808 ERROR org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start flush seq495032current seq499908&lt;br/&gt;
2011-08-25 04:12:11,073 ERROR org.apache.hadoop.hbase.regionserver.wal.HLog: gjc: end flush seq 499908current seq499909&lt;br/&gt;
2011-08-25 04:12:11,700 ERROR org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start flush seq499909&lt;br/&gt;
2011-08-25 04:12:11,700 ERROR org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start flush seq499909current seq505058&lt;br/&gt;
2011-08-25 04:12:58,532 ERROR org.apache.hadoop.hbase.regionserver.wal.HLog: gjc: end flush seq 505058current seq505059&lt;br/&gt;
2011-08-25 04:12:58,784 ERROR org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start flush seq505059&lt;/p&gt;

&lt;p&gt;The logs before the patch:&lt;br/&gt;
2011-08-25 05:35:20,691 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start seq679214&lt;br/&gt;
2011-08-25 05:35:20,940 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:end current seq679215&lt;br/&gt;
2011-08-25 05:36:19,024 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start seq682145&lt;br/&gt;
2011-08-25 05:36:26,928 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:end current seq685931&lt;br/&gt;
2011-08-25 05:36:27,571 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start seq686209&lt;br/&gt;
2011-08-25 05:36:36,311 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:end current seq690191&lt;br/&gt;
2011-08-25 05:36:36,768 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start seq690244&lt;br/&gt;
2011-08-25 05:36:44,709 WARN org.apache.hadoop.hbase.regionserver.wal.HLog:  gjc:end current seq693566&lt;br/&gt;
2011-08-25 05:36:45,940 WARN org.apache.hadoop.hbase.regionserver.wal.HLog: gjc:start seq694126&lt;/p&gt;</comment>
                            <comment id="13090882" author="sunnygao" created="Thu, 25 Aug 2011 09:22:24 +0000"  >&lt;p&gt;@Stack&lt;br/&gt;
Please review the patch and give some suggestion. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13187778" author="ram_krish" created="Tue, 17 Jan 2012 16:20:04 +0000"  >&lt;p&gt;@Stack&lt;br/&gt;
This issue has to be merged to 0.90.  We faced the same problem in our cluster.&lt;/p&gt;</comment>
                            <comment id="13187820" author="zhihyu@ebaysf.com" created="Tue, 17 Jan 2012 17:29:25 +0000"  >&lt;p&gt;@Jinchao:&lt;br/&gt;
I don&apos;t see getSnapshotName() in HLog.java under 0.90&lt;/p&gt;

&lt;p&gt;Can you attach a complete patch ?&lt;/p&gt;</comment>
                            <comment id="13187842" author="ram_krish" created="Tue, 17 Jan 2012 18:04:51 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
Tomorrow we will be uploading a patch. &lt;/p&gt;</comment>
                            <comment id="15017582" author="lars_francke" created="Fri, 20 Nov 2015 12:43:39 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12487825" name="0001-HBASE-3845-data-loss-because-lastSeqWritten-can-miss.patch" size="10799" author="khemani" created="Tue, 26 Jul 2011 13:21:41 +0000"/>
                            <attachment id="12488290" name="HBASE-3845-fix-TestResettingCounters-test.txt" size="657" author="anirudhtodi" created="Sat, 30 Jul 2011 05:40:58 +0000"/>
                            <attachment id="12487273" name="HBASE-3845_1.patch" size="4932" author="ram_krish" created="Thu, 21 Jul 2011 09:39:53 +0000"/>
                            <attachment id="12487392" name="HBASE-3845_2.patch" size="4839" author="ram_krish" created="Fri, 22 Jul 2011 04:54:33 +0000"/>
                            <attachment id="12487428" name="HBASE-3845_4.patch" size="9007" author="ram_krish" created="Fri, 22 Jul 2011 11:57:39 +0000"/>
                            <attachment id="12487700" name="HBASE-3845_5.patch" size="3811" author="ram_krish" created="Mon, 25 Jul 2011 13:19:56 +0000"/>
                            <attachment id="12487729" name="HBASE-3845_6.patch" size="3928" author="ram_krish" created="Mon, 25 Jul 2011 16:51:58 +0000"/>
                            <attachment id="12487429" name="HBASE-3845__trunk.patch" size="9144" author="ram_krish" created="Fri, 22 Jul 2011 11:58:00 +0000"/>
                            <attachment id="12491585" name="HBASE-3845_branch90V1.patch" size="9615" author="sunnygao" created="Thu, 25 Aug 2011 03:24:01 +0000"/>
                            <attachment id="12491599" name="HBASE-3845_branch90V2.patch" size="9625" author="sunnygao" created="Thu, 25 Aug 2011 06:39:01 +0000"/>
                            <attachment id="12487701" name="HBASE-3845_trunk_2.patch" size="3754" author="ram_krish" created="Mon, 25 Jul 2011 13:20:13 +0000"/>
                            <attachment id="12487730" name="HBASE-3845_trunk_3.patch" size="3871" author="ram_krish" created="Mon, 25 Jul 2011 16:52:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 2 May 2011 20:09:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27054</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ho5r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101176</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>