<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:16:03 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-16624/HBASE-16624.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-16624] MVCC DeSerialization bug in the HFileScannerImpl</title>
                <link>https://issues.apache.org/jira/browse/HBASE-16624</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;My colleague &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=naggarwal&quot; class=&quot;user-hover&quot; rel=&quot;naggarwal&quot;&gt;Nitin Aggarwal&lt;/a&gt; found a bug in the deserialization of mvcc from HFile, As a part of the optimization of deserialization of VLong, we read a int at once but we forgot to convert it to unsigned one. &lt;/p&gt;

&lt;p&gt;This would cause issues because once we cross the integer threshold in sequenceId and a compaction happens we would write MAX_MEMSTORE_TS in the trailer as 0 (because we will be reading negative values from the file that got flushed with sequenceId &amp;gt; Integer.MAX_VALUE). And once we have MAX_MEMSTORE_TS as 0, and there are sequenceId values present alongside with KeyValues the regionserver will now start failing to read the compacted file and thus corruption. &lt;/p&gt;

&lt;p&gt;Interestingly this would happen only on the tables that don&apos;t have  DataBlockEncoding enabled and unfortunately in our case that turned out to be META and a another small table.&lt;/p&gt;

&lt;p&gt;Fix is small (~20 chars) and attached&lt;/p&gt;</description>
                <environment></environment>
        <key id="13004504">HBASE-16624</key>
            <summary>MVCC DeSerialization bug in the HFileScannerImpl</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dvdreddy">deepankar</assignee>
                                    <reporter username="dvdreddy">deepankar</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Sep 2016 05:58:48 +0000</created>
                <updated>Thu, 15 Sep 2016 21:46:01 +0000</updated>
                            <resolved>Thu, 15 Sep 2016 18:06:03 +0000</resolved>
                                    <version>2.0.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>HFile</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="15486374" author="dvdreddy" created="Tue, 13 Sep 2016 06:08:09 +0000"  >&lt;p&gt;ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; , &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15486411" author="anoop.hbase" created="Tue, 13 Sep 2016 06:25:39 +0000"  >&lt;p&gt;A small UT to show the issue and fix pls?&lt;/p&gt;</comment>
                            <comment id="15486425" author="apache9" created="Tue, 13 Sep 2016 06:31:21 +0000"  >&lt;p&gt;+1 on the fix.&lt;/p&gt;

&lt;p&gt;Can we prepare a testcase for this? Signed/unsigned cast is always an error-prone part, we should make sure this won&apos;t happen again...&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15486459" author="dvdreddy" created="Tue, 13 Sep 2016 06:45:19 +0000"  >&lt;p&gt;Function is nested deep inside the HFileScannerImpl and it was hard to come up with a UT. But if you can pass the sequenceId above the Integer.MAX_VALUE you would immediately see the issue, to confirm the issue I have changed the function as below and tested it with values passed below&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * Actually &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; the mvcc read. Does no checks.
     * @param offsetFromPos
     */
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; _readMvccVersion(ByteBuff blockBuffer) {
        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; currMemstoreTS = 0;
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offsetFromPos = 0;
        &lt;span class=&quot;code-comment&quot;&gt;// This is Bytes#bytesToVint inlined so can save a few instructions in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; hot method; i.e.
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// previous &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; one-&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; vint, we&apos;d redo the vint call to find &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; size.
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// Also the method is kept small so can be inlined.
&lt;/span&gt;        &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; firstByte = blockBuffer.getByteAfterPosition(offsetFromPos);
        &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; len = WritableUtils.decodeVIntSize(firstByte);
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (len == 1) {
            currMemstoreTS = firstByte;
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; remaining = len -1;
            &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; i = 0;
            offsetFromPos++;
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (remaining &amp;gt;= Bytes.SIZEOF_INT) {
                &lt;span class=&quot;code-comment&quot;&gt;// The &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; read has to be converted to unsigned &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; so the &amp;amp; op
&lt;/span&gt;                i = (blockBuffer.getIntAfterPosition(offsetFromPos) &amp;amp; 0x00000000ffffffffL);
                remaining -= Bytes.SIZEOF_INT;
                offsetFromPos += Bytes.SIZEOF_INT;
            }
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (remaining &amp;gt;= Bytes.SIZEOF_SHORT) {
                &lt;span class=&quot;code-object&quot;&gt;short&lt;/span&gt; s = blockBuffer.getShortAfterPosition(offsetFromPos);
                i = i &amp;lt;&amp;lt; 16;
                i = i | (s &amp;amp; 0xFFFF);
                remaining -= Bytes.SIZEOF_SHORT;
                offsetFromPos += Bytes.SIZEOF_SHORT;
            }
            &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; idx = 0; idx &amp;lt; remaining; idx++) {
                &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; b = blockBuffer.getByteAfterPosition(offsetFromPos + idx);
                i = i &amp;lt;&amp;lt; 8;
                i = i | (b &amp;amp; 0xFF);
            }
            currMemstoreTS = (WritableUtils.isNegativeVInt(firstByte) ? ~i : i);
        }
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; currMemstoreTS;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And I passed the byteBuff I got from&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        ByteArrayDataOutput out = ByteStreams.newDataOutput();
        WritableUtils.writeVLong(out, 3085788160L);
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SingleByteBuff(ByteBuffer.wrap(out.toByteArray()))
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15486470" author="dvdreddy" created="Tue, 13 Sep 2016 06:50:36 +0000"  >&lt;p&gt;Inorder to test we may need to refactor and isolate this function and the reason I think this issue came up was because this is a very hot method and was optimized to make sure there  are unnecessary methdo redirections to make sure jit works and inlines it.&lt;/p&gt;</comment>
                            <comment id="15486672" author="anoop.hbase" created="Tue, 13 Sep 2016 08:39:59 +0000"  >&lt;p&gt;+1&lt;br/&gt;
 Lets get this in.  Will see how/whether we can make this as a util kind of method or so, so that we can UT this.  Lets get this in first. This is an imp fix.  Similar read of mvcc vlong is done in 1.x versions also I believe.  May be 1.2+ versions. cc &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15487595" author="stack" created="Tue, 13 Sep 2016 16:01:02 +0000"  >&lt;p&gt;I think this a good supposition but method looks too big to inline...&lt;/p&gt;</comment>
                            <comment id="15487602" author="stack" created="Tue, 13 Sep 2016 16:03:59 +0000"  >&lt;p&gt;+1 on the fix. Good find. Agree a test would be good but rather, we should have a bigger project that looks for all places where we do this sort of dodgy convertion ...I&apos;d think this sort of practice, from int to long, would flag in findbugs or other static analysis tools.&lt;/p&gt;</comment>
                            <comment id="15494106" author="stack" created="Thu, 15 Sep 2016 18:06:04 +0000"  >&lt;p&gt;Pushed to master. I don&apos;t see this in older branches. Am I blind? Thanks for the patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dvdreddy&quot; class=&quot;user-hover&quot; rel=&quot;dvdreddy&quot;&gt;deepankar&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15494608" author="hudson" created="Thu, 15 Sep 2016 21:46:01 +0000"  >&lt;p&gt;FAILURE: Integrated in Jenkins build HBase-Trunk_matrix #1608 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/1608/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/1608/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16624&quot; title=&quot;MVCC DeSerialization bug in the HFileScannerImpl&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16624&quot;&gt;&lt;del&gt;HBASE-16624&lt;/del&gt;&lt;/a&gt; Fix MVCC DeSerialization bug in the HFileScannerImpl (stack: rev 8c4b09dfbaf53fd770fe3963df6095fc690f2ef5)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(edit) hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderImpl.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12828182" name="HBASE-16624.patch" size="1329" author="dvdreddy" created="Tue, 13 Sep 2016 06:07:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Sep 2016 06:25:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            13 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33jy7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>