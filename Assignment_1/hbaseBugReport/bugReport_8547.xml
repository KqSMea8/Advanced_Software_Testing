<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:56:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-8547/HBASE-8547.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-8547] Fix java.lang.RuntimeException: Cached an already cached block</title>
                <link>https://issues.apache.org/jira/browse/HBASE-8547</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In one test, one of the region servers received the following on 0.94. &lt;/p&gt;

&lt;p&gt;Note HalfStoreFileReader in the stack trace. I think the root cause is that after the region is split, the mid point can be in the middle of the block (for store files that the mid point is not chosen from). Each half store file tries to load the half block and put it in the block cache. Since IdLock is instantiated per store file reader, they do not share the same IdLock instance, thus does not lock against each other effectively. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
2013-05-12 01:30:37,733 ERROR org.apache.hadoop.hbase.regionserver.HRegionServer:&#183;
java.lang.RuntimeException: Cached an already cached block
  at org.apache.hadoop.hbase.io.hfile.LruBlockCache.cacheBlock(LruBlockCache.java:279)
  at org.apache.hadoop.hbase.io.hfile.HFileReaderV2.readBlock(HFileReaderV2.java:353)
  at org.apache.hadoop.hbase.io.hfile.HFileBlockIndex$BlockIndexReader.loadDataBlockWithScanInfo(HFileBlockIndex.java:254)
  at org.apache.hadoop.hbase.io.hfile.HFileReaderV2$AbstractScannerV2.seekTo(HFileReaderV2.java:480)
  at org.apache.hadoop.hbase.io.hfile.HFileReaderV2$AbstractScannerV2.seekTo(HFileReaderV2.java:501)
  at org.apache.hadoop.hbase.io.HalfStoreFileReader$1.seekTo(HalfStoreFileReader.java:237)
  at org.apache.hadoop.hbase.regionserver.StoreFileScanner.seekAtOrAfter(StoreFileScanner.java:226)
  at org.apache.hadoop.hbase.regionserver.StoreFileScanner.seek(StoreFileScanner.java:145)
  at org.apache.hadoop.hbase.regionserver.StoreFileScanner.enforceSeek(StoreFileScanner.java:351)
  at org.apache.hadoop.hbase.regionserver.KeyValueHeap.pollRealKV(KeyValueHeap.java:354)
  at org.apache.hadoop.hbase.regionserver.KeyValueHeap.generalizedSeek(KeyValueHeap.java:312)
  at org.apache.hadoop.hbase.regionserver.KeyValueHeap.requestSeek(KeyValueHeap.java:277)
  at org.apache.hadoop.hbase.regionserver.StoreScanner.reseek(StoreScanner.java:543)
  at org.apache.hadoop.hbase.regionserver.StoreScanner.next(StoreScanner.java:411)
  at org.apache.hadoop.hbase.regionserver.KeyValueHeap.next(KeyValueHeap.java:143)
  at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.populateResult(HRegion.java:3829)
  at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.nextInternal(HRegion.java:3896)
  at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.nextRaw(HRegion.java:3778)
  at org.apache.hadoop.hbase.regionserver.HRegion$RegionScannerImpl.nextRaw(HRegion.java:3770)
  at org.apache.hadoop.hbase.regionserver.HRegionServer.next(HRegionServer.java:2643)
  at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
  at java.lang.reflect.Method.invoke(Method.java:597)
  at org.apache.hadoop.hbase.ipc.SecureRpcEngine$Server.call(SecureRpcEngine.java:308)
  at org.apache.hadoop.hbase.ipc.HBaseServer$Handler.run(HBaseServer.java:1426)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can see two possible fixes: &lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Allow this kind of rare cases in LruBlockCache by not throwing an exception.&lt;/li&gt;
	&lt;li&gt;Move the lock instances to upper layer (possibly in CacheConfig), and let half hfile readers share the same IdLock implementation.&lt;/li&gt;
&lt;/ol&gt;
</description>
                <environment></environment>
        <key id="12647567">HBASE-8547</key>
            <summary>Fix java.lang.RuntimeException: Cached an already cached block</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="enis">Enis Soztutar</assignee>
                                    <reporter username="enis">Enis Soztutar</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 May 2013 18:12:00 +0000</created>
                <updated>Mon, 13 Jan 2014 18:44:45 +0000</updated>
                            <resolved>Wed, 15 May 2013 07:30:40 +0000</resolved>
                                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.94.8</fixVersion>
                    <fixVersion>0.95.1</fixVersion>
                                    <component>io</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="13657316" author="enis" created="Tue, 14 May 2013 18:14:07 +0000"  >&lt;p&gt;I am more in favor of (2), but we may also want to change the exception to be IOException in 1, otherwise, this causes ipc handler to die, and scan returns partial results. Other suggestions welcome. &lt;/p&gt;</comment>
                            <comment id="13657317" author="jdcryans" created="Tue, 14 May 2013 18:15:03 +0000"  >&lt;p&gt;The triggering sounds strangely close to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6479&quot; title=&quot;HFileReaderV1 caching the same parent META block could cause server abort when splitting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6479&quot;&gt;&lt;del&gt;HBASE-6479&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13657326" author="yuzhihong@gmail.com" created="Tue, 14 May 2013 18:20:56 +0000"  >&lt;p&gt;Fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6479&quot; title=&quot;HFileReaderV1 caching the same parent META block could cause server abort when splitting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6479&quot;&gt;&lt;del&gt;HBASE-6479&lt;/del&gt;&lt;/a&gt; was not to cache bloom filter block.&lt;/p&gt;

&lt;p&gt;Is it possible to find out what type of cached block caused the above exception ?&lt;/p&gt;</comment>
                            <comment id="13657447" author="enis" created="Tue, 14 May 2013 20:15:54 +0000"  >&lt;p&gt;Thanks JD for the reference. I think you are right that they have the same symptoms. However, I really do not like the approach of not caching the blocks in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6479&quot; title=&quot;HFileReaderV1 caching the same parent META block could cause server abort when splitting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6479&quot;&gt;&lt;del&gt;HBASE-6479&lt;/del&gt;&lt;/a&gt;, which seems to me as a hack around this bug. Also, v2 hfiles use the same synchronizing logic for meta blocks, so we might have to fix that as well. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Is it possible to find out what type of cached block caused the above exception ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Unfortunately, the logs does not contain it.&lt;/p&gt;</comment>
                            <comment id="13657562" author="enis" created="Tue, 14 May 2013 21:53:19 +0000"  >&lt;p&gt;Attaching a patch against 0.94, which: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Moves idLocks at the CacheConfig layer. We do ref counting for open hfiles. CacheConfig is not the ideal place, but I could not find a better one. We cannot put it in BlockCache because even with BC disabled, we want to lock the block readers.&lt;/li&gt;
	&lt;li&gt;Changes reader v1 and v2 to obtain an IdLock instance.&lt;/li&gt;
	&lt;li&gt;Replaces synchronization on blockKey byte[]&apos;s with acquiring id locks.&lt;/li&gt;
	&lt;li&gt;LruBlockCache does not throw exception on double caching.&lt;br/&gt;
Trunk patch coming up. &lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13657612" author="enis" created="Tue, 14 May 2013 22:29:31 +0000"  >&lt;p&gt;Attaching trunk patch. &lt;/p&gt;</comment>
                            <comment id="13657639" author="jeffreyz" created="Tue, 14 May 2013 22:55:14 +0000"  >&lt;p&gt;Looks good to me with one minor comment other than +1 from me:&lt;/p&gt;

&lt;p&gt;Inside function releaseBlockIdLock. If a client call the function without have a lock before, it may throw NPE. I think it&apos;d be better to Assert here. &lt;/p&gt;
</comment>
                            <comment id="13657644" author="stack" created="Tue, 14 May 2013 23:03:33 +0000"  >&lt;p&gt;Should the CacheConfig class be renamed?  CacheManager or just Cache?  Or BlockCacheHost?&lt;/p&gt;
</comment>
                            <comment id="13657660" author="yuzhihong@gmail.com" created="Tue, 14 May 2013 23:10:36 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
     fsBlockReader.closeStreams();
+
+    cacheConf.releaseBlockIdLock(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.path.toString(), offsetLock);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think the cacheConf.releaseBlockIdLock() call should be placed in finally block.&lt;br/&gt;
For the test:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    ExecutorService exec = Executors.newFixedThreadPool(2);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can the number of threads in the thread pool be higher ?&lt;/p&gt;</comment>
                            <comment id="13657661" author="sershe" created="Tue, 14 May 2013 23:12:08 +0000"  >&lt;p&gt;Is it better to have one map with lock and corresponding refcount?&lt;br/&gt;
Do you foresee potential for locks being removed and readded rapidly?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; refCount = blockIdLocksRefCount.get(filename);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;assert refCount &amp;gt; 0;?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (metaBlockIndexReader.getRootBlockKey(block)) { &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do we no longer need to do this?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+      assert cb != null;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This assert duplicates the if and is thus useless.&lt;/p&gt;
</comment>
                            <comment id="13657683" author="enis" created="Tue, 14 May 2013 23:32:57 +0000"  >&lt;p&gt;Thanks for reviews. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Inside function releaseBlockIdLock. If a client call the function without have a lock before, it may throw NPE. I think it&apos;d be better to Assert here.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I added an assertion there. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Should the CacheConfig class be renamed? CacheManager or just Cache? Or BlockCacheHost?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;On second inspection, CacheConfig is not shared between stores and regions. I though CacheConfig is passed from RegionServer down to regions and stores, but it is not the case. They share the block cache by the static global reference. I have to move the IdLock&apos;s to the region server level. &lt;/p&gt;</comment>
                            <comment id="13657693" author="enis" created="Tue, 14 May 2013 23:40:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can the number of threads in the thread pool be higher ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Why? We want exactly 2 threads. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Is it better to have one map with lock and corresponding refcount?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I could not see any advantages, is there? &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Do you foresee potential for locks being removed and readded rapidly?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not rapidly, for each opening/closing of store file.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Do we no longer need to do this?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We are replacing that synchronization with the scyn on the IdLock.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This assert duplicates the if and is thus useless.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If just prints a log, we need assert to fail the tests. The assertion is wrong though, it should be cb == null. &lt;/p&gt;</comment>
                            <comment id="13657735" author="enis" created="Wed, 15 May 2013 00:20:58 +0000"  >&lt;p&gt;It turns out that we cannot piggyback on the CacheConfig, so I am making an IOContext class to pass the context from regionserver -&amp;gt; region -&amp;gt; store -&amp;gt; store file layers. &lt;/p&gt;

&lt;p&gt;In the mean time, attaching a &quot;reduced&quot; version of the patch for 0.94, which just removes exception in double caching in LruBlock cache. &lt;/p&gt;

&lt;p&gt;Depending on the trunk patch, we might want to go with the full-blown one or this reduced one. &lt;/p&gt;</comment>
                            <comment id="13657779" author="hadoopqa" created="Wed, 15 May 2013 01:07:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12583251/hbase-8547_v2-0.94-reduced.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12583251/hbase-8547_v2-0.94-reduced.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5692//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5692//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13657786" author="stack" created="Wed, 15 May 2013 01:21:47 +0000"  >&lt;p&gt;I forgot to say &apos;nice find&apos; Enis.&lt;/p&gt;

&lt;p&gt;Is it true to say that this can only happen when bottom half of a split is looking for block at offset 0 &amp;#8211; first block &amp;#8211; or top-half of a split is looking for last block in the file?  If so, can this fact be exploited doing block lookup or even catching the exception in these cases and letting it out for any other?&lt;/p&gt;

&lt;p&gt;Your unit test verifies half file has this issue?&lt;/p&gt;

&lt;p&gt;Good on you Enis.&lt;/p&gt;
</comment>
                            <comment id="13657818" author="enis" created="Wed, 15 May 2013 02:33:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is it true to say that this can only happen when bottom half of a split is looking for block at offset 0 &#8211; first block &#8211; or top-half of a split is looking for last block in the file?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is not just block offset 0. I think the trigger is that when we have a midkey for a half file which does not correspond to the block boundary, both the top and bottom regions will try to read the whole block. If this happens concurrently then we get an exception. In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6479&quot; title=&quot;HFileReaderV1 caching the same parent META block could cause server abort when splitting&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6479&quot;&gt;&lt;del&gt;HBASE-6479&lt;/del&gt;&lt;/a&gt;, reports a similar case, but in that they only encountered this for meta blocks, which are read by both half store files. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Your unit test verifies half file has this issue?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, I can reproduce this in the test environment, but it does not mimic the requests coming from upper layers. &lt;/p&gt;

&lt;p&gt;After some offline discussion, I think it makes sense to split this issue into two, and do just the changes in v2-reduced patch. The reasoning is that the changes are proving to be quite large with the refactoring, and we have to spend some time to think how are we going to handle singleton LruBlockCache, CacheConfig, etc. &lt;/p&gt;
</comment>
                            <comment id="13657827" author="enis" created="Wed, 15 May 2013 02:48:39 +0000"  >&lt;p&gt;Here is a trunk patch, which only fixes the exception in the block cache as per above. &lt;/p&gt;

&lt;p&gt;My proposal is to go with these v2 patches for trunk, 0.95 and 0.94, and do a follow up with the more intrusive approach (passing blockcache and lock containers down from region servers to store file readers). Suggestions welcome. &lt;/p&gt;</comment>
                            <comment id="13657869" author="stack" created="Wed, 15 May 2013 03:48:50 +0000"  >&lt;p&gt;+1 on the approach and on the patch.  Would suggest on commit that you add some more to the message:&lt;/p&gt;

&lt;p&gt;+      String msg = &quot;Cached an already cached block: &quot; + cacheKey + &quot; cb:&quot; + cb.getCacheKey();&lt;/p&gt;

&lt;p&gt;... something like &quot;... harmless, just means we did an extra seek that we&apos;ll avoid via a subsequent fix...&quot;  ... something to take the edge off the WARN.&lt;/p&gt;

&lt;p&gt;Good one Enis.&lt;/p&gt;</comment>
                            <comment id="13657880" author="hadoopqa" created="Wed, 15 May 2013 03:56:48 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12583265/hbase-8547_v2-trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12583265/hbase-8547_v2-trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5694//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13657910" author="lhofhansl" created="Wed, 15 May 2013 04:58:39 +0000"  >&lt;p&gt;The reduced patches look good to me. +1&lt;/p&gt;</comment>
                            <comment id="13658073" author="apurtell" created="Wed, 15 May 2013 05:25:11 +0000"  >&lt;p&gt;+1 on the reduced patch.&lt;/p&gt;

&lt;p&gt;The more intrusive followup suggestions sound good too. I&apos;ve also had occasion to contemplate the limitations of CacheConfig and thought about something like the &quot;IOContext&quot; mentioned above. Look for &quot;Encryption.Context&quot; in the patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7544&quot; title=&quot;Transparent table/CF encryption&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7544&quot;&gt;&lt;del&gt;HBASE-7544&lt;/del&gt;&lt;/a&gt;. An IO context passed from regionserver -&amp;gt; region -&amp;gt; store -&amp;gt; store file layers could also pick up additional cases where we need to pass state between the layers but may not want to change a bunch of method signatures in the process.&lt;/p&gt;</comment>
                            <comment id="13658142" author="enis" created="Wed, 15 May 2013 07:30:40 +0000"  >&lt;p&gt;Thanks for the reviews. I&apos;ve committed this with Stack&apos;s suggestion to trunk, 0.95 and 0.94. Will create a follow up issue. &lt;/p&gt;</comment>
                            <comment id="13658202" author="hudson" created="Wed, 15 May 2013 09:48:47 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #983 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/983/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/983/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt; Fix java.lang.RuntimeException: Cached an already cached block (Revision 1482704)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestIdLock.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13658312" author="hudson" created="Wed, 15 May 2013 12:41:02 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #195 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/195/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/195/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum to add better log) (Revision 1482706)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt; Fix java.lang.RuntimeException: Cached an already cached block (Revision 1482698)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestIdLock.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13658352" author="hudson" created="Wed, 15 May 2013 13:23:51 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4120 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4120/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4120/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum to add better log) (Revision 1482705)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt; Fix java.lang.RuntimeException: Cached an already cached block (Revision 1482697)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestIdLock.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13658384" author="hudson" created="Wed, 15 May 2013 14:09:49 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #100 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/100/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/100/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum to add better log) (Revision 1482706)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt; Fix java.lang.RuntimeException: Cached an already cached block (Revision 1482698)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestIdLock.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13658424" author="hudson" created="Wed, 15 May 2013 15:03:47 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #531 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/531/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/531/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum to add better log) (Revision 1482705)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt; Fix java.lang.RuntimeException: Cached an already cached block (Revision 1482697)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestIdLock.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13658526" author="ndimiduk" created="Wed, 15 May 2013 16:41:37 +0000"  >&lt;p&gt;From 0.94 reduced, what is the intention of this line?&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+      exec.awaitTermination(5000, TimeUnit.MILLISECONDS);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13658534" author="yuzhihong@gmail.com" created="Wed, 15 May 2013 16:53:14 +0000"  >&lt;p&gt;Looking at 0.94 code when CachedBlock retrieved from map is not null:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    cb = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; CachedBlock(cacheKey, buf, count.incrementAndGet(), inMemory);
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; newSize = updateSizeMetrics(cb, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
    map.put(cacheKey, cb);
    elements.incrementAndGet();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(newSize &amp;gt; acceptableSize() &amp;amp;&amp;amp; !evictionInProgress) {
      runEviction();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Since we&apos;re replacing the existing CachedBlock with the new one, should we call updateSizeMetrics(cb, true) on the existing CachedBlock first ?&lt;/p&gt;</comment>
                            <comment id="13658581" author="enis" created="Wed, 15 May 2013 17:49:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;what is the intention of this line?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is for joining with the threads from the executor so that junit resource checker does not complain about hanging threads. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;should we call updateSizeMetrics(cb, true) on the existing CachedBlock first ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The one we are replacing is supposed to be the same block, so they should have the same size. &lt;/p&gt;</comment>
                            <comment id="13658586" author="yuzhihong@gmail.com" created="Wed, 15 May 2013 17:55:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;The one we are replacing is supposed to be the same block&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If that is the case, why creating another CachedBlock instance ?&lt;/p&gt;

&lt;p&gt;In terms of size accounting, I think updateSizeMetrics(cb, true) should be called to account for the implicit eviction.&lt;/p&gt;</comment>
                            <comment id="13658818" author="enis" created="Wed, 15 May 2013 21:04:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;In terms of size accounting, I think updateSizeMetrics(cb, true) should be called to account for the implicit eviction.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Right, replacing the cached block will cause elements and size metrics to be unnecessarily inflated. &lt;/p&gt;

&lt;p&gt;How about this addendum? &lt;/p&gt;</comment>
                            <comment id="13658882" author="yuzhihong@gmail.com" created="Wed, 15 May 2013 22:05:29 +0000"  >&lt;p&gt;Talked with Enis. Here is my suggestion:&lt;br/&gt;
In case of cache key collision, we can verify that the contents of the Cacheable&apos;s are indeed the same.&lt;br/&gt;
If yes, return the existing CachedBlock.&lt;br/&gt;
If not, both Cacheable&apos;s are evicted or, throw RuntimeException as we did previously.&lt;/p&gt;</comment>
                            <comment id="13658920" author="hudson" created="Wed, 15 May 2013 22:31:08 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #141 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/141/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/141/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt; Fix java.lang.RuntimeException: Cached an already cached block (Revision 1482704)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/util/TestIdLock.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13658942" author="enis" created="Wed, 15 May 2013 22:37:22 +0000"  >&lt;p&gt;I was also thinking of comparing the contents of the buffers, just to make sure that nothing is wrong, but I did not do it because it seemed a bit expensive. But given that this is pretty rare, it is better to be safe than sorry I guess. &lt;/p&gt;

&lt;p&gt;Updating addendum with the new approach for consideration. &lt;/p&gt;</comment>
                            <comment id="13658948" author="stack" created="Wed, 15 May 2013 22:46:08 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Quality addendum.&lt;/p&gt;</comment>
                            <comment id="13658957" author="yuzhihong@gmail.com" created="Wed, 15 May 2013 22:52:33 +0000"  >&lt;p&gt;Thanks for the quick turn around, Enis.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    ByteBuffer l = ByteBuffer.allocate(left.getSerializedLength());
+    left.serialize(l);
+    ByteBuffer r = ByteBuffer.allocate(right.getSerializedLength());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can compare the serialized lengths of left and right first. If they are different, we can return early.&lt;/p&gt;</comment>
                            <comment id="13659073" author="enis" created="Thu, 16 May 2013 00:19:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;We can compare the serialized lengths of left and right first. If they are different, we can return early.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not worth it since this is already rare. &lt;br/&gt;
Will commit this one unless further comments. &lt;/p&gt;</comment>
                            <comment id="13659143" author="zjushch" created="Thu, 16 May 2013 02:09:41 +0000"  >&lt;p&gt;We have found this case before, and are sure it will only happens in IPC handler rather than core thread of regionserver, thus mark it acceptable.&lt;/p&gt;

&lt;p&gt;Nice addendum!&lt;/p&gt;</comment>
                            <comment id="13659770" author="enis" created="Thu, 16 May 2013 17:55:51 +0000"  >&lt;p&gt;committed addendum2. Thanks for reviews and great discussion. &lt;/p&gt;</comment>
                            <comment id="13660004" author="hudson" created="Thu, 16 May 2013 21:05:14 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #198 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/198/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/198/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum2 to check cached buffers for equality) (Revision 1483478)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13660092" author="hudson" created="Thu, 16 May 2013 22:33:21 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4124 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4124/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4124/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum2 to check cached buffers for equality) (Revision 1483476)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13660262" author="hudson" created="Fri, 17 May 2013 02:02:46 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #102 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/102/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/102/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum2 to check cached buffers for equality) (Revision 1483478)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13660288" author="hudson" created="Fri, 17 May 2013 03:09:35 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #533 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/533/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/533/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum2 to check cached buffers for equality) (Revision 1483476)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13661060" author="enis" created="Fri, 17 May 2013 21:29:04 +0000"  >&lt;p&gt;Ok, this is getting embarrassing. It turns out that some people are running with enable assertions in production or in test environment, so the assertion there will still cause issues. &lt;/p&gt;

&lt;p&gt;It is not clear whether assertions should be turned on or off by default, but even so, people might chose to -ea on their environments. So, I am proposing yet another addendum to remove the assertion. &lt;/p&gt;
</comment>
                            <comment id="13661064" author="enis" created="Fri, 17 May 2013 21:31:45 +0000"  >&lt;p&gt;0.94 version with addendum 2 and 3. &lt;/p&gt;</comment>
                            <comment id="13661066" author="stack" created="Fri, 17 May 2013 21:35:26 +0000"  >&lt;p&gt;Fine on removing the assert.  Why remove the code in  hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java too?&lt;/p&gt;</comment>
                            <comment id="13661076" author="enis" created="Fri, 17 May 2013 21:47:13 +0000"  >&lt;p&gt;Thanks for quick look. We have to remove the test which tests that we cannot double-put the same block. With the assertion gone, test cannot easily check whether the cache allows it or not. &lt;/p&gt;</comment>
                            <comment id="13661119" author="stack" created="Fri, 17 May 2013 22:50:09 +0000"  >&lt;p&gt;+1 on commit of addendum&lt;/p&gt;</comment>
                            <comment id="13661136" author="sershe" created="Fri, 17 May 2013 23:08:47 +0000"  >&lt;p&gt;+1 on assert removal&lt;/p&gt;</comment>
                            <comment id="13661209" author="hudson" created="Sat, 18 May 2013 01:24:56 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #145 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/145/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/145/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum2 and 3) (Revision 1484034)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13661223" author="hudson" created="Sat, 18 May 2013 01:58:20 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #103 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/103/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/103/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum3 to remove assertion) (Revision 1484033)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13661246" author="hudson" created="Sat, 18 May 2013 03:17:09 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #534 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/534/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/534/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum3 to remove assertion) (Revision 1484032)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13661281" author="hudson" created="Sat, 18 May 2013 04:46:49 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #203 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/203/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/203/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum3 to remove assertion) (Revision 1484033)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13661284" author="hudson" created="Sat, 18 May 2013 04:59:07 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4129 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4129/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4129/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum3 to remove assertion) (Revision 1484032)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13661304" author="hudson" created="Sat, 18 May 2013 05:26:18 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #989 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/989/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/989/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8547&quot; title=&quot;Fix java.lang.RuntimeException: Cached an already cached block&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8547&quot;&gt;&lt;del&gt;HBASE-8547&lt;/del&gt;&lt;/a&gt;. Fix java.lang.RuntimeException: Cached an already cached block (Addendum2 and 3) (Revision 1484034)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
enis : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13869817" author="apurtell" created="Mon, 13 Jan 2014 18:44:09 +0000"  >&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2014-01-11 22:22:56,895 WARN  [RpcServer.handler=1,port=8120] hfile.LruBlockCache: Cached an already cached block: a957fcb9a7474e9b9e4858e74d6a1eec.05bd6ea9e5d83483d35ee6658cc189a5_92811926 cb:a957fcb9a7474e9b9e4858e74d6a1eec.05bd6ea9e5d83483d35ee6658cc189a5_92811926. This is harmless and can happen in rare cases (see HBASE-8547)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;14 occurrences on one RS writing 1 billion keys with flushes every 30 seconds, indeed seems rare by observation. Just FYI.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12600785">HBASE-6479</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12583224" name="hbase-8547_v1-0.94.patch" size="21123" author="enis" created="Tue, 14 May 2013 22:29:31 +0000"/>
                            <attachment id="12583219" name="hbase-8547_v1-0.94.patch" size="21755" author="enis" created="Tue, 14 May 2013 21:53:19 +0000"/>
                            <attachment id="12583225" name="hbase-8547_v1.patch" size="19647" author="enis" created="Tue, 14 May 2013 22:29:31 +0000"/>
                            <attachment id="12583251" name="hbase-8547_v2-0.94-reduced.patch" size="3872" author="enis" created="Wed, 15 May 2013 00:20:58 +0000"/>
                            <attachment id="12583693" name="hbase-8547_v2-addendum2+3-0.94.patch" size="3419" author="enis" created="Fri, 17 May 2013 21:31:45 +0000"/>
                            <attachment id="12583391" name="hbase-8547_v2-addendum2.patch" size="2525" author="enis" created="Wed, 15 May 2013 22:37:22 +0000"/>
                            <attachment id="12583376" name="hbase-8547_v2-addendum2.patch" size="835" author="enis" created="Wed, 15 May 2013 21:04:52 +0000"/>
                            <attachment id="12583691" name="hbase-8547_v2-addendum3.patch" size="1769" author="enis" created="Fri, 17 May 2013 21:29:04 +0000"/>
                            <attachment id="12583265" name="hbase-8547_v2-trunk.patch" size="2915" author="enis" created="Wed, 15 May 2013 02:48:39 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 May 2013 18:15:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327923</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 48 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kkuv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328267</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>