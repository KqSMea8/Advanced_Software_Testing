<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:51:24 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14269/HBASE-14269.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14269] FuzzyRowFilter omits certain rows when multiple fuzzy keys exist</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14269</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-13761&lt;/a&gt; introduced a RowTracker in FuzzyRowFilter to avoid performing getNextForFuzzyRule() for each fuzzy key on each getNextCellHint() by maintaining a list of possible row matches for each fuzzy key. The implementation assumes that the prepared rows will be matched one by one, so it removes the first row in the list as soon as it is used. However, this approach may lead to omitting rows in some cases:&lt;/p&gt;

&lt;p&gt;Consider a case where we have two fuzzy keys:&lt;br/&gt;
1?1&lt;br/&gt;
2?2&lt;/p&gt;

&lt;p&gt;and the data is like:&lt;br/&gt;
000&lt;br/&gt;
111&lt;br/&gt;
112&lt;br/&gt;
121&lt;br/&gt;
122&lt;br/&gt;
211&lt;br/&gt;
212&lt;/p&gt;

&lt;p&gt;when the first row 000 fails to match, RowTracker will update possible row matches with cell 000 and fuzzy keys 1?1,2?2. This will populate RowTracker with 101 and 202. Then 101 is popped out of RowTracker, hint the scanner to go to row 101. The scanner will get 111 and find it is a match, and continued to find that 112 is not a match, getNextCellHint will be called again. Then comes the bug: Row 101 has been removed out of RowTracker, so RowTracker will jump to 202. As you see row 121 will be omitted, but it is actually a match for fuzzy key 1?1.&lt;/p&gt;

&lt;p&gt;I will illustrate the bug by adding a new test case in TestFuzzyRowFilterEndToEnd. Also I will provide the bug fix in my patch. The idea of the new solution is to maintain a priority queue for all the possible match rows for each fuzzy key, and whenever getNextCellHint is called, the elements in the queue that are smaller than the parameter currentCell will be updated(and re-insert into the queue). The head of queue will always be the &quot;Next cell hint&quot;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12857522">HBASE-14269</key>
            <summary>FuzzyRowFilter omits certain rows when multiple fuzzy keys exist</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mahongbin">hongbin ma</assignee>
                                    <reporter username="mahongbin">hongbin ma</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Aug 2015 12:43:42 +0000</created>
                <updated>Wed, 27 Jan 2016 15:28:26 +0000</updated>
                            <resolved>Thu, 27 Aug 2015 04:03:15 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.2.0</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                    <fixVersion>0.98.15</fixVersion>
                    <fixVersion>1.0.3</fixVersion>
                    <fixVersion>1.1.3</fixVersion>
                                    <component>Filters</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14704861" author="yuzhihong@gmail.com" created="Thu, 20 Aug 2015 13:20:55 +0000"  >&lt;p&gt;nit: maintain the original indentation level (in more than one place):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Pair&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;(Bytes.toStringBinary(p.getFirst()), Bytes.toStringBinary(p
-                .getSecond()));
+                &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Pair&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;(Bytes.toStringBinary(p.getFirst()), Bytes.toStringBinary(p
+                        .getSecond()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] fuzzyKeyMeta) {
+          &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] fuzzyKeyMeta) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Reducing unnecessary changes would make review easier.&lt;/p&gt;

&lt;p&gt;There are lines longer than 100 char. e.g. (in this particular case &apos;to be&apos; can be omitted):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Cell Hint&quot;. As scanning going on, the number of candidate rows in the RowTracker will remain to be
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+                &lt;span class=&quot;code-quote&quot;&gt;&quot;NextRows should not be empty, make sure to call it after updateTracker &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;call it&apos; : please spell out what &apos;it&apos; should be.&lt;/p&gt;</comment>
                            <comment id="14704996" author="mahongbin" created="Thu, 20 Aug 2015 14:22:51 +0000"  >&lt;p&gt;Update patch with Ted Yu&apos;s comments&lt;/p&gt;</comment>
                            <comment id="14705011" author="mahongbin" created="Thu, 20 Aug 2015 14:35:06 +0000"  >&lt;p&gt;fix bug of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14705183" author="yuzhihong@gmail.com" created="Thu, 20 Aug 2015 16:08:09 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="14705204" author="hadoopqa" created="Thu, 20 Aug 2015 16:20:04 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12751499/HBASE-14269-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12751499/HBASE-14269-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit dc9c2efcc9a7d0f00d738b1b7dbd59a208c5a7a9.&lt;br/&gt;
  ATTACHMENT ID: 12751499&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1854 checkstyle errors (more than the master&apos;s current 1853 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.bucket.TestBucketCache&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 6 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.TestTableMapReduceBase.testCombiner(TestTableMapReduceBase.java:106)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableSnapshotInputFormat.testWithMapReduceImpl(TestTableSnapshotInputFormat.java:241)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TableSnapshotInputFormatTestBase.testWithMapReduce(TableSnapshotInputFormatTestBase.java:111)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TableSnapshotInputFormatTestBase.testWithMapReduceMultiRegion(TableSnapshotInputFormatTestBase.java:95)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormat.testInputFormat(TestTableInputFormat.java:373)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestTableInputFormat.testJobConfigurableExtensionOfTableInputFormatBase(TestTableInputFormat.java:351)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestImportTSVWithVisibilityLabels.testMROnTable(TestImportTSVWithVisibilityLabels.java:165)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15192//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15192//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15192//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15192//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15192//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15192//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15192//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15192//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14706179" author="vrodionov" created="Fri, 21 Aug 2015 03:10:10 +0000"  >&lt;p&gt;I did not have time to check the patch yet, but &apos;priority queue&apos; scares me a bit.  Will check the the code later.&lt;/p&gt;</comment>
                            <comment id="14706180" author="mahongbin" created="Fri, 21 Aug 2015 03:11:07 +0000"  >&lt;p&gt;Is my patch responsible for&lt;br/&gt;
 -1 core zombie tests&lt;br/&gt;
-1 core tests?&lt;/p&gt;

&lt;p&gt;I&apos;m running TestBucketCache locally it seems ok&lt;/p&gt;</comment>
                            <comment id="14706184" author="vrodionov" created="Fri, 21 Aug 2015 03:16:13 +0000"  >&lt;p&gt;Performance results? The major goal of original patch was performance. This patch introduces additional, quite heavy, processing with PriorityQueue. Quite heavy? Not?&lt;/p&gt;</comment>
                            <comment id="14706185" author="mahongbin" created="Fri, 21 Aug 2015 03:18:14 +0000"  >&lt;p&gt;It does not have to be priority queue, The key is to re-sort the queue after a new row is inserted. &lt;/p&gt;</comment>
                            <comment id="14706187" author="mahongbin" created="Fri, 21 Aug 2015 03:22:24 +0000"  >&lt;p&gt;The solution is heavy to guarantee correctness. I haven&apos;t conducted a performance test yet, but I&apos;ll catch up with it. It seems I have to compare with versions prior to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; because &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; returning the complete result set.&lt;br/&gt;
BTW, is it possible that you share your benchmark when submitting &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; ?&lt;/p&gt;</comment>
                            <comment id="14706189" author="mahongbin" created="Fri, 21 Aug 2015 03:22:28 +0000"  >&lt;p&gt;The solution is heavy to guarantee correctness. I haven&apos;t conducted a performance test yet, but I&apos;ll catch up with it. It seems I have to compare with versions prior to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; because &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; returning the complete result set.&lt;br/&gt;
BTW, is it possible that you share your benchmark when submitting &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; ?&lt;/p&gt;</comment>
                            <comment id="14706835" author="mahongbin" created="Fri, 21 Aug 2015 15:02:25 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;When I compared the performance of differnt versions of FuzzyRowFilter I&apos;m surprised that they exhibit no significant performance difference at all. The three versions that I compared are:&lt;/p&gt;

&lt;p&gt;1. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13641&quot; title=&quot;Deperecate Filter#filterRowKey(byte[] buffer, int offset, int length) in favor of filterRowKey(Cell firstRowCell)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13641&quot;&gt;&lt;del&gt;HBASE-13641&lt;/del&gt;&lt;/a&gt;: this is the last change before &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&apos;s optimization&lt;br/&gt;
2. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;: this is where the RowTracker optimization is introduced&lt;br/&gt;
3. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt;: this is where we fixed the bug in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I modified the synthetic data settings in TestFuzzyRowFilterEndToEnd to make it more evenly distributed(see my latest patch). And here&apos;re the results for running testEndToEnd on three version of FuzzyRowFilter respectively:&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13641&quot; title=&quot;Deperecate Filter#filterRowKey(byte[] buffer, int offset, int length) in favor of filterRowKey(Cell firstRowCell)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13641&quot;&gt;&lt;del&gt;HBASE-13641&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; runTest1&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;138ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;130ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;133ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; runTest1&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;62ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;65ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;63ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; runTest2&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;183ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;94ms before assertion error&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;194ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; runTest2&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;53ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;N/A skipped because error&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;53ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;All of the three versions will succeed in runTest1, however &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; will fail due to the bug we reported in this issue.(It will return incomplete result ret). As we can see there&apos;s no significant difference between them. It is reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; that its optimization has boost the performance a lot, however we guess it might be fast due to incomplete result set.&lt;/p&gt;

&lt;p&gt;Fuzzy filter is nothing magic, when it works it follows the pattern:&lt;br/&gt;
(get row)(get hint)...(get row)(get hint)&lt;br/&gt;
The RowTracker optimization in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; is merely optimizing the &quot;get hint&quot; part, and it remain doubt whether  &quot;get hint&quot; part is the real bottleneck.&lt;/p&gt;

&lt;p&gt;If my benchmark based on minicluster is not convincing enough, please point out why, and show us another re-produceable benchmark. For now my conclusion would be: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; did not optimize FuzzyRowFilter that much, we should think about reverting the FuzzyRowFilter to original version, or simply merge the patch in this issue. (No significant difference in terms of performance)&lt;/p&gt;
</comment>
                            <comment id="14706837" author="mahongbin" created="Fri, 21 Aug 2015 15:03:31 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;When I compared the performance of differnt versions of FuzzyRowFilter I&apos;m surprised that they exhibit no significant performance difference at all. The three versions that I compared are:&lt;/p&gt;

&lt;p&gt;1. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13641&quot; title=&quot;Deperecate Filter#filterRowKey(byte[] buffer, int offset, int length) in favor of filterRowKey(Cell firstRowCell)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13641&quot;&gt;&lt;del&gt;HBASE-13641&lt;/del&gt;&lt;/a&gt;: this is the last change before &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&apos;s optimization&lt;br/&gt;
2. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;: this is where the RowTracker optimization is introduced&lt;br/&gt;
3. &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt;: this is where we fixed the bug in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I modified the synthetic data settings in TestFuzzyRowFilterEndToEnd to make it more evenly distributed(see my latest patch). And here&apos;re the results for running testEndToEnd on three version of FuzzyRowFilter respectively:&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13641&quot; title=&quot;Deperecate Filter#filterRowKey(byte[] buffer, int offset, int length) in favor of filterRowKey(Cell firstRowCell)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13641&quot;&gt;&lt;del&gt;HBASE-13641&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; runTest1&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;138ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;130ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;133ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; runTest1&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;62ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;65ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;63ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; runTest2&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;183ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;94ms before assertion error&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;194ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; runTest2&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;53ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;N/A skipped because error&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;53ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;All of the three versions will succeed in runTest1, however &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; will fail due to the bug we reported in this issue.(It will return incomplete result ret). As we can see there&apos;s no significant difference between them. It is reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; that its optimization has boost the performance a lot, however we guess it might be fast due to incomplete result set.&lt;/p&gt;

&lt;p&gt;Fuzzy filter is nothing magic, when it works it follows the pattern:&lt;br/&gt;
(get row)(get hint)...(get row)(get hint)&lt;br/&gt;
The RowTracker optimization in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; is merely optimizing the &quot;get hint&quot; part, and it remain doubt whether  &quot;get hint&quot; part is the real bottleneck.&lt;/p&gt;

&lt;p&gt;If my benchmark based on minicluster is not convincing enough, please point out why, and show us another re-produceable benchmark. For now my conclusion would be: &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; did not optimize FuzzyRowFilter that much, we should think about reverting the FuzzyRowFilter to original version, or simply merge the patch in this issue. (No significant difference in terms of performance)&lt;/p&gt;</comment>
                            <comment id="14706896" author="yuzhihong@gmail.com" created="Fri, 21 Aug 2015 15:41:54 +0000"  >&lt;p&gt;If more time is needed to arrive at a benchmark that everybody agrees, we should revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Otherwise we can go with the patch in this issue.&lt;/p&gt;</comment>
                            <comment id="14706991" author="vrodionov" created="Fri, 21 Aug 2015 16:38:59 +0000"  >&lt;p&gt;Yes, the logic inside optimization for getNextHint is broken when fuzzy row has more than one fixed area, when fuzzy row has one fixed area (the most common case, I suppose) - it works and has significant performance gain, the more fuzzy rows - the more gain. One can run test with fuzzy rows such this: ?X?, or ?X. I would not revert &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; completely, unsafe implementation for satisfies is correct and 8x times faster than the previous one. It is a shame that scanner&apos;s overhead makes this improvement negligible though.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=honma&quot; class=&quot;user-hover&quot; rel=&quot;honma&quot;&gt;hongbin ma&lt;/a&gt;, please revert genNextCellHint, but leave satisfies. I will work on a new patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; when I will have time. The most common case of usage is still correct - fuzzy row with one fixed area. &lt;/p&gt;</comment>
                            <comment id="14707063" author="vrodionov" created="Fri, 21 Aug 2015 17:15:35 +0000"  >&lt;p&gt;I was not correct in my previous statement: optimization works correctly for fuzzy rows with one fixed area - it does not&lt;/p&gt;

&lt;p&gt;fuzzy key - ?5?, ?6?&lt;/p&gt;

&lt;p&gt;Rows:&lt;/p&gt;

&lt;p&gt;151 &lt;br/&gt;
241&lt;br/&gt;
251&lt;/p&gt;

&lt;p&gt;but the good news : I have a simple quick for this. I will reassign this JIRA to myself. Will do patch today. Thanks, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=honma&quot; class=&quot;user-hover&quot; rel=&quot;honma&quot;&gt;hongbin ma&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="14707383" author="hadoopqa" created="Fri, 21 Aug 2015 20:04:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12751738/HBASE-14269-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12751738/HBASE-14269-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit bcef28eefaf192b0ad48c8011f98b8e944340da5.&lt;br/&gt;
  ATTACHMENT ID: 12751738&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1858 checkstyle errors (more than the master&apos;s current 1857 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestProcessBasedCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportExport&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hdfs.server.namenode.TestFsck.testUnderMinReplicatedBlock(TestFsck.java:769)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15200//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15200//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15200//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15200//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15200//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15200//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15200//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15200//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14707685" author="vrodionov" created="Sat, 22 Aug 2015 00:25:58 +0000"  >&lt;p&gt;Original (pre-&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;) getNextForFuzzyRule(boolean, byte[], int, int, byte[], byte[]) looks completely broken. &lt;/p&gt;</comment>
                            <comment id="14708264" author="vrodionov" created="Sun, 23 Aug 2015 02:10:19 +0000"  >&lt;p&gt;Could you proceed with the patch, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mahongbin&quot; class=&quot;user-hover&quot; rel=&quot;mahongbin&quot;&gt;hongbin ma&lt;/a&gt;? &lt;/p&gt;

&lt;p&gt;Your patch looks correct. As for performance comparisons, it should be faster because:&lt;/p&gt;

&lt;p&gt;satisfies and filterKeyValue are more optimal than they were in pre-&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; . No need to revert everything back to pre-&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13671&quot; title=&quot;More classes to add to the invoking repository of org.apache.hadoop.hbase.mapreduce.driver&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13671&quot;&gt;&lt;del&gt;HBASE-13671&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="14708265" author="vrodionov" created="Sun, 23 Aug 2015 02:11:35 +0000"  >&lt;p&gt;You may try 100 fuzzy keys on a large data set to get the idea of performance improvement.&lt;/p&gt;</comment>
                            <comment id="14708712" author="mahongbin" created="Mon, 24 Aug 2015 03:07:03 +0000"  >&lt;p&gt;Hi Vladimir, &lt;/p&gt;

&lt;p&gt;Sorry I didn&apos;t have internet access during the weekend.&lt;br/&gt;
I&apos;ll work on a performance test on our real large dataset.&lt;/p&gt;

&lt;p&gt;For now I suggest merging this patch to at least guarantee correctness.&lt;br/&gt;
Just a quick question, is there anything you want me to add/change in the latest patch(v2)?&lt;br/&gt;
I&apos;m a little bit confused by your comments.&lt;/p&gt;</comment>
                            <comment id="14708839" author="vrodionov" created="Mon, 24 Aug 2015 06:13:38 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Just a quick question, is there anything you want me to add/change in the latest patch(v2)?&lt;br/&gt;
I&apos;m a little bit confused by your comments.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, nothing. I was incorrect in my statement that &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;getNextForFuzzyRule(boolean, byte[], int, int, byte[], byte[]) looks completely broken&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14708843" author="mahongbin" created="Mon, 24 Aug 2015 06:17:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt; can you please help to review the patch and resolve the issue as you firstly committed &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="14712582" author="mahongbin" created="Wed, 26 Aug 2015 06:25:58 +0000"  >
&lt;p&gt;As &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; suggested I performed another test with TestFuzzyRowFilterEndToEnd:&lt;/p&gt;

&lt;p&gt;50 fuzzykeys:&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Pre &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest1&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;180ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;204ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest1&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;82ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;62ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest2&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;209ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;230ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest2&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;92ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;109ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;100 fuzzykeys: &lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Pre &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest1&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;183ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;177ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest1&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;82ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;56ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest2&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;218ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;214ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest2&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;98ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;107ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;500 fuzykeys:&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Pre &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest1&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;184ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;192ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest1&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;72ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;61ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest2&apos;s first run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;260ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;226ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;runTest2&apos;s second run&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;127ms&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;101ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Unfortunately the I don&apos;t think post &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; optimizations have boost the performance very much.&lt;br/&gt;
I don&apos;t have the condition to profile very large dataset,  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vrodionov&quot; class=&quot;user-hover&quot; rel=&quot;vrodionov&quot;&gt;Vladimir Rodionov&lt;/a&gt; will you please share your numbers?&lt;/p&gt;

&lt;p&gt;Despite the bad news, the bug in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt; still needs to be fixed.&lt;br/&gt;
It seems the new approach is not degrading when compared with  pre &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;. &lt;br/&gt;
And as the number of fuzzykeys increases, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; tends to be faster than  pre &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
So I thinks it is okay to commit this patch.&lt;/p&gt;

&lt;p&gt;Suggestions for FuzzyRowFilter users:&lt;br/&gt;
FuzzyRowFilter is good when you have handful of fuzzy filters, when the number of fuzzy filters grow out of control (In apache Kylin we witnessed user queries caused using more than 100000 fuzzy filters) Normal it will bring more performance issues than benefit.&lt;/p&gt;</comment>
                            <comment id="14712788" author="yuzhihong@gmail.com" created="Wed, 26 Aug 2015 09:23:31 +0000"  >&lt;p&gt;I think the performance with Hongbin&apos;s fix is acceptable. &lt;br/&gt;
+1 on patch. &lt;/p&gt;</comment>
                            <comment id="14713513" author="yuzhihong@gmail.com" created="Wed, 26 Aug 2015 14:27:39 +0000"  >&lt;p&gt;Integrated to master branch.&lt;br/&gt;
For branch-1, I got:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
1 out of 3 hunks FAILED -- saving rejects to file hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java.rej
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Mind attaching patch for branch-1 ?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="14713623" author="vrodionov" created="Wed, 26 Aug 2015 15:05:56 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Unfortunately the I don&apos;t think post HBASE-13761 optimizations have boost the performance very much.
I don&apos;t have the condition to profile very large dataset, Vladimir Rodionov will you please share your numbers?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My performance numbers are irrelevant due to a bug in original &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13761&quot; title=&quot;Optimize FuzzyRowFilter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13761&quot;&gt;&lt;del&gt;HBASE-13761&lt;/del&gt;&lt;/a&gt;. Unfortunately, performance optimizations in a filter itself are not enough to get overall performance boost. Scanner overhead is high.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mahongbin&quot; class=&quot;user-hover&quot; rel=&quot;mahongbin&quot;&gt;hongbin ma&lt;/a&gt;, can you attach your test program?&lt;/p&gt;</comment>
                            <comment id="14715178" author="hudson" created="Wed, 26 Aug 2015 17:15:24 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6757 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6757/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6757/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; FuzzyRowFilter omits certain rows when multiple fuzzy keys exist (hongbin ma) (tedyu: rev 6661f2d0254f1da9d8cbbd717274421a2ddcb95f)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilterEndToEnd.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14715895" author="mahongbin" created="Thu, 27 Aug 2015 01:46:22 +0000"  >&lt;p&gt;my test program is simply TestFuzzyRowFilterEndToEnd.testEndToEnd (In my latest patch ), I modified the variable totalFuzzyKeys for different settings&lt;/p&gt;</comment>
                            <comment id="14715896" author="mahongbin" created="Thu, 27 Aug 2015 01:46:25 +0000"  >&lt;p&gt;my test program is simply TestFuzzyRowFilterEndToEnd.testEndToEnd (In my latest patch ), I modified the variable totalFuzzyKeys for different settings&lt;/p&gt;</comment>
                            <comment id="14715897" author="mahongbin" created="Thu, 27 Aug 2015 01:46:30 +0000"  >&lt;p&gt;my test program is simply TestFuzzyRowFilterEndToEnd.testEndToEnd (In my latest patch ), I modified the variable totalFuzzyKeys for different settings&lt;/p&gt;</comment>
                            <comment id="14716018" author="mahongbin" created="Thu, 27 Aug 2015 03:40:51 +0000"  >&lt;p&gt;Just attached two patches for branch-1 and 0.98 respectively.&lt;br/&gt;
The branch-1 patch also works for 1,0,1.1,1.2,1.3&lt;/p&gt;

&lt;p&gt;BTW, I didn&apos;t find a make_patch.sh in 0.98 branch, what is the way of doing it?&lt;/p&gt;</comment>
                            <comment id="14716039" author="yuzhihong@gmail.com" created="Thu, 27 Aug 2015 03:57:49 +0000"  >&lt;p&gt;I normally use &apos;git diff&apos; to generate patches.&lt;/p&gt;</comment>
                            <comment id="14716048" author="yuzhihong@gmail.com" created="Thu, 27 Aug 2015 04:03:15 +0000"  >&lt;p&gt;Thanks for the patch, hongbin&lt;/p&gt;</comment>
                            <comment id="14716084" author="hudson" created="Thu, 27 Aug 2015 04:45:28 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #116 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/116/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/116/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; FuzzyRowFilter omits certain rows when multiple fuzzy keys exist (hongbin ma) (tedyu: rev 430f31ff4e6a45562a91e997adbfe2c95f8df4a7)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilterEndToEnd.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14716091" author="hudson" created="Thu, 27 Aug 2015 04:58:43 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.3 #137 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/137/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/137/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; FuzzyRowFilter omits certain rows when multiple fuzzy keys exist (hongbin ma) (tedyu: rev b8c7a08a9ed9a8c99e0de31512966065c4050e99)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilterEndToEnd.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14716126" author="hudson" created="Thu, 27 Aug 2015 05:55:26 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.0 #1032 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.0/1032/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.0/1032/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; FuzzyRowFilter omits certain rows when multiple fuzzy keys exist (hongbin ma) (tedyu: rev e7c7570d5adf1b094d7fc7339e30291f75366b54)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilterEndToEnd.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14716172" author="hadoopqa" created="Thu, 27 Aug 2015 06:44:21 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12752648/HBASE-14269-0.98.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12752648/HBASE-14269-0.98.patch&lt;/a&gt;&lt;br/&gt;
  against 0.98 branch at commit 56890d9fe148dd192520fab349a66aa3f688e232.&lt;br/&gt;
  ATTACHMENT ID: 12752648&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 23 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 3869 checkstyle errors (more than the master&apos;s current 3868 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15284//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14716186" author="hudson" created="Thu, 27 Aug 2015 06:56:40 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #140 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/140/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/140/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; FuzzyRowFilter omits certain rows when multiple fuzzy keys exist (hongbin ma) (tedyu: rev 430f31ff4e6a45562a91e997adbfe2c95f8df4a7)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilterEndToEnd.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14716194" author="hudson" created="Thu, 27 Aug 2015 07:07:50 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.1 #639 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/639/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/639/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; FuzzyRowFilter omits certain rows when multiple fuzzy keys exist (hongbin ma) (tedyu: rev 4b5c4e44b2367d49a71f872828bfc0bf0e8c43db)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilterEndToEnd.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14716240" author="hudson" created="Thu, 27 Aug 2015 07:55:57 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #1056 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1056/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/1056/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; FuzzyRowFilter omits certain rows when multiple fuzzy keys exist (hongbin ma) (tedyu: rev 3fe903cb77c09eb6905dc235b7e7109e3135bbc6)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilterEndToEnd.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14716266" author="hudson" created="Thu, 27 Aug 2015 08:21:55 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.98 #1102 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.98/1102/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.98/1102/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; FuzzyRowFilter omits certain rows when multiple fuzzy keys exist (hongbin ma) (tedyu: rev 3fe903cb77c09eb6905dc235b7e7109e3135bbc6)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilterEndToEnd.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14716350" author="hudson" created="Thu, 27 Aug 2015 09:25:04 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.3-IT #119 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/119/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/119/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14269&quot; title=&quot;FuzzyRowFilter omits certain rows when multiple fuzzy keys exist&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14269&quot;&gt;&lt;del&gt;HBASE-14269&lt;/del&gt;&lt;/a&gt; FuzzyRowFilter omits certain rows when multiple fuzzy keys exist (hongbin ma) (tedyu: rev b8c7a08a9ed9a8c99e0de31512966065c4050e99)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FuzzyRowFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/filter/TestFuzzyRowFilterEndToEnd.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15119464" author="ndimiduk" created="Wed, 27 Jan 2016 15:28:26 +0000"  >&lt;p&gt;Bulk closing 1.1.3 issues.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12832454">HBASE-13761</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12752648" name="HBASE-14269-0.98.patch" size="14438" author="mahongbin" created="Thu, 27 Aug 2015 03:38:15 +0000"/>
                            <attachment id="12752647" name="HBASE-14269-branch-1.patch" size="14755" author="mahongbin" created="Thu, 27 Aug 2015 03:38:15 +0000"/>
                            <attachment id="12751499" name="HBASE-14269-v1.patch" size="12491" author="mahongbin" created="Thu, 20 Aug 2015 14:22:51 +0000"/>
                            <attachment id="12751738" name="HBASE-14269-v2.patch" size="13602" author="mahongbin" created="Fri, 21 Aug 2015 15:05:12 +0000"/>
                            <attachment id="12751483" name="HBASE-14269.patch" size="16454" author="mahongbin" created="Thu, 20 Aug 2015 13:02:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Aug 2015 13:20:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            46 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2j5mn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>