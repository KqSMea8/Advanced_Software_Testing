<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:19:47 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11059/HBASE-11059.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11059] ZK-less region assignment</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11059</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;It seems that most people don&apos;t like region assignment with ZK (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5487&quot; title=&quot;Generic framework for Master-coordinated tasks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5487&quot;&gt;HBASE-5487&lt;/a&gt;), which causes many uncertainties. This jira is to support ZK-less region assignment. We need to make sure this patch doesn&apos;t break backward compatibility/rolling upgrade.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12710152">HBASE-11059</key>
            <summary>ZK-less region assignment</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12714102">HBASE-11165</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jxiang">Jimmy Xiang</assignee>
                                    <reporter username="jxiang">Jimmy Xiang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Apr 2014 21:14:42 +0000</created>
                <updated>Sat, 21 Feb 2015 23:32:17 +0000</updated>
                            <resolved>Sat, 14 Jun 2014 15:50:54 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>0.98.6</fixVersion>
                                    <component>master</component>
                    <component>Region Assignment</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>23</watches>
                                                                <comments>
                            <comment id="13978920" author="jxiang" created="Wed, 23 Apr 2014 21:18:13 +0000"  >&lt;p&gt;Had several discussions with Matteo and Stack. It&apos;s suggested that we can store HBase entities and their states in a system table. For example, we can store tables, regions, and so on in the system table. So we can go without storing transient states in ZK.  This table is accessed by master only. We can load it into memory when master starts up.&lt;/p&gt;</comment>
                            <comment id="13979024" author="mantonov" created="Wed, 23 Apr 2014 22:35:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; looks like other jiras like &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7767&quot; title=&quot;Get rid of ZKTable, and table enable/disable state in ZK &quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7767&quot;&gt;&lt;del&gt;HBASE-7767&lt;/del&gt;&lt;/a&gt; would benefit from notion of extended system (meta) tables? Also, if region assignment is ZK-less, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10909&quot; title=&quot;Abstract out ZooKeeper usage in HBase - phase 1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10909&quot;&gt;&lt;del&gt;HBASE-10909&lt;/del&gt;&lt;/a&gt; would benefit too &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;without storing transient states in ZK&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Table state isn&apos;t transient state, is it?&lt;/p&gt;

&lt;p&gt;Would client need to access this table to find out about assignment/state?&lt;/p&gt;</comment>
                            <comment id="13979034" author="jxiang" created="Wed, 23 Apr 2014 22:43:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;Table state isn&apos;t transient state, is it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s not. But it can be saved in this table too.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Would client need to access this table to find out about assignment/state?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should not. Since the information is already in the master memory, it will be more efficient to ask the master directly.&lt;/p&gt;</comment>
                            <comment id="13980534" author="mantonov" created="Fri, 25 Apr 2014 00:20:25 +0000"  >&lt;p&gt;Curious if there&apos;s any writeup following up on the discussion you mentioned above? Eager to look at.&lt;/p&gt;

&lt;p&gt;Based on the description, just some thoughts:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;is that a part of more generic proposal to have system tables, which can be pinned (all regions thereof) to a certain node, or it&apos;s just to solve this specific problem?&lt;/li&gt;
	&lt;li&gt;sounds like (correct me if I&apos;m wrong) to make the HA/failover work properly, the consistent replicas of such a table(-s) should be kept on each backup master (and further when we have multiple active master, on active masters)?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13980556" author="mantonov" created="Fri, 25 Apr 2014 00:38:08 +0000"  >&lt;p&gt;Actually, as zk-less assignment sounds like something which helps a lot to abstract hbase from ZK (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10909&quot; title=&quot;Abstract out ZooKeeper usage in HBase - phase 1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10909&quot;&gt;&lt;del&gt;HBASE-10909&lt;/del&gt;&lt;/a&gt;), I would think we can link these 2 jiras together?&lt;/p&gt;</comment>
                            <comment id="13981153" author="jxiang" created="Fri, 25 Apr 2014 15:32:41 +0000"  >&lt;p&gt;I don&apos;t have a writeup yet. Currently, I was thinking to make sure region assignment works without ZK to simplify the state machine, improve the assignment performance, make it more reliable, so that we can support more regions, and do HA a little bit easier later on. As to pin some system tables to somewhere, like the active master, it&apos;s been done in a different issue.&lt;/p&gt;

&lt;p&gt;For backward compatibility, the ZK part will still be there for a while. Yes, it should be of some help.&lt;/p&gt;</comment>
                            <comment id="13981504" author="mantonov" created="Fri, 25 Apr 2014 19:46:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; thanks for desctiption! look forward for the writeup.&lt;/p&gt;</comment>
                            <comment id="13999039" author="cos" created="Thu, 15 May 2014 18:25:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt;], could you please share the design doc with me as well? Thanks!&lt;/p&gt;</comment>
                            <comment id="14000159" author="jxiang" created="Fri, 16 May 2014 19:09:55 +0000"  >&lt;p&gt;Some writeup and comments are attached. Thanks.&lt;/p&gt;</comment>
                            <comment id="14000308" author="mantonov" created="Fri, 16 May 2014 21:10:07 +0000"  >&lt;p&gt;To recap some of the notes from the doc, to discuss further..&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the &quot;atomic&quot; short-circuit updates of META are only possible if META is guaranteed to be hosted on active master, which is not the case if &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; topology is turned off, unless I&apos;m missing something?&lt;/li&gt;
	&lt;li&gt;if we had system table with statistics (like region size, number of rows in each one etc) we could do master-initiated splits and merges - do you think it would be beneficial in terms of more even load on Master &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14009970" author="jxiang" created="Tue, 27 May 2014 17:50:10 +0000"  >&lt;p&gt;Attached the first patch, which is also on RB: &lt;a href=&quot;https://reviews.apache.org/r/21934/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/21934/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14009982" author="jxiang" created="Tue, 27 May 2014 17:54:11 +0000"  >&lt;p&gt;The patch is backward compatible, rolling upgradable. The performance depends on the setup and the number of regions of course. On my 6 nodes cluster, assigning 13,990 user regions, it took about 8minutes using ZK, and ~1minute with this patch (no ZK).&lt;/p&gt;</comment>
                            <comment id="14010037" author="stack" created="Tue, 27 May 2014 18:18:30 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; What if you did 1M regions?&lt;/p&gt;
</comment>
                            <comment id="14010051" author="mantonov" created="Tue, 27 May 2014 18:24:30 +0000"  >&lt;p&gt;Great! &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; - will take a look today.&lt;/p&gt;</comment>
                            <comment id="14010058" author="mbertozzi" created="Tue, 27 May 2014 18:30:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; is this patch just writing the &quot;state&quot; to meta instead of zookeeper without changing the assignment algorithm at all?&lt;/p&gt;</comment>
                            <comment id="14010081" author="jxiang" created="Tue, 27 May 2014 18:39:17 +0000"  >&lt;p&gt;The old assignment logic is still there for rolling upgrade. If the new logic is turned on, we will store &quot;states&quot; to meta, and regionserver reports region transitions to master via RPC instead of ZK. There are still room for improvement, for example, report aggregation, skip some heart-beat, etc.. Client side logic is not changed very much for compatibility.&lt;/p&gt;</comment>
                            <comment id="14010092" author="jxiang" created="Tue, 27 May 2014 18:42:33 +0000"  >&lt;p&gt;By the way, I am going to try 1M regions now. I need a bigger cluster.&lt;/p&gt;</comment>
                            <comment id="14016085" author="jxiang" created="Tue, 3 Jun 2014 00:31:55 +0000"  >&lt;p&gt;Attached v2 which is I am testing now.&lt;/p&gt;</comment>
                            <comment id="14018262" author="stack" created="Wed, 4 Jun 2014 22:10:49 +0000"  >&lt;p&gt;-public class RegionState implements org.apache.hadoop.io.Writable {&lt;br/&gt;
+public class RegionState {&lt;/p&gt;

&lt;p&gt;Above is good.  We serialize RegionState ever?  Nvm... I see RegionStatusProto now.&lt;/p&gt;

&lt;p&gt;On:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ZKUtil.createAndFailSilent(this, assignmentZNode);&lt;br/&gt;
+      if (conf.getBoolean(&quot;hbase.assignment.usezk&quot;, false)) 
{
+        ZKUtil.createAndFailSilent(this, assignmentZNode);
+      }&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Should we remove the assignment znode dir if it exists?  (NVM... I see you do it on startup).&lt;/p&gt;

&lt;p&gt;Leave of this sentence I&apos;d say: &quot; The other&lt;br/&gt;
+   * way around is not recommended also sophisticated users could do it&lt;br/&gt;
+   * somehow.&quot;&lt;/p&gt;

&lt;p&gt;Put this in release note or lets open issue to ensure the below gets added to the 1.0 migration doc:&lt;/p&gt;

&lt;p&gt;+   * For rolling upgrade from using ZK to not using ZK, it can be&lt;br/&gt;
+   * done in two steps:&lt;br/&gt;
+   * 1. Set hbase.assignment.usezk to true, do a rolling upgrade&lt;br/&gt;
+   * so that both masters and regionservers have the new code. Either&lt;br/&gt;
+   * master or regionserver can be upgraded at first. The order&lt;br/&gt;
+   * is not important for this step.&lt;br/&gt;
+   * 2. Set hbase.assignment.usezk to false, do a rolling restart&lt;br/&gt;
+   * so that region assignments don&apos;t use ZK any more. For this step,&lt;br/&gt;
+   * masters should be restarted after regionservers have all&lt;br/&gt;
+   * restarted at first so that they won&apos;t update meta table&lt;br/&gt;
+   * directly and master doesn&apos;t know about it.&lt;/p&gt;

&lt;p&gt;This message will come out wrong?&lt;/p&gt;

&lt;p&gt;+    LOG.info(&quot;Finished region assignment in (failover=&quot; + failover&lt;br/&gt;
+      + &quot;)&quot; + (System.currentTimeMillis() - startTime) + &quot;ms&quot;);&lt;/p&gt;

&lt;p&gt;It will have &apos;failover=true&apos; in between &apos;in&apos; and time in ms... should it be on end?&lt;/p&gt;

&lt;p&gt;It is a pity we have to pass this flag useZKForAssignment down:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;unassign(regionInfo, rsClosing, expectedVersion, null, true, null);&lt;br/&gt;
+                unassign(regionInfo, rsClosing, expectedVersion, null, useZKForAssignment, null);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Can this be done in a &apos;transaction&apos;?&lt;/p&gt;

&lt;p&gt;+      mergingRegions.remove(encodedName);&lt;br/&gt;
+      regionOffline(a, State.MERGED);&lt;br/&gt;
+      regionOffline(b, State.MERGED);&lt;br/&gt;
+      regionOnline(p, sn, 1);&lt;/p&gt;

&lt;p&gt;We have transactions right as long as all in the same region?  Which is the case when only single meta.&lt;/p&gt;

&lt;p&gt;I skimmed the rest.&lt;/p&gt;

&lt;p&gt;This looks amazing Jimmy.  I&apos;d have thought it would have taken way more code.&lt;/p&gt;

&lt;p&gt;Looking at tests, I was wondering if the new state transitions could be tested independent of the servers?  That possible at all?  Should be easier now no zk?  Can the state management classes be stood up independent of the Master?&lt;/p&gt;

&lt;p&gt;I can see this going in if your testing works out.  We&apos;d have it off on commit.  Need to add doc on new assignment state of affairs.  You have it written up in code.  Would just copy it into releases notes and/or into refguide.  We&apos;d open new blocker against 1.0 to discuss whether to have it on for 1.0 (it&apos;d be great if we could have this on... I think it&apos;ll save orders of magnitude more headache than it causes).  If it is on for 1.0, we&apos;d have to doc the rolling upgrade.&lt;/p&gt;</comment>
                            <comment id="14020063" author="jxiang" created="Fri, 6 Jun 2014 17:12:11 +0000"  >&lt;p&gt;Thanks a lot for the review, Stack!&lt;/p&gt;

&lt;p&gt;This one is fixed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Leave of this sentence I&apos;d say: &quot; The other&lt;br/&gt;
+ * way around is not recommended also sophisticated users could do it&lt;br/&gt;
+ * somehow.&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For migration instruction, I will copy it to the release note.&lt;/p&gt;

&lt;p&gt;This one is fixed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This message will come out wrong?&lt;br/&gt;
+ LOG.info(&quot;Finished region assignment in (failover=&quot; + failover&lt;br/&gt;
+ + &quot;)&quot; + (System.currentTimeMillis() - startTime) + &quot;ms&quot;);&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s right. It&apos;s better to be done in one single transaction explicitly. Currently, I think we have transactions as long as only one RS is doing the merge/split for the same set of regions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We have transactions right as long as all in the same region? Which is the case when only single meta.&lt;/p&gt;&lt;/blockquote&gt;


&lt;p&gt;By the way, I did some test. With a patch v3 (to-be-uploaded),  it took about 316 seconds (~5 minutes) to assign 1 million regions. All these regions are empty so take no time to open. Including loading the regions from meta (twice, one to restore the state, the other one to init the region assignment snapshot for favored nodes plan. I think the second one can be removed. I can fix it in a separate issue), it took about 395 seconds (~6.5 minutes).&lt;/p&gt;

&lt;p&gt;Without the patch, I don&apos;t have a number yet. It&apos;s still running. I have increased the ZK jute buffer several times.&lt;/p&gt;</comment>
                            <comment id="14020070" author="jxiang" created="Fri, 6 Jun 2014 17:14:21 +0000"  >&lt;p&gt;I think it is better to have this one in 1.0. So that we can clean up quite some ZK assignment code in 2.0. In the meantime, we can maintain a rolling upgrade path.&lt;/p&gt;</comment>
                            <comment id="14020076" author="stack" created="Fri, 6 Jun 2014 17:19:56 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; See Jimmy&apos;s 1M test results above.&lt;/p&gt;

&lt;p&gt;Sweet Jimmy!&lt;/p&gt;

&lt;p&gt;It should be in 1.0 because it reduces headaches and swelling (smile)!&lt;/p&gt;

&lt;p&gt;How hard to hack a patch for 0.98 for Francis to try next week on his 300node cluster? I could work on it if you think it doable.&lt;/p&gt;</comment>
                            <comment id="14020083" author="jxiang" created="Fri, 6 Jun 2014 17:23:47 +0000"  >&lt;p&gt;For a patch for 0.98, let me give it a try. We need &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; too. By the way, in the test, I set both openregion/closeregion thread to 20. The default is 3.&lt;/p&gt;</comment>
                            <comment id="14020987" author="jxiang" created="Sat, 7 Jun 2014 21:34:55 +0000"  >&lt;p&gt;Attached patch v2.1 that passed unit test and itbll locally.  For 1million empty regions on 39 nodes, openregion threads set to 20, with the patch it took about 5 minutes to assign them all. Without the patch, it took about 68 minutes.&lt;/p&gt;</comment>
                            <comment id="14021014" author="hadoopqa" created="Sat, 7 Jun 2014 23:21:33 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12648832/hbase-11059_v2.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12648832/hbase-11059_v2.1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12648832&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 60 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +       * &amp;lt;code&amp;gt;rpc ReportRegionTransition(.ReportRegionTransitionRequest) returns (.ReportRegionTransitionResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc ReportRegionTransition(.ReportRegionTransitionRequest) returns (.ReportRegionTransitionResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+              } else if (!useZKForAssignment || asyncSetOfflineInZooKeeper(state, cb, destination)) {&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9719//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14021066" author="stack" created="Sun, 8 Jun 2014 03:05:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; Is the patch up on rb?&lt;/p&gt;</comment>
                            <comment id="14021069" author="jxiang" created="Sun, 8 Jun 2014 03:15:09 +0000"  >&lt;p&gt;Yes, it is on RB:  &lt;a href=&quot;https://reviews.apache.org/r/21934/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/21934/&lt;/a&gt;, the 3rd update.&lt;/p&gt;</comment>
                            <comment id="14021103" author="stack" created="Sun, 8 Jun 2014 05:07:02 +0000"  >&lt;p&gt;ok.  I went over RB and left some comments.  Minor for the most part.  Did not review actual transitions too closely figuring that unit tests and IT will find issues before I would.&lt;/p&gt;

&lt;p&gt;I&apos;m +1 for committing this.  Would be cool to get a +1 from a &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; too... or at least a skim by Jeffrey (Jeffrey, this is sweet work!).&lt;/p&gt;

&lt;p&gt;+1 would be to commit with this feature off.  We&apos;d then file an issue against 1.0 to turn it on by default.  In that issue we&apos;d make the case for why this should be on. &lt;/p&gt;

&lt;p&gt;Suggest you pull out the comments for rolling restart and shove them in as the release note for this JIRA.  Good on you Jimmy.&lt;/p&gt;
</comment>
                            <comment id="14025458" author="jxiang" created="Mon, 9 Jun 2014 18:01:51 +0000"  >&lt;p&gt;Cool, thanks. Yes, I will set this feature off by default. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;, can you take a look? Thanks.&lt;/p&gt;</comment>
                            <comment id="14025471" author="jeffreyz" created="Mon, 9 Jun 2014 18:07:59 +0000"  >&lt;p&gt;This is great! The result of improvement is terrific. Let me to take a look at this patch. Does this JIRA  depend on master colocating meta otherwise meta recovery needs some bootstrap? Thanks. &lt;/p&gt;

&lt;p&gt;Another idea on this topic is to let RS do all the assignments including meta update and master only need to initiate assignment request &amp;amp; monitor un-assignment regions without even keeping internal memory state.&lt;/p&gt;</comment>
                            <comment id="14025477" author="toffer" created="Mon, 9 Jun 2014 18:11:20 +0000"  >&lt;p&gt;Interesting, I suspect zk is signifcantly slower because it syncs to disk (unlike hdfs). Can we have a run without forceSync=no?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For a patch for 0.98, let me give it a try. We need &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; too. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Does it require the new deployment to make things work? Or is there just some bits of code change that it depends on? We will keep the original deployment supported still correct?&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;By the way, in the test, I set both openregion/closeregion thread to 20. The default is 3.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Are there any other configs you changed?&lt;/p&gt;


</comment>
                            <comment id="14025491" author="stack" created="Mon, 9 Jun 2014 18:22:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;Another idea on this topic is to let RS do all the assignments including meta update and master only need to initiate assignment request &amp;amp; monitor un-assignment regions without even keeping internal memory state.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Tell us more please.  Do it in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11165&quot; title=&quot;Scaling so cluster can host 1M regions and beyond (50M regions?)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11165&quot;&gt;HBASE-11165&lt;/a&gt;?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;without forceSync=no&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; you mean &apos;with&apos;, not &apos;without&apos; in above?  You want to see what happens if zk is not sync&apos;ing log?&lt;/p&gt;</comment>
                            <comment id="14025536" author="jxiang" created="Mon, 9 Jun 2014 18:47:52 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;, yes, it needs meta/master colocation. This patch makes sure only master updates the meta.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt;, I also set hbase.bulk.assignment.waittillallassigned to true since I&apos;d like to get the assignment time only. I didn&apos;t change forceSync. So the default value should be used. The reason we need &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; is that the patch talks to the meta region directly in persisting region state changes. If meta is on a different server, the performance shouldn&apos;t be the same. The new deployment is used in my testing. But the original deployment is still supported, with some performance hurt of course.&lt;/p&gt;</comment>
                            <comment id="14025775" author="toffer" created="Mon, 9 Jun 2014 21:30:13 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Francis Liu you mean &apos;with&apos;, not &apos;without&apos; in above? You want to see what happens if zk is not sync&apos;ing log?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; sorry typo, yes compare when zk is not sync&apos;ing. Would be good to also have a separate zkwatcher for assignment. &lt;/p&gt;
</comment>
                            <comment id="14025785" author="toffer" created="Mon, 9 Jun 2014 21:37:27 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The reason we need &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10569&quot; title=&quot;Co-locate meta and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10569&quot;&gt;&lt;del&gt;HBASE-10569&lt;/del&gt;&lt;/a&gt; is that the patch talks to the meta region directly in persisting region state changes. If meta is on a different server, the performance shouldn&apos;t be the same. The new deployment is used in my testing. But the original deployment is still supported, with some performance hurt of course.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see so it will still work with meta remotely access. IMHO I don&apos;t think the perf degradation will be significant, though would be good to quantify. &lt;/p&gt;</comment>
                            <comment id="14025868" author="jeffreyz" created="Mon, 9 Jun 2014 22:40:51 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Tell us more please. Do it in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11165&quot; title=&quot;Scaling so cluster can host 1M regions and beyond (50M regions?)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11165&quot;&gt;HBASE-11165&lt;/a&gt;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The basic idea in high-level is that master only coordinates the assignment requests without really being involved in the actual assignment work flow(it&apos;s better that if we have FATE like library to back it up) and we can do it later if we&apos;re agreed.&lt;/p&gt;

&lt;p&gt;1) Master create a new state:&quot;assigning&quot;, reason and new destination RS for a region in meta&lt;br/&gt;
2) Master sends an assign request to the new RS&lt;br/&gt;
3) The new RS( and the current RS hosting the region) will assume the duty to do the whole assignment and update meta states along with assignment including: prepare-closing, closing, closed, opening &amp;amp; opened. This needs region server to talk to each other in order to communicate info that current ZK notifications carry and report status back to master by RPC if it fails the assignment.&lt;br/&gt;
4) Master monitors un-assigned &amp;amp; failed open regions periodically&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</comment>
                            <comment id="14025946" author="mantonov" created="Mon, 9 Jun 2014 23:55:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt; the performance improvement is pretty amazing! Let me look at the patch (I looked at v1 before, I assume I can look v1-&amp;gt;v3 now?)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So that we can clean up quite some ZK assignment code in 2.0. In the meantime, we can maintain a rolling upgrade path.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Do you think we could finish that transition in like 1.1 or it would have to wait till 2.0?&lt;/p&gt;

&lt;p&gt;Also regarding release notes..I&apos;d say that if we can&apos;t enforce that people migrate off ZK during rolling upgrade (to be discussed more?), then at least it needs to be worded in release notes in the way like it&apos;s &lt;em&gt;strictly&lt;/em&gt; advised thing to do, and a note that the old way will be removed soon. What do you think?&lt;/p&gt;</comment>
                            <comment id="14025950" author="mantonov" created="Mon, 9 Jun 2014 23:57:53 +0000"  >&lt;p&gt;Sorry, I was going to look at patch earlier but got distracted.&lt;/p&gt;</comment>
                            <comment id="14025955" author="jxiang" created="Tue, 10 Jun 2014 00:03:56 +0000"  >&lt;p&gt;No problem. Please just look v3. During to rebasing, v1-&amp;gt;v3 diff may pull something else in.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do you think we could finish that transition in like 1.1 or it would have to wait till 2.0?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Probably not. As you said, we can&apos;t enforce people to migrate off ZK during rolling upgrade, at least inside the same major version. It&apos;s up to the community. I think it&apos;s fair to move off ZK (assignment) completely in 2.0 instead of 1.1&lt;/p&gt;</comment>
                            <comment id="14026731" author="jxiang" created="Tue, 10 Jun 2014 17:32:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;I see so it will still work with meta remotely access.  IMHO I don&apos;t think the perf degradation will be significant, though would be good to quantify. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The issue is that it is not optimized in this case since I assume meta is co-located on master. Currently, only one meta HTable instance is used in this case in a synchronized way. It is better to use a pool of meta HTable instances. &lt;/p&gt;</comment>
                            <comment id="14026945" author="jxiang" created="Tue, 10 Jun 2014 20:23:22 +0000"  >&lt;p&gt;Attached v2.2 with minor changes. It is on RB: &lt;a href=&quot;https://reviews.apache.org/r/21934/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/21934/&lt;/a&gt;, update #4.&lt;/p&gt;</comment>
                            <comment id="14027031" author="jxiang" created="Tue, 10 Jun 2014 21:12:30 +0000"  >&lt;p&gt;Attached zk-less_assignment.png. It shows the region assignment time comparison between with and without this patch. The x-axis is the number of regions (x1000). The y-axis is the total assignment time in second. &lt;/p&gt;</comment>
                            <comment id="14027039" author="stack" created="Tue, 10 Jun 2014 21:17:59 +0000"  >&lt;p&gt;Nice picture Jimmy.&lt;/p&gt;</comment>
                            <comment id="14027087" author="jeffreyz" created="Tue, 10 Jun 2014 21:51:36 +0000"  >&lt;p&gt;I have reviewed the patch v2.1 in high level. Looks great in general. I have following comments:&lt;/p&gt;

&lt;p&gt;1)  Rolling restart when turn hbase.assignment.usezk from OFF to ON. &lt;br/&gt;
At this scenario, rolling restart seems not working. Region server will try to update ZK node during region opening &amp;amp; will fail. Basically all RS with new config can&apos;t open any region. Logically it&apos;s equivalent stop every thing and then restart. It&apos;s also unclear to me when a new master starts where it gets RIT info.&lt;/p&gt;

&lt;p&gt;2) When hbase.assignment.usezk is ON, a region is set RIT to pending_open before it sends region open RPC out and master restarts. During restart, how AM processes left over RIT isn&apos;t clear to me. The code seems only process RITs recorded in ZK assignment node.&lt;/p&gt;

&lt;p&gt;3) When a region is opened after master receives region transition response from RS, could we use checkAndPut to update META in order to make sure the region location is the same as the RS who sends the region transition request to prevent potential double assignment.&lt;/p&gt;

&lt;p&gt;4) Inside postOpenDeployTasks, when reportRegionTransition return false we don&apos;t offline the region in RS. If this situation happens, when we open a region which isn&apos;t supposed to do so, the opening has side effects like removing recovered.edits files when recovery mode is in recover edits mode.&lt;/p&gt;

&lt;p&gt;5) A rare race condition that a RS fails to open a region and it reports to master as FAILED_OPEN but without firstly changing its internal memory state. If master re-assigns the region onto the same RS, the region open RPC will simply return OPENED and the region will be unassigned forever.&lt;/p&gt;
</comment>
                            <comment id="14027116" author="hadoopqa" created="Tue, 10 Jun 2014 22:09:58 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12649658/hbase-11059_v2.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12649658/hbase-11059_v2.2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12649658&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 60 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +       * &amp;lt;code&amp;gt;rpc ReportRegionTransition(.ReportRegionTransitionRequest) returns (.ReportRegionTransitionResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc ReportRegionTransition(.ReportRegionTransitionRequest) returns (.ReportRegionTransitionResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+              } else if (!useZKForAssignment || asyncSetOfflineInZooKeeper(state, cb, destination)) {&lt;br/&gt;
+  private Map&amp;lt;ServerName, Boolean&amp;gt; requeuedDeadServers = new ConcurrentHashMap&amp;lt;ServerName, Boolean&amp;gt;();&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9736//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14027174" author="jxiang" created="Tue, 10 Jun 2014 22:55:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;, thanks a lot for the review.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;1) Rolling restart when turn hbase.assignment.usezk from OFF to ON. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is not supported. We support rolling restart from ON to OFF, i.e. from using ZK to not using ZK.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;2) When hbase.assignment.usezk is ON, a region...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is the existing behavior. Before the master sends region open RPC to RS, the ZK is already created in proper state. So it&apos;s enough to process RITs recorded in ZK assignment node only.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;3) When a region is opened after master receives region transition response from RS, could we use checkAndPut to update META...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is too conservative. The idea is that in the new scheme, the master should be the source of truth, and have the meta info in memory, that&apos;s why we just check against the info in RegionStates.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;4) Inside postOpenDeployTasks, when reportRegionTransition return false we don&apos;t offline the region in RS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Good catch. In this case, postOpenDeployTasks should throw an exception so the region will be offlined. I will handle this in the next patch.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;5) A rare race condition that a RS fails to open a region and it reports to master as FAILED_OPEN but without firstly changing its internal memory state....&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Right. This seems to be an existing issue, right?&lt;/p&gt;</comment>
                            <comment id="14027198" author="hadoopqa" created="Tue, 10 Jun 2014 23:20:23 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12649658/hbase-11059_v2.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12649658/hbase-11059_v2.2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12649658&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 60 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +       * &amp;lt;code&amp;gt;rpc ReportRegionTransition(.ReportRegionTransitionRequest) returns (.ReportRegionTransitionResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc ReportRegionTransition(.ReportRegionTransitionRequest) returns (.ReportRegionTransitionResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+              } else if (!useZKForAssignment || asyncSetOfflineInZooKeeper(state, cb, destination)) {&lt;br/&gt;
+  private Map&amp;lt;ServerName, Boolean&amp;gt; requeuedDeadServers = new ConcurrentHashMap&amp;lt;ServerName, Boolean&amp;gt;();&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9737//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14027201" author="jeffreyz" created="Tue, 10 Jun 2014 23:22:09 +0000"  >&lt;blockquote&gt;
&lt;p&gt;2) When hbase.assignment.usezk is ON&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Actually I mean  hbase.assignment.usezk is OFF(new mode) and PENDING_OPEN RIT state is stored in META but real region open RPC may(or may not) sent out before master restarts. During master starts I didn&apos;t see where we handle regions in PENDING_OPEN state from META.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt; This seems to be an existing issue, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Before we offline region and then set FAILED_OPEN in ZK. This is likely a new behavior.&lt;/p&gt;</comment>
                            <comment id="14027221" author="jxiang" created="Tue, 10 Jun 2014 23:37:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;During master starts I didn&apos;t see where we handle regions in PENDING_OPEN state from META.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see. We should send the RPC again for both PENDING_OPEN and PENDING_CLOSE at master start in case failover.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Before we offline region and then set FAILED_OPEN in ZK. This is likely a new behavior.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I added the offline region part. I mean the race is an existing issue. With ZK, RS can set FAILED_OPEN in ZK, before clean up the RS internal memory state, the master could handle the FAILED_OPEN ZK event and try to open the region on the same RS again and get back already opened. There seems not to have an easy fix. Probably a little synchronization is needed. Perhaps we can address this one in a separate issue.&lt;/p&gt;</comment>
                            <comment id="14027329" author="jxiang" created="Wed, 11 Jun 2014 01:52:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt;, can we handle the pending_open/close issue in a separate jira? I will add some tests to cover it. Other issues are simple to fix. I can do it at commit.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, how is &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10070&quot; title=&quot;HBase read high-availability using timeline-consistent region replicas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10070&quot;&gt;&lt;del&gt;HBASE-10070&lt;/del&gt;&lt;/a&gt; rebase? Can I get this patch in before it? Otherwise, I have to run all tests again.&lt;/p&gt;</comment>
                            <comment id="14028304" author="jeffreyz" created="Wed, 11 Jun 2014 19:47:26 +0000"  >&lt;blockquote&gt;
&lt;p&gt;can we handle the pending_open/close issue in a separate jira? I will add some tests to cover it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Fine with me.&lt;/p&gt;

&lt;p&gt;There maybe a region double assignment issue when we turn the feature on(from hbase.assignment.usezk=ON to hbase.assignment.usezk=OFF) during rolling restart. Below are details:&lt;br/&gt;
1) Since we rolling-restart RS firstly, A RS will use the new config(hbase.assignment.usezk=OFF)&lt;br/&gt;
2) Master is still using hbase.assignment.usezk=ON so AM creates offline znode before sending region open. Though a region will be opened, the OFFLINE znode will be left even after the region is opened.&lt;br/&gt;
3) When master restarts with new config(hbase.assignment.usezk=OFF), AM will process RITs left over in ZK. During RIT processing on offline znode,  the region will be assigned somewhere while it&apos;s still open in another RS.&lt;/p&gt;</comment>
                            <comment id="14028399" author="jxiang" created="Wed, 11 Jun 2014 21:07:11 +0000"  >&lt;p&gt;At step 3, AM will try to send region open to the same RS and get an already_opened response back. The RIT processing won&apos;t try to use a different RS.&lt;/p&gt;

&lt;p&gt;Good questions! Do you see more possible issues? Thanks.&lt;/p&gt;</comment>
                            <comment id="14028462" author="jxiang" created="Wed, 11 Jun 2014 21:56:59 +0000"  >&lt;p&gt;Attached patch v3.0 that addressed the pending_open/close issue &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jeffreyz&quot; class=&quot;user-hover&quot; rel=&quot;jeffreyz&quot;&gt;Jeffrey Zhong&lt;/a&gt; pointed out. If there are new issues, it will be good to address in follow-up issues. If no objection, I would like to commit it this weekend.&lt;/p&gt;</comment>
                            <comment id="14028515" author="jeffreyz" created="Wed, 11 Jun 2014 22:39:36 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The RIT processing won&apos;t try to use a different RS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see. Make sense.&lt;/p&gt;</comment>
                            <comment id="14028638" author="hadoopqa" created="Thu, 12 Jun 2014 00:17:02 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12649907/hbase-11059_v3.0.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12649907/hbase-11059_v3.0.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12649907&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 60 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +       * &amp;lt;code&amp;gt;rpc ReportRegionTransition(.ReportRegionTransitionRequest) returns (.ReportRegionTransitionResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc ReportRegionTransition(.ReportRegionTransitionRequest) returns (.ReportRegionTransitionResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+    RegionState newState = new RegionState(hriOnline, State.PENDING_CLOSE, oldState.getServerName());&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileGetting(TestHRegion.java:3500)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9749//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14031178" author="jeffreyz" created="Fri, 13 Jun 2014 21:13:30 +0000"  >&lt;p&gt;+1 on the v3 patch if you confirm that QA runs fine. Thanks.&lt;/p&gt;</comment>
                            <comment id="14031607" author="jxiang" created="Sat, 14 Jun 2014 15:50:54 +0000"  >&lt;p&gt;Integrated into trunk. Thanks Stack, Jeffrey, and Mikhail a lot for the review and discussion.&lt;/p&gt;</comment>
                            <comment id="14031637" author="hudson" created="Sat, 14 Jun 2014 18:06:40 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5206 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5206/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5206/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11059&quot; title=&quot;ZK-less region assignment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11059&quot;&gt;&lt;del&gt;HBASE-11059&lt;/del&gt;&lt;/a&gt; ZK-less region assignment (jxiang: rev 58549428a66550aed83bfb6f1da405decc1b0f61)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestZKLessSplitOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/MockRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStates.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionMergeTransactionOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestSplitTransactionOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/catalog/MetaReader.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMasterFailover.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStateStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/ConfigUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionServerNoMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/handler/ServerShutdownHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestZKLessAMOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestHBaseFsck.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManagerOnCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/RegionServerStatus.proto&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/master/RegionState.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestOpenedRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/RegionLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/CloseRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/handler/OpenRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionMergeTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/zookeeper/TestRecoverableZooKeeper.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestCloseRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestEndToEndSplitTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/TestDrainingServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/handler/TestOpenRegionHandler.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/UnAssignCallable.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestZKBasedOpenCloseRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestRestartCluster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestAssignmentManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/MockRegionServerServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SplitTransaction.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignCallable.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestZKLessMergeOnCluster.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14090286" author="ram_krish" created="Fri, 8 Aug 2014 04:30:28 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jxiang&quot; class=&quot;user-hover&quot; rel=&quot;jxiang&quot;&gt;Jimmy Xiang&lt;/a&gt;&lt;br/&gt;
The doc suggests that only the master updates the meta.  In the master branch the HMaster itself is am HRS.&lt;br/&gt;
In the OpenRegionHandler we still do updateMeta().  So is that done  by the RegionServer or the master?  &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!updateMeta(region) || &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.server.isStopped() ||
          &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.rsServices.isStopping()) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14090291" author="jxiang" created="Fri, 8 Aug 2014 04:36:24 +0000"  >&lt;p&gt;The method name is a little confusing.  This method doesn&apos;t update meta directly. It sends a RPC call to master to update the meta instead.&lt;/p&gt;</comment>
                            <comment id="14090372" author="ram_krish" created="Fri, 8 Aug 2014 06:26:03 +0000"  >&lt;p&gt;Thanks Jimmy.  Read further down the code.&lt;/p&gt;</comment>
                            <comment id="14110799" author="apurtell" created="Tue, 26 Aug 2014 15:17:01 +0000"  >&lt;p&gt;Pushed to 0.98 as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11546&quot; title=&quot;Backport ZK-less region assignment to 0.98&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11546&quot;&gt;&lt;del&gt;HBASE-11546&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14330939" author="enis" created="Sat, 21 Feb 2015 23:32:17 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12728295">HBASE-11546</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12735603">HBASE-11793</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12731772">HBASE-11659</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12706580">HBASE-10909</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12646952" name="hbase-11059.patch" size="295916" author="jxiang" created="Tue, 27 May 2014 17:50:10 +0000"/>
                            <attachment id="12648832" name="hbase-11059_v2.1.patch" size="293089" author="jxiang" created="Sat, 7 Jun 2014 21:34:55 +0000"/>
                            <attachment id="12649658" name="hbase-11059_v2.2.patch" size="303426" author="jxiang" created="Tue, 10 Jun 2014 20:23:22 +0000"/>
                            <attachment id="12648037" name="hbase-11059_v2.patch" size="267610" author="jxiang" created="Tue, 3 Jun 2014 00:31:55 +0000"/>
                            <attachment id="12649907" name="hbase-11059_v3.0.patch" size="315922" author="jxiang" created="Wed, 11 Jun 2014 21:56:59 +0000"/>
                            <attachment id="12645305" name="zk-less_am.pdf" size="121840" author="jxiang" created="Fri, 16 May 2014 19:09:55 +0000"/>
                            <attachment id="12649670" name="zk-less_assignment.png" size="20120" author="jxiang" created="Tue, 10 Jun 2014 21:12:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Apr 2014 22:35:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>388474</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ux27:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>388727</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This patch makes it possible to do region assignment without ZK. By default, it is off (i.e. ZK is used for region assignment as before).&lt;br/&gt;
&lt;br/&gt;
Two setting &amp;quot;hbase.assignment.usezk&amp;quot;, &amp;quot;hbase.assignment.usezk.migrating&amp;quot; are introduced to control migration from using ZK for assignment to not using&lt;br/&gt;
ZK for assignment.&lt;br/&gt;
&lt;br/&gt;
For rolling upgrade from using ZK to not using ZK, it can be done in two steps:&lt;br/&gt;
&lt;br/&gt;
1. Set both hbase.assignment.usezk and hbase.assignment.usezk.migrating to true, do a rolling upgrade so that both masters and regionservers have&lt;br/&gt;
the new code. Either master or regionserver can be upgraded at first. The order is not important for this step. If you want to keep using ZK for assignment, you&amp;#39;d better set hbase.assignment.usezk to true, and hbase.assignment.usezk.migrating to false so that region states are not persisted in meta table.&lt;br/&gt;
&lt;br/&gt;
2. Set hbase.assignment.usezk to false, do a rolling restart so that region assignments don&amp;#39;t use ZK any more. For this step, masters should be restarted after regionservers have all restarted at first so that they won&amp;#39;t update meta table directly and master doesn&amp;#39;t know about it.&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>