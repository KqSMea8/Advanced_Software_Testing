<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:34:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6200/HBASE-6200.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6200] KeyComparator.compareWithoutRow can be wrong when families have the same prefix</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6200</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;As reported by Desert Rose on IRC and on the ML, &lt;tt&gt;Result&lt;/tt&gt; has a weird behavior when some families share the same prefix. He posted a link to his code to show how it fails, &lt;a href=&quot;http://pastebin.com/7TBA1XGh&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://pastebin.com/7TBA1XGh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically &lt;tt&gt;KeyComparator.compareWithoutRow&lt;/tt&gt; doesn&apos;t differentiate families and qualifiers so &quot;f:a&quot; is said to be bigger than &quot;f1:&quot;, which is false. Then what happens is that the KVs are returned in the right order from the RS but then doing &lt;tt&gt;Result.binarySearch&lt;/tt&gt; it uses &lt;tt&gt;KeyComparator.compareWithoutRow&lt;/tt&gt; which has a different sorting so the end result is undetermined.&lt;/p&gt;

&lt;p&gt;I added some debug and I can see that the data is returned in the right order but &lt;tt&gt;Arrays.binarySearch&lt;/tt&gt; returned the wrong KV, which is then verified agains the passed family and qualifier which fails so null is returned.&lt;/p&gt;

&lt;p&gt;I don&apos;t know how frequent it is for users to have families with the same prefix, but those that do have that and that use those families at the same time will have big correctness issues. This is why I mark this as a blocker.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12560247">HBASE-6200</key>
            <summary>KeyComparator.compareWithoutRow can be wrong when families have the same prefix</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jeason">Jieshan Bean</assignee>
                                    <reporter username="jdcryans">Jean-Daniel Cryans</reporter>
                        <labels>
                    </labels>
                <created>Mon, 11 Jun 2012 21:37:32 +0000</created>
                <updated>Wed, 18 Sep 2013 20:00:25 +0000</updated>
                            <resolved>Wed, 27 Jun 2012 07:08:19 +0000</resolved>
                                    <version>0.90.6</version>
                    <version>0.92.1</version>
                    <version>0.94.0</version>
                                    <fixVersion>0.92.2</fixVersion>
                    <fixVersion>0.94.1</fixVersion>
                    <fixVersion>0.95.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>19</watches>
                                                                <comments>
                            <comment id="13293178" author="jdcryans" created="Mon, 11 Jun 2012 23:16:19 +0000"  >&lt;p&gt;Changing the user&apos;s name again at his request.&lt;/p&gt;</comment>
                            <comment id="13393509" author="lhofhansl" created="Sun, 17 Jun 2012 09:24:41 +0000"  >&lt;p&gt;The problem is that families are not compared at all (so in the case above &apos;&apos; is less than &apos;a&apos;).&lt;br/&gt;
Actually, that is correct as far as the StoreScanners, etc, are concerned, as there need not be an explicit ordering between KVs in different CFs - they are stored in different stores. So the cycles comparing families can be spared.&lt;/p&gt;

&lt;p&gt;Of course, when we want to sort KVs from multiple stores (as in this case a ResultSet) this comes back to bite us.&lt;/p&gt;

&lt;p&gt;It seems we need an extra comparator that includes families, for use in cases where KVs from multiple stores are compared.&lt;/p&gt;

&lt;p&gt;I forgot why we decided not remove all the comparators from the KeyValue class, but in this case there could be a comparator in hbase-server which ignores families and one in common (or client in the future) that includes them.&lt;/p&gt;</comment>
                            <comment id="13393515" author="lhofhansl" created="Sun, 17 Jun 2012 09:30:10 +0000"  >&lt;p&gt;Meh... Looking again at the code. Families are compared. Just ignore me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13393517" author="lhofhansl" created="Sun, 17 Jun 2012 09:39:09 +0000"  >&lt;p&gt;So family and qualifier are compared together. So above compared &apos;f1&apos; with &apos;fa&apos;, which is wrong.&lt;br/&gt;
They should be compared separately, but then the comparator would need to look up the actual family length and call Bytes.compareTo twice.&lt;/p&gt;</comment>
                            <comment id="13393626" author="stack" created="Sun, 17 Jun 2012 22:05:06 +0000"  >&lt;p&gt;Seems like a &apos;hole&apos; since elsewhere in KV we compare columns by looking at their column family first, then the column qualifiers: e.g. KeyValue#compareColumns.&lt;/p&gt;</comment>
                            <comment id="13398177" author="jeason" created="Thu, 21 Jun 2012 04:11:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;They should be compared separately, but then the comparator would need to look up the actual family length and call Bytes.compareTo twice.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agree with this idea. I think call Bytes.compareTo twice is not a problem. Anyway put them together and do the comparison is incorrect.&lt;/p&gt;</comment>
                            <comment id="13398310" author="jeason" created="Thu, 21 Jun 2012 09:14:58 +0000"  >&lt;p&gt;A patch of separately comparison for CF and Qualiifer. &lt;/p&gt;</comment>
                            <comment id="13398321" author="lhofhansl" created="Thu, 21 Jun 2012 09:57:05 +0000"  >&lt;p&gt;Thanks Jieshan!&lt;br/&gt;
Looks good off-hand (haven&apos;t looked too closely, though). Let&apos;s get a test-run in.&lt;/p&gt;</comment>
                            <comment id="13398390" author="zhihyu@ebaysf.com" created="Thu, 21 Jun 2012 12:34:26 +0000"  >&lt;p&gt;Hadoop QA is not functioning due to svn version.&lt;br/&gt;
Running tests locally.&lt;/p&gt;</comment>
                            <comment id="13398460" author="zhihyu@ebaysf.com" created="Thu, 21 Jun 2012 14:46:06 +0000"  >&lt;p&gt;Patch looks great.&lt;br/&gt;
Minor comments:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+     * validate that assumption here.
+     * 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There is a whitespace at the end of second line above.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; lqualifierlength = llength - TIMESTAMP_TYPE_SIZE
+          - (lfamilyoffset - loffset) - lfamilylength;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;lfamilyoffset - loffset is actually commonLength. Replace it with commonLength makes code easier to read.&lt;br/&gt;
Same with the computation of rqualifierlength&lt;/p&gt;

&lt;p&gt;There&apos;re 5 new white spaces in TestKeyValue&lt;/p&gt;</comment>
                            <comment id="13398466" author="zhihyu@ebaysf.com" created="Thu, 21 Jun 2012 14:54:59 +0000"  >&lt;p&gt;@Jieshan:&lt;br/&gt;
Please provide patches for other branches after addressing review comments.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13398505" author="jeason" created="Thu, 21 Jun 2012 15:47:09 +0000"  >&lt;p&gt;Thank you for your review, Ted. I will update the patch and make the patches for other branches tommorow.&lt;/p&gt;</comment>
                            <comment id="13399145" author="jeason" created="Fri, 22 Jun 2012 06:04:58 +0000"  >&lt;p&gt;Patches for all other branches.&lt;/p&gt;</comment>
                            <comment id="13399202" author="zhihyu@ebaysf.com" created="Fri, 22 Jun 2012 08:18:55 +0000"  >&lt;p&gt;All Apache build servers are offline.&lt;br/&gt;
Please run test suite in all branches.&lt;br/&gt;
Please list the failing tests, is any, individually so that people can help verify.&lt;/p&gt;</comment>
                            <comment id="13399363" author="hadoopqa" created="Fri, 22 Jun 2012 15:08:57 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12532999/HBASE-6200-94.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12532999/HBASE-6200-94.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2221//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2221//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13399388" author="zhihyu@ebaysf.com" created="Fri, 22 Jun 2012 15:41:24 +0000"  >&lt;p&gt;Re-attaching patch v2.&lt;/p&gt;</comment>
                            <comment id="13399401" author="stack" created="Fri, 22 Jun 2012 15:56:32 +0000"  >&lt;p&gt;Patch looks good.  I&apos;m not sure I&apos;m clear what commonPrefix is... how its used.  For example, what is going on here:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// &apos;fami:qf1&apos; &amp;lt; &apos;fami:qf2&apos; With commonPrefix + 4 bytes prefix.
&lt;/span&gt;+    assertKVLessWithoutRow(c, commonPrefix + 4, kv0_1, kv0_2);
+    &lt;span class=&quot;code-comment&quot;&gt;// &apos;fami:qf1&apos; &amp;lt; &apos;fami:qf2&apos; With commonPrefix + 6 bytes prefix.
&lt;/span&gt;+    assertKVLessWithoutRow(c, commonPrefix + 6, kv0_1, kv0_2);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We move from commonPrefix+4 to commonPrefix+6.  Is this commonPrefix w/i the row only?  Or is it row+?  It seems its row?  Its not clear from the javadoc nor as I walk through.&lt;/p&gt;

&lt;p&gt;This stuff is hard to follow at the best of times so while it looks like this is fixed with this patch &amp;#8211; thanks for doing it &amp;#8211; any chance of a bit more explaination either w/ comments or improved javadoc.&lt;/p&gt;

&lt;p&gt;Otherwise, patch looks great.  Tests are nice.&lt;/p&gt;</comment>
                            <comment id="13399446" author="hadoopqa" created="Fri, 22 Jun 2012 17:06:25 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533061/6200-trunk-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533061/6200-trunk-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 11 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2223//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2223//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2223//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2223//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2223//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2223//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2223//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2223//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13399701" author="zhihyu@ebaysf.com" created="Fri, 22 Jun 2012 23:04:11 +0000"  >&lt;p&gt;From earlier in the patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; commonLength = ROW_LENGTH_SIZE + FAMILY_LENGTH_SIZE + rowlength;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Probably we should use variable of same name instead of commonPrefix.&lt;/p&gt;</comment>
                            <comment id="13400205" author="lhofhansl" created="Sun, 24 Jun 2012 20:00:12 +0000"  >&lt;p&gt;Also with this change, since KVs are compared extremely frequently we should performance test this.&lt;/p&gt;</comment>
                            <comment id="13400248" author="jeason" created="Mon, 25 Jun 2012 01:49:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;Patch looks good. I&apos;m not sure I&apos;m clear what commonPrefix is... how its used. For example, what is going on here:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;We move from commonPrefix+4 to commonPrefix+6. Is this commonPrefix w/i the row only? Or is it row+? It seems its row? Its not clear from the javadoc nor as I walk through.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry for the confusion. I will add more comments to explain this&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I will refresh the patches today.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Probably we should use variable of same name instead of commonPrefix.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ya...I should use &quot;commonLength&quot;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Also with this change, since KVs are compared extremely frequently we should performance test this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Lars, do you have any suggestions on this?&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13400249" author="jeason" created="Mon, 25 Jun 2012 01:59:25 +0000"  >&lt;p&gt;Added more comments for the test case.&lt;/p&gt;</comment>
                            <comment id="13400252" author="hadoopqa" created="Mon, 25 Jun 2012 02:12:47 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533236/HBASE-6200-trunk-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533236/HBASE-6200-trunk-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 11 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2243//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2243//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2243//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2243//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2243//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2243//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2243//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2243//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13400253" author="zhihyu@ebaysf.com" created="Mon, 25 Jun 2012 02:17:15 +0000"  >&lt;p&gt;Most recent QA run encountered:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12-TRUNK-HBASE-2:test (secondPartTestsExecution) on project hbase-server: ExecutionException; nested exception is java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: unable to create &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;native&lt;/span&gt; thread -&amp;gt; [Help 1]
[ERROR] 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Attaching patch again.&lt;/p&gt;</comment>
                            <comment id="13400254" author="zhihyu@ebaysf.com" created="Mon, 25 Jun 2012 02:18:20 +0000"  >&lt;p&gt;For performance test, how about using LoadTestTool / ycsb (same parameters) on builds with and without this patch ?&lt;/p&gt;</comment>
                            <comment id="13400256" author="jeason" created="Mon, 25 Jun 2012 02:34:33 +0000"  >&lt;p&gt;I agree with this idea. We should create one table with several families which have the same prefix. And test the load/scan performance.&lt;br/&gt;
Before that, I can write one test case to test that method only(w/ and w/o this patch). And then decide whether do more tests. Is that ok?&lt;/p&gt;</comment>
                            <comment id="13400264" author="hadoopqa" created="Mon, 25 Jun 2012 03:08:22 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533237/6200-trunk-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533237/6200-trunk-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 11 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2244//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2244//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2244//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2244//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13400265" author="hadoopqa" created="Mon, 25 Jun 2012 03:18:54 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533238/HBASE-6200-trunk-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533238/HBASE-6200-trunk-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 11 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2245//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2245//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2245//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2245//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2245//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2245//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2245//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2245//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13400268" author="hadoopqa" created="Mon, 25 Jun 2012 03:33:26 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533251/HBASE-6200-94-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533251/HBASE-6200-94-v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2246//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2246//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13400276" author="zhihyu@ebaysf.com" created="Mon, 25 Jun 2012 04:21:24 +0000"  >&lt;p&gt;@Jieshan:&lt;br/&gt;
Let&apos;s start with your test plan.&lt;/p&gt;</comment>
                            <comment id="13400303" author="anoopsamjohn" created="Mon, 25 Jun 2012 06:24:23 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lcolumnlength == 0 &amp;amp;&amp;amp; ltype == Type.Minimum.getCode()) {
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lfamilylength == 0 &amp;amp;&amp;amp; lqualifierlength == 0
+          &amp;amp;&amp;amp; ltype == Type.Minimum.getCode()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;May be only lfamilylength ==0 check is enough. When the family is missing from KV there can not be a qualifier.&lt;br/&gt;
Same with&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rcolumnlength == 0 &amp;amp;&amp;amp; rtype == Type.Minimum.getCode()) {
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rfamilylength == 0 &amp;amp;&amp;amp; rqualifierlength == 0
+          &amp;amp;&amp;amp; rtype == Type.Minimum.getCode()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13400323" author="jeason" created="Mon, 25 Jun 2012 07:05:49 +0000"  >&lt;p&gt;@Anoop:&lt;br/&gt;
Thanks for your carefully review. &lt;br/&gt;
Only the createLastOnRow methods using Type.Minimum. Likes below:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; public static KeyValue createLastOnRow(final byte[] row) {
    return new KeyValue(row, null, null, HConstants.LATEST_TIMESTAMP, Type.Minimum);
 }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;At this time, the length of CF (or Qualifier) should be 0. &lt;br/&gt;
Actually, we can create one KeyValue with CF as empty but Qualifier is not empty. And if we call KeyValue#getQualifier, we can get the correct value. So I think this check should be strict with both CF == 0 and Qualifier == 0.&lt;/p&gt;</comment>
                            <comment id="13400441" author="jeason" created="Mon, 25 Jun 2012 12:23:48 +0000"  >&lt;p&gt;This is how I did this test:&lt;br/&gt;
1. Test comparing between &apos;famia:qualia&apos; with &apos;famib:qualia&apos;. Run for 1000000*2 times. Calculate the time consumed(Using System.currentTimeMillis() to get current time).&lt;br/&gt;
2. Test comparing between &apos;fami:qualia&apos; with &apos;fami:qualib&apos;. Run for 1,000,000*2 times. Calculate the time consumed.&lt;br/&gt;
3. Repeats 1~2 for 20 times. Accumulate the total consumed time at step 1 and step 2, and then calculate for the average time.&lt;br/&gt;
4. Repeats 1~3 for 3 groups.&lt;/p&gt;

&lt;p&gt;Please find the attached file &quot;PerformanceTestCase-6200-94.patch&quot; for details.&lt;/p&gt;

&lt;p&gt;And this is the test results in my machine(Machine info: 64-bit Suse, CPU: 16 * 1.6GHz, Memory: 32GB):&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;With patch 6200&amp;#93;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Group-1:
Compare {famia:qualia} with {famib:qualia} used time(totally) -&amp;gt; 2425, average -&amp;gt; 121
Compare {fami:qualia} with {fami:qualib} used time(totally) -&amp;gt; 3282, average -&amp;gt; 164

Group-2:
Compare {famia:qualia} with {famib:qualia} used time(totally) -&amp;gt; 2421, average -&amp;gt; 121
Compare {fami:qualia} with {fami:qualib} used time(totally) -&amp;gt; 3279, average -&amp;gt; 163

Group-3:
Compare {famia:qualia} with {famib:qualia} used time(totally) -&amp;gt; 2417, average -&amp;gt; 120
Compare {fami:qualia} with {fami:qualib} used time(totally) -&amp;gt; 3279, average -&amp;gt; 163
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Without patch 6200&amp;#93;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Group-1:
Compare {famia:qualia} with {famib:qualia} used time(totally) -&amp;gt; 2015, average -&amp;gt; 100
Compare {fami:qualia} with {fami:qualib} used time(totally) -&amp;gt; 2191, average -&amp;gt; 109

Group-12:
Compare {famia:qualia} with {famib:qualia} used time(totally) -&amp;gt; 2014, average -&amp;gt; 100
Compare {fami:qualia} with {fami:qualib} used time(totally) -&amp;gt; 2186, average -&amp;gt; 109

Group-13: 
Compare {famia:qualia} with {famib:qualia} used time(totally) -&amp;gt; 2012, average -&amp;gt; 100
Compare {fami:qualia} with {fami:qualib} used time(totally) -&amp;gt; 2186, average -&amp;gt; 109
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Plz share your comments&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13400462" author="lhofhansl" created="Mon, 25 Jun 2012 13:23:53 +0000"  >&lt;p&gt;So if I read that right 1.000.000 KV compares take 100ms without the patch and 121ms with the patch. I think that would be within the noise of any real operation.&lt;/p&gt;</comment>
                            <comment id="13400529" author="zhihyu@ebaysf.com" created="Mon, 25 Jun 2012 15:22:36 +0000"  >&lt;p&gt;@Lars:&lt;br/&gt;
What other tests do you think should be performed ?&lt;/p&gt;</comment>
                            <comment id="13400698" author="zhihyu@ebaysf.com" created="Mon, 25 Jun 2012 17:32:03 +0000"  >&lt;p&gt;@Stack:&lt;br/&gt;
Do you have further comments on the latest patches ?&lt;/p&gt;</comment>
                            <comment id="13401094" author="jeason" created="Tue, 26 Jun 2012 01:42:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;So if I read that right 1.000.000 KV compares take 100ms without the patch and 121ms with the patch. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;1,000,000 times called the below method(Will compare 2 times in each call), to be exact:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  private void assertKVLessWithoutRow(KeyValue.KeyComparator c, int common, KeyValue less,
      KeyValue greater) {
    int cmp = c.compareIgnoringPrefix(common, less.getBuffer(), less.getOffset()
        + KeyValue.ROW_OFFSET, less.getKeyLength(), greater.getBuffer(),
        greater.getOffset() + KeyValue.ROW_OFFSET, greater.getKeyLength());
    assertTrue(cmp &amp;lt; 0);
    cmp = c.compareIgnoringPrefix(common, greater.getBuffer(), greater.getOffset()
        + KeyValue.ROW_OFFSET, greater.getKeyLength(), less.getBuffer(),
        less.getOffset() + KeyValue.ROW_OFFSET, less.getKeyLength());
    assertTrue(cmp &amp;gt; 0);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks, Lars &amp;amp; Ted.&lt;/p&gt;</comment>
                            <comment id="13401124" author="jeason" created="Tue, 26 Jun 2012 02:46:10 +0000"  >&lt;p&gt;1,000,000 * 2 comparison, 100ms Vs 121ms. In real environment, this is a magnified value.&lt;br/&gt;
Since it&apos;s a bug, we should discuss whether this decline is tolerable. If not, how to optimize and fix this problem? &lt;/p&gt;</comment>
                            <comment id="13401167" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 04:45:12 +0000"  >&lt;p&gt;The extra Bytes.compareTo() call is behind the difference of performance.&lt;br/&gt;
If we can enhance the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; compareTo(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] buffer1, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset1, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length1,
      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] buffer2, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset2, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length2) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;so that it accepts four pairs of (offset, length) tuple, both column family and column qualifier can be compared in one trip using unsafe comparer.&lt;/p&gt;</comment>
                            <comment id="13401195" author="jeason" created="Tue, 26 Jun 2012 06:26:59 +0000"  >&lt;p&gt;Ya...You reminded me. I have one idea to optimize this:&lt;br/&gt;
1. if (left family length != right family length). Only compare column family is enough.&lt;br/&gt;
2. if (left family length == right family length). we can put them together to compare.&lt;br/&gt;
So no mattter which case, only one comparison will happen.&lt;br/&gt;
I will test it right now.&lt;/p&gt;</comment>
                            <comment id="13401205" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 06:58:27 +0000"  >&lt;p&gt;The above approach should work.&lt;/p&gt;</comment>
                            <comment id="13401304" author="jeason" created="Tue, 26 Jun 2012 11:23:24 +0000"  >&lt;p&gt;I tried my best to decrease the calculate times in this version of patch. And I changed the test case to test comparison directly&#65288;Do 1,000,000 compares each time&#65289;. &lt;br/&gt;
With the same steps:&lt;br/&gt;
1. Test comparing between &apos;famia:qualia&apos; with &apos;famib:qualia&apos;. Run for 1000000 times. Calculate the time consumed(Using System.currentTimeMillis() to get current time).&lt;br/&gt;
2. Test comparing between &apos;fami:qualia&apos; with &apos;fami:qualib&apos;. Run for 1,000,000 times. Calculate the time consumed.&lt;br/&gt;
3. Repeats 1~2 for 20 times. Accumulate the total consumed time at step 1 and step 2, and then calculate for the average time.&lt;/p&gt;

&lt;p&gt;Test code:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;   for (int loop = 0; loop &amp;lt; 20; loop++) {
      long start = System.currentTimeMillis();
      for (int i = 0; i &amp;lt; 1000000; i++) {
        compareIgnoringPrefix(c, 0, kvf_a, kvf_b);
      }
      long end = System.currentTimeMillis();
      long useTimeA = end - start;
      start = end;
      for (int i = 0; i &amp;lt; 1000000; i++) {
        compareIgnoringPrefix(c, 0, kvq_a, kvq_b);
      }
      end = System.currentTimeMillis();
      long useTimeB = end - start;
      totalTimeA += useTimeA;
      totalTimeB += useTimeB;
   }
 private void compareIgnoringPrefix(KeyValue.KeyComparator c, int common, KeyValue less,
      KeyValue greater) {
    int cmp = c.compareIgnoringPrefix(common, less.getBuffer(), less.getOffset()
        + KeyValue.ROW_OFFSET, less.getKeyLength(), greater.getBuffer(),
        greater.getOffset() + KeyValue.ROW_OFFSET, greater.getKeyLength());
  }	
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And this is the new result:	&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;without patch 6200&amp;#93;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Compare {famia:qualia} with {famib:qualia}, run for 1,000,000 times. used time -&amp;gt; 50
Compare {fami:qualia} with {fami:qualib}, run for 1,000,000 times. used time -&amp;gt; 58
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;with patch 6200&amp;#93;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Compare {famia:qualia} with {famib:qualia}, run for 1,000,000 times.  used time -&amp;gt; 56
Compare {fami:qualia} with {fami:qualib}, run for 1,000,000 times.  used time -&amp;gt; 64
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13401448" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 15:18:25 +0000"  >&lt;p&gt;Patch v4 reorders some assignments so that variables are calculated immediately before their usage.&lt;/p&gt;</comment>
                            <comment id="13401454" author="stack" created="Tue, 26 Jun 2012 15:26:18 +0000"  >&lt;p&gt;Thanks for taking time on perf Jieshan.  +1 on commit (It looks like you have enough tests).&lt;/p&gt;</comment>
                            <comment id="13401483" author="hadoopqa" created="Tue, 26 Jun 2012 16:16:31 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12533487/6200-trunk-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12533487/6200-trunk-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 6 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestServerCustomProtocol&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestAccessController&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2260//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2260//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2260//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2260//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2260//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2260//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2260//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2260//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13401508" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 16:43:33 +0000"  >&lt;p&gt;I ran the two tests listed above and they passed.&lt;/p&gt;

&lt;p&gt;@Jieshan:&lt;br/&gt;
Please prepare patches for 0.94, 0.92 and 0.90 branches based on patch v4.&lt;/p&gt;</comment>
                            <comment id="13401672" author="qwertymaniac" created="Tue, 26 Jun 2012 20:42:26 +0000"  >&lt;p&gt;(Linking &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5915&quot; title=&quot;Improve performance of KeyValue comparison&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5915&quot;&gt;&lt;del&gt;HBASE-5915&lt;/del&gt;&lt;/a&gt; since perf got involved in the discussion.)&lt;/p&gt;</comment>
                            <comment id="13401689" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 21:15:23 +0000"  >&lt;p&gt;Patch for 0.92&lt;/p&gt;</comment>
                            <comment id="13401692" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 21:19:30 +0000"  >&lt;p&gt;Patch for 0.94&lt;/p&gt;</comment>
                            <comment id="13401807" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 23:47:53 +0000"  >&lt;p&gt;Patch for 0.94 is same as the patch for trunk.&lt;/p&gt;

&lt;p&gt;I ran tests for 0.92 and they passed.&lt;/p&gt;

&lt;p&gt;Integrated to trunk, 0.94 and 0.92&lt;br/&gt;
Will integrate to 0.90 once the patch is ready.&lt;/p&gt;

&lt;p&gt;Thanks for the patch, Jieshan.&lt;/p&gt;

&lt;p&gt;Thanks for the review, Stack and Lars.&lt;/p&gt;</comment>
                            <comment id="13401829" author="hudson" created="Wed, 27 Jun 2012 00:22:52 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #70 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/70/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/70/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6200&quot; title=&quot;KeyComparator.compareWithoutRow can be wrong when families have the same prefix&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6200&quot;&gt;&lt;del&gt;HBASE-6200&lt;/del&gt;&lt;/a&gt; KeyComparator.compareWithoutRow can be wrong when families have the same prefix (Jieshan) (Revision 1354290)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13401841" author="jeason" created="Wed, 27 Jun 2012 00:47:28 +0000"  >&lt;p&gt;Thank you Ted. I will upload the patch for 90 immediately(I planed to make all the patches after review&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)..&lt;/p&gt;</comment>
                            <comment id="13401851" author="hudson" created="Wed, 27 Jun 2012 01:07:14 +0000"  >&lt;p&gt;Integrated in HBase-0.94 #284 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/284/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/284/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6200&quot; title=&quot;KeyComparator.compareWithoutRow can be wrong when families have the same prefix&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6200&quot;&gt;&lt;del&gt;HBASE-6200&lt;/del&gt;&lt;/a&gt; KeyComparator.compareWithoutRow can be wrong when families have the same prefix (Jieshan) (Revision 1354293)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13401860" author="jeason" created="Wed, 27 Jun 2012 01:38:24 +0000"  >&lt;p&gt;Patch for 90 based on V2. Local tests are running, I will tell the results once it finish..&lt;/p&gt;</comment>
                            <comment id="13401861" author="jeason" created="Wed, 27 Jun 2012 01:39:13 +0000"  >&lt;p&gt;Sorry.. It was made based on V4 not V2..&lt;/p&gt;</comment>
                            <comment id="13401868" author="hudson" created="Wed, 27 Jun 2012 01:46:54 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3077 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3077/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3077/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6200&quot; title=&quot;KeyComparator.compareWithoutRow can be wrong when families have the same prefix&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6200&quot;&gt;&lt;del&gt;HBASE-6200&lt;/del&gt;&lt;/a&gt; KeyComparator.compareWithoutRow can be wrong when families have the same prefix (Jieshan) (Revision 1354290)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13401927" author="hudson" created="Wed, 27 Jun 2012 03:11:51 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #459 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/459/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/459/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6200&quot; title=&quot;KeyComparator.compareWithoutRow can be wrong when families have the same prefix&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6200&quot;&gt;&lt;del&gt;HBASE-6200&lt;/del&gt;&lt;/a&gt; KeyComparator.compareWithoutRow can be wrong when families have the same prefix (Jieshan) (Revision 1354294)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13401943" author="jeason" created="Wed, 27 Jun 2012 03:45:07 +0000"  >&lt;p&gt;All tests passed for 90.&lt;/p&gt;</comment>
                            <comment id="13401951" author="zhihyu@ebaysf.com" created="Wed, 27 Jun 2012 04:02:43 +0000"  >&lt;p&gt;Integrated to 0.90 branch as well.&lt;/p&gt;</comment>
                            <comment id="13402008" author="ram_krish" created="Wed, 27 Jun 2012 07:08:19 +0000"  >&lt;p&gt;Resolving as committed to all branches.&lt;/p&gt;</comment>
                            <comment id="13403271" author="hudson" created="Thu, 28 Jun 2012 17:40:05 +0000"  >&lt;p&gt;Integrated in HBase-0.94-security #38 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/38/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/38/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6200&quot; title=&quot;KeyComparator.compareWithoutRow can be wrong when families have the same prefix&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6200&quot;&gt;&lt;del&gt;HBASE-6200&lt;/del&gt;&lt;/a&gt; KeyComparator.compareWithoutRow can be wrong when families have the same prefix (Jieshan) (Revision 1354293)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/KeyValue.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.94/src/test/java/org/apache/hadoop/hbase/TestKeyValue.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12553593">HBASE-5915</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12533539" name="6200-0.92.txt" size="9637" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 21:15:23 +0000"/>
                            <attachment id="12533540" name="6200-0.94.txt" size="8669" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 21:19:30 +0000"/>
                            <attachment id="12533577" name="6200-90.patch" size="9119" author="jeason" created="Wed, 27 Jun 2012 01:38:24 +0000"/>
                            <attachment id="12533237" name="6200-trunk-v2.patch" size="8737" author="zhihyu@ebaysf.com" created="Mon, 25 Jun 2012 02:17:15 +0000"/>
                            <attachment id="12533465" name="6200-trunk-v3.patch" size="8760" author="jeason" created="Tue, 26 Jun 2012 11:23:24 +0000"/>
                            <attachment id="12533487" name="6200-trunk-v4.txt" size="8747" author="zhihyu@ebaysf.com" created="Tue, 26 Jun 2012 15:18:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 17 Jun 2012 09:24:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>241948</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 25 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02h3b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12370</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>