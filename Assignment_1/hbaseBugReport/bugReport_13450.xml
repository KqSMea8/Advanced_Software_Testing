<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:43:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13450/HBASE-13450.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13450] Purge RawBytescomparator from the writers and readers for HBASE-10800</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13450</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Currently KeyValue.RAW_COMPARATOR is written in the Trailer of the HFiles.  Ideally this need not be persisted to the trailer of the Hfiles because only the ROW bloom and the meta index blocks uses this. Currently RAW_COMPARATOR is also of type KVComparator.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; would introduce CellComparator and would expect only cells to be compared.  We cannot have RAW_COMPARATOR a type of CellComparator.  Hence it is better to avoid writing the RAW_COMPARATOR to the FFT and whereever we need RAW_COMPARATOR we will directly use it as Bytes.BYTES_RAWCOMPARATOR.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12820029">HBASE-13450</key>
            <summary>Purge RawBytescomparator from the writers and readers for HBASE-10800</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12822298">HBASE-13500</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 Apr 2015 11:45:03 +0000</created>
                <updated>Fri, 24 Apr 2015 17:14:42 +0000</updated>
                            <resolved>Fri, 24 Apr 2015 10:46:05 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14493829" author="ram_krish" created="Tue, 14 Apr 2015 09:16:00 +0000"  >&lt;p&gt;Patch that removes the code in the FFT that deals with the legacyClassName ie. while setting the class name we would assign the actual class name only but for the BC cases we will support the legacyClassName. Also no where the KeyValue.RAWCOMPARATOR would be written to the FFT.  Still only after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; we could remove the KeyValue.RAWCOMPARATOR completely from the code. Waiting for that to be commited.&lt;/p&gt;</comment>
                            <comment id="14493875" author="hadoopqa" created="Tue, 14 Apr 2015 10:25:21 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12725185/HBASE-13450.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12725185/HBASE-13450.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 71536bdcc7d2d4b7a36a24ab9fa304cea4a8dda2.&lt;br/&gt;
  ATTACHMENT ID: 12725185&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1914 checkstyle errors (more than the master&apos;s current 1912 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestScanWithBloomError&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13694//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13694//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13694//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13694//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13694//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13694//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13694//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13694//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14505328" author="stack" created="Tue, 21 Apr 2015 17:32:37 +0000"  >&lt;p&gt;Failure looks related.&lt;/p&gt;

&lt;p&gt;Please edit the description. I do not follow.&lt;/p&gt;

&lt;p&gt;The binarySearch you add in Bytes is same as existing binarySearch only for the comparator part: i.e. the only diff is s/comparator/Bytes.BYTES_RAWCOMPARATOR/ Why reproduce the body? Why not call the existing binarySearch passing Bytes.BYTES_RAWCOMPARATOR as comparator.&lt;/p&gt;

&lt;p&gt;We are replacing raw comparator for rows. Is this going to be safe for meta file compares? (It looks like it going by change in HFileBlockIndex where if no comparator, we use Bytes but if a comparator, we use it). Is what is going on here a replacement of RawBytesComparator with Bytes.RAWCOMPARATOR?&lt;/p&gt;

&lt;p&gt;Why write &apos;if(&apos; and then follow it with &apos;else {&apos;... i.e. sometimes you have a space and other times not (In the rest of the code, the style is to have a space).&lt;/p&gt;

&lt;p&gt;What is RAW_BYTES in the below? Is this Bytes.RAWCOMPARATOR?&lt;/p&gt;

&lt;p&gt;        // Return null for RAW_BYTES&lt;/p&gt;


&lt;p&gt;Is this right?&lt;/p&gt;

&lt;p&gt;889	            if (bloomType == BloomType.ROW) &lt;/p&gt;
{
890	              res = (Bytes.BYTES_RAWCOMPARATOR.compare(bloomKey, bloomKeyOffset, bloomKeyLen,
891	                  lastBloomKey, lastBloomKeyOffset, lastBloomKeyLen) &amp;lt;= 0);
892	            }
&lt;p&gt; else &lt;/p&gt;
{
893	              res = (generalBloomFilterWriter.getComparator().compareFlatKey(bloomKey,
894	                  bloomKeyOffset, bloomKeyLen, lastBloomKey, lastBloomKeyOffset, lastBloomKeyLen)) &amp;lt;= 0;
895	            }

&lt;p&gt;If row bloom, we use bytes... but if this is a meta table file, we should use comparator ?&lt;/p&gt;

&lt;p&gt;Rather than repeat the &amp;lt;= 0 test twice, why not do it once after you&apos;ve done the compares rather than do&lt;/p&gt;

&lt;p&gt;	            if (res) {&lt;/p&gt;

&lt;p&gt;Hmmm... &lt;/p&gt;

&lt;p&gt;      bloomType == BloomType.ROWCOL ? KeyValue.COMPARATOR : null);&lt;/p&gt;

&lt;p&gt;but.. it is replacing...&lt;/p&gt;

&lt;p&gt;	        bloomType == BloomType.ROWCOL ? KeyValue.COMPARATOR : KeyValue.RAW_COMPARATOR);&lt;/p&gt;

&lt;p&gt;... so, raw comparator is &apos;ok&apos; if a row-only bloom. How does this work w/ meta keys?&lt;/p&gt;

&lt;p&gt;Rather than do this in a few places....&lt;/p&gt;

&lt;p&gt;246	      if (comparator != null) &lt;/p&gt;
{
247	        Bytes.writeByteArray(out, Bytes.toBytes(comparator.getClass().getName()));
248	      }
&lt;p&gt; else {&lt;br/&gt;
249	        Bytes.writeByteArray(out, Bytes.toBytes(Bytes.BYTES_RAWCOMPARATOR.getClass().getName()));&lt;br/&gt;
250	&lt;/p&gt;

&lt;p&gt;just pass comparator even if it is null and let the method internally figure which comparator to use...&lt;/p&gt;



</comment>
                            <comment id="14505342" author="anoop.hbase" created="Tue, 21 Apr 2015 17:42:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;If row bloom, we use bytes... but if this is a meta table file, we should use comparator ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;so, raw comparator is &apos;ok&apos; if a row-only bloom. How does this work w/ meta keys?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We are safe here because we don&apos;t have bloom for META. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14505393" author="stack" created="Tue, 21 Apr 2015 18:05:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;We are safe here because we don&apos;t have bloom for META. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I came to that realization on re-review of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; just now. Needs comment then I&apos;d say and we should probably make blooms work for meta but that is another issue. Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=anoop.hbase&quot; class=&quot;user-hover&quot; rel=&quot;anoop.hbase&quot;&gt;Anoop Sam John&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14505407" author="ram_krish" created="Tue, 21 Apr 2015 18:09:35 +0000"  >&lt;p&gt;Thanks for the review.  I will update the patch.  Yes META does not have bloom keys as Anoop said.&lt;/p&gt;</comment>
                            <comment id="14506446" author="ram_krish" created="Wed, 22 Apr 2015 05:23:48 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
246	&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparator != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
{ 247	Bytes.writeByteArray(out, Bytes.toBytes(comparator.getClass().getName())); 248	}
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
249	Bytes.writeByteArray(out, Bytes.toBytes(Bytes.BYTES_RAWCOMPARATOR.getClass().getName()));
250
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This method is already Bytes.writeByteArray, a generic static Util. It is upto us pass a byte[] to it.  I think it is better this way, right?&lt;/p&gt;

&lt;p&gt;The major part is that after working on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; further, found that Bytes.java is public, stable API and the &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; binarySearch(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] arr, Cell key, RawComparator&amp;lt;Cell&amp;gt; comparator) 
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; binarySearch(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [][]arr, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; []key, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset,
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length, RawComparator&amp;lt;?&amp;gt; comparator) 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;should be changed to Comparator&amp;lt;?&amp;gt; or have one API with Comparator&amp;lt;Cell&amp;gt; and other with RawComparator&amp;lt;?&amp;gt;.  Now that RAW_COMPARATOR is not going be of type CellComparator this API will be changed.  What can we do there?&lt;/p&gt;</comment>
                            <comment id="14506505" author="ram_krish" created="Wed, 22 Apr 2015 06:19:48 +0000"  >&lt;p&gt;Updated the comments.  Additional to the previous patch removed getComparator() in BloomFilterBase which I thought of removing after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14506662" author="hadoopqa" created="Wed, 22 Apr 2015 08:47:37 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12727138/HBASE-13450_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12727138/HBASE-13450_2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 23960207527b685609cd01259efbeb98f077b209.&lt;br/&gt;
  ATTACHMENT ID: 12727138&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1902 checkstyle errors (more than the master&apos;s current 1898 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.token.TestGenerateDelegationToken&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13771//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13771//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13771//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13771//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13771//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13771//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13771//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13771//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14507472" author="ram_krish" created="Wed, 22 Apr 2015 17:23:55 +0000"  >&lt;p&gt;Test failure seems not related to this.&lt;/p&gt;</comment>
                            <comment id="14507734" author="stack" created="Wed, 22 Apr 2015 19:33:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;It is upto us pass a byte[] to it. I think it is better this way, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why write anything if comparator is null?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What can we do there?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Deprecate the old and add new method (change the order of the params so you can do override or come up with new method name).&lt;/p&gt;
</comment>
                            <comment id="14507745" author="stack" created="Wed, 22 Apr 2015 19:41:55 +0000"  >&lt;p&gt;Let Bytes.binarySearch take null for comparator and when this is case, use Bytes.RAW_COMPARATOR for default rather than do checks outside the method before calling into it.&lt;/p&gt;

&lt;p&gt; // As there is no BLOOM for META we could go with the Bytes.BYTES_COMPARATOR&lt;/p&gt;

&lt;p&gt;On above, please improve. Suggest: &quot;hbase:meta does not use blooms so it is safe to do raw byte compares without having to do interpretation of the hbase:metas special row formatting.&lt;/p&gt;</comment>
                            <comment id="14508785" author="ram_krish" created="Thu, 23 Apr 2015 10:10:50 +0000"  >&lt;p&gt;Addresses the review comments.  I can commit this first before changing &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; also. Should not be a problem. Considering we have deprecated the APIs in Bytes.java related to binarySearch().&lt;/p&gt;</comment>
                            <comment id="14508786" author="ram_krish" created="Thu, 23 Apr 2015 10:12:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;Why write anything if comparator is null?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Felt that the Bytes.writeByteArray would need some valid byte[].  But saw that it writes a 0 vint if the byte[] is null.  So now for the Bytes.RAW_COMPARATOR case we will not write any class name for the Bloom case.&lt;/p&gt;</comment>
                            <comment id="14508998" author="hadoopqa" created="Thu, 23 Apr 2015 12:55:50 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12727582/HBASE-13450_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12727582/HBASE-13450_3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit bcb2a279c49213bf4eb90a7602a01ff5d0810915.&lt;br/&gt;
  ATTACHMENT ID: 12727582&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1904 checkstyle errors (more than the master&apos;s current 1898 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13785//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13785//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13785//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13785//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13785//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13785//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13785//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13785//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14509050" author="stack" created="Thu, 23 Apr 2015 13:34:17 +0000"  >&lt;p&gt;Why is the passing of a comparator binarySearch deprecated?&lt;/p&gt;

&lt;p&gt;2079	  @Deprecated&lt;/p&gt;

&lt;p&gt;Should say why in the (missing) @Deprecated that should be added to javadoc pointing folks at alternatives to use.&lt;/p&gt;

&lt;p&gt;Ditto for the later binarySearch method that is deprecated (Is this only place that references Cell in Bytes?  Would be good to get Cell out of Bytes)&lt;/p&gt;

&lt;p&gt;Do the overrides work? Isn&apos;t RawComparator&amp;lt;Cell&amp;gt; a subclass of Comparator&amp;lt;Cell&amp;gt;?  (The erasure would null out Cell?)  If it does, all well and good.&lt;/p&gt;

&lt;p&gt;You could write the below:&lt;/p&gt;

&lt;p&gt;586	      if (comparatorClass != null) &lt;/p&gt;
{
587	        return comparatorClass.newInstance();
588	      }
&lt;p&gt; else &lt;/p&gt;
{
589	        return null;
590	      }

&lt;p&gt;as: return comparatorClass != null? comparatorClass.newInstance: null;&lt;/p&gt;

&lt;p&gt;In below...&lt;/p&gt;

&lt;p&gt;We could use Bytes.BYTES_RAWCOMPARATOR for ROW Bloom&lt;/p&gt;

&lt;p&gt;instead of &apos;could&apos; say, &apos;can safely&apos; (two places)&lt;/p&gt;

&lt;p&gt;Above can be fixed on commit. +1.&lt;/p&gt;</comment>
                            <comment id="14509466" author="ram_krish" created="Thu, 23 Apr 2015 18:01:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do the overrides work? Isn&apos;t RawComparator&amp;lt;Cell&amp;gt; a subclass of Comparator&amp;lt;Cell&amp;gt;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I will not do this override. Will copy the implementation once again to the method accepting RawComparator.  Because we are not going to remove KVComparator even after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; and that is going to be deprecated.  In the current code KVComparator implements RawComparator&amp;lt;Cell&amp;gt; and CellComparator implements Comparator&amp;lt;Cell&amp;gt;. After &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; there will not be any RawComparator&amp;lt;Cell&amp;gt;.  So we will leave that API as it is - only thing is the implementation is going to repeat.  I think that would be better.  Thanks for the reviews.  Will commit unless objections.&lt;/p&gt;</comment>
                            <comment id="14509494" author="ram_krish" created="Thu, 23 Apr 2015 18:12:07 +0000"  >&lt;p&gt;Updated patch. Fixes checkstyle comments also.  Will wait for QA run and commit in the morning.  With this patch in I will rebase &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; and ensure all those review comments are covered.&lt;/p&gt;</comment>
                            <comment id="14509775" author="hadoopqa" created="Thu, 23 Apr 2015 20:52:13 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12727664/HBASE-13450_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12727664/HBASE-13450_4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit bcb2a279c49213bf4eb90a7602a01ff5d0810915.&lt;br/&gt;
  ATTACHMENT ID: 12727664&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1899 checkstyle errors (more than the master&apos;s current 1898 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13787//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13787//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13787//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13787//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13787//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13787//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13787//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13787//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14510506" author="anoop.hbase" created="Fri, 24 Apr 2015 06:01:43 +0000"  >&lt;p&gt;Give me some time to go through the latest patch Ram.&lt;/p&gt;</comment>
                            <comment id="14510579" author="anoop.hbase" created="Fri, 24 Apr 2015 07:03:11 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; binarySearch(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][] arr, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] key, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; binarySearch(arr, key, offset, length, Bytes.BYTES_RAWCOMPARATOR);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So while doing &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; You will conevrt the calling method to take CellComparator?  Then this method impl also will change?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  * @deprecated {@link Bytes#binarySearch(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[][], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)}
  @Deprecated
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; binarySearch(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [][]arr, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; []key, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset,
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length, RawComparator&amp;lt;?&amp;gt; comparator) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This method is used from BlockIndexReader with a KVComparator. Yes we have to compare as KV key not as plain bytes. So all such places has to use the API which takes CellComparator? May be we have to direct that also in @deprecated?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;public static int binarySearch(byte[][] arr, Cell key, Comparator&amp;lt;Cell&amp;gt; comparator) {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Can we go more generic way?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &amp;lt;T&amp;gt;  &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; binarySearch(T[] arr, T key, Comparator&amp;lt;T&amp;gt; comparator) {
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; low = 0;
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; high = arr.length - 1;
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (low &amp;lt;= high) {
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; mid = (low + high) &amp;gt;&amp;gt;&amp;gt; 1;
      &lt;span class=&quot;code-comment&quot;&gt;// we have to compare in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; order, because the comparator order
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// has special logic when the &apos;left side&apos; is a special key.
&lt;/span&gt;      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; cmp = comparator.compare(key, arr[mid]);
      &lt;span class=&quot;code-comment&quot;&gt;// key lives above the midpoint
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cmp &amp;gt; 0)
        low = mid + 1;
      &lt;span class=&quot;code-comment&quot;&gt;// key lives below the midpoint
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cmp &amp;lt; 0)
        high = mid - 1;
      &lt;span class=&quot;code-comment&quot;&gt;// BAM. how often does &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; really happen?
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; mid;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; -(low + 1);
  }
  &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;  The point is when you are going to have key as Cell, pass an array of Cells. Similarly and array of byte[] can be compared against a single byte[] key. The former might be useful in block index area and later in some bloom area? Not sure&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if (comparatorClassName.equals(KeyValue.RAW_COMPARATOR.getClass().getName())) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
572	        // Return null for Bytes.BYTES_RAWCOMPARATOR
573	        return null;
574	      }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Similar way you want to return null for &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparatorClassName.equals(KeyValue.RAW_COMPARATOR.getLegacyKeyComparatorName())) {
        comparatorClassName = KeyValue.RAW_COMPARATOR.getClass().getName();
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14510655" author="ram_krish" created="Fri, 24 Apr 2015 08:44:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;So while doing &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; You will conevrt the calling method to take CellComparator? Then this method impl also will change?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ideally I would just call the API without any comparator.  Expecting it to work with Bytes.BYTES_RAWCOMPARATOR.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;May be we have to direct that also in @deprecated?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I would think that for any KV based comparison we will move to the binarySearch with CellComparator only. (for now).  After we change even the blockKeys to be Cell based then ideally we will not end up in this case of byte[](kv format) and both would become cells.  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;public static &amp;lt;T&amp;gt;  int binarySearch(T[] arr, T key, Comparator&amp;lt;T&amp;gt; comparator) {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This thing is fine.  I wanted to do it with Comparator&amp;lt;?&amp;gt;. But if we are ensuring that both sides are Cells then we may not need this much generic API?  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Similar way you want to return null for&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ideally this case is not going to happen.  But better to add being a static method.  Will add that in the else if just above this if condition.&lt;/p&gt;</comment>
                            <comment id="14510659" author="ram_krish" created="Fri, 24 Apr 2015 08:45:58 +0000"  >&lt;blockquote&gt;&lt;p&gt;Ideally I would just call the API without any comparator. Expecting it to work with Bytes.BYTES_RAWCOMPARATOR.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think with the current way in patch we may have to give an implementation for this. Once the deprecated method goes off. &lt;/p&gt;</comment>
                            <comment id="14510666" author="ram_krish" created="Fri, 24 Apr 2015 08:49:51 +0000"  >&lt;p&gt;This tweak in the API we can also revisit after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt;. I actually wanted to deprecate the Bytes#binarySearch() after &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10800&quot; title=&quot;Use CellComparator instead of KVComparator&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10800&quot;&gt;&lt;del&gt;HBASE-10800&lt;/del&gt;&lt;/a&gt; or along with that so that we know how we are going to use it.&lt;/p&gt;</comment>
                            <comment id="14510782" author="ram_krish" created="Fri, 24 Apr 2015 10:31:30 +0000"  >&lt;p&gt;This is what I will commit to 2.0.&lt;/p&gt;</comment>
                            <comment id="14510792" author="ram_krish" created="Fri, 24 Apr 2015 10:46:05 +0000"  >&lt;p&gt;Thanks for all the reviews. Pushed to master along with an addendum to remove an unused import in BloomFilterBase to avoid checkstyle.&lt;/p&gt;</comment>
                            <comment id="14510942" author="hadoopqa" created="Fri, 24 Apr 2015 12:18:32 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12727880/HBASE-13450_5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12727880/HBASE-13450_5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e1cb405adc4da68b6bd6ea68b2d5073f6c8fd7c3.&lt;br/&gt;
  ATTACHMENT ID: 12727880&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.1 2.5.2 2.6.0)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1901 checkstyle errors (more than the master&apos;s current 1900 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13796//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13796//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13796//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13796//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13796//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13796//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/13796//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/13796//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14511077" author="stack" created="Fri, 24 Apr 2015 13:43:13 +0000"  >&lt;p&gt;In the below comment:&lt;/p&gt;

&lt;p&gt;  // We could write the actual class name from 2.0 onwards and handle BC&lt;/p&gt;

&lt;p&gt;... should you add &quot;...or null if we are doing memcmp/BYTES_RAWCOMPARATOR&quot; ?&lt;/p&gt;

&lt;p&gt;For ....&lt;/p&gt;

&lt;p&gt;567	        return null;&lt;/p&gt;

&lt;p&gt;... we are returning mid-method. Not good form usually.   We will return null if&lt;/p&gt;

&lt;p&gt;comparatorClassName.equals(KeyValue.RAW_COMPARATOR.getClass().getName())&lt;/p&gt;

&lt;p&gt;... or if &lt;/p&gt;

&lt;p&gt;      } else if (comparatorClassName.equals(KeyValue.RAW_COMPARATOR.getLegacyKeyComparatorName())) {&lt;/p&gt;

&lt;p&gt;... at a minimum comment why either of these means we return null else it is a little cryptic.&lt;/p&gt;

&lt;p&gt;Above nits can be addressed on commit.&lt;/p&gt;

&lt;p&gt;Is the checkstyle yours? Or the test failure?&lt;/p&gt;


</comment>
                            <comment id="14511094" author="hudson" created="Fri, 24 Apr 2015 13:55:13 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6407 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6407/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6407/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13450&quot; title=&quot;Purge RawBytescomparator from the writers and readers for HBASE-10800&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13450&quot;&gt;&lt;del&gt;HBASE-13450&lt;/del&gt;&lt;/a&gt; - Purge RawBytescomparator from the writers and readers for (ramkrishna: rev a4fa930843896f6c134fe9372e75e79b03611d73)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/FixedFileTrailer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilterFactory.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilterWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/CompoundBloomFilterBase.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreFile.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/ByteBloomFilter.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilterBase.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-13450&quot; title=&quot;Purge RawBytescomparator from the writers and readers for HBASE-10800&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-13450&quot;&gt;&lt;del&gt;HBASE-13450&lt;/del&gt;&lt;/a&gt; - Addendum to remove an Unused import (ramkrishna: rev 40a80c1fe0b4cf8d64ada406f256e0e289bc9ebc)&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/util/BloomFilterBase.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14511190" author="anoop.hbase" created="Fri, 24 Apr 2015 15:08:54 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
comparatorClassName.equals(KeyValue.RAW_COMPARATOR.getClass().getName())
... or &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (comparatorClassName.equals(KeyValue.RAW_COMPARATOR.getLegacyKeyComparatorName())) {
... at a minimum comment why either of these means we &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; it is a little cryptic
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Actually to the FFT we write the table related comparator. ie. CellComparator or MetaCellComparator.  So within the FFT we will never get RawBytesComparator or Bytes.BYTES_RAWCOMPARATOR.  This will come in case of ROW_COL bloom and that we will write/read in CompoundBloomFilter and related area.  We just use FFT&apos;s static methods from Bloom area.   We can avoid that so that FFT no need to handle the RawBytesComparator.   Can do this clean up later in some other subtask.&lt;/p&gt;</comment>
                            <comment id="14511312" author="ram_krish" created="Fri, 24 Apr 2015 16:32:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is the checkstyle yours? Or the test failure?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I committed the addendum too - so there is no checkstyle problem now.  &lt;br/&gt;
See the build after commit, it is successful.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;... should you add &quot;...or null if we are doing memcmp/BYTES_RAWCOMPARATOR&quot; ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This would not come in case of normal FFT. The above comment is for the norma HFiles which is either KVComparator or METAComparator.&lt;br/&gt;
The other nit that you have said about the &apos;null&apos; returning in the middle I can do that as part of next patch.&lt;/p&gt;</comment>
                            <comment id="14511357" author="stack" created="Fri, 24 Apr 2015 17:14:42 +0000"  >&lt;p&gt;ok&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12725185" name="HBASE-13450.patch" size="14160" author="ram_krish" created="Tue, 14 Apr 2015 09:16:00 +0000"/>
                            <attachment id="12727138" name="HBASE-13450_2.patch" size="17325" author="ram_krish" created="Wed, 22 Apr 2015 06:19:48 +0000"/>
                            <attachment id="12727582" name="HBASE-13450_3.patch" size="18848" author="ram_krish" created="Thu, 23 Apr 2015 10:10:50 +0000"/>
                            <attachment id="12727664" name="HBASE-13450_4.patch" size="20482" author="ram_krish" created="Thu, 23 Apr 2015 18:12:07 +0000"/>
                            <attachment id="12727880" name="HBASE-13450_5.patch" size="20865" author="ram_krish" created="Fri, 24 Apr 2015 10:31:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Apr 2015 10:25:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 34 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2d3fj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>