<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:22:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4844/HBASE-4844.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4844] Coprocessor hooks for log rolling</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4844</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In order to eventually do point in time recovery we need a way to reliably back up the logs. Rather than adding some hard coded changes, we can provide coprocessor hooks and folks can implement their own policies.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12532250">HBASE-4844</key>
            <summary>Coprocessor hooks for log rolling</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Nov 2011 01:23:25 +0000</created>
                <updated>Mon, 2 Jun 2014 22:45:26 +0000</updated>
                            <resolved>Mon, 2 Jun 2014 22:45:26 +0000</resolved>
                                    <version>0.94.0</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13160698" author="lhofhansl" created="Thu, 1 Dec 2011 07:07:42 +0000"  >&lt;p&gt;In part that can be done already using TimeToLiveLogCleaner and configure a long TTL (looks like the default is 600000ms = 10mins), or a custom log cleaner.&lt;/p&gt;

&lt;p&gt;There are also WALActionListeners, although it looks like they can only be added via code changes to HRegionServer (see getWALActionListeners()).&lt;/p&gt;

&lt;p&gt;So I am on the fence with this now. On one hand it would be nice to be able to implement some arbitrary actions on log rolling without touching the HBase code, on the other hand it&apos;ll likely duplicate logic that already exists.&lt;/p&gt;

&lt;p&gt;The interface in WALObserver would be very simple:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  void postLogRoll(ObserverContext&amp;lt;WALCoprocessorEnvironment&amp;gt; ctx,
      Path oldPath, Path newPath) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

  void postLogArchive(ObserverContext&amp;lt;WALCoprocessorEnvironment&amp;gt; ctx,
      Path oldPath, Path newPath) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There would be no &quot;pre&quot; method, as there is no way really do anything useful outside of the core HBase code (at least I cannot think of anything).&lt;/p&gt;

&lt;p&gt;Opinions?&lt;/p&gt;</comment>
                            <comment id="13161461" author="stack" created="Fri, 2 Dec 2011 07:08:43 +0000"  >&lt;p&gt;A pre could alter the edit?   Remove it?  Accumulate a bunch of them and do some summing before letting it out into the WAL?&lt;/p&gt;</comment>
                            <comment id="13161462" author="stack" created="Fri, 2 Dec 2011 07:09:31 +0000"  >&lt;p&gt;Adding a WALObserver would necessitate adding the implementation to classpath and restarting regionserver?&lt;/p&gt;</comment>
                            <comment id="13161808" author="lhofhansl" created="Fri, 2 Dec 2011 19:38:08 +0000"  >&lt;p&gt;@stack: The hooks here would be specific to log rolling. There are already hooks that are called per log edit.&lt;br/&gt;
My thought was that without much tighter integration into the core, there would be nothing useful the coprocessor hooks could do with the log &lt;b&gt;files&lt;/b&gt; (can&apos;t move them, delete them, change them, as the rest of the system could not be altered accordingly to deal with that).&lt;br/&gt;
But maybe you&apos;re right and the pre hooks should be added as well.&lt;/p&gt;

&lt;p&gt;Yes, adding a WALObserver would require a restart of the regionserver(s), there is no dynamic loading (as far as I can see) for WALObserver, currently.&lt;/p&gt;

&lt;p&gt;How do folks backup WALs now? Have some watcher process that watches the .logs and .oldlogs directory?&lt;/p&gt;</comment>
                            <comment id="13163975" author="stack" created="Tue, 6 Dec 2011 23:43:13 +0000"  >&lt;p&gt;We don&apos;t back up WALs.&lt;/p&gt;

&lt;p&gt;The logroller could signal new log to copy?  Then the copying process could look in .logs (and in .oldlogs in case it got archived) for the log to copy.  You&apos;d need to add a plugin to logcleaner so master didn&apos;t clean the logs from .oldlogs before it&apos;d been backedup (can we add a generic plugin to the master that won&apos;t delete logs if enabled &amp;#8211; then backup can do the deletes instead).&lt;/p&gt;</comment>
                            <comment id="13164022" author="lhofhansl" created="Wed, 7 Dec 2011 00:56:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;The logroller could signal new log to copy?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, and it could trigger a coprocessor hook to do the actual work of archiving. The coprocessor would get the path to the old file and then copy it somewhere else.&lt;br/&gt;
Looking at the code, there&apos;re races, though. Until the HLogs.writer is set to the new writer, all writes would still go to the old file. So if the coprocessor post hook is before that and it makes a copy of the file some edit might be missed (that go into the old file after it was copied, but before the writer was switched over).&lt;br/&gt;
Wouldn&apos;t it be nice if we had hardlinks in HDFS? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;So I think the coprocessor post hook should be called after the HLog.writer assignment. If it did the copy synchronously it only needs to finish before the next log for the same regionserver is rolled (still a race, though).&lt;/p&gt;

&lt;p&gt;I&apos;ll attach a very simple patch tonight or tomorrow morning and then folks can poke holes in it.&lt;/p&gt;</comment>
                            <comment id="13486745" author="janvanbesien@ngdata.com" created="Tue, 30 Oct 2012 08:52:03 +0000"  >&lt;p&gt;I have a use case which would benefit from this feature as well.&lt;/p&gt;

&lt;p&gt;In a coprocessor, I want to do some &quot;eventual execution&quot; of actions related to Puts/Deletes on HBase. The actions should be executed &quot;at least once&quot; and should only execute if the actual HBase operation was succesful.&lt;/p&gt;

&lt;p&gt;I can use regular coprocessor functionality to get notified of Puts and Deletes etc, but this doesn&apos;t give me guaranteed (eventual) execution of my actions because the region server might go down in between the HLog write and the coprocessor being called.&lt;/p&gt;

&lt;p&gt;So to solve this problem, I want to read from the HLog files. This will give me a guarantee that I &quot;see&quot; everything that happened on HBase.&lt;/p&gt;

&lt;p&gt;In a way it is very similar to how HBase replication works. So I can also translate my needs like this: &quot;what functionality would be required for coprocessors such that HBase replication can be implemented as a coprocessor rather than &apos;in&apos; HBase&quot;.&lt;/p&gt;</comment>
                            <comment id="13486809" author="janvanbesien@ngdata.com" created="Tue, 30 Oct 2012 11:07:59 +0000"  >&lt;p&gt;I created a fairly straightforward patch to add the two discussed methods to the WALObserver. It simply makes the calls whenever the similar methods in WALActionListener are also called. It seems to work, but maybe I overlooked some things I don&apos;t know of?&lt;/p&gt;

&lt;p&gt;I included a basic test for the postLogRoll method.&lt;/p&gt;</comment>
                            <comment id="13486828" author="hadoopqa" created="Tue, 30 Oct 2012 12:09:24 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12551335/HBASE-4844__postLogRoll_and_postLogArchive_functionality_in_WALObserver.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12551335/HBASE-4844__postLogRoll_and_postLogArchive_functionality_in_WALObserver.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 85 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3180//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13487008" author="zhihyu@ebaysf.com" created="Tue, 30 Oct 2012 16:54:12 +0000"  >&lt;p&gt;In the patch, WALObserver methods are called after WALActionsListener methods are called.&lt;br/&gt;
When replication is enabled, it would be interesting to consider various failure scenarios in Jan Van&apos;s use case.&lt;/p&gt;</comment>
                            <comment id="13487610" author="janvanbesien@ngdata.com" created="Wed, 31 Oct 2012 08:12:48 +0000"  >&lt;p&gt;I have never really given the combination of my use case with replication much thought, but I think they should be orthogonal to each other? Everything that ends up in the HLog should eventually get replicated and should also eventually be seen in my coprocessor for my use case.&lt;/p&gt;

&lt;p&gt;But your remark made me realize when thinking of failure scenarios that both the WALActionsListener.postWALWriter and/or the WALObserver.postWALWriter calls might fail to notify that a HLog file was rolled.&lt;/p&gt;

&lt;p&gt;Am I correct that in the replication code, the recovery mechanism to recover HLog files from failed region servers takes care of this issue?&lt;/p&gt;

&lt;p&gt;If so, I think I&apos;ll need a similar mechanism in the implementation for my use case.&lt;/p&gt;

&lt;p&gt;Jan&lt;/p&gt;</comment>
                            <comment id="14016001" author="lhofhansl" created="Mon, 2 Jun 2014 22:45:26 +0000"  >&lt;p&gt;I can&apos;t even remember why I needed this. Nobody else interested it seems... Closing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12551335" name="HBASE-4844__postLogRoll_and_postLogArchive_functionality_in_WALObserver.patch" size="9602" author="janvanbesien@ngdata.com" created="Tue, 30 Oct 2012 11:08:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Dec 2011 07:08:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>217983</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 28 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dbnz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>75819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Addition of two methods to the WALObserver to be notified of HLog rotation (postLogRoll) and HLog archiving (postLogArchive).</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>