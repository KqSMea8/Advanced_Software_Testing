<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:26:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5268/HBASE-5268.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5268] Add delete column prefix delete marker</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5268</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is another part missing in the &quot;wide row challenge&quot;.&lt;br/&gt;
Currently entire families of a row can be deleted or individual columns or versions.&lt;br/&gt;
There is no facility to mark multiple columns for deletion by column prefix.&lt;/p&gt;

&lt;p&gt;Turns out that be achieve with very little code (it&apos;s possible that I missed some of the new delete bloom filter code, so please review this thoroughly). I&apos;ll attach a patch soon, just working on some tests now.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12539568">HBASE-5268</key>
            <summary>Add delete column prefix delete marker</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Jan 2012 05:43:03 +0000</created>
                <updated>Tue, 31 Jan 2012 22:44:39 +0000</updated>
                            <resolved>Sat, 28 Jan 2012 05:23:52 +0000</resolved>
                                                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13191916" author="stack" created="Tue, 24 Jan 2012 06:10:54 +0000"  >&lt;p&gt;Give an example of what you mean please Lars (I think I know what you are on about....)&lt;/p&gt;</comment>
                            <comment id="13191958" author="lhofhansl" created="Tue, 24 Jan 2012 06:59:28 +0000"  >&lt;p&gt;@Stack... Here&apos;s an example.&lt;br/&gt;
Say you have columns X100, X101, X102, ..., X199, and X200, X201, X202, ..., X299, X300, ..., in a row R, all in the same column family.&lt;br/&gt;
(I&apos;d have this if I modeled rows inside HBase rows by using a prefix to identify the inner rows.)&lt;/p&gt;

&lt;p&gt;Now I want to be able to delete all columns that start with X1. Without a prefix delete marker I&apos;d have to place 100 column delete markers. With a prefix marker I can just place one marker for the X1 prefix.&lt;br/&gt;
If the prefix is empty, this would degenerate into the same behavior as a family marker (albeit less efficient).&lt;/p&gt;</comment>
                            <comment id="13191997" author="lhofhansl" created="Tue, 24 Jan 2012 08:03:27 +0000"  >&lt;p&gt;Here&apos;s a patch. The bulk is testing.&lt;/p&gt;

&lt;p&gt;During testing with delete marker types I found one strange scenario:&lt;br/&gt;
Say you&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;put columns 123, 1234, 12345&lt;/li&gt;
	&lt;li&gt;then delete with prefix 123&lt;/li&gt;
	&lt;li&gt;then put column 123 again&lt;/li&gt;
	&lt;li&gt;now delete 123 with a normal column marker&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Now what happens is that the ScanDeleteTracker sees the normal column delete marker first, then it will see the new put for column 123. Now it will conclude that it is done with all versions of column 123, and thus seeks ahead to the next column. During that process the prefix marker with prefix 123 is also skipped. And hence 1234 and 12345 are no longer marked as deleted.&lt;/p&gt;

&lt;p&gt;This only happens in exactly this scenario.&lt;/p&gt;

&lt;p&gt;I cannot fix this without de-optimizing column delete markers or adding complicated logic to sort prefix delete marker always before all prefixes they affect regardless of the timestamp.&lt;/p&gt;

&lt;p&gt;I added this scenario as a unit test.&lt;/p&gt;</comment>
                            <comment id="13192016" author="lhofhansl" created="Tue, 24 Jan 2012 08:39:17 +0000"  >&lt;p&gt;When I muck with KeyValue.KeyComparator to always sort prefix delete marker before all columns with the same prefix regardless of TS, then I see the opposite scenario that in the setup above the column delete marker is ignored and hence the newly put version of column 123 is visible again. This is the because the column marker is considered less specific and hence won&apos;t override the column prefix marker, even though it is newer. Arghh &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;So ScanDeleteTracker would need to be completely refactored in order to keep prefix markers separate from column and version markers.&lt;br/&gt;
The question is: Is that worth the risk, added code entropy, and effort, or can we document that prefix delete markers should not be used together with column delete markers (where the column markers column is identical to the prefix marker&apos;s column prefix, which does not make much sense anyway)?&lt;/p&gt;</comment>
                            <comment id="13192255" author="lhofhansl" created="Tue, 24 Jan 2012 16:26:12 +0000"  >&lt;p&gt;I&apos;ll work on a fully correct patch today, and then we can decide whether it is worth the extra complexity. I find this first patch compelling, because (1) is very small and easy to verify and (2) it keeps column prefix delete markers sorted (by timestamp) with the KVs they affect.&lt;br/&gt;
In the bigger patch, neither will be true anymore.&lt;/p&gt;</comment>
                            <comment id="13192331" author="lhofhansl" created="Tue, 24 Jan 2012 18:12:39 +0000"  >&lt;p&gt;This version has no anomalies. And it actually isn&apos;t so bad. The only part I do not like is the change to the sorting in KeyValye.KeyComparator.&lt;/p&gt;

&lt;p&gt;Please let me know what you think.&lt;/p&gt;</comment>
                            <comment id="13192471" author="lhofhansl" created="Tue, 24 Jan 2012 20:17:54 +0000"  >&lt;p&gt;Sorting prefix markers first has another problem.&lt;br/&gt;
Placing a prefix marker for 123 at T and then another for 1234 at T+1 will ignore the 2nd one even though it is for newer timestamp. To fix that ScanDeleteTracker would need to keep track of delete marker that are prefixes of each other and would increase memory requirements.&lt;/p&gt;

&lt;p&gt;So I am back to the first approach. It is simpler, does not much with the sort order, has less memory requirements, and is easier to grok.&lt;br/&gt;
Delete.deleteColumnsByPrefix now advises against mixing this with deleteColumn for the &lt;b&gt;same&lt;/b&gt; qualifiers.&lt;/p&gt;

&lt;p&gt;I added more test and propose this for commit.&lt;/p&gt;</comment>
                            <comment id="13192477" author="zhihyu@ebaysf.com" created="Tue, 24 Jan 2012 20:24:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;Delete.deleteColumnsByPrefix now advises against mixing this with deleteColumn for the same qualifiers.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Shall we poll user@ and dev@ for the above constraint ?&lt;/p&gt;</comment>
                            <comment id="13192496" author="tlipcon" created="Tue, 24 Jan 2012 20:51:09 +0000"  >&lt;p&gt;This seems a little complicated to me... if this is meant for the purpose of building higher-level transactional capabilities, maybe we should start a branch for that exploration? I&apos;m wary that this introduces a lot of complexity around optimizing the read path, for the sake of optimizing a delete path (which in my experience is rarely used)&lt;/p&gt;</comment>
                            <comment id="13192529" author="lhofhansl" created="Tue, 24 Jan 2012 21:21:09 +0000"  >&lt;p&gt;@Todd: Are you talking about v2 or v3? I agree v2 is too complicated.&lt;br/&gt;
v3 just adds this to the read path (in ScanDeleteTracker):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+        &lt;span class=&quot;code-comment&quot;&gt;// check whether the delete marker is a prefix
&lt;/span&gt;+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (deleteType == KeyValue.Type.DeleteColumnPrefix.getCode()) {
+          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (Bytes.compareTo(deleteBuffer, deleteOffset, deleteLength, buffer,
+              qualifierOffset, deleteLength) == 0) {
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (timestamp &amp;lt;= deleteTimestamp) {
+              &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; DeleteResult.COLUMN_DELETED;
+            }
+          } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+            &lt;span class=&quot;code-comment&quot;&gt;// past the prefix marker
&lt;/span&gt;+            deleteBuffer = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
+          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The rest is indentation (which makes the change to ScanDeleteTracker look big), tests, and two more methods on Delete.java.&lt;br/&gt;
If prefix markers are not used there is no performance impact.&lt;/p&gt;

&lt;p&gt;@Ted: Sure. Although if we cannot live with this constraint, this becomes too complicated to be useful.&lt;/p&gt;</comment>
                            <comment id="13192541" author="zhihyu@ebaysf.com" created="Tue, 24 Jan 2012 21:29:52 +0000"  >&lt;p&gt;I think the idea in patch v3 is useful in handling wide rows.&lt;/p&gt;

&lt;p&gt;I suggest making the selection of column prefix generic (in place of Bytes.compareTo call).&lt;br/&gt;
e.g. user may want to use a regex to select the columns to be deleted.&lt;br/&gt;
How hard is it to accommodate the above case ?&lt;/p&gt;</comment>
                            <comment id="13192555" author="lhofhansl" created="Tue, 24 Jan 2012 21:41:20 +0000"  >&lt;p&gt;I think that would difficult, because we could not sort the delete markers correctly. Delete by prefix works, because I can sort those at the right place w.r.t. the cells that they affect (delete by suffix, for example, would not work).&lt;/p&gt;

&lt;p&gt;I think what you have in mind would be the work of some kind of &quot;delete filter&quot; that needs to scan all the columns.&lt;/p&gt;

&lt;p&gt;The goal I want to reach is that we have the same flexibility for columns that we have for row-keys, so that key schema in HBase is not limited to the row-key.&lt;/p&gt;</comment>
                            <comment id="13192558" author="lhofhansl" created="Tue, 24 Jan 2012 21:42:18 +0000"  >&lt;p&gt;One more test. And guard for short column identifiers following longer prefix delete markers.&lt;/p&gt;</comment>
                            <comment id="13192624" author="hadoopqa" created="Tue, 24 Jan 2012 22:27:51 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12511736/5268-v4.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12511736/5268-v4.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -145 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 84 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.replication.TestReplication&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/849//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/849//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/849//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/849//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/849//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/849//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13192643" author="lhofhansl" created="Tue, 24 Jan 2012 23:10:21 +0000"  >&lt;p&gt;Test run looks good.&lt;br/&gt;
@Todd are you -1 on this? (I&apos;d understand if you were).&lt;/p&gt;</comment>
                            <comment id="13192648" author="zhihyu@ebaysf.com" created="Tue, 24 Jan 2012 23:19:13 +0000"  >&lt;p&gt;I don&apos;t seem to get a poll from dev@hbase mailing list about this feature.&lt;/p&gt;</comment>
                            <comment id="13192667" author="tlipcon" created="Tue, 24 Jan 2012 23:42:35 +0000"  >&lt;p&gt;I don&apos;t know this code path very well at all... can you clarify for me where a &quot;delete prefix&quot; marker is inserted? Is it at the top of the row, or before the columns starting with that prefix?&lt;/p&gt;

&lt;p&gt;eg I have the following row:&lt;br/&gt;
cola_1&lt;br/&gt;
cola_2&lt;br/&gt;
colb_1&lt;br/&gt;
colb_2&lt;br/&gt;
colc_1&lt;/p&gt;

&lt;p&gt;and I insert a &quot;deletePrefix(colb_)&quot;&lt;br/&gt;
Does it sort before cola_1 or does it sort before colb_1?&lt;/p&gt;</comment>
                            <comment id="13192676" author="lhofhansl" created="Tue, 24 Jan 2012 23:55:32 +0000"  >&lt;p&gt;@Ted: I&apos;ll send a message to dev@ momentarily.&lt;/p&gt;

&lt;p&gt;@Todd: I&apos;ve changed this code a lot (&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4071&quot; title=&quot;Data GC: Remove all versions &amp;gt; TTL EXCEPT the last written version&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4071&quot;&gt;&lt;del&gt;HBASE-4071&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4536&quot; title=&quot;Allow CF to retain deleted rows&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4536&quot;&gt;&lt;del&gt;HBASE-4536&lt;/del&gt;&lt;/a&gt;)... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
It is sorted along with the columns. Assuming all KV have the same timestamp it would sort like this:&lt;br/&gt;
cola_1&lt;br/&gt;
cola_2&lt;br/&gt;
colb_ delete marker&lt;br/&gt;
colb_1&lt;br/&gt;
colb_2&lt;br/&gt;
colc_1&lt;/p&gt;

&lt;p&gt;If there are multiple versions of a column the delete marker would sort according to the TS as well (the exact same ordering rules used for column delete markers).&lt;br/&gt;
This provides for the minimum amount of time a scanner would need to hold on to the delete marker during a scan.&lt;br/&gt;
(In v2 I tried to change the ordering w.r.t. TS&apos;, but that turned out to be a rather nasty change.)&lt;/p&gt;</comment>
                            <comment id="13192681" author="lhofhansl" created="Wed, 25 Jan 2012 00:09:24 +0000"  >&lt;p&gt;Slight correction of wording. The above sort orders happens independently of the columns TS&apos;.&lt;/p&gt;</comment>
                            <comment id="13192686" author="tlipcon" created="Wed, 25 Jan 2012 00:21:04 +0000"  >&lt;p&gt;I can&apos;t see how that&apos;s correct. Let&apos;s say instead of just two columns with colb_* we had a few thousand, such that it spanned many blocks. Then we requested a get with only the column colb_2000. The optimizations that Mikhail described at the HUG last week would assumedly want to seek directly to that block, but with the delete marker somewhere &quot;in the middle&quot; we&apos;d be forced to scan forward from the beginning of the whole row looking for potential deletions somewhere along the way. Right?&lt;/p&gt;

&lt;p&gt;I think the delete prefix markers would have to go at the very top of the row, alongside the &quot;delete family&quot; markers (since we already force a top-of-row seek to look for delete-family, assuming lack of a deletion bloom).&lt;/p&gt;</comment>
                            <comment id="13192705" author="lhofhansl" created="Wed, 25 Jan 2012 00:31:26 +0000"  >&lt;p&gt;Hmm... Good point. Isn&apos;t that the same for a column delete with many versions that span many blocks, though? In that case the ScanDeleteTracker would need to hold on to all prefix markers.&lt;br/&gt;
I.e. there might be a prefix marker for 123 at T and then one for 1234 at T+A and another one for 12345 at T+A+B. They would need to stored and checked every time based on the TS of the rows they affect.&lt;/p&gt;

&lt;p&gt;I&apos;ll try the Get part.&lt;/p&gt;</comment>
                            <comment id="13192725" author="lhofhansl" created="Wed, 25 Jan 2012 00:47:22 +0000"  >&lt;p&gt;Added a test that that insert 100000 kvs, places a prefix marker at the beginning, and then Gets kv #90000, and it is correctly marked as delete.&lt;br/&gt;
Do I need to enable Mikhail&apos;s optimizations or are they on by default?&lt;/p&gt;</comment>
                            <comment id="13192727" author="tlipcon" created="Wed, 25 Jan 2012 00:47:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;Good point. Isn&apos;t that the same for a column delete with many versions that span many blocks, though?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, but my guess is that we currently seek to the beginning of the column as well as to the specific timestamp, in the case that a timestamp is requested. Mikhail would know more (I&apos;m just going based on his presentation last week). The distinction here is that seeking to the beginning of a column is &quot;well defined&quot; whereas seeking to the beginning of the prefix is practically impossible (I suppose you could seek to O(length of column key) spots, but hardly reasonable)&lt;/p&gt;</comment>
                            <comment id="13192732" author="lhofhansl" created="Wed, 25 Jan 2012 00:51:27 +0000"  >&lt;p&gt;Oh and in this case all columns are names 12300001, 12300002, ..., 12399999. The prefix marker set was 123. The column requested by get was 12390000.&lt;/p&gt;</comment>
                            <comment id="13192734" author="tlipcon" created="Wed, 25 Jan 2012 00:54:11 +0000"  >&lt;p&gt;What if you&apos;d also inserted 12200000 through 12299999? As is, your prefix marker is probably hitting the top of the row, instead of falling in the middle.&lt;/p&gt;</comment>
                            <comment id="13192741" author="lhofhansl" created="Wed, 25 Jan 2012 01:01:49 +0000"  >&lt;p&gt;Ah yes, now it&apos;s failing. And there I thought I&apos;d know that code &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
OK, so these need to be top of row. So not sure now, it makes the code more complicated than is warranted for this feature.&lt;/p&gt;</comment>
                            <comment id="13192745" author="lhofhansl" created="Wed, 25 Jan 2012 01:04:36 +0000"  >&lt;p&gt;Leaving open for now.&lt;/p&gt;</comment>
                            <comment id="13192746" author="mikhail" created="Wed, 25 Jan 2012 01:08:24 +0000"  >&lt;p&gt;@Lars, Todd: Yes, the column prefix delete will break lazy seek optimization. The lazy seek optimization is only enabled for multi-column queries, though, so the bug would not be seen when only reading one column or the whole row.&lt;/p&gt;

&lt;p&gt;More generally, our various types of deletes get in the way of &quot;point queries&quot;, e.g. reading a particular column or a particular timestamp range, because we have to check for deletes first. As Todd pointed out, with column prefix deletes we would have to search the entire row for multi-column gets. We could trigger these optimizations using another &quot;Column Prefix Delete&quot; Bloom filter, but that might be an overkill. It might be easier to detect and delete just the required columns at the write path.&lt;/p&gt;</comment>
                            <comment id="13192748" author="lhofhansl" created="Wed, 25 Jan 2012 01:11:12 +0000"  >&lt;p&gt;Patch that includes the get test, for reference.&lt;/p&gt;</comment>
                            <comment id="13192751" author="zhihyu@ebaysf.com" created="Wed, 25 Jan 2012 01:13:31 +0000"  >&lt;p&gt;Would a summary of the discussion here be eligible to be included in HBase book ?&lt;/p&gt;</comment>
                            <comment id="13192753" author="lhofhansl" created="Wed, 25 Jan 2012 01:15:12 +0000"  >&lt;p&gt;&quot;Column Prefix Delete&quot; Bloom filter &lt;b&gt;is&lt;/b&gt; overkill. I&apos;ll think about this a bit more, but probably mark as &quot;won&apos;t fix&quot;.&lt;/p&gt;</comment>
                            <comment id="13192755" author="lhofhansl" created="Wed, 25 Jan 2012 01:18:25 +0000"  >&lt;p&gt;@Ted: Definitely. Deletes are documented here: &lt;a href=&quot;http://hbase.apache.org/book.html#version.delete&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book.html#version.delete&lt;/a&gt;&lt;br/&gt;
Maybe a small section about how the lazy seek interacts with them (although that would be a more a technical discussion).&lt;/p&gt;</comment>
                            <comment id="13192757" author="zhihyu@ebaysf.com" created="Wed, 25 Jan 2012 01:21:44 +0000"  >&lt;p&gt;I expect HBase users to have understanding of HBase internals.&lt;br/&gt;
Plus, the very exposure of this detail may give rise to the next breakthrough (in performance optimization).&lt;/p&gt;</comment>
                            <comment id="13192766" author="lhofhansl" created="Wed, 25 Jan 2012 01:30:28 +0000"  >&lt;p&gt;Just did a quick test to sort these to the top of row. The Get test works fine then. Would need to fix up some other parts of the code.&lt;br/&gt;
Could use a (prefix) Trie to store the column prefix delete markers in ScanDeleteTracker. That too seems overkill, though.&lt;/p&gt;</comment>
                            <comment id="13192832" author="mcorgan" created="Wed, 25 Jan 2012 03:08:08 +0000"  >&lt;p&gt;This is probably way too complicated for a short term solution, but during flush/compaction could you repeat delete markers at the beginning of each block for as long as they are relevant?&lt;/p&gt;</comment>
                            <comment id="13192874" author="lhofhansl" created="Wed, 25 Jan 2012 06:14:53 +0000"  >&lt;p&gt;I think the top-of-row is good enough. We have to seek there anyway because of potential family delete markers (although I think Mikhail plans to - or has already - optimize this with delete marker bloom filters).&lt;/p&gt;</comment>
                            <comment id="13192921" author="lhofhansl" created="Wed, 25 Jan 2012 07:54:35 +0000"  >&lt;p&gt;Just to prove to myself that it can be done... Here&apos;s a patch that sorts all column prefix delete markers top-of-row.&lt;br/&gt;
ScsnDeleteTracker keeps a map with all delete prefixes and checks all of them, removing them when we scanned past the prefix.&lt;/p&gt;

&lt;p&gt;I have no intention to commit this. This is just a proof of concept. It is not efficient (should use a trie of bytes for the prefixes).&lt;/p&gt;

&lt;p&gt;Generally I am less exited about this now than I was earlier. A lot of work to optimize a path that is used less frequently than the Put path.&lt;/p&gt;</comment>
                            <comment id="13195432" author="lhofhansl" created="Sat, 28 Jan 2012 05:30:00 +0000"  >&lt;p&gt;I wrote a blog entry about this here: &lt;a href=&quot;http://hadoop-hbase.blogspot.com/2012/01/scanning-in-hbase.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop-hbase.blogspot.com/2012/01/scanning-in-hbase.html&lt;/a&gt;&lt;br/&gt;
Maybe we can take part of that into the HBase book.&lt;/p&gt;</comment>
                            <comment id="13197340" author="stack" created="Tue, 31 Jan 2012 22:44:39 +0000"  >&lt;p&gt;I added a footnote to book in delete section pointing at your blog Lars.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12511815" name="5268-proof.txt" size="19366" author="lhofhansl" created="Wed, 25 Jan 2012 07:54:34 +0000"/>
                            <attachment id="12511698" name="5268-v2.txt" size="14578" author="lhofhansl" created="Tue, 24 Jan 2012 18:12:38 +0000"/>
                            <attachment id="12511721" name="5268-v3.txt" size="14352" author="lhofhansl" created="Tue, 24 Jan 2012 20:17:54 +0000"/>
                            <attachment id="12511736" name="5268-v4.txt" size="15678" author="lhofhansl" created="Tue, 24 Jan 2012 21:42:18 +0000"/>
                            <attachment id="12511771" name="5268-v5.txt" size="16977" author="lhofhansl" created="Wed, 25 Jan 2012 01:11:11 +0000"/>
                            <attachment id="12511645" name="5268.txt" size="12469" author="lhofhansl" created="Tue, 24 Jan 2012 08:03:25 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Jan 2012 06:10:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225070</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 46 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ht2v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101973</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>