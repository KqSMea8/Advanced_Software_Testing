<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:53:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14495/HBASE-14495.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14495] TestHRegion#testFlushCacheWhileScanning goes zombie</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14495</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This test goes zombie on us, most recently, here: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15744//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15744//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It does not fail on my internal rig runs nor locally on laptop when run in a loop.&lt;/p&gt;

&lt;p&gt;Its hung up in close of the region:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; prio=10 tid=0x00007fc49800a800 nid=0x6053 in &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [0x00007fc4a02c9000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (on object monitor)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
	- waiting on &amp;lt;0x00000007d07c3478&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
	at org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl.waitForRead(MultiVersionConcurrencyControl.java:207)
	- locked &amp;lt;0x00000007d07c3478&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
	at org.apache.hadoop.hbase.regionserver.MultiVersionConcurrencyControl.completeAndWait(MultiVersionConcurrencyControl.java:143)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalPrepareFlushCache(HRegion.java:2257)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2061)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2026)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2016)
	at org.apache.hadoop.hbase.regionserver.HRegion.doClose(HRegion.java:1423)
	at org.apache.hadoop.hbase.regionserver.HRegion.close(HRegion.java:1344)
	- locked &amp;lt;0x00000007d07c34a8&amp;gt; (a java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;)
	at org.apache.hadoop.hbase.regionserver.HRegion.close(HRegion.java:1295)
	at org.apache.hadoop.hbase.HBaseTestingUtility.closeRegionAndWAL(HBaseTestingUtility.java:352)
	at org.apache.hadoop.hbase.regionserver.TestHRegion.testFlushCacheWhileScanning(TestHRegion.java:3756)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is waiting on mvcc to catch up.&lt;/p&gt;

&lt;p&gt;There is this comment at the point where we are hung:&lt;/p&gt;


&lt;p&gt;            // TODO: Lets see if we hang here, if there is a scenario where an outstanding reader&lt;br/&gt;
            // with a read point is in advance of this write point.&lt;br/&gt;
            mvcc.completeAndWait(writeEntry);&lt;/p&gt;


&lt;p&gt;The above came in with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12751&quot; title=&quot;Allow RowLock to be reader writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12751&quot;&gt;&lt;del&gt;HBASE-12751&lt;/del&gt;&lt;/a&gt;. The comment was added at v29:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12754775/12751.rebased.v29.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12754775/12751.rebased.v29.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looks like I added it so must have had predilection that this might be dodgy... Let me take a look... &lt;/p&gt;</description>
                <environment></environment>
        <key id="12896508">HBASE-14495</key>
            <summary>TestHRegion#testFlushCacheWhileScanning goes zombie</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12863637">HBASE-14420</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Sep 2015 22:18:30 +0000</created>
                <updated>Tue, 3 Nov 2015 22:34:13 +0000</updated>
                            <resolved>Tue, 29 Sep 2015 12:31:05 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                                    <component>test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14908979" author="stack" created="Sat, 26 Sep 2015 01:37:26 +0000"  >&lt;p&gt;This looks legit. Am having trouble trying to figure how MVCC gets into a state such that it has an incomplete write ahead of the flush mvcc...&lt;/p&gt;</comment>
                            <comment id="14909085" author="stack" created="Sat, 26 Sep 2015 04:57:44 +0000"  >&lt;p&gt;This zombie came in with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12751&quot; title=&quot;Allow RowLock to be reader writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12751&quot;&gt;&lt;del&gt;HBASE-12751&lt;/del&gt;&lt;/a&gt;. We miss closing out mvcc if we fail to write the flush marker.... so there is a write in the mvcc queue that is incomplete which then holds up close. Having trouble figuring how we are missing an mvcc complete....&lt;/p&gt;</comment>
                            <comment id="14909093" author="stack" created="Sat, 26 Sep 2015 05:15:47 +0000"  >&lt;p&gt;The failure is because:&lt;/p&gt;

&lt;p&gt;+ We are testing region only running scans while putting and scanning.&lt;br/&gt;
+ We are running a separate flusher thread so there is flushing while the scanning and putting are going on.&lt;br/&gt;
+ When done, we interrupt the flushing thread, ONLY, we could be in the middle of a flush and so the flush will fail and a failed flush brings on an abort&lt;br/&gt;
+ Only, we are not in a regionserver context so no abort of the region is done... we just eat the exception.&lt;br/&gt;
+ Now the test is done so we go to close the region on our way out. It is this which is hanging (We should not be doing a &apos;normal&apos; close, we should be aborting).&lt;/p&gt;

&lt;p&gt;I can fix the test but let me look more to make sure there is nothing I can do in the mvcc accounting to make it so we ride over such a situation as artificial as it is.... i may just run into another obstacle trying to clean close a region that should be aborting....&lt;/p&gt;</comment>
                            <comment id="14909096" author="stack" created="Sat, 26 Sep 2015 05:19:48 +0000"  >&lt;p&gt;Patch that &apos;fixes&apos; the test so we don&apos;t zombie:&lt;/p&gt;

&lt;p&gt;HRegion changes are minor cleanup; no effective change.&lt;/p&gt;

&lt;p&gt;In MVCC, we were doing wait(0) which means forever. Change it so we wake up and log the fact that we are &apos;stuck&apos;.&lt;/p&gt;

&lt;p&gt;In WALUtil, if error on append, we could skip out with completing the mvcc. This is a hole.&lt;/p&gt;

&lt;p&gt;&apos;Fixed&apos; TestHRegion so it doesn&apos;t cause abort by removing flush interrpt... just wait on flush to complete.&lt;/p&gt;</comment>
                            <comment id="14909162" author="hadoopqa" created="Sat, 26 Sep 2015 08:16:18 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12762501/14495.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12762501/14495.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 02699fe967dde00cde3fc96af782401440dfe2ac.&lt;br/&gt;
  ATTACHMENT ID: 12762501&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1786 checkstyle errors (more than the master&apos;s current 1785 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestShell&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestReplicationShell&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15757//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15757//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15757//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15757//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15757//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15757//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15757//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15757//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14909493" author="stack" created="Sat, 26 Sep 2015 21:39:32 +0000"  >&lt;p&gt;Rough patch.&lt;/p&gt;

&lt;p&gt;The tests are totally artificial with interrupts to stop threads and WAL disabled.  Neither is there an abort handler so we are running close as though it were &apos;normal&apos; rather than an &apos;abort&apos;, BUT, in spite of all this... mvcc could lock up.&lt;/p&gt;

&lt;p&gt;Fix is here...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java
index 48ede4c..2859dfe 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java
@@ -97,6 +97,12 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class WALKey &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; SequenceId, Comparable&amp;lt;WALKey&amp;gt; {
     &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
       &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.seqNumAssignedLatch.await();
     } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException ie) {
+      &lt;span class=&quot;code-comment&quot;&gt;// If interrupted... clear out our entry &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; we can block up mvcc.
&lt;/span&gt;+      MultiVersionConcurrencyControl mvcc = getMvcc();
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (mvcc != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+        MultiVersionConcurrencyControl.WriteEntry we = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writeEntry;
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (we != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) mvcc.complete(we);
+      }
       InterruptedIOException iie = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; InterruptedIOException();
       iie.initCause(ie);
       &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; iie;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;Rest is cosmetic and debug.&lt;/p&gt;

&lt;p&gt;More cleanup coming.&lt;/p&gt;</comment>
                            <comment id="14909522" author="hadoopqa" created="Sat, 26 Sep 2015 23:31:19 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12762557/14495v3.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12762557/14495v3.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 02699fe967dde00cde3fc96af782401440dfe2ac.&lt;br/&gt;
  ATTACHMENT ID: 12762557&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 3 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.ipc.TestRpcClientLeaks&lt;br/&gt;
                  org.apache.hadoop.hbase.mob.mapreduce.TestMobSweepMapper&lt;br/&gt;
                  org.apache.hadoop.hbase.procedure.TestProcedureManager&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14909578" author="stack" created="Sun, 27 Sep 2015 03:31:14 +0000"  >&lt;p&gt;Better version of patch. &lt;/p&gt;

&lt;p&gt;Been running it for half an hour on loop and seems not to hang anymore.&lt;/p&gt;

&lt;p&gt;    hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
      Writing markers, pass mvcc so can complete mvcc transaction &amp;#8211; leave no holes in mvcc writes&lt;br/&gt;
      If exception appending an empty WAL edit, be sure to complete mvcc so no holes in mvcc.&lt;/p&gt;

&lt;p&gt;    hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl.java&lt;br/&gt;
      If mvcc is hung, log that we are STUCK. Added debug.&lt;/p&gt;

&lt;p&gt;    hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;br/&gt;
      When we write empty edits &amp;#8211; just to get a sequenceid &amp;#8211; rather than return early, go&lt;br/&gt;
      through all but the actual wal append... we used to short circuit out (not a problem,&lt;br/&gt;
      but could be if something gets added later)&lt;/p&gt;

&lt;p&gt;    hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALUtil.java&lt;br/&gt;
      Refactor so same thing happens around all marker appends. Adds a completion even&lt;br/&gt;
      on exception of mvcc operation.&lt;/p&gt;

&lt;p&gt;    hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;br/&gt;
      The actual fix.. if interrupted, complete the mvcc operation so we don&apos;t leave holes&lt;br/&gt;
      in mvcc.&lt;/p&gt;

&lt;p&gt;    hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;br/&gt;
      Add debug... name threads, add logging.&lt;/p&gt;</comment>
                            <comment id="14909585" author="stack" created="Sun, 27 Sep 2015 04:12:57 +0000"  >
&lt;p&gt;On the above reported zombies for test run v3 of the patch...&lt;/p&gt;

&lt;p&gt;Says&lt;/p&gt;

&lt;p&gt;kalashnikov:hbase.git.commit stack$ python ./dev-support/findHangingTests.py  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//consoleText&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15767//consoleText&lt;/a&gt;&lt;br/&gt;
Fetching the console output from the URL&lt;br/&gt;
Printing hanging tests&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.regionserver.TestBulkLoad&lt;br/&gt;
Printing Failing tests&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.ipc.TestRpcClientLeaks&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.procedure.TestProcedureManager&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.mob.mapreduce.TestMobSweepMapper&lt;/p&gt;

&lt;p&gt;The zombie TestBulkLoad looks related. Will work on that. Others don&apos;t fail for me here or up on cluster. Looking more.&lt;/p&gt;</comment>
                            <comment id="14909603" author="hadoopqa" created="Sun, 27 Sep 2015 05:07:06 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12762574/14495v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12762574/14495v6.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 526520de0a9d7a29fcf1b4c521f017ca75a46cbc.&lt;br/&gt;
  ATTACHMENT ID: 12762574&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 5 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15771//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15771//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15771//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15771//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15771//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15771//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15771//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15771//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14933922" author="stack" created="Mon, 28 Sep 2015 20:27:50 +0000"  >&lt;p&gt;TestBulkLoad was failing because it had a mocked WAL so the WALKey latches were never getting closed. This test is only test in our suite to use jmock ... so jmock machinations to get trigger of the latch to happen.&lt;/p&gt;




&lt;p&gt;    hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
    Writing markers, pass mvcc so can complete mvcc transaction &#8211; leave no holes in mvcc writes&lt;br/&gt;
    If exception appending an empty WAL edit, be sure to complete mvcc so no holes in mvcc.&lt;/p&gt;

&lt;p&gt;    hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl.java&lt;br/&gt;
    If mvcc is hung, log that we are STUCK. Added debug.&lt;br/&gt;
    hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;br/&gt;
    When we write empty edits &#8211; just to get a sequenceid &#8211; rather than return early, go&lt;br/&gt;
    through all but the actual wal append... we used to short circuit out (not a problem,&lt;br/&gt;
    but could be if something gets added later)&lt;/p&gt;

&lt;p&gt;    hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALUtil.java&lt;br/&gt;
    Refactor so same thing happens around all marker appends. Adds a completion even&lt;br/&gt;
    on exception of mvcc operation.&lt;/p&gt;

&lt;p&gt;    hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;br/&gt;
    The actual fix.. if interrupted, complete the mvcc operation so we don&apos;t leave holes&lt;br/&gt;
    in mvcc.&lt;/p&gt;

&lt;p&gt;    hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;br/&gt;
    Add debug... name threads, add logging.&lt;/p&gt;

&lt;p&gt;    hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBulkLoad.java&lt;br/&gt;
    This is a good one. The WAL is mocked so the WALEdit latch is never closed.&lt;br/&gt;
    Had to &apos;learn&apos; jmock &amp;#8211; this is only test that uses it &amp;#8211; and then add an&lt;br/&gt;
    &apos;Action&apos; just to trip the latch.&lt;/p&gt;</comment>
                            <comment id="14934383" author="hadoopqa" created="Tue, 29 Sep 2015 00:22:02 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12764092/14495v7.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12764092/14495v7.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit cfce91e514dcb570ca1b3131f340dc01cdbd5e56.&lt;br/&gt;
  ATTACHMENT ID: 12764092&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 8 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.client.TestSnapshotCloneIndependence&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestWALProcedureStoreOnHDFS&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 2 zombie test(s): 	at org.apache.hadoop.hbase.regionserver.TestHRegion.testCloseRegionWrittenToWAL(TestHRegion.java:6122)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14934624" author="stack" created="Tue, 29 Sep 2015 05:05:09 +0000"  >&lt;p&gt;Says&lt;/p&gt;

&lt;p&gt;kalashnikov:hbase.git.commit stack$ python ./dev-support/findHangingTests.py &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//consoleText&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15790//consoleText&lt;/a&gt;&lt;br/&gt;
Fetching the console output from the URL&lt;br/&gt;
Printing hanging tests&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.regionserver.TestHRegion&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.TestDistributedLogSplitting&lt;br/&gt;
Printing Failing tests&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.http.TestHttpServerLifecycle&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.client.TestSnapshotCloneIndependence&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.master.procedure.TestWALProcedureStoreOnHDFS&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.client.TestMobSnapshotCloneIndependence&lt;br/&gt;
Failing test : org.apache.hadoop.hbase.coprocessor.TestWALObserver&lt;/p&gt;

&lt;p&gt;So, the TestHttpServerLifecycle is dodgy. Here it did this:&lt;/p&gt;

&lt;p&gt;Flaked tests: &lt;br/&gt;
org.apache.hadoop.hbase.http.TestHttpServerLifecycle.testStartedServerIsAlive(org.apache.hadoop.hbase.http.TestHttpServerLifecycle)&lt;br/&gt;
  Run 1: TestHttpServerLifecycle.testStartedServerIsAlive:73-&amp;gt;HttpServerFunctionalTest.stop:195 &#187; TestTimedOut&lt;br/&gt;
  Run 2: PASS&lt;/p&gt;

&lt;p&gt;I went on to disable this test altogether. See related &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14430&quot; title=&quot;TestHttpServerLifecycle#testStartedServerIsAlive times out&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14430&quot;&gt;&lt;del&gt;HBASE-14430&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;TestWALObserver failure was legit. In this patch I was letting empty WAL edits go through to CPs to up counters and metrics but looks like we don&apos;t want that... or at least someone went to trouble of testing we don&apos;t do that... so I removed this change from this patch.&lt;/p&gt;

&lt;p&gt;The TestHRegion hangs are another instance of a mocked WAL but with mockito this time &amp;#8211; we were not closing latch inside mocked WAL. Fixed.&lt;/p&gt;

&lt;p&gt;TestDistributedLogSplitting did not get the &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14378&quot; title=&quot;Get TestAccessController* passing again on branch-1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14378&quot;&gt;&lt;del&gt;HBASE-14378&lt;/del&gt;&lt;/a&gt; treatment. We hang in master.TestDistributedLogSplitting#testWorkerAbort.  Disabling. Made issue to reenable.&lt;/p&gt;

&lt;p&gt;TestWALProcedureStoreOnHDFS is well-known failure to be addressed elsewhere. Will look at other failures too in other issues. They just seem to be flakey... they pass locally.&lt;/p&gt;




</comment>
                            <comment id="14934637" author="stack" created="Tue, 29 Sep 2015 05:18:22 +0000"  >&lt;p&gt;v9&lt;/p&gt;

&lt;p&gt;        &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14495&quot; title=&quot;TestHRegion#testFlushCacheWhileScanning goes zombie&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14495&quot;&gt;&lt;del&gt;HBASE-14495&lt;/del&gt;&lt;/a&gt; TestHRegion#testFlushCacheWhileScanning goes zombie&lt;/p&gt;

&lt;p&gt;        hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;br/&gt;
          Writing markers, pass mvcc so can complete mvcc transaction &amp;#8211; leave no holes in mvcc writes&lt;br/&gt;
          If exception appending an empty WAL edit, be sure to complete mvcc so no holes in mvcc.&lt;/p&gt;

&lt;p&gt;        hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl.java&lt;br/&gt;
          If mvcc is hung, log that we are STUCK. Added debug.&lt;/p&gt;

&lt;p&gt;        hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/FSHLog.java&lt;br/&gt;
          When we write empty edits &amp;#8211; just to get a sequenceid &amp;#8211; rather than return early, go&lt;br/&gt;
          through all but the actual wal append... we used to short circuit out (not a problem,&lt;br/&gt;
          but could be if something gets added later)&lt;/p&gt;

&lt;p&gt;        hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALUtil.java&lt;br/&gt;
          Refactor so same thing happens around all marker appends. Adds a completion even&lt;br/&gt;
          on exception of mvcc operation.&lt;/p&gt;

&lt;p&gt;        hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;br/&gt;
          The actual fix.. if interrupted, complete the mvcc operation so we don&apos;t leave holes&lt;br/&gt;
          in mvcc.&lt;/p&gt;

&lt;p&gt;        hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;br/&gt;
          Add debug... name threads, add logging.&lt;/p&gt;

&lt;p&gt;Disabled TestDistributedLogSplitting#testWorkerAbort because flakey (flakey locally as well as up on jenkins)&lt;/p&gt;
</comment>
                            <comment id="14934838" author="hadoopqa" created="Tue, 29 Sep 2015 08:24:20 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12764179/14495v9.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12764179/14495v9.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 6ad6273ddaedb7a3a21ef391d4381c19a474e3b3.&lt;br/&gt;
  ATTACHMENT ID: 12764179&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 10 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hdfs.TestPread.testPreadDFS(TestPread.java:256)&lt;br/&gt;
	at org.apache.hadoop.hdfs.TestPread.testPreadDFSSimulated(TestPread.java:474)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15794//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15794//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15794//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15794//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15794//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15794//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15794//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15794//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14935083" author="stack" created="Tue, 29 Sep 2015 12:24:24 +0000"  >&lt;p&gt;Ok. No hanging tests.  It picked up an hdfs zombie.&lt;/p&gt;

&lt;p&gt;All our tests passed:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[INFO] 
[INFO] Apache HBase ...................................... SUCCESS [2.950s]
[INFO] Apache HBase - Checkstyle ......................... SUCCESS [0.481s]
[INFO] Apache HBase - Resource Bundle .................... SUCCESS [0.153s]
[INFO] Apache HBase - Annotations ........................ SUCCESS [0.756s]
[INFO] Apache HBase - Protocol ........................... SUCCESS [11.708s]
[INFO] Apache HBase - Common ............................. SUCCESS [1:25.021s]
[INFO] Apache HBase - Procedure .......................... SUCCESS [1:52.523s]
[INFO] Apache HBase - Client ............................. SUCCESS [1:21.759s]
[INFO] Apache HBase - Hadoop Compatibility ............... SUCCESS [7.229s]
[INFO] Apache HBase - Hadoop Two Compatibility ........... SUCCESS [7.404s]
[INFO] Apache HBase - Prefix Tree ........................ SUCCESS [10.519s]
[INFO] Apache HBase - Server ............................. SUCCESS [1:50:17.108s]
[INFO] Apache HBase - Testing Util ....................... SUCCESS [1.121s]
[INFO] Apache HBase - Thrift ............................. SUCCESS [3:22.167s]
[INFO] Apache HBase - Shell .............................. SUCCESS [4:10.544s]
[INFO] Apache HBase - Integration Tests .................. SUCCESS [1.297s]
[INFO] Apache HBase - Examples ........................... SUCCESS [10.038s]
[INFO] Apache HBase - Rest ............................... SUCCESS [9:20.396s]
[INFO] Apache HBase - External Block Cache ............... SUCCESS [0.663s]
[INFO] Apache HBase - Assembly ........................... SUCCESS [1.418s]
[INFO] Apache HBase - Shaded ............................. SUCCESS [0.087s]
[INFO] Apache HBase - Shaded - Client .................... SUCCESS [0.316s]
[INFO] Apache HBase - Shaded - Server .................... SUCCESS [0.527s]
[INFO] Apache HBase - Spark .............................. SUCCESS [1:20.705s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2:14:08.673s
[INFO] Finished at: Tue Sep 29 08:23:45 UTC 2015
[INFO] Final Memory: 107M/738M
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let me commit since this for sure fixes some current zombies.&lt;/p&gt;</comment>
                            <comment id="14935091" author="stack" created="Tue, 29 Sep 2015 12:31:05 +0000"  >&lt;p&gt;Ok. Committed to master. Will integrate into &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14465&quot; title=&quot;Backport &amp;#39;Allow rowlock to be reader/write&amp;#39; to branch-1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14465&quot;&gt;&lt;del&gt;HBASE-14465&lt;/del&gt;&lt;/a&gt;, the backport issue for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12751&quot; title=&quot;Allow RowLock to be reader writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12751&quot;&gt;&lt;del&gt;HBASE-12751&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14935542" author="hudson" created="Tue, 29 Sep 2015 18:03:15 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6853 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6853/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6853/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14495&quot; title=&quot;TestHRegion#testFlushCacheWhileScanning goes zombie&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14495&quot;&gt;&lt;del&gt;HBASE-14495&lt;/del&gt;&lt;/a&gt; TestHRegion#testFlushCacheWhileScanning goes zombie (stack: rev 37877e3f56b038c0821138862813e567390a9ff4)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDistributedLogSplitting.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WAL.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALUtil.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestBulkLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogKey.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/wal/WALKey.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14981904" author="ram_krish" created="Fri, 30 Oct 2015 05:09:16 +0000"  >&lt;p&gt;Is this not recurring again &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;. I got once in my local run and very frequently reproducing in my dev setup. &lt;/p&gt;</comment>
                            <comment id="14981920" author="stack" created="Fri, 30 Oct 2015 05:16:06 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Say more! You see it happening up here on jenkins at all?  Thanks.&lt;/p&gt;</comment>
                            <comment id="14981926" author="ram_krish" created="Fri, 30 Oct 2015 05:18:00 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
I did not follow the jenkins (not sure whether it is happening). But latest code base run on my local box gets stuck while waiting for the MVCC to move forward. &lt;/p&gt;</comment>
                            <comment id="14981938" author="ram_krish" created="Fri, 30 Oct 2015 05:28:18 +0000"  >&lt;p&gt;May be it could be due to the windows dev env too. Will get back  on this issue after some analysis. &lt;/p&gt;</comment>
                            <comment id="14981946" author="stack" created="Fri, 30 Oct 2015 05:33:00 +0000"  >&lt;p&gt;Windows dev could be enough of a diff. Throw up a few thread dumps here on the issue... and see if I recognize the hang type. Go easy.&lt;/p&gt;</comment>
                            <comment id="14981948" author="ram_krish" created="Fri, 30 Oct 2015 05:34:28 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
015-10-30 10:38:12,446 DEBUG [FlushThread] regionserver.HRegionFileSystem(382): Committing store file C:/commit_versions/hbase/hbase-server/target/test-data/7db8e7c9-166b-45eb-b589-027946092beb/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testFlushCacheWhileScanning/9e577f13d0d4caa7d069cc53cd18ae64/.tmp/7a13a0ecbc5140b0a37ea6e76055f994 as C:/commit_versions/hbase/hbase-server/target/test-data/7db8e7c9-166b-45eb-b589-027946092beb/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testFlushCacheWhileScanning/9e577f13d0d4caa7d069cc53cd18ae64/family/7a13a0ecbc5140b0a37ea6e76055f994
2015-10-30 10:38:12,451 INFO  [FlushThread] regionserver.HStore(987): Added C:/commit_versions/hbase/hbase-server/target/test-data/7db8e7c9-166b-45eb-b589-027946092beb/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testFlushCacheWhileScanning/9e577f13d0d4caa7d069cc53cd18ae64/family/7a13a0ecbc5140b0a37ea6e76055f994, entries=24, sequenceid=953, filesize=5.9 K
2015-10-30 10:38:12,452 INFO  [FlushThread] regionserver.HRegion(2443): Finished memstore flush of ~4.13 KB/4224, currentsize=2.58 KB/2640 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region testFlushCacheWhileScanning,,1446181690193.9e577f13d0d4caa7d069cc53cd18ae64. in 42ms, sequenceid=953, compaction requested=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
2015-10-30 10:38:12,454 INFO  [FlushThread] regionserver.HRegion(2146): Flushing 1/1 column families, memstore=2.58 KB
2015-10-30 10:38:12,454 INFO  [main] regionserver.HRegion(7836): writing data to region testFlushCacheWhileScanning,,1446181690193.9e577f13d0d4caa7d069cc53cd18ae64. with WAL disabled. Data may be lost in the event of a crash.
2015-10-30 10:38:12,458 DEBUG [FlushThread] hfile.HFile$WriterFactory(309): Unable to set drop behind on C:/commit_versions/hbase/hbase-server/target/test-data/7db8e7c9-166b-45eb-b589-027946092beb/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testFlushCacheWhileScanning/9e577f13d0d4caa7d069cc53cd18ae64/.tmp/fb0fa5a1b14d4efa9efbf392268b3be1
2015-10-30 10:38:12,461 INFO  [FlushThread] regionserver.DefaultStoreFlusher(90): Flushed, sequenceid=972, memsize=2.6 K, hasBloomFilter=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, into tmp file C:/commit_versions/hbase/hbase-server/target/test-data/7db8e7c9-166b-45eb-b589-027946092beb/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testFlushCacheWhileScanning/9e577f13d0d4caa7d069cc53cd18ae64/.tmp/fb0fa5a1b14d4efa9efbf392268b3be1
2015-10-30 10:38:12,491 DEBUG [FlushThread] regionserver.HRegionFileSystem(382): Committing store file C:/commit_versions/hbase/hbase-server/target/test-data/7db8e7c9-166b-45eb-b589-027946092beb/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testFlushCacheWhileScanning/9e577f13d0d4caa7d069cc53cd18ae64/.tmp/fb0fa5a1b14d4efa9efbf392268b3be1 as C:/commit_versions/hbase/hbase-server/target/test-data/7db8e7c9-166b-45eb-b589-027946092beb/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testFlushCacheWhileScanning/9e577f13d0d4caa7d069cc53cd18ae64/family/fb0fa5a1b14d4efa9efbf392268b3be1
2015-10-30 10:38:12,569 ERROR [FlushThread] regionserver.HStore$StoreFlusherImpl(2147): Failed to commit store file C:/commit_versions/hbase/hbase-server/target/test-data/7db8e7c9-166b-45eb-b589-027946092beb/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testFlushCacheWhileScanning/9e577f13d0d4caa7d069cc53cd18ae64/.tmp/fb0fa5a1b14d4efa9efbf392268b3be1
org.apache.hadoop.hbase.io.hfile.CorruptHFileException: Problem reading HFile Trailer from file file:/C:/commit_versions/hbase/hbase-server/target/test-data/7db8e7c9-166b-45eb-b589-027946092beb/data/&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;/testFlushCacheWhileScanning/9e577f13d0d4caa7d069cc53cd18ae64/family/fb0fa5a1b14d4efa9efbf392268b3be1
	at org.apache.hadoop.hbase.io.hfile.HFile.pickReaderVersion(HFile.java:517)
	at org.apache.hadoop.hbase.io.hfile.HFile.createReader(HFile.java:546)
	at org.apache.hadoop.hbase.regionserver.StoreFile$Reader.&amp;lt;init&amp;gt;(StoreFile.java:1140)
	at org.apache.hadoop.hbase.regionserver.StoreFileInfo.open(StoreFileInfo.java:265)
	at org.apache.hadoop.hbase.regionserver.StoreFile.open(StoreFile.java:404)
	at org.apache.hadoop.hbase.regionserver.StoreFile.createReader(StoreFile.java:515)
	at org.apache.hadoop.hbase.regionserver.StoreFile.createReader(StoreFile.java:505)
	at org.apache.hadoop.hbase.regionserver.HStore.createStoreFileAndReader(HStore.java:672)
	at org.apache.hadoop.hbase.regionserver.HStore.createStoreFileAndReader(HStore.java:664)
	at org.apache.hadoop.hbase.regionserver.HStore.commitFile(HStore.java:980)
	at org.apache.hadoop.hbase.regionserver.HStore.access$200(HStore.java:119)
	at org.apache.hadoop.hbase.regionserver.HStore$StoreFlusherImpl.commit(HStore.java:2145)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushCacheAndCommit(HRegion.java:2352)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2078)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2040)
	at org.apache.hadoop.hbase.regionserver.HRegion.flushcache(HRegion.java:1931)
	at org.apache.hadoop.hbase.regionserver.HRegion.flush(HRegion.java:1857)
	at org.apache.hadoop.hbase.regionserver.TestHRegion$FlushThread.run(TestHRegion.java:3797)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(Unknown Source)
	at sun.nio.ch.FileChannelImpl.position(Unknown Source)
	at org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream.seek(RawLocalFileSystem.java:115)
	at org.apache.hadoop.fs.BufferedFSInputStream.seek(BufferedFSInputStream.java:96)
	at org.apache.hadoop.fs.FSDataInputStream.seek(FSDataInputStream.java:62)
	at org.apache.hadoop.fs.FSDataInputStream.seek(FSDataInputStream.java:62)
	at org.apache.hadoop.fs.ChecksumFileSystem$FSDataBoundedInputStream.seek(ChecksumFileSystem.java:325)
	at org.apache.hadoop.hbase.io.hfile.FixedFileTrailer.readFromStream(FixedFileTrailer.java:392)
	at org.apache.hadoop.hbase.io.hfile.HFile.pickReaderVersion(HFile.java:501)
	... 17 more
2015-10-30 10:38:12,573 DEBUG [FlushThread] wal.WALKey(102): mvcc=MultiVersionConcurrencyControl{readPoint=1052, writePoint=1052}, writeEntry=&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
2015-10-30 10:38:12,573 WARN  [FlushThread] regionserver.HRegion(2390): 9e577f13d0d4caa7d069cc53cd18ae64 : failed writing ABORT_FLUSH marker to WAL
java.io.InterruptedIOException
	at org.apache.hadoop.hbase.wal.WALKey.getWriteEntry(WALKey.java:108)
	at org.apache.hadoop.hbase.regionserver.wal.WALUtil.writeMarker(WALUtil.java:131)
	at org.apache.hadoop.hbase.regionserver.wal.WALUtil.writeFlushMarker(WALUtil.java:75)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushCacheAndCommit(HRegion.java:2387)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2078)
	at org.apache.hadoop.hbase.regionserver.HRegion.internalFlushcache(HRegion.java:2040)
	at org.apache.hadoop.hbase.regionserver.HRegion.flushcache(HRegion.java:1931)
	at org.apache.hadoop.hbase.regionserver.HRegion.flush(HRegion.java:1857)
	at org.apache.hadoop.hbase.regionserver.TestHRegion$FlushThread.run(TestHRegion.java:3797)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(Unknown Source)
	at java.util.concurrent.CountDownLatch.await(Unknown Source)
	at org.apache.hadoop.hbase.wal.WALKey.getWriteEntry(WALKey.java:98)
	... 8 more
Already started clsoing
2015-10-30 10:38:12,576 DEBUG [main] regionserver.HRegion(1384): Closing testFlushCacheWhileScanning,,1446181690193.9e577f13d0d4caa7d069cc53cd18ae64.: disabling compactions &amp;amp; flushes
2015-10-30 10:38:12,578 DEBUG [main] regionserver.HRegion(1411): Updates disabled &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; region testFlushCacheWhileScanning,,1446181690193.9e577f13d0d4caa7d069cc53cd18ae64.
2015-10-30 10:38:12,578 INFO  [main] regionserver.HRegion(2146): Flushing 1/1 column families, memstore=16.16 KB
2015-10-30 10:38:12,579 WARN  [main] regionserver.DefaultMemStore(152): Snapshot called again without clearing previous. Doing nothing. Another ongoing flush or did we fail last attempt?
2015-10-30 10:38:13,609 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:14,633 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:15,667 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:16,700 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:17,730 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:18,763 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:19,788 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:20,817 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:21,844 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:22,874 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:23,905 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:24,929 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:25,959 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:26,987 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
2015-10-30 10:38:28,019 WARN  [main] regionserver.MultiVersionConcurrencyControl(214): STUCK: MultiVersionConcurrencyControl{readPoint=1052, writePoint=1056}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I don&apos;t have a dump but the logs that shows the issue. &lt;/p&gt;</comment>
                            <comment id="14988308" author="stack" created="Tue, 3 Nov 2015 22:33:18 +0000"  >&lt;p&gt;Yeah. Thats STUCK. I don&apos;t have windows box to see diff but something to do w/ coarser timer? Can you repro on linux? Maybe there is a means of getting a windows timer on a linux box? If we had environmentedge everywhere, I could fake it....&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12762501" name="14495.txt" size="6193" author="stack" created="Sat, 26 Sep 2015 05:19:48 +0000"/>
                            <attachment id="12762497" name="14495.txt" size="3442" author="stack" created="Sat, 26 Sep 2015 04:57:44 +0000"/>
                            <attachment id="12762557" name="14495v3.txt" size="17437" author="stack" created="Sat, 26 Sep 2015 21:39:32 +0000"/>
                            <attachment id="12762574" name="14495v6.txt" size="24194" author="stack" created="Sun, 27 Sep 2015 03:31:14 +0000"/>
                            <attachment id="12764092" name="14495v7.txt" size="30668" author="stack" created="Mon, 28 Sep 2015 20:27:50 +0000"/>
                            <attachment id="12764179" name="14495v9.txt" size="34336" author="stack" created="Tue, 29 Sep 2015 05:18:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 26 Sep 2015 08:16:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 6 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2lkzz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>The WAL append was changed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12751&quot; title=&quot;Allow RowLock to be reader writer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12751&quot;&gt;&lt;strike&gt;HBASE-12751&lt;/strike&gt;&lt;/a&gt;. Every append now sets a latch on an edit. The latch needs to be cleared or else the WAL will hang. The original failures in TestHRegion turned up &amp;#39;holes&amp;#39; where we were failing to throw the latch if we skipped out early because we were interrupted. Other &amp;#39;holes&amp;#39; were found where we had mocked up a WAL so the latch would just stay in place.  Futher holes were found appending WAL markers... here we were skipping the mvcc completely for a few edits.  A clean up of WALUtils made all markers take the same code paths.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>