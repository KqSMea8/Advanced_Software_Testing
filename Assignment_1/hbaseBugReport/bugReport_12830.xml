<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:36:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12830/HBASE-12830.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12830] Unreadable HLogs stuck in replication queues</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12830</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We had an incident where underlying infrastructure issues caused HDFS namenodes to go down, not at the same time, leading to periods of HDFS service outage and recovery as namenodes failed over. These clusters had replication enabled. We had some Regionservers roll logs during partial HDFS availability. Namespace entries for these HLogs were created but the first block-being-written was lost or unable to complete, leading to dead 0-length HLogs in the queues of active sources. When this happens the queue becomes stuck on the dead 0-length HLog reporting EOFExceptions whenever the source wakes up and tries to (re)open the current file like so:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2015-01-08 18:50:40,956 WARN org.apache.hadoop.hbase.replication.regionserver.ReplicationSource: 1-&amp;lt;hostname removed&amp;gt;,60020,1418764167084 Got: 
java.io.EOFException
	at java.io.DataInputStream.readFully(DataInputStream.java:197)
	at java.io.DataInputStream.readFully(DataInputStream.java:169)
	at org.apache.hadoop.io.SequenceFile$Reader.init(SequenceFile.java:1845)
	at org.apache.hadoop.io.SequenceFile$Reader.initialize(SequenceFile.java:1810)
	at org.apache.hadoop.io.SequenceFile$Reader.&amp;lt;init&amp;gt;(SequenceFile.java:1759)
	at org.apache.hadoop.io.SequenceFile$Reader.&amp;lt;init&amp;gt;(SequenceFile.java:1773)
	at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader$WALReader.&amp;lt;init&amp;gt;(SequenceFileLogReader.java:70)
	at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader.reset(SequenceFileLogReader.java:175)
	at org.apache.hadoop.hbase.regionserver.wal.SequenceFileLogReader.initReader(SequenceFileLogReader.java:184)
	at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.init(ReaderBase.java:70)
	at org.apache.hadoop.hbase.regionserver.wal.HLogFactory.createReader(HLogFactory.java:128)
	at org.apache.hadoop.hbase.regionserver.wal.HLogFactory.createReader(HLogFactory.java:91)
	at org.apache.hadoop.hbase.regionserver.wal.HLogFactory.createReader(HLogFactory.java:79)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationHLogReaderManager.openReader(ReplicationHLogReaderManager.java:68)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSource.openReader(ReplicationSource.java:506)
	at org.apache.hadoop.hbase.replication.regionserver.ReplicationSource.run(ReplicationSource.java:309)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This exception originates from where SequenceFile tries to read in the 4-byte version header from position 0.&lt;/p&gt;

&lt;p&gt;In ReplicationSource#run we have an active loop:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-comment&quot;&gt;// Loop until we close down
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (isActive()) {
    ...
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Within this loop we iterate over paths in the replication queue. For each path, we attempt to open it:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// Open a reader on it
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!openReader(sleepMultiplier)) {
        &lt;span class=&quot;code-comment&quot;&gt;// Reset the sleep multiplier, &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; it&apos;d be reused &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the next file
&lt;/span&gt;        sleepMultiplier = 1;
        &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When we have a zero length file openReader returns TRUE but this.reader is set to NULL (look at the catch of the outer try block) and we fall through the conditional to:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// If we got a &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; reader but didn&apos;t &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;, then sleep and &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.reader == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (sleepForRetries(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unable to open a reader&quot;&lt;/span&gt;, sleepMultiplier)) {
          sleepMultiplier++;
        }
        &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will keep trying to open the current file for a long time. The queue will be stuck until sleepMultiplier == maxRetriesMultiplier (conf &quot;replication.source.maxretriesmultiplier&quot;, default 10), with a base sleep time of &quot;replication.source.sleepforretries&quot; (default 1000) ms, then we will call ReplicationSource#processEndOfFile(). &lt;/p&gt;

&lt;p&gt;By default we will spin on opening the dead 0-length HLog for (1000*1) + (1000*2) ... + (1000*10) milliseconds before processing the file out of the queue. In &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11964&quot; title=&quot;Improve spreading replication load from failed regionservers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11964&quot;&gt;&lt;del&gt;HBASE-11964&lt;/del&gt;&lt;/a&gt; we recommend increasing &quot;replication.source.maxretriesmultiplier&quot; to 300. Using the updated configuration we will wait for (1000*1) + (1000*2) ... + (1000*300) milliseconds before processing the file out of the queue. &lt;/p&gt;

&lt;p&gt;There should be some way to break out of this very long wait for a 0-length or corrupt file that is blocking the queue. Perhaps we can check if there are later files in the queue and not wait for maxRetriesMultipler in that case. Some different threshold could be set for that. Or, now we can&apos;t short circuit this manually by removing the 0-length log files, but we could enable this. Currently a FNFE triggers an attempt to find where the log has gone. If it can&apos;t be found, we fall through to&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          &lt;span class=&quot;code-comment&quot;&gt;// TODO What happens the log is missing in both places?&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and leave openReader() returning TRUE as above, the sleep multiplier is increased, and we continue to spin on the file with increasing wait times.&lt;/p&gt;

&lt;p&gt;(And having that TODO unimplemented is also not good.)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12766469">HBASE-12830</key>
            <summary>Unreadable HLogs stuck in replication queues</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Jan 2015 17:36:23 +0000</created>
                <updated>Fri, 4 Nov 2016 17:49:34 +0000</updated>
                                            <version>0.98.9</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14272284" author="lhofhansl" created="Sat, 10 Jan 2015 02:44:05 +0000"  >&lt;p&gt;From school I remember 1+2+...+n = (n+1)*n/2 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
So with replication.source.maxretriesmultiplier = 300 we&apos;d wait for 45150s = 12h30m for each of these files.&lt;/p&gt;

&lt;p&gt;I suppose we should invent a max retry for any single file. &lt;br/&gt;
Or in this case we could not increase the sleep multiplier, which actually makes sense as we&apos;re actively trying to replicate stuff.&lt;/p&gt;</comment>
                            <comment id="15637140" author="lhofhansl" created="Fri, 4 Nov 2016 17:49:34 +0000"  >&lt;p&gt;I do like your suggestion &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; of looking for later files. We can then ignore 0-length files sooner. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 10 Jan 2015 02:44:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2479r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>