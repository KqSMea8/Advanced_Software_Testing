<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:24:47 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5104/HBASE-5104.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5104] Provide a reliable intra-row pagination mechanism</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5104</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Addendum:&lt;/p&gt;

&lt;p&gt;Doing pagination (retrieving at most &quot;limit&quot; number of KVs at a particular &quot;offset&quot;) is currently supported via the ColumnPaginationFilter. However, it is not a very clean way of supporting pagination.  Some of the problems with it are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Normally, one would expect a query with (Filter(A) AND Filter(B)) to have same results as (query with Filter(A)) INTERSECT (query with Filter(B)). This is not the case for ColumnPaginationFilter as its internal state gets updated depending on whether or not Filter(A) returns TRUE/FALSE for a particular cell.&lt;/li&gt;
	&lt;li&gt;When this Filter is used in combination with other filters (e.g., doing AND with another filter using FilterList), the behavior of the query depends on the order of filters in the FilterList. This is not ideal.&lt;/li&gt;
	&lt;li&gt;ColumnPaginationFilter is a stateful filter which ends up counting multiple versions of the cell as separate values even if another filter upstream or the ScanQueryMatcher is going to reject the value for other reasons.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Seems like we need a reliable way to do pagination. The particular use case that prompted this JIRA is pagination within the same rowKey. For example, for a given row key R, get columns with prefix P, starting at offset X (among columns which have prefix P) and limit Y. Some possible fixes might be:&lt;/p&gt;

&lt;p&gt;1) enhance ColumnPrefixFilter to support another constructor which supports limit/offset.&lt;br/&gt;
2) Support pagination (limit/offset) at the Scan/Get API level (rather than as a filter) &lt;span class=&quot;error&quot;&gt;&amp;#91;Like SQL&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;Original Post:&lt;/p&gt;

&lt;p&gt;Thanks Jiakai Liu for reporting this issue and doing the initial investigation. Email from Jiakai below:&lt;/p&gt;

&lt;p&gt;Assuming that we have an index column family with the following entries:&lt;br/&gt;
&quot;tag0:001:thread1&quot;&lt;br/&gt;
...&lt;br/&gt;
&quot;tag1:001:thread1&quot;&lt;br/&gt;
&quot;tag1:002:thread2&quot;&lt;br/&gt;
...&lt;br/&gt;
&quot;tag1:010:thread10&quot;&lt;br/&gt;
...&lt;br/&gt;
&quot;tag2:001:thread1&quot;&lt;br/&gt;
&quot;tag2:005:thread5&quot;&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;To get threads with &quot;tag1&quot; in range [5, 10), I tried the following code:&lt;/p&gt;

&lt;p&gt;    ColumnPrefixFilter filter1 = new ColumnPrefixFilter(Bytes.toBytes(&quot;tag1&quot;));&lt;br/&gt;
    ColumnPaginationFilter filter2 = new ColumnPaginationFilter(5 /* limit &lt;b&gt;/, 5 /&lt;/b&gt; offset */);&lt;/p&gt;

&lt;p&gt;    FilterList filters = new FilterList(Operator.MUST_PASS_ALL);&lt;br/&gt;
    filters.addFilter(filter1);&lt;br/&gt;
    filters.addFilter(filter2);&lt;/p&gt;

&lt;p&gt;    Get get = new Get(USER);&lt;br/&gt;
    get.addFamily(COLUMN_FAMILY);&lt;br/&gt;
    get.setMaxVersions(1);&lt;br/&gt;
    get.setFilter(filters);&lt;/p&gt;

&lt;p&gt;Somehow it didn&apos;t work as expected. It returned the entries as if the filter1 were not set.&lt;/p&gt;

&lt;p&gt;Turns out the ColumnPrefixFilter returns SEEK_NEXT_USING_HINT in some cases. The FilterList filter does not handle this return code properly (treat it as INCLUDE).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12536610">HBASE-5104</key>
            <summary>Provide a reliable intra-row pagination mechanism</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="madhuvaidya">Madhuwanti Vaidya</assignee>
                                    <reporter username="kannanm">Kannan Muthukkaruppan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Dec 2011 19:49:53 +0000</created>
                <updated>Thu, 4 Oct 2012 21:52:50 +0000</updated>
                            <resolved>Tue, 3 Jul 2012 22:36:56 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                <comments>
                            <comment id="13177357" author="kannanm" created="Thu, 29 Dec 2011 19:54:09 +0000"  >&lt;p&gt;A test case illustrating the problem attached.&lt;/p&gt;</comment>
                            <comment id="13177405" author="kannanm" created="Thu, 29 Dec 2011 21:37:28 +0000"  >&lt;p&gt;Additional note: The use of ColumnPaginationFilter AND ColumnPrefixFilter for the intended use case (i.e. to get next set of 5 thread ids for tag2) probably will not work even after this bug is fixed. I think once the bug is fixed for the above data set, the program should return 0 kvs.&lt;/p&gt;

&lt;p&gt;Here&apos;s why:&lt;br/&gt;
  (select * from Tab where filter1 and filter2)&lt;br/&gt;
should be same as:&lt;br/&gt;
  (select * from Tab where filter1) INTERSECT (select * from Tab where filter2)&lt;/p&gt;

&lt;p&gt;When separately applied, filter1 will return rows with tag1 prefix and filter2 will return rows with tag0 prefix (for Jiakai&apos;s example above) and the INTERSECTION will be the empty set.&lt;/p&gt;

&lt;p&gt;The real confusion here seems to be because of the use of a filter for pagination. This seems odd. In normal SQL for example, pagination is not part of the WHERE clause but a separate special clause (as if it was being applied on the results of a sub-query).&lt;/p&gt;

&lt;p&gt; (select * from Tab &lt;br/&gt;
  where  column  LIKE &apos;tag1%&quot;&lt;br/&gt;
  LIMIT 5 OFFSET 5)&lt;/p&gt;

&lt;p&gt;Possible ways of supporting this use case:&lt;/p&gt;

&lt;p&gt;1) Don&apos;t use AND (via FilterList), but enhance ColumnPrefixFilter to support another constructor which supports limit/offset.&lt;br/&gt;
2) Support pagination (limit/offset) at the Scan/Get API level (rather than as a filter) &lt;span class=&quot;error&quot;&gt;&amp;#91;Like SQL&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;



</comment>
                            <comment id="13177409" author="zhihyu@ebaysf.com" created="Thu, 29 Dec 2011 21:44:38 +0000"  >&lt;p&gt;Option #1 is easier to implement.&lt;/p&gt;

&lt;p&gt;I prefer option #2 which is really interesting feature.&lt;/p&gt;

&lt;p&gt;So we have two more JIRAs to work on &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13177425" author="lhofhansl" created="Thu, 29 Dec 2011 22:15:50 +0000"  >&lt;p&gt;It seems to me that ColumnPaginationFilter should wrap another filter (similar to how FilterList wraps other filters), and then apply the pagination on the result (the wrapper filter of course could be another filter list).&lt;/p&gt;</comment>
                            <comment id="13177430" author="kannanm" created="Thu, 29 Dec 2011 22:30:28 +0000"  >&lt;p&gt;Lars: I think viewing it as a general filter is problematic. Note: a FilterList wraps other filters, but it is perfectly legal for it to be wrapped by outer level filters... (say if you want to build a complex boolean expression). Whereas the pagination functionality doesn&apos;t lend itself to this flexibility. It is more like a special post-processing -only filter that you apply at the end stage. &lt;/p&gt;</comment>
                            <comment id="13177435" author="lhofhansl" created="Thu, 29 Dec 2011 22:40:21 +0000"  >&lt;p&gt;@Kannan: Right, that&apos;s what I had in mind. You build up your filter (using whatever FilterList nesting you need) and then wrap the end result into a ColumnPaginationFilter (which would optionally take a filter). That way it can be applied at the end-stage while not requiring any API changes to Get/Scan.&lt;/p&gt;

&lt;p&gt;I see what your saying, though, it rarely makes sense to wrap a ColumnPaginationFilter into a FilterList... We could just document it as such.&lt;/p&gt;</comment>
                            <comment id="13177442" author="lhofhansl" created="Thu, 29 Dec 2011 22:50:35 +0000"  >&lt;p&gt;And of course this bug still needs to be fixed.&lt;/p&gt;</comment>
                            <comment id="13177451" author="kannanm" created="Thu, 29 Dec 2011 23:06:58 +0000"  >&lt;p&gt;Lars: Yes.&lt;/p&gt;

&lt;p&gt;Jiakai wrote in with: &amp;lt;&amp;lt;&amp;lt; the filters in FilterList are applied in order. The ColumnPaginationFilter&apos;s filterKeyValue() is called only when ColumnPrefixFilter&apos;s filterKeyValue() returns true. i.e. the current implementation should be equivalent to:&lt;br/&gt;
select * from (select * from Tab where filter1) where filter2&lt;/p&gt;

&lt;p&gt;So it should return the desired result after the bug is fixed.&lt;/p&gt;

&lt;p&gt;If you meant to suggest that filters in FilterList should be interchangeable, then it becomes a design question. I&apos;m fine with the alternative approaches you suggested, too.&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;Response:  Existing code structure wise, Jiakai is correct. The filters are evaluated in order... so once SEEK_NEXT_USING_HINT is correctly handled, you&apos;ll get the behavior you want. But I am concerned overall with a ColumnPaginationFilter being a stateful filter whose state gets updated depending on what other filters where ahead of it. But perhaps, for backward compatibility, we cannot change its existing behavior.&lt;/p&gt;

&lt;p&gt;So we&apos;ll probably need to do both... fix the SEEK_NEXT_USING_HINT to work right with FilterList (at which point your case will start working fine), and also support limit/offset at the Scan/Get or ColumnPrefixFilter level as a cleaner alternative to do pagination.&lt;/p&gt;

&lt;p&gt;One disadvantage of sticking with the FilterList approach would be that it might be trickier to get the &quot;seek_next_using_hint&quot; optimization. The ColumnPrefixFilter can only seek next using hint in limited circumstances. For example, if you have an OR filter of two prefix filters:&lt;/p&gt;

&lt;p&gt;((ColumnPrefix(&quot;B&quot;) or ColumnPrefix(&quot;A&quot;)) AND (PaginationFilter(5, 5))&lt;/p&gt;

&lt;p&gt;we cannot have the first filter suggest a SEEK_NEXT_USING_HINT to go to prefix B, as that&apos;ll miss out columns starting at &quot;A&quot;.&lt;/p&gt;

&lt;p&gt;We&apos;ll need to restrict the SEEK_NEXT_USING_HINT to be used in much more limited circumstances... and if there are other filters in the mix, we probably need to scan one cell at a time. This might be another reason to deal with LIMIT/OFFSET as either an option to the ColumnPrefixFilter itself or at the Scan/Get API level.&lt;/p&gt;</comment>
                            <comment id="13179014" author="kannanm" created="Tue, 3 Jan 2012 20:59:14 +0000"  >&lt;p&gt;Jiakai also reported that:&lt;/p&gt;

&lt;p&gt;&amp;lt;&amp;lt;&amp;lt; There seems to be another problem with ColumnPaginationFilter: it seems to count multiple versions of a cell as multiple entries. i.e. when I first applied the ColumnPaginationFilter(10, 0), it returned the first 10 entries in that CF. Then I wrote the same set of test data to the CF and ran the query again, it only returned the first 5 entries. The table was created with maxVersion = 1. I also set Get&apos;s maxVersion to 1. However, I repeated the process several times (over write + query), it kept returning the top 5 entries (not like 5/2 entries, 5/4 entries if it really kept multiple versions). I could repo this with a new table. Is it expected behavior?&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;Looks like there are additional problems with doing pagination support as a filter.&lt;/p&gt;
</comment>
                            <comment id="13179042" author="lhofhansl" created="Tue, 3 Jan 2012 21:39:08 +0000"  >&lt;p&gt;Yeah, filters are applied before we do the version counting. There&apos;s even a comment in ScanQueryMatcher as to why this needs to be done:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    /**
     * Filters should be checked before checking column trackers. If we &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt;
     * otherwise, as was previously being done, ColumnTracker may increment its
     * counter &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; even that KV which may be discarded later on by Filter. This
     * would lead to incorrect results in certain cases.
     */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hmm... Maybe there could be a special filter LastVersionFilter (or something), together with allowing ColumnPaginationFilter to wrap another filter (an idea that I like more, the more I think about it).&lt;/p&gt;</comment>
                            <comment id="13179107" author="zhihyu@ebaysf.com" created="Tue, 3 Jan 2012 23:02:12 +0000"  >&lt;p&gt;As the above javadoc implies, the best place for efficient pagination support would be at the Scan/Get API level.&lt;/p&gt;</comment>
                            <comment id="13179138" author="lhofhansl" created="Tue, 3 Jan 2012 23:44:14 +0000"  >&lt;p&gt;It can already be done from the Scan API.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;set the startRow&lt;/li&gt;
	&lt;li&gt;call next() N+1 times (N is the page size), remember the last key&lt;/li&gt;
	&lt;li&gt;... do what you need with the page (rows 1-N)...&lt;/li&gt;
	&lt;li&gt;set the startRow for the next scan to the last key returned, goto 2.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;No need to burden the Scan API with more options.&lt;/p&gt;

&lt;p&gt;(It&apos;s possible that I am missing something here.)&lt;/p&gt;</comment>
                            <comment id="13179141" author="zhihyu@ebaysf.com" created="Tue, 3 Jan 2012 23:49:39 +0000"  >&lt;p&gt;The above description assumes N is small which is probably true.&lt;br/&gt;
Normally it is suboptimal for scan to return just one row per call.&lt;/p&gt;

&lt;p&gt;Let&apos;s see what Jiakai has to say.&lt;/p&gt;</comment>
                            <comment id="13179144" author="lhofhansl" created="Tue, 3 Jan 2012 23:51:30 +0000"  >&lt;p&gt;I think scanner caching would take care of that. Even with the pagination filter, eventually you have to retrieve the rows at the client.&lt;/p&gt;</comment>
                            <comment id="13180103" author="kannanm" created="Thu, 5 Jan 2012 01:44:33 +0000"  >&lt;p&gt;@Lars- I am not sure I totally understood your suggestion with startRow. What you suggest seems to work when pagination is at the rowKey level. The case we need is pagination within the same rowKey. For example, for a given row key R, get columns with prefix P, starting at offset X and limit Y.&lt;/p&gt;


&lt;p&gt;You wrote: &amp;lt;&amp;lt;Even with the pagination filter, eventually you have to retrieve the rows at the client.&amp;gt;&amp;gt; No, the filters are applied on the server side.&lt;/p&gt;</comment>
                            <comment id="13180117" author="lhofhansl" created="Thu, 5 Jan 2012 02:00:12 +0000"  >&lt;p&gt;@Kannan:&lt;br/&gt;
Re startRow: I see, thanks for explaining.&lt;br/&gt;
Re filters on server: Of course... What I meant was that eventually the cells you care for (after filtering) are retrieved by the client.&lt;/p&gt;

&lt;p&gt;I would still prefer a ColumnPaginationFilter that can wrap another filter over a Limit/Offset API change to the scan API.&lt;/p&gt;

&lt;p&gt;Alternatively, there was some discussion about startRow/stopRow also allowing to specify a CF/columm. Would that work here? It would allow precise placement of a scan and might be a relatively simple change with more general applicability.&lt;/p&gt;</comment>
                            <comment id="13180188" author="stack" created="Thu, 5 Jan 2012 04:53:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;Alternatively, there was some discussion about startRow/stopRow also allowing to specify a CF/columm. Would that work here? It would allow precise placement of a scan and might be a relatively simple change with more general applicability.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;@Lars FYI, pagination can&apos;t cross rows because filters can&apos;t do state across rows because there is no way to carry the state across regions which you&apos;d need if going between the end row of one region and the start of the next region (at least, not currently)&lt;/p&gt;</comment>
                            <comment id="13180201" author="lhofhansl" created="Thu, 5 Jan 2012 05:53:55 +0000"  >&lt;p&gt;Thanks Stack. I see, so ColumnPaginationFilter cannot work if we want to cross rows. I think what Kannan has in mind is pagination within a given row (from the description).&lt;/p&gt;

&lt;p&gt;Having more precise control of scanner start and stop cell might be nice anyway. I just had a discussion today about how it would be nice if one could start a scanner at a certain column prefix within a certain row and also set a stop column prefix with in a row. (i.e. not using a filter). It seems this would be generally applicable and also solve Kannan&apos;s use case. Correct Kannan?&lt;/p&gt;

&lt;p&gt;Something like Scan.setStartRow(byte[] rowkey, byte[] column), which would request to seek the scanner to that exact column prefix (while honoring all version settings for the scanner)... Same for setStopRow(byte[] rowkey, byte[] column).&lt;/p&gt;</comment>
                            <comment id="13180211" author="stack" created="Thu, 5 Jan 2012 06:08:21 +0000"  >&lt;p&gt;@Lars Is this what Dave Revell was going to add at one point till we discouraged him by telling him use a filter?&lt;/p&gt;</comment>
                            <comment id="13180219" author="lhofhansl" created="Thu, 5 Jan 2012 06:27:15 +0000"  >&lt;p&gt;You mean &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4256&quot; title=&quot;Intra-row scanning (part deux)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4256&quot;&gt;&lt;del&gt;HBASE-4256&lt;/del&gt;&lt;/a&gt;? Yep... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Although we left it there with saying that intra-row scanning is useful, but that his use case can be solved with a ColumnRangeFilter.&lt;/p&gt;</comment>
                            <comment id="13181013" author="kannanm" created="Fri, 6 Jan 2012 01:08:06 +0000"  >&lt;p&gt;Yes, the case we are looking at was indeed really intra-row pagination. I think I should update the JIRA title to reflect that.&lt;/p&gt;</comment>
                            <comment id="13181020" author="kannanm" created="Fri, 6 Jan 2012 01:15:03 +0000"  >&lt;p&gt;&amp;lt;&amp;lt;&amp;lt;I just had a discussion today about how it would be nice if one could start a scanner at a certain column prefix within a certain row and also set a stop column prefix with in a row. (i.e. not using a filter).&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;Why would you not want to use a filter for this case? ColumnRangeFilter() handles this case nicely correct?&lt;/p&gt;


&lt;p&gt;&amp;lt;&amp;lt;&amp;lt; Alternatively, there was some discussion about startRow/stopRow also allowing to specify a CF/columm. Would that work here? It would allow precise placement of a scan and might be a relatively simple change with more general applicability.&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;This may not work for many cases. How do I, for instance say, get me the next 5 KVs in a particular row whose value is X (note: here the filter is on column value rather than column name; assume you are using the SingleColumnValueFilter()).&lt;/p&gt;

&lt;p&gt;I think limit/offset is a simple/well understood concept that we should support in a clean way. Scan/Get API seems like a good place to do it. What is the concern with adding the capability there?&lt;/p&gt;</comment>
                            <comment id="13181053" author="lhofhansl" created="Fri, 6 Jan 2012 02:33:05 +0000"  >&lt;p&gt;It seems you have a very specific usecase. A limit/offset API that is column based on an API that is inherently row based (scanner.next) will be hard to understand for users.&lt;/p&gt;

&lt;p&gt;The problem here seems to be that scanner.startRow and scanner.next do not provide enough granularity.&lt;/p&gt;

&lt;p&gt;I&apos;m not opposed to limit/offset (but I will be interested to see how you will document that API, to make is understandable to users &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).&lt;/p&gt;

&lt;p&gt;What about a nextColumn method on scanner along with a startColumn method?&lt;/p&gt;

&lt;p&gt;Anyway... I just want to make sure we do not add API for specific cases, and I&apos;ll shut up about it now.&lt;/p&gt;</comment>
                            <comment id="13181546" author="kannanm" created="Fri, 6 Jan 2012 19:29:12 +0000"  >&lt;p&gt;@Lars/Stack: In 89-fb, we had done this for adding a reliable &quot;limit&quot; mechanism (this works per-CF/per-row). Madhu had implemented this. The rev is here: &lt;a href=&quot;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1181562&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1181562&lt;/a&gt;. &lt;span class=&quot;error&quot;&gt;&amp;#91;I don&amp;#39;t think this is ported to trunk yet.&amp;#93;&lt;/span&gt; We were thinking of extending/doing something similar for &quot;offset&quot;.&lt;/p&gt;

&lt;p&gt;Lars: The startColumn type of approach doesn&apos;t work for cases for example when you are using a ColumnValueFilter instead of filter based on column names. &lt;span class=&quot;error&quot;&gt;&amp;#91;See my previous post.&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Already, when we specify attributes such as timerange() or add a CF or specific column names, it applies to each row. So one way to think of this is that limit/offset are also applicable within each row the Scan encounters. Most folks are going to use it for &quot;Get&quot; (single row scans), but there is no need to preclude the functionality from a multi-row Scan either.&lt;/p&gt;

&lt;p&gt;This is the API that was added in 89-fb:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 /**
   * Set the maximum number of values to &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; per row per Column Family
   * @param limit the maximum number of values returned / row / CF
   */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setMaxResultsPerColumnFamily(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; limit)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The thought was we could add something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 /**
   * Skip offset number of values to &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; per row per Column Family
   * @param offset number of values to be skipped per row / CF
   */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setOffsetPerColumnFamily(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offset)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


</comment>
                            <comment id="13181552" author="zhihyu@ebaysf.com" created="Fri, 6 Jan 2012 19:36:57 +0000"  >&lt;p&gt;@Kannan:&lt;br/&gt;
The above methods look good.&lt;br/&gt;
Minor suggestion: I think the method names should reflect the nature of intra-row pagination. Currently people need to read the javadoc to get that.&lt;br/&gt;
Basically we should distinguish this feature from inter-row pagination support.&lt;/p&gt;</comment>
                            <comment id="13190892" author="lhofhansl" created="Mon, 23 Jan 2012 06:23:45 +0000"  >&lt;p&gt;After spending some time thinking about &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5229&quot; title=&quot;Provide basic building blocks for &amp;quot;multi-row&amp;quot; local transactions.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5229&quot;&gt;&lt;del&gt;HBASE-5229&lt;/del&gt;&lt;/a&gt;, I think this use case can be addressed by&lt;br/&gt;
(1) Allowing ColumnPaginationFilter to wrap another filter (similar to WhileMatchFilter) and&lt;br/&gt;
(2) Allowing filter to be optionally evaluated after we handled versions.&lt;/p&gt;

&lt;p&gt;For #2 either each filter could carry a flag, or we have another filter wrapper to indicate after versioning evaluation.&lt;br/&gt;
I realize I sound like a broken record, but that would handle a more general set of use cases (including this one, but correct me if I am wrong, Kannan), and also avoid adding special case API to the scanning API.&lt;/p&gt;</comment>
                            <comment id="13253947" author="phabricator@reviews.facebook.net" created="Sat, 14 Apr 2012 02:45:15 +0000"  >&lt;p&gt;mbautin requested code review of &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;br/&gt;
Reviewers: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA&lt;/p&gt;

&lt;p&gt;  Porting Madhu&apos;s fix for intra-row pagination to trunk. This is what we have in 89-fb just as a starting point (currently there are test failures).&lt;/p&gt;

&lt;p&gt;TEST PLAN&lt;br/&gt;
  Run unit tests&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide2.java&lt;/p&gt;

&lt;p&gt;MANAGE HERALD DIFFERENTIAL RULES&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/view/differential/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/view/differential/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHY DID I GET THIS EMAIL?&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/herald/transcript/6369/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/herald/transcript/6369/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: use the X-Herald-Rules header to filter Herald messages in your client.&lt;/p&gt;</comment>
                            <comment id="13253971" author="hadoopqa" created="Sat, 14 Apr 2012 03:50:17 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522655/D2799.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522655/D2799.1.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1522//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1522//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1522//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1522//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1522//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1522//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13253973" author="phabricator@reviews.facebook.net" created="Sat, 14 Apr 2012 03:51:34 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;br/&gt;
Reviewers: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA&lt;/p&gt;

&lt;p&gt;  Actually adding the new fields into the protobuf. Still have one test method to fix in TestFromClientSide2 that fails, and the full test suite is still running.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/main/protobuf/Client.proto&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide2.java&lt;/p&gt;</comment>
                            <comment id="13253979" author="hadoopqa" created="Sat, 14 Apr 2012 04:02:29 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522665/D2799.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522665/D2799.2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 2 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1523//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1523//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13253981" author="phabricator@reviews.facebook.net" created="Sat, 14 Apr 2012 04:11:19 +0000"  >&lt;p&gt;tedyu has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  Nice work.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:470 The assignment isn&apos;t needed here, right ?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java:395 rowOffset -&amp;gt; storeOffset&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide2.java:38 Add test category, please.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13254498" author="phabricator@reviews.facebook.net" created="Mon, 16 Apr 2012 03:26:26 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:470 Removed.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java:395 Done.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide2.java:38 Done.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13254500" author="phabricator@reviews.facebook.net" created="Mon, 16 Apr 2012 03:34:35 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;br/&gt;
Reviewers: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA&lt;/p&gt;

&lt;p&gt;  Fixing a bug with StoreScanner not resetting the current offset within the row/column family (countPerRow) to zero when transitioning to the next row. This is a porting error that is not present in Madhu&apos;s original fix for 89-fb. Also adding an independent test based on HRegion API that helped catch this bug (TestIntraRowPagination). I will post additional test results later.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/main/protobuf/Client.proto&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HTestConst.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestIntraRowPagination.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/p&gt;</comment>
                            <comment id="13254501" author="hadoopqa" created="Mon, 16 Apr 2012 03:42:30 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522735/D2799.3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522735/D2799.3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 7 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1535//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1535//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13254820" author="zhihyu@ebaysf.com" created="Mon, 16 Apr 2012 17:27:13 +0000"  >&lt;p&gt;Patch didn&apos;t apply cleanly:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/usr/bin/patch: **** malformed patch at line 285: Index: src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13254958" author="mikhail" created="Mon, 16 Apr 2012 19:40:07 +0000"  >&lt;p&gt;Manually attaching the most recent patch.&lt;/p&gt;</comment>
                            <comment id="13255008" author="hadoopqa" created="Mon, 16 Apr 2012 20:33:29 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12522843/jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-04-16_12_39_42.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12522843/jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-04-16_12_39_42.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 11 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1541//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1541//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1541//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1541//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1541//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1541//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13258732" author="phabricator@reviews.facebook.net" created="Sat, 21 Apr 2012 01:39:31 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  Ping.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13258742" author="zhihyu@ebaysf.com" created="Sat, 21 Apr 2012 02:12:09 +0000"  >&lt;p&gt;The previous Hadoop QA run stumbled over TestLoadIncrementalHFilesSplitRecovery&lt;br/&gt;
Please resubmit patch for QA.&lt;/p&gt;</comment>
                            <comment id="13259787" author="phabricator@reviews.facebook.net" created="Mon, 23 Apr 2012 18:08:32 +0000"  >&lt;p&gt;madhuvaidya has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  LGTM (at least all the non-protocol buffer related stuff).&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13261165" author="phabricator@reviews.facebook.net" created="Wed, 25 Apr 2012 00:18:05 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;br/&gt;
Reviewers: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA&lt;/p&gt;

&lt;p&gt;  Rebasing on changes in trunk&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Result.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/main/protobuf/Client.proto&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HTestConst.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestIntraRowPagination.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/p&gt;</comment>
                            <comment id="13261168" author="hadoopqa" created="Wed, 25 Apr 2012 00:22:27 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12524087/D2799.4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12524087/D2799.4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 7 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 patch.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1635//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1635//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13261198" author="phabricator@reviews.facebook.net" created="Wed, 25 Apr 2012 01:10:04 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  All unit tests have passed. Could someone familiar with the protobuf stuff in trunk please take a look and accept?&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13261939" author="phabricator@reviews.facebook.net" created="Wed, 25 Apr 2012 18:52:13 +0000"  >&lt;p&gt;jxcn01 has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  Looks good, just some minor things.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java:386 Can we set it only if scan.getMaxResultsPerColumnFamily() &amp;gt;= 0?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java:387 Can we set it only if the offset is &amp;gt; 0?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java:638 Can we check: this.storeOffset &amp;gt; 0 || this.storeLimit &amp;gt; -1?&lt;br/&gt;
  I assume the offset should be position, and store limit is non-negative.&lt;/p&gt;

&lt;p&gt;  The other choice is to add some checking in the corresponding set methods.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java:931 ditto&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java:932 ditto&lt;br/&gt;
  src/main/protobuf/Client.proto:49 uint32 should be better, with no default. If it is not set, then it is -1.&lt;br/&gt;
  src/main/protobuf/Client.proto:50 uint32 is preferred, with no default.  If it is not set, then it is 0.&lt;br/&gt;
  src/main/protobuf/Client.proto:199 ditto&lt;br/&gt;
  src/main/protobuf/Client.proto:200 ditto&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:471 ditto&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13261941" author="jxiang" created="Wed, 25 Apr 2012 18:52:37 +0000"  >&lt;p&gt;I commented on phabricator.  Looks good to me, just some minor things.&lt;/p&gt;</comment>
                            <comment id="13266246" author="phabricator@reviews.facebook.net" created="Tue, 1 May 2012 23:38:49 +0000"  >&lt;p&gt;stack has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  Good stuff.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:212 How does this work?  We have to run through the row by column family?  We set this offset back to zero when we move to a new column family on a row?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Result.java:177 Why we need this?  Isn&apos;t the Result sorted already?  If not, its a bug.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HTestConst.java:18 Why is this test not called HTestConstants.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestIntraRowPagination.java:60 Should close the region when done and close out its hlog.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13266252" author="zhihyu@ebaysf.com" created="Tue, 1 May 2012 23:52:58 +0000"  >&lt;p&gt;I got the same error reported by Hadoop QA when trying to apply the patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
patch: **** malformed patch at line 285: Index: src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13269114" author="phabricator@reviews.facebook.net" created="Sun, 6 May 2012 04:30:00 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;br/&gt;
Reviewers: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA, jxcn01&lt;/p&gt;

&lt;p&gt;  Rebasing and addressing review comments.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/main/protobuf/Client.proto&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HTestConst.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestIntraRowPagination.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/p&gt;</comment>
                            <comment id="13269115" author="phabricator@reviews.facebook.net" created="Sun, 6 May 2012 04:30:30 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  Michael, Jimmy: thanks for reviewing! See my responses inline.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java:386 Done.&lt;/p&gt;

&lt;p&gt;  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java:387 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java:931 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java:932 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java:638 Done.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:471 Done.&lt;br/&gt;
  src/main/protobuf/Client.proto:49 Done.&lt;br/&gt;
  src/main/protobuf/Client.proto:50 Done.&lt;br/&gt;
  src/main/protobuf/Client.proto:199 Done.&lt;br/&gt;
  src/main/protobuf/Client.proto:200 Done.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HTestConst.java:18 This is not a test, this is a collection of constants used in tests.&lt;/p&gt;

&lt;p&gt;  I tried to save some typing, because the intended usage pattern is HTestConst.DEFAULT_&lt;/p&gt;
{TABLE,CF,ROW,etc}
&lt;p&gt;... However, if you feel strongly about it, I can rename it to HTestConstants.&lt;/p&gt;

&lt;p&gt;  src/test/java/org/apache/hadoop/hbase/client/TestIntraRowPagination.java:60 Added region.close(). I am assuming that takes care of closing the HLog (correct me if I&apos;m wrong).&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:212 Yes, this offset is only within a particular (row, CF) combination. It gets reset back to zero when we move to the next row/CF. Added this to javadoc.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Result.java:177 Got rid of this method.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13269122" author="hadoopqa" created="Sun, 6 May 2012 05:21:05 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12525758/D2799.5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12525758/D2799.5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 7 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestMasterObserver&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1782//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1782//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1782//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1782//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1782//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1782//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13270027" author="phabricator@reviews.facebook.net" created="Mon, 7 May 2012 21:32:46 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  All unit tests pass, except TestCoprocessorEndpoint, which fails without this patch too. Could someone take another look and accept? Thanks!&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13273714" author="phabricator@reviews.facebook.net" created="Fri, 11 May 2012 23:19:51 +0000"  >&lt;p&gt;mbautin updated the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;br/&gt;
Reviewers: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA, jxcn01&lt;/p&gt;

&lt;p&gt;  Rebasing on trunk changes&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFFECTED FILES&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClientProtos.java&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java&lt;br/&gt;
  src/main/protobuf/Client.proto&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/HTestConst.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestIntraRowPagination.java&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java&lt;/p&gt;

&lt;p&gt;To: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA, jxcn01, mbautin&lt;br/&gt;
Cc: jxcn01&lt;/p&gt;</comment>
                            <comment id="13273743" author="hadoopqa" created="Sat, 12 May 2012 00:05:30 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12526586/D2799.6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12526586/D2799.6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 7 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop23.  The patch compiles against the hadoop 0.23.x profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 27 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.wal.TestLogRollingNoCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1853//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1853//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1853//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1853//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1853//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1853//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13273747" author="phabricator@reviews.facebook.net" created="Sat, 12 May 2012 00:09:46 +0000"  >&lt;p&gt;mbautin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  Could someone please accept this? This diff is almost a month old.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA, jxcn01, mbautin&lt;br/&gt;
Cc: jxcn01&lt;/p&gt;</comment>
                            <comment id="13277055" author="zhihyu@ebaysf.com" created="Wed, 16 May 2012 19:50:11 +0000"  >&lt;p&gt;I stumbled on the following test failure twice (with D2799.6.patch on MacBook):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
testExecDeserialization(org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint)  Time elapsed: 0.028 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!
java.io.EOFException
  at java.io.DataInputStream.readFully(DataInputStream.java:180)
  at java.io.DataInputStream.readUTF(DataInputStream.java:592)
  at java.io.DataInputStream.readUTF(DataInputStream.java:547)
  at org.apache.hadoop.hbase.client.coprocessor.Exec.readFields(Exec.java:120)
  at org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint.testExecDeserialization(TestCoprocessorEndpoint.java:201)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13277168" author="phabricator@reviews.facebook.net" created="Wed, 16 May 2012 21:39:04 +0000"  >&lt;p&gt;Liyin has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  LGTM ! Thanks Mikhail !&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA, jxcn01, mbautin&lt;br/&gt;
Cc: jxcn01, Liyin&lt;/p&gt;</comment>
                            <comment id="13277182" author="phabricator@reviews.facebook.net" created="Wed, 16 May 2012 21:51:04 +0000"  >&lt;p&gt;stack has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;  lgtm&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:212 Will this be accurate if rows are inserted meantime (or deleted?).&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:201 This is great.  One day we should do size-based too.&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:472 Why not just write out our version as 3?  To save some bytes on wire?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Scan.java:102 Doesn&apos;t Scan and Get share common ancestor?&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java:647 THanks for doing this.&lt;br/&gt;
  src/test/java/org/apache/hadoop/hbase/client/TestScannersFromClientSide.java:452 You need to add below to each classified test for classification to work&lt;/p&gt;

&lt;p&gt;    @org.junit.Rule&lt;br/&gt;
    public org.apache.hadoop.hbase.ResourceCheckerJUnitRule cu =&lt;br/&gt;
      new org.apache.hadoop.hbase.ResourceCheckerJUnitRule();&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA, jxcn01, mbautin&lt;br/&gt;
Cc: jxcn01, Liyin&lt;/p&gt;</comment>
                            <comment id="13277188" author="phabricator@reviews.facebook.net" created="Wed, 16 May 2012 21:57:03 +0000"  >&lt;p&gt;madhuvaidya has commented on the revision &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;jira&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5104&quot; title=&quot;Provide a reliable intra-row pagination mechanism&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5104&quot;&gt;&lt;del&gt;HBASE-5104&lt;/del&gt;&lt;/a&gt; Provide a reliable intra-row pagination mechanism&quot;.&lt;/p&gt;

&lt;p&gt;INLINE COMMENTS&lt;br/&gt;
  src/main/java/org/apache/hadoop/hbase/client/Get.java:472 This was done to maintain inter-op if we are not using either the storeLimit or the storeOffset.&lt;/p&gt;

&lt;p&gt;REVISION DETAIL&lt;br/&gt;
  &lt;a href=&quot;https://reviews.facebook.net/D2799&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.facebook.net/D2799&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To: madhuvaidya, lhofhansl, Kannan, tedyu, stack, todd, JIRA, jxcn01, mbautin&lt;br/&gt;
Cc: jxcn01, Liyin&lt;/p&gt;</comment>
                            <comment id="13397242" author="hadoopqa" created="Wed, 20 Jun 2012 04:08:41 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12532637/jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-06-19_20_12_21.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12532637/jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-06-19_20_12_21.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 11 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestForceCacheImportantBlocks&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestCoprocessorEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2194//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2194//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2194//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2194//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2194//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2194//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2194//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2194//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13405471" author="hadoopqa" created="Tue, 3 Jul 2012 00:31:27 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12534463/jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-07-02_15_15_30.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12534463/jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-07-02_15_15_30.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 11 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 hadoop2.0.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    -1 javac.  The applied patch generated 5 javac compiler warnings (more than the trunk&apos;s current 4 warnings).&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.token.TestZKSecretWatcher&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestHMasterRPCException&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2312//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2312//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2312//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2312//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2312//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2312//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2312//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2312//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13406128" author="mikhail" created="Tue, 3 Jul 2012 22:36:45 +0000"  >&lt;p&gt;Committed.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12610413">HBASE-6954</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12538906">HBASE-5229</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12522655" name="ASF.LICENSE.NOT.GRANTED--D2799.1.patch" size="25391" author="phabricator@reviews.facebook.net" created="Sat, 14 Apr 2012 02:45:17 +0000"/>
                            <attachment id="12522665" name="ASF.LICENSE.NOT.GRANTED--D2799.2.patch" size="57305" author="phabricator@reviews.facebook.net" created="Sat, 14 Apr 2012 03:51:35 +0000"/>
                            <attachment id="12522735" name="ASF.LICENSE.NOT.GRANTED--D2799.3.patch" size="63720" author="phabricator@reviews.facebook.net" created="Mon, 16 Apr 2012 03:34:39 +0000"/>
                            <attachment id="12524087" name="ASF.LICENSE.NOT.GRANTED--D2799.4.patch" size="63742" author="phabricator@reviews.facebook.net" created="Wed, 25 Apr 2012 00:18:07 +0000"/>
                            <attachment id="12525758" name="ASF.LICENSE.NOT.GRANTED--D2799.5.patch" size="62656" author="phabricator@reviews.facebook.net" created="Sun, 6 May 2012 04:30:04 +0000"/>
                            <attachment id="12526586" name="ASF.LICENSE.NOT.GRANTED--D2799.6.patch" size="62656" author="phabricator@reviews.facebook.net" created="Fri, 11 May 2012 23:19:52 +0000"/>
                            <attachment id="12522843" name="jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-04-16_12_39_42.patch" size="67711" author="mikhail" created="Mon, 16 Apr 2012 19:40:06 +0000"/>
                            <attachment id="12532637" name="jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-06-19_20_12_21.patch" size="66985" author="mikhail" created="Wed, 20 Jun 2012 03:12:42 +0000"/>
                            <attachment id="12534360" name="jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-07-02_12_43_28.patch" size="67253" author="mikhail" created="Mon, 2 Jul 2012 19:44:03 +0000"/>
                            <attachment id="12534463" name="jira-HBASE-5104-Provide-a-reliable-intra-row-paginat-2012-07-02_15_15_30.patch" size="69406" author="mikhail" created="Mon, 2 Jul 2012 22:15:43 +0000"/>
                            <attachment id="12508882" name="testFilterList.rb" size="2899" author="kannanm" created="Thu, 29 Dec 2011 19:54:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Dec 2011 21:44:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>222293</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 24 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i015zj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4739</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>