<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:22:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-11364/HBASE-11364.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-11364] [BlockCache] Add a flag to cache data blocks in L1 if multi-tier cache</title>
                <link>https://issues.apache.org/jira/browse/HBASE-11364</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is a prerequisite for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11323&quot; title=&quot;BucketCache all the time!&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11323&quot;&gt;&lt;del&gt;HBASE-11323&lt;/del&gt;&lt;/a&gt; BucketCache on all the time.  It addresses a @lars hofhansl ask that we be able to ask that for some column families, even their data blocks get cached up in the LruBlockCache L1 tier in a multi-tier deploy as happens when doing BucketCache (CombinedBlockCache) setups.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12721519">HBASE-11364</key>
            <summary>[BlockCache] Add a flag to cache data blocks in L1 if multi-tier cache</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="stack">stack</assignee>
                                    <reporter username="stack">stack</reporter>
                        <labels>
                    </labels>
                <created>Mon, 16 Jun 2014 21:42:24 +0000</created>
                <updated>Sat, 21 Feb 2015 23:34:00 +0000</updated>
                            <resolved>Wed, 18 Jun 2014 03:34:28 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14033044" author="stack" created="Mon, 16 Jun 2014 21:47:16 +0000"  >&lt;p&gt;Adds to CacheConfig a flag cacheDataInL1.  Adds override to BlockCache#cacheBlock that takes the setting of this flag.  Acts on this flag in CombinedBlockCache.  I set this flag on all system tables.  I added a test that this flag has an effect.  Also tried it here locally to prove it works.&lt;/p&gt;

&lt;p&gt;I went through LruBlockCache and the doc doing fixup of IN_MEMORY and another pass over the block cache seciton.  When this edit goes in, will close &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-9131&quot; title=&quot;Add admin-level documention about configuration and usage of the Bucket Cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-9131&quot;&gt;&lt;del&gt;HBASE-9131&lt;/del&gt;&lt;/a&gt; because has that detail here.&lt;/p&gt;</comment>
                            <comment id="14033053" author="stack" created="Mon, 16 Jun 2014 21:53:06 +0000"  >&lt;p&gt;For I while I considered an abstract notion such as &apos;priority&apos; or &apos;hot&apos; column family with how its implemented then done by hbase internally setting IN_MEMORY and CACHE_DATA_IN_L1 but put that aside as work for another day.  All configs are fairly specific currently, CACHE_ON_WRITE, IN_MEMORY, etc., with particular meanings.  Here I am following the mold for now.&lt;/p&gt;</comment>
                            <comment id="14033179" author="hadoopqa" created="Mon, 16 Jun 2014 23:30:25 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12650658/11364.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12650658/11364.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12650658&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 12 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +   * &amp;lt;code&amp;gt;hbase(main):003:0&amp;gt; create &apos;t&apos;, {NAME =&amp;gt; &apos;t&apos;, CONFIGURATION =&amp;gt; {CACHE_DATA_IN_L1 =&amp;gt; &apos;true&apos;}}&amp;lt;/code&amp;gt;&lt;br/&gt;
+          LruBlockCache, and BucketCache, and SlabCache, which are both (usually) offheap. This section&lt;br/&gt;
+              two tiers and how blocks move between them is done by &amp;lt;classname&amp;gt;DoubleBlockCache&amp;lt;/classname&amp;gt;&lt;br/&gt;
+              &amp;lt;xref linkend=&quot;offheap.blockcache.slabcache&quot; /&amp;gt; for more detail on how DoubleBlockCache works.&lt;br/&gt;
+              It keeps all DATA blocks in the BucketCache and meta blocks &amp;#8211; INDEX and BLOOM blocks &amp;#8211;&lt;br/&gt;
+              works so differently, it is difficult to do a fair comparison between BucketCache and SlabCache.&lt;br/&gt;
+                xlink:href=&quot;http://hbase.apache.org/devapidocs/org/apache/hadoop/hbase/io/hfile/CacheConfig.html&quot; /&amp;gt;.&lt;br/&gt;
+                &amp;lt;programlisting&amp;gt;HColumnDescriptor.setInMemory(true);&amp;lt;/programlisting&amp;gt; if creating a table from java,&lt;br/&gt;
+                the shell: e.g.  &amp;lt;programlisting&amp;gt;hbase(main):003:0&amp;gt; create  &apos;t&apos;, &lt;/p&gt;
{NAME =&amp;gt; &apos;f&apos;, IN_MEMORY =&amp;gt; &apos;true&apos;}
&lt;p&gt;&amp;lt;/programlisting&amp;gt;&amp;lt;/para&amp;gt;&lt;br/&gt;
+              DoubleBlockCache is an abstraction layer that combines two caches, the smaller onHeapCache and the&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9779//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14033302" author="stack" created="Tue, 17 Jun 2014 01:33:30 +0000"  >&lt;p&gt;A review please.&lt;/p&gt;</comment>
                            <comment id="14034329" author="stack" created="Tue, 17 Jun 2014 20:38:49 +0000"  >&lt;p&gt;@apurtell or &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=larsh&quot; class=&quot;user-hover&quot; rel=&quot;larsh&quot;&gt;larsh&lt;/a&gt; Any chance of a review?  Thanks lads.&lt;/p&gt;</comment>
                            <comment id="14034642" author="apurtell" created="Wed, 18 Jun 2014 00:19:41 +0000"  >&lt;p&gt;+1.&lt;/p&gt;

&lt;p&gt;Thanks for adding those bits of javadoc along with the manual update.&lt;/p&gt;
</comment>
                            <comment id="14034767" author="stack" created="Wed, 18 Jun 2014 03:34:28 +0000"  >&lt;p&gt;Committed to master.  Thanks for the review &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14034874" author="hudson" created="Wed, 18 Jun 2014 06:32:38 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #5216 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5216/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5216/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11364&quot; title=&quot;[BlockCache] Add a flag to cache data blocks in L1 if multi-tier cache&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11364&quot;&gt;&lt;del&gt;HBASE-11364&lt;/del&gt;&lt;/a&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;BlockCache&amp;#93;&lt;/span&gt; Add a flag to cache data blocks in L1 if multi-tier cache (stack: rev 3ed3c5513cc26a2158173caab8d36b6d7f544009)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/LruBlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/bucket/TestBucketCache.java&lt;/li&gt;
	&lt;li&gt;src/main/docbkx/book.xml&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestCacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CacheConfig.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHeapMemoryManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/bucket/BucketCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/slab/SlabCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/DoubleBlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HTableDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/slab/SingleSizeCache.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/CombinedBlockCache.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/HColumnDescriptor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/io/hfile/TestLruBlockCache.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14036507" author="lhofhansl" created="Wed, 18 Jun 2014 22:11:05 +0000"  >&lt;p&gt;Belated +1&lt;/p&gt;

&lt;p&gt;So this implies that storage will be L2 by default and L1 is opt in?&lt;br/&gt;
In the interested of the least surprise we might want to reverse that...?&lt;/p&gt;</comment>
                            <comment id="14036731" author="stack" created="Thu, 19 Jun 2014 00:33:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;So this implies that storage will be L2 by default and L1 is opt in?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Currently, if you enable bucketcache, DATA blocks of user tables are kept in L2 (with this option making it so you can instead have them live in L1 if you set option on your HColumnDescriptor.&lt;/p&gt;

&lt;p&gt;If we enable block cache as on by default, then yes, the default would be the above.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In the interested of the least surprise we might want to reverse that...?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We could do that.  It&apos;d be strange though because we&apos;d have block cache on but nothing would be using it, not unless folks change schema.... which they don&apos;t usually do.  Would be better to just leave block cache off and encourage folks to enable it?&lt;/p&gt;</comment>
                            <comment id="14036808" author="stack" created="Thu, 19 Jun 2014 01:46:59 +0000"  >&lt;p&gt;One other thought is that we&apos;d untie L1 and L2 caches and have them work independent of each other; i.e. not use CombinedBlockCache which keeps meta blocks up in L1 and data down in L2... rather we&apos;d just have evictions from L1 go to L2 and then out of L2... Double caching is possible .. they&apos;d work like the SlabCache setup... but that seemed to generate more GC&apos;ing in test.  I can try testing.&lt;/p&gt;</comment>
                            <comment id="14037008" author="lhofhansl" created="Thu, 19 Jun 2014 06:07:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;Currently, if you enable bucketcache, DATA blocks of user tables are kept in L2 (with this option making it so you can instead have them live in L1 if you set option on your HColumnDescriptor.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I can see this both way. Since off caching is a separate option your way is better: Once off heap cache is enabled, data goes there by default.&lt;/p&gt;</comment>
                            <comment id="14037745" author="stack" created="Thu, 19 Jun 2014 19:41:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I can see this both way. Since off caching is a separate option your way is better: Once off heap cache is enabled, data goes there by default.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Come again Lars.  I don&apos;t follow.  Options are:&lt;/p&gt;

&lt;p&gt;1. Do NOT enable offheap by default.  Just talk it up as the way to go underlining it will make pure in-memory access slower (but you can make it so some of your tables are pegged in memory if you want because of the flag here).  Upside: No surprise.  Downside: Folks don&apos;t read manuals nor change defaults.&lt;br/&gt;
2. Enable offheap BucketCache using CombinedBucketCache. When folks upgrade, latency to user-level DATA blocks will go up.  Upsides: less GC, more cached.  Downside: those who notice added latency might get upset.  Changing schema will require alter table.&lt;br/&gt;
3. Enable offheap BucketCache but in additive mode where we just add in an L2 under the L1 LruBlockCache.  Upside: Additive.  Downside: Could make for more GC.&lt;/p&gt;

&lt;p&gt;Of the above, maybe 1. is the way to go?  2. may surprise in that perf and GC gets better of a sudden (this would be ok) but others may be surprised that their latencies have gone up for some key tables.  3. may actually make GC worse (at least that is case in the SlabCache case which is similar and the L1/L2 layout doesn&apos;t get good review to date going by  &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-8894&quot; title=&quot;Forward port compressed l2 cache from 0.89fb&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-8894&quot;&gt;&lt;del&gt;HBASE-8894&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Will test 3.&lt;/p&gt;
</comment>
                            <comment id="14037747" author="stack" created="Thu, 19 Jun 2014 19:41:55 +0000"  >&lt;p&gt;Moving the last comment to the more appropriate issue, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11323&quot; title=&quot;BucketCache all the time!&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11323&quot;&gt;&lt;del&gt;HBASE-11323&lt;/del&gt;&lt;/a&gt; bucketcache on all the time.&lt;/p&gt;</comment>
                            <comment id="14037753" author="lhofhansl" created="Thu, 19 Jun 2014 19:44:42 +0000"  >&lt;p&gt;I was saying the way you have it is good &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14037761" author="stack" created="Thu, 19 Jun 2014 19:50:09 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; So you are for option #1 (unless option #3 shows well in testing I suppose).&lt;/p&gt;</comment>
                            <comment id="14037773" author="lhofhansl" created="Thu, 19 Jun 2014 19:59:10 +0000"  >&lt;p&gt;Yeah option #1.&lt;br/&gt;
I.e.:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Have config in hbase-site.xml to enable the bucketcache (default off)&lt;/li&gt;
	&lt;li&gt;when bucket cache is enabled via config it is the default (not schema changes required)&lt;/li&gt;
	&lt;li&gt;folks can selectively pull tables into L1 only via a schema change&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We can also make the config option default on going forward. That&apos;d be almost identical to your option #2, only that it could disabled via a config. But maybe we do not want more configs?&lt;/p&gt;

&lt;p&gt;#3 will be incredibly hard to get right for all cases and lead to double caching and potentially even more GC as we churn blocks through L2 to L1 and back.&lt;/p&gt;</comment>
                            <comment id="14037811" author="stack" created="Thu, 19 Jun 2014 20:16:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;We can also make the config option default on going forward. That&apos;d be almost identical to your option #2, only that it could disabled via a config. But maybe we do not want more configs?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No more configs!&lt;/p&gt;

&lt;p&gt;Maybe go #1 for a release then in 1.1, enable bucket cache as default.  Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14037970" author="apurtell" created="Thu, 19 Jun 2014 21:57:42 +0000"  >&lt;p&gt;I vote for option #1 but with CACHE_DATA_IN_L1 defaulting to false if bucket cache is configured. &lt;/p&gt;</comment>
                            <comment id="14331162" author="enis" created="Sat, 21 Feb 2015 23:34:00 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12720480">HBASE-11323</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12650658" name="11364.txt" size="49808" author="stack" created="Mon, 16 Jun 2014 21:47:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Jun 2014 23:30:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>399715</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1wt6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>399824</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Adds a flag to HColumnDescriptor, cacheDataInL1.  In shell, you set it as follows: hbase(main):003:0&amp;gt; create &amp;#39;t&amp;#39;, {NAME =&amp;gt; &amp;#39;t&amp;#39;, CONFIGURATION =&amp;gt; {CACHE_DATA_IN_L1 =&amp;gt; &amp;#39;true&amp;#39;}}</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>