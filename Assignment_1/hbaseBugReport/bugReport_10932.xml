<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:18:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10932/HBASE-10932.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10932] Improve RowCounter to allow mapper number set/control</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10932</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The typical use case of RowCounter is to do some kind of data integrity checking, like after exporting some data from RDBMS to HBase, or from one HBase cluster to another, making sure the row(record) number matches. Such check commonly won&apos;t require much on response time.&lt;br/&gt;
Meanwhile, based on current impl, RowCounter will launch one mapper per region, and each mapper will send one scan request. Assuming the table is kind of big like having tens of regions, and the cpu core number of the whole MR cluster is also enough, the parallel scan requests sent by mapper would be a real burden for the HBase cluster.&lt;br/&gt;
So in this JIRA, we&apos;re proposing to make rowcounter support an additional option &quot;--maps&quot; to specify mapper number, and make each mapper able to scan more than one region of the target table.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12707183">HBASE-10932</key>
            <summary>Improve RowCounter to allow mapper number set/control</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="carp84">Yu Li</assignee>
                                    <reporter username="carp84">Yu Li</reporter>
                        <labels>
                    </labels>
                <created>Tue, 8 Apr 2014 13:54:16 +0000</created>
                <updated>Fri, 25 Apr 2014 19:05:43 +0000</updated>
                            <resolved>Fri, 25 Apr 2014 19:05:43 +0000</resolved>
                                                                    <component>mapreduce</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13962998" author="carp84" created="Tue, 8 Apr 2014 13:58:16 +0000"  >&lt;p&gt;In the implementation, we will check and make sure the map number set to be smaller than region number of the target table. And if the map number larger than region number, it will go in the old way, or say one mapper per region.&lt;/p&gt;

&lt;p&gt;Will attach the patch soon.&lt;/p&gt;</comment>
                            <comment id="13963167" author="jdcryans" created="Tue, 8 Apr 2014 16:54:16 +0000"  >&lt;p&gt;It&apos;s probably a bug that TableInputFormatBase doesn&apos;t do it, looking at the old one (in org.apache.hadoop.hbase.mapred) you can see that it does this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   * Splits are created in number equal to the smallest between numSplits and
   * the number of {@link HRegion}s in the table. If the number of splits is
   * smaller than the number of {@link HRegion}s then splits are spanned across
   * multiple {@link HRegion}s and are grouped the most evenly possible. In the
   * &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; splits are uneven the bigger splits are placed first in the
   * {@link InputSplit} array.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And you don&apos;t need a new parameter.&lt;/p&gt;</comment>
                            <comment id="13963230" author="ndimiduk" created="Tue, 8 Apr 2014 17:54:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;It&apos;s probably a bug that TableInputFormatBase doesn&apos;t do it, looking at the old one (in org.apache.hadoop.hbase.mapred)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13963852" author="carp84" created="Wed, 9 Apr 2014 06:06:55 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ndimiduk&quot; class=&quot;user-hover&quot; rel=&quot;ndimiduk&quot;&gt;Nick Dimiduk&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;Are you suggesting using the RowCounter in the old o.a.hadoop.hbase.mapred package? It seems to me this class is deprecated and it&apos;s using old mapred APIs. What&apos;s more, while issue the rowcounter command using hbase/hadoop script, it will launch RowCounter in o.a.hadoop.hbase.mapreduce package by default.&lt;/p&gt;

&lt;p&gt;For the getSplits method in the new TableInputFormatBase, from the method comments, it&apos;s designed to make splits number matching number of regions, so I don&apos;t think this is a bug but something to improve for the &lt;b&gt;in-use&lt;/b&gt; RowCounter:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /**
   * Calculates the splits that will serve as input &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the map tasks. The
   * number of splits matches the number of regions in a table.
   *
   * @param context  The current job context.
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; The list of input splits.
   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException When creating the list of splits fails.
   * @see org.apache.hadoop.mapreduce.InputFormat#getSplits(
   *   org.apache.hadoop.mapreduce.JobContext)
   */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And this is the exact reason we introduce a new RowCounterInputFormat class to override the getSplits method rather than modifying the existing one.&lt;/p&gt;

&lt;p&gt;As to the new parameter, yes user could pass -Dmapred.map.tasks, but I think it better to add an explicit parameter so user could see how it works from usage message. IMHO, assuming hbase users have background of MR might not be a good idea.&lt;/p&gt;</comment>
                            <comment id="13963868" author="carp84" created="Wed, 9 Apr 2014 06:32:12 +0000"  >&lt;p&gt;Update the patch, add test case in TestRowCounter for mapper number setting&lt;/p&gt;</comment>
                            <comment id="13964318" author="jdcryans" created="Wed, 9 Apr 2014 16:08:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;Are you suggesting using the RowCounter in the old o.a.hadoop.hbase.mapred package?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, I&apos;m suggesting fixing the new TableInputFormatBase to be able to get splits to crossover regions. Why have a different InputFormat for RowCounter? What makes RowCounter so special that it&apos;s the only MR job that would beneficiate from this functionality? &lt;/p&gt;

&lt;p&gt;I was pointing at the old TableInputFormatBase to show that it used to do this, and that the new one doesn&apos;t do it (I&apos;m guessing because MR doesn&apos;t pass mapred.map.tasks as a hint anymore).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;IMHO, assuming hbase users have background of MR might not be a good idea.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I understand the concern but I don&apos;t see the value here since it&apos;s not like you&apos;re trying to use a more HBase-y concept to describe mappers, the configuration parameter is still called &quot;maps&quot;. Even if you call it something else, how do you then explain what it does without relying on MR concepts and then how do you decide how mappers you need without having prior knowledge of MR and your own cluster setup?&lt;/p&gt;

&lt;p&gt;I think this new configuration parameter is more suitable for advanced usage since to set it correctly you need to know how your cluster is laid out and you think you can do better than the default behavior.&lt;/p&gt;

&lt;p&gt;Going back to your original problem:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Assuming the table is kind of big like having tens of regions, and the cpu core number of the whole MR cluster is also enough, the parallel scan requests sent by mapper would be a real burden for the HBase cluster.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In the MRv1 world you specify the number of mapper slots per machine, so using this &quot;maps&quot; configuration may or may not lessen the burden on the cluster. For example, 5 mapper slots per machine, 5 machines and 25 regions (so everything fits nicely). By default, you&apos;ll get 25 mappers running at the same time, 5 per machine. Let&apos;s say you use this new &quot;maps&quot; configuration and set to 20. Well there&apos;s nothing preventing the JobTracker from filling up 4 machines and leave one quiet (maybe because it&apos;s already running something, etc).&lt;/p&gt;

&lt;p&gt;YARN does a much better job at this since it takes into account CPUs and memory, so it might just solve your problem without requiring additional tuning.&lt;/p&gt;</comment>
                            <comment id="13964370" author="haosdent@gmail.com" created="Wed, 9 Apr 2014 16:54:18 +0000"  >&lt;blockquote&gt;
&lt;p&gt;the configuration parameter is still called &quot;maps&quot;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&quot;scanner.num&quot; maybe better.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let&apos;s say you use this new &quot;maps&quot; configuration and set to 20.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If I am a user, maybe I would set to 2 or other lower value here.&lt;/p&gt;

&lt;p&gt;Anyway, I think this issue is an useful issue. Because of have some import online businesses in my clusters, any unnecessary heavy IO could unacceptable. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt; focus on code style while &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt; focus on how to handle this scenario and make the number of mappers configurable. Maybe we need a consensus about choose which way to workaround this issue here. Just my opinions.&lt;/p&gt;</comment>
                            <comment id="13964389" author="jdcryans" created="Wed, 9 Apr 2014 17:05:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;Because of have some import online businesses in my clusters, any unnecessary heavy IO could unacceptable.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Isn&apos;t that a resource management concern? Won&apos;t using a proper scheduler on MapReduce or YARN be way more effective than relying on HBase users setting a number of scans?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Jean-Daniel Cryans focus on code style &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m sorry if I&apos;m misunderstanding you, but I&apos;m not following what you&apos;re trying to say here.&lt;/p&gt;</comment>
                            <comment id="13964433" author="jdcryans" created="Wed, 9 Apr 2014 17:34:12 +0000"  >&lt;p&gt;Thinking about this more:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If I am a user, maybe I would set to 2 or other lower value here&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It sounds like, in order to solve your use case without setting up a scheduler, you could simply use the &quot;count&quot; command in the shell, since the only thing below 2 scans is 1 scan &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13964924" author="carp84" created="Thu, 10 Apr 2014 03:04:34 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What makes RowCounter so special that it&apos;s the only MR job that would beneficiate from this functionality?&lt;br/&gt;
I was pointing at the old TableInputFormatBase to show that it used to do this, and that the new one doesn&apos;t do it &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok, got your point now. And yes, we could remove the special InputFormat for RowCounter and &lt;em&gt;&lt;b&gt;fix&lt;/b&gt;&lt;/em&gt; the new TableInputFormatBase. I created the special InputFormat for RowCounter just because from the comments of the new TableInputFormatBase&apos;s getSplits method, I thought it&apos;s designed for purpose to make each mapper just scan one single region...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I&apos;m guessing because MR doesn&apos;t pass mapred.map.tasks as a hint anymore&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In my understanding, it still passes mapred.map.tasks as a hint, only that the param is contained in the JobContext, so no need of a special int param for getSplits any more.&lt;br/&gt;
Regarding the parameter to pass the mapred.map.tasks hint, I&apos;m referring to distcp command, it has a special &quot;-m&quot; param there:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;usage: distcp OPTIONS [source_path...] &amp;lt;target_path&amp;gt;
OPTIONS
...
-m &amp;lt;arg&amp;gt;               Max number of concurrent maps to use for copy
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Well there&apos;s nothing preventing the JobTracker from filling up 4 machines and leave one quiet&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Oh, there&apos;s some misunderstanding here. While talking about &quot;real burden for the HBase cluster&quot;, I didn&apos;t mean CPU burden caused by MR job but IO burden caused by scan requests. If we have 25 mappers there would be 25 scan requests, while w/ 20 mappers there would only be 20 scan requests. This is useful especially in multi-tenant env, when we need to check data integrity for one user after data importing meanwhile don&apos;t want the scan burden to slow down RT of other users&apos; request. Makes sense? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13974306" author="jdcryans" created="Fri, 18 Apr 2014 17:58:33 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;, I forgot about this issue, let me address your latest replies.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I thought it&apos;s designed for purpose to make each mapper just scan one single region&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s more an implementation detail than a design, and we can further improve the implementation by giving more control to the power users.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is useful especially in multi-tenant env, when we need to check data integrity for one user after data importing meanwhile don&apos;t want the scan burden to slow down RT of other users&apos; request.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, but again, resource management is a broader issue. I doubt that RowCounter is the only job that needs to be throttled, what about VerifyReplication? Or Export? Those jobs usually aren&apos;t latency sensitive and can run in the background. This can be simply handled by a correctly configured job scheduler, that&apos;s what they do.&lt;/p&gt;</comment>
                            <comment id="13980642" author="carp84" created="Fri, 25 Apr 2014 02:40:49 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;Sorry I forgot about this issue also...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I doubt that RowCounter is the only job that needs to be throttled, what about VerifyReplication? Or Export?&lt;br/&gt;
This can be simply handled by a correctly configured job scheduler, that&apos;s what they do.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see, so you&apos;re suggesting to find a more generous solution for such control. But I didn&apos;t quite catch the point of job scheduler, in my understanding job scheduler is cluster-level and cannot be configured per-job, right? If so, I&apos;m not sure whether we can change the scheduling policy just for hbase, since commonly lots of other kinds of jobs will be running in the MR/Yarn cluster and the hbase jobs is only a small portion&lt;br/&gt;
Anyway, this is an interesting topic and will spend some more time thinking about the VerifyReplication/Export cases and the general solution&lt;/p&gt;</comment>
                            <comment id="13981271" author="jdcryans" created="Fri, 25 Apr 2014 17:23:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;But I didn&apos;t quite catch the point of job scheduler, in my understanding job scheduler is cluster-level and cannot be configured per-job, right? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well, by using a scheduler, you can constrain certain types of jobs so that they don&apos;t run as fast as they can. For example, with the fair scheduler you can configure a pool (let&apos;s call it the &quot;slow pool&quot;) to have only &lt;tt&gt;maxMaps&lt;/tt&gt; running concurrently on the cluster. Then, when you run your &lt;tt&gt;RowCounter&lt;/tt&gt; jobs and whatnot, you can tie them automatically to the slow pool. Hadoop cluster operators usually know how to use a scheduler, whereas having to rely on the person who runs the jobs to configure them correctly can lead to human errors like &quot;oops I forgot to pass the maps configuration to my row counter and now the website is down&quot;.&lt;/p&gt;

&lt;p&gt;It also works well if you have two users who want to concurrently run a row counter; they&apos;ll both get in the slow pool and only two mappers will run (alternating between the two jobs, unless you set different weights because one user is more important than the other, etc etc). If you were to rely on individual users specifying the correct number of maps, and they both set their job to use two, then you&apos;d have four mappers running. Back to square one.&lt;/p&gt;

&lt;p&gt;Anyways, all of this to say that there&apos;s a more generic way of doing this, and it already exists. Can we close this jira, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=carp84&quot; class=&quot;user-hover&quot; rel=&quot;carp84&quot;&gt;Yu Li&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13981441" author="carp84" created="Fri, 25 Apr 2014 18:51:57 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jdcryans&quot; class=&quot;user-hover&quot; rel=&quot;jdcryans&quot;&gt;Jean-Daniel Cryans&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;If we follow this logic, do you mean the &quot;-m&quot; option of DistCp also useless?&lt;/p&gt;

&lt;p&gt;IMHO, the configuration of job scheduler in JT/Yarn is the server-side configuration, while the &quot;-m&quot; option is the client-side configuration, and both are necessary.&lt;/p&gt;

&lt;p&gt;Back to the scheduler discussion, I believe job scheduler could only limit the max resource one user could use, and it depends on the user to decide how he uses the resource assigned to him. Like in the example you gave, what if the &quot;slow&quot; pool have 4 slots while only one user submit a rowcounter and he prefers only 2 maps running in parallel? I&apos;m afraid asking the cluster operator to create another &quot;slow&quot; pool with only 2 slots is not a good solution.&lt;/p&gt;

&lt;p&gt;In a common hbase ETL application, user would need to first do distcp, then bulkload, then rowcounter to check data integrity, and he would prefer distcp to run as fast as possible w/ low scan workload during rowcounter. In this case, he would need to submit the distcp job to the &quot;fast&quot; queue while the rowcounter job to the &quot;slow&quot; queue? And he also needs to get access to both queues...&lt;/p&gt;

&lt;p&gt;Anyway, this is a real requirement from user in our product env, and I&apos;m just trying to contribute this to community in case this can help other users. But if you still think it useless, just go ahead and close it, you&apos;re the boss after all. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;And no matter what decision made, thanks for your time on reviewing this JIRA and discussion.&lt;/p&gt;</comment>
                            <comment id="13981459" author="jdcryans" created="Fri, 25 Apr 2014 19:05:43 +0000"  >&lt;p&gt;Resolving as won&apos;t fix. If you want to work on a more general solution, like adding this option to the TIF, please open a new jira. Thanks.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12639212" name="HBASE-10932_v1.patch" size="20425" author="carp84" created="Tue, 8 Apr 2014 16:26:25 +0000"/>
                            <attachment id="12639350" name="HBASE-10932_v2.patch" size="24916" author="carp84" created="Wed, 9 Apr 2014 06:32:12 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 8 Apr 2014 16:54:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>385506</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 34 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ueuv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>385773</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>