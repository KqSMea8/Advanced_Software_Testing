<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:57:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1886/HBASE-1886.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1886] move table and column family attributes to ZK to make them live</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1886</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is a first cut at moving table and column family attributes up to ZK where they can be modified any time without requiring a disable/enable table cycle. Adds methods to ZooKeeperWrapper for support server side. Adds methods to HTableInterface for client side access. Client side talks directly to ZK. &lt;/p&gt;

&lt;p&gt;The new hierarchy for attributes in ZK is like:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;/hbase
  /table
    /&amp;lt;table-name&amp;gt;
      /attr
        /&amp;lt;table-attr-name&amp;gt;
        /&amp;lt;family-name&amp;gt;
          /&amp;lt;family-attr-name&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As before attribute names and values are byte[], but now that they are hosted in ZK, the path delimiter (&apos;/&apos;) cannot be used.&lt;/p&gt;

&lt;p&gt;Attached patch compiles but has not been tested. I put it up for a concept review. Next step before this is functional is to deprecate the attribute related methods on HTD and HCD and chase through the warnings to find all users who should be updated to use the ZK wrapper or new HTable methods instead. And, of course, then add test cases that successfully complete.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12437247">HBASE-1886</key>
            <summary>move table and column family attributes to ZK to make them live</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="apurtell">Andrew Purtell</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Mon, 5 Oct 2009 02:11:47 +0000</created>
                <updated>Fri, 20 Nov 2015 13:01:39 +0000</updated>
                            <resolved>Fri, 23 Oct 2009 22:41:28 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12762068" author="apurtell" created="Mon, 5 Oct 2009 02:18:29 +0000"  >&lt;p&gt;The master copies table and family attributes up to ZK out of the table descriptor during the initial MetaScanner scan and from createTable. Attributes are written back to all descriptors in all regions of the table in META by the Master when shutdown is first initiated. deleteTable causes appropriate deletions.&lt;/p&gt;</comment>
                            <comment id="12767383" author="jdcryans" created="Mon, 19 Oct 2009 17:02:42 +0000"  >&lt;p&gt;I think this shouldn&apos;t be in the 0.20 branch, it&apos;s a new feature that changes stuff directly where we are the weakest eg .META. scanner. &lt;/p&gt;

&lt;p&gt;About the patch.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Minor: you put the client methods in HTable instead of HBaseAdmin; the way I see it HTable is used for gets/puts/scans but not for administrative purposes.&lt;/li&gt;
	&lt;li&gt;I think ZKW should be refactored, your work shows it well.&lt;/li&gt;
	&lt;li&gt;If I understand it well, your patch relies on the SyncTableAttributes called every now and then to sync the Master internal state with what clients may have changed in ZK. Instead, would it be better to use watchers?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks for starting work on this!&lt;/p&gt;</comment>
                            <comment id="12767393" author="streamy" created="Mon, 19 Oct 2009 17:29:12 +0000"  >&lt;p&gt;Agree with JD on all points.  Don&apos;t think this should be part of 0.20 branch, methods belong in HBaseAdmin, and we should be using ZK watchers properly not artificially synchronizing.&lt;/p&gt;

&lt;p&gt;As for layout in ZK... Do we want this very hierarchical layout with a high number of total nodes and where nodes are actually storing a good bit of the data (attribute names, family names, etc)... &lt;/p&gt;

&lt;p&gt;Another thought is to use JSON to store this stuff in fewer total nodes.  Dealing with lots of hierarchy can make it much more confusing to interact with this stuff.  Rather than just watching for changed data on a node (for example, change in table configuration) you have to watch for a change in the children of a node.  The changed children event doesn&apos;t actually tell you what has changed, you have to do some kind of DIFF to know what&apos;s changed.  To monitor for changes to a single attribute of a single family, you&apos;d have to have watchers for every single attribute value node.  As long as we have &lt;em&gt;some&lt;/em&gt; hierarchy, so there isn&apos;t just one huge JSON string, then we could make usage/monitoring much easier.&lt;/p&gt;

&lt;p&gt;Sorry if above is confusing... But ideally we&apos;d want to be able to actually monitor for live changes to any of this stuff.  The more hierarchy and nodes we have (and the more we have to monitor for changes in the children of a node VS changes in the data of a node), the more difficult it will be.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;/hbase
  /table
    /&amp;lt;table-name&amp;gt;({&apos;json&apos;:&apos;table attributes&apos;})
      /&amp;lt;family-name&amp;gt;({&apos;json&apos;:&apos;family attributes&apos;})
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Not sure how big of a difference that actually makes, but I&apos;ve built a few systems around ZK and have definitely found reducing hierarchy and keeping stuff together in JSON has kept things easier to manage (when you don&apos;t have a reason to read the dimensions individually, so no downside to aggregating into a json string).&lt;/p&gt;

&lt;p&gt;Good stuff, Andrew.&lt;/p&gt;</comment>
                            <comment id="12767395" author="apurtell" created="Mon, 19 Oct 2009 17:29:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;it&apos;s a new feature that changes stuff directly where we are the weakest eg .META. scanner.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I have an internal customer who would like live attributes in 0.20 branch. I hope we can work something out. Not sure what you mean about changing the META scanner... I don&apos;t recall making any changes there.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;our patch relies on the SyncTableAttributes called every now and then to sync the Master internal state with what clients may have changed in ZK&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Only on shutdown presently. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Thanks for starting work on this!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks. It&apos;s definitely a work in progress. I&apos;m hoping to have some time to iterate on it this week and will address all of your comments. Thanks for looking at the patch J-D!&lt;/p&gt;</comment>
                            <comment id="12767398" author="streamy" created="Mon, 19 Oct 2009 17:31:31 +0000"  >&lt;p&gt;One other thing.  We might bump families into their own node under the table.  I expect we will have other things we&apos;d like to publish into ZK on a per-table basis (and probably per-family), like load, status, whatever.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;/hbase
  /table
    /&amp;lt;table-name&amp;gt;
      /families/&amp;lt;family-name&amp;gt;
      /load({&apos;json&apos;:&apos;load info&apos;})
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="12767400" author="apurtell" created="Mon, 19 Oct 2009 17:33:15 +0000"  >&lt;p&gt;@JG: Good suggestions, thanks. And thanks for looking at the patch. I agree with all of your points except branch inclusion.&lt;/p&gt;</comment>
                            <comment id="12767411" author="apurtell" created="Mon, 19 Oct 2009 17:43:23 +0000"  >&lt;p&gt;Ah, now I see the (minor) disconnect. SyncTableAttributes is only for writing modified attributes as new HTD in all appropriate regions in META on master shutdown. (Misnamed/confusing?) Otherwise what is in ZK is live and canonical across rolling restarts, master fail overs, region server restarts, etc. I haven&apos;t yet gone in and replaced all attribute related references to HTD and HCD in master and regionserver with calls into the new ZK methods. That was going to be next. Now first up is a second take incorporating all feedback.&lt;/p&gt;</comment>
                            <comment id="12767432" author="streamy" created="Mon, 19 Oct 2009 18:12:42 +0000"  >&lt;p&gt;I have a few reasons for not wanting this part of branch, though I understand you needing it for internal use.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;This is not a standalone issue... the design of this should be part of the larger master redesign / increased usage of ZK (create/enable/disable tables, region assignment, load balancing, etc)&lt;/li&gt;
	&lt;li&gt;Putting this into branch while also moving forward with more changes for trunk could mean a fork in ZK usage between the two&lt;/li&gt;
	&lt;li&gt;And strictly speaking, this is a major change, not a major bug, and really doesn&apos;t belong in a minor revision&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;d like to expand this conversation to be about all the stuff we want to move into ZK, how we will design our usage of ZK, etc... rather than focusing on this single change.&lt;/p&gt;

&lt;p&gt;On the other hand, we haven&apos;t had much work done in trunk around this stuff... this could be a good first step.  I just don&apos;t want to tie our hands or limit our thinking because we want to put this into branch.&lt;/p&gt;</comment>
                            <comment id="12767436" author="streamy" created="Mon, 19 Oct 2009 18:18:38 +0000"  >&lt;p&gt;Also, if attributes are node names, they cannot just be byte[] can they?  ZK api uses String.&lt;/p&gt;</comment>
                            <comment id="12767437" author="jdcryans" created="Mon, 19 Oct 2009 18:20:48 +0000"  >&lt;p&gt;+1 on John&apos;s post.&lt;/p&gt;</comment>
                            <comment id="12767634" author="apurtell" created="Tue, 20 Oct 2009 00:28:13 +0000"  >&lt;p&gt;Un-target branch after -2.&lt;/p&gt;</comment>
                            <comment id="12767638" author="apurtell" created="Tue, 20 Oct 2009 00:48:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;if attributes are node names, they cannot just be byte[] can they? ZK api uses String. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Keys are passed through Bytes.toStringBinary before becoming node names. But also the path separator needs to be escaped. If only printable characters are used this is basically a no-op. (Need to check if toStringBinary escapes more than != 32 &amp;lt;= 127)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;d like to expand this conversation to be about all the stuff we want to move into ZK, how we will design our usage of ZK, etc..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure. Regarding attributes in particular, how about this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;/hbase
  /table
    /attr({&apos;json&apos;:&apos;table attributes&apos;})
      /families/&amp;lt;family-name&amp;gt;
        /attr({&apos;json&apos;:&apos;family attributes&apos;})
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;with all attributes for a table or family wrapped up in a single JSON body. Assumes the rest will be dropped in place around it. &lt;/p&gt;</comment>
                            <comment id="12767640" author="apurtell" created="Tue, 20 Oct 2009 00:49:00 +0000"  >&lt;p&gt;Sorry the formatting in the above is off. Table attr and families root should be at the same level.&lt;/p&gt;</comment>
                            <comment id="12767641" author="streamy" created="Tue, 20 Oct 2009 01:00:33 +0000"  >&lt;p&gt;Binary issues doesn&apos;t really matter because now we&apos;re putting attributes into json.  Only remaining issue would be with table names and family names, however these are already limited to printable characters which should be fine going from byte[] -&amp;gt; String -&amp;gt; byte[] (and we&apos;ll need to exclude slashes as well), right?&lt;/p&gt;

&lt;p&gt;Attributes into their own node sounds good.&lt;/p&gt;</comment>
                            <comment id="12769487" author="stack" created="Fri, 23 Oct 2009 22:21:36 +0000"  >&lt;p&gt;I took a quick look at the patch.  I&apos;ve been trying to do a bit of thinking on this topic myself as part of master rewrite design writeup: &lt;a href=&quot;http://wiki.apache.org/hadoop/Hbase/MasterRewrite&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/Hbase/MasterRewrite&lt;/a&gt; (as part of the rewrite master issue).  I&apos;d like to be a little more radical and move schema to zk too. &lt;/p&gt;

&lt;p&gt;After chatting w/ J-D, I&apos;m thinking we&apos;d have a single tables znode up in zk.  Its content is a JSON object that is a list of tables in the cluster.  This JSON object would have two attributes: status and schema.  The status would have attributes read-only, disabled, no-flush (these states seem to be mutually exclusive but I don&apos;t want to disallow setting more than attribute on a table).  The schema would have the table&apos;s schema in JSON.&lt;/p&gt;

&lt;p&gt;Every RS would have a watcher on this znode &amp;#8211; just one watcher rather than one-per-attribute as you&apos;d need using your scheme?  If tables changed, regionservers would react by checking every region against the content of the tables file.  Could get a little involved if its carrying 1k regions, there are 1k tables, and one little attribute changed... but won&apos;t be bad either since just a spin through in-memory content.&lt;/p&gt;
</comment>
                            <comment id="12769498" author="apurtell" created="Fri, 23 Oct 2009 22:37:34 +0000"  >&lt;p&gt;Initially this was something incremental because I was thinking about branch. I&apos;m okay if you want to close this as duplicate of the master rewrite issue. After input from JD and JG this went in that direction anyhow. &lt;/p&gt;</comment>
                            <comment id="12769501" author="stack" created="Fri, 23 Oct 2009 22:41:28 +0000"  >&lt;p&gt;Resolve as duplicate of hbase-1816.... will carry on discussion in here over in the &quot;master rewrite&quot; issue.&lt;/p&gt;</comment>
                            <comment id="15017859" author="lars_francke" created="Fri, 20 Nov 2015 13:01:39 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12421245" name="live_attributes.patch" size="27291" author="apurtell" created="Mon, 5 Oct 2009 02:12:04 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 19 Oct 2009 17:02:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32301</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hfrz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99818</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>