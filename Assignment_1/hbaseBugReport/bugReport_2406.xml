<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:01:36 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-2406/HBASE-2406.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-2406] Define semantics of cell timestamps/versions</title>
                <link>https://issues.apache.org/jira/browse/HBASE-2406</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;There is a lot of general confusion over the semantics of the cell timestamp. In particular, a couple questions that often come up:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If multiple writes to a cell have the same timestamp, are all versions maintained or just the last?&lt;/li&gt;
	&lt;li&gt;Is it OK to write cells in a non-increasing timestamp order?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Let&apos;s discuss, figure out what semantics make sense, and then move towards (a) documentation, (b) unit tests that prove we have those semantics.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12461075">HBASE-2406</key>
            <summary>Define semantics of cell timestamps/versions</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="pranavkhaitan">Pranav Khaitan</assignee>
                                    <reporter username="tlipcon">Todd Lipcon</reporter>
                        <labels>
                    </labels>
                <created>Sat, 3 Apr 2010 00:29:15 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:38 +0000</updated>
                            <resolved>Fri, 29 Oct 2010 23:56:55 +0000</resolved>
                                                    <fixVersion>0.90.0</fixVersion>
                                    <component>documentation</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="12853027" author="ryanobjc" created="Sat, 3 Apr 2010 00:30:27 +0000"  >&lt;p&gt;Post &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2248&quot; title=&quot;Provide new non-copy mechanism to assure atomic reads in get and scan&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2248&quot;&gt;&lt;del&gt;HBASE-2248&lt;/del&gt;&lt;/a&gt; world it will be safe to put and delete in any order.&lt;/p&gt;</comment>
                            <comment id="12853036" author="stack" created="Sat, 3 Apr 2010 00:52:58 +0000"  >&lt;p&gt;@Todd Thanks for filing this one.  I like the bit about unit tests to validate they work according to the yet-to-be written doc.&lt;/p&gt;</comment>
                            <comment id="12859895" author="stack" created="Thu, 22 Apr 2010 16:56:07 +0000"  >&lt;p&gt;We have our work cut out for us: &quot;@kdpeterson HBase manually set timestamp explained by XKCD (from &lt;a href=&quot;http://xkcd.com/657/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://xkcd.com/657/&lt;/a&gt;) &lt;a href=&quot;http://twitpic.com/1hd437&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://twitpic.com/1hd437&lt;/a&gt;&quot; &lt;a href=&quot;http://twitter.com/kdpeterson/status/12598874822&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://twitter.com/kdpeterson/status/12598874822&lt;/a&gt; and &quot;@kdpeterson Manually setting the time stamp in HBase is like time travel. It stops making any sense and intuitive is wrong.&quot; &lt;a href=&quot;http://twitter.com/kdpeterson/status/12598514371&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://twitter.com/kdpeterson/status/12598514371&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12859896" author="stack" created="Thu, 22 Apr 2010 16:57:14 +0000"  >&lt;p&gt;Made this critical and we should have it for 0.21 if not for 0.20.5.&lt;/p&gt;</comment>
                            <comment id="12859925" author="kevinpet" created="Thu, 22 Apr 2010 17:59:44 +0000"  >&lt;p&gt;I lean towards there being no notion of ordering other than timestamps.&lt;/p&gt;

&lt;p&gt;If multiple writes to a cell have the same timestamp, one of those versions will be maintained, and it is undefined which version will be maintained.&lt;/p&gt;

&lt;p&gt;If the user writes to cells with out of order timestamps, and the writes would make the cell exceed the number of versions the column family stores, the cell will contain those versions with the highest timestamp. More formally:&lt;/p&gt;

&lt;p&gt;A column family retains N versions.&lt;br/&gt;
Given a cell C storing a possibly empty set of versions and timestamps S = &lt;/p&gt;
{ (v1, ts1), (v2, ts2), ... (vn, tsn) }
&lt;p&gt;, n &amp;lt;= N.&lt;br/&gt;
The user makes m writes to C W = &lt;/p&gt;
{ (v1&apos;, ts1&apos;), (v2&apos;, ts2&apos;), ... (vm&apos;, tsm&apos;) }
&lt;p&gt;.&lt;br/&gt;
If m + n &amp;lt;= N, C will retain all writes as versions.&lt;br/&gt;
If m + n &amp;gt; N, C will contain those N (v, ts) from S union W with the highest ts.&lt;/p&gt;

&lt;p&gt;If the user writes to cells with a timestamp before the current time minus the column family&apos;s TTL, the write will be discarded.&lt;/p&gt;

&lt;p&gt;I wonder if there are any uses of timestamps that we can recommend without forcing people to understand all the details. Here&apos;s what I can think of:&lt;br/&gt;
1. If your data model has a preexisting timestamp, and this timestamp never changes manually set timestamps will be more convenient than serializing a timestamp in your own format.&lt;br/&gt;
2. If your data model has a preexisting timestamp, and this timestamp changes in a way compatible with the behavior of HBase, and you understand the details of timestamps and versioning, manually set timestamps will be more convenient than serializing a timestamp in your own format.&lt;br/&gt;
3. If you want a consistent version of some data that spans multiple tables (i.e. secondary index), you may want to use the same timestamp to insert into both tables so that you can use the exact timestamp as part of a get() after reading it out of one table.&lt;br/&gt;
4. If your data includes a meaningful timestamp, especially if that timestamp can change, you may find it more straightforward to store that timestamp in your own format rather than relying on HBase timestamps.&lt;/p&gt;

&lt;p&gt;Likely point of confusion is if the user ignores the details of versioning, and always queries for the most recent timestamp, the user could have a mental model like this:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;A cell stores a value and a timestamp&lt;/li&gt;
	&lt;li&gt;I can supply the timestamp when I write a value&lt;/li&gt;
	&lt;li&gt;I can read the timestamp&lt;/li&gt;
	&lt;li&gt;*I can update the timestamp (incorrect)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The user can write the value with a higher timestamp which appears to update the timestamp. When the user tries the same thing with a lower timestamp, this doesn&apos;t work.&lt;/p&gt;</comment>
                            <comment id="12888465" author="stack" created="Wed, 14 Jul 2010 18:10:13 +0000"  >&lt;p&gt;Bruno at outerthought describes how it currently works, warts n&apos;all: &lt;a href=&quot;http://outerthought.org/blog/blog/417-OTC.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://outerthought.org/blog/blog/417-OTC.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12889687" author="stack" created="Sun, 18 Jul 2010 21:45:40 +0000"  >&lt;p&gt;From Bruno article, issues mentioned are:&lt;/p&gt;

&lt;p&gt;+ Gets lack &quot;...the ability to retrieve the latest version less than or equal to a given timestamp, thus giving the &apos;latest&apos; state of the record at a certain point in time.&quot;&lt;br/&gt;
+ Major compactions are not invisible to the user: &quot;...create three cell versions at t1, t2 and t3, with a maximum-versions setting of 2. So when getting all versions, only the values at t2 and t3 will be returned. But if you delete the version at t2 or t3, the one at t1 will appear again. Obviously, once a major compaction has run, such behavior will not be the case anymore...&quot;&lt;br/&gt;
+ hbase-1485, where if two cells with same coordinates, we do not return latest added&lt;br/&gt;
+ A put after a tombstone was put in will be overshadowed by the tombstone if timestamp is older than the tombstone, though it went in after the tombstone was added (I made an issue for this, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2847&quot; title=&quot;Put added after a delete is overshadowed if its timestamp is older than than that of the tombstone&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2847&quot;&gt;&lt;del&gt;HBASE-2847&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;


</comment>
                            <comment id="12889926" author="streamy" created="Mon, 19 Jul 2010 17:25:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;Gets lack &quot;...the ability to retrieve the latest version less than or equal to a given timestamp, thus giving the &apos;latest&apos; state of the record at a certain point in time.&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I commented on this on the blog post.  This is not the case, we do support this by setting max to be the timestamp+1&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Major compactions are not invisible to the user&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is hard to fix and it&apos;s not clear what &quot;expected&quot; behavior should be.  Do you ever re-surface a Put once it&apos;s been hidden?  Seems like there&apos;s an argument on both sides of this.  If I want to keep the latest two versions, I might have accidentally inserted a bad version, so I want to delete it and resurface an older one.  But maybe someone else has an argument that they never want something to be able to re-appear after being shadowed?&lt;/p&gt;

&lt;p&gt;I think the most important fix is to handle duplicate versions (ordered by insertion time, using memstoreTS and storefile stamps).&lt;/p&gt;

&lt;p&gt;Other stuff is less clear what the &quot;right&quot; answer should be.  I also don&apos;t think we can attempt to completely nail-down this stuff until we make a strong determination about what should/should not be processed during minor compactions.  I did some preliminary benchmarking work on minor compactions a couple months back, hoping to have an intern pick that work back up so we can make a decision here.&lt;/p&gt;</comment>
                            <comment id="12889949" author="stack" created="Mon, 19 Jul 2010 18:06:27 +0000"  >&lt;p&gt;.bq ...by setting max to be the timestamp+1&lt;/p&gt;

&lt;p&gt;What are you suggesting?  That you do the Get with ts+1?  Or you are suggesting that you get more than one version and then the app figures out what to do?  Does that work?  What if there is an entry at ts+1?  App has to check for this?&lt;/p&gt;

&lt;p&gt;On, re-surfacing Puts, you say &quot;Seems like there&apos;s an argument on both sides of this.&quot;  I agree.  Lets just decide and document what we decided (I suggest current behavior is what we go with).&lt;/p&gt;

&lt;p&gt;Regards not nailing-down behavior until we figure stuff like what to do in minor compactions, I&apos;d think that rather, that we should just say how we want it to be and then implement toward this goal rather than let whatever the current state of implementation shape our behavior.&lt;/p&gt;</comment>
                            <comment id="12889952" author="streamy" created="Mon, 19 Jul 2010 18:17:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;What are you suggesting? That you do the Get with ts+1? Or you are suggesting that you get more than one version and then the app figures out what to do? Does that work? What if there is an entry at ts+1? App has to check for this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In existing TimeRange, the max is exclusive, not inclusive.  What Bruno was asking about is getting the most recent version of something according to a max timestamp (but inclusive, not exclusive).  Since the timestamp is a long there aren&apos;t any precision issues... you just say max=TS+1 (exclusive) which effectively means, max=TS inclusive&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;rather than let whatever the current state of implementation shape our behavior&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, we should figure what we want.  I&apos;m not saying we should decide based on how we do it currently, I&apos;m saying it&apos;s still an open question what we should do on minor compactions (and was recently changed following removal of gets) and that a determination there could impact this stuff.  Or it could not.  Just saying the two are somewhat related.&lt;/p&gt;

&lt;p&gt;But yeah, let&apos;s figure out what we want and not be overly concerned with current implementations.&lt;/p&gt;</comment>
                            <comment id="12890210" author="bruno" created="Tue, 20 Jul 2010 08:08:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;I commented on this on the blog post. This is not the case, we do support this by setting max to be the timestamp+1&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;My problem there was not the &apos;less than or equal&apos; but rather getting the most recent version at some past point-in-time. I now (finally) understand this can be achieved by setting the range from 0 to the desired timestamp and max versions to 1. I&apos;ll update the blog to reflect this.&lt;/p&gt;

&lt;p&gt;Concerning resurfacing puts: I do not see this as a problem, just as an interesting effect of how things work.&lt;/p&gt;</comment>
                            <comment id="12890359" author="stack" created="Tue, 20 Jul 2010 18:00:07 +0000"  >&lt;p&gt;@Bruno Whats your opinion on &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2847&quot; title=&quot;Put added after a delete is overshadowed if its timestamp is older than than that of the tombstone&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2847&quot;&gt;&lt;del&gt;HBASE-2847&lt;/del&gt;&lt;/a&gt;?  Do you really need it?  Or could you work around it?  (See the issue for comments on the radical change we&apos;d need to fix it).&lt;/p&gt;</comment>
                            <comment id="12893234" author="stack" created="Wed, 28 Jul 2010 16:21:47 +0000"  >&lt;p&gt;Here is one from this morning:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
08:49 &amp;lt; paul&amp;gt; i put a value on row x, cf y, col z, ts 0 with value 1 then I put row x, cf y, col z, ts 1 with value 2. &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; i scan or get {VERSIONS=&amp;gt;5} (from shell) 
              I get value 2, but &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; I scan {TIMESTAMP=&amp;gt;0) I still get value 1 back even though I should not exist...
08:49 &amp;lt; paul&amp;gt; *it
...
09:12 &amp;lt; St^Ack&amp;gt; paul: which version of hbase?
09:13 &amp;lt; paul&amp;gt;  latest stable i think (shell reports 0.20.5 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; VERSION)
09:17 &amp;lt; St^Ack&amp;gt; paul: why would value 1 not exist?
09:17 &amp;lt; St^Ack&amp;gt; you expect that because  you set versions == 1, that it should suppress &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; of value 1
09:17 &amp;lt; St^Ack&amp;gt; ?
09:17 &amp;lt; paul&amp;gt; i assumed (possibly naievely) that because it only keeps one version and as value 2 has a newer timestamp that yes, i thought it would?
09:18 &amp;lt; paul&amp;gt; is that entirely wrong?
09:18 &amp;lt; St^Ack&amp;gt; paul: its not how it works
09:18 &amp;lt; St^Ack&amp;gt; as to whether you are &apos;wrong&apos;, I&apos;d say you are not -- your expectation makes sense
09:18 &amp;lt; paul&amp;gt; oh right thanks :), so what happens to older versions? &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; they go eventually or just waste space?
09:19 &amp;lt; St^Ack&amp;gt; they go eventually
09:19 &amp;lt; tlipcon&amp;gt; it will work after a major compaction
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12906621" author="pranavkhaitan" created="Mon, 6 Sep 2010 22:55:57 +0000"  >&lt;p&gt;Patch for this issue posted at &lt;a href=&quot;https://review.cloudera.org/r/780/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://review.cloudera.org/r/780/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12907328" author="streamy" created="Wed, 8 Sep 2010 17:31:33 +0000"  >&lt;p&gt;Following commit of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-1485&quot; title=&quot;Wrong or indeterminate behavior when there are duplicate versions of a column&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-1485&quot;&gt;&lt;del&gt;HBASE-1485&lt;/del&gt;&lt;/a&gt;, I think cell version semantics are basically defined.  You can update existing versions and you can write versions out of order.&lt;/p&gt;

&lt;p&gt;What is left is dealing with deletes.  I think there is some consensus that whether or not we eventually &quot;fix&quot; this issue (inserting behind deletes), it&apos;s well beyond the scope of 0.90.&lt;/p&gt;

&lt;p&gt;Since this JIRA deals with documentation, I suppose we should add a section to the book about versions and then we can close this.  JIRAs remain to deal with the delete issue specifically.&lt;/p&gt;

&lt;p&gt;Any volunteers?&lt;/p&gt;</comment>
                            <comment id="12907330" author="streamy" created="Wed, 8 Sep 2010 17:34:04 +0000"  >&lt;p&gt;And on the unit test front, there are now several tests in TestFromClientSide that show the version update behavior.  I think we have out-of-order insertion tests as well.  Not sure if we have tests that show the delete case does not work.&lt;/p&gt;</comment>
                            <comment id="12918179" author="streamy" created="Tue, 5 Oct 2010 20:58:41 +0000"  >&lt;p&gt;Anyone want to work on this in the next week or so?  If not, let&apos;s punt to 0.92&lt;/p&gt;</comment>
                            <comment id="12918251" author="stack" created="Tue, 5 Oct 2010 22:11:04 +0000"  >&lt;p&gt;Leave it in for now... we should be able to put something basic in the book&lt;/p&gt;</comment>
                            <comment id="12926503" author="stack" created="Fri, 29 Oct 2010 23:52:06 +0000"  >&lt;p&gt;Here is a section on hbase versions based on Bruno&apos;s article w/ some updates and a bit of preamble on what hbase versions are about.&lt;/p&gt;

&lt;p&gt;As per Brunos&apos; article, it explains how timestamping works for get, scan, put, and delete.  It has a section on limitiations.  It also explicitly answers the questions that todd raises at head of this issue.&lt;/p&gt;

&lt;p&gt;While I was at it, I added some docbook config. up in the pom and also removed the sample illustrative article I&apos;d added to show how we could do articles only in docbook. &lt;/p&gt;

&lt;p&gt;I also added a &apos;quick start&apos; section at head of the book as well as other clean up.&lt;/p&gt;</comment>
                            <comment id="12926505" author="stack" created="Fri, 29 Oct 2010 23:56:55 +0000"  >&lt;p&gt;I&apos;m resolving this issue.  We have unit tests that demo what we have, and now I&apos;ve commiitted doc. that describes how hbase currently does versions with a listing of limitations.  Other issues have been opened to address these limitations (linked off this issue) which I believe cover the concerns raised in here.  Lets open new issues to address holes in the doc. I&apos;m adding or to add unit tests if not already coverage of how we think versioning is working in HBase.&lt;/p&gt;</comment>
                            <comment id="12926509" author="streamy" created="Sat, 30 Oct 2010 00:06:01 +0000"  >&lt;p&gt;I read through about half of the doc so far.  Great work Stack!  Thanks for doing this.&lt;/p&gt;</comment>
                            <comment id="13483898" author="hudson" created="Thu, 25 Oct 2012 04:51:08 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3484 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3484/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3484/&lt;/a&gt;)&lt;br/&gt;
    Remove a stale section citing issues w/ versions fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2406&quot; title=&quot;Define semantics of cell timestamps/versions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2406&quot;&gt;&lt;del&gt;HBASE-2406&lt;/del&gt;&lt;/a&gt; &amp;#8211; thanks to Sho Shimauchi for turning this one up (Revision 1401970)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/docbkx/book.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13484057" author="hudson" created="Thu, 25 Oct 2012 11:59:38 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #235 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/235/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/235/&lt;/a&gt;)&lt;br/&gt;
    Remove a stale section citing issues w/ versions fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2406&quot; title=&quot;Define semantics of cell timestamps/versions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2406&quot;&gt;&lt;del&gt;HBASE-2406&lt;/del&gt;&lt;/a&gt; &amp;#8211; thanks to Sho Shimauchi for turning this one up (Revision 1401970)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/src/docbkx/book.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15017576" author="lars_francke" created="Fri, 20 Nov 2015 12:43:38 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12427237">HBASE-1485</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12465913">HBASE-2649</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12457251">HBASE-2256</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12469564">HBASE-2847</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12458461" name="2406.txt" size="22432" author="stack" created="Fri, 29 Oct 2010 23:52:06 +0000"/>
                            <attachment id="12458460" name="versions.html" size="11964" author="stack" created="Fri, 29 Oct 2010 23:52:06 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 3 Apr 2010 00:30:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32567</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0b2kf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>62528</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>