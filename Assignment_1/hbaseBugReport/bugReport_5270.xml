<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:26:16 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-5270/HBASE-5270.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-5270] Handle potential data loss due to concurrent processing of processFaileOver and ServerShutdownHandler</title>
                <link>https://issues.apache.org/jira/browse/HBASE-5270</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This JIRA continues the effort from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5179&quot; title=&quot;Concurrent processing of processFaileOver and ServerShutdownHandler may cause region to be assigned before log splitting is completed, causing data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5179&quot;&gt;&lt;del&gt;HBASE-5179&lt;/del&gt;&lt;/a&gt;. Starting with Stack&apos;s comments about patches for 0.92 and TRUNK:&lt;/p&gt;

&lt;p&gt;Reviewing 0.92v17&lt;/p&gt;

&lt;p&gt;isDeadServerInProgress is a new public method in ServerManager but it does not seem to be used anywhere.&lt;/p&gt;

&lt;p&gt;Does isDeadRootServerInProgress need to be public? Ditto for meta version.&lt;/p&gt;

&lt;p&gt;This method param names are not right &apos;definitiveRootServer&apos;; what is meant by definitive? Do they need this qualifier?&lt;/p&gt;

&lt;p&gt;Is there anything in place to stop us expiring a server twice if its carrying root and meta?&lt;/p&gt;

&lt;p&gt;What is difference between asking assignment manager isCarryingRoot and this variable that is passed in? Should be doc&apos;d at least. Ditto for meta.&lt;/p&gt;

&lt;p&gt;I think I&apos;ve asked for this a few times - onlineServers needs to be explained... either in javadoc or in comment. This is the param passed into joinCluster. How does it arise? I think I know but am unsure. God love the poor noob that comes awandering this code trying to make sense of it all.&lt;/p&gt;

&lt;p&gt;It looks like we get the list by trawling zk for regionserver znodes that have not checked in. Don&apos;t we do this operation earlier in master setup? Are we doing it again here?&lt;/p&gt;

&lt;p&gt;Though distributed split log is configured, we will do in master single process splitting under some conditions with this patch. Its not explained in code why we would do this. Why do we think master log splitting &apos;high priority&apos; when it could very well be slower. Should we only go this route if distributed splitting is not going on. Do we know if concurrent distributed log splitting and master splitting works?&lt;/p&gt;

&lt;p&gt;Why would we have dead servers in progress here in master startup? Because a servershutdownhandler fired?&lt;/p&gt;

&lt;p&gt;This patch is different to the patch for 0.90. Should go into trunk first with tests, then 0.92. Should it be in this issue? This issue is really hard to follow now. Maybe this issue is for 0.90.x and new issue for more work on this trunk patch?&lt;/p&gt;

&lt;p&gt;This patch needs to have the v18 differences applied.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12539620">HBASE-5270</key>
            <summary>Handle potential data loss due to concurrent processing of processFaileOver and ServerShutdownHandler</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12538023">HBASE-5179</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zjushch">chunhui shen</assignee>
                                    <reporter username="zhihyu@ebaysf.com">Ted Yu</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Jan 2012 15:17:07 +0000</created>
                <updated>Fri, 20 Nov 2015 11:54:05 +0000</updated>
                            <resolved>Tue, 20 Mar 2012 23:52:55 +0000</resolved>
                                                    <fixVersion>0.92.2</fixVersion>
                                    <component>master</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13192284" author="zhihyu@ebaysf.com" created="Tue, 24 Jan 2012 17:14:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/3601&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/3601&lt;/a&gt; is created to track the review process for this JIRA.&lt;/p&gt;</comment>
                            <comment id="13192317" author="zhihyu@ebaysf.com" created="Tue, 24 Jan 2012 18:00:31 +0000"  >&lt;p&gt;Updated patch to address Stack&apos;s comments up till &apos;Is there anything in place to stop us expiring a server twice if its carrying root and meta?&apos;&lt;/p&gt;</comment>
                            <comment id="13192828" author="zjushch" created="Wed, 25 Jan 2012 03:03:01 +0000"  >&lt;p&gt;Thanks for stack&apos;s comment&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;This method param names are not right &apos;definitiveRootServer&apos;; what is meant by definitive?  Do they need &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; qualifier?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When master is initializing, carryingMeta and carryingRoot is always false (We could see it from the code of ServerManger#expire()). So, the param &apos;definitiveRootServer&apos; is used in this case to ensure the dead root server is carryingRoot when it is being expired.&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Is there anything in place to stop us expiring a server twice &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; its carrying root and meta?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is there any possible to expire a server if its carrying root and meta now? I don&apos;t think so.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;onlineServers needs to be explained&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think so, this param is not be passed into joinCluster before, so when executing joinCluster , the onlineServers  is current online servers. However, it has a problem before, when executing joinCluster , maybe some server is being processed as dead server, so its log is being splitted by SSH while its regions are being assigned by joinCluster(),causing data loss.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;It looks like we get the list by trawling zk &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; regionserver znodes that have not checked in.  Don&apos;t we &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; operation earlier in master setup?  Are we doing it again here?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I don&apos;t find this operation earlier in master setup, and this operation is not introduced by this issue. And I only introduce this logic for 90 from trunk.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Though distributed split log is configured, we will &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; in master single process splitting under some conditions with &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; patch.  Its not explained in code why we would &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think we need explain it, But whether we shouldn&apos;t use distributed split log, I&apos;m not very sure.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Why would we have dead servers in progress here in master startup?  Because a servershutdownhandler fired?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When matser is initializing, if one RS is killed and  restart, then dead server is in progress while master startup&lt;/p&gt;</comment>
                            <comment id="13193187" author="stack" created="Wed, 25 Jan 2012 18:36:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;So, the param &apos;definitiveRootServer&apos; is used in this case to ensure the dead root server is carryingRoot when it is being expired.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Whats &apos;definitive&apos; about it?  Is it that we know for sure the server was carrying root or meta?  How?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is there any possible to expire a server if its carrying root and meta now? I don&apos;t think so.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are saying that this patch does nothing new here?  We COULD expire the server that was carrying root, wait on its log split, then expire the server carrying meta (though it may have been the same server)... it might be ok but we might kill a server that has just started. I&apos;m ok if fixing this is outside scope of this patch.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t find this operation earlier in master setup, and this operation is not introduced by this issue. And I only introduce this logic for 90 from trunk.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So, you copied this to 0.90 from TRUNK (so my notion that we already had this is my remembering how things work on TRUNK.. that would make sense).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think we need explain it, But whether we shouldn&apos;t use distributed split log, I&apos;m not very sure.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If we are not sure, we shouldn&apos;t do it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When matser is initializing, if one RS is killed and restart, then dead server is in progress while master startup&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This seems like a small window.  Or do you think it could happen frequent?  Could we hold up shutdownserverhandler until master is up?&lt;/p&gt;


</comment>
                            <comment id="13193197" author="zhihyu@ebaysf.com" created="Wed, 25 Jan 2012 18:43:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;though it may have been the same server&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This has been handled in patch on reviewboard, line 628:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          !currentMetaServer.equals(currentRootServer) &amp;amp;&amp;amp;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;&lt;p&gt;Could we hold up shutdownserverhandler until master is up?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;What if the region server hosting .META. went down ?&lt;/p&gt;</comment>
                            <comment id="13193209" author="stack" created="Wed, 25 Jan 2012 18:56:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;What if the region server hosting .META. went down ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes... was just thinking about that.  In this case we&apos;d run the splitter in-line, in SSH, not via executor.... let me look at code.  I&apos;m trying to write tests and catch-up on all the stuff that was done over on previous issue.&lt;/p&gt;</comment>
                            <comment id="13203921" author="stack" created="Wed, 8 Feb 2012 20:08:16 +0000"  >&lt;p&gt;I was taking a look through &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5179&quot; title=&quot;Concurrent processing of processFaileOver and ServerShutdownHandler may cause region to be assigned before log splitting is completed, causing data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5179&quot;&gt;&lt;del&gt;HBASE-5179&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4748&quot; title=&quot;Race between creating recovered edits for META and master assigning ROOT and META.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4748&quot;&gt;&lt;del&gt;HBASE-4748&lt;/del&gt;&lt;/a&gt; again, the two issues that spawned this one (Both are in synopsis about master failover with concurrent servershutdown handler running).  I have also been looking at &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5344&quot; title=&quot;[89-fb] Scan unassigned region directory on master failover&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5344&quot;&gt;&lt;del&gt;HBASE-5344&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;89-fb&amp;#93;&lt;/span&gt; Scan unassigned region directory on master failover&quot;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5179&quot; title=&quot;Concurrent processing of processFaileOver and ServerShutdownHandler may cause region to be assigned before log splitting is completed, causing data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5179&quot;&gt;&lt;del&gt;HBASE-5179&lt;/del&gt;&lt;/a&gt; starts out as we can miss edits if a server is discovered to be dead AFTER master failover has started up splitting logs because we&apos;ll notice it dead so will assign out its regions but before we&apos;ve had a chance to split its logs.  The way fb deal with this in hbase-5344 is not to process zookeeper events that come in during master failover.  They queue them instead and only start in on the processing after master is up.&lt;/p&gt;

&lt;p&gt;Chunhui does something like this in his original patch by adding any server currently being processed by server shutdown to the list of regionservers whose logs we should not split.  The fb way of halting temporarily the callback processing seems more airtight.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5179&quot; title=&quot;Concurrent processing of processFaileOver and ServerShutdownHandler may cause region to be assigned before log splitting is completed, causing data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5179&quot;&gt;&lt;del&gt;HBASE-5179&lt;/del&gt;&lt;/a&gt; is then extended to include as in scope, the processing of servers carrying root and meta (hbase-4748) that crash during master failover.  We need to consider the cases where a server crashes AFTER master failover distributed log splitting has started but before we run the verifications of meta and root locations.&lt;/p&gt;

&lt;p&gt;Currently we&apos;ll expire the server that is unresponsive when we go to verify root and meta locations.  The notion is that the meta regions will be assigned by the server shutdown handler.  The fb technique of turning off processing zk events would mess with our existing handling code here &amp;#8211; but I&apos;m not too confident the code is going to do the right thing since it has no tests of this predicament and the scenarios look like they could be pretty varied (root is offline only, meta server has crashed only, a server with both root and meta has crashed, etc).  In hbase-5344, fb will go query each regionserver for the regions its currently hosting (and look in zk to see what rs are up).   Maybe we need some of this from 89-fb in trunk but I&apos;m not clear on it just yet; would need more study of the current state of trunk and then of what is happening over in 89-fb.&lt;/p&gt;

&lt;p&gt;One thing I think we should do to lessen the number of code paths we can take on failover is to do the long-talked of purge  of the root region.  This should cut down on the number of states we need to deal with and make reasoning about failure states on failover easier to reason about.&lt;/p&gt;</comment>
                            <comment id="13203923" author="stack" created="Wed, 8 Feb 2012 20:10:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3171&quot; title=&quot;Drop ROOT and instead store META location(s) directly in ZooKeeper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3171&quot;&gt;&lt;del&gt;HBASE-3171&lt;/del&gt;&lt;/a&gt; is the issue to purge root.&lt;/p&gt;</comment>
                            <comment id="13204398" author="zjushch" created="Thu, 9 Feb 2012 09:38:57 +0000"  >&lt;p&gt;If we don&apos;t process zookeeper events that come in during master failover, one dead regionserver will be considered as onlined in ServerManager. &lt;br/&gt;
So when assigning regions, some regionplans whose destination is the dead server will be failed.&lt;/p&gt;

&lt;p&gt;I agree with lessen the number of code paths, and we should ensure the way first.&lt;/p&gt;</comment>
                            <comment id="13204852" author="stack" created="Thu, 9 Feb 2012 20:55:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;So when assigning regions, some regionplans whose destination is the dead server will be failed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;True.  They&apos;ll fail and get retried elsewhere which shouldn&apos;t be too bad.  But need to keep it in mind.  This all doesn&apos;t work (I think) if we need to scan meta and its on a server that has just gone down.&lt;/p&gt;</comment>
                            <comment id="13208333" author="zjushch" created="Wed, 15 Feb 2012 10:15:01 +0000"  >&lt;p&gt;I have written a testcase for this issue to show the exist problem in 5270-testcase.patch&lt;/p&gt;

&lt;p&gt;And hbase-5270.patch is the combination of testcase and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5179&quot; title=&quot;Concurrent processing of processFaileOver and ServerShutdownHandler may cause region to be assigned before log splitting is completed, causing data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5179&quot;&gt;&lt;del&gt;HBASE-5179&lt;/del&gt;&lt;/a&gt; &#8216;s latest patch&#12290;&lt;/p&gt;

&lt;p&gt;5270-90.patch and 5270-90-testcase.patch are for 90 version&lt;/p&gt;

&lt;p&gt;Now&#65292; testcase may not contain all the situations which causes problems and runs slowly.&lt;/p&gt;

&lt;p&gt;I will optimize the testcase later.&lt;/p&gt;

</comment>
                            <comment id="13208370" author="zhihyu@ebaysf.com" created="Wed, 15 Feb 2012 11:12:08 +0000"  >&lt;p&gt;Reattaching patch v2 for TRUNK with --no-prefix&lt;/p&gt;</comment>
                            <comment id="13208803" author="stack" created="Wed, 15 Feb 2012 21:20:11 +0000"  >&lt;p&gt;@Chunhui Excellent.&lt;/p&gt;

&lt;p&gt;I am all good w/ modifying core to make it more testable.  Would suggest instead though that you make more generic changes up in Master, etc.&lt;/p&gt;

&lt;p&gt;For example, the attached patch makes it so a subclass of HMaster can observe log splitting and insert pauses and override the RegionServerTracker to pause on deletes until a gate is cleared.  This might make more sense than the custom changes made to RegionServerTracker and HMaster in this patch.&lt;/p&gt;

&lt;p&gt;On the patch, I think the HMaster and RegionServerTracker changes are too specific to this test case.  Would suggest making more generic changes to these core classes because other tests will be able to make use of a more generic change (I think its good to mod core classes to make them more testable).&lt;br/&gt;
&apos;&lt;br/&gt;
On the test, can we have a better name than TestHRegionserverKilled?  It doesn&apos;t say what this test does (testDataCorrectnessWhenMasterFailOver might be better as class name).&lt;/p&gt;

&lt;p&gt;Why do this:&lt;/p&gt;

&lt;p&gt;+    Configuration conf = HBaseConfiguration.create();&lt;/p&gt;

&lt;p&gt;Why not use whats in your HBaseTestingUtility (do a getConfiguration &amp;#8211; see the attached test).&lt;/p&gt;

&lt;p&gt;Also, you might use the junit primitives for test setup and teardown as per the attache test.&lt;/p&gt;


</comment>
                            <comment id="13209111" author="ram_krish" created="Thu, 16 Feb 2012 04:31:14 +0000"  >&lt;p&gt;@Chunhui&lt;/p&gt;

&lt;p&gt;Appreciate your work on preparing test cases.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13209223" author="zjushch" created="Thu, 16 Feb 2012 08:34:56 +0000"  >&lt;p&gt;Optimize the testcase as Stack&apos;s sample.&lt;br/&gt;
And hbase-5270v2 is a patch to fix the issue for trunk including testcase.&lt;/p&gt;</comment>
                            <comment id="13209242" author="zjushch" created="Thu, 16 Feb 2012 09:50:51 +0000"  >&lt;p&gt;Testcase and patch for 90 version&lt;/p&gt;</comment>
                            <comment id="13210095" author="stack" created="Fri, 17 Feb 2012 06:14:51 +0000"  >&lt;p&gt;@Chunhui Pardon me.  I did not get to review this today.  I will do it tomorrow.&lt;/p&gt;</comment>
                            <comment id="13210443" author="stack" created="Fri, 17 Feb 2012 18:56:12 +0000"  >&lt;p&gt;Why we do this Chunhui?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-comment&quot;&gt;// We set serverLoad with one region, it could differentiate with
&lt;/span&gt;+            &lt;span class=&quot;code-comment&quot;&gt;// regionserver which is started just now
&lt;/span&gt;+            HServerLoad serverLoad = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HServerLoad();
+            serverLoad.setNumberOfRegions(1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;How you know it has a region?&lt;/p&gt;

&lt;p&gt;This needs a bit of javadoc explaining its parsing a ServerName:&lt;/p&gt;

&lt;p&gt;getServerInfo&lt;/p&gt;

&lt;p&gt;Change the data  member name from isLogSplitted to logSplit and then the method name becomes isLogSplit.&lt;/p&gt;

&lt;p&gt;Fix this long line:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getConfiguration().getBoolean(&lt;span class=&quot;code-quote&quot;&gt;&quot;TestingMaster.sleep&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;) ? &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GatedNodeDeleteRegionServerTracker(
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can you just do +            super.nodeDeleted(path); instead of +            GatedNodeDeleteRegionServerTracker.super.nodeDeleted(path);?&lt;/p&gt;

&lt;p&gt;Just wondering if you can do your test w/o timeouts but instead by using gates?  For example, this wait:&lt;/p&gt;

&lt;p&gt;+    cluster.getConfiguration().setInt(&quot;TestingMaster.sleep.duration&quot;, 10000);&lt;/p&gt;

&lt;p&gt;Or, can you interrupt the wait once your conditions are met so we don&apos;t have to wait the ten seconds?&lt;/p&gt;

&lt;p&gt;For your trunk patch need to categorize your test (see other tests in trunk.... see how they have a bit of code on the end and then at top there is an annotation).&lt;/p&gt;

&lt;p&gt;Sleep for shorter here:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!master.isLogSplittedAfterStartup()) {
+      &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(1000);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See &apos;13.4.1.2. Writing Tests&apos; in the manual here &lt;a href=&quot;http://hbase.apache.org/book.html#hbase.tests&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hbase.apache.org/book.html#hbase.tests&lt;/a&gt; for some recommendations around timeouts, etc.&lt;/p&gt;

&lt;p&gt;Why the need for this timeout:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(10000 * 2);
+    ((GatedNodeDeleteRegionServerTracker) master.getRegionServerTracker()).gate
+        .set(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can we do w/o?  Timing dependent tests can be flakey.  The timings make for different results in different contexts.&lt;/p&gt;

&lt;p&gt;What happens if this is not true:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rootServerNum != metaServerNum) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Do we not test?&lt;/p&gt;

&lt;p&gt;There is some duplicated code in this method?  Maybe break it out into a method?&lt;/p&gt;

&lt;p&gt;For example, this code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// First abort master
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (MasterThread mt : cluster.getLiveMasterThreads()) {
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (mt.getMaster().isActiveMaster()) {
+          mt.getMaster().abort(&lt;span class=&quot;code-quote&quot;&gt;&quot;Aborting &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; tests&quot;&lt;/span&gt;,
+              &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;code-quote&quot;&gt;&quot;Trace info&quot;&lt;/span&gt;));
+          mt.join();
+          &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+        }
+      }
+      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Master is aborted&quot;&lt;/span&gt;);
+      master = (TestingMaster) cluster.startMaster().getMaster();
+      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!master.isLogSplittedAfterStartup()) {
+        &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(1000);
+      }
+      LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;splitted:&quot;&lt;/span&gt; + master.isLogSplittedAfterStartup()
+          + &lt;span class=&quot;code-quote&quot;&gt;&quot;,initialized:&quot;&lt;/span&gt; + master.isInitialized());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In dead servers, one returns a boolean and the other does not.  One ups a counter and the other does not.  Should they be the same?&lt;/p&gt;

&lt;p&gt;Can we be more specific in this note?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Dead servers under processing by the ServerShutdownHander. 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Whats that mean?  Its while the server is being processed by ServerShutdownHandler exclusively &amp;#8211; these are the inProgress servers?&lt;/p&gt;

&lt;p&gt;Perhaps rename getLogDirIfExists as getServerLogDirIfExists?&lt;/p&gt;

&lt;p&gt;In HMaster, fix my bad javadoc.  It says &apos;Used testing&apos; for createRegionServerTracker.  Should be &apos;Override to change master&apos;s RegionServerTracker creation. Used testing&apos;.  Similar for splitLogAfterStartup.&lt;/p&gt;

&lt;p&gt;So, what happens if a server had root and meta and its not expired when we do failover?  We&apos;ll expire it processing root.  Will we expire it a second time processing meta?  Perhaps the answer is no because the first expiration will clear the meta state in master?&lt;/p&gt;

&lt;p&gt;Who is clearing +    for (; serverName != null; ) { in the wait loop?&lt;/p&gt;

&lt;p&gt;Should we check the master stopped flag in this loop too in case its been stopped while this is running?&lt;/p&gt;

&lt;p&gt;Does this not already exist in HMaster? getRegionServerTracker  Does it have to be public (maybe it does for tests?)&lt;/p&gt;

&lt;p&gt;Do we need to add this?  getOnlineServerNames  Can you not get it from getOnlineServers?  This is a convenience utility?&lt;/p&gt;

&lt;p&gt;Is there possibility of race here?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// Remove regions in RIT, they are may being processed by the SSH.
&lt;/span&gt;+    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (regionsInTransition) {
+      nodes.removeAll(regionsInTransition.keySet());
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Perhaps SSH has put up something in RIT because its done an assign and here we are blanket removing them all?&lt;/p&gt;

&lt;p&gt;Otherwise, patch is coming along Chunhui.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13210772" author="zjushch" created="Sat, 18 Feb 2012 02:40:11 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+            &lt;span class=&quot;code-comment&quot;&gt;// We set serverLoad with one region, it could differentiate with
&lt;/span&gt;+            &lt;span class=&quot;code-comment&quot;&gt;// regionserver which is started just now
&lt;/span&gt;+            HServerLoad serverLoad = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HServerLoad();
+            serverLoad.setNumberOfRegions(1);
How you know it has a region?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We do this to mark the RS running ago, not the regionserver which is started just now.&lt;br/&gt;
(If it is a regionserver started just now, it has no regions, so when master assignRootAndMeta,we needn&apos;t expire it.(Only 90 version need do this, because rootLocation doesn&apos;t contain startcode, so we can&apos;t be sure it is a rootServer according to HServerAddress))&lt;/p&gt;</comment>
                            <comment id="13210776" author="zjushch" created="Sat, 18 Feb 2012 02:46:20 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Can you just &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.nodeDeleted(path); instead of + GatedNodeDeleteRegionServerTracker.&lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.nodeDeleted(path);?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If we block the nodeDeleted(path) in GatedNodeDeleteRegionServerTracker, it will block all the ZK event. &lt;br/&gt;
so I just want to delay the event of RS node deleted through a thread. However, in the thread#run(), we need call GatedNodeDeleteRegionServerTracker.super.nodeDeleted(path);&lt;/p&gt;</comment>
                            <comment id="13210777" author="zjushch" created="Sat, 18 Feb 2012 02:52:23 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Why the need &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; timeout:

+    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(10000 * 2);
+    ((GatedNodeDeleteRegionServerTracker) master.getRegionServerTracker()).gate
+        .set(&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Because we sleep 10s after splitLog,  we sleep 20s to make sure that master is assigning RootAndMeta or has assigned. After it we starting process the event of RS node deleted&lt;/p&gt;</comment>
                            <comment id="13210778" author="zjushch" created="Sat, 18 Feb 2012 02:55:19 +0000"  >&lt;p&gt;Because this issue contains a bug that root will not be assigned and master will block on waiting for root when initializing&lt;br/&gt;
So we set timeout for the testcase.&lt;/p&gt;</comment>
                            <comment id="13210783" author="zjushch" created="Sat, 18 Feb 2012 03:02:00 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+   * Dead servers under processing by the ServerShutdownHander. 
Whats that mean?  Its &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; the server is being processed by ServerShutdownHandler exclusively -- these are the inProgress servers?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Yes,these are the inProgress servers&lt;/p&gt;</comment>
                            <comment id="13210785" author="zjushch" created="Sat, 18 Feb 2012 03:05:59 +0000"  >&lt;p&gt;So, what happens if a server had root and meta and its not expired when we do failover?  We&apos;ll expire it processing root.  Will we expire it a second time processing meta?  Perhaps the answer is no because the first expiration will clear the meta state in master?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (metaServerLoad != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; metaServerLoad.getNumberOfRegions() &amp;gt; 0
+            &amp;amp;&amp;amp; !catalogTracker.getRootLocation().equals(metaServerAddress)) {
+          &lt;span class=&quot;code-comment&quot;&gt;// If metaServer is online &amp;amp;&amp;amp; not start just now, we expire it
&lt;/span&gt;+          &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.serverManager.expireServer(metaServerInfo);
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If a server had root and meta , we will ensure not expire it a second time through catalogTracker.getRootLocation().equals(metaServerAddress)&lt;/p&gt;</comment>
                            <comment id="13210787" author="zjushch" created="Sat, 18 Feb 2012 03:11:21 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-comment&quot;&gt;// Remove regions in RIT, they are may being processed by the SSH.
&lt;/span&gt;+    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (regionsInTransition) {
+      nodes.removeAll(regionsInTransition.keySet());
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Perhaps SSH has put up something in RIT because its done an assign and here we are blanket removing them all?&lt;/p&gt;

&lt;p&gt;Yes, SSH and master&apos;initializing Thread may assign the same regions, so we should do a prevent of mutli assign.&lt;/p&gt;</comment>
                            <comment id="13210788" author="zjushch" created="Sat, 18 Feb 2012 03:13:18 +0000"  >&lt;p&gt;For the other suggestion,I will do a modify later.&lt;br/&gt;
Thanks for Stack&apos;s review!&lt;/p&gt;</comment>
                            <comment id="13210790" author="zjushch" created="Sat, 18 Feb 2012 03:24:51 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;So, what happens &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; a server had root and meta and its not expired when we &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; failover? We&apos;ll expire it processing root. Will we expire it a second time processing meta? Perhaps the answer is no because the first expiration will clear the meta state in master?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I&apos;m sorry I&apos;m wrong for the upper comment.&lt;/p&gt;

&lt;p&gt;if a server had root and meta, it will be expired when processing root,&lt;br/&gt;
and we will not expire it a second time processing meta because the following code (metaServerInfo == null)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+      HServerInfo metaServerInfo = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.serverManager
+          .getHServerInfo(metaServerAddress);
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (metaServerInfo != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+        HServerLoad metaServerLoad = metaServerInfo.getLoad();
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (metaServerLoad != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; metaServerLoad.getNumberOfRegions() &amp;gt; 0
+            &amp;amp;&amp;amp; !catalogTracker.getRootLocation().equals(metaServerAddress)) {
+          &lt;span class=&quot;code-comment&quot;&gt;// If metaServer is online &amp;amp;&amp;amp; not start just now, we expire it
&lt;/span&gt;+          &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.serverManager.expireServer(metaServerInfo);
+        }
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13210791" author="zjushch" created="Sat, 18 Feb 2012 03:24:54 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;So, what happens &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; a server had root and meta and its not expired when we &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; failover? We&apos;ll expire it processing root. Will we expire it a second time processing meta? Perhaps the answer is no because the first expiration will clear the meta state in master?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I&apos;m sorry I&apos;m wrong for the upper comment.&lt;/p&gt;

&lt;p&gt;if a server had root and meta, it will be expired when processing root,&lt;br/&gt;
and we will not expire it a second time processing meta because the following code (metaServerInfo == null)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+      HServerInfo metaServerInfo = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.serverManager
+          .getHServerInfo(metaServerAddress);
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (metaServerInfo != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+        HServerLoad metaServerLoad = metaServerInfo.getLoad();
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (metaServerLoad != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; metaServerLoad.getNumberOfRegions() &amp;gt; 0
+            &amp;amp;&amp;amp; !catalogTracker.getRootLocation().equals(metaServerAddress)) {
+          &lt;span class=&quot;code-comment&quot;&gt;// If metaServer is online &amp;amp;&amp;amp; not start just now, we expire it
&lt;/span&gt;+          &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.serverManager.expireServer(metaServerInfo);
+        }
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13211068" author="zhihyu@ebaysf.com" created="Sat, 18 Feb 2012 20:47:24 +0000"  >&lt;p&gt;w.r.t. Chunhui&apos;s comment @ 18/Feb/12 02:52 &lt;br/&gt;
We shoulds correlate the 10s sleep after log splitting with the 20s sleep in test through some constant. Otherwise the test would easily break.&lt;/p&gt;</comment>
                            <comment id="13213195" author="zjushch" created="Wed, 22 Feb 2012 02:19:30 +0000"  >&lt;p&gt;Takes Stack&#8216;s comment in 5270-90v3.patch&lt;/p&gt;</comment>
                            <comment id="13214394" author="zjushch" created="Thu, 23 Feb 2012 07:03:27 +0000"  >&lt;p&gt;@Stack @Ted&lt;br/&gt;
In hbase-5270v4.patch,&lt;br/&gt;
I introduce safe mode for master when it is stopping or initializing.&lt;br/&gt;
In the safe mode, master will delay processing ServerShutdownHandler and refuse many admin operations(could see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5454&quot; title=&quot;Refuse operations from Admin before master is initialized&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5454&quot;&gt;&lt;del&gt;HBASE-5454&lt;/del&gt;&lt;/a&gt;).&lt;br/&gt;
Through safe mode, we could ensure data security and fix this issue much easier.&lt;br/&gt;
Could you review it again.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="13214398" author="zhihyu@ebaysf.com" created="Thu, 23 Feb 2012 07:06:20 +0000"  >&lt;p&gt;@Chunhui:&lt;br/&gt;
Have you verified patch v4 in real, decent sized cluster ?&lt;br/&gt;
My concern is that the safe mode would make cluster startup longer, especially after a critical issue caused cluster shutdown.&lt;/p&gt;</comment>
                            <comment id="13214405" author="zjushch" created="Thu, 23 Feb 2012 07:10:47 +0000"  >&lt;p&gt;I define that master is in safe mode if it is stopping or initializing.&lt;/p&gt;

&lt;p&gt;If a region server die during master&apos;s safe mode, ServerManager will add ServerName to a set(Set&amp;lt;ServerName&amp;gt; deadNotExpiredServers),but not expire it until master is initialized&#12290;&lt;/p&gt;

&lt;p&gt;So if it is a server which carry META or ROOT, we will split its log when assigning RootAndMeta.&lt;/p&gt;

&lt;p&gt;Also, when assigning regions , we will remove this dead server from destinations.&lt;/p&gt;</comment>
                            <comment id="13214410" author="zjushch" created="Thu, 23 Feb 2012 07:20:16 +0000"  >&lt;p&gt;@Ted&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;safe mode would make cluster startup longer, especially after a critical issue caused cluster shutdown.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it just make some admin operations unavailable during safe mode, but not affect data read and write service.&lt;br/&gt;
It will make SSH longer, but it&apos;s a small probability event, where server died during master is initializing.&lt;/p&gt;
</comment>
                            <comment id="13214418" author="zhihyu@ebaysf.com" created="Thu, 23 Feb 2012 07:36:04 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; void expireServer(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ServerName serverName) {
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (services.isSafeMode()) {
+      LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Master is in safe mode, delay expiring server &quot;&lt;/span&gt; + serverName);
+      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.deadNotExpiredServers.add(serverName);
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So a server could be in both deadNotExpiredServers and deadservers ? I don&apos;t see return statement in the if block.&lt;/p&gt;

&lt;p&gt;In expireDelayedServers(), should we check that we&apos;re not in safe mode ?&lt;/p&gt;

&lt;p&gt;I recommend creating a review on review board. See an example in my first comment of this JIRA.&lt;/p&gt;</comment>
                            <comment id="13214475" author="zjushch" created="Thu, 23 Feb 2012 09:02:50 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
I submit patch v5.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So a server could be in both deadNotExpiredServers and deadservers ? I don&apos;t see return statement in the if block.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;m sorry I make a mistake to miss return statement in the if block.&lt;/p&gt;

&lt;p&gt;Also we check that we&apos;re not in safe mode in expireDelayedServers().&lt;/p&gt;

&lt;p&gt;And  master is in safe mode only when it is initializing now.&lt;/p&gt;</comment>
                            <comment id="13214476" author="zjushch" created="Thu, 23 Feb 2012 09:04:23 +0000"  >&lt;p&gt;I can&apos;t add review request, it throws error:The file &apos;https://svn.apache.org/repos/asf/hbase/trunk/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&apos; (r1292711) could not be found in the repository&lt;br/&gt;
why?&lt;/p&gt;</comment>
                            <comment id="13214793" author="zhihyu@ebaysf.com" created="Thu, 23 Feb 2012 15:07:26 +0000"  >&lt;p&gt;I was able to create new request.&lt;br/&gt;
Select hbase for Repository.&lt;br/&gt;
Enter &apos;/&apos; for Base Directory.&lt;/p&gt;

&lt;p&gt;Leave Bugs field blank.&lt;br/&gt;
Enter hbase to Groups field.&lt;/p&gt;</comment>
                            <comment id="13215298" author="zjushch" created="Fri, 24 Feb 2012 01:37:28 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
I has created the Review Request:&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4021/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4021/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;</comment>
                            <comment id="13215355" author="zhihyu@ebaysf.com" created="Fri, 24 Feb 2012 03:56:36 +0000"  >&lt;p&gt;There seems to be some compilation error:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.0.2:compile (&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;-compile) on project hbase: Compilation failure: Compilation failure:
[ERROR] /home/hduser/trunk/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java:[55,27] &lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; org.apache.mina.util does not exist
...
[ERROR] /home/hduser/trunk/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java:[107,54] cannot find symbol
[ERROR] symbol  : class ConcurrentHashSet
[ERROR] location: class org.apache.hadoop.hbase.master.ServerManager
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13215369" author="zjushch" created="Fri, 24 Feb 2012 04:32:15 +0000"  >&lt;p&gt;I build project again and didn&apos;t find any compilation error.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/hduser/trunk/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;55,27&amp;#93;&lt;/span&gt; package org.apache.mina.util does not exist&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;why package org.apache.mina.util ? Is there any mistake?&lt;/p&gt;</comment>
                            <comment id="13215370" author="zhihyu@ebaysf.com" created="Fri, 24 Feb 2012 04:41:17 +0000"  >&lt;p&gt;The compilation error was caused by the following in src/main/java/org/apache/hadoop/hbase/master/ServerManager.java:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.mina.util.ConcurrentHashSet;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See &lt;a href=&quot;http://www.onkarjoshi.com/blog/201/concurrenthashset-in-java-from-concurrenthashmap/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.onkarjoshi.com/blog/201/concurrenthashset-in-java-from-concurrenthashmap/&lt;/a&gt; for how to get a ConcurrentHashSet.&lt;/p&gt;</comment>
                            <comment id="13215379" author="zjushch" created="Fri, 24 Feb 2012 04:52:57 +0000"  >&lt;p&gt;I&#8216;m sorry for the mistake of ConcurrentHashSet.&lt;br/&gt;
Thank Ted.&lt;/p&gt;</comment>
                            <comment id="13216114" author="jxiang" created="Fri, 24 Feb 2012 23:40:53 +0000"  >&lt;p&gt;Instead of introducing safe mode, can we add something to the RPC server and don&apos;t allow it to sever traffic before the actual server is ready, for example, fully initialized? &lt;/p&gt;</comment>
                            <comment id="13216989" author="zjushch" created="Mon, 27 Feb 2012 01:55:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;don&apos;t allow it to sever traffic before the actual server is ready.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it&apos;s  inconvenient. For example, before fully initialized, we need to allow RegionserverReport but don&apos;t allow admin&apos;s operation.Also, Server death is found through ZK not RPC.&lt;/p&gt;</comment>
                            <comment id="13216994" author="zjushch" created="Mon, 27 Feb 2012 02:07:24 +0000"  >&lt;p&gt;@stack&lt;br/&gt;
Could you take a look about introducing safemode to delay SSH after master is initialized.&lt;br/&gt;
I think this solution is more easier for the issue.&lt;/p&gt;</comment>
                            <comment id="13217347" author="stack" created="Mon, 27 Feb 2012 18:21:20 +0000"  >&lt;p&gt;Do you think we should check to see if we have already split this server&apos;s log for the case where the server was carrying root and meta?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      splitLogIfOnline(currentMetaServer);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or will the above call become a noop because we just split it before we assignedroot?&lt;/p&gt;

&lt;p&gt;Is this a &apos;safe mode&apos; or is it the master &apos;initializing&apos;?  I think &apos;safe mode&apos; makes folks think of hdfs.  It is a little similar in that master is trying to make sense of the cluster but initializing might be a better name for this state.&lt;/p&gt;

&lt;p&gt;BTW, I think this is an improvement over previous versions of this patch.  Its easier to reason about.  Good stuff Chunhui.&lt;/p&gt;

&lt;p&gt;Make a method and put this duplicated code into it and call it from the two places its repeated:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!deadNotExpiredServers.isEmpty()) {
+      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ServerName server : deadNotExpiredServers) {
+        LOG.debug(&lt;span class=&quot;code-quote&quot;&gt;&quot;Removing dead but not expired server: &quot;&lt;/span&gt; + server
+            + &lt;span class=&quot;code-quote&quot;&gt;&quot; from eligible server pool.&quot;&lt;/span&gt;);
+        servers.remove(server);
+      }
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Fix this bit of javadoc &apos;... but not are expired now.&apos;&lt;/p&gt;

&lt;p&gt;You don&apos;t need this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * Copyright 2007 The Apache Software Foundation
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think MasterInSafeModeException becomes MasterInitializingException?&lt;/p&gt;

&lt;p&gt;Good stuff Chunhui&lt;/p&gt;

&lt;p&gt;Regards Jimmy&apos;s comment:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Instead of introducing safe mode, can we add something to the RPC server and don&apos;t allow it to sever traffic before the actual server is ready, for example, fully initialized?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We have a ServerNotRunningYetException down in the ipc.  Its thrown by HBaseServer if RPC has not started yet.  It seems a little related to this MasterInitializing.  We also have a PleaseHoldException.  Perhaps the Master should throw this instead of the MasterInitializing?  We&apos;d throw a PleaseHoldException and the message would be detail that the master is initializing?&lt;/p&gt;</comment>
                            <comment id="13217364" author="jxiang" created="Mon, 27 Feb 2012 18:39:19 +0000"  >&lt;p&gt;@Stack, I agree.  I think we should reuse the existing exception if we can.&lt;/p&gt;</comment>
                            <comment id="13217377" author="zhihyu@ebaysf.com" created="Mon, 27 Feb 2012 18:45:14 +0000"  >&lt;p&gt;If we reuse PleaseHoldException, the javadoc for that exception should be modified:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 * This exception is thrown by the master when a region server was shut down
 * and restarted so fast that the master still hasn&apos;t processed the server
 * shutdown of the first instance.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13217732" author="stack" created="Tue, 28 Feb 2012 00:34:14 +0000"  >&lt;p&gt;@Ted Yes.  We can keep the prefix and change the rest of the sentence to be more generic.  If Chunhui reuses it here, it&apos;ll be an exception the master throws when they want the client to come back in a while.&lt;/p&gt;</comment>
                            <comment id="13217863" author="zjushch" created="Tue, 28 Feb 2012 03:06:43 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do you think we should check to see if we have already split this server&apos;s log for the case where the server was carrying root and meta?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think it&apos;s not a problem, server&apos;s  log dir will be deleted after split, so the second split will do nothing. Of course, we could do the check to prevent unnecessary call splitLogIfOnline.&lt;/p&gt;

&lt;p&gt;Thanks stack for the review, I will make a new patch as the above advice.&lt;/p&gt;</comment>
                            <comment id="13217874" author="zjushch" created="Tue, 28 Feb 2012 03:55:47 +0000"  >&lt;p&gt;In v7 patch, use PleaseHoldException.&lt;/p&gt;</comment>
                            <comment id="13217876" author="zhihyu@ebaysf.com" created="Tue, 28 Feb 2012 04:09:48 +0000"  >&lt;p&gt;@Chunhui:&lt;br/&gt;
Can you upload patch v7 onto review board ?&lt;/p&gt;

&lt;p&gt;A test run through Hadoop QA would be helpful as well.&lt;/p&gt;</comment>
                            <comment id="13217888" author="zhihyu@ebaysf.com" created="Tue, 28 Feb 2012 04:36:26 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * of the first instance, or when master is initializing and client call admin&apos;s
+ * operations
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;should read:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * of the first instance, or when master is initializing and client calls admin
+ * operations
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Please fill javadoc for the following method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; RegionServerTracker createRegionServerTracker(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ZooKeeperWatcher zkw,
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is the above used for testing ? I don&apos;t see it called in other classes.&lt;/p&gt;</comment>
                            <comment id="13217891" author="zhihyu@ebaysf.com" created="Tue, 28 Feb 2012 04:45:36 +0000"  >&lt;p&gt;Please remove space after the dot:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    mfs. splitLogAfterStartup(sm.getOnlineServers().keySet());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I see the following code in several methods:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (isInitializing()) {
+      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PleaseHoldException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Master is initializing&quot;&lt;/span&gt;);
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Does creating a new method wrapping the above code make sense ?&lt;/p&gt;</comment>
                            <comment id="13217915" author="zjushch" created="Tue, 28 Feb 2012 05:18:20 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
I has modified as the above in patchv8.&lt;/p&gt;</comment>
                            <comment id="13217968" author="khemani" created="Tue, 28 Feb 2012 07:04:11 +0000"  >&lt;p&gt;(I haven&apos;t read through the comments carefully and I am sorry for the noise if I am way off the mark)&lt;/p&gt;

&lt;p&gt;The problem as I see it is that the Master&apos;s understanding of which region servers are online changes from the time that it calls splitLogAfterStartup() to the time it calls rebuildUserRegions() in joinCluster().&lt;/p&gt;

&lt;p&gt;I feel that it might be lot simpler if master saves the list of region-servers that it had given to splitLogAfterStartup(), and later uses the same list for rebuilding user regions. That should fix this issue, won&apos;t it?&lt;/p&gt;</comment>
                            <comment id="13217973" author="zjushch" created="Tue, 28 Feb 2012 07:16:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;I feel that it might be lot simpler if master saves the list of region-servers that it had given to splitLogAfterStartup(), and later uses the same list for rebuilding user regions. That should fix this issue, won&apos;t it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, it&apos;s right in most case. But if the server died who carrying ROOT or META during master initializing, it&apos;s another problem. So we should fix these two case.&lt;/p&gt;</comment>
                            <comment id="13218407" author="khemani" created="Tue, 28 Feb 2012 18:00:48 +0000"  >&lt;p&gt;Assuming that the master uses the saved region-server list in joinCluster,&lt;br/&gt;
can you then please outline the scenario where problems can still happen?&lt;br/&gt;
There is some handling of META and ROOT not being available in&lt;br/&gt;
ServerShutdownHandler and I am wondering why that is not sufficient.&lt;/p&gt;

&lt;p&gt;On 2/27/12 11:17 PM, &quot;chunhui shen (Commented) (JIRA)&quot; &amp;lt;jira@apache.org&amp;gt;&lt;/p&gt;

</comment>
                            <comment id="13218820" author="zjushch" created="Wed, 29 Feb 2012 01:44:24 +0000"  >&lt;p&gt;@Prakash&lt;br/&gt;
In a live cluster, do the following step&lt;br/&gt;
1.kill the master;&lt;br/&gt;
1.start the master, and master is initializing&#65307;&lt;br/&gt;
3.master complete splitLog&lt;br/&gt;
4.kill the META server&lt;br/&gt;
5.master start assigning ROOT and META&lt;br/&gt;
6.Now meta region data will loss&#65292; because we can&apos;t ensure META server&apos;s log is split caused by step 4.&lt;/p&gt;</comment>
                            <comment id="13219349" author="stack" created="Wed, 29 Feb 2012 17:27:43 +0000"  >&lt;p&gt;@Prakash&lt;/p&gt;

&lt;p&gt;Presume we pass list from splitLogAfterStartup to joinClusters as you suggest and presume list of servers included the server that had been hosting .META.&lt;/p&gt;

&lt;p&gt;Allow that during or just after splitLogAfterStartup, .META. server &apos;crashes&apos; &amp;#8211; it becomes unresponsive.  Also allow that somehow, just before it hung up, during a long running log split, .META. took on a couple of edits saying regions A, B, and C had split.&lt;/p&gt;

&lt;p&gt;In assignRootAndMeta, we&apos;ll notice the unresponsiveness, force the expiration of the server that was carrying .META. (this will queue a ServerShutdownHandler but will not wait on its completion), and we&apos;ll then reassign of .META.  Its very likely that .META. will go to one of the other &apos;good&apos; servers.  Its also likely that the SSH will not have completed its processing before this assign happens.  Thus, on deploy, the .META. will be missing the above A, B, and C split edits.&lt;/p&gt;
</comment>
                            <comment id="13219354" author="stack" created="Wed, 29 Feb 2012 17:39:58 +0000"  >&lt;p&gt;@Chunhui You have a new method splitLogIfOnline which will split the log if the server was online.  Why do you not expire the server? (You remove the expireIfOnline method).&lt;/p&gt;

&lt;p&gt;Now we have this initializing state, do you think we should also stop the processing of expired servers during this startup phase and instead queue them up for processing after the master is up?  Could do that in another issue maybe since this issue has been going on too long and your patch is at least an improvement on what we currently have (This startup sequence needs a big refactor IMO &amp;#8211; it is way too complicated figuring the sequence in which stuff runs).&lt;/p&gt;

&lt;p&gt;Are there still holes?  For example, say the .META. server crashes AFTER we&apos;ve verified it up in assignRootAndMeta but before we get to do a scan of .META. to rebuild user regions list.  Could .META. be assigned w/o log splitting finishing?  (I don&apos;t think so... .META. would be offline until the servershutdown handler ran and it would first split logs).&lt;/p&gt;

&lt;p&gt;Good stuff.&lt;/p&gt;</comment>
                            <comment id="13219413" author="khemani" created="Wed, 29 Feb 2012 19:03:57 +0000"  >&lt;p&gt;@Stack&lt;/p&gt;

&lt;p&gt;If we presume that the list of servers that joinClusters received contains&lt;br/&gt;
the server hosting .META., then the next step, that you outlined in your&lt;br/&gt;
scenario, cannot be allowed. If we are splitting logs for .META. then we&lt;br/&gt;
have determined that meta-server was not running and therefore it cannot&lt;br/&gt;
be taking edits. The problem you are outlining is probably still there but&lt;br/&gt;
the scenario has to be refined.&lt;/p&gt;

&lt;p&gt;Anyway my point was - at startup master should determine once what servers&lt;br/&gt;
are up and what are not. This should include whether ROOT and META are&lt;br/&gt;
assigned or not. And then it should initialize everything based on that&lt;br/&gt;
knowledge which must not change during initialization. Anything that&lt;br/&gt;
changes during initialization should be taken care of by the normal&lt;br/&gt;
Server-handlers. But I have to admit, I don&apos;t understand the assignment&lt;br/&gt;
complexities very well &#352; I will read up some more.&lt;/p&gt;


</comment>
                            <comment id="13219428" author="stack" created="Wed, 29 Feb 2012 19:18:46 +0000"  >&lt;p&gt;@Prakash&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;.... then the next step, that you outlined in your scenario, cannot be allowed&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How should we do this boss?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The problem you are outlining is probably still there but the scenario has to be refined.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What should I add?  If we allow that the split could take a long time, its possible that on entry to the log splitting the server was good but by the end it could have gone AWOL.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And then it should initialize everything based on that knowledge which must not change during initialization.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think the root issue is that it needs to scan .META. and &lt;del&gt;ROOT&lt;/del&gt; as part of the startup; they need to be assigned and up w/ all edits in place.  Thats whats proving to be a little tough to ensure.&lt;/p&gt;

&lt;p&gt;(Thanks for the review P).&lt;/p&gt;</comment>
                            <comment id="13219727" author="zjushch" created="Thu, 1 Mar 2012 02:10:26 +0000"  >&lt;p&gt;@stack&lt;br/&gt;
I think we could introduce initializing state first for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5454&quot; title=&quot;Refuse operations from Admin before master is initialized&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5454&quot;&gt;&lt;del&gt;HBASE-5454&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Are there still holes? For example, say the .META. server crashes AFTER we&apos;ve verified it up in assignRootAndMeta but before we get to do a scan of .META. to rebuild user regions list. Could .META. be assigned w/o log splitting finishing?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.it&apos;s another a hole, but it&apos;s easy to solve&#65292; we could stop the processing of expired servers until master finished assign ROOT and META not initialized.&lt;/p&gt;

&lt;p&gt;I have thought this issue for a long time, and I think preventing processing of SSH is a clear and simple solution, otherwise we should consider many cases where meta server died in different time during master initializing.&lt;/p&gt;</comment>
                            <comment id="13219787" author="ram_krish" created="Thu, 1 Mar 2012 04:25:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think preventing processing of SSH is a clear and simple solution&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I too think it is a good and simple idea.  &lt;/p&gt;</comment>
                            <comment id="13219858" author="stack" created="Thu, 1 Mar 2012 06:57:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;I have thought this issue for a long time, and I think preventing processing of SSH is a clear and simple solution, otherwise we should consider many cases where meta server died in different time during master initializing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Would we do the above as part of another issue Chunhui?&lt;/p&gt;</comment>
                            <comment id="13219861" author="stack" created="Thu, 1 Mar 2012 07:02:02 +0000"  >&lt;p&gt;Also, do you need to make a new version of this patch now hbase-5454 has gone in?  Thanks.&lt;/p&gt;</comment>
                            <comment id="13219914" author="zjushch" created="Thu, 1 Mar 2012 08:37:23 +0000"  >&lt;p&gt;I have created a new issue and submit the new patch, what about move discussion to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5501&quot; title=&quot;Handle potential data loss due to concurrent processing of processFaileOver and ServerShutdownHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5501&quot;&gt;&lt;del&gt;HBASE-5501&lt;/del&gt;&lt;/a&gt; since this one has too long comments&lt;/p&gt;</comment>
                            <comment id="13220184" author="stack" created="Thu, 1 Mar 2012 17:48:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;I have created a new issue and submit the new patch, what about move discussion to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5501&quot; title=&quot;Handle potential data loss due to concurrent processing of processFaileOver and ServerShutdownHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5501&quot;&gt;&lt;del&gt;HBASE-5501&lt;/del&gt;&lt;/a&gt; since this one has too long comments&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That the issue is long is not a good reason to open new issue.  We need to keep the decisions and discussion in one place.  It makes it easier on the folks who are following behind us to make sense of why we did what.   Would suggest you close hbase-5501.&lt;/p&gt;</comment>
                            <comment id="13220599" author="zjushch" created="Fri, 2 Mar 2012 01:55:53 +0000"  >&lt;p&gt;I&apos;m sorry. Let&apos;s continue discussing in this jira.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;stack added a comment - 01/Mar/12 17:45 Is this patch right? You have a disablessh flag. What about other callbacks that could come in during the initialization? I don&apos;t see where you queue up callbacks for processing post-initialization.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t change the logic of prevent processing of SSH, but change the time of enabling SSH from initialized to finished assigning ROOTandMETA because the following hole:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Are there still holes? For example, say the .META. server crashes AFTER we&apos;ve verified it up in assignRootAndMeta but before we get to do a scan of .META. to rebuild user regions list. Could .META. be assigned w/o log splitting finishing?&lt;/p&gt;&lt;/blockquote&gt;
</comment>
                            <comment id="13220606" author="zjushch" created="Fri, 2 Mar 2012 02:00:55 +0000"  >&lt;p&gt;&lt;a href=&quot;https://reviews.apache.org/r/4021/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4021/&lt;/a&gt;&lt;br/&gt;
Review request for the new version patch&lt;/p&gt;</comment>
                            <comment id="13221337" author="zhihyu@ebaysf.com" created="Fri, 2 Mar 2012 23:06:00 +0000"  >&lt;p&gt;I put some review on r/4021.&lt;/p&gt;</comment>
                            <comment id="13221500" author="zjushch" created="Sat, 3 Mar 2012 03:45:56 +0000"  >&lt;p&gt;@Ted&lt;br/&gt;
Thanks for the review on r/4021. I will modify it later including the failed tests.&lt;/p&gt;

&lt;p&gt;For one of the points that when to allow processing of ServerShutdownHandler, complete initialized or complete assignROOTandMETA? &lt;/p&gt;

&lt;p&gt;As the stack&apos;s comment - 29/Feb/12 19:18, I think we should allow processing of ServerShutdownHandler after complete assignROOTandMETA to fix the hole case that metaserver died between assignROOTandMETA and initialized. In such a hole case, master will wait for meta when assign user regions&#65292; but SSH for meta server is prevented before initialized, so one confliction will happen.&lt;/p&gt;</comment>
                            <comment id="13222188" author="zjushch" created="Mon, 5 Mar 2012 06:50:58 +0000"  >&lt;p&gt;Patch v10 introduces Ted&apos;s review comment on r/4021.(Pass the failed tests also)&lt;br/&gt;
For the logic, I think it&apos;s healthy now. Waiting for other suggestions.&lt;/p&gt;</comment>
                            <comment id="13222252" author="hadoopqa" created="Mon, 5 Mar 2012 10:10:49 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12517050/hbase-5270v10.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12517050/hbase-5270v10.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    -1 javadoc.  The javadoc tool appears to have generated -129 warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 155 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    +1 core tests.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1100//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1100//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1100//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1100//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1100//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1100//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13222927" author="zhihyu@ebaysf.com" created="Tue, 6 Mar 2012 02:18:13 +0000"  >&lt;p&gt;@Stack:&lt;br/&gt;
Can you provide your comments ?&lt;/p&gt;</comment>
                            <comment id="13224922" author="zhihyu@ebaysf.com" created="Thu, 8 Mar 2012 01:36:54 +0000"  >&lt;p&gt;Backported patch v10 to 0.92&lt;br/&gt;
All unit tests passed.&lt;/p&gt;

&lt;p&gt;I then performed the following test on a 5 region server cluster:&lt;br/&gt;
1. find the RS hosting ROOT: sea-lab-3&lt;br/&gt;
2. ran &apos;bin/rolling-restart.sh&apos; on master&lt;br/&gt;
3. when I saw the following output I kill -9&apos;ed RS on sea-lab-3:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
starting master, logging to /apache/hbase/bin/../logs/hbase-hduser-master-sea-lab-0.out
Wait a minute &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; master to come up join cluster
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;4. master came up after sometime - ROOT got served by sea-lab-5&lt;br/&gt;
5. ROOT went through one more transition when sea-lab-5 got restarted.&lt;/p&gt;

&lt;p&gt;Cluster is in stable state afterwards.&lt;/p&gt;</comment>
                            <comment id="13224945" author="zjushch" created="Thu, 8 Mar 2012 02:18:11 +0000"  >&lt;p&gt;Thanks Ted for the tests.&lt;/p&gt;</comment>
                            <comment id="13228147" author="zjushch" created="Tue, 13 Mar 2012 02:30:47 +0000"  >&lt;p&gt;@Stack:&lt;br/&gt;
Could you see this issue with latest patch again.&lt;br/&gt;
Thanks. &lt;/p&gt;</comment>
                            <comment id="13228174" author="stack" created="Tue, 13 Mar 2012 03:51:45 +0000"  >&lt;p&gt;@Chunhui Sorry.  I thought I&apos;d provided comments already on this issue.  It seems like my comments were lost by me.&lt;/p&gt;

&lt;p&gt;So, to me its odd that we disable one handler only; i.e. serverShutdownHandlerEnabled&lt;/p&gt;

&lt;p&gt;If a split or a close or an open come in while master is initializing, won&apos;t that mess up our view of the cluster?  Why not turn all all handlers on initialization queuing tasks?&lt;/p&gt;

&lt;p&gt;I would tolerate our doing this in another issue if thats what you think we should do.&lt;/p&gt;

&lt;p&gt;Who needs this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

+  void joinCluster() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException, KeeperException, InterruptedException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think you need to add comments explaining what deadNotExpired servers are.  Its a weird concept and folks can go read over where they are defined but it could help if up in HMaster and AssingmentManager where they are used, you explain what they are to help those coming after trying to figure whats going on.  Maybe point at the explaination over in ServerManager?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    Iterator&amp;lt;ServerName&amp;gt; serverIterator=deadNotExpiredServers.iterator();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice how there are spaces around operators in all of the surrounding code.&lt;/p&gt;

&lt;p&gt;What happens if when we call expireDeadNotExpiredServers, the server has already been expired?&lt;/p&gt;

&lt;p&gt;Why do the following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    serverShutdownHandlerEnabled = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.serverManager.expireDeadNotExpiredServers();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;.. then in expireDeadNotExpiredServers, first thing we do is check if serverShutdownHandlerEnabled is true or not.  Under what cirumstance would it not be true if we just set it?  This is only place we call expireDeadNotExpiredServers.&lt;/p&gt;

&lt;p&gt;In general I&apos;m in favor of committing this patch because it has a test.  Thanks Chunhui.&lt;/p&gt;

</comment>
                            <comment id="13228207" author="zjushch" created="Tue, 13 Mar 2012 04:52:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;Who needs this:void joinCluster()&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is called by one of test cases.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What happens if when we call expireDeadNotExpiredServers, the server has already been expired?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If the server has already been expired, it will do nothing in current logic because in ServerManager#expireServer&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.onlineServers.containsKey(serverName)){&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;}&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We should call expireDeadNotExpiredServers only after master set serverShutdownHandlerEnabled now. So we could needn&apos;t check if serverShutdownHandlerEnabled is true or not.&lt;/p&gt;

&lt;p&gt;we do  serverShutdownHandlerEnabled = true;this.serverManager.expireDeadNotExpiredServers();&lt;br/&gt;
to enable ServerShutdownHandler and expire some servers who has been dead but not be expired by ServerManager.&lt;/p&gt;

&lt;p&gt;At last, we do the above in another issue ?&lt;/p&gt;</comment>
                            <comment id="13228209" author="stack" created="Tue, 13 Mar 2012 04:59:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;It is called by one of test cases.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok.  Its package private so that is good.  Could add a comment that it is for tests if you are making another patch.&lt;/p&gt;

&lt;p&gt;I&apos;d be fine w/ the other stuff in a new issue.&lt;/p&gt;

&lt;p&gt;Want to upload new patch w/ minor items addressed, add comments and fixing spaces around &apos;=&apos;, etc., and we can commit.&lt;/p&gt;

&lt;p&gt;I still think this all needs refactor but this change at least has an accompanying test proving it fixes a particular circumstance (Ted also tested the circumstance above).&lt;/p&gt;

&lt;p&gt;Good stuff Chunhui&lt;/p&gt;</comment>
                            <comment id="13228222" author="zjushch" created="Tue, 13 Mar 2012 05:26:43 +0000"  >&lt;p&gt;minor items addressed in patchv11&lt;br/&gt;
&lt;a href=&quot;https://reviews.apache.org/r/4021/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/4021/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13228227" author="stack" created="Tue, 13 Mar 2012 05:36:38 +0000"  >&lt;p&gt;What did you change Chunhui?  And rather, could you attach the patch here please.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13228233" author="zjushch" created="Tue, 13 Mar 2012 05:58:49 +0000"  >&lt;p&gt;I have submited patch here --&amp;gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5270&quot; title=&quot;Handle potential data loss due to concurrent processing of processFaileOver and ServerShutdownHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5270&quot;&gt;&lt;del&gt;HBASE-5270&lt;/del&gt;&lt;/a&gt;v11.patch&lt;/p&gt;

&lt;p&gt;I only add some notes for joinCluster(), change some comments explaining what deadNotExpired servers are in ServerManager, and fixing spaces around &apos;=&apos;.&lt;/p&gt;</comment>
                            <comment id="13228251" author="hadoopqa" created="Tue, 13 Mar 2012 06:57:11 +0000"  >&lt;p&gt;-1 overall.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12518153/HBASE-5270v11.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12518153/HBASE-5270v11.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    +1 @author.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    +1 tests included.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    +1 javadoc.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    -1 findbugs.  The patch appears to introduce 161 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    +1 release audit.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;     -1 core tests.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat&lt;br/&gt;
                  org.apache.hadoop.hbase.mapred.TestTableMapReduce&lt;br/&gt;
                  org.apache.hadoop.hbase.mapreduce.TestImportTsv&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1172//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1172//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1172//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1172//artifact/trunk/patchprocess/newPatchFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/1172//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/1172//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13228453" author="stack" created="Tue, 13 Mar 2012 15:38:09 +0000"  >&lt;p&gt;I committed to trunk.  Can you make a version for 0.92 please Chunhui?  The trunk patch does not seem to apply.  Thank you.&lt;/p&gt;</comment>
                            <comment id="13228494" author="lhofhansl" created="Tue, 13 Mar 2012 16:28:12 +0000"  >&lt;p&gt;Stack, should I apply to 0.94?&lt;/p&gt;</comment>
                            <comment id="13228496" author="stack" created="Tue, 13 Mar 2012 16:31:14 +0000"  >&lt;p&gt;@Lars Yeah.  Let me try this trunk patch.  Its good for master joining a cluster w/ concurrent crashing regionservers.&lt;/p&gt;</comment>
                            <comment id="13228499" author="stack" created="Tue, 13 Mar 2012 16:33:59 +0000"  >&lt;p&gt;The trunk patch went into 0.94.  I committed it.  So, just need patch for 0.92.2 now.&lt;/p&gt;</comment>
                            <comment id="13228526" author="ram_krish" created="Tue, 13 Mar 2012 17:25:26 +0000"  >&lt;p&gt;So this one went in.&lt;br/&gt;
Thanks Stack, Ted and mainly Chunhui for pursuing on this.&lt;br/&gt;
The 0.90 patch that Chunhui gave in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5179&quot; title=&quot;Concurrent processing of processFaileOver and ServerShutdownHandler may cause region to be assigned before log splitting is completed, causing data loss&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5179&quot;&gt;&lt;del&gt;HBASE-5179&lt;/del&gt;&lt;/a&gt; is running in our test clusters.&lt;/p&gt;</comment>
                            <comment id="13228906" author="zjushch" created="Wed, 14 Mar 2012 02:48:19 +0000"  >&lt;p&gt;patchv11 for 0.92&lt;/p&gt;</comment>
                            <comment id="13230668" author="stack" created="Thu, 15 Mar 2012 22:50:30 +0000"  >&lt;p&gt;Thanks Chunhui.  Will apply after 0.92.1 leaves the gate so its there for 0.92.2 (unless 0.92.1RC0 gets squashed and then I&apos;ll include it).&lt;/p&gt;</comment>
                            <comment id="13233959" author="stack" created="Tue, 20 Mar 2012 23:52:56 +0000"  >&lt;p&gt;Committed to 0.92 branch.  Thanks for the patch Chunhui.&lt;/p&gt;</comment>
                            <comment id="13234058" author="hudson" created="Wed, 21 Mar 2012 03:42:35 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #332 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/332/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/332/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5270&quot; title=&quot;Handle potential data loss due to concurrent processing of processFaileOver and ServerShutdownHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5270&quot;&gt;&lt;del&gt;HBASE-5270&lt;/del&gt;&lt;/a&gt; Handle potential data loss due to concurrent processing of processFaileOver and ServerShutdownHandler (Revision 1303219)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5270&quot; title=&quot;Handle potential data loss due to concurrent processing of processFaileOver and ServerShutdownHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5270&quot;&gt;&lt;del&gt;HBASE-5270&lt;/del&gt;&lt;/a&gt; Handle potential data loss due to concurrent processing of processFaileOver and ServerShutdownHandler (Revision 1303218)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/regionserver/TestRSKilledWhenMasterInitializing.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;stack : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/MasterServices.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/master/handler/CreateTableHandler.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15016138" author="lars_francke" created="Fri, 20 Nov 2015 11:54:05 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12538023">HBASE-5179</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12544740">HBASE-5501</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12514619" name="5270-90-testcase.patch" size="8860" author="zjushch" created="Wed, 15 Feb 2012 10:15:00 +0000"/>
                            <attachment id="12514779" name="5270-90-testcasev2.patch" size="15177" author="zjushch" created="Thu, 16 Feb 2012 09:50:51 +0000"/>
                            <attachment id="12514618" name="5270-90.patch" size="32058" author="zjushch" created="Wed, 15 Feb 2012 10:15:00 +0000"/>
                            <attachment id="12514780" name="5270-90v2.patch" size="39008" author="zjushch" created="Thu, 16 Feb 2012 09:50:51 +0000"/>
                            <attachment id="12515523" name="5270-90v3.patch" size="39746" author="zjushch" created="Wed, 22 Feb 2012 02:19:30 +0000"/>
                            <attachment id="12514617" name="5270-testcase.patch" size="9960" author="zjushch" created="Wed, 15 Feb 2012 10:15:00 +0000"/>
                            <attachment id="12514776" name="5270-testcasev2.patch" size="14954" author="zjushch" created="Thu, 16 Feb 2012 08:34:56 +0000"/>
                            <attachment id="12518286" name="HBASE-5270-92v11.patch" size="27291" author="zjushch" created="Wed, 14 Mar 2012 02:48:19 +0000"/>
                            <attachment id="12518153" name="HBASE-5270v11.patch" size="32699" author="zjushch" created="Tue, 13 Mar 2012 05:26:43 +0000"/>
                            <attachment id="12514616" name="hbase-5270.patch" size="29167" author="zjushch" created="Wed, 15 Feb 2012 10:15:00 +0000"/>
                            <attachment id="12517050" name="hbase-5270v10.patch" size="32524" author="zjushch" created="Mon, 5 Mar 2012 06:46:23 +0000"/>
                            <attachment id="12514775" name="hbase-5270v2.patch" size="35884" author="zjushch" created="Thu, 16 Feb 2012 08:34:56 +0000"/>
                            <attachment id="12515719" name="hbase-5270v4.patch" size="30748" author="zjushch" created="Thu, 23 Feb 2012 06:58:13 +0000"/>
                            <attachment id="12515726" name="hbase-5270v5.patch" size="30474" author="zjushch" created="Thu, 23 Feb 2012 08:55:13 +0000"/>
                            <attachment id="12515882" name="hbase-5270v6.patch" size="30428" author="zjushch" created="Fri, 24 Feb 2012 04:52:57 +0000"/>
                            <attachment id="12516267" name="hbase-5270v7.patch" size="30091" author="zjushch" created="Tue, 28 Feb 2012 03:54:22 +0000"/>
                            <attachment id="12516280" name="hbase-5270v8.patch" size="28430" author="zjushch" created="Tue, 28 Feb 2012 05:16:39 +0000"/>
                            <attachment id="12516776" name="hbase-5270v9.patch" size="28417" author="zjushch" created="Fri, 2 Mar 2012 01:49:36 +0000"/>
                            <attachment id="12514710" name="sampletest.txt" size="6293" author="stack" created="Wed, 15 Feb 2012 21:27:29 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 25 Jan 2012 03:03:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225122</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0aggn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>58940</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>