<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:17:18 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10801/HBASE-10801.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10801] Ensure DBE interfaces can work with Cell</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10801</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Some changes to the interfaces may be needed for DBEs or may be the way it works currently may be need to be modified inorder to make DBEs work with Cells. Suggestions and ideas welcome.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12702557">HBASE-10801</key>
            <summary>Ensure DBE interfaces can work with Cell</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12623342">HBASE-7320</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ram_krish">ramkrishna.s.vasudevan</assignee>
                                    <reporter username="ram_krish">ramkrishna.s.vasudevan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Mar 2014 05:36:03 +0000</created>
                <updated>Sat, 21 Feb 2015 23:33:51 +0000</updated>
                            <resolved>Fri, 23 May 2014 07:16:47 +0000</resolved>
                                                    <fixVersion>0.99.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="13941427" author="anoop.hbase" created="Thu, 20 Mar 2014 05:56:56 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;KeyValue getKeyValue();&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This only deal with KV now.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;void encodeKeyValues(ByteBuffer in, HFileBlockEncodingContext encodingCtx) &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here 1st we write KVs (Cells) into a buffer and then passed to encoder. Encoder again reads it and encodes and creates a new buffer.&lt;br/&gt;
May be now we can change this?  There is no need to have this model now.  Previously we had option of no encode in disk and encode only in cache.  At that time the read buffer from a HFile block was passed to this and encodes.&lt;br/&gt;
So encode cell by cell can be done now ?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;ByteBuffer decodeKeyValues(DataInputStream source, HFileBlockDecodingContext decodingCtx)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The main code flow is not using this.&lt;/p&gt;
</comment>
                            <comment id="13941433" author="ram_krish" created="Thu, 20 Mar 2014 06:05:28 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ByteBuffer decodeKeyValues(DataInputStream source, HFileBlockDecodingContext decodingCtx)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;+1 to remove this code and also refactor testcase that uses this.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
void encodeKeyValues(ByteBuffer in, HFileBlockEncodingContext encodingCtx)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Can check this feasibility of doing cell by cell.  I think this was the one that we had discussed while doing V3.  First we should try to fit Cell into this and then proceed processing cell by cell.&lt;/p&gt;</comment>
                            <comment id="13941438" author="anoop.hbase" created="Thu, 20 Mar 2014 06:17:22 +0000"  >&lt;p&gt;Yes this subject came to our discussion before also.   Making this change will need us to have a NoOp DBE impl which just do the write of a cell as it is with out any encoding.&lt;/p&gt;</comment>
                            <comment id="13941459" author="mcorgan" created="Thu, 20 Mar 2014 06:50:26 +0000"  >&lt;p&gt;I did some tinkering with this a while back, and the approach may be very outdated, but I&apos;ll quickly point it out here.  The DBE&apos;s maintain a BufferedDataBlockEncoder.SeekerState which is a snapshot of a single decoded KV/Cell that is ready to be sent up the read path.&lt;/p&gt;

&lt;p&gt;In existing code, it gets deep-copied to a KeyValue: &lt;a href=&quot;https://github.com/apache/hbase/blob/0.98/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hbase/blob/0.98/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But I think SeekerState could be made to implement Cell and therefore we could send a shallow-copied reference up the read path.  This code is very old and likely has parts that don&apos;t make sense or even compile, but hopefully it still illustrates how SeekerState can extend Cell: &lt;a href=&quot;https://github.com/hotpads/hbase/blob/cell-seeker-state/hbase-server/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/hotpads/hbase/blob/cell-seeker-state/hbase-server/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also remember trying two approaches with different strategies regarding when to copy the primitive fields, and this one was slower, but I don&apos;t have the faster one.  Just throwing that out there in case there&apos;s merit to the overall approach.&lt;/p&gt;</comment>
                            <comment id="13959914" author="ram_krish" created="Fri, 4 Apr 2014 12:51:11 +0000"  >&lt;p&gt;Patch seems to work. Changing to cells further down the path of read would  make this patch even more worthy.&lt;br/&gt;
Actually wanted to change write path also, but I think Anoop is working on that. If not I will take that up later.&lt;br/&gt;
If this looks fine, can take up next task of changing to Cells through out the read path.&lt;/p&gt;</comment>
                            <comment id="13962793" author="ram_krish" created="Tue, 8 Apr 2014 11:46:01 +0000"  >&lt;p&gt;Adds equals, hashCode(), compareTo() APIs.  I found that Matt had already attached a patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7323&quot; title=&quot;add Cell interface to SeekerState and BufferedEncodedSeeker&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7323&quot;&gt;&lt;del&gt;HBASE-7323&lt;/del&gt;&lt;/a&gt; and it has these.&lt;/p&gt;</comment>
                            <comment id="13963795" author="stack" created="Wed, 9 Apr 2014 04:32:49 +0000"  >&lt;p&gt;lgtm on skim.  Wonder if &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt; likes it (smile)&lt;/p&gt;</comment>
                            <comment id="13963896" author="mcorgan" created="Wed, 9 Apr 2014 07:14:33 +0000"  >&lt;p&gt;it&apos;s great ram.   i wish i could help.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;+  protected static class SeekerState implements Cell, Comparable&amp;lt;Cell&amp;gt; {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I noticed you added Comparable&amp;lt;Cell&amp;gt; between patches 1 and 2.  I know I had Comparable&amp;lt;Cell&amp;gt; in that example code, but like your first patch, I was now thinking it&apos;s unnecessary since Cell extends Comparable&amp;lt;Cell&amp;gt; already.  Did you find a reason for it?&lt;/p&gt;

&lt;p&gt;It&apos;s been a long time so I can&apos;t remember, but I had also tried another strategy for copying all the individual fields around.  &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      rowLength = nextState.rowLength;
+      familyOffset = nextState.familyOffset;
+      familyLength = nextState.familyLength;
+      qualifierOffset = nextState.qualifierOffset;
+      qualifierLength = nextState.qualifierLength;
+      timestamp = nextState.timestamp;
+      typeByte = nextState.typeByte;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I wish i could remember - it might have been keeping a &quot;currentState&quot; struct and doing the above with &quot;currentState = nextState&quot; to avoid the 7 individual copies.  I only mention it because it was a noticeable improvement, like 20%.  I wouldn&apos;t hold up this patch for it, but something to think on.&lt;/p&gt;</comment>
                            <comment id="13963918" author="ram_krish" created="Wed, 9 Apr 2014 07:52:40 +0000"  >&lt;p&gt;Regarding Comparable&amp;lt;Cell&amp;gt;, I think it is not needed. I saw your patch and hence added it.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I only mention it because it was a noticeable improvement, like 20%. I wouldn&apos;t hold up this patch for it, but something to think on&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure. I would try that.  I am stuck with a place where when combining patches in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10801&quot; title=&quot;Ensure DBE interfaces can work with Cell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10801&quot;&gt;&lt;del&gt;HBASE-10801&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7319&quot; title=&quot;Extend Cell usage through read path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7319&quot;&gt;&lt;del&gt;HBASE-7319&lt;/del&gt;&lt;/a&gt; and making the BDE.getKeyValue() to return the seeker state directly (as a Cell), am finding issues when doing writer.append() while doing compaction.&lt;br/&gt;
So to find out the exact performance on this layer of the code am trying to do some tests.  Based on that will change this. For now I think the first patch would suffice.&lt;/p&gt;</comment>
                            <comment id="13964045" author="ram_krish" created="Wed, 9 Apr 2014 11:37:55 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt;&lt;br/&gt;
I found one issue when I tried to merge this patch with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7319&quot; title=&quot;Extend Cell usage through read path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7319&quot;&gt;&lt;del&gt;HBASE-7319&lt;/del&gt;&lt;/a&gt;.  I tried to return a shallow copy of the seeker state to the upper layers.&lt;br/&gt;
But things would break when &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Cell next() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    Cell retKey = cur;

    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      &lt;span class=&quot;code-comment&quot;&gt;// only seek &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we aren&apos;t at the end. cur == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; implies &apos;end&apos;.
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cur != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        hfs.next();
        cur = hfs.getKeyValue();
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (hasMVCCInfo)
          skipKVsNewerThanReadpoint();
      }
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(IOException e) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Could not iterate &quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;, e);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; retKey;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;in StorefileScanner.  Only if we do a deepClone we could get away with this. Because the reference of retKey is always pointing to the &apos;cur&apos; represented by &apos;SeekerState&apos;.&lt;br/&gt;
A shallow copy would also point to the same keyBuffer only. Am I missing something? &lt;/p&gt;</comment>
                            <comment id="13965073" author="mcorgan" created="Thu, 10 Apr 2014 07:03:11 +0000"  >&lt;p&gt;Hmm- I thought we had a CellScanner interface with methods advance() and current().  The idea there is to advance right before calling current(), whereas the code above looks like it&apos;s preemtively calling next().  I wonder if it really needs to advance to the next key before it&apos;s needed.  I&apos;m not sure...&lt;/p&gt;</comment>
                            <comment id="13965074" author="mcorgan" created="Thu, 10 Apr 2014 07:04:15 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt; the code above looks like it&apos;s preemtively calling next()&lt;/p&gt;&lt;/blockquote&gt;preemtively calling hfs.next().  i wonder if that could be delayed.&lt;/p&gt;</comment>
                            <comment id="13965094" author="ram_krish" created="Thu, 10 Apr 2014 07:39:45 +0000"  >&lt;p&gt;Updated patch addressing the comments.  Moved those primitive members to an inner class. Anyway to get the full benefit we need to see if the call to hfs.next() can be delayed as per Matt.&lt;/p&gt;</comment>
                            <comment id="13965195" author="hadoopqa" created="Thu, 10 Apr 2014 10:11:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12639546/HBASE-10801_2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12639546/HBASE-10801_2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12639546&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +      currentStateMembers.qualifierOffset = currentStateMembers.familyOffset + currentStateMembers.familyLength;&lt;br/&gt;
+          - (int) KeyValue.getKeyDataStructureSize(currentStateMembers.rowLength, currentStateMembers.familyLength, 0);&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestRegionFavoredNodes&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9244//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13965291" author="ram_krish" created="Thu, 10 Apr 2014 12:42:49 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mcorgan&quot; class=&quot;user-hover&quot; rel=&quot;mcorgan&quot;&gt;Matt Corgan&lt;/a&gt;&lt;br/&gt;
Could you take a look at this patch.  I am not sure if we can change the logic of how the hfs.next() is getting called. Generally the next KV is also fetched and the comparison is done to load the next store file if the key is already seeked key is already bigger.  Changing that would be a bigger task too.&lt;br/&gt;
So for now I have done a work around way where only the key is deepcloned whereas the value is not copied just referred to the actual underlying array.  (This is the power of Cell).  So in cases where the value part is bigger we don&apos;t do any copy of that and this would help in all the comparisons and the fetching of the exact KV and the copy happens at the last stage where we need KVs.  &lt;br/&gt;
Two things&lt;br/&gt;
Instead of deep copying of the value[] we create other objects and need to check how much is that a overhead.&lt;br/&gt;
Because our code still works with KV as an end result, the key copying would happen twice - once in the BDE and other when the KeyValueUtil.ensureKeyValue is called.&lt;/p&gt;</comment>
                            <comment id="13965402" author="hadoopqa" created="Thu, 10 Apr 2014 14:41:25 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12639565/HBASE-10801_3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12639565/HBASE-10801_3.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12639565&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9246//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13966193" author="mcorgan" created="Fri, 11 Apr 2014 03:50:29 +0000"  >&lt;p&gt;&lt;blockquote&gt;&lt;p&gt;I am not sure if we can change the logic of how the hfs.next() is getting called. Generally the next KV is also fetched and the comparison is done to load the next store file if the key is already seeked key is already bigger. Changing that would be a bigger task too.&lt;/p&gt;&lt;/blockquote&gt;More fun to be had =).  It&apos;s a similar problem to java&apos;s built-in Iterable interface requiring a hasNext() method which means you have to &quot;detect&quot; the next element before consuming the current one.  In a true streaming environment that can be inefficient like we&apos;re seeing here.  The point of the CellScanner interface was to remove hasNext() in favor of checking if(advance()==null), where you don&apos;t know about the next cell until there isn&apos;t one.&lt;/p&gt;

&lt;p&gt;After a quick look, it seems this strategy is ok but hopefully just temporary.  I&apos;m worried there&apos;s some added complexity in a core code path without explicit tests, but it seems like a good stepping stone.  I&apos;m not sure if it&apos;s better to do the whole bigger change at the same time.  I don&apos;t mean that to be a recommendation either way - just not sure.&lt;/p&gt;</comment>
                            <comment id="13966227" author="ram_krish" created="Fri, 11 Apr 2014 04:44:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m worried there&apos;s some added complexity in a core code path without explicit tests&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;TestEncodedSeekers actually tests this area.  May be will try adding more tests to this path mainly. To show how the clone and other things work.&lt;/p&gt;</comment>
                            <comment id="13966264" author="stack" created="Fri, 11 Apr 2014 05:56:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; You have a sec to take a lookee here?&lt;/p&gt;</comment>
                            <comment id="13966277" author="lhofhansl" created="Fri, 11 Apr 2014 06:17:18 +0000"  >&lt;p&gt;I would like to, can you give me until the weekend?&lt;/p&gt;</comment>
                            <comment id="13968593" author="ram_krish" created="Mon, 14 Apr 2014 18:05:25 +0000"  >&lt;p&gt;Ping!!&lt;/p&gt;</comment>
                            <comment id="13973831" author="ram_krish" created="Fri, 18 Apr 2014 06:43:16 +0000"  >&lt;p&gt;I tested this patch with a minor modification of not passing the SeekerState to the KeyOnlyClonedSeekerState to have only the primitive member variables.  (passing seekerstate was bit more costly).&lt;br/&gt;
Combining this with &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10929&quot; title=&quot;Change ScanQueryMatcher to use Cells instead of KeyValue.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10929&quot;&gt;&lt;del&gt;HBASE-10929&lt;/del&gt;&lt;/a&gt;  and added a filter FilterAllFilter, that filters out every row that gets returned to the client.  This ensures that the path of the scan there is no need for creating a KV object (which involves copying the value part also).  So purely the comparison happens as only Cells.  Note that in this patch the key part is copied in the shallowCopy().&lt;br/&gt;
Doing so with a full table scan with 1 thread over 2000000 rows resulted in this &lt;br/&gt;
With patch&lt;br/&gt;
========&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
hbase(main):002:0&amp;gt; scan &apos;TestTable&apos;,{FILTER=&amp;gt;org.apache.hadoop.hbase.filter.FilterAllFilter.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()}
ROW                                              COLUMN+CELL
0 row(s) in 9.6820 seconds

hbase(main):003:0&amp;gt; scan &apos;TestTable&apos;,{FILTER=&amp;gt;org.apache.hadoop.hbase.filter.FilterAllFilter.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()}
ROW                                              COLUMN+CELL
0 row(s) in 2.8490 seconds

hbase(main):004:0&amp;gt; scan &apos;TestTable&apos;,{FILTER=&amp;gt;org.apache.hadoop.hbase.filter.FilterAllFilter.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()}
ROW                                              COLUMN+CELL
0 row(s) in 2.7680 seconds

hbase(main):005:0&amp;gt; scan &apos;TestTable&apos;,{FILTER=&amp;gt;org.apache.hadoop.hbase.filter.FilterAllFilter.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()}
ROW                                              COLUMN+CELL
0 row(s) in 2.5470 seconds
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;without patch&lt;br/&gt;
=========&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
hbase(main):002:0&amp;gt; scan &apos;TestTable&apos;,{FILTER=&amp;gt;org.apache.hadoop.hbase.filter.FilterAllFilter.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()}
ROW                                              COLUMN+CELL
0 row(s) in 19.4020 seconds

hbase(main):003:0&amp;gt; scan &apos;TestTable&apos;,{FILTER=&amp;gt;org.apache.hadoop.hbase.filter.FilterAllFilter.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()}
ROW                                              COLUMN+CELL
0 row(s) in 6.1450 seconds

hbase(main):004:0&amp;gt; scan &apos;TestTable&apos;,{FILTER=&amp;gt;org.apache.hadoop.hbase.filter.FilterAllFilter.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()}
ROW                                              COLUMN+CELL
0 row(s) in 2.8520 seconds

hbase(main):005:0&amp;gt; scan &apos;TestTable&apos;,{FILTER=&amp;gt;org.apache.hadoop.hbase.filter.FilterAllFilter.&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt;()}
ROW                                              COLUMN+CELL
0 row(s) in 2.6900 seconds
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Used Performance Evaluation tool.  So the length of value bytes is 1000 per row.  So you could see when the experiment starts the scan almost takes 50% more time.  But once the cache is fully loaded the scans are not too costly and the values even out with a small deviation. Changing the value size may impact much more than this.&lt;br/&gt;
Can test with changing the value also and making it much more bigger.&lt;br/&gt;
This change in the performance during the first scanning remains consistent.&lt;/p&gt;</comment>
                            <comment id="13974217" author="ram_krish" created="Fri, 18 Apr 2014 16:28:45 +0000"  >&lt;p&gt;Patch that replaces SeekerStateMembers with primitive type.&lt;/p&gt;</comment>
                            <comment id="13974317" author="hadoopqa" created="Fri, 18 Apr 2014 18:12:30 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12640844/HBASE-10801_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12640844/HBASE-10801_4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12640844&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9335//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13974329" author="yuzhihong@gmail.com" created="Fri, 18 Apr 2014 18:20:55 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      &lt;span class=&quot;code-comment&quot;&gt;// TODO Auto-generated method stub
&lt;/span&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Remove the TODO&apos;s.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class KeyOnlyClonedSeekerState &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Cell {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;KeyOnlyClonedSeekerState can be private, right ?&lt;/p&gt;</comment>
                            <comment id="13975062" author="stack" created="Sun, 20 Apr 2014 05:29:34 +0000"  >&lt;p&gt;We use ByteBuffer instead of ByteRange?  Thats ok?&lt;/p&gt;

&lt;p&gt;What is going on here in extractOffsetsAndLengthsFromKey?  We have a byte buffer and we are doing the interpretation of this buffer as a KeyValue and saving the values into a SeekerStateMembers?  What happens when the encoding is not KeyValue?  Why SeekerStateMembers at all and not just create a KeyValue over this buffer (Then the interpreting code stays inside KeyValue and doesn&apos;t leak out here)?  Maybe that is not possible?&lt;/p&gt;

&lt;p&gt;Should these be throwing UnsupportedOperationException instead of a null when we do these?&lt;/p&gt;

&lt;p&gt;+      // TODO Auto-generated method stub&lt;br/&gt;
+      return null;&lt;/p&gt;

&lt;p&gt;So, this is that trick of yours where you just copy the key again?&lt;/p&gt;

&lt;p&gt;+  protected static class KeyOnlyClonedSeekerState implements Cell {&lt;/p&gt;

&lt;p&gt;It needs explaining in class comment.&lt;/p&gt;

&lt;p&gt;Why even take the value as arguments if we are not going to make use of it?&lt;/p&gt;

&lt;p&gt;+    private int valueOffset;&lt;br/&gt;
+    private int valueLength;&lt;/p&gt;

&lt;p&gt;And then we have special flags external to the Cell for if tags are compressed or not?&lt;/p&gt;

&lt;p&gt;+      if(tagCompressionContext != null) {&lt;/p&gt;

&lt;p&gt;(The external compressed tags flag comes from hfile?)&lt;/p&gt;

&lt;p&gt;Is SeekerStateMembers a good name?  Would SeekerStateCoordinates or SeekerStateLocation be a better name?&lt;/p&gt;

&lt;p&gt;How you interpret the perf numbers?  That this stuff doesn&apos;t make things worse &amp;#8211; that after warm up, we are doing maybe a bit better w/ the new code?&lt;/p&gt;

&lt;p&gt;Good on you Ram.&lt;/p&gt;





</comment>
                            <comment id="13975385" author="ram_krish" created="Mon, 21 Apr 2014 04:43:49 +0000"  >&lt;blockquote&gt;&lt;p&gt;We use ByteBuffer instead of ByteRange? Thats ok?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;ByteRange is also fine.  But till we finalise on the APIs in BR, I thought would work with BB only.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Should these be throwing UnsupportedOperationException instead of a null when we do these?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ok we can change it.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;What is going on here in extractOffsetsAndLengthsFromKey?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;First thing is, this goes exactly with the KV format because our current buffer is strictly KV based.  &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Why SeekerStateMembers at all and not just create a KeyValue over this buffer&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is not possible because the currentBuffer is currenlyl the buffer that has encoded KVs (the value part is actually not encoded). So we decode the key part and add it to a new buffer.  To use the concept of Cell, the value need not be copied.  Hence I try to copy the key part alone and return as a Cell itself. So here there are two different buffers so we cannot just wrap it as a KV.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Why even take the value as arguments if we are not going to make use of it?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It needs to be.  Because later while we do scan.next() we tend to save a reference of the previous cell and then do next.  So we have to clone the members of the key buffer.  Not doing so would end up changing the valuelength and valueoffset references.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;(The external compressed tags flag comes from hfile?)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes.  &lt;br/&gt;
Initial patch if you see was passing a SeekerState and referencing seekerState.seekerStateMembers.  But it was proving bit costly. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;It needs explaining in class comment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Okie.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Would SeekerStateCoordinates or SeekerStateLocation be a better name?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I could rename them. Was not able to get a convincing name.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;That this stuff doesn&apos;t make things worse &#8211; that after warm up, we are doing maybe a bit better w/ the new code?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I was able to confirm that we are not performing worse for sure after this.  I could check with more tests.  The whole impact is got only if we change the code to use Cell in the read path otherwise the call to KeyValueUtil.ensureKeyValue() would make things worse.&lt;/p&gt;
</comment>
                            <comment id="13975418" author="ram_krish" created="Mon, 21 Apr 2014 05:36:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;So we have to clone the members of the key buffer&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sorry, i meant SeekerState and its memebers.&lt;/p&gt;</comment>
                            <comment id="13976132" author="stack" created="Mon, 21 Apr 2014 22:34:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;ByteRange is also fine. But till we finalise on the APIs in BR, I thought would work with BB only.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good (I  noticed that ByteBuf, the netty thing, is subclassable with helper facility to aid subclassers.. that we could make our own if wanted... but that is another issue).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Ok we can change it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, fail fast, especially in the new stuff.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;First thing is, this goes exactly with the KV format because our current buffer is strictly KV based.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Does the KV parse  have to live outside of KV?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So here there are two different buffers so we cannot just wrap it as a KV.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If I did a deep copy of the KeyValue &amp;#8211; key-only part &amp;#8211; then I would not need to introduce this new type, the SeekerStateMembers?  Maybe I am not understanding what is going on here (pardon me).&lt;/p&gt;




</comment>
                            <comment id="13977033" author="ram_krish" created="Tue, 22 Apr 2014 16:43:40 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=saint.ack%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;saint.ack@gmail.com&quot;&gt;Stack&lt;/a&gt;&lt;br/&gt;
Please have a look at the latest patch.  After checking your comments I thought of using the KeyOnlyKeyValue in KeyValue so that the parsing of Key happens in the KeyValue. &lt;br/&gt;
There is no SeekerStateMembers now.  What do you think of this?&lt;/p&gt;</comment>
                            <comment id="13977172" author="hadoopqa" created="Tue, 22 Apr 2014 18:31:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12641273/HBASE-10801_5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12641273/HBASE-10801_5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12641273&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9362//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13977182" author="stack" created="Tue, 22 Apr 2014 18:41:34 +0000"  >&lt;p&gt;Hey man!  That seems a bit cleaner no?  I&apos;d be good with this.&lt;/p&gt;</comment>
                            <comment id="13978391" author="ram_krish" created="Wed, 23 Apr 2014 16:27:11 +0000"  >&lt;p&gt;This is what am planning to commit.  Done some rename extractOffsetAndLengthFromKey to createKeyOnlyKeyValue(). Will commit tomorrow unless objections.&lt;/p&gt;</comment>
                            <comment id="13978990" author="hadoopqa" created="Wed, 23 Apr 2014 22:07:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12641498/HBASE-10801_6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12641498/HBASE-10801_6.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12641498&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9378//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14005848" author="ram_krish" created="Thu, 22 May 2014 11:59:36 +0000"  >&lt;p&gt;Am able to get the above results consistently.  But not able to check that part of the code execution specifically.  Unless objections I will commit this patch later today or tomorrow.&lt;/p&gt;</comment>
                            <comment id="14006943" author="ram_krish" created="Fri, 23 May 2014 07:16:47 +0000"  >&lt;p&gt;Committed to trunk.  Thanks for the reviews.&lt;/p&gt;</comment>
                            <comment id="14007116" author="hudson" created="Fri, 23 May 2014 12:51:29 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #5138 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/5138/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/5138/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10801&quot; title=&quot;Ensure DBE interfaces can work with Cell&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10801&quot;&gt;&lt;del&gt;HBASE-10801&lt;/del&gt;&lt;/a&gt;-Ensure DBE interfaces can work with Cell (Ram) (ramkrishna: rev f36b42b9e9778e8a267e89c58b78eab7622af319)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14331146" author="enis" created="Sat, 21 Feb 2015 23:33:51 +0000"  >&lt;p&gt;Closing this issue after 0.99.0 release. &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12746903">HBASE-12210</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12708331">HBASE-10974</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12724166">HBASE-11425</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12638673" name="HBASE-10801.patch" size="8186" author="ram_krish" created="Fri, 4 Apr 2014 12:51:11 +0000"/>
                            <attachment id="12639174" name="HBASE-10801_1.patch" size="8820" author="ram_krish" created="Tue, 8 Apr 2014 11:46:01 +0000"/>
                            <attachment id="12639546" name="HBASE-10801_2.patch" size="9112" author="ram_krish" created="Thu, 10 Apr 2014 07:39:45 +0000"/>
                            <attachment id="12639565" name="HBASE-10801_3.patch" size="13527" author="ram_krish" created="Thu, 10 Apr 2014 12:42:49 +0000"/>
                            <attachment id="12640844" name="HBASE-10801_4.patch" size="13392" author="ram_krish" created="Fri, 18 Apr 2014 16:28:45 +0000"/>
                            <attachment id="12641273" name="HBASE-10801_5.patch" size="12893" author="ram_krish" created="Tue, 22 Apr 2014 16:43:40 +0000"/>
                            <attachment id="12641498" name="HBASE-10801_6.patch" size="13044" author="ram_krish" created="Wed, 23 Apr 2014 16:27:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Mar 2014 05:56:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>380896</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 42 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1tmk7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>381175</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>