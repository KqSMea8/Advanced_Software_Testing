<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:22:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-17177/HBASE-17177.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-17177] Compaction can break the region/row level atomic when scan even if we pass mvcc to client</title>
                <link>https://issues.apache.org/jira/browse/HBASE-17177</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We know that major compaction will actually delete the cells which are deleted by a delete marker. In order to give a consistent view for a scan, we need to use a map to track the read points for all scanners for a region, and the smallest one will be used for a compaction. For all delete markers whose mvcc is greater than this value, we will not use it to delete other cells.&lt;/p&gt;

&lt;p&gt;And the problem for a scan restart after region move is that, the new RS does not have the information of the scanners opened at the old RS before the client sends scan requests to the new RS which means the read points map is incomplete and the smallest read point maybe greater than the correct value. So if a major compaction happens at that time, it may delete some cells which should be kept.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13023512">HBASE-17177</key>
            <summary>Compaction can break the region/row level atomic when scan even if we pass mvcc to client</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="13022191">HBASE-17143</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="Apache9">Duo Zhang</reporter>
                        <labels>
                    </labels>
                <created>Sat, 26 Nov 2016 14:41:41 +0000</created>
                <updated>Sat, 3 Dec 2016 06:19:44 +0000</updated>
                                                            <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.4.0</fixVersion>
                                    <component>scan</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="15698034" author="apache9" created="Sat, 26 Nov 2016 14:43:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ram_krish&quot; class=&quot;user-hover&quot; rel=&quot;ram_krish&quot;&gt;ramkrishna.s.vasudevan&lt;/a&gt; Is the description clear enough?&lt;/p&gt;

&lt;p&gt;And for the solution, maybe we could disable major compaction for a small amount when the region is just online?  Maybe several minutes?&lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;</comment>
                            <comment id="15700974" author="ram_krish" created="Mon, 28 Nov 2016 05:31:17 +0000"  >&lt;p&gt;If a major compaction had already started and that time a region move happens then we can still delay the major compaction of the region that got newly moved? &lt;br/&gt;
May be we should complete the major compaction of other regions and then come back to this so that overall there is no delay in completing major compaction. &lt;/p&gt;</comment>
                            <comment id="15701061" author="apache9" created="Mon, 28 Nov 2016 06:17:02 +0000"  >&lt;p&gt;Sorry I do not get your point. I do not think a region can be moved if there is major compaction running for its storefiles?&lt;/p&gt;</comment>
                            <comment id="15701071" author="ram_krish" created="Mon, 28 Nov 2016 06:22:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;I do not think a region can be moved if there is major compaction running for its storefiles?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Then its fine. I know this is how it was long back but off late I am not aware of the changes to the assignments/region movements. So it is fine then.&lt;/p&gt;</comment>
                            <comment id="15713934" author="apache9" created="Fri, 2 Dec 2016 03:52:46 +0000"  >&lt;p&gt;Have been thinking this for days. I think we should have an option for scan called &apos;atomicity&apos; which has three values: &lt;tt&gt;None&lt;/tt&gt;, &lt;tt&gt;Row&lt;/tt&gt; and &lt;tt&gt;Region&lt;/tt&gt;. The default value wil be &lt;tt&gt;Row&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;And this will change the way of error handling at client side.&lt;/p&gt;

&lt;p&gt;For &lt;tt&gt;None&lt;/tt&gt;, in general we can recover from any exceptions by reopening a new region scanner, unless timeout.&lt;/p&gt;

&lt;p&gt;For &lt;tt&gt;Row&lt;/tt&gt;, if allowPartial is enabled and we failed at the middle of a row, then it is not always safe to reopen a new scanner. We need to do something at the server side. If we get open new scanner request that have a mvcc read point at RS side, then we need to check if the read point is larger than or equals to the current smallest read point, or we are in the &apos;no major compaction period&apos; introduced above, if not we need to tell client that the atomicity can not be guaranteed and you need to give up.&lt;/p&gt;

&lt;p&gt;For &lt;tt&gt;Region&lt;/tt&gt;, the above thing will also happen even if allowPartial is disabled as we need cross row atomicity.&lt;/p&gt;

&lt;p&gt;And I think the &lt;tt&gt;None&lt;/tt&gt; here is the same thing of &apos;stateless&apos; in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-15576&quot; title=&quot;Support stateless scanning and scanning cursor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-15576&quot;&gt;HBASE-15576&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15714094" author="stack" created="Fri, 2 Dec 2016 05:22:53 +0000"  >&lt;p&gt;A region opens after a move, and a major compaction could start. It would look for smallest read point. There might be none so it would think it could clean up all deletes.&lt;/p&gt;

&lt;p&gt;After, a restarted scan comes in with an mvcc that is older than current read point.&lt;/p&gt;

&lt;p&gt;Region does not keep record of the mvcc that the last or current ongoing major compaction used. If it did, we could fail the scan if its mvcc was older than that of the major compaction.&lt;/p&gt;

&lt;p&gt;Yeah, seems smart to delay major compaction until a good while after a region opens so restarted acanners have a chance of getting back in. Can we find a latch that is other than time based (Wait a few minutes)?&lt;/p&gt;

&lt;p&gt;Compactions get promoted from minor to major if it happens that the minor compaction includes all hfiles. We&apos;d have to undo this or not allow the upgrade.&lt;/p&gt;

&lt;p&gt;Not sure about NONE/ROW/REGION. Can we do REGION first, since mvcc is by region, and then if needed do ROW and NONE.&lt;/p&gt;

&lt;p&gt;This is an awkward problem. &lt;/p&gt;</comment>
                            <comment id="15714130" author="apache9" created="Fri, 2 Dec 2016 05:35:13 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Not sure about NONE/ROW/REGION. Can we do REGION first, since mvcc is by region, and then if needed do ROW and NONE.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;NONE/ROW/REGION is the lower bound, if there is no error then we will always have the REGION level atomicity. The problem only happens when there is an error and we need to reopen a scanner. We will try our best to keep the REGION level atomicity but as said above, we can not always succeed. And if the bad things happen, then we will use the &apos;atomicity&apos; option to determine if we can go on or throw an exception to user.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15714140" author="yangzhe1991" created="Fri, 2 Dec 2016 05:39:34 +0000"  >&lt;p&gt;I think at first we should know if we can return a consistent view to a reopened scanner, no matter the region is moved or not. So we should record the minReadPoint of last major compaction and when we open a region we should also know it. We can add a field to HFile&apos;s header and if it is generated by a major compaction this field is the minReadPoint that the compaction used. After this we will know when a scanner comes, we can return a consistent view or not.&lt;/p&gt;

&lt;p&gt;Now we have a TTL(hbase.client.scanner.timeout.period) for scanner in server. If there is no requests within TTL milliseconds, we can remove the scanner. So I think when we open a region, we can wait same time before we want to do a major compaction. Although the scanner may has been expired at former RS, it is safe and TTL is not a long time.&lt;/p&gt;</comment>
                            <comment id="15714147" author="ram_krish" created="Fri, 2 Dec 2016 05:42:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;If there is no requests within TTL milliseconds, we can remove the scanner. So I think when we open a region, we can wait same time before we want to do a major compaction. Although the scanner may has been expired at former RS, it is safe and TTL is not a long time.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think this is nice idea.&lt;/p&gt;</comment>
                            <comment id="15714238" author="apache9" created="Fri, 2 Dec 2016 06:28:51 +0000"  >&lt;p&gt;Oh I made a mistake... Even minor compaction could also reclaim the delete cells, the difference of major compaction is that it can reclaim the delete marker itself...&lt;/p&gt;

&lt;p&gt;So in general, we need to record a mvcc below which we may delete some cells and you may not read all the cells. And when a region is newly opened, we need to freeze this value for a small amount(maybe the scanner TTL as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yangzhe1991&quot; class=&quot;user-hover&quot; rel=&quot;yangzhe1991&quot;&gt;Phil Yang&lt;/a&gt; proposed above), either by disable compaction or set KeepDeleteCells to true when compaction.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15717522" author="stack" created="Sat, 3 Dec 2016 06:17:54 +0000"  >&lt;p&gt;We already note if a file is product of a major compaction. As you suggest, we could add readpoint to the hfile metadata.&lt;/p&gt;</comment>
                            <comment id="15717525" author="stack" created="Sat, 3 Dec 2016 06:19:44 +0000"  >&lt;p&gt;I like your idea that we do keep deleted cells if a compaction runs inside the scanner timeout after open (and a minor cannot graduate to major).&lt;/p&gt;

&lt;p&gt;How we make this cryptic behavior &apos;obvious&apos; to the operator?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Nov 2016 05:31:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 week, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36t1b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>