<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:37:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12859/HBASE-12859.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12859] New master API to track major compaction completion</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12859</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In various scenarios it is helpful to know a guaranteed timestamp up to which all data in a table was major compacted.&lt;br/&gt;
We can do that keeping a major compaction timestamp in META.&lt;br/&gt;
A client then can iterate all region of a table and find a definite timestamp, which is the oldest compaction timestamp of any of the regions.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=giacomotaylor&quot; class=&quot;user-hover&quot; rel=&quot;giacomotaylor&quot;&gt;James Taylor&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12767589">HBASE-12859</key>
            <summary>New master API to track major compaction completion</summary>
                <type id="13" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/genericissue.png">Brainstorming</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lhofhansl">Lars Hofhansl</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Jan 2015 00:04:08 +0000</created>
                <updated>Wed, 3 Jun 2015 15:29:43 +0000</updated>
                            <resolved>Thu, 29 Jan 2015 21:57:43 +0000</resolved>
                                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.1.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>16</watches>
                                                                                                            <comments>
                            <comment id="14277957" author="lhofhansl" created="Thu, 15 Jan 2015 00:13:38 +0000"  >&lt;p&gt;We can use that for:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Implement predicate based deletes, where this would solve the problem of knowing when we can let go of the predicate (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=larsgeorge&quot; class=&quot;user-hover&quot; rel=&quot;larsgeorge&quot;&gt;Lars George&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;For transactions where we need to keep track rolled back transactions, and know where we can let go of old transaction ids (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;And probably a bunch of other things.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Determining the last compaction time would involve a scan of META, but that should be OK.&lt;/p&gt;</comment>
                            <comment id="14278195" author="ghelmling" created="Thu, 15 Jan 2015 03:28:28 +0000"  >&lt;p&gt;Thanks for filing this, Lars.&lt;/p&gt;

&lt;p&gt;Yes, this would be very useful for knowing when we can clean up invalidated transactions.&lt;/p&gt;</comment>
                            <comment id="14278329" author="lhofhansl" created="Thu, 15 Jan 2015 06:32:42 +0000"  >&lt;p&gt;So the wrinkle is that compaction are per store (column family) and we do not have any place to put per store compaction timestamps. META does not track stores but regions.&lt;/p&gt;

&lt;p&gt;The good news is that there is another way: We can simply take the age of the oldest HFile of each store of each region of a table. That oldest timestamp is the age at which we safely make the above decisions. So all the data is already in place, we simply need to expose a way to get to it.&lt;br/&gt;
The bad news: We&apos;ll have to get the fileStatus of each and every file, each is a NN operation. We&apos;re doing that before major compactions to check whether it is time to do a major compaction again, so maybe it&apos;s OK.&lt;/p&gt;</comment>
                            <comment id="14279174" author="lhofhansl" created="Thu, 15 Jan 2015 19:32:10 +0000"  >&lt;p&gt;Just discussing with &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;... We can put this in the HFileContext upon file creation, then use that to write into the HFile trailer. Lastly we can report that via RegionLoad to the master and then query this relatively cheaply through ClusterStatus.&lt;/p&gt;</comment>
                            <comment id="14279416" author="lhofhansl" created="Thu, 15 Jan 2015 22:35:43 +0000"  >&lt;p&gt;Unfinished, untestest, uncompiled patch, just need to park it here for later.&lt;/p&gt;</comment>
                            <comment id="14279888" author="lhofhansl" created="Fri, 16 Jan 2015 06:52:03 +0000"  >&lt;p&gt;Here&apos;s a patch that works. Reports the oldestHFileTs for each region through ClusterStatus. Also exposed a public method in HRegion that can retrieve the TS of its oldest hfile (for use by coprocessors until we streamline what we expose of HRegion).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt;, would be cool if you could have a look to see whether this is useful, or whether we&apos;d need to provide some other API to get these TSs.&lt;/p&gt;</comment>
                            <comment id="14279893" author="lhofhansl" created="Fri, 16 Jan 2015 06:55:43 +0000"  >&lt;p&gt;And &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=giacomotaylor&quot; class=&quot;user-hover&quot; rel=&quot;giacomotaylor&quot;&gt;James Taylor&lt;/a&gt;, is this all we need for predicate based deletes? It seem it might be a bit cumbersome to get the oldest timestamp for a table (i.e. the guaranteed last time that a major compaction ran). Any other ideas for an API, where should we hook this in (i.e. what would you want to call)?&lt;/p&gt;</comment>
                            <comment id="14281138" author="lhofhansl" created="Sat, 17 Jan 2015 02:03:11 +0000"  >&lt;p&gt;Added a little helper to the oldest hfile time for a table from the ClusterStatus.&lt;br/&gt;
It&apos;s a bit awkward, but we really do not have any other place to put such information.&lt;/p&gt;</comment>
                            <comment id="14281228" author="lhofhansl" created="Sat, 17 Jan 2015 06:04:56 +0000"  >&lt;p&gt;The other option is to do what HBaseAdmin.getCompactionState() does. In that case we&apos;d fold the last compaction TS into the regionInfo PB message. That requires the admin to contact every involved region server, but we&apos;re already doing that for various other tasks. It&apos;s easy to have both (cluster status and region info) so maybe that&apos;d be best for flexibility.&lt;/p&gt;</comment>
                            <comment id="14281677" author="lhofhansl" created="Sun, 18 Jan 2015 06:16:46 +0000"  >&lt;p&gt;v3 also implements what&apos;s described in the previous comment.&lt;br/&gt;
Please comment on the usefulness of the API, I&apos;ll not continue any further until somebody confirms it&apos;s useful to them.&lt;/p&gt;</comment>
                            <comment id="14281892" author="ghelmling" created="Sun, 18 Jan 2015 18:26:02 +0000"  >&lt;p&gt;Thanks for the work on this, Lars.  I will check it out tomorrow.&lt;/p&gt;</comment>
                            <comment id="14282814" author="apurtell" created="Mon, 19 Jan 2015 18:24:46 +0000"  >&lt;p&gt;I&apos;ll defer to Gary as to which option is more useful but will note the following tradeoff:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;ClusterStatus
	&lt;ul&gt;
		&lt;li&gt;Pro: Only one RPC&lt;/li&gt;
		&lt;li&gt;Con: Because this is full cluster state that RPC response can be &lt;b&gt;fat&lt;/b&gt;, multiple megabytes of response for a cluster of 100+ servers&lt;/li&gt;
		&lt;li&gt;Con: Information is updated on the master upon RS heartbeat so may be slightly out of date&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;GetRegionInfo:
	&lt;ul&gt;
		&lt;li&gt;Pro: Up to date information from each RS&lt;/li&gt;
		&lt;li&gt;Pro: Each RPC will have a small response&lt;/li&gt;
		&lt;li&gt;Con: Must contact each RS. What happens when a region has relocated due to balancing or RS failure? The current patch doesn&apos;t handle region relocation, it just throws up exceptions to the caller, I suppose expecting the caller to retry until successful. Lots of unnecessary work if we have 100 RS and queries to only 1 failed, or 1000 and calls to 5 failed, etc. Assuming table regions equally distributed.&lt;/li&gt;
		&lt;li&gt;Con: Must contact each RS, 100 RPCs for a cluster of 100 RSes alone is a concern, what about a cluster of 1000 RSes? Assuming table regions equally distributed.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m not happy with either alternative. What about we start adding master APIs for getting just the specific information from ClusterStatus we desire, without asking for all of the ClusterStatus data? &lt;/p&gt;</comment>
                            <comment id="14283132" author="lhofhansl" created="Mon, 19 Jan 2015 22:52:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m not happy with either alternative.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Me neither.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Con: Must contact each RS.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep. Can you believe that we&apos;re already doing that to get the compaction status &lt;b&gt;every&lt;/b&gt; time we show the table view in the UI?&lt;/p&gt;

&lt;p&gt;So what about keeping just the HBaseAdmin API? Then we can vary the actual implementation, and for now maybe keep the GetRegionInfo part since we&apos;re already using the approach elsewhere. It also can&apos;t hurt to have this in ClusterStatus.&lt;/p&gt;
</comment>
                            <comment id="14283232" author="apurtell" created="Tue, 20 Jan 2015 00:38:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;So what about keeping just the HBaseAdmin API? Then we can vary the actual implementation, and for now maybe keep the GetRegionInfo part since we&apos;re already using the approach elsewhere. It also can&apos;t hurt to have this in ClusterStatus.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok...&lt;/p&gt;</comment>
                            <comment id="14290795" author="jamestaylor" created="Sat, 24 Jan 2015 19:47:43 +0000"  >&lt;p&gt;Any API is fine by me, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;. I think I&apos;d call it from a RegionObserver coprocessor - maybe the post compaction one. See my comment on &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1590&quot; title=&quot;Add an Asynchronous/Deferred Delete Option&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1590&quot;&gt;PHOENIX-1590&lt;/a&gt; for more context.&lt;/p&gt;</comment>
                            <comment id="14290904" author="lhofhansl" created="Sun, 25 Jan 2015 00:26:10 +0000"  >&lt;p&gt;Note that if you call this from a region observer you do want to reach out to other region servers (that is a recipe for cluster wide deadlocks when not enough handler are free).&lt;br/&gt;
So you&apos;ll only be able to find out the last compaction time for the observer&apos;s region, and hence you still won&apos;t know whether you&apos;re done with the table in question.&lt;/p&gt;

&lt;p&gt;There are two options:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;store metadata about work to do per region, and then remove it as each region is major compacted&lt;/li&gt;
	&lt;li&gt;store metadata about work to do per table, then you need to be able to track whether all regions of the table have been major compacted&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;For #1 one have to keep track of splits and split the &quot;work to do&quot; as well. #2 needs a global view across region servers.&lt;/p&gt;

&lt;p&gt;The implementation here does not prescribe what to do&lt;br/&gt;
Hence in &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1590&quot; title=&quot;Add an Asynchronous/Deferred Delete Option&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1590&quot;&gt;PHOENIX-1590&lt;/a&gt; we could the following when dropping a view with deferred delete:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;enumerate all regions. But a work item for each region in some table. During compaction check that table, and after compaction remove any entries for regions that a completely done.&lt;/li&gt;
	&lt;li&gt;just remember the metadata for the view with some &quot;deferred delete&quot; marker added. During compaction check that. Then one would with each region server when the same view is created again (to check whether it&apos;s OK or not) and also periodically from a client with a global view (that does not need to happen often, as it just cleans up  soft-delete rows.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14290916" author="jamestaylor" created="Sun, 25 Jan 2015 00:48:13 +0000"  >&lt;p&gt;Is there such a thing as per region metadata? If not, that would be a useful feature. On a split, it could duplicate the metadata and on a merge combine it. For any region re-assignment, the metadata would follow.&lt;/p&gt;

&lt;p&gt;For &lt;a href=&quot;https://issues.apache.org/jira/browse/PHOENIX-1590&quot; title=&quot;Add an Asynchronous/Deferred Delete Option&quot; class=&quot;issue-link&quot; data-issue-key=&quot;PHOENIX-1590&quot;&gt;PHOENIX-1590&lt;/a&gt;, in the preCompact region observer, we&apos;d need to query the SYSTEM.CATALOG to get the information to build the filter, so we&apos;d potentially be going to another region server. For secondary indexing, we solved the potential for deadlock issue by using a high priority queue for index updates. Maybe the same could be done here?&lt;/p&gt;</comment>
                            <comment id="14290922" author="apurtell" created="Sun, 25 Jan 2015 00:54:54 +0000"  >&lt;p&gt;We used to track region state in the meta table, updated inline with actions like splitting. It was for the Region Historian feature and was a source of deadlocks and downtime whenever there was a network issue or inopportune region relocation or node failure. We ripped it out a long time ago.&lt;/p&gt;

&lt;p&gt;If this API is going to be called from a region observer I think this prescribes a master API so there is only one RPC to one location necessary to retrieve the information needed, quickly. We have various options for how the master might collect and provide the information. &lt;/p&gt;</comment>
                            <comment id="14290926" author="lhofhansl" created="Sun, 25 Jan 2015 01:06:04 +0000"  >&lt;p&gt;I agree. It&apos;s fine to make master call after a compaction. (i.e. after we wrote at least a memstore worth of data one RPC to the master won&apos;t cause an issue).&lt;br/&gt;
So for that it&apos;s indeed best to add a new master API (as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; has said all along), since we want to avoid (a) bringing all the cluster state over just get compaction stats for a single region or table and (b) the need to contact each an every region server (especially when we do this from another region server).&lt;/p&gt;</comment>
                            <comment id="14291002" author="lhofhansl" created="Sun, 25 Jan 2015 06:40:54 +0000"  >&lt;p&gt;New patch. Add new master RPC.&lt;/p&gt;

&lt;p&gt;And sorry I have to say the following:&lt;br/&gt;
&amp;lt;rant&amp;gt;&lt;br/&gt;
You &lt;b&gt;have&lt;/b&gt; to be kidding on this protobuf crap.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;ProtobufUtil?&lt;/li&gt;
	&lt;li&gt;RequestConverted?&lt;/li&gt;
	&lt;li&gt;ResponseConverter?&lt;/li&gt;
	&lt;li&gt;buildRegionSpecifier()?&lt;/li&gt;
	&lt;li&gt;MasterServices, MasterRpcServices, MasterServices.BlockingInterface??!!!&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think even if tried &lt;b&gt;really&lt;/b&gt; hard I could not make this more complicated and obtuse.&lt;br/&gt;
W.......T.......F....... have we done? It takes 10 mins to make the change and then 2h to work through the protobuf rabbithole. MEH.&lt;br/&gt;
&amp;lt;/rant&amp;gt;&lt;/p&gt;</comment>
                            <comment id="14291178" author="stack" created="Sun, 25 Jan 2015 17:09:50 +0000"  >&lt;p&gt;What happens when master is down?  Can it be ignored?  It should be.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;W.......T.......F....... have we done? It takes 10 mins to make the change and then 2h to work through the protobuf rabbithole. MEH.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The pb convertion was done by multiple people at various times.&lt;/p&gt;

&lt;p&gt;ProtobufUtil + RequestConverter + ResponseConverter have overlap.  Should just have a pure pbutil and bulk of pbutil should be moved to RequestConverter and ResponseConverter or the latter two should just be removed.&lt;/p&gt;

&lt;p&gt;MasterServices has nought to do w/ pb. It is backfill of a Master Interface.  MasterRpcServices ditto. It is an after-the-fact attempt at slimming down Master moving out initial rpc handling to a dedicated class.&lt;/p&gt;

&lt;p&gt;MasterServices.BlockingInterface is from pb. Thats how the rpc Interface stubs are one.&lt;/p&gt;

&lt;p&gt;Sorry its a pain. Could do w/ cleanup yep.&lt;/p&gt;</comment>
                            <comment id="14291450" author="lhofhansl" created="Mon, 26 Jan 2015 04:30:46 +0000"  >&lt;p&gt;No pain no gain &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Cleanup or at least make it simpler to add stuff, definitely. Different jira... It was just really frustrating to have to change all these things so they match up, sorry I was really annoyed yesterday.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What happens when master is down? Can it be ignored? It should be.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Should be all good, this patch adds add no new paradigm. ClusterStatus is maintained by the master as before, the calls from HBaseAdmin to the master are like the &lt;tt&gt;getClusterStatus()&lt;/tt&gt; call; if master is down the calls with fail.&lt;/p&gt;

&lt;p&gt;I think this fulfills all the requirements now:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Master API to retrieve the last major compaction time.&lt;/li&gt;
	&lt;li&gt;If one already has a ClusterStatus object one can derive it from there.&lt;/li&gt;
	&lt;li&gt;HBaseAdmin convenience interface to get that information easily.&lt;/li&gt;
	&lt;li&gt;Test that verifies the basic behavior and exercises all the new APIs.&lt;/li&gt;
	&lt;li&gt;Piggy-backed on ClusterStatus, so no extra work or excessive roundtrips to servers.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Good to commit? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ghelmling&quot; class=&quot;user-hover&quot; rel=&quot;ghelmling&quot;&gt;Gary Helmling&lt;/a&gt;.&lt;br/&gt;
I&apos;d like to backport this all the way to 0.98.&lt;/p&gt;</comment>
                            <comment id="14291532" author="lhofhansl" created="Mon, 26 Jan 2015 07:29:37 +0000"  >&lt;p&gt;Now that I said that it occurs to me that this is quite doing what it advertises:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;before the major compaction compaction on any table or region happened, there can old HFiles not resulting from a major compaction&lt;/li&gt;
	&lt;li&gt;it it possible to minor compactions compact away the formerly oldest files, moving the oldest time forward, even when no major compaction happened&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;#1 is a problem for new tables or new regions (f.e. after a split).&lt;br/&gt;
We discussed #2 here and said that compaction would not touch the older, larger files unless all files are compacted - and that in turn would promote the minor compaction to a major one.&lt;/p&gt;

&lt;p&gt;Could track only hfiles that resulted from major compactions (that metadata is already in the HFiles). If no such HFile is left we have no info and return 0. I&apos;ll prepare an updated patch tomorrow.&lt;/p&gt;

&lt;p&gt;Precisely because this is hard to figure out should we add a mechanism for that to HBase.&lt;/p&gt;</comment>
                            <comment id="14292976" author="lhofhansl" created="Tue, 27 Jan 2015 05:04:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt; explained a bit more of the history of the protobuf implementation to me. I apologize for the rant, although the issue remains.&lt;/p&gt;

&lt;p&gt;Lemme finish up this issue now. So we have a building to build snapshot-isolation based exception as well as predicate based deletion. New patch coming soon.&lt;/p&gt;</comment>
                            <comment id="14293000" author="stack" created="Tue, 27 Jan 2015 05:37:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;I apologize for the rant...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If noone complains, it&apos;ll stay the way it is for ever.  Please rant &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14293005" author="lhofhansl" created="Tue, 27 Jan 2015 05:42:41 +0000"  >&lt;p&gt;v5 does the right thing now (as evidenced also by the updated test). Only tracks files that resulted from the major compaction now.&lt;/p&gt;</comment>
                            <comment id="14293799" author="apurtell" created="Tue, 27 Jan 2015 16:41:17 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I apologize for the rant...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If noone complains, it&apos;ll stay the way it is for ever. Please rant Lars Hofhansl&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we should have a &quot;singularity v2&quot; for HBase 2.0 and rip out all of the protobuf stuff and instead use properly versioned writables with up front connection negotiation &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; - I&apos;d be happy to rant on that. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; A contentious topic for some other time. &lt;/p&gt;</comment>
                            <comment id="14293806" author="apurtell" created="Tue, 27 Jan 2015 16:47:31 +0000"  >&lt;p&gt;v5 lgtm&lt;/p&gt;

&lt;p&gt;In 0.98, Admin is HBaseAdmin, and is a class not an interface. It would be ok from a compatibility standpoint to add the two new methods to it. Unfortunately HConnection is an interface marked Public Stable, to this cannot be changed. It would be fine to add the new methods to the HConnection implementation in HConnectionManager and call them with the necessary casting. &lt;/p&gt;</comment>
                            <comment id="14293937" author="lhofhansl" created="Tue, 27 Jan 2015 18:36:54 +0000"  >&lt;p&gt;You&apos;re worried about binary compatibility? Someone who implemented HConnection directly? Both?&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;, what&apos;s your take on 1.0.x and 1.1.x? Per our new contract we can break binary compatibility in a minor release (i.e. 1.1).&lt;/p&gt;

&lt;p&gt;Would this break binary compatibility even? We&apos;d add two new methods to the interface and the (only) implementation class. Would code compiled against the old version break when executed against a jar of the new version?&lt;/p&gt;

&lt;p&gt;In any case, lemme get this into trunk first (and probably 1.1), and then discuss more on 0.98 and 1.0.&lt;/p&gt;</comment>
                            <comment id="14293969" author="apurtell" created="Tue, 27 Jan 2015 18:57:55 +0000"  >&lt;p&gt;It&apos;s more of a policy question. The HConnection interface is marked Public/Stable. For the client pushback backport I added a &quot;StatisticsHConnection&quot; that extends HConnection and changed the implementation in HConnectionManager to implement StatisticsHConnection for this reason. On the off chance someone does do something with HConnection, they won&apos;t be affected. For your changes I don&apos;t see a concern, don&apos;t add the methods to the interface, just add them to the implementation, and cast. This does have implications, just like the other change, if someone wants to provide an alternate HConnection back to HBase, but it maintains the policy implied by the interface annotation...&lt;/p&gt;</comment>
                            <comment id="14294013" author="enis" created="Tue, 27 Jan 2015 19:21:17 +0000"  >&lt;p&gt;We do not differentiate or explicitly document this, but my understanding of most of our InterfaceAudience.Public is for consumption, not for extending or implementing interfaces (except for some coprocessor cases). So I think we should be free to add new methods in Admin, Connection, etc in minor versions. I would say that in patch versions we should not do such changes. &lt;/p&gt;

&lt;p&gt;Maybe we can do a base classes as a convenience, but still with no guarantees. &lt;/p&gt;</comment>
                            <comment id="14294022" author="apurtell" created="Tue, 27 Jan 2015 19:25:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;We do not differentiate or explicitly document this, but my understanding of most of our InterfaceAudience.Public is for consumption, not for extending or implementing interfaces (except for some coprocessor cases). So I think we should be free to add new methods in Admin, Connection, etc in minor versions. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Shrug. So the Public/Stable annotation just means &quot;keep this interface around, don&apos;t worry about changes that will break an implementor?&quot; . Then what would Public/Evolving (or Unstable) mean as difference? Do we have what the annotations mean documented somewhere? This point didn&apos;t come up in a review when I backported client pushback, so now we have StatisticsHConnection. If it&apos;s ok to add methods to HConnection I would like to sink the 0.98.10 RC that has this change and fix it with a new patch/issue. &lt;/p&gt;</comment>
                            <comment id="14294041" author="apurtell" created="Tue, 27 Jan 2015 19:35:41 +0000"  >&lt;p&gt;I moved the interface annotations discussion to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12932&quot; title=&quot;[0.98] Change the interface annotation of HConnection from Public/Stable to Public/Evolving&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12932&quot;&gt;&lt;del&gt;HBASE-12932&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;</comment>
                            <comment id="14294045" author="lhofhansl" created="Tue, 27 Jan 2015 19:38:17 +0000"  >&lt;p&gt;Good question what &quot;stable&quot; means. We could define it to mean &quot;we won&apos;t remove of break existing stuff from/in it&quot;.&lt;/p&gt;

&lt;p&gt;In any case we know we can safely do this:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;get this into master&lt;/li&gt;
	&lt;li&gt;get this in 1.1&lt;/li&gt;
	&lt;li&gt;in 1.0 we only change the base classes and not the interfaces (need to check how easy that is to do with the new admin interface, since the interfaces are intertwined with PB a bit)&lt;/li&gt;
	&lt;li&gt;ditto for 0.98.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;We can also choose to simply not do #3 and #4 for now.&lt;/p&gt;

&lt;p&gt;+1 on master and 1.1?&lt;/p&gt;</comment>
                            <comment id="14294050" author="apurtell" created="Tue, 27 Jan 2015 19:40:44 +0000"  >&lt;p&gt;We don&apos;t actually have a 1.0 release yet so could still make this change there.&lt;/p&gt;

&lt;p&gt;I see no problem with you making HConnection changes in 0.98 should &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12932&quot; title=&quot;[0.98] Change the interface annotation of HConnection from Public/Stable to Public/Evolving&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12932&quot;&gt;&lt;del&gt;HBASE-12932&lt;/del&gt;&lt;/a&gt; be acceptable. &lt;/p&gt;</comment>
                            <comment id="14294278" author="apurtell" created="Tue, 27 Jan 2015 22:04:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12932&quot; title=&quot;[0.98] Change the interface annotation of HConnection from Public/Stable to Public/Evolving&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12932&quot;&gt;&lt;del&gt;HBASE-12932&lt;/del&gt;&lt;/a&gt; is in, no problem adding methods to HConnection. Want to get this in before the next 0.98.10 RC? Commit before 5pm-ish. &lt;/p&gt;</comment>
                            <comment id="14294303" author="ghelmling" created="Tue, 27 Jan 2015 22:19:31 +0000"  >&lt;p&gt;+1 on v5 patch.  As we discussed, I think this should work for the Tephra case, subject to some Tephra changes on compaction handling &amp;#8211; we&apos;d need to fail the compaction if we do not have an up-to-date copy of the transaction state in order to purge data from invalid transactions.  Then we should be able to clear invalid transaction older than: oldest compaction timestamp for all transactional tables - transaction state loading delay - transaction timeout.&lt;/p&gt;</comment>
                            <comment id="14294305" author="ghelmling" created="Tue, 27 Jan 2015 22:20:30 +0000"  >&lt;p&gt;Thanks for the work on this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lhofhansl&quot; class=&quot;user-hover&quot; rel=&quot;lhofhansl&quot;&gt;Lars Hofhansl&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14294419" author="lhofhansl" created="Tue, 27 Jan 2015 23:40:57 +0000"  >&lt;p&gt;Thanks guys. This should be a good tactical building block to build stuff on top of HBase, I&apos;m sure there are more of these coming down the pipe soon.&lt;/p&gt;

&lt;p&gt;Lemme see how straightforward the backport is. No problem from my side to have it in 0.98.11.&lt;br/&gt;
I&apos;ll get a precommit run in first anyway.&lt;/p&gt;</comment>
                            <comment id="14294568" author="hadoopqa" created="Wed, 28 Jan 2015 01:41:48 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12694718/12859-v5.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12694718/12859-v5.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 0f6faaf5fc60b7fb3ffe1a77cdd21430efddcc11.&lt;br/&gt;
  ATTACHMENT ID: 12694718&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 2 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1943 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +                .setRegion(RequestConverter.buildRegionSpecifier(RegionSpecifierType.REGION_NAME, regionName)).build();&lt;br/&gt;
+              new java.lang.String[] &lt;/p&gt;
{ &quot;RegionSpecifier&quot;, &quot;Stores&quot;, &quot;Storefiles&quot;, &quot;StoreUncompressedSizeMB&quot;, &quot;StorefileSizeMB&quot;, &quot;MemstoreSizeMB&quot;, &quot;StorefileIndexSizeMB&quot;, &quot;ReadRequestsCount&quot;, &quot;WriteRequestsCount&quot;, &quot;TotalCompactingKVs&quot;, &quot;CurrentCompactedKVs&quot;, &quot;RootIndexSizeKB&quot;, &quot;TotalStaticIndexSizeKB&quot;, &quot;TotalStaticBloomSizeKB&quot;, &quot;CompleteSequenceId&quot;, &quot;DataLocality&quot;, &quot;LastMajorCompactionTs&quot;, }
&lt;p&gt;);&lt;br/&gt;
+       * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestamp(.MajorCompactionTimestampRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+       * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestampForRegion(.MajorCompactionTimestampForRegionRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestamp(.MajorCompactionTimestampRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestampForRegion(.MajorCompactionTimestampForRegionRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+  rpc getLastMajorCompactionTimestamp(MajorCompactionTimestampRequest) returns(MajorCompactionTimestampResponse);&lt;br/&gt;
+  rpc getLastMajorCompactionTimestampForRegion(MajorCompactionTimestampForRegionRequest) returns(MajorCompactionTimestampResponse);&lt;br/&gt;
+    fileInfo.append(FileInfo.CREATE_TIME_TS, Bytes.toBytes(hFileContext.getFileCreateTime()), false);&lt;br/&gt;
+    MajorCompactionTimestampResponse.Builder response = MajorCompactionTimestampResponse.newBuilder();&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.TestHFileBlock&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12610//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14294606" author="lhofhansl" created="Wed, 28 Jan 2015 02:25:42 +0000"  >&lt;p&gt;Hmm... HFileBlock heapsize changed. Might be related. Checking.&lt;/p&gt;</comment>
                            <comment id="14294709" author="lhofhansl" created="Wed, 28 Jan 2015 04:41:20 +0000"  >&lt;p&gt;v6 fixes test failures and long line (in non-generated code).&lt;br/&gt;
One thing to note, each HFileBlock will now consume an extra 8 bytes on the heap, for a timestamp that it does not need (HFileContext is used for readers, writers, and block).&lt;br/&gt;
Not a problem, I think, but something to be aware of.&lt;/p&gt;</comment>
                            <comment id="14294787" author="enis" created="Wed, 28 Jan 2015 06:45:37 +0000"  >&lt;p&gt;Removing 1.0 line for now since the RC is out now. If it sinks, we can bring this in. &lt;/p&gt;</comment>
                            <comment id="14294794" author="hadoopqa" created="Wed, 28 Jan 2015 06:53:11 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12694919/12859-v6.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12694919/12859-v6.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 6b20a0f831b195c6f136a3decee61f1d80ebde29.&lt;br/&gt;
  ATTACHMENT ID: 12694919&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1937 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +              new java.lang.String[] &lt;/p&gt;
{ &quot;RegionSpecifier&quot;, &quot;Stores&quot;, &quot;Storefiles&quot;, &quot;StoreUncompressedSizeMB&quot;, &quot;StorefileSizeMB&quot;, &quot;MemstoreSizeMB&quot;, &quot;StorefileIndexSizeMB&quot;, &quot;ReadRequestsCount&quot;, &quot;WriteRequestsCount&quot;, &quot;TotalCompactingKVs&quot;, &quot;CurrentCompactedKVs&quot;, &quot;RootIndexSizeKB&quot;, &quot;TotalStaticIndexSizeKB&quot;, &quot;TotalStaticBloomSizeKB&quot;, &quot;CompleteSequenceId&quot;, &quot;DataLocality&quot;, &quot;LastMajorCompactionTs&quot;, }
&lt;p&gt;);&lt;br/&gt;
+       * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestamp(.MajorCompactionTimestampRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+       * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestampForRegion(.MajorCompactionTimestampForRegionRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestamp(.MajorCompactionTimestampRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestampForRegion(.MajorCompactionTimestampForRegionRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12614//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14294802" author="stack" created="Wed, 28 Jan 2015 07:03:51 +0000"  >&lt;p&gt;nit: getLastMajorCompactionTsForTable should have a comment explaining it can return zero and what that means.&lt;/p&gt;

&lt;p&gt;I don&apos;t get this bit (or in other words, please explain it to me):&lt;/p&gt;

&lt;p&gt;+   * Get the timestamp of the last major compaction for the passed table&lt;br/&gt;
+   * (the timestamp of the oldest HFile of that table)&lt;/p&gt;

&lt;p&gt;How is ts of oldest HFile the last major compaction time?&lt;/p&gt;

&lt;p&gt;This attribute of crate time will only be available in certain hfile versions?&lt;/p&gt;

&lt;p&gt;I&apos;d think the fileinfo already loaded so this is a noop?&lt;/p&gt;

&lt;p&gt;+          byte[] val = reader.loadFileInfo().get(StoreFile.MAJOR_COMPACTION_KEY);&lt;/p&gt;

&lt;p&gt;Patch is great. Nice.&lt;/p&gt;</comment>
                            <comment id="14296211" author="lhofhansl" created="Thu, 29 Jan 2015 01:25:45 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;nit: getLastMajorCompactionTsForTable should have a comment explaining it can return zero and what that means.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, I need to add that. Thanks for the reminder!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t get this bit (or in other words, please explain it to me):&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;How is ts of oldest HFile the last major compaction time?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I need to change the wording in the comment.&lt;br/&gt;
What we&apos;re finding is the creation time of the oldest HFile that resulted from a major compaction. That creation time will the a time before which we are guaranteed that all data was major compacted. If we do not find an HFile resulting from a major compaction we have no information and return 0 (i.e. the beginning of time, maybe I should return HConstants.OLDEST_TIMESTAMP instead)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This attribute of crate time will only be available in certain hfile versions?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Not completely sure what you mean. It just in the FileInfo. So if written we have the data, if not we have no information.&lt;br/&gt;
Lemme look through the code to make sure it deals fine with that data not being available.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;d think the fileinfo already loaded so this is a noop?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s the only way to get a reference to the fileInfo, if already loaded it&apos;ll used the cached version.&lt;/p&gt;

&lt;p&gt;I&apos;ll make a new patch soon - will also look at the new findbugs warning.&lt;/p&gt;</comment>
                            <comment id="14296266" author="lhofhansl" created="Thu, 29 Jan 2015 02:09:28 +0000"  >&lt;p&gt;Patch updated based on Stack&apos;s comments.&lt;br/&gt;
(I cannot for the heck of me find what the new findbug warning is)&lt;/p&gt;</comment>
                            <comment id="14296350" author="hadoopqa" created="Thu, 29 Jan 2015 04:11:50 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12695164/12859-v7.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12695164/12859-v7.txt&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 6b20a0f831b195c6f136a3decee61f1d80ebde29.&lt;br/&gt;
  ATTACHMENT ID: 12695164&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1937 checkstyle errors (more than the master&apos;s current 1936 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces the following lines longer than 100:&lt;br/&gt;
    +              new java.lang.String[] &lt;/p&gt;
{ &quot;RegionSpecifier&quot;, &quot;Stores&quot;, &quot;Storefiles&quot;, &quot;StoreUncompressedSizeMB&quot;, &quot;StorefileSizeMB&quot;, &quot;MemstoreSizeMB&quot;, &quot;StorefileIndexSizeMB&quot;, &quot;ReadRequestsCount&quot;, &quot;WriteRequestsCount&quot;, &quot;TotalCompactingKVs&quot;, &quot;CurrentCompactedKVs&quot;, &quot;RootIndexSizeKB&quot;, &quot;TotalStaticIndexSizeKB&quot;, &quot;TotalStaticBloomSizeKB&quot;, &quot;CompleteSequenceId&quot;, &quot;DataLocality&quot;, &quot;LastMajorCompactionTs&quot;, }
&lt;p&gt;);&lt;br/&gt;
+       * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestamp(.MajorCompactionTimestampRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+       * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestampForRegion(.MajorCompactionTimestampForRegionRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestamp(.MajorCompactionTimestampRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;br/&gt;
+     * &amp;lt;code&amp;gt;rpc getLastMajorCompactionTimestampForRegion(.MajorCompactionTimestampForRegionRequest) returns (.MajorCompactionTimestampResponse);&amp;lt;/code&amp;gt;&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 1 zombie test(s): 	at org.apache.hadoop.hbase.TestAcidGuarantees.testScanAtomicity(TestAcidGuarantees.java:354)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-rest.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-annotations.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/12630//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14296368" author="lhofhansl" created="Thu, 29 Jan 2015 04:48:03 +0000"  >&lt;p&gt;Oh, it&apos;s checkstyle, not findbugs. Looking. (Can&apos;t believe how long I&apos;m taking for this issue)&lt;/p&gt;</comment>
                            <comment id="14296371" author="lhofhansl" created="Thu, 29 Jan 2015 04:53:24 +0000"  >&lt;p&gt;Looks like this is related to the &amp;gt; 100 char lines. Should be all good.&lt;/p&gt;

&lt;p&gt;Please have another look, then I am going to commit.&lt;/p&gt;</comment>
                            <comment id="14297083" author="stack" created="Thu, 29 Jan 2015 16:23:16 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Looks good.&lt;/p&gt;</comment>
                            <comment id="14297757" author="lhofhansl" created="Thu, 29 Jan 2015 21:51:48 +0000"  >&lt;p&gt;1.1 version.&lt;/p&gt;

&lt;p&gt;Going to commit these two now.&lt;br/&gt;
For 0.98 (and 1.0) I&apos;ll file a separate porting jira as those will be different enough.&lt;/p&gt;</comment>
                            <comment id="14297775" author="lhofhansl" created="Thu, 29 Jan 2015 21:57:43 +0000"  >&lt;p&gt;Pushed to 2.0 and 1.1&lt;/p&gt;</comment>
                            <comment id="14297788" author="lhofhansl" created="Thu, 29 Jan 2015 22:05:35 +0000"  >&lt;p&gt;Crap... Needs a quick addendum after all. Reading back old HFile will lead to an NPE. That&apos;s what &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; was asking about. I forgot to add that check.&lt;/p&gt;</comment>
                            <comment id="14297793" author="lhofhansl" created="Thu, 29 Jan 2015 22:09:06 +0000"  >&lt;p&gt;Simple addendum.&lt;/p&gt;</comment>
                            <comment id="14297795" author="lhofhansl" created="Thu, 29 Jan 2015 22:10:42 +0000"  >&lt;p&gt;Pushed.&lt;/p&gt;</comment>
                            <comment id="14297896" author="hudson" created="Thu, 29 Jan 2015 23:29:40 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #6068 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6068/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6068/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12859&quot; title=&quot;New master API to track major compaction completion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12859&quot;&gt;&lt;del&gt;HBASE-12859&lt;/del&gt;&lt;/a&gt; New master API to track major compaction completion. (larsh: rev 1270e590d1380abc500bf76f9e1e91898c967902)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/RegionLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/ClusterStatus.proto&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/MasterProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/Master.proto&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin1.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContextBuilder.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/ClusterStatus.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14297927" author="hudson" created="Thu, 29 Jan 2015 23:52:45 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.1 #125 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.1/125/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.1/125/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12859&quot; title=&quot;New master API to track major compaction completion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12859&quot;&gt;&lt;del&gt;HBASE-12859&lt;/del&gt;&lt;/a&gt; New master API to track major compaction completion. (larsh: rev 0b3502f2b114cd937f57e447f765876d73d99df8)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitor.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/RegionLoad.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/Master.proto&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFile.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/protobuf/ClusterStatus.proto&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter.java&lt;/li&gt;
	&lt;li&gt;hbase-protocol/src/main/java/org/apache/hadoop/hbase/protobuf/generated/MasterProtos.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/ClusterStatus.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin1.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionManager.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContextBuilder.java&lt;/li&gt;
	&lt;li&gt;hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12859&quot; title=&quot;New master API to track major compaction completion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12859&quot;&gt;&lt;del&gt;HBASE-12859&lt;/del&gt;&lt;/a&gt;; Addendum (larsh: rev 45b0aa874d817c933f3e6272de1181cf1262b8db)&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14297981" author="hudson" created="Fri, 30 Jan 2015 00:47:24 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-TRUNK #6069 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/6069/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/6069/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-12859&quot; title=&quot;New master API to track major compaction completion&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-12859&quot;&gt;&lt;del&gt;HBASE-12859&lt;/del&gt;&lt;/a&gt;; Addendum (larsh: rev 9c37d5dab7a42db72a6fbe66d716dacc69d02188)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileReaderV2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14571216" author="ndimiduk" created="Wed, 3 Jun 2015 15:29:43 +0000"  >&lt;p&gt;Closing issues released in 1.1.0.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12776006">PHOENIX-1674</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12695375" name="12859-addendum.txt" size="1047" author="lhofhansl" created="Thu, 29 Jan 2015 22:09:06 +0000"/>
                            <attachment id="12692704" name="12859-v1.txt" size="27309" author="lhofhansl" created="Fri, 16 Jan 2015 06:52:03 +0000"/>
                            <attachment id="12692886" name="12859-v2.txt" size="28283" author="lhofhansl" created="Sat, 17 Jan 2015 02:03:11 +0000"/>
                            <attachment id="12692964" name="12859-v3.txt" size="50654" author="lhofhansl" created="Sun, 18 Jan 2015 06:16:46 +0000"/>
                            <attachment id="12694414" name="12859-v4.txt" size="161982" author="lhofhansl" created="Sun, 25 Jan 2015 06:40:54 +0000"/>
                            <attachment id="12694718" name="12859-v5.txt" size="138319" author="lhofhansl" created="Tue, 27 Jan 2015 05:42:41 +0000"/>
                            <attachment id="12694919" name="12859-v6.txt" size="138787" author="lhofhansl" created="Wed, 28 Jan 2015 04:41:20 +0000"/>
                            <attachment id="12695369" name="12859-v7-1.1.txt" size="138420" author="lhofhansl" created="Thu, 29 Jan 2015 21:51:48 +0000"/>
                            <attachment id="12695164" name="12859-v7.txt" size="139518" author="lhofhansl" created="Thu, 29 Jan 2015 02:09:28 +0000"/>
                            <attachment id="12692619" name="12859-wip-UNFINISHED.txt" size="9265" author="lhofhansl" created="Thu, 15 Jan 2015 22:35:43 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12771147">HBASE-12945</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 15 Jan 2015 03:28:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 28 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i24dxj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>