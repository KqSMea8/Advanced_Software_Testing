<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:58:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14978/HBASE-14978.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14978] Don&apos;t allow Multi to retain too many blocks</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14978</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Scans and Multi&apos;s have limits on the total size of cells that can be returned. However if those requests are not all pointing at the same blocks then the KeyValues can keep alive a lot more data than their size.&lt;/p&gt;

&lt;p&gt;Take the following example:&lt;/p&gt;

&lt;p&gt;A multi with a list of 10000 gets to a fat row. Each column being returned in in a different block. Each column is small 32 bytes or so.&lt;/p&gt;

&lt;p&gt;So the total cell size will be 32 * 10000 = ~320kb. However if each block is 128k then total retained heap size will be almost 2gigs.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12921833">HBASE-14978</key>
            <summary>Don&apos;t allow Multi to retain too many blocks</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="eclark">Elliott Clark</assignee>
                                    <reporter username="eclark">Elliott Clark</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 Dec 2015 00:29:21 +0000</created>
                <updated>Fri, 18 Dec 2015 08:52:40 +0000</updated>
                            <resolved>Fri, 18 Dec 2015 00:15:45 +0000</resolved>
                                    <version>2.0.0</version>
                    <version>1.2.0</version>
                    <version>1.3.0</version>
                                    <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.2.0</fixVersion>
                    <fixVersion>1.3.0</fixVersion>
                                    <component>io</component>
                    <component>IPC/RPC</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="15057359" author="ram_krish" created="Tue, 15 Dec 2015 05:18:30 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c.getRowArray() != lastBlock) {
1084	          lastBlock = c.getRowArray();
1085	          context.incrementResponseBlockSize(lastBlock.length);
1086	        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think your calculation makes sense reg the number of blocks being referenced till the results of the gets are sent out. &lt;br/&gt;
For the offheap case may be this will not happen- but one thing with the above code even in offheap case we may only have BB backing the Result Cells and that time doing c.getRowArray may do a copy every time and this would always increase the last blcok count. Let me see once again.&lt;/p&gt;</comment>
                            <comment id="15057365" author="eclark" created="Tue, 15 Dec 2015 05:21:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;For the offheap case may be this will not happen- but one thing with the above code even in offheap case we may only have BB backing the Result Cells and that time doing c.getRowArray may do a copy every time and this would always increase the last blcok count.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah I think you are correct. Let me get a patch up for that.&lt;/p&gt;</comment>
                            <comment id="15057393" author="hadoopqa" created="Tue, 15 Dec 2015 05:50:51 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12777645/HBASE-14978.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12777645/HBASE-14978.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 10d86c7daea1f27cb7f9849c907696431cc6ab5c.&lt;br/&gt;
  ATTACHMENT ID: 12777645&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated new checkstyle errors. Check build console for list of new errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16857//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15057602" author="anoop.hbase" created="Tue, 15 Dec 2015 08:23:44 +0000"  >&lt;p&gt;So with off heap Cells, withe very cell, we will treat it as coming from a new block?&lt;br/&gt;
In fact with off heap Cell, which are delivered from L2 off heap cache, we wont get any OOME issue whatever be the #blocks one request touches. We avoid copying of block data from L2 off heap space to temp byte[].  So these Cells refer to the L2 cache space only.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;if (c.getRowArray() != lastBlock) {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Even with array backed cells also this wont work as expected when we use DBE.  In that case every Cell will have new byte[] backing the key parts at least..  Now with Cells in place every where, this kind of assumption taking is not correct IMHO.&lt;/p&gt;</comment>
                            <comment id="15057604" author="ram_krish" created="Tue, 15 Dec 2015 08:25:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;In that case every Cell will have new byte[] backing the key parts at least.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ya I was about to say that but in the latest patch it is the valueBuffer and valueArray. &lt;/p&gt;</comment>
                            <comment id="15057620" author="anoop.hbase" created="Tue, 15 Dec 2015 08:34:53 +0000"  >&lt;p&gt;The check is still on getRowArray() and uses value array for knowing that block&apos;s size.  &lt;/p&gt;</comment>
                            <comment id="15057628" author="ram_krish" created="Tue, 15 Dec 2015 08:40:30 +0000"  >&lt;p&gt;bqThe check is still on getRowArray() &lt;br/&gt;
I see. I missed that. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In fact with off heap Cell, which are delivered from L2 off heap cache, we wont get any OOME issue whatever be the #blocks one request touches. We avoid copying of block data from L2 off heap space to temp byte[]. So these Cells refer to the L2 cache space only.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes. I too think so.. See my above comment &apos;For the offheap case may be this will not happen- &apos;.&lt;/p&gt;</comment>
                            <comment id="15057636" author="eclark" created="Tue, 15 Dec 2015 08:51:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;So with off heap Cells, withe very cell, we will treat it as coming from a new block?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yep which bb controls which gets really interesting so I went with the more conservative.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In fact with off heap Cell, which are delivered from L2 off heap cache, we wont get any OOME issue&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We won&apos;t get an OOME instead we&apos;ll kill the cache and be un-able to read anything from disk. The end result is about the same. Disaster. Moving the data off heap doesn&apos;t really solve any of the issues. It just means that we don&apos;t have the gc cleaning up. We have our own reference counting.&lt;/p&gt;</comment>
                            <comment id="15057639" author="eclark" created="Tue, 15 Dec 2015 08:53:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;The check is still on getRowArray() &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Everything should be on value.&lt;/p&gt;</comment>
                            <comment id="15057783" author="ram_krish" created="Tue, 15 Dec 2015 10:16:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;We won&apos;t get an OOME instead we&apos;ll kill the cache and be un-able to read anything from disk&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Just wanted to understand your concern here.  In HBase branch-1.3 even if we configure the BucketCache (L2) offheap every time we bring in the block onheap before serving any read request. So in case of multi Gets there could be n number of blocks being copied to the onheap and all those will have references in the Result till the results are transferred to the client. So the heap can grow upto 2GB as per  your decription. &lt;br/&gt;
But in the latest trunk this copy to onheap will never happen so the Cells that are created in the Results will only refer directly to the offheap area and as you said we do the ref counting of these blocks in offheap.&lt;br/&gt;
The only thing that could happen now is that till all the Results could be transferred to the client we may hold the block and so any such blocks cannot be evicted till the reference is cleared. &lt;/p&gt;</comment>
                            <comment id="15057850" author="eclark" created="Tue, 15 Dec 2015 10:57:47 +0000"  >&lt;p&gt;Yeah so we&apos;ll oom if we&apos;re bringing things on heap ( branch-1.2 ).&lt;br/&gt;
We&apos;ll kill the block cache by not allowing blocks to be free&apos;d on other branches.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The only thing that could happen now is that till all the Results could be transferred to the client we may hold the block and so any such blocks cannot be evicted till the reference is cleared.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah. So if you have a high traffic server it&apos;s pretty easy to get to a state where this really hurts. 30 (default min) Threads * 2 gb (easy to get to example) of data blocks makes for a very unhappy block cache.&lt;/p&gt;

&lt;p&gt;On heap vs off heap is not substantially changing the issue. We are holding onto datablocks regardless of size needed or reserved. On heap we&apos;re encroaching into the memstore/blockcache reserved space. Causing the JVM to run out of memory and have to either full GC or just OOME.&lt;/p&gt;

&lt;p&gt;Off heap and we&apos;re encroaching into the index blocks and bloom blocks. Causing the block cache to either run out of memory and be un-able to release anything, or to release the most important index and bloom blocks.&lt;/p&gt;

&lt;p&gt;In any scenario we&apos;re just moving around which subsystem of the regionserver is running out of memory it thinks should be available.&lt;/p&gt;</comment>
                            <comment id="15057869" author="anoop.hbase" created="Tue, 15 Dec 2015 11:09:26 +0000"  >&lt;p&gt;Understand your point of cache is being blocked for longer time.. ( i mean some buckets)&lt;br/&gt;
But my worry is the fact of considering every off heap Cell to be from a new block.  This will kill all the perf improvements we made in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-11425&quot; title=&quot;Cell/DBB end-to-end on the read-path&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-11425&quot;&gt;&lt;del&gt;HBASE-11425&lt;/del&gt;&lt;/a&gt;.  &lt;br/&gt;
In patch we increment the block size for each cell by the underlying value buffer capacity. In case of off heap Cells from L2 cache, this buffer is the bucket buffer being created in ByteBufferArray which is of size 4 MB.   So any size limit we make, with the off heap cells from L2 cache, we will reach there so easily and will make much more RPCs!&lt;/p&gt;</comment>
                            <comment id="15057975" author="hadoopqa" created="Tue, 15 Dec 2015 12:26:22 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12777679/HBASE-14978-v1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12777679/HBASE-14978-v1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit ef92a6a067230cae96d3e3267da5a18ac5ad89c6.&lt;br/&gt;
  ATTACHMENT ID: 12777679&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;. The applied patch does not generate new checkstyle errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16862//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15058011" author="hadoopqa" created="Tue, 15 Dec 2015 12:52:24 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12777700/HBASE-14978-v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12777700/HBASE-14978-v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit ef92a6a067230cae96d3e3267da5a18ac5ad89c6.&lt;br/&gt;
  ATTACHMENT ID: 12777700&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;. The applied patch does not generate new checkstyle errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16863//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15059111" author="hadoopqa" created="Tue, 15 Dec 2015 23:40:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12777817/HBASE-14978-v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12777817/HBASE-14978-v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit abe30b52a8036078f833dc5b3d2b03daa2e93dfc.&lt;br/&gt;
  ATTACHMENT ID: 12777817&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;. The applied patch does not generate new checkstyle errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16865//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15060527" author="eclark" created="Wed, 16 Dec 2015 18:53:40 +0000"  >&lt;p&gt;Any thoughts on the last patch? It tries it&apos;s best to keep track of off heap blocks.&lt;br/&gt;
The javadoc warning seems to be coming from somewhere else.&lt;/p&gt;</comment>
                            <comment id="15060609" author="yuzhihong@gmail.com" created="Wed, 16 Dec 2015 19:26:48 +0000"  >&lt;p&gt;From &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16862/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16862/console&lt;/a&gt; :&lt;/p&gt;

&lt;p&gt;Fetching &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16862/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16862/console&lt;/a&gt;&lt;br/&gt;
Printing hanging tests&lt;br/&gt;
Hanging test : org.apache.hadoop.hbase.master.TestSplitLogManager&lt;br/&gt;
Printing Failing tests&lt;/p&gt;</comment>
                            <comment id="15060947" author="eclark" created="Wed, 16 Dec 2015 21:48:12 +0000"  >&lt;p&gt;That test passes 5 out of 5 times on this branch for me. Since there&apos;s nothing here that would change the SplitLogManager, and the apache build env is less than useless, I&apos;ll rebase and ignore that test.&lt;/p&gt;</comment>
                            <comment id="15060971" author="eclark" created="Wed, 16 Dec 2015 21:58:25 +0000"  >&lt;p&gt;I&apos;d like to get this into 1.2.0 since that will be the first client with the retry immediately behavior, it would be nice to get it right.&lt;/p&gt;

&lt;p&gt;We can work on the trunk behavior in a follow on.&lt;/p&gt;</comment>
                            <comment id="15061266" author="hadoopqa" created="Thu, 17 Dec 2015 01:15:54 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12778109/HBASE-14978-v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12778109/HBASE-14978-v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 6a0159046e5301cb45ee2c878ad7583bf9ad94ce.&lt;br/&gt;
  ATTACHMENT ID: 12778109&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 1 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;. The applied patch does not generate new checkstyle errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Javadoc warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//artifact/patchprocess/patchJavadocWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//artifact/patchprocess/patchJavadocWarnings.txt&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16886//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15061547" author="ram_krish" created="Thu, 17 Dec 2015 05:49:02 +0000"  >&lt;p&gt;If we can work on trunk as a follow on this is fine to me. But for trunk we or even 1.3 we may need to do some exact tracking of the block count. &lt;/p&gt;</comment>
                            <comment id="15061735" author="eclark" created="Thu, 17 Dec 2015 08:53:16 +0000"  >&lt;p&gt;patch for 1.2&lt;/p&gt;</comment>
                            <comment id="15061743" author="eclark" created="Thu, 17 Dec 2015 08:58:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;But for trunk we or even 1.3 we may need to do some exact tracking of the block count.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I don&apos;t think we will. It&apos;s counting each byte buffer only once. Any more exact counting and the overhead will be too great. Networks are getting so fast that the being wrong on an edge case is not the end of the world.&lt;/p&gt;</comment>
                            <comment id="15061759" author="hadoopqa" created="Thu, 17 Dec 2015 09:08:38 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12778213/HBASE-14978-branch-1.2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12778213/HBASE-14978-branch-1.2.patch&lt;/a&gt;&lt;br/&gt;
  against branch-1.2 branch at commit d78eddfdc8bad5068600e28a039276cc55063ce2.&lt;br/&gt;
  ATTACHMENT ID: 12778213&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javac&lt;/font&gt;.  The patch appears to cause mvn compile goal to fail with Hadoop version 2.4.0.&lt;/p&gt;

&lt;p&gt;    Compilation errors resume:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; COMPILATION ERROR : &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;78,38&amp;#93;&lt;/span&gt; error: cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt;   symbol:   method getAdmin()&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (default-testCompile) on project hbase-server: Compilation failure: Compilation failure:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;78,38&amp;#93;&lt;/span&gt; error: cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; symbol:   method getAdmin()&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; location: variable TEST_UTIL of type HBaseTestingUtility&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/hbase/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;142,38&amp;#93;&lt;/span&gt; error: cannot find symbol&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; To see the full stack trace of the errors, re-run Maven with the -e switch.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Re-run Maven using the -X switch to enable full debug logging.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; For more information about the errors and possible solutions, please read the following articles:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;Help 1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; After correcting the problems, you can resume the build with the command&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt;   mvn &amp;lt;goals&amp;gt; -rf :hbase-server&lt;/p&gt;


&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16901//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16901//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15061991" author="anoop.hbase" created="Thu, 17 Dec 2015 12:40:32 +0000"  >&lt;p&gt;Ok lets us target first some thing for 1.2 release.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;if (!(c instanceof BufferedDataBlockEncoder.SeekerState)) {&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;So you don&apos;t want to do this barrier check for DBE cases?  When DBEs we will be returning ClonedSeekerState as Cells.  May be continue with what you were doing in old patch? (Consider valueArray) So you can even do it for DBE case.   For PrefixTree also value buffer will be the same byte[] which backs the HFileBlock I believe (Correct Ram?)&lt;br/&gt;
Here itself we are seeing the complexity and tomorrow if a new DBE comes in, we might break the assumption here.. That was my worry.. The code is basically breaking the Cell notion.. I agree to your point that more accurate house keeping might be too much of overhead and we need a fix for the OOME possibility.  Just saying my views. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15062335" author="ram_krish" created="Thu, 17 Dec 2015 17:00:22 +0000"  >&lt;p&gt;Ya in all DBE cases the value part can be considered(including PrefixTree). We can target this for 1.2 alone. &lt;/p&gt;</comment>
                            <comment id="15062557" author="eclark" created="Thu, 17 Dec 2015 18:57:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;So you don&apos;t want to do this barrier check for DBE cases?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I want to but getting the value array for non-cloned SeekerState cells could throw if the bb is read only.  Here this should work. Though I hate adding a public method&lt;/p&gt;</comment>
                            <comment id="15062579" author="eclark" created="Thu, 17 Dec 2015 19:07:54 +0000"  >&lt;p&gt;yeah I went and looked there&apos;s nothing on the server side that sets the byte buffer read only.&lt;/p&gt;</comment>
                            <comment id="15063195" author="stack" created="Fri, 18 Dec 2015 00:51:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;....and the apache build env is less than useless...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Disagree. Its turning up issues now before checkin even.... finding hangers before checkin even.  Its starting to have value again. TestSplitLogManager is a test that hangs from time-to-time. We need to fix it.&lt;/p&gt;

&lt;p&gt;This patch for 1.2 only then?&lt;/p&gt;
</comment>
                            <comment id="15063205" author="eclark" created="Fri, 18 Dec 2015 01:02:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;This patch for 1.2 only then?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This patch is for all the branches. We might have to iterate on master as/if we move things more and more to off heap. I added the computation for ByteBuffers on master. The cost of getting it wrong is just higher since it could be up to 4mb vs the 128k for branch-1.2&lt;/p&gt;</comment>
                            <comment id="15063257" author="hudson" created="Fri, 18 Dec 2015 01:37:46 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.3 #448 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/448/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/448/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14978&quot; title=&quot;Don&amp;#39;t allow Multi to retain too many blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14978&quot;&gt;&lt;del&gt;HBASE-14978&lt;/del&gt;&lt;/a&gt; Don&apos;t allow Multi to retain too many blocks (eclark: rev c825a26ad1e0ee9c099e509453b69298f277880a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15063339" author="hudson" created="Fri, 18 Dec 2015 03:07:40 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.3-IT #384 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3-IT/384/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3-IT/384/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14978&quot; title=&quot;Don&amp;#39;t allow Multi to retain too many blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14978&quot;&gt;&lt;del&gt;HBASE-14978&lt;/del&gt;&lt;/a&gt; Don&apos;t allow Multi to retain too many blocks (eclark: rev c825a26ad1e0ee9c099e509453b69298f277880a)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14978&quot; title=&quot;Don&amp;#39;t allow Multi to retain too many blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14978&quot;&gt;&lt;del&gt;HBASE-14978&lt;/del&gt;&lt;/a&gt; Don&apos;t allow Multi to retain too many blocks &amp;#8211; ADD (eclark: rev 345d008edeb927914e55a4a6802ffc06992ff066)&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15063356" author="hudson" created="Fri, 18 Dec 2015 03:36:00 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-Trunk_matrix #564 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-Trunk_matrix/564/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-Trunk_matrix/564/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14978&quot; title=&quot;Don&amp;#39;t allow Multi to retain too many blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14978&quot;&gt;&lt;del&gt;HBASE-14978&lt;/del&gt;&lt;/a&gt; Don&apos;t allow Multi to retain too many blocks (eclark: rev 217036d81693f3806d271f6f5d5d7d8f17823745)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15063371" author="hudson" created="Fri, 18 Dec 2015 03:47:16 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.2-IT #350 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2-IT/350/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2-IT/350/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14978&quot; title=&quot;Don&amp;#39;t allow Multi to retain too many blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14978&quot;&gt;&lt;del&gt;HBASE-14978&lt;/del&gt;&lt;/a&gt; Don&apos;t allow Multi to retain too many blocks (eclark: rev f4bbb17d3ca28d21f53e483bc8684e95459ca9c2)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14978&quot; title=&quot;Don&amp;#39;t allow Multi to retain too many blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14978&quot;&gt;&lt;del&gt;HBASE-14978&lt;/del&gt;&lt;/a&gt; Don&apos;t allow Multi to retain too many blocks &amp;#8211; ADD (eclark: rev 14dedcc58e5de6b46a76c26691ba1f8e18cdd7dd)&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15063545" author="anoop.hbase" created="Fri, 18 Dec 2015 06:03:16 +0000"  >&lt;p&gt;Our agreement was to commit this to 1.x versions not to trunk. I see it got committed there. &lt;/p&gt;</comment>
                            <comment id="15063546" author="anoop.hbase" created="Fri, 18 Dec 2015 06:04:08 +0000"  >&lt;p&gt;3.0.0 fix version?  I dont think the branching is done for 2.x versions.  Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mbertozzi&quot; class=&quot;user-hover&quot; rel=&quot;mbertozzi&quot;&gt;Matteo Bertozzi&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15063550" author="anoop.hbase" created="Fri, 18 Dec 2015 06:06:13 +0000"  >&lt;p&gt;Which patch got committed? Still we check with getRowArray() and not handle DBE? &lt;/p&gt;</comment>
                            <comment id="15063553" author="eclark" created="Fri, 18 Dec 2015 06:07:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;If we can work on trunk as a follow on this is fine to me.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s what was said.&lt;/p&gt;</comment>
                            <comment id="15063554" author="mbertozzi" created="Fri, 18 Dec 2015 06:07:31 +0000"  >&lt;p&gt;the 2.0 branch is not done yet, master is still 2.0&lt;/p&gt;</comment>
                            <comment id="15063570" author="eclark" created="Fri, 18 Dec 2015 06:24:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;Still we check with getRowArray() and not handle DBE?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;By that point in the rpc the they cells are the cloned cells. There&apos;s no need to handle anything specific.&lt;/p&gt;</comment>
                            <comment id="15063571" author="hudson" created="Fri, 18 Dec 2015 06:25:15 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-1.3 #449 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.3/449/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.3/449/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14978&quot; title=&quot;Don&amp;#39;t allow Multi to retain too many blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14978&quot;&gt;&lt;del&gt;HBASE-14978&lt;/del&gt;&lt;/a&gt; Don&apos;t allow Multi to retain too many blocks &amp;#8211; ADD (eclark: rev 345d008edeb927914e55a4a6802ffc06992ff066)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15063586" author="ram_krish" created="Fri, 18 Dec 2015 06:43:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;We can target this for 1.2 alone.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt; - We thought of going with 1.2 alone.  &lt;br/&gt;
For the getRowArray and getvalueArray change - May be for the DBE related changes are not there in branch-1.2. ?&lt;br/&gt;
Because in trunk the row, cf and qual are all cloned by the value referes to the actual HFileBlock. &lt;/p&gt;</comment>
                            <comment id="15063601" author="anoop.hbase" created="Fri, 18 Dec 2015 06:52:14 +0000"  >&lt;p&gt;Ya they are Cloned cells and key part is referring to new byte[]s of exact key size.  Still those cloned cells refer to the actual HFileBlock backing byte[] as the value is referring to that. So still  we will see the possible OOME case.&lt;/p&gt;</comment>
                            <comment id="15063621" author="eclark" created="Fri, 18 Dec 2015 07:12:11 +0000"  >&lt;p&gt;I can certainly change the rowArray to point at the valueArray.&lt;/p&gt;</comment>
                            <comment id="15063710" author="hudson" created="Fri, 18 Dec 2015 08:52:40 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-1.2 #454 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-1.2/454/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-1.2/454/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14978&quot; title=&quot;Don&amp;#39;t allow Multi to retain too many blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14978&quot;&gt;&lt;del&gt;HBASE-14978&lt;/del&gt;&lt;/a&gt; Don&apos;t allow Multi to retain too many blocks (eclark: rev f4bbb17d3ca28d21f53e483bc8684e95459ca9c2)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcCallContext.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java&lt;/li&gt;
	&lt;li&gt;hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14978&quot; title=&quot;Don&amp;#39;t allow Multi to retain too many blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14978&quot;&gt;&lt;del&gt;HBASE-14978&lt;/del&gt;&lt;/a&gt; Don&apos;t allow Multi to retain too many blocks &amp;#8211; ADD (eclark: rev 14dedcc58e5de6b46a76c26691ba1f8e18cdd7dd)&lt;/li&gt;
	&lt;li&gt;hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMultiRespectsLimits.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12778316" name="HBASE-14978-branch-1.2.patch" size="14081" author="eclark" created="Thu, 17 Dec 2015 19:34:51 +0000"/>
                            <attachment id="12778307" name="HBASE-14978-branch-1.2.patch" size="16452" author="eclark" created="Thu, 17 Dec 2015 19:07:54 +0000"/>
                            <attachment id="12778304" name="HBASE-14978-branch-1.2.patch" size="16961" author="eclark" created="Thu, 17 Dec 2015 18:57:07 +0000"/>
                            <attachment id="12778213" name="HBASE-14978-branch-1.2.patch" size="16115" author="eclark" created="Thu, 17 Dec 2015 08:53:16 +0000"/>
                            <attachment id="12777679" name="HBASE-14978-v1.patch" size="14458" author="eclark" created="Tue, 15 Dec 2015 06:24:54 +0000"/>
                            <attachment id="12777700" name="HBASE-14978-v2.patch" size="14453" author="eclark" created="Tue, 15 Dec 2015 08:56:48 +0000"/>
                            <attachment id="12777817" name="HBASE-14978-v3.patch" size="14573" author="eclark" created="Tue, 15 Dec 2015 20:14:46 +0000"/>
                            <attachment id="12778109" name="HBASE-14978-v4.patch" size="14574" author="eclark" created="Wed, 16 Dec 2015 21:48:43 +0000"/>
                            <attachment id="12777645" name="HBASE-14978.patch" size="12816" author="eclark" created="Tue, 15 Dec 2015 02:16:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Dec 2015 05:18:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2pvx3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Limiting the amount of memory resident for any one request allows the server to handle concurrent requests smoothly. To this end we added the ability to limit the size of responses to a multi request. That worked well however it correctly represent the amount of memory resident. So this issue adds on a an approximation of the number of blocks held for a request.&lt;br/&gt;
&lt;br/&gt;
All clients before 1.2.0 will not get this multi request chunking based upon blocks kept. All clients 1.2.0 and after will.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>