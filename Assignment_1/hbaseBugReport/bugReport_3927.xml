<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:14:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3927/HBASE-3927.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3927] display total uncompressed byte size of a region in web UI</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3927</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The decision to split data blocks when flushing and compacting is made based on the uncompressed data size which can often lead to compressed disk blocks that are a fraction of the intended 64 KB (default).  This often leads to a larger number of blocks and index entries than expected and can cause block indexes to take up GB of memory.&lt;/p&gt;

&lt;p&gt;There is already a &quot;long totalUncompressedBytes&quot; written to the HFileTrailer.  It would be nice to expose this in the web UI to make it easier to calculate the compression ratio and then raise the block size appropriately (not necessarily to get it back to 64K).&lt;/p&gt;

&lt;p&gt;This should probably be added wherever the other HFile metrics are: RegionLoad.createRegions(..), and HServerLoad.  HServerLoad is a Writable, so it may break serialization.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12508458">HBASE-3927</key>
            <summary>display total uncompressed byte size of a region in web UI</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="yuzhihong@gmail.com">Ted Yu</assignee>
                                    <reporter username="mcorgan">Matt Corgan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 26 May 2011 18:34:07 +0000</created>
                <updated>Fri, 20 Nov 2015 12:40:48 +0000</updated>
                            <resolved>Thu, 16 Jun 2011 21:20:16 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                    <component>metrics</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13040346" author="yuzhihong@gmail.com" created="Fri, 27 May 2011 17:27:56 +0000"  >&lt;p&gt;I discussed this with Karthick.&lt;br/&gt;
In Store.java, we maintain storeSize:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
        &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.storeSize += r.length();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The call to length() is delegated to HFile#Reader#length().&lt;br/&gt;
We can add a new method, HFile#Reader#getTotalUncompressedBytes e.g. which exposes HFile#Reader#trailer.totalUncompressedBytes.&lt;br/&gt;
This way we can maintain both measures in Store.&lt;/p&gt;

&lt;p&gt;@Matt:&lt;br/&gt;
Please elaborate the description in your first paragraph.&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="13040404" author="mcorgan" created="Fri, 27 May 2011 19:33:25 +0000"  >&lt;p&gt;Ted - I think the problem I&apos;m most often seeing on the user list is that people want the default 64K block size, but after they enable compression they don&apos;t raise the block size to compensate for the compression.  In many cases it&apos;s easy to obtain compression of 10x or better, so the blocks on disk are ~6K, which is smaller than anyone wants.&lt;/p&gt;

&lt;p&gt;It&apos;s also true that data with large keys and small values (like an inverted index) tends to compress well.  Those big keys also necessitate relatively large block cache entries.  Because the block index has an entry for every block, it can get overly large when a user has large keys and small compressed blocks.&lt;/p&gt;

&lt;p&gt;Exposing this metric just a way to remind unsuspecting users that block size is calculated based on uncompressed size, rather than compressed disk size which drives region splits.  It should also make it easier to figure out how effective different compression algorithms are, how big your compressed block size is, what percent of your data you can fit in block cache, etc..  &lt;/p&gt;</comment>
                            <comment id="13040405" author="yuzhihong@gmail.com" created="Fri, 27 May 2011 19:37:46 +0000"  >&lt;p&gt;I will wait for other developers&apos; comment before producing a patch.&lt;/p&gt;</comment>
                            <comment id="13040431" author="yuzhihong@gmail.com" created="Fri, 27 May 2011 20:51:57 +0000"  >&lt;p&gt;This patch is based on trunk codebase.&lt;/p&gt;</comment>
                            <comment id="13040519" author="karthick" created="Sat, 28 May 2011 00:24:57 +0000"  >&lt;p&gt;More often than not, the uncompressed bytes should be equal to the &quot;hfile.min.blocksize.size&quot; setting, if I understand it correctly. Typically, the &lt;tt&gt;HFile#Writer&lt;/tt&gt; will close a block if its &lt;tt&gt;checkBlockBoundary&lt;/tt&gt; method throws an exception, which happens when the current block&apos;s size goes over. I believe the only hfile block that can potentially have fewer (uncompressed) bytes is the last one (which was current at the time of close). If so, it would be nicer to expose the compression ratio (along with the total compressed bytes) in the web UI.&lt;/p&gt;</comment>
                            <comment id="13040612" author="yuzhihong@gmail.com" created="Sat, 28 May 2011 15:10:01 +0000"  >&lt;p&gt;This version adds compression ratio in HServerLoad.toString()&lt;/p&gt;</comment>
                            <comment id="13040854" author="apurtell" created="Sun, 29 May 2011 18:59:13 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Minor nit, I think the compression ratio shows too many insignificant digits. &lt;/p&gt;</comment>
                            <comment id="13040867" author="yuzhihong@gmail.com" created="Sun, 29 May 2011 20:17:37 +0000"  >&lt;p&gt;This version adjusts Store.FIXED_OVERHEAD&lt;/p&gt;</comment>
                            <comment id="13040874" author="yuzhihong@gmail.com" created="Sun, 29 May 2011 21:05:23 +0000"  >&lt;p&gt;This version limits the digits after decimal point to 4 for compression ratio.&lt;/p&gt;</comment>
                            <comment id="13040881" author="mcorgan" created="Sun, 29 May 2011 21:33:11 +0000"  >&lt;p&gt;This looks great Ted.  Thanks.&lt;/p&gt;

&lt;p&gt;Should we take the opportunity to change storefileIndexSizeMB to storefileIndexSizeKB?  Indexes are very often under 1MB, so it&apos;s not very useful as is.  &lt;/p&gt;</comment>
                            <comment id="13040884" author="yuzhihong@gmail.com" created="Sun, 29 May 2011 21:50:46 +0000"  >&lt;p&gt;I tend to agree with Matt.&lt;br/&gt;
But Facebook may have large indexes. I think that is part of the reason for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3856&quot; title=&quot;Build a tree structure data block index inside of the HFile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3856&quot;&gt;&lt;del&gt;HBASE-3856&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Also, getStorefileIndexSizeMB() is currently used by AvoUtil and StorageClusterStatusResource (in rest package).&lt;/p&gt;

&lt;p&gt;Shall we change the display for HServerLoad.toString() to KB and keep the other references the same?&lt;/p&gt;</comment>
                            <comment id="13040910" author="apurtell" created="Mon, 30 May 2011 01:13:46 +0000"  >&lt;p&gt;@Ted: I agree with Matt also. However, commit what you have here and then address Matt&apos;s comment with another JIRA? And change all MB to KB?&lt;/p&gt;</comment>
                            <comment id="13040972" author="yuzhihong@gmail.com" created="Mon, 30 May 2011 02:00:06 +0000"  >&lt;p&gt;@Andrew:&lt;br/&gt;
That&apos;s fine. &lt;/p&gt;</comment>
                            <comment id="13041404" author="stack" created="Tue, 31 May 2011 04:13:03 +0000"  >&lt;p&gt;This is for 0.92 only?  If so, should be fine changing the serialization of HServerLoad?  Otherwise +1 on patch.  Commit it Ted (you might have to wait a few more days on your commit bit).&lt;/p&gt;</comment>
                            <comment id="13041406" author="yuzhihong@gmail.com" created="Tue, 31 May 2011 04:19:20 +0000"  >&lt;p&gt;The attached image was produced based on 0.90.3&lt;/p&gt;</comment>
                            <comment id="13041625" author="stack" created="Tue, 31 May 2011 15:28:55 +0000"  >&lt;p&gt;But it changes the serialization of HServerLoad in a way that does not self-migrate.  Is HSL versioned?  If so, can you make it so HSL can deserialize based off the HSL version?   Else, we can just commit this to 0.92?&lt;/p&gt;</comment>
                            <comment id="13041643" author="yuzhihong@gmail.com" created="Tue, 31 May 2011 16:04:28 +0000"  >&lt;p&gt;Thanks for the hint, Stack.&lt;br/&gt;
Looking at RegionLoad.readFields(), I am a little confused by the handling of RegionLoad.VERSION.&lt;br/&gt;
getVersion() just returns the static VERSION, making the subsequent version check almost meaningless.&lt;br/&gt;
I plan to increase RegionLoad.VERSION and persist the version byte for TRUNK.&lt;/p&gt;</comment>
                            <comment id="13041646" author="yuzhihong@gmail.com" created="Tue, 31 May 2011 16:11:36 +0000"  >&lt;p&gt;HServerLoad.VERSION isn&apos;t serialized, either.&lt;/p&gt;</comment>
                            <comment id="13041666" author="yuzhihong@gmail.com" created="Tue, 31 May 2011 16:46:10 +0000"  >&lt;p&gt;Second version serializes/deserializes version numbers for HSL and RegionLoad.&lt;/p&gt;</comment>
                            <comment id="13049879" author="jdcryans" created="Wed, 15 Jun 2011 16:57:57 +0000"  >&lt;p&gt;+1 if it doesn&apos;t break any tests, also it should be targeted for 0.92&lt;/p&gt;</comment>
                            <comment id="13050739" author="stack" created="Thu, 16 Jun 2011 21:20:16 +0000"  >&lt;p&gt;Ran tests and they are passing.  Committed to TRUNK.  Thanks Ted (The way VERSION work is that you might encounter a serialized object that is of a version that is before yours.  When deserializing you won&apos;t be expecting to find fields that were added in your current version)&lt;/p&gt;</comment>
                            <comment id="15016804" author="lars_francke" created="Fri, 20 Nov 2015 12:40:48 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12480961" name="3927-v2.txt" size="9512" author="yuzhihong@gmail.com" created="Tue, 31 May 2011 16:46:10 +0000"/>
                            <attachment id="12480800" name="3927.txt" size="7647" author="yuzhihong@gmail.com" created="Sun, 29 May 2011 21:05:23 +0000"/>
                            <attachment id="12480741" name="regionserver-showing-compression-ratio.png" size="146941" author="yuzhihong@gmail.com" created="Sat, 28 May 2011 15:05:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 27 May 2011 17:27:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33273</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hojr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101239</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>