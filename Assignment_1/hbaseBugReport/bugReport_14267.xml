<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:51:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14267/HBASE-14267.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14267] In Mapreduce on HBase scenario, restart in TableInputFormat will result in getting wrong data.</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14267</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;When I run a mapreduce job on HBase, I will modify the row got from Result.getRow(), for example, reverse the row. Since my program is very complicated to handle data, it takes long time, and the lease int Region server expired. &lt;br/&gt;
Result#195&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt; [] getRow() {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.row == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.row = (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.cells == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.cells.length == 0) ?
          &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; :
          CellUtil.cloneRow(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.cells[0]);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.row;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;TableInputFormat will restart the scan from last row, but the row has been modified, so it will read wrong data.&lt;br/&gt;
TableRecordReaderImpl#218&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
        &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; not retry &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the exception tells us not to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; so
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (e &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; DoNotRetryIOException) {
          &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
        }
        &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; to handle all other IOExceptions by restarting
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// the scanner, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the second call fails, it will be rethrown
&lt;/span&gt;        LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;recovered from &quot;&lt;/span&gt; + StringUtils.stringifyException(e));
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lastSuccessfulRow == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
          LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;We are restarting the first next() invocation,&quot;&lt;/span&gt; +
              &lt;span class=&quot;code-quote&quot;&gt;&quot; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; your mapper has restarted a few other times like &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;&quot;&lt;/span&gt; +
              &lt;span class=&quot;code-quote&quot;&gt;&quot; then you should consider killing &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; job and investigate&quot;&lt;/span&gt; +
              &lt;span class=&quot;code-quote&quot;&gt;&quot; why it&apos;s taking so &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;.&quot;&lt;/span&gt;);
        }
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lastSuccessfulRow == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
          restart(scan.getStartRow());
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
          restart(lastSuccessfulRow);
          scanner.next();    &lt;span class=&quot;code-comment&quot;&gt;// skip presumed already mapped row
&lt;/span&gt;        }
        value = scanner.next();
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (value != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; value.isStale()) numStale++;
        numRestarts++;
      }
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (value != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; value.size() &amp;gt; 0) {
        key.set(value.getRow());
        lastSuccessfulRow = key.get();
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12857474">HBASE-14267</key>
            <summary>In Mapreduce on HBase scenario, restart in TableInputFormat will result in getting wrong data.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="qianxiZhang">Qianxi Zhang</assignee>
                                    <reporter username="qianxiZhang">Qianxi Zhang</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Aug 2015 08:14:40 +0000</created>
                <updated>Sun, 6 Sep 2015 01:18:37 +0000</updated>
                                                                            <component>Client</component>
                    <component>mapreduce</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="14704494" author="qianxizhang" created="Thu, 20 Aug 2015 08:21:57 +0000"  >&lt;p&gt;Hi, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;br/&gt;
How do you think about it?&lt;br/&gt;
I think we should the Result should be not modified. May be we can return the cloneValue(row).&lt;/p&gt;</comment>
                            <comment id="14704523" author="chenheng" created="Thu, 20 Aug 2015 08:46:19 +0000"  >&lt;p&gt;IMO if you need to update the row content,  you&apos;d better clone it outside after call &lt;tt&gt;Result.getRow()&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="14704531" author="qianxizhang" created="Thu, 20 Aug 2015 08:54:09 +0000"  >&lt;p&gt;But I think we should offer this mechanism rather than user, or offer the API doc for that.&lt;/p&gt;</comment>
                            <comment id="14704532" author="qianxizhang" created="Thu, 20 Aug 2015 08:54:13 +0000"  >&lt;p&gt;But I think we should offer this mechanism rather than user, or offer the API doc for that.&lt;/p&gt;</comment>
                            <comment id="14704572" author="qianxizhang" created="Thu, 20 Aug 2015 09:23:16 +0000"  >&lt;p&gt;IMO, this problem is serious and covert. User should know the data can not be modified.&lt;br/&gt;
In our use case, this bug is covert. When lease expired, it will occur, otherwise it will not.&lt;/p&gt;

&lt;p&gt;There is three method to solve this problem:&lt;br/&gt;
1. not allowed to modify the row in Result.getRow();&lt;br/&gt;
2. return the clone data;&lt;br/&gt;
3. API doc for that to let user know the data should be modified.&lt;/p&gt;</comment>
                            <comment id="14705230" author="yuzhihong@gmail.com" created="Thu, 20 Aug 2015 16:34:58 +0000"  >&lt;p&gt;I think what &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chenheng&quot; class=&quot;user-hover&quot; rel=&quot;chenheng&quot;&gt;Heng Chen&lt;/a&gt; proposed should be good.&lt;/p&gt;</comment>
                            <comment id="14728278" author="stack" created="Thu, 3 Sep 2015 00:22:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;User should know the data can not be modified.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I read through the javadoc and we do not clearly state this.&lt;/p&gt;

&lt;p&gt;When you modify the row, you are altering the cache&apos;d row instance in Result?&lt;/p&gt;

&lt;p&gt;  // We&apos;re not using java serialization.  Transient here is just a marker to say&lt;br/&gt;
  // that this is where we cache row if we&apos;re ever asked for it.&lt;br/&gt;
  private transient byte [] row = null;&lt;/p&gt;

&lt;p&gt;I am unclear on how this plays in the restart of the Scan? Is the modified Result row used to calculate where new Scan restarts?&lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=qianxiZhang&quot; class=&quot;user-hover&quot; rel=&quot;qianxiZhang&quot;&gt;Qianxi Zhang&lt;/a&gt; Looks like some dirty debugging to figure the issue.&lt;/p&gt;</comment>
                            <comment id="14732150" author="qianxizhang" created="Sun, 6 Sep 2015 01:18:37 +0000"  >&lt;p&gt;Thanks stack, you are right.&lt;br/&gt;
When the mapreduce restarts, tableinputformat will scan at last row which has been modified in Result.&lt;br/&gt;
TableRecordReaderImpl&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ry {
                value = &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.scanner.next();
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (logScannerActivity) {
                    rowcount++;
                    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (rowcount &amp;gt;= logPerRowCount) {
                        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; now = &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.currentTimeMillis();
                        LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;Mapper took &quot;&lt;/span&gt; + (now - timestamp)
                                + &lt;span class=&quot;code-quote&quot;&gt;&quot;ms to process &quot;&lt;/span&gt; + rowcount + &lt;span class=&quot;code-quote&quot;&gt;&quot; rows&quot;&lt;/span&gt;);
                        timestamp = now;
                        rowcount = 0;
                    }
                }
            } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
                &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; to handle all IOExceptions by restarting
&lt;/span&gt;                &lt;span class=&quot;code-comment&quot;&gt;// the scanner, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the second call fails, it will be rethrown
&lt;/span&gt;                LOG.info(&lt;span class=&quot;code-quote&quot;&gt;&quot;recovered from &quot;&lt;/span&gt; + StringUtils.stringifyException(e));
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lastSuccessfulRow == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                    LOG.warn(&lt;span class=&quot;code-quote&quot;&gt;&quot;We are restarting the first next() invocation,&quot;&lt;/span&gt; +
                            &lt;span class=&quot;code-quote&quot;&gt;&quot; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; your mapper has restarted a few other times like &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;&quot;&lt;/span&gt; +
                            &lt;span class=&quot;code-quote&quot;&gt;&quot; then you should consider killing &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; job and investigate&quot;&lt;/span&gt; +
                            &lt;span class=&quot;code-quote&quot;&gt;&quot; why it&apos;s taking so &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;.&quot;&lt;/span&gt;);
                }
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lastSuccessfulRow == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                    restart(scan.getStartRow());
                } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                    restart(lastSuccessfulRow);
                    scanner.next();    &lt;span class=&quot;code-comment&quot;&gt;// skip presumed already mapped row
&lt;/span&gt;                }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (value != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; value.size() &amp;gt; 0) {
                key.set(value.getRow());
                lastSuccessfulRow = key.get();
                lastKey = value.getRow();
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;lastSuccessfulRow is the key in result.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12751445" name="HBASE_14267_trunk_v1.patch" size="553" author="qianxiZhang" created="Thu, 20 Aug 2015 08:34:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Aug 2015 08:46:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 14 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2j5bz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>