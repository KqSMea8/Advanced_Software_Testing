<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:43:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-13467/HBASE-13467.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-13467] Prototype using GRPC as IPC mechanism</title>
                <link>https://issues.apache.org/jira/browse/HBASE-13467</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;GRPC provide an RPC layer for protocol buffers on top of Netty 4/5. This could be used to replace the current internal implementation.&lt;/p&gt;

&lt;p&gt;GRPC supports some advanced features like streaming, async, flow-control, cancellation &amp;amp; timeout which might be useful&lt;/p&gt;

&lt;p&gt;Will prototype on GitHub here if folks are interested &lt;br/&gt;
&lt;a href=&quot;https://github.com/louiscryan/hbase&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/louiscryan/hbase&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12820945">HBASE-13467</key>
            <summary>Prototype using GRPC as IPC mechanism</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="lryan">Louis Ryan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Apr 2015 19:59:18 +0000</created>
                <updated>Thu, 2 Jun 2016 18:07:50 +0000</updated>
                                            <version>2.0.0</version>
                                                    <component>API</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>16</watches>
                                                                <comments>
                            <comment id="14495447" author="apache9" created="Wed, 15 Apr 2015 00:39:00 +0000"  >&lt;p&gt;Nice try! &lt;br/&gt;
Two things.&lt;br/&gt;
1. Wire compatibility. gRPC is based on HTTP/2, and the old rpc is based on raw TCP. If we can not keep compatibility at the protocol level, then we should find other ways to let people use old client communicate with new server.&lt;br/&gt;
2. Secure HBase. gRPC is based on HTTP/2, so I&apos;m not worried about the kerberos authentication part. But security is a big system, a little change here may require large change there. It maybe a big project.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="14495484" author="lryan" created="Wed, 15 Apr 2015 00:55:57 +0000"  >&lt;p&gt;Yes. I suspect that running both interfaces at once will be necessary.&lt;/p&gt;

&lt;p&gt;Haven&apos;t gotten to the security side of things yet. Once I&apos;ve gotten plaintext working Ill take a look&lt;/p&gt;</comment>
                            <comment id="14497403" author="lryan" created="Thu, 16 Apr 2015 00:59:45 +0000"  >&lt;p&gt;OK. Work is progressing but I havent gotten to testing yet. Commits can be seen here&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/louiscryan/hbase/commits/AddDependencies&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/louiscryan/hbase/commits/AddDependencies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and most particularly&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/louiscryan/hbase/blob/AddDependencies/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/GrpcServer.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/louiscryan/hbase/blob/AddDependencies/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/GrpcServer.java&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14497443" author="eclark" created="Thu, 16 Apr 2015 01:41:22 +0000"  >&lt;p&gt;Looks awesome (could be very interesting for allowing other languages to use HBase). What are your plans for where to put the data? Current rpc was kind of a duct tape solution to keep from all the copies that protobuf 2.5 requires.&lt;/p&gt;</comment>
                            <comment id="14497534" author="stack" created="Thu, 16 Apr 2015 04:14:34 +0000"  >&lt;p&gt;Looking at GRPCServer....&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; * - Need to decide what to &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; about RPC scheduling and priorities in GRPC. Is HTTP2 (bandwidth)
 *   priority sufficient or &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; we also need to map onto thread priorities&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Being able to give requests different priorities is a facility we&apos;ve leaned on in the past and one we want to do more with (a bunch of work was done here recently. The most basic example is that mapreduce clients should run at a lower priority than requests from the client trying to do low-latency serving... and in current code base, this basically works.&lt;/p&gt;

&lt;p&gt;Contributors have also made scheduling pluggable; &apos;simple&apos; (round robin) is the default but also a &apos;FIFO&apos; option.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; * - Have largely dispensed with the connection header and will either use hardcoded defaults or
 *   headers to replace it over time. Do need a GrpcSession though to cache authentication state.&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;http headers?&lt;/p&gt;

&lt;p&gt;Sounds like server will be listening on two ports then or looking for http preamble in first few connection bytes when we have to support old clients.... (not important just now).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; * - Support &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; delayed calls removed.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yes. It doesn&apos;t work anyways and needs to be removed.&lt;/p&gt;

&lt;p&gt;Fix: public static final Log LOG = LogFactory.getLog(RpcServer.class);&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;// TODO(lryan): Bring back the buffer resevoir?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, or maybe now we should have netty do it for us not you&apos;ve dragged us over on top of it.&lt;/p&gt;

&lt;p&gt;So implementation so far leaves aside scheduling but it bypases Responder, Listener and Reader. How many less threads is that? The simplification is appreciated. My guess is that it will translate into perf gain &amp;#8211; you think so &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lryan&quot; class=&quot;user-hover&quot; rel=&quot;lryan&quot;&gt;Louis Ryan&lt;/a&gt; (I can give do some perf runs once something basic is working).&lt;/p&gt;

&lt;p&gt;Looks great.&lt;/p&gt;</comment>
                            <comment id="14498239" author="lryan" created="Thu, 16 Apr 2015 16:25:14 +0000"  >&lt;p&gt;Thanks for the notes. Some general thoughts...&lt;/p&gt;

&lt;p&gt;Scheduling - Call prioritization across clients should be doable but isn&apos;t something any of the GRPC libraries have built out yet. The effect could be achieved in a number of ways today but it&apos;s not clear how that would affect the server. If we&apos;re bandwidth limited then using HTTP2&apos;s mechanisms for flow-control management per user-agent type would probably work quite well. If we&apos;re CPU bound then we&apos;re left with thread-pool priorities and scheduling-queues. GRPC can certainly do either of those things though we don&apos;t yet. We could run two servers in the same process with different thread-pool assignments to achieve a similar effect but I don&apos;t know how practical that is for typical deployment scenarios.&lt;/p&gt;

&lt;p&gt;Headers - Yes, GRPC uses HTTP2 headers for metadata exchange. This generally turns out to be quite efficient as headers are compressed by a shared dictionary per-connection. This means that headers which are attached to repeated requests end up being omitted on the wire. HTTP2 also has the SETTINGS frame mechanism which can be used for per-connection property negotiation and of course we could just have an RPC to exchange capabilities as the first call on the wire so there are plenty of options. Generally speaking we&apos;ve either handled auth at the transport layer (e.g. client-certs) or per-request (e.g. oauth bearer tokens) and used caching to make it perform. Options which affect content-encoding (compression, cell scanner encoding) are also generally handled using headers just as they are in HTTP.&lt;/p&gt;

&lt;p&gt;Two ports seem easier though it would be an option to use an HTTP pre-amble. If we go with that I&apos;d recommend adopting the format specified in the HTTP2 spec&lt;br/&gt;
&lt;a href=&quot;http://http2.github.io/http2-spec/index.html#rfc.section.3.2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://http2.github.io/http2-spec/index.html#rfc.section.3.2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, I would definitely recommend cutting over to Netty&apos;s buffer pools. They work very well and those guys have put a lot of effort into making them reliable. The leak detection mechanisms are really great.&lt;/p&gt;

&lt;p&gt;I&apos;ll count my performance eggs when they hatch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Will be happy when I get something running e2e&lt;/p&gt;
</comment>
                            <comment id="14500616" author="lryan" created="Fri, 17 Apr 2015 20:37:35 +0000"  >&lt;p&gt;OK as of &lt;a href=&quot;https://github.com/louiscryan/hbase/commit/e2dae9e8e3f648125f1e13e0ff88944935ad39a3&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/louiscryan/hbase/commit/e2dae9e8e3f648125f1e13e0ff88944935ad39a3&lt;/a&gt;  I have a working client. &lt;/p&gt;

&lt;p&gt;You can run it with lots of cycles just don&apos;t make the payloads too large until&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/netty/netty/issues/3643&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/netty/netty/issues/3643&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;is fixed.&lt;/p&gt;</comment>
                            <comment id="14565712" author="lryan" created="Sat, 30 May 2015 00:29:39 +0000"  >&lt;p&gt;Been busy with performance tuning in GRPC over the last few weeks but am finally back at this.&lt;/p&gt;

&lt;p&gt;Just a quick update on performance. I&apos;m comparing TestIPC to my own TestGRPC using 10000 cycles and 5 cells. On my local box&lt;/p&gt;

&lt;p&gt;ipc.TestIPC(154): Cycled 10000 time(s) with 5 cell(s) in 7812ms&lt;br/&gt;
ipc.TestGRPC(147): Cycled 10000 time(s) with 5 cell(s) in 8602ms &lt;br/&gt;
ipc.TestGRPC(193): ASYNC 1000-concurrent : Cycled 10000 time(s) with 5 cell(s) in 863ms&lt;/p&gt;

&lt;p&gt;For a straight blocking calls we&apos;re ~10% slower than the existing IPC mechanism which is not entirely surprising given the overheads of HTTP2. There are some pending changes which should get us close to parity in the next couple of weeks.&lt;/p&gt;

&lt;p&gt;The third number (863ms) is for when we issue batches of 1000 calls in parallel to the server over the same connection which the GRPC binding lets you do very easily.&lt;/p&gt;</comment>
                            <comment id="15311285" author="vincentpoon" created="Wed, 1 Jun 2016 22:48:40 +0000"  >&lt;p&gt;Any update on this?  I was looking into using gRPC for streaming replication data, but it&apos;d be nicer to have a full gRpcServer instead of doing a one-off for replication.&lt;/p&gt;</comment>
                            <comment id="15311310" author="lryan" created="Wed, 1 Jun 2016 22:56:40 +0000"  >&lt;p&gt;We&apos;re working on getting the GRPC 1.0 release out at which point Ill update&lt;br/&gt;
my GRPC server impl. This will be done in conjunction with some of the&lt;br/&gt;
zero-copy buffer support we&apos;ve done in protobuf that stack is aware of.&lt;br/&gt;
Probably mid-July.&lt;/p&gt;

&lt;p&gt;If someone has cycles I can share what I have so far&lt;/p&gt;

</comment>
                            <comment id="15312795" author="apurtell" created="Thu, 2 Jun 2016 18:07:50 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=louiscryan&quot; class=&quot;user-hover&quot; rel=&quot;louiscryan&quot;&gt;Louis Ryan&lt;/a&gt;, if you are able to share what you have so far, even if a rough work in progress, that would help others like &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vincentpoon&quot; class=&quot;user-hover&quot; rel=&quot;vincentpoon&quot;&gt;Vincent Poon&lt;/a&gt; interested in this area get an idea of the state of things.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Apr 2015 00:39:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            28 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2d8wn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>