<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:13:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3851/HBASE-3851.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3851] A Random-Access Column Object Model</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3851</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;By design, a value in HBase is an opaque and atomic byte array. In theory, any arbitrary type can potentially be represented in terms of such unstructured yet indivisible units. However, as the complexity of the type increases, so does the need to access it in parts rather than in whole. That way, one can update parts of a value without reading the whole first. This calls for transparency in the type of data being accessed.&lt;/p&gt;

&lt;p&gt;To that end, we introduce here a simple object model where each part maps to a &lt;tt&gt;HTable&lt;/tt&gt; column and value thereof. Specifically, we define a &lt;tt&gt;ColumnObject&lt;/tt&gt; interface that denotes an arbitrary type comprising properties, where each property is a &lt;tt&gt;&amp;lt;name, value&amp;gt;&lt;/tt&gt; tuple of byte arrays. In essence, each property maps to a distinct HBase &lt;tt&gt;KeyValue&lt;/tt&gt;. In particular, the property&apos;s name maps to a column, prefixed by the qualifier and the object&apos;s identifier (assumed to be unique within a column family), and the property&apos;s value maps to the &lt;tt&gt;KeyValue#getValue()&lt;/tt&gt; of the corresponding column. Furthermore, the &lt;tt&gt;ColumnObject&lt;/tt&gt; is marked as a &lt;tt&gt;RandomAccess&lt;/tt&gt; type to underscore the fact that its properties can be accessed in and of themselves.&lt;/p&gt;

&lt;p&gt;For starters, we provide three concrete objects - a &lt;tt&gt;ColumnMap&lt;/tt&gt;, &lt;tt&gt;ColumnList&lt;/tt&gt; and &lt;tt&gt;ColumnSet&lt;/tt&gt; that implement the &lt;tt&gt;Map&lt;/tt&gt;, &lt;tt&gt;List&lt;/tt&gt; and &lt;tt&gt;Set&lt;/tt&gt; interfaces respectively. The &lt;tt&gt;ColumnMap&lt;/tt&gt; treats each &lt;tt&gt;Map.Entry&lt;/tt&gt; as an object property, the &lt;tt&gt;ColumnList&lt;/tt&gt; stores each element against its ordinal position, and the &lt;tt&gt;ColumnSet&lt;/tt&gt; considers each element as the property name (as well as its value). For the sake of convenience, we also define extensions to the &lt;tt&gt;Get&lt;/tt&gt;, &lt;tt&gt;Put&lt;/tt&gt;, &lt;tt&gt;Delete&lt;/tt&gt; and &lt;tt&gt;Result&lt;/tt&gt; classes that are aware of and know how to deal with such &lt;tt&gt;ColumnObject&lt;/tt&gt; types.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12506121">HBASE-3851</key>
            <summary>A Random-Access Column Object Model</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="karthick">Karthick Sankarachary</assignee>
                                    <reporter username="karthick">Karthick Sankarachary</reporter>
                        <labels>
                            <label>HBase</label>
                            <label>Mapping</label>
                            <label>Object</label>
                    </labels>
                <created>Tue, 3 May 2011 23:36:30 +0000</created>
                <updated>Wed, 5 Sep 2012 18:07:15 +0000</updated>
                            <resolved>Wed, 5 Sep 2012 18:07:15 +0000</resolved>
                                    <version>0.92.0</version>
                                                    <component>Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13028627" author="tlipcon" created="Wed, 4 May 2011 06:12:04 +0000"  >&lt;p&gt;Sorry, I don&apos;t quite understand the motivation of this. As entirely client-side code, this seems like it might be a useful abstraction for some folks, but could live outside of HBase proper (eg a github project?)&lt;/p&gt;</comment>
                            <comment id="13030807" author="karthick" created="Mon, 9 May 2011 16:56:14 +0000"  >&lt;p&gt;Basically, the goal here is to reduce the number of round trips between the client and region servers. By way of example, let&apos;s say we&apos;ve a table of user profiles, where the profile includes the users interests (a set of things they like) and portfolio (a map of stock symbol to price paid). If we put their interests (or portfolio) in a single column, then every time we want to add/remove an interest (stock), we&apos;ll most likely need to read that column prior to updating it. On the other hand, if we break down the interests (portfolio) into multiple columns, one for each element in the set (map), then that will allow us to add/remove elements without reading the entire collection first.&lt;/p&gt;

&lt;p&gt;Having said that, I took a look at the object-mappings proposed for some of the other NoSQL databases, and they all happen to live outside of the project proper. In light of that, I&apos;ll do as you suggested, and put this on github. If you&apos;d like to revisit this down the road, please feel free to re-open this.&lt;/p&gt;</comment>
                            <comment id="13047713" author="stack" created="Fri, 10 Jun 2011 22:58:25 +0000"  >&lt;p&gt;Moving out of 0.92.  Move it back in if you think differently.&lt;/p&gt;</comment>
                            <comment id="13047725" author="stack" created="Fri, 10 Jun 2011 22:58:27 +0000"  >&lt;p&gt;Moving out of 0.92.  Move it back in if you think differently.&lt;/p&gt;</comment>
                            <comment id="13448944" author="lhofhansl" created="Wed, 5 Sep 2012 18:07:15 +0000"  >&lt;p&gt;Closing, as suggested.&lt;br/&gt;
@Karthik: Do you want to attach the github link you mentioned?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12478109" name="HBASE-3851.patch" size="55032" author="karthick" created="Tue, 3 May 2011 23:38:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 4 May 2011 06:12:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33234</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 15 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ho6v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101181</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>