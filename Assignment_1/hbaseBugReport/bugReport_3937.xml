<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:14:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3937/HBASE-3937.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3937] Region PENDING-OPEN timeout with un-expected ZK node state leads to an endless loop</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3937</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I describe the scenario of how this problem happened:&lt;/p&gt;

&lt;p&gt;1.HMaster assigned the region A to RS1. So the RegionState was set to PENDING_OPEN.&lt;br/&gt;
2.For there&apos;s too many opening requests, the open process on RS1 was blocked.&lt;br/&gt;
3.Some time later, TimeoutMonitor found the assigning of A was timeout. For the RegionState was in PENDING_OPEN, went into the following handler process(Just put the region into an waiting-assigning set):&lt;/p&gt;

&lt;p&gt;   case PENDING_OPEN:&lt;br/&gt;
      LOG.info(&quot;Region has been PENDING_OPEN for too &quot; +&lt;br/&gt;
          &quot;long, reassigning region=&quot; +&lt;br/&gt;
          regionInfo.getRegionNameAsString());&lt;br/&gt;
      assigns.put(regionState.getRegion(), Boolean.TRUE);&lt;br/&gt;
      break;&lt;br/&gt;
So we can see that, under this case, we consider the ZK node state was OFFLINE. Indeed, in an normal disposal, it&apos;s OK.&lt;/p&gt;

&lt;p&gt;4.But before the real-assigning, the requests of RS1 was disposed. So that affected the new-assigning. For it update the ZK node state from OFFLINE to OPENING. &lt;/p&gt;

&lt;p&gt;5.The new assigning started, so it send region to open in RS2. But while the opening, it should update the ZK node state from OFFLINE to OPENING. For the current state is OPENING, so this operation failed.&lt;br/&gt;
So this region couldn&apos;t be open success anymore.&lt;/p&gt;

&lt;p&gt;So I think, to void this problem , under the case of PENDING_OPEN of TiemoutMonitor, we should transform the ZK node state to OFFLINE first.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12508779">HBASE-3937</key>
            <summary>Region PENDING-OPEN timeout with un-expected ZK node state leads to an endless loop</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="jeason">Jieshan Bean</assignee>
                                    <reporter username="jeason">Jieshan Bean</reporter>
                        <labels>
                    </labels>
                <created>Tue, 31 May 2011 01:46:50 +0000</created>
                <updated>Mon, 23 Sep 2013 19:07:22 +0000</updated>
                            <resolved>Tue, 23 Apr 2013 23:44:18 +0000</resolved>
                                    <version>0.90.3</version>
                                                    <component>master</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13041851" author="jdcryans" created="Tue, 31 May 2011 21:42:25 +0000"  >&lt;p&gt;Yeah TimeoutMonitor is really prone to race conditions...&lt;/p&gt;

&lt;p&gt;So would changing this line in TimeoutMonitor.chore fix it?&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;HRegionInfo, &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;&amp;gt; e: assigns.entrySet()){
  assign(e.getKey(), &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, e.getValue());
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;HRegionInfo, &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;&amp;gt; e: assigns.entrySet()){
  assign(e.getKey(), &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;, e.getValue());
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13041909" author="jeason" created="Wed, 1 Jun 2011 00:28:20 +0000"  >&lt;p&gt;I have thought about that. But I&apos;m afraid another problem. For it force all the ZK nodes related to the regions in RIT to Offline each time. If the original state is Offline, it will reset again. I don&apos;t know whether it is a problem.&lt;/p&gt;</comment>
                            <comment id="13041952" author="jeason" created="Wed, 1 Jun 2011 02:34:06 +0000"  >&lt;p&gt;How about just modify the case of PENDING_OPEN as following? Or just modified the assign method suggested by J-D? &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; case PENDING_OPEN:
                LOG.info(&quot;Region has been PENDING_OPEN for too &quot; +
                    &quot;long, reassigning region=&quot; +
                    regionInfo.getRegionNameAsString());
                
                // when is the ZK of state OPENING or others,Change into OFFLINE
                String pendingNode = ZKAssign.getNodeName(watcher,
                    regionInfo.getEncodedName());
                Stat pendingStat = new Stat();
                try {
                  RegionTransitionData pendingData = ZKAssign.getDataNoWatch(
                      watcher, pendingNode, pendingStat);
                  if ((null != pendingData)
                      &amp;amp;&amp;amp; (pendingData.getEventType() != EventType.M_ZK_REGION_OFFLINE)) {
                    pendingData = new RegionTransitionData(
                        EventType.M_ZK_REGION_OFFLINE,
                        regionInfo.getRegionName(), master.getServerName());
                    if (ZKUtil.setData(watcher, pendingNode,
                        pendingData.getBytes(), pendingStat.getVersion())) {
                      // Node is now OFFLINE, let&apos;s trigger another assignment
                      ZKUtil.getDataAndWatch(watcher, pendingNode);
                      LOG.info(&quot;Successfully transitioned region=&quot;
                          + regionInfo.getRegionNameAsString() + &quot; from &quot;
                          + pendingData.getEventType()
                          + &quot; to OFFLINE and forcing a new assignment.&quot;);
                    }
                  }
                } catch (KeeperException ke) {
                  LOG.error(&quot;ZK KeeperException timing out CLOSING region&quot;, ke);
                }
                
                assigns.put(regionState.getRegion(), Boolean.TRUE);
                break;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13042478" author="jdcryans" created="Wed, 1 Jun 2011 22:12:20 +0000"  >&lt;p&gt;I&apos;m not sure that patch would be better, starting with the fact that it copies a bunch of code from the next switch case.&lt;/p&gt;

&lt;p&gt;Thinking more about this problem, I believe that in your original case you almost had a double assignment (and the patch you propose would really make it a double assignment).&lt;/p&gt;

&lt;p&gt;Let&apos;s say the region times out on PENDING_OPEN but by the time it gets processed it&apos;s already opened by the RS. What you had originally is that it will keep bouncing because RS2 can&apos;t open the region, but now it should be able to assign it since the ZK state is cleared.&lt;/p&gt;

&lt;p&gt;It&apos;s still unclear to me why your RS1 didn&apos;t go through and finally opened it (it should be in your logs tho), but we have to consider both possibilities.&lt;/p&gt;

&lt;p&gt;I&apos;m starting to think that there won&apos;t be any easy solution, we need to rewrite how TimeoutMonitor does its thing. Anything else would just be bandaids that will never fix all the problems.&lt;/p&gt;

&lt;p&gt;The way it should work is the following:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It should not create a list of unassigns and assigns, since by the time the list is processed the situation probably changed (I witnessed that a lot).&lt;/li&gt;
	&lt;li&gt;This means the action should be taken as we go through first loop.&lt;/li&gt;
	&lt;li&gt;One of the major issues is the lack of atomicity, so any action taken should first check the current state, keep the version number, decide of the corrective measure and update the znode by expecting the version it first got.&lt;/li&gt;
	&lt;li&gt;If the updating of the znode is successful, we know for sure that the operation will be seen by the region servers.&lt;/li&gt;
	&lt;li&gt;If it&apos;s not successful, the situation needs to be reassessed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is clearly not something for 0.90, that&apos;s one of the reasons in 0.90.3 we set the timeout much higher than 30 seconds. That&apos;s my conclusion at the end of &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3669&quot; title=&quot;Region in PENDING_OPEN keeps being bounced between RS and master&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3669&quot;&gt;&lt;del&gt;HBASE-3669&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13064358" author="stack" created="Wed, 13 Jul 2011 05:02:25 +0000"  >&lt;p&gt;Moving out of 0.90.4 at J-D&apos;s suggestion.  Move it back in if you think different Jieshan.&lt;/p&gt;</comment>
                            <comment id="13234844" author="lhofhansl" created="Wed, 21 Mar 2012 18:45:27 +0000"  >&lt;p&gt;No movement in over 8 months. Moving out of 0.94.&lt;/p&gt;</comment>
                            <comment id="13444467" author="lhofhansl" created="Wed, 29 Aug 2012 22:06:39 +0000"  >&lt;p&gt;@Jieshan, J-D: are you guys still working on this? Is it still a problem?&lt;/p&gt;</comment>
                            <comment id="13639845" author="stack" created="Tue, 23 Apr 2013 23:44:18 +0000"  >&lt;p&gt;Resolving as invalid.  A bunch of work has been done in AM since 0.90.  This issue if it still exists will have a new form.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 31 May 2011 21:42:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27097</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 34 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02c3z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11563</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>