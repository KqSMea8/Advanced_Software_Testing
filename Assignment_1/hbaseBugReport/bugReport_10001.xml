<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:09:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-10001/HBASE-10001.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-10001] Add a coprocessor to help testing the performances without taking into account the i/o</title>
                <link>https://issues.apache.org/jira/browse/HBASE-10001</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;We have a mockup to test only the client. If we want to include the network, without beeing limited by the i/o, we don&apos;t have much tools.&lt;/p&gt;

&lt;p&gt;This coprocessor helps to test this.&lt;/p&gt;

&lt;p&gt;I put it in the main code as to make it usable without adding a jar...&lt;/p&gt;

&lt;p&gt;I don&apos;t think it&apos;s possible avoid the WAL writes in the coprocessors. It would be great to have it to simplify the test with any kind of client (i.e. w/o changing the durability).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12679971">HBASE-10001</key>
            <summary>Add a coprocessor to help testing the performances without taking into account the i/o</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nkeywal">Nicolas Liochon</assignee>
                                    <reporter username="nkeywal">Nicolas Liochon</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 Nov 2013 15:13:42 +0000</created>
                <updated>Wed, 18 Dec 2013 22:53:27 +0000</updated>
                            <resolved>Wed, 20 Nov 2013 11:40:51 +0000</resolved>
                                    <version>0.98.0</version>
                    <version>0.96.0</version>
                    <version>0.94.13</version>
                                    <fixVersion>0.98.0</fixVersion>
                    <fixVersion>0.96.1</fixVersion>
                    <fixVersion>0.94.15</fixVersion>
                                    <component>test</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13826602" author="anoop.hbase" created="Tue, 19 Nov 2013 15:34:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;private static final Log LOG = LogFactory.getLog(BaseRegionObserver.class);&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You want LogFactory.getLog(WriteSinkCoprocessor.class); ?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if (coprocessorHost.prePut((Put) m, walEdit, m.getDurability())) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {
            // pre hook says skip this Put
            // mark as success and skip in doMiniBatchMutation
            batchOp.retCodeDetails[i] = OperationStatus.SUCCESS;
          }&lt;/span&gt; &lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;You can use prePut() hook and do a bypass from there so that even WAL write also can be avoided?&lt;/p&gt;</comment>
                            <comment id="13826609" author="nkeywal" created="Tue, 19 Nov 2013 15:41:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;You want LogFactory.getLog(WriteSinkCoprocessor.class); ?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You can use prePut() hook and do a bypass from there so that even WAL write also can be avoided?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Great, let me update the patch.&lt;/p&gt;</comment>
                            <comment id="13826618" author="apurtell" created="Tue, 19 Nov 2013 15:47:33 +0000"  >&lt;p&gt;IIRC you can also modify the put in the pre hook: put.writeToWAL(false)&lt;/p&gt;</comment>
                            <comment id="13826643" author="nkeywal" created="Tue, 19 Nov 2013 16:20:52 +0000"  >&lt;p&gt;Actually, if I read correctly the code in HRegion, just marking the operations as success as I do in the v1 is enough:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// ------------------------------------
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// STEP 4. Build WAL edit
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// ----------------------------------
&lt;/span&gt;      &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; hasWalAppends = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      Durability durability = Durability.USE_DEFAULT;
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = firstIndex; i &amp;lt; lastIndexExclusive; i++) {
        &lt;span class=&quot;code-comment&quot;&gt;// Skip puts that were determined to be invalid during preprocessing
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (batchOp.retCodeDetails[i].getOperationStatusCode()
            != OperationStatusCode.NOT_RUN) {           &lt;span class=&quot;code-comment&quot;&gt;// &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;========= &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the copro marked it as SUCCESS we don&apos;t write it to the WAL.
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13826652" author="anoop.hbase" created="Tue, 19 Nov 2013 16:35:15 +0000"  >&lt;p&gt;Oh yes.. preBatchMutation is called before WAL write. So this is just fine.&lt;/p&gt;</comment>
                            <comment id="13826654" author="nkeywal" created="Tue, 19 Nov 2013 16:38:00 +0000"  >&lt;p&gt;Thanks for the confirmation, I&apos;m going to update the comments &amp;amp; upload the v2 then.&lt;/p&gt;</comment>
                            <comment id="13826867" author="hadoopqa" created="Tue, 19 Nov 2013 19:51:08 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12614646/10001.v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12614646/10001.v2.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 9 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the trunk&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 site&lt;/font&gt;.  The patch appears to cause mvn site goal to fail.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.security.visibility.TestVisibilityLabels&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/7934//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13827426" author="nkeywal" created="Wed, 20 Nov 2013 08:14:57 +0000"  >&lt;p&gt;I forgot the license. I can add it on commit.&lt;br/&gt;
The test failure is unrelated.&lt;/p&gt;

&lt;p&gt;Any feedback on this? If it&apos;s ok, I would like to include it in 0.94 as well to help comparing the performances w/o being impacted by the disk i/o.&lt;/p&gt;</comment>
                            <comment id="13827434" author="anoop.hbase" created="Wed, 20 Nov 2013 08:28:41 +0000"  >&lt;p&gt;+1&lt;br/&gt;
Pls add description (release notes) on how this can be used.&lt;/p&gt;</comment>
                            <comment id="13827578" author="nkeywal" created="Wed, 20 Nov 2013 11:40:51 +0000"  >&lt;p&gt;Committed, thanks for the review and the help, Anoop and Andrew.&lt;/p&gt;</comment>
                            <comment id="13827797" author="hudson" created="Wed, 20 Nov 2013 16:06:29 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK #4689 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4689/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4689/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10001&quot; title=&quot;Add a coprocessor to help testing the performances without taking into account the i/o&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10001&quot;&gt;&lt;del&gt;HBASE-10001&lt;/del&gt;&lt;/a&gt; Add a coprocessor to help testing the performances without taking into account the disk i/o (nkeywal: rev 1543779)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/tool/WriteSinkCoprocessor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13827851" author="lhofhansl" created="Wed, 20 Nov 2013 17:05:16 +0000"  >&lt;p&gt;This is targeted to 0.94, 0.96, and 0.98, but I see only the 0.98 commit.&lt;/p&gt;</comment>
                            <comment id="13827855" author="nkeywal" created="Wed, 20 Nov 2013 17:08:37 +0000"  >&lt;p&gt;Yes, I&apos;m going to do it for 0.94 as well (today)&lt;/p&gt;</comment>
                            <comment id="13827862" author="hudson" created="Wed, 20 Nov 2013 17:18:16 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.96 #197 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96/197/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96/197/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10001&quot; title=&quot;Add a coprocessor to help testing the performances without taking into account the i/o&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10001&quot;&gt;&lt;del&gt;HBASE-10001&lt;/del&gt;&lt;/a&gt; Add a coprocessor to help testing the performances without taking into account the disk i/o (nkeywal: rev 1543778)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-server/src/main/java/org/apache/hadoop/hbase/tool/WriteSinkCoprocessor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13827933" author="nkeywal" created="Wed, 20 Nov 2013 18:23:14 +0000"  >&lt;p&gt;There is a bug linked to this:&lt;br/&gt;
in HRegion#doMiniBatchMutation:&lt;br/&gt;
we start with:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; walSyncSuccessful = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;if the preBatch hook call byPass, we then return immediately, because of this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (coprocessorHost.preBatchMutate(miniBatchOp)) &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 0L;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then the finally clause is executed with walSyncSuccessful set to false, and then we try to rollback the memstore.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!walSyncSuccessful) {
        rollbackMemstore(batchOp, familyMaps, firstIndex, lastIndexExclusive);
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In my load test, we&apos;re spending 15% of our time in the rollback.&lt;/p&gt;

&lt;p&gt;I can fix this in the coprocessor (by not setting bypass), but I think we should set the value of walSyncSuccessful later, just before we try to write something in the memstore:&lt;/p&gt;


&lt;p&gt;Any opinion? I can do the fix in HRegion#doMiniBatchMutation or in the coprocessor.&lt;/p&gt;
</comment>
                            <comment id="13827960" author="lhofhansl" created="Wed, 20 Nov 2013 18:44:20 +0000"  >&lt;p&gt;We should fix it in HRegion, I think.&lt;br/&gt;
Are you planning to change it into the Boolean (capital B) to have a way to indicate that we do not care, yet? Or have another flag (skippedByCoProc or something)? Or we could set walSyncSuccessful right before we return due to a coproc bypass.&lt;/p&gt;</comment>
                            <comment id="13827974" author="nkeywal" created="Wed, 20 Nov 2013 18:56:14 +0000"  >&lt;p&gt;I was thinking about something like this:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;@@ -2024,7 +2024,7 @@ public class HRegion implements HeapSize { // , Writable{
     WALEdit walEdit = new WALEdit(isInReplay);
     MultiVersionConsistencyControl.WriteEntry w = null;
     long txid = 0;
-    boolean walSyncSuccessful = false;
+    boolean doRollBackMemstore = false;
     boolean locked = false;

     /** Keep track of the locks we hold so we can release them in finally clause */
@@ -2185,6 +2185,7 @@ public class HRegion implements HeapSize { // , Writable{
             != OperationStatusCode.NOT_RUN) {
           continue;
         }
+        doRollBackMemstore = true; // If we have a failure, we need to clean what we wrote
         addedSize += applyFamilyMapToMemstore(familyMaps[i], w);
       }

@@ -2244,7 +2245,7 @@ public class HRegion implements HeapSize { // , Writable{
       if (walEdit.size() &amp;gt; 0) {
         syncOrDefer(txid, durability);
       }
-      walSyncSuccessful = true;
+      doRollBackMemstore = false;
       // calling the post CP hook for batch mutation
       if (!isInReplay &amp;amp;&amp;amp; coprocessorHost != null) {
         MiniBatchOperationInProgress&amp;lt;Mutation&amp;gt; miniBatchOp =
@@ -2286,7 +2287,7 @@ public class HRegion implements HeapSize { // , Writable{
     } finally {

       // if the wal sync was unsuccessful, remove keys from memstore
-      if (!walSyncSuccessful) {
+      if (doRollBackMemstore) {
         rollbackMemstore(batchOp, familyMaps, firstIndex, lastIndexExclusive);
       }
       if (w != null) mvcc.completeMemstoreInsert(w);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What do you think?&lt;br/&gt;
In any case, since we agree that it should be on HRegion, let me create another jira (as I need to commit the coprocessor for 0.94 here &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;</comment>
                            <comment id="13828028" author="lhofhansl" created="Wed, 20 Nov 2013 19:39:42 +0000"  >&lt;p&gt;+1 on that change. And +1 on a different jira &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13828327" author="hudson" created="Thu, 21 Nov 2013 00:21:59 +0000"  >&lt;p&gt;SUCCESS: Integrated in hbase-0.96-hadoop2 #126 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.96-hadoop2/126/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.96-hadoop2/126/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10001&quot; title=&quot;Add a coprocessor to help testing the performances without taking into account the i/o&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10001&quot;&gt;&lt;del&gt;HBASE-10001&lt;/del&gt;&lt;/a&gt; Add a coprocessor to help testing the performances without taking into account the disk i/o (nkeywal: rev 1543778)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.96/hbase-server/src/main/java/org/apache/hadoop/hbase/tool/WriteSinkCoprocessor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13828334" author="hudson" created="Thu, 21 Nov 2013 00:31:29 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #845 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/845/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/845/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10001&quot; title=&quot;Add a coprocessor to help testing the performances without taking into account the i/o&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10001&quot;&gt;&lt;del&gt;HBASE-10001&lt;/del&gt;&lt;/a&gt; Add a coprocessor to help testing the performances without taking into account the disk i/o (nkeywal: rev 1543779)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/tool/WriteSinkCoprocessor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13828623" author="hudson" created="Thu, 21 Nov 2013 09:12:44 +0000"  >&lt;p&gt;SUCCESS: Integrated in HBase-0.94-security #343 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94-security/343/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94-security/343/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10001&quot; title=&quot;Add a coprocessor to help testing the performances without taking into account the i/o&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10001&quot;&gt;&lt;del&gt;HBASE-10001&lt;/del&gt;&lt;/a&gt; Add a coprocessor to help testing the performances without taking into account the disk i/o (nkeywal: rev 1543936)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/tool/WriteSinkCoprocessor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13828644" author="hudson" created="Thu, 21 Nov 2013 09:47:38 +0000"  >&lt;p&gt;FAILURE: Integrated in HBase-0.94 #1209 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.94/1209/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.94/1209/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-10001&quot; title=&quot;Add a coprocessor to help testing the performances without taking into account the i/o&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-10001&quot;&gt;&lt;del&gt;HBASE-10001&lt;/del&gt;&lt;/a&gt; Add a coprocessor to help testing the performances without taking into account the disk i/o (nkeywal: rev 1543936)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.94/src/main/java/org/apache/hadoop/hbase/tool/WriteSinkCoprocessor.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13849515" author="stack" created="Mon, 16 Dec 2013 18:46:49 +0000"  >&lt;p&gt;Released in 0.96.1.  Issue closed.&lt;/p&gt;</comment>
                            <comment id="13849919" author="stack" created="Tue, 17 Dec 2013 00:29:18 +0000"  >&lt;p&gt;So, was there an addendum on this Nicolas?   Or was the trunk patch what went into 0.96?  Thanks.&lt;/p&gt;</comment>
                            <comment id="13850290" author="nkeywal" created="Tue, 17 Dec 2013 09:32:48 +0000"  >&lt;p&gt;Yes, it was the same patch for 0.96 &amp;amp; trunk.&lt;/p&gt;</comment>
                            <comment id="13852258" author="stack" created="Wed, 18 Dec 2013 22:53:27 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12614634" name="10001.v1.patch" size="2814" author="nkeywal" created="Tue, 19 Nov 2013 15:14:40 +0000"/>
                            <attachment id="12614976" name="10001.v2.094.patch" size="3339" author="nkeywal" created="Wed, 20 Nov 2013 20:20:02 +0000"/>
                            <attachment id="12614646" name="10001.v2.patch" size="2733" author="nkeywal" created="Tue, 19 Nov 2013 16:50:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 19 Nov 2013 15:34:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>359328</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1py0v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>359627</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>New coprocessor to help analysing the performances of the cluster. This coprocessor drops all the writes on the server side, allowing the measure the client and network performances without any limitation on the disk i/o. For a table created like this: create &amp;#39;usertable&amp;#39;, {NAME =&amp;gt; &amp;#39;f1&amp;#39;, VERSIONS =&amp;gt; 1}  . You can then add the coprocessor with this command:&lt;br/&gt;
alter &amp;#39;usertable&amp;#39;, &amp;#39;coprocessor&amp;#39; =&amp;gt; &amp;#39;|org.apache.hadoop.hbase.tool.WriteSinkCoprocessor|&amp;#39;</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>