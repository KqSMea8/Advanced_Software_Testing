<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:51:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-14279/HBASE-14279.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-14279] Race condition in ConcurrentIndex</title>
                <link>https://issues.apache.org/jira/browse/HBASE-14279</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;&lt;tt&gt;ConcurrentIndex.put&lt;/tt&gt; and &lt;tt&gt;remove&lt;/tt&gt; are in race condition. It is possible to remove a non-empty set, and to add a value to a removed set. Also &lt;tt&gt;ConcurrentIndex.values&lt;/tt&gt; is vague in sense that the returned set sometimes trace the current state and sometimes doesn&apos;t.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12857782">HBASE-14279</key>
            <summary>Race condition in ConcurrentIndex</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="ikeda">Hiroshi Ikeda</assignee>
                                    <reporter username="ikeda">Hiroshi Ikeda</reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Aug 2015 08:08:51 +0000</created>
                <updated>Thu, 30 Jun 2016 18:10:05 +0000</updated>
                            <resolved>Thu, 30 Jun 2016 18:10:05 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="14706430" author="chenheng" created="Fri, 21 Aug 2015 09:01:37 +0000"  >&lt;p&gt;yeah...  maybe we can replace &lt;tt&gt;ConcurrentMap&amp;lt;K, Set&amp;lt;V&amp;gt;&amp;gt; container;&lt;/tt&gt; with &lt;tt&gt;ConcurrentMap&amp;lt;K, Pair&amp;lt;Object, Set&amp;lt;V&amp;gt;&amp;gt;&amp;gt; container;&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;Pair.getFirst()&lt;/tt&gt; is Lock for current key.  &lt;tt&gt;Pair.getSecond()&lt;/tt&gt; is real set.&lt;/p&gt;</comment>
                            <comment id="14709066" author="ikeda" created="Mon, 24 Aug 2015 10:16:57 +0000"  >&lt;p&gt;It is better to use lock striping because the type of internal sets are arbitrary and it is not possible to just take a snapshot by the &lt;tt&gt;values&lt;/tt&gt; method, or change the specification at all.&lt;/p&gt;</comment>
                            <comment id="14710691" author="chenheng" created="Tue, 25 Aug 2015 06:34:25 +0000"  >&lt;p&gt;May I upload a patch ? &lt;/p&gt;</comment>
                            <comment id="14710787" author="ikeda" created="Tue, 25 Aug 2015 07:29:35 +0000"  >&lt;p&gt;Go ahead &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14710925" author="chenheng" created="Tue, 25 Aug 2015 08:57:39 +0000"  >&lt;p&gt;first try for the issue.&lt;/p&gt;

&lt;p&gt;Could you help me review the patch, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;? Thanks&lt;/p&gt;</comment>
                            <comment id="14712256" author="ikeda" created="Wed, 26 Aug 2015 00:42:29 +0000"  >&lt;p&gt;Exclusive access is required to lock the same object with threads, and you cannot prevent from adding/removing a element to/from the concurrent collections with locking an object which may be already replaced after you get it.&lt;/p&gt;

&lt;p&gt;Sorry I have no time just now, and details later.&lt;/p&gt;</comment>
                            <comment id="14716135" author="ikeda" created="Thu, 27 Aug 2015 06:03:36 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void put(K key, V value) {
    ...
    Pair&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;, Set&amp;lt;V&amp;gt;&amp;gt; existing = container.putIfAbsent(key, lockAndSet);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (existing != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (existing.getFirst()) {
        existing = container.get(key); &lt;span class=&quot;code-comment&quot;&gt;//Re check &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the key is associate with the set.
&lt;/span&gt;        ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think you recognize that, the element given from &lt;tt&gt;container.putIfAbset&lt;/tt&gt; might be removed the next moment, so that you lock and re-check. But in that case you just lock the obsolete object that is already removed from the container, and you cannot prevent the other overtaking threads from replacing the element.&lt;/p&gt;

&lt;p&gt;Even if you would again lock the object inside the re-checked element, the rechecked element may be also removed from the container the next moment for the same reason, and the code should be as follows:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void put(K key, V value) {
    ...
    Pair&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;, Set&amp;lt;V&amp;gt;&amp;gt; existing = container.putIfAbsent(key, lockAndSet);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (existing != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (existing.getFirst()) {
        existing = container.putIfAbsent(key, lockAndSet);

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (existing != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
          &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt; (existing.getFirst()) {
            existing = container.putIfAbsent(key, lockAndSet);
            ...

            (It continues to infinity.)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After all, you cannot atomically add/remove elements with some additional processing under locking objects inside the container.&lt;/p&gt;</comment>
                            <comment id="14716198" author="chenheng" created="Thu, 27 Aug 2015 07:10:09 +0000"  >&lt;blockquote&gt;
&lt;p&gt; But in that case you just lock the obsolete object that is already removed from the container, and you cannot prevent the other overtaking threads from replacing the element.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see....  I think we can use something like &lt;tt&gt;IdLock&lt;/tt&gt; to lock &lt;tt&gt;Set&lt;/tt&gt; associate with some one key.  &lt;/p&gt;

&lt;p&gt;I will update the patch.&lt;/p&gt;</comment>
                            <comment id="14716312" author="chenheng" created="Thu, 27 Aug 2015 08:58:54 +0000"  >&lt;p&gt;Update patch by reference to &lt;tt&gt;IdLock&lt;/tt&gt; &lt;/p&gt;</comment>
                            <comment id="14718316" author="ikeda" created="Fri, 28 Aug 2015 10:16:11 +0000"  >&lt;p&gt;There is a similar class, &lt;tt&gt;KeyLoccker&lt;/tt&gt;, whose key type is a generic one, and you can use it without copying its implementation logic. The implementation of &lt;tt&gt;IdLocker&lt;/tt&gt; and &lt;tt&gt;KeyLocker&lt;/tt&gt; is not good and should be re-written, and I believe it is better to avoid to copy their implementation.&lt;/p&gt;

&lt;p&gt;To begin with, using 2 objects of &lt;tt&gt;ConcurrentHashMap&lt;/tt&gt; is not good because &lt;tt&gt;putIfAbset&lt;/tt&gt; and &lt;tt&gt;remove&lt;/tt&gt; use just lock striping internally, and the periods of time which may cause conflict between threads increases twofold. It is better to manually use lock striping instead of &lt;tt&gt;ConcurrentHashMap&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;BTW, &lt;tt&gt;ConcurrentHashMap.get&lt;/tt&gt; just locks the segment only when accessing a value, and it is an idem to use &lt;tt&gt;get&lt;/tt&gt; before &lt;tt&gt;putIfAbsent&lt;/tt&gt;. This has potentially to reduce granularity of locks, though it seems not trivial to implement.&lt;/p&gt;

&lt;p&gt;There is another thing to concern about. From the point of the view of object-oriented programing, exposing internal values by the method &lt;tt&gt;values&lt;/tt&gt; causes breaking the invariant that the empty set should be removed from the map. It should be defensively copied, though it is required to change the API, and it may also be required to change code of the clients which use this class, making the patch easier to become stale.&lt;/p&gt;</comment>
                            <comment id="14718440" author="hadoopqa" created="Fri, 28 Aug 2015 12:16:49 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12752702/HBASE-14279_v2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12752702/HBASE-14279_v2.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit cc1542828de93b8d54cc14497fd5937989ea1b6d.&lt;br/&gt;
  ATTACHMENT ID: 12752702&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1850 checkstyle errors (more than the master&apos;s current 1849 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;/p&gt;


&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 10 zombie test(s): 	at org.apache.hadoop.hbase.mapreduce.MultiTableInputFormatTestBase.testScan(MultiTableInputFormatTestBase.java:255)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.MultiTableInputFormatTestBase.testScanEmptyToAPP(MultiTableInputFormatTestBase.java:202)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles.testSimpleHFileSplit(TestLoadIncrementalHFiles.java:153)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestRowCounter.testRowCounterExclusiveColumn(TestRowCounter.java:111)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestImportTSVWithVisibilityLabels.testMROnTableWithDeletes(TestImportTSVWithVisibilityLabels.java:182)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles.testRegionCrossingHFileSplit(TestLoadIncrementalHFiles.java:193)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles.testRegionCrossingHFileSplit(TestLoadIncrementalHFiles.java:171)&lt;br/&gt;
	at org.apache.hadoop.hbase.mapreduce.TestLoadIncrementalHFiles.testSimpleHFileSplit(TestLoadIncrementalHFiles.java:153)&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15315//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15315//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15315//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15315//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15315//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15315//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/15315//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/15315//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14723055" author="chenheng" created="Mon, 31 Aug 2015 07:02:31 +0000"  >&lt;blockquote&gt;
&lt;p&gt;There is a similar class, KeyLoccker, whose key type is a generic one, and you can use it without copying its implementation logic. The implementation of IdLocker and KeyLocker is not good and should be re-written, and I believe it is better to avoid to copy their implementation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yeah, you are right.  &lt;tt&gt;KeyLocker&lt;/tt&gt; is a better choice.&lt;/p&gt;</comment>
                            <comment id="14723201" author="chenheng" created="Mon, 31 Aug 2015 08:23:35 +0000"  >&lt;p&gt;It has a problem. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class KeyLocker&amp;lt;K &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Comparable&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt; K&amp;gt;&amp;gt; {

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;KeyLocker require the the &lt;tt&gt;K&lt;/tt&gt; is &lt;tt&gt;Comparable&lt;/tt&gt;,  But key in &lt;tt&gt;ConcurrentIndex&lt;/tt&gt; has no constraint.&lt;/p&gt;</comment>
                            <comment id="14724726" author="ikeda" created="Tue, 1 Sep 2015 03:21:13 +0000"  >&lt;p&gt;Sorry I didn&apos;t realize &lt;tt&gt;KeyLocker&lt;/tt&gt; has such restriction. &lt;tt&gt;KeyLocker&lt;/tt&gt; should not have such restriction.&lt;/p&gt;

&lt;p&gt;Anyway, it is better to use lock striping rather than such lock classes.&lt;/p&gt;</comment>
                            <comment id="14942890" author="ikeda" created="Mon, 5 Oct 2015 02:36:55 +0000"  >&lt;p&gt;Added an example of lock striping.&lt;/p&gt;</comment>
                            <comment id="14942891" author="ikeda" created="Mon, 5 Oct 2015 02:45:02 +0000"  >&lt;p&gt;Oops, &lt;tt&gt;remove&lt;/tt&gt; contains a bug &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14944268" author="chenheng" created="Mon, 5 Oct 2015 23:44:49 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Added an example of lock striping.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Why not use &lt;tt&gt;ConcurrentHashMap&lt;/tt&gt;,  it is realized of lock striping&lt;/p&gt;</comment>
                            <comment id="14944386" author="ikeda" created="Tue, 6 Oct 2015 01:43:20 +0000"  >&lt;p&gt;You cannot freely use the internal striped locks in the ConcurrentHashMap and you have proved that sticking to ConcurrentHashMap results in the surprisingly complex and overheaded logic. Also there is still a problem of breaking the invariant, as mentioned above.&lt;/p&gt;</comment>
                            <comment id="14976171" author="chenheng" created="Tue, 27 Oct 2015 10:24:43 +0000"  >&lt;p&gt;Sorry for being late,  i think we should see what the others talk about? &lt;/p&gt;</comment>
                            <comment id="14988401" author="stack" created="Tue, 3 Nov 2015 23:09:57 +0000"  >&lt;p&gt;Can we get the LockedStripedBag into a state where it could be tried in place of ConcurrentIndex?&lt;/p&gt;</comment>
                            <comment id="14988862" author="ikeda" created="Wed, 4 Nov 2015 04:41:09 +0000"  >&lt;p&gt;I&apos;m ashamed that I used the word &quot;bag&quot; because I just wanted to use a different word than &quot;multimap&quot;, but the Google collections provides the interface &quot;SetMultimap&quot;, which might be an appropriate name.&lt;/p&gt;</comment>
                            <comment id="14991905" author="chenheng" created="Thu, 5 Nov 2015 16:19:31 +0000"  >&lt;p&gt;update patch as &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; code.  &lt;/p&gt;

&lt;p&gt;Sorry again for being late.  &lt;br/&gt;
Maybe we need a testcase for it.&lt;/p&gt;</comment>
                            <comment id="14992097" author="hadoopqa" created="Thu, 5 Nov 2015 17:50:35 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770824/HBASE-14279_v3.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770824/HBASE-14279_v3.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 050ebe850b32057860fb94b46f955352db139db1.&lt;br/&gt;
  ATTACHMENT ID: 12770824&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.io.hfile.bucket.TestBucketCache&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16410//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16410//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16410//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16410//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16410//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16410//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16410//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16410//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14992856" author="ikeda" created="Fri, 6 Nov 2015 01:14:21 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;V&amp;gt; values(K key) {
-    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; container.get(key);
+    Map&amp;lt;K, Set&amp;lt;V&amp;gt;&amp;gt; seg = segments(key);
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; seg.get(key);
   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Defensively copy under the lock of the segment (the reason was already commented a few month ago), and consequently using valueSetFactory is almost meaningless:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      Set&amp;lt;V&amp;gt; set = seg.get(key);
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (set == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+        set = valueSetFactory.get();
+        seg.put(key, set);
       }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14993063" author="chenheng" created="Fri, 6 Nov 2015 04:10:59 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Defensively copy under the lock of the segment &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Make sense,  fix it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;valueSetFactory is almost meaningless&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I don&apos;t think so,  because BucketCache will define sortedSet by itself, so we should pass the comparator into it.&lt;/p&gt;

&lt;p&gt;I add some tests to verify this class. &lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; a lot.   update patch&lt;/p&gt;

</comment>
                            <comment id="14993240" author="hadoopqa" created="Fri, 6 Nov 2015 06:57:59 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12770950/HBASE-14279_v4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12770950/HBASE-14279_v4.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit bfa36891901b96b95d82f5307642c35fd2b9f534.&lt;br/&gt;
  ATTACHMENT ID: 12770950&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated 1728 checkstyle errors (more than the master&apos;s current 1726 errors).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16420//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16420//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16420//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16420//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16420//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16420//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16420//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16420//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="14993241" author="ikeda" created="Fri, 6 Nov 2015 06:58:54 +0000"  >&lt;blockquote&gt;
&lt;p&gt;BucketCache will define sortedSet by itself, so we should pass the comparator into it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oops, I overlooked... Is it important to be able to select between hash-set and sorted-set? Anyway concurrency/synchronized one just gives nothing but overhead, and at least it is required to rewrite the default factory.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;V&amp;gt; values(K key) {
...skip...
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; ImmutableSet.copyOf(set);
+    }
   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think the caller would expect the returned object is created by the given value factory, and some methods might have different behaviors from the immutable set, especially if the caller gives a value factory which creates a sorted set (or a value comparator).&lt;/p&gt;</comment>
                            <comment id="14993268" author="chenheng" created="Fri, 6 Nov 2015 07:20:22 +0000"  >&lt;blockquote&gt;
&lt;p&gt; Is it important to be able to select between hash-set and sorted-set?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah, i think we need to do it as original logic.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think the caller would expect the returned object is created by the given value factory, and some methods might have different behaviors from the immutable set, especially if the caller gives a value factory which creates a sorted set (or a value comparator).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Currently there is only one place to call this method, it is is BucketCache.  After call it, it use ImmutableSet.copyOf(set) to make another set to read.  &lt;/p&gt;

&lt;p&gt;IMO we can return this immutable set directly by ConcurrentIndex.values.   wdyt?   &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14993302" author="ikeda" created="Fri, 6 Nov 2015 07:47:37 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Currently there is only one place to call this method, it is is BucketCache.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think ConcurrentIndex is never appropriate for the package hbase.util. This is a part of BucketCahce and should be placed in the same package of BucketCahce, and it is better to be a package private class. (Fortunately this is still declared as InterfaceAudience.Private.)&lt;/p&gt;

&lt;p&gt;Anyone would not so much complain encapsulated classes&apos; specification as long as they well work together.&lt;/p&gt;</comment>
                            <comment id="14993313" author="chenheng" created="Fri, 6 Nov 2015 07:54:33 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I think ConcurrentIndex is never appropriate for the package hbase.util. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think so.  We really need one DataStructure &apos;multiMapSet&apos;.  And concurrentIndex can do it,  maybe we could add more interface for it.  wdyt? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14995958" author="ikeda" created="Mon, 9 Nov 2015 02:35:59 +0000"  >&lt;p&gt;I&apos;m not sure whether you are creating a class for general usage or for a specific usage. You might pick some of their merits if you make more effort to abstract the class, though it wouldn&apos;t pay.&lt;/p&gt;</comment>
                            <comment id="14996278" author="chenheng" created="Mon, 9 Nov 2015 09:49:55 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;.  Let&apos;s see what the other talk about.   &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14996970" author="stack" created="Mon, 9 Nov 2015 17:34:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;We really need one DataStructure &apos;multiMapSet&apos;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Where else we need this &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chenheng&quot; class=&quot;user-hover&quot; rel=&quot;chenheng&quot;&gt;Heng Chen&lt;/a&gt;? KeyLocker?&lt;/p&gt;

&lt;p&gt;I like the suggestion of taking the class out of util and down into bucketcache package and making it package private ensuring it works well for the BC case. We can then come back and tackle making it general later?&lt;/p&gt;</comment>
                            <comment id="14998045" author="chenheng" created="Tue, 10 Nov 2015 06:29:17 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Where else we need this Heng Chen? KeyLocker?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;yeah,  currently IdLock,  KeyLocker  NOT use MultiMap inside.&lt;br/&gt;
IMO if concurrent conflicts is not heavy,  may be we can use MultiMap to reduce memory used. &lt;/p&gt;

&lt;p&gt;Of course, it has no relates with this issue.  we can come back when we really need to do it.  &lt;/p&gt;

&lt;p&gt;Thanks for your suggestion &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;. &lt;br/&gt;
I will move ConcurrentIndex into BucketCache.  &lt;/p&gt;</comment>
                            <comment id="14998240" author="ikeda" created="Tue, 10 Nov 2015 08:25:01 +0000"  >&lt;p&gt;To tell the truth ConcurrentHashMap is more sophisticated and has advantage to a simple striped map; ConcurrentHashMap.get just has a momentary critical path, and it is a well-known idiom to try get before putIfAbsent. I&apos;m not sure how to implement the similar feature in this issue.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class DefaultValueSetFactory&amp;lt;V&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Supplier&amp;lt;Set&amp;lt;V&amp;gt;&amp;gt; {
...skip...
+      &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;V&amp;gt; get() {
+        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ConcurrentSkipListSet&amp;lt;V&amp;gt;(comparator);
+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using a concurrent or synchronized set wastes completely, because their instances are always accessed under locking segments.&lt;/p&gt;</comment>
                            <comment id="14998256" author="ikeda" created="Tue, 10 Nov 2015 08:37:17 +0000"  >&lt;p&gt;Sorry, these days ConcurrentHashMap seems much more sophisticated using UNSAFE...&lt;/p&gt;</comment>
                            <comment id="14998353" author="hadoopqa" created="Tue, 10 Nov 2015 10:18:12 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12771510/HBASE-14279_v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12771510/HBASE-14279_v5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 112900d0425a8157b89041f0e353ebf5cc259c69.&lt;br/&gt;
  ATTACHMENT ID: 12771510&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;.  The applied patch does not increase the total number of checkstyle errors&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 release audit&lt;/font&gt;.  The applied patch generated 1 release audit warnings (more than the master&apos;s current 0 warnings).&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//testReport/&lt;/a&gt;&lt;br/&gt;
Release audit warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//artifact/patchprocess/patchReleaseAuditWarnings.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//artifact/patchprocess/patchReleaseAuditWarnings.txt&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16475//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15066125" author="chenheng" created="Mon, 21 Dec 2015 07:26:07 +0000"  >&lt;p&gt;Let me  finish this issue.&lt;/p&gt;</comment>
                            <comment id="15066143" author="ikeda" created="Mon, 21 Dec 2015 07:42:12 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Using a concurrent or synchronized set wastes completely, because their instances are always accessed under locking segments.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In addition, using a static nested class spoils some visibility restriction. There is no reason to use a package private class.&lt;/p&gt;</comment>
                            <comment id="15066238" author="hadoopqa" created="Mon, 21 Dec 2015 09:22:13 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12778788/HBASE-14279_v5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12778788/HBASE-14279_v5.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e75e26e3c6cfe7fd378081839d60fc711c1e095f.&lt;br/&gt;
  ATTACHMENT ID: 12778788&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated new checkstyle errors. Check build console for list of new errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16947//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16947//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16947//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16947//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16947//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16947//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16947//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16947//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15066325" author="chenheng" created="Mon, 21 Dec 2015 11:01:10 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; Thanks for your good suggestions.  I update patch.&lt;/p&gt;

&lt;p&gt;I use TreeSet instead of ConcurrentSkipListSet and remove DefaultValueSetFactory directly.&lt;/p&gt;</comment>
                            <comment id="15066425" author="hadoopqa" created="Mon, 21 Dec 2015 13:01:32 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12778809/HBASE-14279_v6.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12778809/HBASE-14279_v6.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit e75e26e3c6cfe7fd378081839d60fc711c1e095f.&lt;br/&gt;
  ATTACHMENT ID: 12778809&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated new checkstyle errors. Check build console for list of new errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16950//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16950//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16950//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16950//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16950//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16950//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16950//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16950//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15067510" author="chenheng" created="Tue, 22 Dec 2015 03:54:28 +0000"  >&lt;p&gt;I need one more +1 before commit.  &lt;/p&gt;</comment>
                            <comment id="15067585" author="ikeda" created="Tue, 22 Dec 2015 05:38:22 +0000"  >&lt;p&gt;I have second thought about the sentence:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;+      // Copied from ConcurrentHashMap&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It is better to remove the sentence because of avoiding a license issue. I hope that the logic of the variant of single-word Wang/Jenkins hash is well-known ordinary one.&lt;/p&gt;</comment>
                            <comment id="15067672" author="chenheng" created="Tue, 22 Dec 2015 07:19:19 +0000"  >&lt;blockquote&gt;
&lt;p&gt;It is better to remove the sentence because of avoiding a license issue.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;OK, i will fix it when commit.  Any suggestions? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15068374" author="stack" created="Tue, 22 Dec 2015 16:40:36 +0000"  >&lt;p&gt;What &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; says... if really copied, thats a problem (CHM is not like the other Doug Lea stuff which is in public domain). There are a bunch of write ups on this hash in particular. Just do a murmur hash on it? Or copy the wikipedia page (though seems like there have been improvements done in CHM).&lt;/p&gt;</comment>
                            <comment id="15069098" author="chenheng" created="Wed, 23 Dec 2015 03:42:55 +0000"  >&lt;p&gt;I use &lt;tt&gt;org.apache.hadoop.hbase.regionserver.LruHashMap#hashcode&lt;/tt&gt; now, and modify some comments.&lt;/p&gt;

&lt;p&gt;update patch.  Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stack&quot; class=&quot;user-hover&quot; rel=&quot;stack&quot;&gt;stack&lt;/a&gt; for your suggestion.&lt;/p&gt;</comment>
                            <comment id="15069350" author="hadoopqa" created="Wed, 23 Dec 2015 07:34:40 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12779189/HBASE-14279_v7.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12779189/HBASE-14279_v7.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 1af98f255132ef6716a1f6ba1d8d71a36ea38840.&lt;br/&gt;
  ATTACHMENT ID: 12779189&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;                &lt;font color=&quot;red&quot;&gt;-1 checkstyle&lt;/font&gt;.  The applied patch generated new checkstyle errors. Check build console for list of new errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16989//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16989//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16989//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16989//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16989//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16989//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;                Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/16989//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/16989//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15070280" author="chenheng" created="Wed, 23 Dec 2015 22:47:33 +0000"  >&lt;p&gt;Fix check style errors in v7.1&lt;br/&gt;
Any Suggestions?&lt;/p&gt;</comment>
                            <comment id="15070375" author="ikeda" created="Thu, 24 Dec 2015 01:33:14 +0000"  >&lt;p&gt;I worry about whether the hash calculation is well orthogonal with HashMap.hash() so that objects are well-distributed among the entries in each internal map after the objects are distributed into the internal maps. The new calculation seems coming from JDK 1.4.&lt;/p&gt;

&lt;p&gt;As for the variant of single-word Wang/Jenkins hash, in &lt;a href=&quot;http://gee.cs.oswego.edu/dl/concurrency-interest/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://gee.cs.oswego.edu/dl/concurrency-interest/index.html&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sources for all classes originated by the JSR166 group are released to the public domain, as described at &lt;a href=&quot;http://creativecommons.org/licenses/publicdomain&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://creativecommons.org/licenses/publicdomain&lt;/a&gt;. This includes all code in java.util.concurrent and its subpackages (except CopyOnWriteArrayList), ...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;and Doug Lea introduced the hash calculation code at the revision 1.93 in his repository:&lt;br/&gt;
&lt;a href=&quot;http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/src/main/java/util/concurrent/ConcurrentHashMap.java?revision=1.93&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/src/main/java/util/concurrent/ConcurrentHashMap.java?revision=1.93&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15070496" author="ikeda" created="Thu, 24 Dec 2015 02:11:05 +0000"  >&lt;p&gt;I misunderstood for some reason and the same thing can be said for the variant of single-word Wang/Jenkins hash. That&apos;s deep-rooted &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="15070502" author="hadoopqa" created="Thu, 24 Dec 2015 02:27:52 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12779334/HBASE-14279_v7.1.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12779334/HBASE-14279_v7.1.patch&lt;/a&gt;&lt;br/&gt;
  against master branch at commit 8e0854c64be553595b8ed44b9856a3d74ad3005f.&lt;br/&gt;
  ATTACHMENT ID: 12779334&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 4 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop versions&lt;/font&gt;. The patch compiles with all supported hadoop versions (2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.0 2.6.1 2.7.0 2.7.1)&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 protoc&lt;/font&gt;.  The applied patch does not increase the total number of protoc compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 checkstyle&lt;/font&gt;. The applied patch does not generate new checkstyle errors.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any  new Findbugs (version 2.0.3) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn post-site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.coprocessor.TestRegionServerCoprocessorEndpoint&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMaster&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestDeleteNamespaceProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestHBaseFsckReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestCreateNamespaceProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterFailover&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestHMasterRPCException&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestMultiParallel&lt;br/&gt;
                  org.apache.hadoop.hbase.master.procedure.TestModifyNamespaceProcedure&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestMobSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.namespace.TestNamespaceAuditor&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestRestoreSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.util.TestHBaseFsckTwoRS&lt;br/&gt;
                  org.apache.hadoop.hbase.coprocessor.TestMasterCoprocessorExceptionWithRemove&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestAdmin1&lt;br/&gt;
                  org.apache.hadoop.hbase.master.handler.TestTableDeleteFamilyHandler&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestMobStoreScanner&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestRegionMergeTransactionOnCluster&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestCloneSnapshotFromClientWithRegionReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestMobRestoreSnapshotFromClient&lt;br/&gt;
                  org.apache.hadoop.hbase.client.TestLeaseRenewal&lt;br/&gt;
                  org.apache.hadoop.hbase.master.TestMasterOperationsForRegionReplicas&lt;br/&gt;
                  org.apache.hadoop.hbase.regionserver.TestCorruptedRegionStoreFile&lt;br/&gt;
                  org.apache.hadoop.hbase.quotas.TestQuotaThrottle&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 zombies&lt;/font&gt;. No zombie tests found running at the end of the build.&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17002//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17002//testReport/&lt;/a&gt;&lt;br/&gt;
Release Findbugs (version 2.0.3) 	warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17002//artifact/patchprocess/newFindbugsWarnings.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17002//artifact/patchprocess/newFindbugsWarnings.html&lt;/a&gt;&lt;br/&gt;
Checkstyle Errors: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17002//artifact/patchprocess/checkstyle-aggregate.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17002//artifact/patchprocess/checkstyle-aggregate.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/17002//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/17002//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="15072384" author="chenheng" created="Mon, 28 Dec 2015 03:32:56 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I worry about whether the hash calculation is well orthogonal with HashMap.hash() so that objects are well-distributed among the entries in each internal map after the objects are distributed into the internal maps. The new calculation seems coming from JDK 1.4.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You are right.  The hash calculation from HashMap maybe has orthogonal problem.   After one Key dispatch into one map,  the cost is some conflicts when search the key in map, but i think it is OK now compared with disk IO.  Even IMO we could do hash for key with MOD operations only.  I don&apos;t think it is a big problem.  wdyt? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15072528" author="ikeda" created="Mon, 28 Dec 2015 08:03:13 +0000"  >&lt;p&gt;The last patch contains a hash function coming from old JDK, and is it OK around a license issue? Is there some reason JDK changes the logic of the hash function and can we ignore it safely? I also slightly worry about there still exists an other VM implementation that uses the old hash function, making our internal maps completely waste.&lt;/p&gt;

&lt;p&gt;As for other hash calculations, I&apos;m not knowledgeable about MurmurHash but using a strict calculation might waste. VM might prepare Object.hashCode with poor dispersion because of performance, and hash functions in hash maps are just for dispersion in lower bits, which are supposed to be extracted with some lower bits mask. ConcurrehtHashMap.hash is exceptional because higher bits is also used to select a segment, and I think it would pay additional performance cost and it would not be appropriate in our case.&lt;/p&gt;</comment>
                            <comment id="15072574" author="chenheng" created="Mon, 28 Dec 2015 09:53:12 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The last patch contains a hash function coming from old JDK, and is it OK around a license issue? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;org.apache.hadoop.hbase.regionserver.LruHashMap#hashcode already use it,  So IMO it is ok for license.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Is there some reason JDK changes the logic of the hash function and can we ignore it safely? I also slightly worry about there still exists an other VM implementation that uses the old hash function, making our internal maps completely waste.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I don&apos;t think there is any problem here.  As i mentioned above, if orthogonal problem exists, the only cost is some conflicts when search key in internal map. And i do NOT think it is a big problem compared with disk IO.  And if we check the usage of ConcurrentIndex,  there is no GET operation.  So i think we have no need to do improvement for internal map operation, it is useless for the whole performance of BucketCache, wdyt? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;&lt;/p&gt;




</comment>
                            <comment id="15354872" author="chenheng" created="Wed, 29 Jun 2016 09:30:43 +0000"  >&lt;p&gt;The issue pending here so long time.  Let me resolve it as invalid.  If someone want it,  open another issue for it.&lt;/p&gt;</comment>
                            <comment id="15354873" author="chenheng" created="Wed, 29 Jun 2016 09:31:50 +0000"  >&lt;p&gt;The issue pending here so long time.  Let me resolve it as invalid.  If someone want it,  open another issue for it.&lt;/p&gt;</comment>
                            <comment id="15356521" author="ikeda" created="Thu, 30 Jun 2016 04:59:17 +0000"  >&lt;p&gt;I again re-checked and considered how ConcurrentIndex is used, and I realized that it is enough to just remove ConcurrentIndex at all and use ConcurrentSkipListSet&amp;lt;BlockCacheKey&amp;gt; for BucketCache.blocksByHFile with a lexicographic comparator. Instead of calling &lt;tt&gt;blocksByHFile.values(hfileName)&lt;/tt&gt;, call &lt;tt&gt;blocksByHFile.subSet(new BlockCacheKey(hfileName, Long.MIN_VALUE), true, new BlockCacheKey(hfileName, Long.MAX_VALUE, true))&lt;/tt&gt; without necessity of copying its return value.&lt;/p&gt;

&lt;p&gt;FYI, about hashCode, Doug Lea also committed the same logic of the old JDK&apos;s hashCode in his repository. We should be safe even if we accidentally write the almost same code for such a straight logic.&lt;/p&gt;</comment>
                            <comment id="15356597" author="ikeda" created="Thu, 30 Jun 2016 06:25:23 +0000"  >&lt;p&gt;Added patches to use ConcurrentSkipListMap instead of ConcurrentIndex.&lt;/p&gt;</comment>
                            <comment id="15356599" author="ikeda" created="Thu, 30 Jun 2016 06:28:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;If someone want it, open another issue for it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oops, sorry I overlooked.&lt;/p&gt;</comment>
                            <comment id="15356764" author="hadoopqa" created="Thu, 30 Jun 2016 08:57:09 +0000"  >&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;&lt;/b&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Vote &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Runtime &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Comment &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbaseanti &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not have any anti-patterns. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; @author &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; The patch does not contain any @author tags. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; test4tests &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; The patch doesn&apos;t appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 8s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for branch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 9s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 54s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 46s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 27s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 2s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 55s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 52s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; master passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt;0&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; mvndep &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; 0m 11s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;blue&quot;&gt; Maven dependency ordering for patch &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvninstall &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 10s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 10s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 10s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; compile &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 58s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javac &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 58s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; checkstyle &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 53s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; mvneclipse &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; whitespace &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 0s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch has no whitespace issues. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hadoopcheck &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 29m 1s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not cause any errors with Hadoop 2.4.0 2.4.1 2.5.0 2.5.1 2.5.2 2.6.1 2.6.2 2.6.3 2.7.1. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; findbugs &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 3m 11s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 53s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.8.0 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; javadoc &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 51s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; the patch passed with JDK v1.7.0_80 &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 1m 45s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; hbase-common in the patch passed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt;-1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; unit &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; 95m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;red&quot;&gt; hbase-server in the patch failed. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt;+1&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; asflicense &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; 0m 28s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;green&quot;&gt; Patch does not generate ASF License warnings. &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt;&lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; 148m 29s &lt;/font&gt; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;font color=&quot;black&quot;&gt; &lt;/font&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Reason &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Tests &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Failed junit tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.replication.regionserver.TestTableBasedReplicationSourceManagerImpl &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; hadoop.hbase.client.TestHCM &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Subsystem &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Report/Notes &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Patch URL &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12815383/HBASE-14279-V8-ikeda-master.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12815383/HBASE-14279-V8-ikeda-master.patch&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; JIRA Issue &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14279&quot; title=&quot;Race condition in ConcurrentIndex&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14279&quot;&gt;&lt;del&gt;HBASE-14279&lt;/del&gt;&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Optional Tests &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  asflicense  javac  javadoc  unit  findbugs  hadoopcheck  hbaseanti  checkstyle  compile  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; uname &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Linux asf900.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Build tool &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; maven &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Personality &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; /home/jenkins/jenkins-slave/workspace/PreCommit-HBASE-Build/component/dev-support/hbase-personality.sh &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; git revision &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; master / e1d1309 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Default Java &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Multi-JDK versions &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  /home/jenkins/tools/java/jdk1.8.0:1.8.0 /home/jenkins/jenkins-slave/tools/hudson.model.JDK/JDK_1.7_latest_:1.7.0_80 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; findbugs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; v3.0.0 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2439/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2439/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; unit test logs &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2439/artifact/patchprocess/patch-unit-hbase-server.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2439/artifact/patchprocess/patch-unit-hbase-server.txt&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;  Test Results &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2439/testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2439/testReport/&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; modules &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; C: hbase-common hbase-server U: . &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Console output &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/2439/console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/2439/console&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Powered by &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; Apache Yetus 0.2.1   &lt;a href=&quot;http://yetus.apache.org&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://yetus.apache.org&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;p&gt;This message was automatically generated.&lt;/p&gt;
</comment>
                            <comment id="15356845" author="chenheng" created="Thu, 30 Jun 2016 09:59:27 +0000"  >&lt;p&gt;Thanks for take it up.  Please go on.  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15356994" author="stack" created="Thu, 30 Jun 2016 12:17:40 +0000"  >&lt;p&gt;Let me reopen since still life in this issue (assigned to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt;). Let me get time to try the patch.&lt;/p&gt;</comment>
                            <comment id="15357597" author="stack" created="Thu, 30 Jun 2016 18:10:05 +0000"  >&lt;p&gt;Reresolving since &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikeda&quot; class=&quot;user-hover&quot; rel=&quot;ikeda&quot;&gt;Hiroshi Ikeda&lt;/a&gt; opened a new issue (see &apos;issue links&apos; above)&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                                                <inwardlinks description="is superceded by">
                                        <issuelink>
            <issuekey id="12985645">HBASE-16150</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12815382" name="HBASE-14279-V8-ikeda-branch-1.patch" size="10882" author="ikeda" created="Thu, 30 Jun 2016 06:25:23 +0000"/>
                            <attachment id="12815383" name="HBASE-14279-V8-ikeda-master.patch" size="10864" author="ikeda" created="Thu, 30 Jun 2016 06:25:23 +0000"/>
                            <attachment id="12752190" name="HBASE-14279.patch" size="4288" author="chenheng" created="Tue, 25 Aug 2015 08:57:39 +0000"/>
                            <attachment id="12752702" name="HBASE-14279_v2.patch" size="5028" author="chenheng" created="Thu, 27 Aug 2015 08:58:54 +0000"/>
                            <attachment id="12770824" name="HBASE-14279_v3.patch" size="4891" author="chenheng" created="Thu, 5 Nov 2015 16:19:31 +0000"/>
                            <attachment id="12770950" name="HBASE-14279_v4.patch" size="9802" author="chenheng" created="Fri, 6 Nov 2015 04:08:04 +0000"/>
                            <attachment id="12778788" name="HBASE-14279_v5.patch" size="19199" author="chenheng" created="Mon, 21 Dec 2015 07:26:07 +0000"/>
                            <attachment id="12771510" name="HBASE-14279_v5.patch" size="19199" author="chenheng" created="Tue, 10 Nov 2015 07:42:36 +0000"/>
                            <attachment id="12778809" name="HBASE-14279_v6.patch" size="17666" author="chenheng" created="Mon, 21 Dec 2015 10:59:25 +0000"/>
                            <attachment id="12779334" name="HBASE-14279_v7.1.patch" size="17624" author="chenheng" created="Wed, 23 Dec 2015 22:47:33 +0000"/>
                            <attachment id="12779189" name="HBASE-14279_v7.patch" size="17494" author="chenheng" created="Wed, 23 Dec 2015 03:42:55 +0000"/>
                            <attachment id="12764962" name="LockStripedBag.java" size="2207" author="ikeda" created="Mon, 5 Oct 2015 02:36:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 21 Aug 2015 09:01:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            24 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2j76v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>