<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:38:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6618/HBASE-6618.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6618] Implement FuzzyRowFilter with ranges support</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6618</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Apart from current ability to specify fuzzy row filter e.g. for &amp;lt;userId_actionId&amp;gt; format as ????_0004 (where 0004 - actionId) it would be great to also have ability to specify the &quot;fuzzy range&quot; , e.g. ????_0004, ..., ????_0099.&lt;/p&gt;

&lt;p&gt;See initial discussion here: &lt;a href=&quot;http://search-hadoop.com/m/WVLJdX0Z65&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/WVLJdX0Z65&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: currently it is possible to provide multiple fuzzy row rules to existing FuzzyRowFilter, but in case when the range is big (contains thousands of values) it is not efficient.&lt;/p&gt;

&lt;p&gt;Filter should perform efficient fast-forwarding during the scan (this is what distinguishes it from regex row filter).&lt;/p&gt;

&lt;p&gt;While such functionality may seem like a proper fit for custom filter (i.e. not including into standard filter set) it looks like the filter may be very re-useable. We may judge based on the implementation that will hopefully be added.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12604107">HBASE-6618</key>
            <summary>Implement FuzzyRowFilter with ranges support</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="alexb">Alex Baranau</assignee>
                                    <reporter username="alexb">Alex Baranau</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Aug 2012 19:45:02 +0000</created>
                <updated>Sat, 18 Jun 2016 01:45:20 +0000</updated>
                                                            <fixVersion>2.0.0</fixVersion>
                    <fixVersion>1.4.0</fixVersion>
                                    <component>Filters</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>19</watches>
                                                                <comments>
                            <comment id="13438134" author="alexb" created="Mon, 20 Aug 2012 19:54:20 +0000"  >&lt;p&gt;Just an idea. May be we should try improve existing FuzzyRowFilter by allowing to specify each fuzzy rule with:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;fuzzy key start&lt;/li&gt;
	&lt;li&gt;fuzzy key end &amp;lt;&amp;lt; this is currently missing in FuzzyRowFilter&lt;/li&gt;
	&lt;li&gt;mask&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This looks flexible enough to me. E.g. one could specify rule ??&lt;cite&gt;(&lt;em&gt;0001&lt;/em&gt;&lt;del&gt;&lt;em&gt;0099&lt;/em&gt;)&lt;/cite&gt;?(&lt;em&gt;001&lt;/del&gt;_099), i.e. &amp;lt;any 4 bytes&amp;gt;&amp;lt;any 6 bytes value between &quot;_0001&lt;/em&gt;&quot; and &quot;&lt;em&gt;0099&lt;/em&gt;&quot;&amp;gt;&amp;lt;any 3 bytes&amp;gt;&amp;lt;any 4 bytes value between &quot;_001&quot; and &quot;_099&quot;&amp;gt; with this definition:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;??&lt;cite&gt;&lt;em&gt;0001&lt;/em&gt;&lt;/cite&gt;?_001&lt;/li&gt;
	&lt;li&gt;??&lt;cite&gt;&lt;em&gt;0099&lt;/em&gt;&lt;/cite&gt;?_099 &amp;lt;&amp;lt; currently missing&lt;/li&gt;
	&lt;li&gt;11110000001110000&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In this case any sequence of &quot;fixed&quot; positions treated as one n-bytes value.&lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;br/&gt;
Alternatively, such fuzzy rule can be specified as list of parts, each part being one of:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;n &quot;fuzzy&quot; bytes&lt;/li&gt;
	&lt;li&gt;start/stop key part range (of the same length)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This might be closer to &quot;human-readable&quot; definition, though the former one could be easier to deal with.&lt;/p&gt;

&lt;p&gt;Anil, as you expressed willing to work on this, what are your thoughts? May be you have smth different in your mind?&lt;/p&gt;</comment>
                            <comment id="13438147" author="alexb" created="Mon, 20 Aug 2012 20:06:32 +0000"  >&lt;p&gt;Sorry for the spam, for some reason I cannot edit the comment and JIRA broke formatting for the text pieces of my previous comment (I should have checked that first, sorry). This is how it supposed to look:&lt;/p&gt;

&lt;p&gt;Just an idea. May be we should try improve existing FuzzyRowFilter by allowing to specify each fuzzy rule with:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;fuzzy key start&lt;/li&gt;
	&lt;li&gt;fuzzy key end &amp;lt;&amp;lt; this is currently missing in FuzzyRowFilter&lt;/li&gt;
	&lt;li&gt;mask&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This looks flexible enough to me. E.g. one could specify rule ?&amp;#63;&amp;#63;?(0001 - 0999)???(001 - 099), i.e. &amp;lt;any 4 bytes&amp;gt;&amp;lt;any 4 bytes value between &quot;0001&quot; and &quot;0999&quot;&amp;gt;&amp;lt;any 3 bytes&amp;gt;&amp;lt;any 3 bytes value between &quot;001&quot; and &quot;099&quot;&amp;gt; with this definition:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;?&amp;#63;&amp;#63;?0001???001&lt;/li&gt;
	&lt;li&gt;?&amp;#63;&amp;#63;?0999???099 &amp;lt;&amp;lt; currently missing&lt;/li&gt;
	&lt;li&gt;11110000111000&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In this case any sequence of &quot;fixed&quot; positions treated as one n-bytes value.&lt;/p&gt;

&lt;p&gt;Alternatively, such fuzzy rule can be specified as list of parts, each part being one of:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;n &quot;fuzzy&quot; bytes&lt;/li&gt;
	&lt;li&gt;start/stop key part range (of the same length)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This might be closer to &quot;human-readable&quot; definition, though the former one could be easier to deal with.&lt;/p&gt;

&lt;p&gt;Anil, as you expressed willing to work on this, what are your thoughts? May be you have smth different in your mind?&lt;/p&gt;</comment>
                            <comment id="13439311" author="anilgupta84" created="Wed, 22 Aug 2012 06:37:05 +0000"  >&lt;p&gt;Hi Alex,&lt;/p&gt;

&lt;p&gt;I agree with you idea of RangeBased Fuzzy Filter. However, I would like to take a phased approach in developing this:&lt;br/&gt;
In your proposal, the user can provide multiple fuzzy ranges in a single scan. i.e. &amp;lt;any 4 bytes&amp;gt;&amp;lt;any 6 bytes value between &quot;_0001&quot; and &quot;0099&quot;&amp;gt;&amp;lt;any 3 bytes&amp;gt;&amp;lt;any 4 bytes value between &quot;_001&quot; and &quot;_099&quot;&amp;gt;&lt;br/&gt;
Instead of the above, IMO lets try to make a filter for &quot;&amp;lt;any 4 bytes&amp;gt;&amp;lt;any 6 bytes value between &quot;_0001&quot; and &quot;0099&quot;&amp;gt;&amp;lt;any 3 bytes&amp;gt;&quot; or &quot;&amp;lt;any 4 bytes&amp;gt;&amp;lt;any 6 bytes value between &quot;_0001&quot; and &quot;0099&quot;&amp;gt;&quot;. Once we develop this then we can enhance it to use multiple fuzzy ranges. This is just my thought/approach of developing this. Let me know your opinion.&lt;/p&gt;

&lt;p&gt;From this week, at work I had to shift focus from HBase to Hive and HCatalog for another POC. So, I&apos;ll be squeezing time for this JIRA out of work schedule. I&apos;ll start looking into the current implementation of FuzzyRowFilter to get idea about implementation.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Anil Gupta&lt;br/&gt;
Software Engineer II, Intuit, Inc &lt;/p&gt;</comment>
                            <comment id="13440034" author="alexb" created="Thu, 23 Aug 2012 04:03:33 +0000"  >&lt;p&gt;Anil,&lt;/p&gt;

&lt;p&gt;Now that I thought about it I just realized that finding the row key to fast-forward to, when given any number of &quot;range groups&quot; in the fuzzy rules is quite easy. And also can be done in just &lt;b&gt;one pass&lt;/b&gt;, by going through the bytes of the given row.&lt;/p&gt;

&lt;p&gt;Didn&apos;t have much time to add this functionality to the filter itself, but implemented the algorithm that seems to find the row key to fast-forward to (if you are interested to look at it). Added static method for that with small (not full) unit-test. Also attached brief description of the algo. I hope I&apos;m not missing anything.&lt;/p&gt;

&lt;p&gt;Will implement the new feature of the filter as a next step.&lt;/p&gt;</comment>
                            <comment id="13440039" author="zhihyu@ebaysf.com" created="Thu, 23 Aug 2012 04:20:54 +0000"  >&lt;p&gt;Thanks for the update, Alex.&lt;br/&gt;
I get your idea, though a few arrows seem to be missing (e.g. CCF is ?) in the diagram for toInc.&lt;/p&gt;</comment>
                            <comment id="13440242" author="alexb" created="Thu, 23 Aug 2012 12:33:07 +0000"  >&lt;p&gt;Ah, sorry, haven&apos;t said anything about that. For toInc - we may not change it at every step, so if there&apos;s a missing arrow, that means nothing should be changed.&lt;/p&gt;

&lt;p&gt;Thanx for checking out!&lt;/p&gt;

&lt;p&gt;One thing that I&apos;m not 100% sure about - is it better to adjust current FuzzyRowFilter and this functionality to it or add new. I&apos;m leaning towards adjusting FuzzyRowFilter as this new feature fits naturally in it. Thoughts?&lt;/p&gt;</comment>
                            <comment id="13440268" author="zhihyu@ebaysf.com" created="Thu, 23 Aug 2012 13:07:05 +0000"  >&lt;p&gt;Enhancing existing class is fine. &lt;/p&gt;</comment>
                            <comment id="13441255" author="anilgupta84" created="Fri, 24 Aug 2012 15:31:22 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;Yesterday night in the middle of my reply the JIRA went into maintenance mode. Now, it seems to be out of Maintenance mode but i cannot access the png file attached to this jira. Is there any issue going on with JIRA?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Anil Gupta&lt;br/&gt;
Software Engineer II, Intuit, Inc &lt;/p&gt;</comment>
                            <comment id="13442276" author="anilgupta84" created="Mon, 27 Aug 2012 05:17:59 +0000"  >&lt;p&gt;Hi Alex,&lt;/p&gt;

&lt;p&gt;I am still unable to access the png file for the algorithm. Is there some problem with JIRA system? or Can you re-upload the image?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Thanks,&lt;br/&gt;
Anil Gupta&lt;br/&gt;
Software Engineer II, Intuit, Inc &lt;/p&gt;</comment>
                            <comment id="13442944" author="alexb" created="Tue, 28 Aug 2012 04:13:17 +0000"  >&lt;p&gt;Weird. I can open it. Anyhow, sent it to your email.&lt;/p&gt;</comment>
                            <comment id="13541462" author="alexb" created="Mon, 31 Dec 2012 19:05:30 +0000"  >&lt;p&gt;Looks like Anil didn&apos;t find time for that in the end.&lt;/p&gt;

&lt;p&gt;But I believe that this functionality is very very useful. Will work on it then.&lt;/p&gt;

&lt;p&gt;Attached patch with implemented filter functionality. I have doubts about filter API (i.e. defining fuzzy rules with Triple&amp;lt;byte[], byte[], byte[]), any suggestions are very welcome!&lt;/p&gt;</comment>
                            <comment id="13541465" author="alexb" created="Mon, 31 Dec 2012 19:11:35 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://reviews.apache.org/r/8786&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/8786&lt;/a&gt;. I think I will add more unit-tests. Comments are very welcome!&lt;/p&gt;</comment>
                            <comment id="13541468" author="anilgupta84" created="Mon, 31 Dec 2012 19:15:01 +0000"  >&lt;p&gt;Hi Alex,&lt;/p&gt;

&lt;p&gt;Actually, we decided not to use full-table scans for this type of query. Hence, i could not devote time on this. We are trying out Secondary Index in HBase.&lt;br/&gt;
Sorry, for the late update.&lt;/p&gt;

&lt;p&gt;Wish you a Happy New Year!&lt;br/&gt;
~Anil Gupta&lt;br/&gt;
Software Engineer II, Intuit, Inc &lt;/p&gt;</comment>
                            <comment id="13541510" author="hadoopqa" created="Mon, 31 Dec 2012 21:19:02 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562810/HBASE-6618.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562810/HBASE-6618.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestMetricsRegionServer&lt;br/&gt;
                  org.apache.hadoop.hbase.filter.TestFuzzyRowFilter&lt;br/&gt;
                  org.apache.hadoop.hbase.ipc.TestRpcMetrics&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3788//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13541526" author="alexb" created="Mon, 31 Dec 2012 23:07:24 +0000"  >&lt;p&gt;Fixed typo, now filter tests should pass. Not sure about why metrics tests failed. Will look at it if occur again&lt;/p&gt;</comment>
                            <comment id="13541532" author="hadoopqa" created="Mon, 31 Dec 2012 23:29:01 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12562822/HBASE-6618_2.path&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12562822/HBASE-6618_2.path&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestMetricsRegionServer&lt;br/&gt;
                  org.apache.hadoop.hbase.ipc.TestRpcMetrics&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core zombie tests&lt;/font&gt;.  There are 3 zombie test(s): &lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3789//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13543142" author="alexb" created="Thu, 3 Jan 2013 18:09:52 +0000"  >&lt;p&gt;Fixed line length in patch (one was &amp;gt;100).&lt;/p&gt;

&lt;p&gt;Not sure what about those tests: they work well for me locally.&lt;/p&gt;</comment>
                            <comment id="13543171" author="hadoopqa" created="Thu, 3 Jan 2013 18:36:29 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12563115/HBASE-6618_3.path&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12563115/HBASE-6618_3.path&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 6 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 lineLengths&lt;/font&gt;.  The patch introduces lines longer than 100&lt;/p&gt;

&lt;p&gt;     &lt;font color=&quot;red&quot;&gt;-1 core tests&lt;/font&gt;.  The patch failed these unit tests:&lt;br/&gt;
                       org.apache.hadoop.hbase.regionserver.TestMetricsRegionServer&lt;br/&gt;
                  org.apache.hadoop.hbase.ipc.TestRpcMetrics&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3826//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13543182" author="alexb" created="Thu, 3 Jan 2013 18:43:12 +0000"  >&lt;blockquote&gt;&lt;p&gt;-1 lineLengths. The patch introduces lines longer than 100&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I guess that&apos;s because of generated code (from *.proto). That should be OK, right?&lt;/p&gt;</comment>
                            <comment id="13596725" author="giacomotaylor" created="Fri, 8 Mar 2013 02:48:30 +0000"  >&lt;p&gt;Would it be possible to generalize this a bit further to handle variable length key parts assuming you know the terminator (both Phoenix and Orderly, use a 0 byte terminator)? With the work you&apos;ve already done here to support ranges, you could support a good set of skip scanning scenarios for multi-part row keys.&lt;/p&gt;

&lt;p&gt;Take for example a fuzzy row filter expressed for a two part row key of VARCHAR + byte&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt; like this:&lt;/p&gt;

&lt;p&gt;    &apos;foo%&apos; (this would be for the VARCHAR key part - &apos;foo&apos; followed by zero or more characters)&lt;br/&gt;
     [4000-6000) (this would be for the INT key part - 4000 inclusive to 6000 exclusive)&lt;/p&gt;

&lt;p&gt;In this case (as you&apos;ve already pointed out), you can use the first row key as your guide. Let&apos;s say the first row key is &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;foobar&amp;#39;&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1000&amp;#93;&lt;/span&gt;. You could form a skip hint as &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;foobar&amp;#39;&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;4000&amp;#93;&lt;/span&gt; (i.e. &apos;foobar&apos; + new byte[] &lt;/p&gt;
{0}
&lt;p&gt; + new byte[] &lt;/p&gt;
{1,0,0,0}
&lt;p&gt;).&lt;br/&gt;
Then you&apos;d let all values pass until you got to &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;foobar&amp;#39;&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;6000&amp;#93;&lt;/span&gt;, in which case you&apos;d form your next skip hint.&lt;/p&gt;
</comment>
                            <comment id="13596734" author="yuzhihong@gmail.com" created="Fri, 8 Mar 2013 02:54:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;skip hint as &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;foobar&amp;#39;&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;4000&amp;#93;&lt;/span&gt; (i.e. &lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&apos;foobar&apos; + &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] {0} + &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] {1,0,0,0}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;).&lt;br/&gt;
Is there a typo above ?&lt;br/&gt;
Should it be:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&apos;foobar&apos; + &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] {0} + &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] {4,0,0,0}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13596741" author="giacomotaylor" created="Fri, 8 Mar 2013 02:58:33 +0000"  >&lt;p&gt;Yes, that&apos;s a typo. Thanks - you&apos;ve got good eyes!&lt;/p&gt;</comment>
                            <comment id="13856488" author="apurtell" created="Tue, 24 Dec 2013 23:22:45 +0000"  >&lt;p&gt;Stale issue&lt;/p&gt;</comment>
                            <comment id="13856495" author="alexb" created="Wed, 25 Dec 2013 00:09:16 +0000"  >&lt;p&gt;Yeah, looks like nobody looked at the patch, even though I know others use it (patch). Weird and don&apos;t know how to push anyone to do that.&lt;/p&gt;

&lt;p&gt;Not sure if patch fits latest version. If there&apos;s still an interest from any committer (I hope so) to take a look and proceed with the issue, I will take a look at it and make sure it is good for latest version.&lt;/p&gt;</comment>
                            <comment id="13856496" author="yuzhihong@gmail.com" created="Wed, 25 Dec 2013 00:13:14 +0000"  >&lt;p&gt;Alex:&lt;br/&gt;
I should have time to review.&lt;br/&gt;
Please update the patch. &lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13915732" author="kuzmiigo" created="Fri, 28 Feb 2014 12:45:10 +0000"  >&lt;p&gt;Looking at the description above that rule ????(0001 - 0999) means &amp;lt;any 4 bytes&amp;gt;&amp;lt;any 4 bytes value between &quot;0001&quot; and &quot;0999&quot;&amp;gt;, I thought that the value in the fixed part is checked as whole, but the code actually checks its bytes in isolation, so the rule is actually ????0(0 - 9)(0 - 9)(1 - 9).&lt;/p&gt;

&lt;p&gt;It&apos;s fine for ranges like this, but let&apos;s take another: ??(53 - 97). I would expect aa68 to satisfy the rule, but in the proposed implementation it doesn&apos;t (because bytes are checked in isolation and 8 is outside the range [3, 7]). Could you clarify if this is the intended behaviour?&lt;/p&gt;

&lt;p&gt;If yes, i.e. aa68 should not satisfy rule ??(53 - 97):&lt;br/&gt;
It would be nice to make it more clear in the description that all bytes are checked in isolation and there are actually no n-bytes values. In this case, there is a bug: for rule ??(50 - 97) and value MM58 (where M is max byte \xFF), satisfies() returns SatisfiesCode.NO_NEXT because nextRowKeyCandidateExists is only updated for non-fixed positions. It should return NEXT_EXISTS, because MM60 should be the next key.&lt;/p&gt;

&lt;p&gt;If no, i.e. aa68 should satisfy rule ??(53 - 97):&lt;br/&gt;
In this case, satisfy() should be fixed. I made a patch with the fix and can add it if needed. It also has a small optimisation when there is no need to check less significant bytes. For example: for range [120, 500] and key 345, it will compare the first byte (3) only, as it&apos;s clear that the whole value is in the range.&lt;/p&gt;

&lt;p&gt;In any case, tests might include testing satisfy() with ranges (the current patch only adds tests for getNextForFuzzyRule() with ranges).&lt;/p&gt;</comment>
                            <comment id="13959055" author="kuzmiigo" created="Thu, 3 Apr 2014 18:17:14 +0000"  >&lt;p&gt;Please note that in the version proposed by me (aa68 should satisfy rule ??(53 - 97)) it&apos;s not possible to have adjacent ranges in the rule: the high-level ??(10-19)(00-30) and ??(1000-1930) will be written as the same range (key start, key end, mask): ??1000, ??1930, 110000. This can be solved by using different values in the mask (it would be more convenient to use 0 for non-fixed bytes, 1 for range 1, 2 for range 2 and so on).&lt;/p&gt;</comment>
                            <comment id="13960916" author="alexb" created="Sat, 5 Apr 2014 02:15:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kuzmiigo&quot; class=&quot;user-hover&quot; rel=&quot;kuzmiigo&quot;&gt;Igor Kuzmitshov&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I thought that the value in the fixed part is checked as whole, but the code actually checks its bytes in isolation, so the rule is actually ????0(0 - 9)(0 - 9)(1 - 9)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;not true. aa68 will satisfy the rule ??(53 - 97). Added a test specifically for that:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-comment&quot;&gt;// Range
&lt;/span&gt;    Assert.assertEquals(FuzzyRowFilter.SatisfiesCode.YES,
                        FuzzyRowFilter.satisfies(
                          &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]{1, 1, 6, 8},
                          &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Triple&amp;lt;&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[], &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]&amp;gt;(
                            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]{0, 0, 1, 1}, &lt;span class=&quot;code-comment&quot;&gt;// mask
&lt;/span&gt;                            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]{1, 1, 5, 6}, &lt;span class=&quot;code-comment&quot;&gt;// upper bytes
&lt;/span&gt;                            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[]{1, 1, 9, 7}))); &lt;span class=&quot;code-comment&quot;&gt;// lower bytes&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13960922" author="alexb" created="Sat, 5 Apr 2014 02:22:30 +0000"  >&lt;p&gt;Updated patch to fit latest trunk&lt;/p&gt;</comment>
                            <comment id="13960924" author="alexb" created="Sat, 5 Apr 2014 02:26:07 +0000"  >&lt;p&gt;Updated patch, also uploaded to review board at &lt;a href=&quot;https://reviews.apache.org/r/8786&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://reviews.apache.org/r/8786&lt;/a&gt;. Very small change to fit latest trunk. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuzhihong%40gmail.com&quot; class=&quot;user-hover&quot; rel=&quot;yuzhihong@gmail.com&quot;&gt;Ted Yu&lt;/a&gt; if you have time by chance - very much appreciate if you can review. This version is much better, much more flexible than current one.. Thank you a lot in advance&lt;/p&gt;</comment>
                            <comment id="13960927" author="alexb" created="Sat, 5 Apr 2014 02:32:02 +0000"  >&lt;p&gt;I mean than the one available in HBase currently&lt;/p&gt;</comment>
                            <comment id="13960955" author="yuzhihong@gmail.com" created="Sat, 5 Apr 2014 04:13:51 +0000"  >&lt;p&gt;If a client, compiled with FuzzyRowFilter before this change, uses FuzzyRowFilter in Scan, would server side be able to handle ?&lt;/p&gt;

&lt;p&gt;Please add more tests for the new rules. This would make code more robust and help detect regression.&lt;/p&gt;</comment>
                            <comment id="13960963" author="hadoopqa" created="Sat, 5 Apr 2014 04:30:53 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12638828/HBASE-6618_4.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12638828/HBASE-6618_4.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12638828&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9204//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13961237" author="alexb" created="Sat, 5 Apr 2014 21:18:05 +0000"  >&lt;p&gt;addressed review comments&lt;/p&gt;</comment>
                            <comment id="13961243" author="alexb" created="Sat, 5 Apr 2014 21:22:11 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kuzmiigo&quot; class=&quot;user-hover&quot; rel=&quot;kuzmiigo&quot;&gt;Igor Kuzmitshov&lt;/a&gt;, heh - in satisfies() found that it was incorrect. I.e. as you described. Sorry I overlooked that. Fixed in latest patch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu&quot; class=&quot;user-hover&quot; rel=&quot;tedyu&quot;&gt;Ted Yu&lt;/a&gt; added more tests and also test for compat with client compiled against old version of code. Though I&apos;d really ask you to check if that was done correctly: don&apos;t have a lot of experience with protobuf.&lt;/p&gt;

&lt;p&gt;Thank you guys!&lt;/p&gt;</comment>
                            <comment id="13961265" author="yuzhihong@gmail.com" created="Sat, 5 Apr 2014 22:26:04 +0000"  >&lt;p&gt;Thanks for the quick turnaround.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=apurtell&quot; class=&quot;user-hover&quot; rel=&quot;apurtell&quot;&gt;Andrew Purtell&lt;/a&gt;: do you want this in 0.98 ?&lt;/p&gt;</comment>
                            <comment id="13961272" author="hadoopqa" created="Sat, 5 Apr 2014 23:08:10 +0000"  >&lt;p&gt;&lt;font color=&quot;green&quot;&gt;+1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12638881/HBASE-6618_5.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12638881/HBASE-6618_5.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;br/&gt;
  ATTACHMENT ID: 12638881&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 tests included&lt;/font&gt;.  The patch appears to include 9 new or modified tests.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-thrift.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/9206//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13963753" author="zjushch" created="Wed, 9 Apr 2014 03:19:58 +0000"  >&lt;p&gt;FuzzyRowFilter seems available only for advanced users.&lt;/p&gt;

&lt;p&gt;Should we support creating FuzzyRowFilter with the Human-Readable String, e.g. ??&lt;cite&gt;&lt;em&gt;0004&lt;/em&gt;&lt;/cite&gt;&lt;br/&gt;
There are many notion when using FuzzyRowFilter, could we do these checks in the internal of FuzzyRowFilter ?&lt;/p&gt;
</comment>
                            <comment id="13964508" author="alexb" created="Wed, 9 Apr 2014 18:24:16 +0000"  >&lt;p&gt;Making it more useable with better API for construction of the filter makes a lot of sense to me. It is not that simple as just defining human-readable string as bytes might not be human readable. I&apos;m thinking about builder-like construction of the filter, should be helpful. As an addition to &quot;raw definition&quot;. Will share thoughts/changes very soon if I figure out a good way for it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;There are many notion when using FuzzyRowFilter, could we do these checks in the internal of FuzzyRowFilter ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;not sure I got the question, sorry: which checks?&lt;/p&gt;</comment>
                            <comment id="13964536" author="kuzmiigo" created="Wed, 9 Apr 2014 18:47:05 +0000"  >&lt;p&gt;Using (human-readable) strings instead of byte arrays seems possible when non-printable bytes are given in \x00 format (widely used in HBase) and conversions are done with toBytesBinary() and toStringBinary() of org.apache.hadoop.hbase.util.Bytes. Example: from &quot;??a\x00&quot; to &quot;??c\x1F&quot;.&lt;/p&gt;</comment>
                            <comment id="13964558" author="alexb" created="Wed, 9 Apr 2014 19:10:20 +0000"  >&lt;p&gt;right. I mean it won&apos;t be human-friendly though still... I thought more about smth like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FuzzyRowFilter.Builder()
  .any(&amp;lt;length&amp;gt;) &lt;span class=&quot;code-comment&quot;&gt;// meaning &lt;span class=&quot;code-quote&quot;&gt;&quot;????&quot;&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; 4
&lt;/span&gt;  .range(&amp;lt;range_start_bytes&amp;gt;, &amp;lt;range_end_bytes&amp;gt;)  &lt;span class=&quot;code-comment&quot;&gt;// builder will check that length of those is the same
&lt;/span&gt;  .any(&amp;lt;length&amp;gt;)
  .fixed(&amp;lt;couple_fixed_bytes&amp;gt;)
  .build();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We may also overload with allowing strings if makes sense. So that e.g. &quot;???(11-88)??AAA&quot; could be built with:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FuzzyRowFilter.Builder()
  .any(3)
  .range(&lt;span class=&quot;code-quote&quot;&gt;&quot;11&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;88&quot;&lt;/span&gt;)
  .any(2)
  .fixed(&lt;span class=&quot;code-quote&quot;&gt;&quot;AAA&quot;&lt;/span&gt;)
  .build();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;thoughts?&lt;/p&gt;</comment>
                            <comment id="13964560" author="alexb" created="Wed, 9 Apr 2014 19:12:03 +0000"  >&lt;p&gt;with human-readable and &quot;?&quot; inside - you have to somehow define how to put &quot;?&quot; if I want it as &quot;normal byte&quot;...&lt;/p&gt;</comment>
                            <comment id="13964897" author="zjushch" created="Thu, 10 Apr 2014 01:58:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;you have to somehow define how to put &quot;?&quot; if I want it as &quot;normal byte&quot;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We could use &apos;\&apos; before &apos;?&apos; to define the normal byte &apos;?&apos;&lt;/p&gt;

&lt;p&gt;As my consideration,  user could construct FuzzyRowFilter with the readable String directly.&lt;br/&gt;
e.g  &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;???11??AA\x00??\?&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Using Bytes.toBytesBinary to convert the string to bytes, then parse the bytes, if the byte is &apos;?&apos;, mark it as non-fixed byte, if the byte is &apos;\&apos;, skip it and see the next byte, and so on&lt;/p&gt;

&lt;p&gt;Of course, if user want to make &apos;\x00&apos; as 4 bytes, the above seems wrong.  &lt;br/&gt;
For this case, we should also support constructing FuzzyRowFilter with the readable byte array.&lt;br/&gt;
For example,  &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;???11??AA\x00??\? &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; =&amp;gt; &lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;=&apos;?&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;=&apos;?&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;=&apos;?&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;=&apos;1&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt;=&apos;1&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt;=&apos;?&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt;=&apos;?&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt;=&apos;A&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;=&apos;A&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;9&amp;#93;&lt;/span&gt;=0&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;10&amp;#93;&lt;/span&gt;=&apos;?&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;11&amp;#93;&lt;/span&gt;=&apos;?&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;12&amp;#93;&lt;/span&gt;=&apos;\&apos;&lt;br/&gt;
byte&lt;span class=&quot;error&quot;&gt;&amp;#91;13&amp;#93;&lt;/span&gt;=&apos;?&apos;&lt;/p&gt;

&lt;p&gt;Correct me if something wrong &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13964901" author="zjushch" created="Thu, 10 Apr 2014 02:03:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;not sure I got the question, sorry: which checks?&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * &amp;lt;p&amp;gt;
+ *   NOTE that currently no checks are performed to ensure that length of ranges lower bytes and
+ *   ranges upper bytes match mask length. Filter may work incorrectly or fail (with runtime
+ *   exceptions) &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is broken.
+ * &amp;lt;/p&amp;gt;
+ *
+ * &amp;lt;p&amp;gt;
+ *   NOTE that currently no checks are performed to ensure that ranges are defined correctly (i.e.
+ *   lower value of each range is not greater than upper value). Filter may work incorrectly or fail
+ *   (with runtime exceptions) &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is broken.
+ * &amp;lt;/p&amp;gt;
+ *
+ * &amp;lt;p&amp;gt;
+ *   NOTE that currently no checks are performed to ensure that at non-fixed positions in
+ *   ranges lower bytes and ranges upper bytes zeroes are set, but implementation may rely on &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.
+ * &amp;lt;/p&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I mean the above checks&lt;/p&gt;</comment>
                            <comment id="13964919" author="alexb" created="Thu, 10 Apr 2014 02:36:06 +0000"  >&lt;p&gt;got it thanx.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We could use &apos;\&apos; before &apos;?&apos; to define the normal byte &apos;?&apos;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;and then \ before \ if we need \. And so on.&lt;/p&gt;

&lt;p&gt;I mean we can do that. Having Strings &lt;em&gt;with special chars&lt;/em&gt; where impl expects &lt;em&gt;any&lt;/em&gt; bytes as normal input at times not trivial. And if we really want that we would make it in API in some from of standard. And then, we could have it everywhere, e.g. in Puts, etc. I am not sure we want to create specific format for one filter..&lt;/p&gt;

&lt;p&gt;What are your thoughts on builder? seems like can help to avoid all those special chars and still keep it very human-friendly. We can allow also Strings as I mentioned with \x notation. But the difference is that no pain with special chars and easy guiding API for users...&lt;/p&gt;</comment>
                            <comment id="13965203" author="kuzmiigo" created="Thu, 10 Apr 2014 10:30:06 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=alexb&quot; class=&quot;user-hover&quot; rel=&quot;alexb&quot;&gt;Alex Baranau&lt;/a&gt;, you are right about keeping the mask separate, somehow I forgot that ? can be a &#8220;normal byte&#8221;, sorry.&lt;/p&gt;

&lt;p&gt;I have just checked other Filters, it seems that all are quite low-level and use byte arrays as constructor parameters. It makes sense to use byte arrays as parameters to be consistent, but adding a builder could be nice as well.&lt;/p&gt;

&lt;p&gt;For me, the biggest &#8220;inconvenience&#8221; (especially when using HBase shell) of constructing a FuzzyRowFilter is not in byte arrays themselves, but in Lists of Pairs (or Triples) of byte arrays. I would add a simpler constructor for one rule (I guess one rule would be enough quite often) and a separate method to add rules:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
FuzzyRowFilter(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] fuzzyInfo, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] lowerBytes, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] upperBytes)
void addRule(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] fuzzyInfo, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] lowerBytes, &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] upperBytes)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13965545" author="alexb" created="Thu, 10 Apr 2014 17:07:53 +0000"  >&lt;p&gt;totally agree on overloading ctor. Will add that. Also will see if Builder makes sense: it&apos;d help with these lists of pairs/triples.&lt;/p&gt;

&lt;p&gt;Thank you for looking at the patch, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kuzmiigo&quot; class=&quot;user-hover&quot; rel=&quot;kuzmiigo&quot;&gt;Igor Kuzmitshov&lt;/a&gt;!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12602115">HBASE-6526</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12542082" name="HBASE-6618-algo-desc-bits.png" size="149983" author="alexb" created="Thu, 23 Aug 2012 04:03:33 +0000"/>
                            <attachment id="12542081" name="HBASE-6618-algo.patch" size="8466" author="alexb" created="Thu, 23 Aug 2012 04:03:33 +0000"/>
                            <attachment id="12562810" name="HBASE-6618.patch" size="89987" author="alexb" created="Mon, 31 Dec 2012 19:05:30 +0000"/>
                            <attachment id="12562822" name="HBASE-6618_2.path" size="89988" author="alexb" created="Mon, 31 Dec 2012 23:07:24 +0000"/>
                            <attachment id="12563115" name="HBASE-6618_3.path" size="90004" author="alexb" created="Thu, 3 Jan 2013 18:09:52 +0000"/>
                            <attachment id="12638828" name="HBASE-6618_4.patch" size="100603" author="alexb" created="Sat, 5 Apr 2014 02:22:30 +0000"/>
                            <attachment id="12638881" name="HBASE-6618_5.patch" size="122154" author="alexb" created="Sat, 5 Apr 2014 21:18:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 Aug 2012 06:37:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>242546</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 36 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02vl3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14718</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>