<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 21:08:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-15893/HBASE-15893.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-15893] Get object</title>
                <link>https://issues.apache.org/jira/browse/HBASE-15893</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Patch for creating Get objects.  Get objects can be passed to the Table implementation to fetch results for a given row. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12973086">HBASE-15893</key>
            <summary>Get object</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                            <parent id="12914633">HBASE-14850</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sudeeps">Sudeep Sunthankar</assignee>
                                    <reporter username="sudeeps">Sudeep Sunthankar</reporter>
                        <labels>
                    </labels>
                <created>Thu, 26 May 2016 14:46:45 +0000</created>
                <updated>Wed, 30 Nov 2016 11:06:42 +0000</updated>
                            <resolved>Thu, 3 Nov 2016 22:18:58 +0000</resolved>
                                                    <fixVersion>HBASE-14850</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15304021" author="sudeeps" created="Fri, 27 May 2016 12:49:57 +0000"  >&lt;p&gt;Submitted by mistake&lt;/p&gt;</comment>
                            <comment id="15304537" author="eclark" created="Fri, 27 May 2016 18:42:42 +0000"  >&lt;p&gt;-1&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Auto generated everywhere. If code isn&apos;t needed and already used it shouldn&apos;t be here. Remove everything that&apos;s not 100% needed.&lt;/li&gt;
	&lt;li&gt;Makefile overcommit&lt;/li&gt;
	&lt;li&gt;There&apos;s no need to have a byte comparable when string already has all that.&lt;/li&gt;
	&lt;li&gt;Don&apos;t need cell and key value. There&apos;s no off heap. We&apos;ve made no promises about kv&apos;s aways being in the same contiguous memory so there&apos;s no need to have the distinction.&lt;/li&gt;
	&lt;li&gt;hconstants is an abomination and should never ever be repeated.&lt;/li&gt;
	&lt;li&gt;Don&apos;t create a new object and then add it into a unique pointer. Use make_unique&lt;/li&gt;
	&lt;li&gt;Prefer the protobuf whenever it&apos;s api is palatable.&lt;/li&gt;
	&lt;li&gt;B after H is always capital.&lt;/li&gt;
	&lt;li&gt;Utils is an awful class name&lt;/li&gt;
	&lt;li&gt;Right now I don&apos;t even think that we want to try implementing kv/cell. The protobufs have been doing very well in perf tests.&lt;/li&gt;
	&lt;li&gt;Tests. These all need tests. If things aren&apos;t covered by tests I&apos;m not ok with committing it.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15305165" author="stack" created="Sat, 28 May 2016 04:14:07 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sudeeps&quot; class=&quot;user-hover&quot; rel=&quot;sudeeps&quot;&gt;Sudeep Sunthankar&lt;/a&gt; Mind putting the putting the next patch after addressing the above up on review board? Its a biggie and putting it up on review board helps reviewing the big ones. Use the new submit-patch.py and it does most of this for you (don&apos;t worry about messing up... we&apos;ll help you through):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ ./dev-support/submit-patch.py --help
usage: submit-patch.py [-h] [-b BRANCH] [-jid JIRA_ID] [-srb]
                       [--reviewers REVIEWERS] [--patch-dir PATCH_DIR]
                       [--rb-repo RB_REPO]

optional arguments:
  -h, --help            show &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; help message and exit
  -b BRANCH, --branch BRANCH
                        Branch to use &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; generating diff. If not specified, tracking branch is used. If there is no tracking branch, error will be thrown.
  -jid JIRA_ID, --jira-id JIRA_ID
                        Jira id of the issue. If set, we deduce next patch version from attachments in the jira and also upload the &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; patch. Script will ask &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; jira username/password &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; authentication. If not set, patch is named &amp;lt;branch&amp;gt;_v0.patch.
  -srb, --skip-review-board
                        Don&apos;t create/update the review board.
  --reviewers REVIEWERS
                        Comma separated list of users to add as reviewers.
  --patch-dir PATCH_DIR
                        Directory to store patch files. If it doesn&apos;t exist, it will be created. Default: ~/patches
  --rb-repo RB_REPO     Review board repository. Default: hbase-git

To avoid having to enter jira/review board username/password every time, setup an encrypted ~/.apache-cred files as follows:
1) Create a file with following single line:
{&lt;span class=&quot;code-quote&quot;&gt;&quot;jira_username&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;appy&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;jira_password&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;123&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;rb_username&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;appy&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;rb_password&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;@#$&quot;&lt;/span&gt;}
2) Encrypt it with openssl.
openssl enc -aes-256-cbc -in &amp;lt;file&amp;gt; -out ~/.apache-creds
3) Delete original file.
Now onwards, you&apos;ll need to enter &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; encryption key only once per run. If you forget the key, simply regenerate ~/.apache-cred file again.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15306151" author="sudeeps" created="Mon, 30 May 2016 01:32:00 +0000"  >&lt;p&gt;Thanks for the suggestions Elliott, will work on the same &lt;/p&gt;</comment>
                            <comment id="15306156" author="sudeeps" created="Mon, 30 May 2016 01:34:38 +0000"  >&lt;p&gt;Sure Stack, will use submit-patch.py for subsequent patches.&lt;/p&gt;</comment>
                            <comment id="15307118" author="sudeeps" created="Tue, 31 May 2016 02:42:09 +0000"  >&lt;p&gt;Hi Elliott, &lt;br/&gt;
 I have some queries regarding your feedback. Please help me in resolving them.&lt;br/&gt;
1) Makefile overcommit&lt;br/&gt;
    &amp;#8212; I had created separate branches for Makefile and Get patch. So the Get patch consists of the source code necessary for Get objects in adddition to the Makefile (which was submitted in a separate patch). Please let me know if this is the correct way or should I use only one branch to create the pathces. In this case,  the created patch wont have repeated files.&lt;br/&gt;
2) There&apos;s no need to have a byte comparable when string already has all that.&lt;br/&gt;
    &amp;#8212; We have modelled the classes closely as per the Java API&apos;s. So we have created a similar Bytes class. Please suggest your thoughts on the same&lt;br/&gt;
3) hconstants is an abomination and should never ever be repeated.&lt;br/&gt;
    &amp;#8212; Motivation for creating hconstants was same as above. If we are doing away with hconstants, should we define the constants in the separate classes when they are being used ? What if a constant is required in two separate classes ? &lt;br/&gt;
4) Don&apos;t need cell and key value. There&apos;s no off heap. We&apos;ve made no promises about kv&apos;s aways being in the same contiguous memory so there&apos;s no need to have the distinction.&lt;br/&gt;
    &amp;#8212; Could you please explain this in detail&lt;br/&gt;
5) Prefer the protobuf whenever it&apos;s api is palatable.&lt;br/&gt;
    &amp;#8212; Could you please elaborate this  more. From what I understand, should we make use of the enums defined in protobuf API&apos;s instead of having two separate copies ? Can you give an example of any other API&apos;s ? &lt;br/&gt;
6) B after H is always capital.&lt;br/&gt;
    &amp;#8212; Taken care of &lt;br/&gt;
7) Utils is an awful class name&lt;br/&gt;
    &amp;#8212; We have changed it to CommonUtils. &lt;/p&gt;</comment>
                            <comment id="15308920" author="enis" created="Wed, 1 Jun 2016 00:03:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;Motivation for creating hconstants was same as above. If we are doing away with hconstants, should we define the constants in the separate classes when they are being used ? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Indeed. The HConstants was an idea that went rouge. The new thinking is to declare the constants in the classes where they are used. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I had created separate branches for Makefile and Get patch. So the Get patch consists of the source code necessary for Get objects in adddition to the Makefile&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You can create stacked patches, but every single issue should only contain changes relevant to that particular issue. With git, managing this is pretty manageable with &lt;tt&gt;git branch&lt;/tt&gt;, &lt;tt&gt;git rebase -i&lt;/tt&gt;, etc. One complication is with RB where the patch has to be generated with &lt;tt&gt;git diff --full-index&lt;/tt&gt;. &lt;/p&gt;</comment>
                            <comment id="15308973" author="enis" created="Wed, 1 Jun 2016 00:43:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;There&apos;s no need to have a byte comparable when string already has all that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Agreed, we can either use strings directly, or typedef BYTE_ARRAY as a string. Our KV can be something like: &lt;a href=&quot;https://github.com/google/leveldb/blob/master/include/leveldb/slice.h&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/google/leveldb/blob/master/include/leveldb/slice.h&lt;/a&gt;.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Don&apos;t need cell and key value. There&apos;s no off heap. We&apos;ve made no promises about kv&apos;s aways being in the same contiguous memory so there&apos;s no need to have the distinction.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We still need a way to represent the &quot;data model&quot; of a cell (give me the row keys from underlying row) etc. However, one direction that we can follow is like the flatbuffers approach where every &quot;cell&quot; is a string, and we have KV as an accessor-type object, not instantiated per instance. This will work with KeyValueCodec, but not with any other codec that we can improve. The Cell interface is not just for off-heap KV versus on-heap. The CellCodec can encode and re-use the same underlying byte[]s for the rowKey, CF, etc across cells. I think we do not want to limit ourselves to only be able to KV representation in RPC. So I would opt for a Cell-like interface type where the scan&apos;s Result&apos;s can be encoded more efficiently. For that, we still need a Cell interface, and a concrete KV implementation. However, we can make KV a private class, not part of the public API.  &lt;/p&gt;

&lt;p&gt;Let&apos;s create a separate jira for KV + Cell + Bytes as a foundational patch for rest of Get / Put, etc. &lt;/p&gt;</comment>
                            <comment id="15309195" author="eclark" created="Wed, 1 Jun 2016 03:45:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;Our KV can be something like: &lt;a href=&quot;https://github.com/google/leveldb/blob/master/include/leveldb/slice.h&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/google/leveldb/blob/master/include/leveldb/slice.h&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/google/leveldb/blob/master/include/leveldb/db.h#L83&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/google/leveldb/blob/master/include/leveldb/db.h#L83&lt;/a&gt;&lt;br/&gt;
That&apos;s how bytes are passed back. If we want to have something like slice that&apos;s what IOBuf&apos;s are.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The Cell interface is not just for off-heap KV versus on-heap.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The only difference between cell and key value is what accessors are there. Cell was a hack to get around removing some that made promises around data layout. We have no such inconveniences around having already promised a static data layout, hence the cell/kv difference isn&apos;t needed. We shouldn&apos;t add any classes that aren&apos;t needed yet.&lt;/p&gt;</comment>
                            <comment id="15311012" author="enis" created="Wed, 1 Jun 2016 20:05:41 +0000"  >&lt;blockquote&gt;&lt;p&gt;That&apos;s how bytes are passed back. If we want to have something like slice that&apos;s what IOBuf&apos;s are.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That is fine if all you do is get with a key for a single cell. We still need a way to iterate over (rowKey,column+ts -&amp;gt; value) mappings within a given row, as a result of Get, or iterate over the results of Scan. &lt;br/&gt;
Even levelDB&apos;s scan iterator is Slice based, however, unlike levelDB where there is only key, we have rowKey+cf+column+ts to represent somehow. &lt;br/&gt;
&lt;a href=&quot;https://github.com/google/leveldb/blob/master/include/leveldb/iterator.h#L65&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/google/leveldb/blob/master/include/leveldb/iterator.h#L65&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The only difference between cell and key value is what accessors are there. Cell was a hack to get around removing some that made promises around data layout. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;KV was a bad idea in the first place. It ties the underlying representation of the in-memory data model to a very specific representation. We should not make the same mistake and make the implementation know the returned representation format in the new client. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We have no such inconveniences around having already promised a static data layout, hence the cell/kv difference isn&apos;t needed. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We should not &quot;promise&quot; any specific in-memory representation hence we still need a way to abstract an interface so that you can iterate over a single Get results, and still can inspect the column names, timestamps, etc. It does not necessarily be cell versus KV, but we need the abstraction in place. &lt;/p&gt;</comment>
                            <comment id="15311046" author="eclark" created="Wed, 1 Jun 2016 20:25:26 +0000"  >&lt;p&gt;You don&apos;t need to abstract it out if you never make the promises.&lt;/p&gt;</comment>
                            <comment id="15365945" author="sudeeps" created="Thu, 7 Jul 2016 10:58:04 +0000"  >&lt;p&gt;The updated patch consists of sources required for creation of Get Object . This can be used for HBase Get.&lt;/p&gt;</comment>
                            <comment id="15406910" author="enis" created="Thu, 4 Aug 2016 00:45:44 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sudeeps&quot; class=&quot;user-hover&quot; rel=&quot;sudeeps&quot;&gt;Sudeep Sunthankar&lt;/a&gt; for the new patch. &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Why is this part of the API? It is an internal function:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; ReturnCode CheckRow(&lt;span class=&quot;code-keyword&quot;&gt;const&lt;/span&gt; std::string &amp;amp;row);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;do we need ReturnCode at all? &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Should be named &lt;tt&gt;Consistency&lt;/tt&gt;:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; CONSISTENCY {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Multiple methods in get are declared with arguments passed as references, even though they are primitive types. Is this standard in C++ land? Shouldn&apos;t we do pass-by-value if primitive, and pass-by-reference otherwise? Sorry I am not up-to-date on C++ best practices. Same thing for returned results.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  Get&amp;amp; SetMaxVersions(&lt;span class=&quot;code-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&amp;amp;);
+  Get&amp;amp; SetCacheBlocks(&lt;span class=&quot;code-keyword&quot;&gt;const&lt;/span&gt; bool&amp;amp;);
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Why NumFamilies() instead of getFamilyMap()?&lt;br/&gt;
+const int Get::NumFamilies() const {&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We don&apos;t need this (it was removed some time ago, but we forgot to deprecate the PB field):
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
+  bool closest_row_before_;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Should be &lt;tt&gt;IsAllTime()&lt;/tt&gt; ?
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  bool GetAllTime() &lt;span class=&quot;code-keyword&quot;&gt;const&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Remove these?
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    /*std::string error_str(
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15407895" author="sudeeps" created="Thu, 4 Aug 2016 14:59:06 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please find my comments below&lt;/p&gt;
  &lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;p&gt;+static ReturnCode CheckRow(const std::string &amp;amp;row);&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;	Instead of returning integer 0 for suceess and otherwise, have used an enum which can be used for indicating error codes &lt;/p&gt;
&lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;p&gt;+enum CONSISTENCY {&lt;br/&gt;
+bool closest_row_before_;&lt;br/&gt;
+bool GetAllTime() const;&lt;br/&gt;
+    /*std::string error_str(&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;	Will address in the subsequent patch&lt;/p&gt;
&lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;p&gt;+NumFamilies() instead of getFamilyMap()?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;	We have an API GetFamily(); NumFamilies() was added as there is a similar method in Java client&lt;/p&gt;
&lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;p&gt;+Multiple methods in get are declared with arguments passed as references, even though they are primitive types.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;	It is not required to pass primitive types as reference. Will address the same in next patch&lt;br/&gt;
	For returned results the reference is returned so that we can use method chaining. (get.SetMaxVersions(4).SetCacheBlocks(false))&lt;/p&gt;</comment>
                            <comment id="15408739" author="enis" created="Fri, 5 Aug 2016 01:18:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;Instead of returning integer 0 for suceess and otherwise, have used an enum which can be used for indicating error codes&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;But we are never returning error codes, we always throw exception, no? &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We have an API GetFamily(); NumFamilies() was added as there is a similar method in Java client&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;GetFamily() should be named GetFamilyMap(). NumFamilies does not seem too useful, we can just remove it. &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;For returned results the reference is returned so that we can use method chaining. (get.SetMaxVersions(4).SetCacheBlocks(false))&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I was referring to return values like this: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+&lt;span class=&quot;code-keyword&quot;&gt;const&lt;/span&gt; bool &amp;amp; Get::GetCacheBlocks() &lt;span class=&quot;code-keyword&quot;&gt;const&lt;/span&gt; {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15409499" author="sudeeps" created="Fri, 5 Aug 2016 14:14:49 +0000"  >&lt;p&gt;This patch consists of changes as per the feedback&lt;/p&gt;</comment>
                            <comment id="15409785" author="eclark" created="Fri, 5 Aug 2016 17:46:45 +0000"  >&lt;ul&gt;
	&lt;li&gt;None of this is hooked up to the client.&lt;/li&gt;
	&lt;li&gt;No Get before getters. Eg GetMaxVersions becomes MaxVersions&lt;/li&gt;
	&lt;li&gt;No comments on most of the classes or methods.&lt;/li&gt;
	&lt;li&gt;Don&apos;t make Get&apos;s destructor virtual until we need to. We shouldn&apos;t be planning to have Get be extendable until we need it.&lt;/li&gt;
	&lt;li&gt;GET_FAMILY_MAP is pretty badly named.&lt;/li&gt;
	&lt;li&gt;Should we be using shared pointers for ownership of strings in get?&lt;/li&gt;
	&lt;li&gt;hbase-native-client/core/get-test.cc no need to include glog. You&apos;re not using it.&lt;/li&gt;
	&lt;li&gt;prefer constexpr over const static in a class. Better yet just don&apos;t expose that constant at all.&lt;/li&gt;
	&lt;li&gt;Don&apos;t use unique pointer in time range tests. Tests should be examples of how we expect people to create objects and nothing uses unique pointers.&lt;/li&gt;
	&lt;li&gt;Max versions should be a uint32_t&lt;/li&gt;
	&lt;li&gt;default for SetMaxVersions should be in line with the type and should be the same default as our other clients. ( 1 )&lt;/li&gt;
	&lt;li&gt;We already have a Consistency enum don&apos;t duplicate that.&lt;/li&gt;
	&lt;li&gt;Please please don&apos;t copy paste.
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IllegalArgumentException&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="15411668" author="sudeeps" created="Mon, 8 Aug 2016 11:03:54 +0000"  >&lt;p&gt;Thanks for the feedback &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; We are working on your feedback. Could you please clarify some of my doubts&lt;/p&gt;

&lt;p&gt;1) We already have a Consistency enum don&apos;t duplicate that&lt;br/&gt;
   &amp;#8211; Should we use the enum defined in if/Client.proto ? &lt;br/&gt;
2) None of this is hooked up to the client. &lt;br/&gt;
   &amp;#8211; Do you mean adding the tests to BUCK as is done in sub-task 51. &lt;br/&gt;
3) Should we be using shared pointers for ownership of strings in get?&lt;br/&gt;
   &amp;#8211; Any specific reason for this &lt;/p&gt;
</comment>
                            <comment id="15414638" author="sudeeps" created="Wed, 10 Aug 2016 03:14:03 +0000"  >&lt;p&gt;This patches addresses the below points as per the last feedback&lt;/p&gt;

&lt;p&gt;1) We already have a Consistency enum don&apos;t duplicate that&lt;br/&gt;
    &amp;#8212; Using Consistency enum defined in if/Client.proto&lt;br/&gt;
2) Naming of GET_FAMILY_MAP&lt;br/&gt;
    &amp;#8212; Changed to FAMILY_MAP&lt;br/&gt;
3) prefer constexpr over const static in a class. Better yet just don&apos;t expose that constant at all.&lt;br/&gt;
    &amp;#8212; Moved the constant to a local variable in CheckRow()&lt;br/&gt;
4) Added comments for methods&lt;br/&gt;
5) Tests hooked up to client&lt;/p&gt;</comment>
                            <comment id="15459970" author="sudeeps" created="Sat, 3 Sep 2016 00:14:38 +0000"  >&lt;p&gt;&lt;br/&gt;
Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eclark&quot; class=&quot;user-hover&quot; rel=&quot;eclark&quot;&gt;Elliott Clark&lt;/a&gt;, any thoughts on the last patch &lt;/p&gt;</comment>
                            <comment id="15566855" author="enis" created="Tue, 11 Oct 2016 22:45:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sudeeps&quot; class=&quot;user-hover&quot; rel=&quot;sudeeps&quot;&gt;Sudeep Sunthankar&lt;/a&gt; the new tests are failing with the patch: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
TESTING ALL TESTS
PASS    &amp;lt;100ms  2 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//connection:connection-pool-test
&lt;/span&gt;PASS    &amp;lt;100ms  3 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//serde:client-deserializer-test
&lt;/span&gt;PASS    &amp;lt;100ms  4 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//serde:client-serializer-test
&lt;/span&gt;PASS    &amp;lt;100ms  1 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//serde:region-info-deserializer-test
&lt;/span&gt;PASS    &amp;lt;100ms  4 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//serde:server-name-test
&lt;/span&gt;PASS    &amp;lt;100ms  3 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//serde:table-name-test
&lt;/span&gt;PASS    &amp;lt;100ms  3 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//serde:zk-deserializer-test
&lt;/span&gt;PASS    &amp;lt;100ms  1 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//utils:user-util-test
&lt;/span&gt;PASS    &amp;lt;100ms  7 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//core:cell-test
&lt;/span&gt;PASS    &amp;lt;100ms  2 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//core:get-test
&lt;/span&gt;PASS     50.0s  2 Passed   0 Skipped   0 Failed   &lt;span class=&quot;code-comment&quot;&gt;//core:location-cache-test
&lt;/span&gt;FAIL    &amp;lt;100ms  1 Passed   0 Skipped   3 Failed   &lt;span class=&quot;code-comment&quot;&gt;//core:time_range-test
&lt;/span&gt;FAILURE TimeRangeTest NegativeMinTime: unknown file
C++ exception with description &lt;span class=&quot;code-quote&quot;&gt;&quot;Timestamp cannot be negative. min_timestamp: -100, max_timestamp:2000&quot;&lt;/span&gt; thrown in the test body.

====STANDARD OUT====
unknown file: Failure
C++ exception with description &lt;span class=&quot;code-quote&quot;&gt;&quot;Timestamp cannot be negative. min_timestamp: -100, max_timestamp:2000&quot;&lt;/span&gt; thrown in the test body.
====STANDARD ERR====

FAILURE TimeRangeTest NegativeMaxTime: unknown file
C++ exception with description &lt;span class=&quot;code-quote&quot;&gt;&quot;Timestamp cannot be negative. min_timestamp: 100, max_timestamp:-2000&quot;&lt;/span&gt; thrown in the test body.

====STANDARD OUT====
unknown file: Failure
C++ exception with description &lt;span class=&quot;code-quote&quot;&gt;&quot;Timestamp cannot be negative. min_timestamp: 100, max_timestamp:-2000&quot;&lt;/span&gt; thrown in the test body.
====STANDARD ERR====

FAILURE TimeRangeTest MinTimeGreater: unknown file
C++ exception with description &lt;span class=&quot;code-quote&quot;&gt;&quot;max_timestamp [2000] should be greater than min_timestamp [10000]&quot;&lt;/span&gt; thrown in the test body.

====STANDARD OUT====
unknown file: Failure
C++ exception with description &lt;span class=&quot;code-quote&quot;&gt;&quot;max_timestamp [2000] should be greater than min_timestamp [10000]&quot;&lt;/span&gt; thrown in the test body.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can you please take a look. &lt;/p&gt;</comment>
                            <comment id="15566948" author="sudeeps" created="Tue, 11 Oct 2016 23:31:20 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;  I have added test cases which succeed as well as fail by throwing an exception.These exceptions include cases where either a negative timestamp is passed or if max_timestamp parameter is less than min_timestamp. Please let me know if it is ok to keep them.&lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;br/&gt;
Best Regards,&lt;br/&gt;
Sudeep S&lt;/p&gt;</comment>
                            <comment id="15566985" author="enis" created="Tue, 11 Oct 2016 23:46:38 +0000"  >&lt;p&gt;It is fine to add test cases where the expectation is that an exception is thrown. However, the unit test itself should not fail. &lt;/p&gt;</comment>
                            <comment id="15567251" author="enis" created="Wed, 12 Oct 2016 01:53:30 +0000"  >&lt;p&gt;Can you also make sure that you are using indentation level of 2 spaces consistently. &lt;/p&gt;</comment>
                            <comment id="15594198" author="sudeeps" created="Fri, 21 Oct 2016 06:07:05 +0000"  >&lt;p&gt;Hi ,&lt;br/&gt;
Fixed the issue where unit tests where failing&lt;br/&gt;
&amp;#8211;&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="15611390" author="sudeeps" created="Thu, 27 Oct 2016 09:54:57 +0000"  >&lt;p&gt;Resubmitting the patch by removing the stat information so that patch command works properly.&lt;/p&gt;</comment>
                            <comment id="15626760" author="enis" created="Tue, 1 Nov 2016 21:41:41 +0000"  >&lt;p&gt;For negative tests, this is still not correct: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+TEST (TimeRangeTest, NegativeMaxTime) {
+  &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+    TimeRange timerange_neg_max = TimeRange();
+    TimeRange(100, -2000);
+  } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;const&lt;/span&gt; std::runtime_error &amp;amp;rex) {
+    LOG(ERROR) &amp;lt;&amp;lt; &lt;span class=&quot;code-quote&quot;&gt;&quot;Caught Exception: &quot;&lt;/span&gt; &amp;lt;&amp;lt; rex.what();
+  }
+}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You should add a &lt;tt&gt;FAIL()&lt;/tt&gt; call as a last operation in the try block so that if we fail to raise an exception the test will fail. Also the Log should not be emitted with ERROR since the exception is expected. So please use INFO level, and change the message like &quot;Caught expected exception&quot;. This applies to all negative tests. &lt;br/&gt;
Checked the documentation, I think we should better use &lt;tt&gt;ASSERT_THROW&lt;/tt&gt; macro (&lt;a href=&quot;https://github.com/google/googletest/blob/master/googletest/docs/AdvancedGuide.md#exception-assertions&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/google/googletest/blob/master/googletest/docs/AdvancedGuide.md#exception-assertions&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;This got unaddressed from previous reviews it seems: &lt;tt&gt;CheckRow()&lt;/tt&gt; should not be public. &lt;/p&gt;
</comment>
                            <comment id="15628920" author="sudeeps" created="Wed, 2 Nov 2016 13:11:33 +0000"  >&lt;p&gt;Thanks for the feedback &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can use ASSERT_THROW(statement, exception_type) which will fail if the exception_type does not match or if we fail to raise an exception from the library. FAIL() is not required.&lt;br/&gt;
If we are using FAIL() along-with ASSERT_THROW(statement, exception_type), the test will FAIL() even if there is an exception match. We can add some tests with ASSERT_NO_THROW() + FAIL() which will let us know if exceptions have to be thrown or not. I will submit a patch with those changes.&lt;/p&gt;

&lt;p&gt;CheckRow() checks for the validity of row to be fetched. The same function can be used in Put or Delete because of which I made it public static. I will make it private in the next patch,&lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;br/&gt;
Thanks&lt;/p&gt;
</comment>
                            <comment id="15628979" author="sudeeps" created="Wed, 2 Nov 2016 13:30:28 +0000"  >&lt;p&gt;I forgot to add that the tests will generate fatal failure if FAIL() is added to the test cases.&lt;/p&gt;</comment>
                            <comment id="15631901" author="sudeeps" created="Thu, 3 Nov 2016 07:17:06 +0000"  >&lt;p&gt;This patch addresses the below 2 points raised in the feedback.&lt;br/&gt;
1) Addition of ASSERT_THROW() and ASSERT_NO_THROW() macros in unit tests.&lt;br/&gt;
2) Get::CheckRow() made private from public static.&lt;/p&gt;</comment>
                            <comment id="15634489" author="enis" created="Thu, 3 Nov 2016 22:18:42 +0000"  >&lt;p&gt;I&apos;ve pushed the v8 version of the patch. v7 had some other changes in the build coming from &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-16489&quot; title=&quot;Configuration parsing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-16489&quot;&gt;&lt;del&gt;HBASE-16489&lt;/del&gt;&lt;/a&gt;. I removed those and added a gitignore change to ignore /build directory. &lt;br/&gt;
We can address further comments if any in follow up jiras. &lt;/p&gt;

&lt;p&gt;Thanks Sudeep for the patch. &lt;/p&gt;</comment>
                            <comment id="15634662" author="sudeeps" created="Thu, 3 Nov 2016 23:35:49 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;. Sorry for mixing up the patches. I will make sure to avoid them going ahead.&lt;/p&gt;</comment>
                            <comment id="15644225" author="anoop.hbase" created="Mon, 7 Nov 2016 13:50:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=enis&quot; class=&quot;user-hover&quot; rel=&quot;enis&quot;&gt;Enis Soztutar&lt;/a&gt;  The commit went to a branch &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-14850&quot; title=&quot;C++ client implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-14850&quot;&gt;HBASE-14850&lt;/a&gt;.  Seem hbase-14850 is the correct?  This duplicated branch names causing issue with Git in windows.  Can we delete the duplicated one pls?&lt;/p&gt;</comment>
                            <comment id="15645160" author="enis" created="Mon, 7 Nov 2016 19:23:42 +0000"  >&lt;p&gt;Thanks Anoop. I think the one with the upper case is the correct branch. I&apos;ve deleted the lower case one. Let me know if this is still causing problems. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12806391" name="HBASE-15893.HBASE-14850.v1.patch" size="163815" author="sudeeps" created="Thu, 26 May 2016 14:48:00 +0000"/>
                            <attachment id="12816609" name="HBASE-15893.HBASE-14850.v2.patch" size="21105" author="sudeeps" created="Thu, 7 Jul 2016 10:58:04 +0000"/>
                            <attachment id="12822293" name="HBASE-15893.HBASE-14850.v3.patch" size="18411" author="sudeeps" created="Fri, 5 Aug 2016 14:14:49 +0000"/>
                            <attachment id="12822943" name="HBASE-15893.HBASE-14850.v4.patch" size="20795" author="sudeeps" created="Wed, 10 Aug 2016 03:14:03 +0000"/>
                            <attachment id="12834610" name="HBASE-15893.HBASE-14850.v5.patch" size="19682" author="sudeeps" created="Fri, 21 Oct 2016 06:07:05 +0000"/>
                            <attachment id="12835541" name="HBASE-15893.HBASE-14850.v6.patch" size="18968" author="sudeeps" created="Thu, 27 Oct 2016 09:54:57 +0000"/>
                            <attachment id="12836743" name="HBASE-15893.HBASE-14850.v7.patch" size="21341" author="sudeeps" created="Thu, 3 Nov 2016 07:17:06 +0000"/>
                            <attachment id="12836984" name="HBASE-15893_v8.patch" size="20902" author="enis" created="Thu, 3 Nov 2016 22:18:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 27 May 2016 18:42:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2yjlb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>