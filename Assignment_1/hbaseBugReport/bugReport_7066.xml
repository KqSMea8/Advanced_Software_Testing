<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:42:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-7066/HBASE-7066.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-7066] Some HMaster coprocessor exceptions are being swallowed in try catch blocks</title>
                <link>https://issues.apache.org/jira/browse/HBASE-7066</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is causing HMaster.shutdown() and HMaster.stopMaster() to succeed even when an AccessDeniedException is thrown.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12613971">HBASE-7066</key>
            <summary>Some HMaster coprocessor exceptions are being swallowed in try catch blocks</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="toffer">Francis Liu</assignee>
                                    <reporter username="toffer">Francis Liu</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Oct 2012 23:38:07 +0000</created>
                <updated>Wed, 13 Apr 2016 02:28:46 +0000</updated>
                                            <version>0.94.2</version>
                    <version>0.95.2</version>
                                                    <component>Coprocessors</component>
                    <component>security</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="13486521" author="toffer" created="Mon, 29 Oct 2012 23:52:03 +0000"  >&lt;p&gt;0.94 backport, I didn&apos;t fix the hooks in the balancer() method as this would change the method signature and break backward compatiblity. Let me know if I should.&lt;/p&gt;</comment>
                            <comment id="13486538" author="hadoopqa" created="Tue, 30 Oct 2012 00:12:07 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12551283/HBASE-7066_94.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12551283/HBASE-7066_94.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 patch&lt;/font&gt;.  The patch command could not apply the patch.&lt;/p&gt;

&lt;p&gt;Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3176//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3176//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13487208" author="apurtell" created="Tue, 30 Oct 2012 20:38:36 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13487219" author="zhihyu@ebaysf.com" created="Tue, 30 Oct 2012 20:50:40 +0000"  >&lt;p&gt;Looks good. nit:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+      LOG.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error invoking balance&quot;&lt;/span&gt;, ioe);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Typo: balance -&amp;gt; balancer.&lt;/p&gt;</comment>
                            <comment id="13487521" author="ram_krish" created="Wed, 31 Oct 2012 04:53:07 +0000"  >&lt;p&gt;+1 for trunk patch.&lt;br/&gt;
Also i would feel not to change the 0.94 balance().  Because in one of the issues we tried to change it but did not make it as it will result in api change.&lt;/p&gt;</comment>
                            <comment id="13487526" author="toffer" created="Wed, 31 Oct 2012 05:00:48 +0000"  >&lt;p&gt;Ted, Fixed the nit.&lt;/p&gt;</comment>
                            <comment id="13487567" author="hadoopqa" created="Wed, 31 Oct 2012 05:54:36 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12551482/HBASE-7066_trunk.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12551482/HBASE-7066_trunk.patch&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 85 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3195//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13487798" author="zhihyu@ebaysf.com" created="Wed, 31 Oct 2012 14:07:57 +0000"  >&lt;p&gt;Integrated to trunk.&lt;/p&gt;

&lt;p&gt;Thanks for the patch Francis. Do you want to address Ram&apos;s comment about 0.94 patch ?&lt;/p&gt;

&lt;p&gt;Thanks for the review, Andy and Ram.&lt;/p&gt;</comment>
                            <comment id="13487854" author="stack" created="Wed, 31 Oct 2012 15:30:55 +0000"  >&lt;p&gt;Previously, if an exception in CPs in say the shutdown method, we would catch it, log it, and then keep going.  Now, we let the exception out and skip running the rest of shutdown.  As I see it, on shutdown, if exception in CP, we are going to fail the shutdown.  Right?  This is probably not what we want.&lt;/p&gt;</comment>
                            <comment id="13487891" author="zhihyu@ebaysf.com" created="Wed, 31 Oct 2012 16:01:53 +0000"  >&lt;p&gt;If AccessDeniedException is thrown, shutdown would not succeed.&lt;br/&gt;
That&apos;s the purpose of this JIRA, right ?&lt;/p&gt;</comment>
                            <comment id="13488098" author="hudson" created="Wed, 31 Oct 2012 19:01:37 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #3501 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/3501/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/3501/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7066&quot; title=&quot;Some HMaster coprocessor exceptions are being swallowed in try catch blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7066&quot;&gt;HBASE-7066&lt;/a&gt; Some HMaster coprocessor exceptions are being swallowed in try catch blocks (Francis Liu) (Revision 1404146)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerChore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13488198" author="toffer" created="Wed, 31 Oct 2012 20:29:38 +0000"  >&lt;p&gt;Stack, IMHO it really depends on what the coprocessor wants. In the context of security, it&apos;d be safer to err on the side of caution if the security module is unable to authorize a request, as this behavior may be exploited by a malicious user.&lt;/p&gt;

&lt;p&gt;In general though we probably need a means for the coprocessor to communicate what can and can&apos;t be ignored.&lt;/p&gt;


</comment>
                            <comment id="13488215" author="toffer" created="Wed, 31 Oct 2012 20:47:44 +0000"  >&lt;p&gt;Ted, I did not change the signatures for HMaster in 0.94 as Ram suggested. So that patch should be ok.&lt;/p&gt;</comment>
                            <comment id="13488363" author="lhofhansl" created="Wed, 31 Oct 2012 23:39:41 +0000"  >&lt;p&gt;So what happens when shutdown throws an IOException? Seems shutdown should not fail, no?&lt;/p&gt;</comment>
                            <comment id="13488818" author="toffer" created="Thu, 1 Nov 2012 16:47:35 +0000"  >&lt;p&gt;More specifically if AccessController.preShutdown() throws an IOException, shutdown should fail since we cannot truly determine whether the shutdown request is authorized and thus should err on the side of caution and fail the request. &lt;/p&gt;

&lt;p&gt;There may be instances that preShutdown() hook exceptions can be ignored but that is not the case for AccessController which comes packaged with HBase thus it would make sense to guarantee that it works as advertised. We can address the previous scenario by fixing the coprocessor framework.&lt;/p&gt;</comment>
                            <comment id="13488822" author="toffer" created="Thu, 1 Nov 2012 16:49:59 +0000"  >&lt;p&gt;Lars, if you agree that this fix is the right way to go. Can we get this into 0.94.3?&lt;/p&gt;</comment>
                            <comment id="13489554" author="stack" created="Fri, 2 Nov 2012 17:19:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt; Should the signature here, +  public void shutdown() throws IOException {, instead be +  public void shutdown() throws AccessDeniedException { ?  When it is IOE, the implication is that we can IOE mid-shutdown which is not what we want.  On other hand, if someone tries to shutdown the daemon when doesn&apos;t have permission, that is legit.  Thanks F.&lt;/p&gt;</comment>
                            <comment id="13489625" author="zhihyu@ebaysf.com" created="Fri, 2 Nov 2012 18:21:14 +0000"  >&lt;p&gt;I understand Stack&apos;s concern.&lt;br/&gt;
In 0.94, secure and insecure HBase have two separate builds. Would declaration of throwing AccessDeniedException be of any concern for insecure build ?&lt;/p&gt;</comment>
                            <comment id="13489646" author="toffer" created="Fri, 2 Nov 2012 18:51:41 +0000"  >&lt;p&gt;Stack, I see what you&apos;re trying to get at, we can have AccessController wrap the exceptions it would have thrown in an AccessDeniedException so it won&apos;t get swallowed in shutdown(). The only potential concern here then is the CoprocessorHost messing up though in which case it prolly won&apos;t be throwing an IOE so that should acceptable. &lt;/p&gt;

&lt;p&gt;Ted, for 0.94 we would have to do some reflection since the Exception is the security module, or actually move the exception. We can&apos;t change the signature since that would break backward compatilibity. &lt;/p&gt;

&lt;p&gt;Have we ever considered making security first class in 0.96 (not a coprocessor, though still switchable)? More and more it seems to me that security cannot be treated as a bolt-on extension as we have seen handling failures cannot be treated the same way as other extensions. We are already considering changing a public method signature to throw a security exception.&lt;/p&gt;

</comment>
                            <comment id="13489668" author="stack" created="Fri, 2 Nov 2012 19:09:57 +0000"  >&lt;p&gt;Regards security as first class citizen rather than as a CP would be good but probably not in scope for 0.96 I&apos;d say.  It sounds like a pretty radical refactoring.&lt;/p&gt;

&lt;p&gt;Good on you Francis&lt;/p&gt;</comment>
                            <comment id="13489704" author="toffer" created="Fri, 2 Nov 2012 19:51:33 +0000"  >&lt;p&gt;Stack, Good to know, we can do it in increments Master, RS, TokenProvider, etc. Will try and take a look what it would take when I have time.&lt;/p&gt;
</comment>
                            <comment id="13489708" author="toffer" created="Fri, 2 Nov 2012 19:56:40 +0000"  >&lt;p&gt;So just to summarize what to do with this issue:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Change stopMaster() and shutdown() signature with  &quot;throws AccessDeniedException&quot; and have the try-catch block rethrow AccessDeniedException (since it extends IOE)&lt;/li&gt;
	&lt;li&gt;AccessController should wrap any exception that it doesn&apos;t want ignored with an AccessDeniedException&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13489737" author="stack" created="Fri, 2 Nov 2012 20:42:09 +0000"  >&lt;p&gt;Sounds right to me&lt;/p&gt;</comment>
                            <comment id="13489739" author="stack" created="Fri, 2 Nov 2012 20:44:51 +0000"  >&lt;p&gt;Although ADE is from the security package.  If we add ADE to the shutdown signature, we are starting to pollute core w/ security.  Should we have a marker Interface &apos;DisallowedException&apos; or a base IOE Exception DisallowedException that ADE implements and then in core we&apos;d check for this ... shutdown would throw this base DisallowedException (There may be a reason other than security violation why a shutdown might be prevented?)&lt;/p&gt;

&lt;p&gt;What you think?&lt;/p&gt;</comment>
                            <comment id="13489788" author="toffer" created="Fri, 2 Nov 2012 22:11:02 +0000"  >&lt;p&gt;That sounds fine to me, though what do we do with the shutdown() method signature? Since we can&apos;t do &quot;throws &amp;lt;Interface&amp;gt;&quot;?&lt;/p&gt;</comment>
                            <comment id="13489804" author="lhofhansl" created="Fri, 2 Nov 2012 22:40:20 +0000"  >&lt;p&gt;Can we instead make the coprocessor protocol be more explicit? I.e. return true from the pre and post hooks means shutdown OK, false from either of these means do not shut down...?&lt;br/&gt;
Passing information out of methods via exceptions is always a bit weird.&lt;/p&gt;</comment>
                            <comment id="13489811" author="toffer" created="Fri, 2 Nov 2012 22:51:02 +0000"  >&lt;p&gt;How will we communicate to the user the reason behind the failure?&lt;/p&gt;</comment>
                            <comment id="13489812" author="toffer" created="Fri, 2 Nov 2012 22:53:13 +0000"  >&lt;p&gt;Sounds like we need to change the return type from boolean to class to provide a richer response. This would require a large change to the coprocessor framework if we go this route. Can we come up with an interim solution for now?&lt;/p&gt;</comment>
                            <comment id="13489815" author="zhihyu@ebaysf.com" created="Fri, 2 Nov 2012 22:55:17 +0000"  >&lt;p&gt;I concur with Stack&apos;s suggestion above @ 02/Nov/12 20:44&lt;/p&gt;

&lt;p&gt;AccessDeniedException extends DoNotRetryIOException .&lt;br/&gt;
Maybe we can introduce a new exception, CannotIgnoreException, which extends DoNotRetryIOException. Shutdown logic would check whether IOException thrown is an instance of CannotIgnoreException. If it is, shutdown is aborted.&lt;br/&gt;
AccessDeniedException would extend CannotIgnoreException.&lt;/p&gt;</comment>
                            <comment id="13489820" author="apurtell" created="Fri, 2 Nov 2012 23:03:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;Have we ever considered making security first class in 0.96 (not a coprocessor, though still switchable)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not in favor of this approach unless we want &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6222&quot; title=&quot;Add per-KeyValue Security&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6222&quot;&gt;&lt;del&gt;HBASE-6222&lt;/del&gt;&lt;/a&gt;, specifically the KV labeling part, in which case the changes are so invasive anyway we might as well move everything into core and furthermore reimplement access control on top of labeling.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Change stopMaster() and shutdown() signature with &quot;throws AccessDeniedException&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it will be a little weird to have these two methods throw a more specific signature than IOE where everywhere else we have IOE. The larger issue of (ab)use of IOE is a major refactoring. Also, I think AccessDeniedException should remain in the security package until security is otherwise not encapsulated there.&lt;/p&gt;
</comment>
                            <comment id="13489824" author="apurtell" created="Fri, 2 Nov 2012 23:05:15 +0000"  >&lt;blockquote&gt;&lt;p&gt;Should we have a marker Interface &apos;DisallowedException&apos; or a base IOE Exception DisallowedException that ADE implements and then in core we&apos;d check for this&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Missed this one. That would be good.&lt;/p&gt;</comment>
                            <comment id="13489825" author="apurtell" created="Fri, 2 Nov 2012 23:08:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;Passing information out of methods via exceptions is always a bit weird.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe in the general case but throwing an access denied exception if a security policy fails check seems natural, common, and unsurprising to me.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can we instead make the coprocessor protocol be more explicit?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;One early thought was an Enum instead of a Boolean. We went with &quot;simpler is better&quot;. Changing this internal framework detail if we need it now seems reasonable to me. &lt;/p&gt;</comment>
                            <comment id="13489867" author="toffer" created="Sat, 3 Nov 2012 00:21:00 +0000"  >&lt;p&gt;return vs exceptions: The problem with both is that it&apos;ll leak security code into core. Though with exceptions there&apos;s a workaround with inheriting core classes/interfaces. Which makes Stack&apos;s suggestion much more viable.&lt;/p&gt;</comment>
                            <comment id="13489868" author="toffer" created="Sat, 3 Nov 2012 00:22:08 +0000"  >&lt;p&gt;Scratch that, the return class would come from the coprocessor framework so it is core.&lt;/p&gt;</comment>
                            <comment id="13489925" author="zhihyu@ebaysf.com" created="Sat, 3 Nov 2012 04:42:25 +0000"  >&lt;p&gt;Addendum for trunk, demonstrating how master can respond to new exception which cannot be ignored.&lt;br/&gt;
Open to better naming.&lt;/p&gt;</comment>
                            <comment id="13489939" author="lhofhansl" created="Sat, 3 Nov 2012 06:16:45 +0000"  >&lt;p&gt;Hmm... I agree that for security related exception is OK (can be considered an exceptional situation), and also that just return true/false from the coproc does not provide enough information.&lt;/p&gt;

&lt;p&gt;CannotIgnoreException could work for 0.96.&lt;br/&gt;
For 0.94 it would break old clients on new servers, right? (the old client would not know about CannotIgnoreException).&lt;/p&gt;

&lt;p&gt;Another option is to catch and log IOException but to rethrow all HBaseIOExceptions, or maybe just always rethrow DoNotRetryIOException, because the server should not swallow those anyway.&lt;/p&gt;</comment>
                            <comment id="13489946" author="hadoopqa" created="Sat, 3 Nov 2012 06:27:55 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12551969/7066-addendum.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12551969/7066-addendum.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 86 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3219//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13490030" author="yuzhihong@gmail.com" created="Sat, 3 Nov 2012 14:51:46 +0000"  >&lt;p&gt;The intention of introducing subclass of DoNotRetryIOException is for the scenario where some IO operation in preShutdown() hook causes DoNotRetryIOException to be thrown. We haven&apos;t found a case other than authorization failure where shutdown should be skipped.&lt;/p&gt;

&lt;p&gt;For 0.94, reflection would be used to enforce similar semantics as in trunk.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="13490040" author="lhofhansl" created="Sat, 3 Nov 2012 15:35:23 +0000"  >&lt;p&gt;What I am saying is that a current 0.94 client does not have that logic (no reflection logic either) so it cannot deal with a new exception being thrown at it.&lt;/p&gt;</comment>
                            <comment id="13490052" author="yuzhihong@gmail.com" created="Sat, 3 Nov 2012 16:31:22 +0000"  >&lt;p&gt;Addendum v2 adds try / catch block for cpHost.preStopMaster().&lt;/p&gt;

&lt;p&gt;stopMaster() and shutdown() modified by this JIRA are not in master interface. So the change is compatible.&lt;/p&gt;

&lt;p&gt;Once review passes, I can provide patch for 0.94&lt;/p&gt;</comment>
                            <comment id="13490057" author="hadoopqa" created="Sat, 3 Nov 2012 17:32:45 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12551983/7066-addendum-v2.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12551983/7066-addendum-v2.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 javadoc&lt;/font&gt;.  The javadoc tool appears to have generated 86 warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 findbugs&lt;/font&gt;.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop2-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/3221//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13490115" author="lhofhansl" created="Sat, 3 Nov 2012 22:30:32 +0000"  >&lt;p&gt;OK... Count me officially confused then. If this exception is never thrown to any client we do not have to throw it, we can have the pre/post methods return false and log whatever we need in the coprocessor hooks.&lt;/p&gt;</comment>
                            <comment id="13490130" author="yuzhihong@gmail.com" created="Sun, 4 Nov 2012 00:22:41 +0000"  >&lt;p&gt;For 0.94, I think one benefit of throwing exception is that method signature for preShutdown() doesn&apos;t change.&lt;/p&gt;</comment>
                            <comment id="13494158" author="yuzhihong@gmail.com" created="Fri, 9 Nov 2012 17:47:15 +0000"  >&lt;p&gt;Comment on addendum would be appreciated.&lt;/p&gt;</comment>
                            <comment id="13648894" author="jdcryans" created="Fri, 3 May 2013 23:20:02 +0000"  >&lt;p&gt;Looks like stuff was committed already here in this jira and it&apos;s marked patch available, unmarking to trigger action.&lt;/p&gt;</comment>
                            <comment id="13649211" author="stack" created="Sat, 4 May 2013 23:47:54 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt; Can you summarize state of this issue?  You committed the patch.  Subsequent comments have problems with it.  Can you list how the concerns were addressed if at all?&lt;/p&gt;</comment>
                            <comment id="13649838" author="yuzhihong@gmail.com" created="Mon, 6 May 2013 16:32:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;we can have the pre/post methods return false&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This would change coprocessor interface.&lt;/p&gt;

&lt;p&gt;For 0.94, benefit of throwing exception is that method signature for preShutdown() doesn&apos;t change.&lt;/p&gt;

&lt;p&gt;For trunk, we can do as what Lars described.&lt;/p&gt;</comment>
                            <comment id="13649848" author="stack" created="Mon, 6 May 2013 16:36:52 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt; Last comment by Lars is &quot;.... Count me officially confused...&quot;   Also, this issue is open though a patch was committed.  Your comment above does not help bring this issue to a close.&lt;/p&gt;</comment>
                            <comment id="13649863" author="lhofhansl" created="Mon, 6 May 2013 16:58:37 +0000"  >&lt;p&gt;Let me try to summarize:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Without this we cannot block an unauthorized user from shutting down the HMaster&lt;/li&gt;
	&lt;li&gt;If stop to ignore exceptions during shutdown, random exceptions will prevent the HMaster from shutting down&lt;/li&gt;
	&lt;li&gt;So we either need to mark the Exception with a marker interface or change the coprocessor interface.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The first question: Can we punt on this in 0.94?&lt;br/&gt;
Second question: Is there still work outstanding in 0.95/trunk?&lt;/p&gt;</comment>
                            <comment id="13649870" author="yuzhihong@gmail.com" created="Mon, 6 May 2013 17:03:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can we punt on this in 0.94?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Sure.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is there still work outstanding in 0.95/trunk?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We can change the coprocessor interface in 0.95/trunk (have the pre/post methods return false).&lt;/p&gt;</comment>
                            <comment id="13649876" author="stack" created="Mon, 6 May 2013 17:07:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ted_yu&quot; class=&quot;user-hover&quot; rel=&quot;ted_yu&quot;&gt;Ted Yu&lt;/a&gt; &quot;We can change the coprocessor interface in 0.95/trunk (have the pre/post methods return false).&quot; does not answer the question.  SHOULD there be a change?  You committed a patch here so presuming you responsible for closure on this issue.  If you abdicate responsibility, just say and will go figure for myself.&lt;/p&gt;</comment>
                            <comment id="13649887" author="yuzhihong@gmail.com" created="Mon, 6 May 2013 17:26:09 +0000"  >&lt;p&gt;Since discussion for finding the proper solution is still on-going, here is a patch that reverts the previous patch from trunk.&lt;/p&gt;

&lt;p&gt;This should allow ample time for us to agree on the proper fix.&lt;/p&gt;</comment>
                            <comment id="13649988" author="hadoopqa" created="Mon, 6 May 2013 18:59:43 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12581911/7066-trunk-revert.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12581911/7066-trunk-revert.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5560//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13650368" author="hadoopqa" created="Tue, 7 May 2013 02:10:17 +0000"  >&lt;p&gt;&lt;font color=&quot;red&quot;&gt;-1 overall&lt;/font&gt;.  Here are the results of testing the latest attachment &lt;br/&gt;
  &lt;a href=&quot;http://issues.apache.org/jira/secure/attachment/12581911/7066-trunk-revert.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/secure/attachment/12581911/7066-trunk-revert.txt&lt;/a&gt;&lt;br/&gt;
  against trunk revision .&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 @author&lt;/font&gt;.  The patch does not contain any @author tags.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;red&quot;&gt;-1 tests included&lt;/font&gt;.  The patch doesn&apos;t appear to include any new or modified tests.&lt;br/&gt;
                        Please justify why no new tests are needed for this patch.&lt;br/&gt;
                        Also please list what manual steps were performed to verify this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop1.0&lt;/font&gt;.  The patch compiles against the hadoop 1.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 hadoop2.0&lt;/font&gt;.  The patch compiles against the hadoop 2.0 profile.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javadoc&lt;/font&gt;.  The javadoc tool did not generate any warning messages.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 javac&lt;/font&gt;.  The applied patch does not increase the total number of javac compiler warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 findbugs&lt;/font&gt;.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 release audit&lt;/font&gt;.  The applied patch does not increase the total number of release audit warnings.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 lineLengths&lt;/font&gt;.  The patch does not introduce lines longer than 100&lt;/p&gt;

&lt;p&gt;  &lt;font color=&quot;green&quot;&gt;+1 site&lt;/font&gt;.  The mvn site goal succeeds with this patch.&lt;/p&gt;

&lt;p&gt;    &lt;font color=&quot;green&quot;&gt;+1 core tests&lt;/font&gt;.  The patch passed unit tests in .&lt;/p&gt;

&lt;p&gt;Test results: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//testReport/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//testReport/&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-protocol.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-client.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-examples.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop1-compat.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-prefix-tree.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-common.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-server.html&lt;/a&gt;&lt;br/&gt;
Findbugs warnings: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//artifact/trunk/patchprocess/newPatchFindbugsWarningshbase-hadoop-compat.html&lt;/a&gt;&lt;br/&gt;
Console output: &lt;a href=&quot;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//console&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/PreCommit-HBASE-Build/5564//console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This message is automatically generated.&lt;/p&gt;</comment>
                            <comment id="13651290" author="hudson" created="Tue, 7 May 2013 20:49:39 +0000"  >&lt;p&gt;Integrated in hbase-0.95 #180 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95/180/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95/180/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7066&quot; title=&quot;Some HMaster coprocessor exceptions are being swallowed in try catch blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7066&quot;&gt;HBASE-7066&lt;/a&gt; Some HMaster coprocessor exceptions are being swallowed in try catch blocks - Revert (Revision 1479960)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerChore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13651298" author="hudson" created="Tue, 7 May 2013 20:55:00 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #4101 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/4101/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/4101/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7066&quot; title=&quot;Some HMaster coprocessor exceptions are being swallowed in try catch blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7066&quot;&gt;HBASE-7066&lt;/a&gt; Some HMaster coprocessor exceptions are being swallowed in try catch blocks - Revert (Revision 1479961)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerChore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13651412" author="toffer" created="Tue, 7 May 2013 23:02:02 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Can we punt on this in 0.94?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;We&apos;ve got this patched internally. Would be nice to get this in since it is a big red button that anyone can push.&lt;/p&gt;</comment>
                            <comment id="13651416" author="toffer" created="Tue, 7 May 2013 23:11:52 +0000"  >&lt;p&gt;I&apos;d be willing to offer a up a patch for 0.94. Let me go through this again and submit another trunk patch incorporating the comments. Or would you like to submit one &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tedyu%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;tedyu@apache.org&quot;&gt;Ted Yu&lt;/a&gt;? I can reassign to you.&lt;/p&gt;</comment>
                            <comment id="13651419" author="yuzhihong@gmail.com" created="Tue, 7 May 2013 23:14:56 +0000"  >&lt;p&gt;@Francis:&lt;br/&gt;
Since the original patch came from you, it would be nice if you can upload an updated patch for trunk.&lt;/p&gt;

&lt;p&gt;Thanks for your attention.&lt;/p&gt;</comment>
                            <comment id="13651614" author="hudson" created="Wed, 8 May 2013 04:36:36 +0000"  >&lt;p&gt;Integrated in hbase-0.95-on-hadoop2 #90 (See &lt;a href=&quot;https://builds.apache.org/job/hbase-0.95-on-hadoop2/90/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/hbase-0.95-on-hadoop2/90/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7066&quot; title=&quot;Some HMaster coprocessor exceptions are being swallowed in try catch blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7066&quot;&gt;HBASE-7066&lt;/a&gt; Some HMaster coprocessor exceptions are being swallowed in try catch blocks - Revert (Revision 1479960)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerChore.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.95/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13651615" author="hudson" created="Wed, 8 May 2013 04:36:36 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK-on-Hadoop-2.0.0 #519 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/519/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK-on-Hadoop-2.0.0/519/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-7066&quot; title=&quot;Some HMaster coprocessor exceptions are being swallowed in try catch blocks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-7066&quot;&gt;HBASE-7066&lt;/a&gt; Some HMaster coprocessor exceptions are being swallowed in try catch blocks - Revert (Revision 1479961)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
tedyu : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerChore.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/hbase-server/src/main/java/org/apache/hadoop/hbase/util/JVMClusterUtil.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15238476" author="yuzhihong@gmail.com" created="Wed, 13 Apr 2016 02:28:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=toffer&quot; class=&quot;user-hover&quot; rel=&quot;toffer&quot;&gt;Francis Liu&lt;/a&gt;:&lt;br/&gt;
Can you pick this up, please ?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12551983" name="7066-addendum-v2.txt" size="4472" author="yuzhihong@gmail.com" created="Sat, 3 Nov 2012 16:31:22 +0000"/>
                            <attachment id="12551969" name="7066-addendum.txt" size="4033" author="zhihyu@ebaysf.com" created="Sat, 3 Nov 2012 04:42:25 +0000"/>
                            <attachment id="12581911" name="7066-trunk-revert.txt" size="6161" author="yuzhihong@gmail.com" created="Mon, 6 May 2013 17:26:09 +0000"/>
                            <attachment id="12551283" name="HBASE-7066_94.patch" size="2409" author="toffer" created="Mon, 29 Oct 2012 23:52:03 +0000"/>
                            <attachment id="12551482" name="HBASE-7066_trunk.patch" size="6203" author="toffer" created="Wed, 31 Oct 2012 04:59:59 +0000"/>
                            <attachment id="12551280" name="HBASE-7066_trunk.patch" size="6202" author="toffer" created="Mon, 29 Oct 2012 23:42:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Oct 2012 00:12:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>252898</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            35 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0da5j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>75574</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>