<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:18:10 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4354/HBASE-4354.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4354] track region history</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4354</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;For debugging and analysis purposes it will be useful to understand regions&apos; lifecycle, how it is created ( from which parent region, for example), how it is splitted, assigned, etc. Some of these info are in the logs, hbase .META. table, zookeeper, metrics. Certain history data is lost; for example, the states will be removed from zookeeper /hbase/unassigned once the region is assigned; also .META. table has max version of 10 thus only tracks the last 10 RS assignments of a given region. It will be nice to put it a central place. It can provide:&lt;/p&gt;

&lt;p&gt;1. How applications use hbase. For example, it might create large number of regions in a short period of time and drop the table later.&lt;br/&gt;
2. How HBase internally manage regions such as how regions are splitted, assigned, turned offline, etc.&lt;/p&gt;

&lt;p&gt;Things to track&lt;br/&gt;
1. How it is created, parent region in the case of split.&lt;br/&gt;
2. Region tranisition process such as region state change, region server change.&lt;/p&gt;


&lt;p&gt;One idea is to put such transition history data to zookeeper. One issue is it could blow up zookeeper memory if we have large number of regions and the cluster runs for a long time. I would like to get your feedback on different approaches to address the issue. One assumption is region assignment doesn&apos;t happen with high frequency and thus the overhead introduced won&apos;t have much impact on the system performance.&lt;/p&gt;


&lt;p&gt;Approach 1:&lt;/p&gt;

&lt;p&gt;Zookeeper knows the history of how /hbase/unassigned is modified, if we can get zookeeper&apos;s logs (Bookkeeper ? ) somehow, we know the history of region transition.&lt;/p&gt;

&lt;p&gt;Approach 2:&lt;/p&gt;

&lt;p&gt;1.	HBase logs extra region transition data to zookeeper. It could be one zookeeper node per transaction.&lt;br/&gt;
2.	Have a separate thread on the Master to move data from zookeeper and append to HDFS. That will keep the zookeeper size in check.&lt;br/&gt;
3.	Have some tool or web UI to show the history of a given region by looking at zookeeper and HDFS.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12522297">HBASE-4354</key>
            <summary>track region history</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="4">Incomplete</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mingma">Ming Ma</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Sep 2011 18:32:42 +0000</created>
                <updated>Wed, 24 Dec 2014 19:49:25 +0000</updated>
                            <resolved>Wed, 24 Dec 2014 19:49:25 +0000</resolved>
                                                                    <component>master</component>
                    <component>metrics</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13100910" author="stack" created="Fri, 9 Sep 2011 03:16:05 +0000"  >&lt;p&gt;A long time ago we had a history column in .META.  It tried to note each transition a region went through.  The history of a region was kept in its row up in .META.  It was a kinda nice feature.  It was also a super pain at the same time.  We had lots of issues around regionservers trying to update history in .META. though .META. was gone and we couldn&apos;t do full history; e.g. the close of a region on a cluster shutdown.  There may have been deadlocks too around updating history while trying to do edits in .META. but my memory may not be serving me right here.  In the end we stripped the feature out because it was more trouble that it was worth.&lt;/p&gt;

&lt;p&gt;That said, I think this would be good to have.  The natural place to do this stuff would be in a table inside hbase I&apos;d think.  But then what to do if this table is not online or if we are shutting down the cluster and you want to log region close?&lt;/p&gt;
</comment>
                            <comment id="13101412" author="apurtell" created="Fri, 9 Sep 2011 18:12:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;There may have been deadlocks too around updating history while trying to do edits in .META. but my memory may not be serving me right here&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The natural place to do this stuff would be in a table inside hbase I&apos;d think.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The mistake we made last time IMHO was making region historian updating synchronous with the transitions. If we instead log the transitions to a table in a background thread (executor?) with best effort, the result could be viable.&lt;/p&gt;</comment>
                            <comment id="13101611" author="mingma" created="Fri, 9 Sep 2011 22:35:24 +0000"  >&lt;p&gt;Thanks, Stack, Andy. Writing the data to &quot;RegionHistory&quot; table in HBASE sounds a good idea. The key point is to make it async as Andy said, or to handle situation when &quot;RegionHistory&quot; isn&apos;t available.&lt;/p&gt;

&lt;p&gt;1. Track the regions of &quot;RegionHistory&quot;. When the regions of &quot;RegionHistory&quot; are moved around, the write to &quot;RegionHistory&quot; won&apos;t work.&lt;br/&gt;
2. Track the regions of &quot;&lt;del&gt;ROOT&lt;/del&gt;&quot; and &quot;.META.&quot;. Ideally we would like to track all regions including those for &quot;&lt;del&gt;ROOT&lt;/del&gt;&quot;, &quot;.META.&quot;. In the case of cluster startup, &quot;RegionHistory&quot; will be available after &quot;&lt;del&gt;ROOT&lt;/del&gt;&quot;, &quot;.META.&quot;.&lt;/p&gt;


&lt;p&gt;So to make it work:&lt;/p&gt;

&lt;p&gt;1. Make the logging async.&lt;br/&gt;
2. If we want to keep every entry even in the case of error like master failover, make the logging reliable. For example, persist the data to zookeeper or HDFS as buffer when &quot;RegionHistory&quot; isn&apos;t available.&lt;/p&gt;


&lt;p&gt;We could also log it to another hbase cluster. But that will create operational overheads, unless it can be combined with other metrics, logging scenarios ( like OpenTSDB ).&lt;/p&gt;</comment>
                            <comment id="13101639" author="tlipcon" created="Fri, 9 Sep 2011 23:17:57 +0000"  >&lt;p&gt;This sounds useful, but seems best to put it behind an interface. I can imagine some people might want to just log to text files on HDFS for later analysis, or even to use an existing log4j-based infrastructure. Maybe the initial implementation could just use a separate log4j category?&lt;/p&gt;</comment>
                            <comment id="13101659" author="mingma" created="Fri, 9 Sep 2011 23:52:26 +0000"  >&lt;p&gt;Thanks, Todd. Yes, interface is good to abstract various implementations.&lt;/p&gt;

&lt;p&gt;I was about to open a separate jira &quot;dynamic metrics logging&quot; for a more general strutured data logging infracture, something useful to collect hbase/mapreduce/hdfs dynamic metrics which aren&apos;t predefined and could change over time. It seems like &quot;region transaction history&quot; could an application for that system.&lt;/p&gt;</comment>
                            <comment id="14258489" author="apurtell" created="Wed, 24 Dec 2014 19:49:25 +0000"  >&lt;p&gt;Incomplete dead issue&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 9 Sep 2011 03:16:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33509</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 51 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hqk7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101565</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>