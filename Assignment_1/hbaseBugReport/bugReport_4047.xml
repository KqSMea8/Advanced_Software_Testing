<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:15:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4047/HBASE-4047.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4047] [Coprocessors] Generic external process host</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4047</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;Where HBase coprocessors deviate substantially from the design (as I understand it) of Google&apos;s BigTable coprocessors is we&apos;ve reimagined it as a framework for internal extension. In contrast BigTable coprocessors run as separate processes colocated with tablet servers. The essential trade off is between performance, flexibility and possibility, and the ability to control and enforce resource usage.&lt;/p&gt;

&lt;p&gt;Since the initial design of HBase coprocessors some additional considerations are in play:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Developing computational frameworks sitting directly on top of HBase hosted in coprocessor(s);&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduction of the map reduce next generation (mrng) resource management model, and the probability that limits will be enforced via cgroups at the OS level after this is generally available, e.g. when RHEL 6 deployments are common;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The possibility of deployment of HBase onto mrng-enabled Hadoop clusters via the mrng resource manager and a HBase-specific application controller.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Therefore we should consider developing a coprocessor that is a generic host for another coprocessor, but one that forks a child process, loads the target coprocessor into the child, establishes a bidirectional pipe and uses an eventing model and umbilical protocol to provide for the coprocessor loaded into the child the same semantics as if it was loaded internally to the parent, and (eventually) use available resource management capabilities on the platform &amp;#8211; perhaps via the mrng resource controller or directly with cgroups &amp;#8211; to limit the child as desired by system administrators or the application designer.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12512347">HBASE-4047</key>
            <summary>[Coprocessors] Generic external process host</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Thu, 30 Jun 2011 16:30:20 +0000</created>
                <updated>Fri, 10 Apr 2015 12:33:47 +0000</updated>
                                                                            <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>57</watches>
                                                                                                            <comments>
                            <comment id="13058870" author="stack" created="Fri, 1 Jul 2011 23:39:47 +0000"  >&lt;p&gt;wow&lt;/p&gt;</comment>
                            <comment id="13067420" author="acmurthy" created="Tue, 19 Jul 2011 00:49:21 +0000"  >&lt;p&gt;Andrew, sounds exciting! Glad to help in any way possible.&lt;/p&gt;

&lt;p&gt;Some questions: &lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Is &apos;generic host co-processor&apos; a system process i.e. managed by HBase itself?&lt;/li&gt;
	&lt;li&gt;Does the &apos;generic host&apos; co-processor live forever on each region server? Or is it launched on demand?&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13068462" author="eric14" created="Wed, 20 Jul 2011 16:05:10 +0000"  >&lt;p&gt;Interesting!  I&apos;ve been very concerned about the implications for multi-teneted use cases of implementing co-processors hosted inside HBase.  This seems like a very good idea.  Once 0.23 is real, I&apos;ll see what I can do to help with this.  I&apos;ve also been thinking about HBase inside MR as you propose.  Is there a jira for that?&lt;/p&gt;</comment>
                            <comment id="13068669" author="apurtell" created="Wed, 20 Jul 2011 22:05:46 +0000"  >&lt;p&gt;@Arun:&lt;/p&gt;

&lt;p&gt;1. A child JVM managed by HBase itself.&lt;/p&gt;

&lt;p&gt;2. (Re)Launched on demand. &lt;/p&gt;</comment>
                            <comment id="13068674" author="apurtell" created="Wed, 20 Jul 2011 22:13:27 +0000"  >&lt;p&gt;@Eric Ideas for frameworks for computation on top of HBase can be found in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3131&quot; title=&quot;Coprocessors: Server side embedding of Cascading/Cascalog operators&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3131&quot;&gt;&lt;del&gt;HBASE-3131&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3220&quot; title=&quot;Coprocessors: Streaming distributed computation framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3220&quot;&gt;&lt;del&gt;HBASE-3220&lt;/del&gt;&lt;/a&gt;. Also, the proof of concept patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2000&quot; title=&quot;Coprocessors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2000&quot;&gt;&lt;del&gt;HBASE-2000&lt;/del&gt;&lt;/a&gt; included a toy mapreduce framework.&lt;/p&gt;</comment>
                            <comment id="13092232" author="apurtell" created="Sat, 27 Aug 2011 09:03:18 +0000"  >&lt;p&gt;Assigning to me as I will be starting implementation of this middle of September.&lt;/p&gt;

&lt;p&gt;If someone wants to work on this sooner, no problem, just reassign.&lt;/p&gt;</comment>
                            <comment id="13094958" author="acmurthy" created="Wed, 31 Aug 2011 22:21:09 +0000"  >&lt;p&gt;Andrew, there are several non MR frameworks being built on NextGen MR right now - happy to help more if you are planning on using it:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Spark - &lt;a href=&quot;https://github.com/mesos/spark-yarn/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/mesos/spark-yarn/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;MPI - &lt;a href=&quot;https://issues.apache.org/jira/browse/MAPREDUCE-2911&quot; title=&quot;Hamster: Hadoop And Mpi on the same cluSTER&quot; class=&quot;issue-link&quot; data-issue-key=&quot;MAPREDUCE-2911&quot;&gt;&lt;del&gt;MAPREDUCE-2911&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13125523" author="apurtell" created="Wed, 12 Oct 2011 01:09:44 +0000"  >&lt;p&gt;Getting to this a bit late, thinking about design.&lt;/p&gt;

&lt;p&gt;Here are some possible motivating cases:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;A hot value cache implemented in C/C++&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Indexing and search with Lucene indexes hosted on a colocated (impl bundled/linked with the external coprocessor and private to it) R+W distributed FS like Gluster&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Support something we are building internally that requires efficient hand off of HFiles between processes for compaction strategy override.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Suggestions welcome, preferably useful to real activities you may be undertaking.&lt;/p&gt;</comment>
                            <comment id="13170501" author="apurtell" created="Thu, 15 Dec 2011 21:27:11 +0000"  >&lt;p&gt;Start with testcases, the first a test that confirms a stuck child process via SIGSTOP doesn&apos;t take down the regionserver. Thinking there should be three selectable strategies:&lt;/p&gt;

&lt;p&gt;1. Close and reopen the region, triggering force termination of the stuck child on close, and fork/initialization of a new child on open, along with reinit of all region related resources, other coprocessors, etc.&lt;/p&gt;

&lt;p&gt;2. Unload/reload the malfunctioning coprocessor. Will require some work in the coprocessor framework to actually support unloading in a reasonable way. The JVM may make this complicated for integrated CPs, so perhaps just for those hosted in external processes.&lt;/p&gt;

&lt;p&gt;3. Unload/terminate the malfunctioning coprocessor and continue operation. Consider changes in the CP framework for temporary blacklisting, will need that to avoid loading the suspect CP after a split.&lt;/p&gt;</comment>
                            <comment id="13499046" author="asafm" created="Fri, 16 Nov 2012 19:42:25 +0000"  >&lt;p&gt;Was this idea abandoned?&lt;/p&gt;</comment>
                            <comment id="13499113" author="apurtell" created="Fri, 16 Nov 2012 20:14:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=asafm&quot; class=&quot;user-hover&quot; rel=&quot;asafm&quot;&gt;Asaf Mesika&lt;/a&gt; Not at all, but I had to move to more immediate priorities. Hoping to circle back and do this in 2013.&lt;/p&gt;</comment>
                            <comment id="13499401" author="asafm" created="Sat, 17 Nov 2012 12:51:06 +0000"  >&lt;p&gt;This truly sounds like a great feature. I was wondering:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Did you find any performance penalties for shifting data back and forth between the processes? Did you this using the loopback interface?&lt;/li&gt;
	&lt;li&gt;What method did you choose to communicate between those processes? TCP? Output stream piping?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13499577" author="apurtell" created="Sun, 18 Nov 2012 01:28:27 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=asafm&quot; class=&quot;user-hover&quot; rel=&quot;asafm&quot;&gt;Asaf Mesika&lt;/a&gt; I didn&apos;t get beyond some early high level thoughts. Therefore there is no data, but sure there will be some performance penalty, we must introduce an RPC mechanism between the RegionServer and the child external coprocessor host.&lt;/p&gt;

&lt;p&gt;It seems reasonable that the external coprocessor host should handle all IPC issues, use Process/ProcessBuilder to launch a child process for hosting the user coprocessor code and get access to its stdin and stdout.&lt;/p&gt;

&lt;p&gt;We will need to introduce a new type of Observer to the coprocessor framework that can be a singleton watching all regions in the RS. Currently we allocate a coprocessor environment for each region and an Observer can only see what goes on in that environment (for only that region). Otherwise you can imagine for a RS hosting 1000 regions there might be 1000 threads just for IPC between the external coprocessor host in the RS and not one child but 1000. That&apos;s a nonstarter. So we want one coprocessor in the RS managing communication to one child, and both parent+child handle all Observer (and Endpoint) actions on all regions, using NIO to multiplex communication among the input and output streams set up by Process/ProcessBuilder. How efficiently this can be done and how low latency it can be kept will determine the performance penalty for external coprocessors.&lt;/p&gt;</comment>
                            <comment id="13738266" author="msegel" created="Tue, 13 Aug 2013 14:15:30 +0000"  >&lt;p&gt;Is this still an open issue? &lt;/p&gt;

&lt;p&gt;Any progress? &lt;/p&gt;
</comment>
                            <comment id="13738600" author="apurtell" created="Tue, 13 Aug 2013 18:18:01 +0000"  >&lt;p&gt;I have this on my to do list for this year but as it is optional work there are other things preempting it. Do you need something like this soon &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=msegel&quot; class=&quot;user-hover&quot; rel=&quot;msegel&quot;&gt;Michael Segel &lt;/a&gt; or have a patch or related work?&lt;/p&gt;</comment>
                            <comment id="13902088" author="adela" created="Fri, 14 Feb 2014 23:04:52 +0000"  >&lt;p&gt;I am curious if there is any additional progress here. Really exciting idea!&lt;/p&gt;</comment>
                            <comment id="13902224" author="apurtell" created="Sat, 15 Feb 2014 01:04:40 +0000"  >&lt;p&gt;This is just waiting for a strong requirement to do all the work required &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=adela&quot; class=&quot;user-hover&quot; rel=&quot;adela&quot;&gt;Adela Maznikar&lt;/a&gt;, or a contribution from elsewhere where the same requirement came up. I&apos;d say it could be a post-1.0 feature. &lt;/p&gt;</comment>
                            <comment id="14489529" author="msegel" created="Fri, 10 Apr 2015 12:33:47 +0000"  >&lt;p&gt;Sorry I don&apos;t always follow Jiras. &lt;/p&gt;

&lt;p&gt;To answer your question... in terms of patches, it would be a massive rewrite and would probably break the existing code base using coprocessors today. &lt;br/&gt;
In terms of me providing a patch... will Apache indemnify me if I get sued for introducing IP that I may have used or learned at a former company / client? &lt;br/&gt;
(Didn&apos;t think so.)  &lt;/p&gt;

&lt;p&gt;I can tell you what you need and I can pencil out a design.  But that&apos;s as far as I can go. &lt;/p&gt;

&lt;p&gt;In terms of a strong requirement. By creating a flag that will stop the loading of coprocessor code after the system coprocessors are loaded, the security issue is reduced to a point that the requirement goes away.  There is a large enough client who could make that request from one of the vendors, however they are not using HBase at a level where they are implementing coprocessors. &lt;/p&gt;

&lt;p&gt;Outside of a requirement. The issue is that using coprocessors adds risk to the system. Risk in terms of performance, stability, and security.  It also causes issues when it comes to maintenance.  You want to remove (not shut off) a coprocessor you can&apos;t without restarting the RS and reloading the coprocessors that you want loaded. (e.g. class collision) &lt;/p&gt;

&lt;p&gt;Coprocessors is necessary for extending HBase beyond a simple object store.  Security (XASecure / Ranger) require it.  Adding OLTP and RDBMs like features are also important to many.  (Transactions / Isolation levels) Fixing issues with compactions... &lt;/p&gt;

&lt;p&gt;But I digress.   &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12512357">HBASE-4048</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12520331">HBASE-4263</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12521234">HBASE-4329</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                            <subtask id="12535371">HBASE-5046</subtask>
                            <subtask id="12535372">HBASE-5047</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Jul 2011 23:39:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33340</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 36 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hp5z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101339</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>