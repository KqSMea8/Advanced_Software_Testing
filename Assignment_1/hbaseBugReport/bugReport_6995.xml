<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:41:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-6995/HBASE-6995.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-6995] Expose PB BlockingInterface implementations for coprocessor endpoints</title>
                <link>https://issues.apache.org/jira/browse/HBASE-6995</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;This is a follow on to &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-5448&quot; title=&quot;Support for dynamic coprocessor endpoints with PB-based RPC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-5448&quot;&gt;&lt;del&gt;HBASE-5448&lt;/del&gt;&lt;/a&gt; to improve the semantics exposed to clients for multi-region coprocessor endpoint RPCs.&lt;/p&gt;

&lt;p&gt;As discussed over in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-6785&quot; title=&quot;Convert AggregateProtocol to protobuf defined coprocessor service&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-6785&quot;&gt;&lt;del&gt;HBASE-6785&lt;/del&gt;&lt;/a&gt; (the conversion of AggregateProtocol to PB service), the currently exposed PB services result in a lot of boilerplate code on the client side.  For example, duplication of code like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
AggregateResponse response = rpcCallback.get();
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (controller.failedOnException()) {
  &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; controller.getFailedOn();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This also forces clients to do explicit handling to propagate exceptions.  It seems like we could completely avoid the duplication and exception throwing if we provided a way for clients to use BlockingService instances.  In that case, sections like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ServerRpcController controller = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ServerRpcController();
BlockingRpcCallback&amp;lt;AggregateResponse&amp;gt; rpcCallback =
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BlockingRpcCallback&amp;lt;AggregateResponse&amp;gt;();
instance.getMedian(controller, requestArg, rpcCallback);
AggregateResponse response = rpcCallback.get();
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (controller.failedOnException()) {
  &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; controller.getFailedOn();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;could become something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ServerRpcController controller = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ServerRpcController();
AggregateResponse response = instance.getMedian(controller, requestArg);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where the call to &lt;tt&gt;instance.getMedian()&lt;/tt&gt; through the blocking interface would wrap any encountered &lt;tt&gt;IOException&lt;/tt&gt; in a &lt;tt&gt;ServiceException&lt;/tt&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12611927">HBASE-6995</key>
            <summary>Expose PB BlockingInterface implementations for coprocessor endpoints</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ghelmling">Gary Helmling</reporter>
                        <labels>
                    </labels>
                <created>Mon, 15 Oct 2012 22:53:49 +0000</created>
                <updated>Mon, 15 Oct 2012 22:53:49 +0000</updated>
                                            <version>0.95.2</version>
                                                    <component>Coprocessors</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>248847</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 9 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0a0mf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>56374</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>