<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:19:16 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-4477/HBASE-4477.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-4477] Ability for an application to store metadata into the transaction log</title>
                <link>https://issues.apache.org/jira/browse/HBASE-4477</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;mySQL allows an application to store an arbitrary blob along with each transaction in its transaction logs. This JIRA is to have a similar feature request for HBASE.&lt;/p&gt;

&lt;p&gt;The use case is as follows: An application on one data center A stores a blob of data along with each transaction. A replication software picks up these blobs from the transaction logs in A and hands it to another instance of the same application running on a remote data center B. The application in B is responsible for applying this to the remote Hbase cluster (and also handle conflict resolution if any).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12524494">HBASE-4477</key>
            <summary>Ability for an application to store metadata into the transaction log</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dhruba">dhruba borthakur</assignee>
                                    <reporter username="dhruba">dhruba borthakur</reporter>
                        <labels>
                    </labels>
                <created>Sat, 24 Sep 2011 00:55:26 +0000</created>
                <updated>Fri, 20 Nov 2015 11:54:47 +0000</updated>
                            <resolved>Thu, 29 Sep 2011 21:01:47 +0000</resolved>
                                                    <fixVersion>0.92.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13113856" author="dhruba" created="Sat, 24 Sep 2011 01:07:46 +0000"  >&lt;p&gt;The initial design I am considering here:&lt;/p&gt;

&lt;p&gt;1. The Put call already has a map of arbitrary attributes (keys/values). The application will set a special key named &quot;_hbaseWalMetadata&quot;. The value of this attribute is what needs to be stored in the HLog. From this perspective, the format of the Put call does not need any change.&lt;/p&gt;

&lt;p&gt;2. The regionserver will store a metakv in the same Waledit record as the transaction. This kv will have  column family name as &quot;&quot;METAFAMILY&quot; and column name as &quot;METACOL&quot;.&lt;/p&gt;

&lt;p&gt;3. Code already exists to ignore kvs with column family as &quot;&quot;METAFAMILY&quot; from the log splitting process. The reason is because we already write such records to the HLog (see completeCacheFlush)&lt;/p&gt;</comment>
                            <comment id="13113981" author="yuzhihong@gmail.com" created="Sat, 24 Sep 2011 14:15:50 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; WAL_META_ATTRIBUTE_NAME = &lt;span class=&quot;code-quote&quot;&gt;&quot;_hbaseWalMetadata&quot;&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Maybe the &apos;hbase&apos; is not needed in the WAL_META_ATTRIBUTE_NAME.&lt;/p&gt;</comment>
                            <comment id="13114003" author="apurtell" created="Sat, 24 Sep 2011 16:18:53 +0000"  >&lt;p&gt;We created the WALObserver coprocessor for this use case. You can build this simply and unobtrusively with a RegionObserver to get the attributes on the Put and so something with them, like add to the KV; and then a WALObserver can take application actions according to the added metadata or otherwise filter it out so it doesn&apos;t affect core.&lt;/p&gt;

&lt;p&gt;So my question is why does this need to be in core? Is the WALObserver insufficient? Is this for &amp;lt;= 0.90?&lt;/p&gt;</comment>
                            <comment id="13114104" author="dhruba" created="Sun, 25 Sep 2011 00:13:52 +0000"  >&lt;p&gt;This can be implemented by WALObserver coprocessor. But do you think we  should keep this feature internal to our install or do you think we should contribute it back to Apache?  If we can put it somewhere in open source (not necessarily in Apache, is github preferable?), we can also open source our cluster-replication software.&lt;/p&gt;</comment>
                            <comment id="13115006" author="streamy" created="Mon, 26 Sep 2011 22:56:34 +0000"  >&lt;p&gt;I think this will take a few changes to the Coprocessor API if we want to only use RegionObserver and WALObserver.&lt;/p&gt;

&lt;p&gt;Andy, what should one do if additional arguments are needed to, say, the prePut() call?  Do we add multiple prePut() calls to the RegionObserver interface?  Potentially deprecate the old ones?&lt;/p&gt;

&lt;p&gt;If things are built only on Coprocessor interfaces, do people see us including these in some kind of coprocessor contrib or should they be out on github or something?&lt;/p&gt;</comment>
                            <comment id="13116106" author="dhruba" created="Wed, 28 Sep 2011 03:44:32 +0000"  >&lt;p&gt;@Andrew: I would like to do this via a co-processor API, can I change the signature of RegionObserver.prePut() to take in two additional arguments: a WALEdit and Put object? If so, shall I mark the existing prePut precessor api as Deprecated?&lt;/p&gt;

&lt;p&gt;anybody else have any opinions on where to put the code that implements this functionality? One place is org.apache.hadoop.hbase.coprocessor.library.walMetadata. &lt;/p&gt;</comment>
                            <comment id="13116675" author="apurtell" created="Wed, 28 Sep 2011 18:36:43 +0000"  >&lt;p&gt;@dhruba&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;can I change the signature of RegionObserver.prePut() to take in two additional arguments: a WALEdit and Put object&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That sounds good. Since there is no release yet, no deprecation is necessary. Can be done simply by a patch on this issue I&apos;d say.&lt;/p&gt;

&lt;p&gt;@Jon&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If things are built only on Coprocessor interfaces, do people see us including these in some kind of coprocessor contrib or should they be out on github or something&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it depends. Some stuff like security we&apos;d clearly want to bundle. And by that not a resurrection of contrib, instead as another package in main/.  Random additions that people build for themselves should go up on GitHub. My opinion is anything that is core to a group of use cases is a candidate for bundling, if a contributor or committer wants to maintain it, and/or if people generally feel it is a good idea to bring the candidate in.&lt;/p&gt;</comment>
                            <comment id="13117112" author="dhruba" created="Thu, 29 Sep 2011 08:06:14 +0000"  >&lt;p&gt;Implemented andrew&apos;s suggestion of enahncing the prePut, postPut, preDelete and postDelete apis to take in the Put/Delete object itself.&lt;/p&gt;

&lt;p&gt;In the process of running tests.&lt;/p&gt;</comment>
                            <comment id="13117428" author="dhruba" created="Thu, 29 Sep 2011 16:50:56 +0000"  >&lt;p&gt;I ran all unit tests. All unit tests pass, except these: TestDistributedLogSplitting, TestRollingRestart, TestHTablePool. And these failures are not related to my patch.&lt;/p&gt;

&lt;p&gt;Andrew: will you be able to review this patch, especially because it changes the coprocessor interface?&lt;/p&gt;</comment>
                            <comment id="13117441" author="tlipcon" created="Thu, 29 Sep 2011 17:09:17 +0000"  >&lt;p&gt;Just a thought while we&apos;re changing the APIs: might make sense to do something like introduce the following interface:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; CPPutInfo {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Put getPutObject();
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; getWriteToWAL();
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; WALEdit getWalEdit();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then, if we want to extend this API with more info about the put later, we can simply add more methods and not break compatibility? We should probably do this in another JIRA, and for all of the RegionObserver hooks - this JIRA just gave me the idea.&lt;/p&gt;</comment>
                            <comment id="13117446" author="yuzhihong@gmail.com" created="Thu, 29 Sep 2011 17:18:42 +0000"  >&lt;p&gt;I second Todd&apos;s idea.&lt;br/&gt;
Should CPPutInfo be created in this JIRA and we can work on other parts in another JIRA ?&lt;/p&gt;</comment>
                            <comment id="13117449" author="streamy" created="Thu, 29 Sep 2011 17:20:58 +0000"  >&lt;p&gt;+1 on CPPutInfo, CPGetInfo, etc...&lt;/p&gt;</comment>
                            <comment id="13117450" author="streamy" created="Thu, 29 Sep 2011 17:21:24 +0000"  >&lt;p&gt;And yeah, maybe introduce CPPutInfo in this JIRA and open a follow-up to change the others&lt;/p&gt;</comment>
                            <comment id="13117451" author="dhruba" created="Thu, 29 Sep 2011 17:22:05 +0000"  >&lt;p&gt;Hi Todd, I like your idea, and I will create another jira for that one. It will have to touch each and every coprocessor api. (If you are ok with it, I would like this jira to make the prePut and preGet be similar in the sense that they both take the Put/get object).&lt;/p&gt;</comment>
                            <comment id="13117459" author="tlipcon" created="Thu, 29 Sep 2011 17:37:56 +0000"  >&lt;p&gt;Sure, I don&apos;t particularly care if it happens as part of this JIRA or separately. Just wanted to drop my 2 cents &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13117472" author="ghelmling" created="Thu, 29 Sep 2011 17:55:17 +0000"  >&lt;p&gt;@Todd,&lt;br/&gt;
I like the idea of using XXXInfo objects to insulate coprocessors from API changes they&apos;re not using.&lt;/p&gt;

&lt;p&gt;@Dhruba,&lt;br/&gt;
Agree that it would be better to tackle that in a separate JIRA and keep all of the APIs in sync.  Adopting just PutInfo here would leave us with an oddly inconsistent API after this patch.&lt;/p&gt;

&lt;p&gt;@All,&lt;br/&gt;
Can we drop the &quot;CP&quot; prefix and just use PutInfo, GetInfo, DeleteInfo, etc?  It looks ugly to me and unnecessary if we place these classes under o.a.h.h.coprocessor for namespacing.&lt;/p&gt;

&lt;p&gt;Also, I like that this makes the exposed Observer APIs less brittle, but it does add a fair amount of complexity to the APIs in new classes.  To carry this through, we really need a XXXInfo class per operation...&lt;/p&gt;</comment>
                            <comment id="13117479" author="yuzhihong@gmail.com" created="Thu, 29 Sep 2011 17:59:58 +0000"  >&lt;p&gt;Todd didn&apos;t mention which namespace CPPutInfo should be placed.&lt;br/&gt;
If we cannot foresee that other components would utilize PutInfo, we should place PutInfo in o.a.h.h.coprocessor without the CP prefix.&lt;/p&gt;</comment>
                            <comment id="13117496" author="streamy" created="Thu, 29 Sep 2011 18:16:02 +0000"  >&lt;p&gt;PutInfo seems overly generic but I agree that CPPutInfo is straight ugly.  And I keep thinking it says CPUInfo.&lt;/p&gt;

&lt;p&gt;So Dhruba should just extend the API for now and we can introduce these new classes in a follow-up jira.&lt;/p&gt;</comment>
                            <comment id="13117497" author="streamy" created="Thu, 29 Sep 2011 18:18:12 +0000"  >&lt;p&gt;And it looks like the patch from this morning does exactly that.&lt;/p&gt;

&lt;p&gt;I&apos;m +1 on coprocessorPut1.txt.  Someone else want to review?&lt;/p&gt;</comment>
                            <comment id="13117499" author="apurtell" created="Thu, 29 Sep 2011 18:18:27 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Attached updated patch &apos;coprocessorPut2.txt&quot; which removes some unused locals. &lt;/p&gt;

&lt;p&gt;I&apos;m curious if passing the cluster ID to internalPut and internalDelete is necessary? They can be retrieved from the Put or Delete, or the Put or Delete can be modified. I don&apos;t know enough about replication there: The put or delete gets written to the WAL with one UUID but internally contains another?&lt;/p&gt;</comment>
                            <comment id="13117500" author="apurtell" created="Thu, 29 Sep 2011 18:20:42 +0000"  >&lt;p&gt;In my opinion prefixing anything regarding coprocessors with CP should be an anti-pattern.&lt;/p&gt;</comment>
                            <comment id="13117507" author="ghelmling" created="Thu, 29 Sep 2011 18:30:08 +0000"  >&lt;p&gt;+1 on coprocessorPut2.txt, which just removes the unused familyMap local vars in RegionCoprocessorHost.&lt;/p&gt;

&lt;p&gt;I&apos;m curious about the cluster ID question as well though.  Don&apos;t know enough about the replication stuff to understand the current usage.&lt;/p&gt;</comment>
                            <comment id="13117562" author="dhruba" created="Thu, 29 Sep 2011 19:34:07 +0000"  >&lt;p&gt;&amp;gt; I&apos;m curious if passing the cluster ID to internalPut and internalDelete is necessary?&lt;/p&gt;

&lt;p&gt;I do not think that this is necessary. We can clean them up when we merge all the parameters to the coprocessor api.&lt;/p&gt;</comment>
                            <comment id="13117610" author="streamy" created="Thu, 29 Sep 2011 21:01:47 +0000"  >&lt;p&gt;Committed to trunk and 92 branch.  Thanks for all the reviews and feedback all, nice stuff Dhruba.  Dhruba opened &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4514&quot; title=&quot;Change the co-processor API to take in a single argument object&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4514&quot;&gt;&lt;del&gt;HBASE-4514&lt;/del&gt;&lt;/a&gt; for the follow-up discussed here.&lt;/p&gt;</comment>
                            <comment id="13117791" author="hudson" created="Fri, 30 Sep 2011 00:47:27 +0000"  >&lt;p&gt;Integrated in HBase-0.92 #31 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-0.92/31/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-0.92/31/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4477&quot; title=&quot;Ability for an application to store metadata into the transaction log&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4477&quot;&gt;&lt;del&gt;HBASE-4477&lt;/del&gt;&lt;/a&gt;  Ability for an application to store metadata into the transaction log (dhruba via jgray)&lt;/p&gt;

&lt;p&gt;jgray : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/branches/0.92/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverBypass.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/branches/0.92/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13117840" author="hudson" created="Fri, 30 Sep 2011 02:42:25 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #2270 (See &lt;a href=&quot;https://builds.apache.org/job/HBase-TRUNK/2270/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/HBase-TRUNK/2270/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4477&quot; title=&quot;Ability for an application to store metadata into the transaction log&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4477&quot;&gt;&lt;del&gt;HBASE-4477&lt;/del&gt;&lt;/a&gt;  Ability for an application to store metadata into the transaction log (dhruba via jgray)&lt;/p&gt;

&lt;p&gt;jgray : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/hbase/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/client/Mutation.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/BaseRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/main/java/org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverBypass.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionObserverStacking.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithAbort.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionServerCoprocessorExceptionWithRemove.java&lt;/li&gt;
	&lt;li&gt;/hbase/trunk/src/test/java/org/apache/hadoop/hbase/replication/TestMasterReplication.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15016318" author="lars_francke" created="Fri, 20 Nov 2015 11:54:47 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12525239">HBASE-4514</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12496981" name="coprocessorPut1.txt" size="27644" author="dhruba" created="Thu, 29 Sep 2011 08:06:14 +0000"/>
                            <attachment id="12497030" name="coprocessorPut2.txt" size="27324" author="apurtell" created="Thu, 29 Sep 2011 18:18:27 +0000"/>
                            <attachment id="12496347" name="hlogMetadata1.txt" size="30707" author="dhruba" created="Sat, 24 Sep 2011 01:07:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 24 Sep 2011 14:15:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3506</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hr0n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101639</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>