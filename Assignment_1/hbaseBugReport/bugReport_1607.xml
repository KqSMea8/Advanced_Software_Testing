<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 18:54:54 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-1607/HBASE-1607.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-1607] Redo MemStore heap sizing to be accurate, testable, and more like new LruBlockCache</title>
                <link>https://issues.apache.org/jira/browse/HBASE-1607</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;MemStore sizing is inaccurate and does not include all overhead.&lt;/p&gt;

&lt;p&gt;I&apos;m going to make it look like the LruBlockCache does.  Will provide a MemStore.heapSize() method that includes ALL overhead of the MemStore itself.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12429425">HBASE-1607</key>
            <summary>Redo MemStore heap sizing to be accurate, testable, and more like new LruBlockCache</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="streamy">Jonathan Gray</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Thu, 2 Jul 2009 20:54:13 +0000</created>
                <updated>Sun, 13 Sep 2009 22:24:48 +0000</updated>
                            <resolved>Fri, 3 Jul 2009 19:44:33 +0000</resolved>
                                    <version>0.20.0</version>
                                    <fixVersion>0.20.0</fixVersion>
                                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12726711" author="streamy" created="Thu, 2 Jul 2009 22:29:21 +0000"  >&lt;p&gt;Patch does what&apos;s described in jira description.&lt;/p&gt;

&lt;p&gt;Two things to note:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MemStore, Store, and HRegion now all implement HeapSize.  This is not really being used yet but this is how LruBlockCache works and will allow for us to have intelligent load balancing, control of memory usage, etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The Store itself is still tracking the size of the keys that have been added into the MemStore, rather than querying MemStore.heapSize().  I don&apos;t see another way, for now, because it decrements at the right time based on the snapshot and flush.  So MemStore.heapSize() is currently unused.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So what this patch has actually done is make the incremental sizing of each addition to MemStore more accurate.  And so that any changes to objects involved will throw errors in tests if overheads were not updated accordingly.&lt;/p&gt;</comment>
                            <comment id="12726712" author="streamy" created="Thu, 2 Jul 2009 22:30:33 +0000"  >&lt;p&gt;Ready for review.  Patch kinda adds a lot but does not touch any major codepath outside of MemStore.heapSize -&amp;gt; MemStore.heapSizeChange and the constants in that.&lt;/p&gt;

&lt;p&gt;All the heap sizing tests are passing for me on 32bit windows and 64bit linux.  Please verify io.TestHeapSize passes.&lt;/p&gt;</comment>
                            <comment id="12726713" author="streamy" created="Thu, 2 Jul 2009 22:32:00 +0000"  >&lt;p&gt;MemStore is now public so that I can test it from TestHeapSize.  Otherwise could add a separate TestHeapSize inside regionserver package?&lt;/p&gt;</comment>
                            <comment id="12726747" author="stack" created="Fri, 3 Jul 2009 00:23:16 +0000"  >&lt;p&gt;Remove rather than comment out stuff.&lt;/p&gt;

&lt;p&gt;Is ClassSize utility to estimate a Class size or instance of a Class size?  If latter, should be renamed.&lt;/p&gt;

&lt;p&gt;All these DEEP_OVERHEAD and FIXED_OVERHEAD defines make me nervous.  Would seem to be very brittle and hard to make changes.  Where are they used?  In test only?&lt;/p&gt;








</comment>
                            <comment id="12726754" author="streamy" created="Fri, 3 Jul 2009 00:49:38 +0000"  >&lt;p&gt;Did I comment out stuff?  Didn&apos;t think I had.  This patch might remove previously commented out stuff.&lt;/p&gt;

&lt;p&gt;ClassSize is a utility to help us size classes.  It generates the sizes for the different native java classes that we use in heap sizable classes.  It does nothing with an instantiated class.&lt;/p&gt;


&lt;p&gt;I agree that FIXED_OVERHEAD and DEEP_OVERHEAD are not necessarily the best long term solution out there &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Currently in trunk, our MemStore is sized with this beautiful line:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;private final static int ESTIMATED_KV_HEAP_TAX = 60;
  long heapSize(final KeyValue kv, final boolean notpresent) {
    return notpresent?
      // Add overhead for value byte array and for Map.Entry -- 57 bytes
      // on x64 according to jprofiler.
      ESTIMATED_KV_HEAP_TAX + 57 + kv.getLength(): 0; // Guess no change in size.
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So this is a vast improvement.  It might look nasty but it&apos;s not a hard-coded number, rather it is calculated.  Interestingly, 57 bytes is not a valid size for something in memory because everything is aligned (4 byte on 32bit, 8 byte on 64bit).&lt;/p&gt;

&lt;p&gt;Again, I set out with two goals.  Make sizing as accurate as possible, and make tests so that if any of our sized classes change the tests will fail.  This has been done with this patch and those before it.&lt;/p&gt;

&lt;p&gt;So FIXED_OVERHEAD might look confusing, but it&apos;s principled and shows where the sizing is coming from.  When the unit test fails, ClassSize outputs it&apos;s sizing in debug mode so you can very easily see exactly where you missed.  Message is something like:  Expected &amp;lt;104&amp;gt; but got &amp;lt;96&amp;gt;.  And there is output of how many references, primitives, etc it found.  Quite simple to fix.  If you want to play with it, just modify one of the FIXED_OVERHEADs and run TestHeapSize.&lt;/p&gt;

&lt;p&gt;This is not a permanent solution, perhaps, but works well and is far better than the hard coded values we have now.&lt;/p&gt;</comment>
                            <comment id="12727102" author="streamy" created="Fri, 3 Jul 2009 19:20:00 +0000"  >&lt;p&gt;Removes any previous changes to HTable.&lt;/p&gt;

&lt;p&gt;Updates ConcurrentSkipListMap entry size according to research by erik.&lt;/p&gt;</comment>
                            <comment id="12727108" author="stack" created="Fri, 3 Jul 2009 19:44:33 +0000"  >&lt;p&gt;Reviewed and ran tests.  Thanks for patch Jon.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12412428" name="HBASE-1607-v1.patch" size="22454" author="streamy" created="Thu, 2 Jul 2009 22:29:21 +0000"/>
                            <attachment id="12412518" name="HBASE-1607-v2.patch" size="21508" author="streamy" created="Fri, 3 Jul 2009 19:20:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 3 Jul 2009 00:23:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25859</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 24 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0he93:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>99571</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>