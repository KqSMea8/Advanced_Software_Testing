<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:07:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3162/HBASE-3162.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3162] Add TimeRange support into Increment to optimize for counters that are partitioned on time</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3162</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;In many use cases of increments, a given counter is only incremented during a specific window of time (ie. the counters are partitioned/sharded by time).&lt;/p&gt;

&lt;p&gt;With this kind of schema, you are constantly creating new counters.  When a new counter is &quot;created&quot; (incremented the first time) you will always end up looking at a block from every file in the region because no previous value will exist.  However, with the new TimeRange optimizations that skip files if they don&apos;t contain values of the TimeRange you&apos;re interested in, we could utilize that information to optimize the Get within the increment.&lt;/p&gt;

&lt;p&gt;This would be optional and an addition to the Increment class.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12478543">HBASE-3162</key>
            <summary>Add TimeRange support into Increment to optimize for counters that are partitioned on time</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="streamy">Jonathan Gray</assignee>
                                    <reporter username="streamy">Jonathan Gray</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Oct 2010 06:00:49 +0000</created>
                <updated>Fri, 20 Nov 2015 12:43:27 +0000</updated>
                            <resolved>Sat, 30 Oct 2010 17:00:15 +0000</resolved>
                                    <version>0.90.0</version>
                                    <fixVersion>0.90.0</fixVersion>
                                    <component>Client</component>
                    <component>regionserver</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12925703" author="tlipcon" created="Thu, 28 Oct 2010 06:13:41 +0000"  >&lt;p&gt;I understand the optimization, but it seems like this is going to be difficult to put in a clean API.&lt;/p&gt;

&lt;p&gt;Any good ideas on how we can add these nice &quot;power user&quot; APIs for efficiency but not and up making the API super-complicated for the average user?&lt;/p&gt;</comment>
                            <comment id="12925704" author="streamy" created="Thu, 28 Oct 2010 06:18:38 +0000"  >&lt;p&gt;Couldn&apos;t agree more, Todd.  That&apos;s my issue with this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I actually think it will be fairly utilized by more power users.  I guess the first question is whether it should be in the API or not.&lt;/p&gt;

&lt;p&gt;If not, then we&apos;d have to add some kind of non-API but documented set of configurable options.&lt;/p&gt;

&lt;p&gt;In this particular case, it&apos;s fairly simple to add TimeRange since we use it for reads.  I was planning on just documenting the heck out of the API javadoc but I&apos;m open to ideas on how to get advanced stuff in and not polluting core APIs.&lt;/p&gt;</comment>
                            <comment id="12925706" author="tlipcon" created="Thu, 28 Oct 2010 06:20:36 +0000"  >&lt;p&gt;Another way of attacking this problem is a bit more general - something I&apos;ve been thinking about for a while but don&apos;t think I ever posted.&lt;/p&gt;

&lt;p&gt;Right now we have the ability to do bloom filters on store files to decide whether a key exists in the file. It would be useful to add the ability to do a bloom filter on a &lt;em&gt;function&lt;/em&gt; of the key. In other words, right now, we check:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (bloomFilter.mightContain(key)) { look in file }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;but instead we could check:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (bloomFilter.mightContain(function(key))) { look in file }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;so that the current implementation is just the special case where the function is the identity function.&lt;/p&gt;

&lt;p&gt;Getting back to the JIRA at hand, the idea is the following: if you are sharding your counters by time, then the key would contain some time information. EG you might have the counter pageid_1234_20101027_hits to track page views for a given day. With current blooms we&apos;d end up with a lot of bits in the bloom filter to have a good false positive rate, but if instead the blooms were on just the &quot;20101027&quot; portion of the key, there would be very few unique values and thus we can get near 100% hit rate with very little overhead.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="12925709" author="streamy" created="Thu, 28 Oct 2010 06:24:05 +0000"  >&lt;p&gt;I like it.  We&apos;re using blooms now but they get big.  Not sure exactly how it would integrate but sounds like a great idea.&lt;/p&gt;

&lt;p&gt;I still think there&apos;s value in this jira which could be implemented in an hour &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12925712" author="tlipcon" created="Thu, 28 Oct 2010 06:30:39 +0000"  >&lt;p&gt;In terms of API design, I dont have any great ideas, but I think a general pattern that we might be able to use across HBase is to use &quot;builder-style&quot; mutations rather than just overloading &quot;increment()&quot; with a bunch of different parameter choices.&lt;/p&gt;

&lt;p&gt;For example, a potential API might look like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Increment i = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Increment(&lt;span class=&quot;code-quote&quot;&gt;&quot;rowkey&quot;&lt;/span&gt;)
  .incrementColumn(&lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;, 1)
  .incrementColumn(&lt;span class=&quot;code-quote&quot;&gt;&quot;bar&quot;&lt;/span&gt;, 2) &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; multi-column increment
&lt;/span&gt;  .withPredicate(
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TimeRangeFilter(startTimestamp, stopTimestamp));
htable.doMutation(i);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This style of API might be able to collapse some of the code between Get, Put, Delete, checkAndPut, Filters, etc.&lt;/p&gt;</comment>
                            <comment id="12925713" author="tlipcon" created="Thu, 28 Oct 2010 06:32:43 +0000"  >&lt;p&gt;oh hey, it looks like you already started using that style of API in &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-2946&quot; title=&quot;Increment multiple columns in a row at once&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-2946&quot;&gt;&lt;del&gt;HBASE-2946&lt;/del&gt;&lt;/a&gt; - guess we are on the same page &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12925715" author="streamy" created="Thu, 28 Oct 2010 06:35:28 +0000"  >&lt;p&gt;Yeah, Increment looks very much like a Get underneath.  I was talking about adding it to this class not directly in HTable for the existing ICV call.&lt;/p&gt;

&lt;p&gt;Even still, I do think it&apos;s beneficial to think about how to add fancier and fancier stuff w/o making the APIs gigantic.&lt;/p&gt;

&lt;p&gt;In this case, I think a TimeRange API like we have for get/scan won&apos;t be adding too much, just need to be very clear in javadoc what it means to have a TimeRange on an increment &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12925717" author="ryanobjc" created="Thu, 28 Oct 2010 06:37:05 +0000"  >&lt;p&gt;That doesn&apos;t address the real problem... how to expand the data transport in&lt;br/&gt;
a sane manner, how to deal with it internally etc. The builder stuff is just&lt;br/&gt;
semantic sugar. We currently hurt due to lack of a system like protobufs.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3162?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=12925712#action_12925712&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/HBASE-3162?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=12925712#action_12925712&lt;/a&gt;]&lt;br/&gt;
pattern that we might be able to use across HBase is to use &quot;builder-style&quot;&lt;br/&gt;
mutations rather than just overloading &quot;increment()&quot; with a bunch of&lt;br/&gt;
different parameter choices.&lt;br/&gt;
Put, Delete, checkAndPut, Filters, etc.&lt;br/&gt;
partitioned on time&lt;br/&gt;
------------------------------------------------------------------------------------------&lt;br/&gt;
during a specific window of time (ie. the counters are partitioned/sharded&lt;br/&gt;
by time).&lt;br/&gt;
a new counter is &quot;created&quot; (incremented the first time) you will always end&lt;br/&gt;
up looking at a block from every file in the region because no previous&lt;br/&gt;
value will exist. However, with the new TimeRange optimizations that skip&lt;br/&gt;
files if they don&apos;t contain values of the TimeRange you&apos;re interested in, we&lt;br/&gt;
could utilize that information to optimize the Get within the increment.&lt;/p&gt;</comment>
                            <comment id="12926519" author="streamy" created="Sat, 30 Oct 2010 02:40:00 +0000"  >&lt;p&gt;Patch adds TimeRange to Increment.&lt;/p&gt;</comment>
                            <comment id="12926520" author="streamy" created="Sat, 30 Oct 2010 02:43:00 +0000"  >&lt;p&gt;Patch up for review on rb.&lt;/p&gt;</comment>
                            <comment id="12926521" author="hbasereviewboard" created="Sat, 30 Oct 2010 02:44:05 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1132/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Review request for hbase, stack, Ryan Rawson, and khemani.&lt;/p&gt;


&lt;p&gt;Summary&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;TimeRange now part of Increment.  Adds new methods into Increment w/ javadoc.  Adds code in our increment operation to set this onto the Gets we use.&lt;/p&gt;


&lt;p&gt;This addresses bug &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3162&quot; title=&quot;Add TimeRange support into Increment to optimize for counters that are partitioned on time&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3162&quot;&gt;&lt;del&gt;HBASE-3162&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
    &lt;a href=&quot;http://issues.apache.org/jira/browse/HBASE-3162&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.apache.org/jira/browse/HBASE-3162&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Diffs&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;  trunk/src/main/java/org/apache/hadoop/hbase/client/Increment.java 1028936 &lt;br/&gt;
  trunk/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java 1028936 &lt;/p&gt;

&lt;p&gt;Diff: &lt;a href=&quot;http://review.cloudera.org/r/1132/diff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/diff&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Testing&lt;br/&gt;
-------&lt;/p&gt;

&lt;p&gt;increment tests passing.&lt;/p&gt;


&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Jonathan&lt;/p&gt;

</comment>
                            <comment id="12926527" author="hbasereviewboard" created="Sat, 30 Oct 2010 03:52:10 +0000"  >&lt;p&gt;Message from: stack@duboce.net&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1132/#review1716&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/#review1716&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;Looks good to me.&lt;/p&gt;


&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/Increment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1132/#comment5646&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/#comment5646&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    This a migration problem?&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stack&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12926534" author="hbasereviewboard" created="Sat, 30 Oct 2010 04:20:10 +0000"  >&lt;p&gt;Message from: &quot;Ryan Rawson&quot; &amp;lt;ryanobjc@gmail.com&amp;gt;&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1132/#review1720&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/#review1720&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Ship it!&lt;/p&gt;


&lt;p&gt;COMMIT THAT SHIT!&lt;/p&gt;


&lt;p&gt;trunk/src/main/java/org/apache/hadoop/hbase/client/Increment.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1132/#comment5653&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/#comment5653&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;    technically Increment.java has never shipped in a published version of HBase so we wont need to bump any version numbers I think.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ryan&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12926538" author="hbasereviewboard" created="Sat, 30 Oct 2010 04:56:05 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-29 21:19:11, Ryan Rawson wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; trunk/src/main/java/org/apache/hadoop/hbase/client/Increment.java, line 274&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &amp;lt;&lt;a href=&quot;http://review.cloudera.org/r/1132/diff/1/?file=16260#file16260line274&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/diff/1/?file=16260#file16260line274&lt;/a&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;     technically Increment.java has never shipped in a published version of HBase so we wont need to bump any version numbers I think.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1132/#review1720&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/#review1720&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="12926610" author="streamy" created="Sat, 30 Oct 2010 17:00:15 +0000"  >&lt;p&gt;Committed to trunk.  Thanks for reviews guys.&lt;/p&gt;</comment>
                            <comment id="12926776" author="hbasereviewboard" created="Sun, 31 Oct 2010 20:34:15 +0000"  >&lt;p&gt;Message from: thekhemani@facebook.com&lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1132/#review1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/#review1731&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


&lt;p&gt;The timestamp that we put in the column-qualifier to create hourly counters need not be in sync with the KV timestamp. This is because there are times when the log stream falls behind and we might be updating couple of hours old counters. The time-range that we provide has to be dynamically determined based on the current log-stream delay.&lt;/p&gt;


&lt;p&gt;This will really work well if along with hourly counters we also have hourly store files. If everything gets compacted into a single store file then this change doesn&apos;t help much.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;khemani&lt;/li&gt;
&lt;/ul&gt;



</comment>
                            <comment id="12926779" author="hbasereviewboard" created="Sun, 31 Oct 2010 21:06:15 +0000"  >&lt;p&gt;Message from: &quot;Jonathan Gray&quot; &amp;lt;jgray@apache.org&amp;gt;&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;On 2010-10-31 13:32:44, khemani wrote:&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; The timestamp that we put in the column-qualifier to create hourly counters need not be in sync with the KV timestamp. This is because there are times when the log stream falls behind and we might be updating couple of hours old counters. The time-range that we provide has to be dynamically determined based on the current log-stream delay.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; &lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt; This will really work well if along with hourly counters we also have hourly store files. If everything gets compacted into a single store file then this change doesn&apos;t help much.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, if you aren&apos;t doing all of your increments at the same time as the stamps they represent, you&apos;ll need to modify the TimeRange.&lt;/p&gt;

&lt;p&gt;Something like:  [min,max) -&amp;gt; [minStampInPartition,Long.MAX_VALUE) where minStampInPartition is the lowest timestamp possible for the time bucket you are incrementing.&lt;/p&gt;

&lt;p&gt;As we begin to grow a large amount of historical data, it will be important that our compaction policy eventually just archives old data and it does not get included in further compactions.  This TimeRange functionality will ensure they don&apos;t impact performance on new data.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Jonathan&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;-----------------------------------------------------------&lt;br/&gt;
This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&lt;a href=&quot;http://review.cloudera.org/r/1132/#review1731&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.cloudera.org/r/1132/#review1731&lt;/a&gt;&lt;br/&gt;
-----------------------------------------------------------&lt;/p&gt;


</comment>
                            <comment id="15017524" author="lars_francke" created="Fri, 20 Nov 2015 12:43:27 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12458465" name="HBASE-3162-v1.patch" size="4067" author="streamy" created="Sat, 30 Oct 2010 02:40:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 28 Oct 2010 06:13:41 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32929</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0hkzj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>100662</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>