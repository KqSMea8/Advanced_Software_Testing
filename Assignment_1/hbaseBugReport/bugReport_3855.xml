<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 19:13:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-3855/HBASE-3855.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-3855] Performance degradation of memstore because reseek is linear</title>
                <link>https://issues.apache.org/jira/browse/HBASE-3855</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The scanner use reseek to find the next row (or next column) as part of a scan. The reseek code iterates over a Set to position itself at the right place. If there are many thousands of kvs that need to be skipped over, then the time-cost is very high. In this case, a seek would be far lesser in cost than a reseek.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12506250">HBASE-3855</key>
            <summary>Performance degradation of memstore because reseek is linear</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="dhruba">dhruba borthakur</reporter>
                        <labels>
                    </labels>
                <created>Thu, 5 May 2011 06:14:17 +0000</created>
                <updated>Fri, 20 Nov 2015 12:41:38 +0000</updated>
                            <resolved>Tue, 3 Jul 2012 00:11:26 +0000</resolved>
                                                    <fixVersion>0.90.4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>15</watches>
                                                                <comments>
                            <comment id="13029241" author="mikhail" created="Thu, 5 May 2011 08:44:28 +0000"  >&lt;p&gt;When writing the scanner code for the new HFile format I thought about getting rid of linear scans by adding an array of key/value pair offsets at the beginning of each data block, so that seek/reseek can be implemented as a binary search. If we do have cases when the seek operation has to scan thousands of kvs, then I will certainly implement the binary search seek in the HFile V2 format.&lt;/p&gt;</comment>
                            <comment id="13029374" author="tlipcon" created="Thu, 5 May 2011 15:34:58 +0000"  >&lt;p&gt;You guys are writing a new HFile format? It would be nice to see a design doc and JIRA.&lt;/p&gt;</comment>
                            <comment id="13029425" author="apurtell" created="Thu, 5 May 2011 16:40:21 +0000"  >&lt;p&gt;Marking as blocker for next major release. &lt;/p&gt;</comment>
                            <comment id="13029451" author="dhruba" created="Thu, 5 May 2011 17:34:00 +0000"  >&lt;p&gt;Thanks Mikhail for your comments.&lt;/p&gt;

&lt;p&gt;let&apos;s keep this jira focussed only on memstore improvements. if we can do better while seeking on disk, can we open a new JIRA for that one (and link it to this one).&lt;/p&gt;

&lt;p&gt;My use-case for this jira is for the situation when the entire scan request can be satisfied from the memstore.&lt;/p&gt;</comment>
                            <comment id="13029510" author="apurtell" created="Thu, 5 May 2011 19:12:16 +0000"  >&lt;p&gt;@dhruba I was talking with jgray. You might have a stop-gap that could go into 0.92?&lt;/p&gt;</comment>
                            <comment id="13029668" author="dhruba" created="Fri, 6 May 2011 00:17:35 +0000"  >&lt;p&gt;This patch changes a reseek to a seek if the number of kvs that it has already skipped over is larger than a configured number (default 32).&lt;/p&gt;</comment>
                            <comment id="13029743" author="stack" created="Fri, 6 May 2011 04:34:37 +0000"  >&lt;p&gt;Patch looks good Dhruba.  Any evidence of it being a general improvement that you could throw in here?  Thanks.&lt;/p&gt;</comment>
                            <comment id="13029787" author="dhruba" created="Fri, 6 May 2011 06:45:16 +0000"  >&lt;p&gt;I have a cf with three columns. I insert 100K puts on a single rowkey with random column values. all these kvs are cached in the memstore.  A single scan to retrieve the values for two specified columnname takes about 4 millisecons of CPU without this patch and about 0.025 millieseconds of cpu with this patch. Unfortunately, I cannot share the test program because it is intertwined with quite a few non-opensource-able code.&lt;/p&gt;

&lt;p&gt;However, I think the patch will benefit all cases because it is better to do a O(logn) lookup rather then even a small number of sequential scans.&lt;/p&gt;


</comment>
                            <comment id="13029800" author="dhruba" created="Fri, 6 May 2011 07:10:20 +0000"  >&lt;p&gt;A minor improvement from the previous patch&lt;br/&gt;
1.  invoke seek only if the getNext()call returned null and numIterReseek is zero.&lt;/p&gt;</comment>
                            <comment id="13029958" author="stack" created="Fri, 6 May 2011 14:44:18 +0000"  >&lt;p&gt;Committed to TRUNK.  Thanks for the patch Dhruba.&lt;/p&gt;</comment>
                            <comment id="13030200" author="hudson" created="Sat, 7 May 2011 00:08:28 +0000"  >&lt;p&gt;Integrated in HBase-TRUNK #1909 (See &lt;a href=&quot;https://builds.apache.org/hudson/job/HBase-TRUNK/1909/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/hudson/job/HBase-TRUNK/1909/&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="13047383" author="stack" created="Fri, 10 Jun 2011 19:22:01 +0000"  >&lt;p&gt;Committed to branch and Andrew&apos;s suggestion.&lt;/p&gt;</comment>
                            <comment id="13079633" author="apurtell" created="Thu, 4 Aug 2011 22:00:20 +0000"  >&lt;p&gt;I have tracked down occasionally failing TestHRegion tests on 0.90 branch to this commit:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;commit 4f4edbaa043952715d4eb9a40605154c6e41d179
Author: Michael Stack &amp;lt;stack@apache.org&amp;gt;
Date:   Fri Jun 10 19:21:41 2011 +0000

    HBASE-3855 Performance degradation of memstore because reseek is linear
    
    git-svn-id: https://svn.apache.org/repos/asf/hbase/branches/0.90@1134419 13f
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Perhaps 1 out of 25 test runs fail on my dev laptop.&lt;/p&gt;

&lt;p&gt;The same problem may exist on trunk, but I have not checked yet for evidence of that.&lt;/p&gt;

&lt;p&gt;Failures are like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tests run: 54, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 10.186 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
testWritesWhileGetting(org.apache.hadoop.hbase.regionserver.TestHRegion)  Time elapsed: 0.187 sec  &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
junit.framework.AssertionFailedError: expected:&amp;lt;\x00\x00\x006&amp;gt; but was:&amp;lt;\x00\x00\x004&amp;gt;&lt;br/&gt;
        at org.apache.hadoop.hbase.HBaseTestCase.assertEquals(HBaseTestCase.java:685)&lt;br/&gt;
        at org.apache.hadoop.hbase.regionserver.TestHRegion.testWritesWhileGetting(TestHRegion.java:2711)&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="13080582" author="yuzhihong@gmail.com" created="Sun, 7 Aug 2011 14:22:39 +0000"  >&lt;p&gt;This happened in TRUNK as well: &lt;a href=&quot;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/lastCompletedBuild/testReport/org.apache.hadoop.hbase.regionserver/TestHRegion/testWritesWhileGetting/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/G-L/view/HBase/job/HBase-TRUNK/lastCompletedBuild/testReport/org.apache.hadoop.hbase.regionserver/TestHRegion/testWritesWhileGetting/&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13081197" author="apurtell" created="Mon, 8 Aug 2011 21:08:41 +0000"  >&lt;p&gt;Do we call it for the test or this patch?&lt;/p&gt;</comment>
                            <comment id="13081451" author="stack" created="Tue, 9 Aug 2011 05:36:25 +0000"  >&lt;p&gt;@Andrew You think we are getting back bad answers from MemStore?  Looking at patch, I fail to see how it&apos;d return an incorrect answer but maybe I&apos;m missing something?&lt;/p&gt;</comment>
                            <comment id="13082727" author="stack" created="Wed, 10 Aug 2011 22:44:30 +0000"  >&lt;p&gt;I ran 100 TestHRegion tests back to back and none failed for me (TRUNK).  Let me try on 0.90 branch.&lt;/p&gt;</comment>
                            <comment id="13082783" author="stack" created="Thu, 11 Aug 2011 00:04:01 +0000"  >&lt;p&gt;I ran 50 tests on 0.90 and 20% failed.  Odd that it fails on 0.90 and not on TRUNK.  Let me look at the commit you single out above Andrew.&lt;/p&gt;</comment>
                            <comment id="13082888" author="stack" created="Thu, 11 Aug 2011 03:46:36 +0000"  >&lt;p&gt;Odd.  MemStore is same in branch as it is in trunk (Patch is same for both).  Let me look at why test is failing.&lt;/p&gt;</comment>
                            <comment id="13083679" author="nkeywal" created="Thu, 11 Aug 2011 21:50:59 +0000"  >&lt;p&gt;I saw some points related to numIterReseek, used in the MemStoreScanner#getNext  (line 690):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;679	    protected KeyValue getNext(Iterator it) {
680	      KeyValue ret = null;
681	      long readPoint = ReadWriteConsistencyControl.getThreadReadPoint();
682	      //DebugPrint.println( &quot; MS@&quot; + hashCode() + &quot;: threadpoint = &quot; + readPoint);
683	 
684	      while (ret == null &amp;amp;&amp;amp; it.hasNext()) {
685	        KeyValue v = it.next();
686	        if (v.getMemstoreTS() &amp;lt;= readPoint) {
687	          // keep it.
688	          ret = v;
689	        }
690	        numIterReseek--;
691	        if (numIterReseek == 0) {
692	          break;
693	         }
694	      }
695	      return ret;
696	    }&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;This function is called by seek, reseek, and next. The numIterReseek  is only usefull for reseek.&lt;/p&gt;


&lt;p&gt;There are some issues, I am not totally sure it&apos;s the root cause of the test case error, but it could explain partly the randomness of the error, and one point is for sure a bug.&lt;/p&gt;

&lt;p&gt;1) In getNext, numIterReseek is decreased, then compared to zero. The seek function sets numIterReseek to zero before calling getNext. It means that the value will be actually negative, hence the test will always fail, and the loop will continue. It is the expected behaviour, but it&apos;s quite smart.&lt;/p&gt;

&lt;p&gt;2) In &quot;reseek&quot;, numIterReseek is not set between the loops on the two iterators. If the numIterReseek is equals to zero after the loop on the first one, the loop on the second one will never call seek, as numIterReseek will be negative. &lt;/p&gt;

&lt;p&gt;3) Still in &quot;reseek&quot;, the test to call &quot;seek&quot; is (kvsetNextRow == null &amp;amp;&amp;amp; numIterReseek == 0). In other words, if kvsetNextRow is not null when numIterReseek equals zero, numIterReseek will start to be negative at the next iteration and seek will never be called.&lt;/p&gt;

&lt;p&gt;4) You can have side effects if reseek ends with a numIterReseek &amp;gt; 0: the following calls to the &quot;next&quot; function will decrease numIterReseek to zero, and getNext will break instead of continuing the loop. As a result, later calls to next() may return null or not depending on how is configured the default value for numIterReseek.&lt;/p&gt;


&lt;p&gt;To check if the issue comes from point 4, you can set the numIterReseek to zero before returning in reseek:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;      numIterReseek = 0;
      return (kvsetNextRow != null || snapshotNextRow != null);
    }&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;On my env, on trunk, it seems to work, but as it&apos;s random I am not really sure. I also had to modify the test (I added a loop) to make it fails more often, the original test was working quite well here. &lt;/p&gt;</comment>
                            <comment id="13083718" author="yuzhihong@gmail.com" created="Thu, 11 Aug 2011 22:09:12 +0000"  >&lt;p&gt;@NKeywal:&lt;br/&gt;
Thanks for the analysis.&lt;/p&gt;

&lt;p&gt;Please put the above analysis in a new JIRA.&lt;/p&gt;</comment>
                            <comment id="13083737" author="nkeywal" created="Thu, 11 Aug 2011 22:18:16 +0000"  >&lt;p&gt;Done, see &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4195&quot; title=&quot;Possible inconsistency in a memstore read after a reseek, possible performance improvement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4195&quot;&gt;&lt;del&gt;HBASE-4195&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13106744" author="stack" created="Fri, 16 Sep 2011 19:30:56 +0000"  >&lt;p&gt;@Andrew I ran tests with this hbase-4195 in place on 0.90.  I ran 20 iterations and I did not see failure (Previous I&apos;d see 1/5th fail).  What you think of applying hbase-4195 to 0.90 and then closing this issue? &lt;/p&gt;</comment>
                            <comment id="13106954" author="apurtell" created="Sat, 17 Sep 2011 00:26:58 +0000"  >&lt;p&gt;+1, sounds good Stack&lt;/p&gt;</comment>
                            <comment id="13107187" author="stack" created="Sat, 17 Sep 2011 17:57:02 +0000"  >&lt;p&gt;OK. Moving to 0.90.5.  I did not apply 4195 to the branch BECAUSE it does not apply over on the branch (which means I must have been dreaming yesterday when I thought I was testing 4195 on 0.90 &amp;#8211; I must have been running it on TRUNK).  Leaving this as open against 0.90.5 rather than against 0.92 since we don&apos;t seem to have the issue that caused the reopen in TRUNK (and 4195 improves on the original patch here anyways).&lt;/p&gt;</comment>
                            <comment id="13193625" author="ram_krish" created="Thu, 26 Jan 2012 07:37:11 +0000"  >&lt;p&gt;Not fixed in this 0.90.6.  Hence moving it to 0.90.7.&lt;/p&gt;</comment>
                            <comment id="13402210" author="jmhsieh" created="Wed, 27 Jun 2012 13:14:35 +0000"  >&lt;p&gt;Hey &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dhruba&quot; class=&quot;user-hover&quot; rel=&quot;dhruba&quot;&gt;dhruba borthakur&lt;/a&gt;, do you plan on taking on this issue on or shall we punt on this for 0.90.7 release? &lt;/p&gt;
</comment>
                            <comment id="13404612" author="jmhsieh" created="Sat, 30 Jun 2012 20:14:28 +0000"  >&lt;p&gt;No response for half a week, going to punt so I can cut an RC.&lt;/p&gt;</comment>
                            <comment id="13404689" author="dhruba" created="Sun, 1 Jul 2012 06:11:13 +0000"  >&lt;p&gt;Sorry Jonathan: I might not be working on this one anymore. &lt;/p&gt;</comment>
                            <comment id="13404782" author="apurtell" created="Sun, 1 Jul 2012 18:36:03 +0000"  >&lt;p&gt;If this is an 0.90 branch only issue then I suggest we can just leave this open without a target fix version and change the title to be &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;0.90 branch&amp;#93;&lt;/span&gt; ...&quot;. Someone can pick it up and push it through to completion if they find it compelling.&lt;/p&gt;</comment>
                            <comment id="13405464" author="gchanan" created="Tue, 3 Jul 2012 00:11:26 +0000"  >&lt;p&gt;It looks like this was committed way back in 0.90.4.  Closing.&lt;/p&gt;

&lt;p&gt;commit 4f4edbaa043952715d4eb9a40605154c6e41d179&lt;br/&gt;
Author: Michael Stack &amp;lt;stack@apache.org&amp;gt;&lt;br/&gt;
Date:   Fri Jun 10 19:21:41 2011 +0000&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-3855&quot; title=&quot;Performance degradation of memstore because reseek is linear&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-3855&quot;&gt;&lt;del&gt;HBASE-3855&lt;/del&gt;&lt;/a&gt; Performance degradation of memstore because reseek is linear&lt;/p&gt;

&lt;p&gt;    git-svn-id: &lt;a href=&quot;https://svn.apache.org/repos/asf/hbase/branches/0.90@1134419&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/repos/asf/hbase/branches/0.90@1134419&lt;/a&gt; 13f79535-47bb-0310-9956-ffa450edef68&lt;/p&gt;

&lt;p&gt;Perhaps this was left open for &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4195&quot; title=&quot;Possible inconsistency in a memstore read after a reseek, possible performance improvement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4195&quot;&gt;&lt;del&gt;HBASE-4195&lt;/del&gt;&lt;/a&gt; (which never made it into 0.90).&lt;/p&gt;</comment>
                            <comment id="13405472" author="gchanan" created="Tue, 3 Jul 2012 00:32:30 +0000"  >&lt;p&gt;Addendum: I closed because I thought it was confusing to have an issue be open when it was committed in 0.90.4 and never backed out &lt;span class=&quot;error&quot;&gt;&amp;#91;and no one is talking about backing it out&amp;#93;&lt;/span&gt;.  Perhaps we should create a new bug that tracks backporting &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4195&quot; title=&quot;Possible inconsistency in a memstore read after a reseek, possible performance improvement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4195&quot;&gt;&lt;del&gt;HBASE-4195&lt;/del&gt;&lt;/a&gt; to 0.90 and, as Andrew suggests, put &lt;span class=&quot;error&quot;&gt;&amp;#91;0.90 branch&amp;#93;&lt;/span&gt; there?&lt;/p&gt;</comment>
                            <comment id="13408374" author="stack" created="Fri, 6 Jul 2012 21:34:32 +0000"  >&lt;p&gt;Thanks Gregory.  Kick your Jon.  He might be interested in this state of affairs given he&apos;s going for 0.90.7 (most of the rest of us have moved on...)&lt;/p&gt;</comment>
                            <comment id="13408687" author="jmhsieh" created="Sat, 7 Jul 2012 14:56:45 +0000"  >&lt;p&gt;Ouch! &lt;/p&gt;

&lt;p&gt;Yes, I think we&apos;d like to get &lt;a href=&quot;https://issues.apache.org/jira/browse/HBASE-4195&quot; title=&quot;Possible inconsistency in a memstore read after a reseek, possible performance improvement&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HBASE-4195&quot;&gt;&lt;del&gt;HBASE-4195&lt;/del&gt;&lt;/a&gt; in o 0.90.7 as well &amp;#8211; not for performance but for correctness reasons.  &lt;/p&gt;</comment>
                            <comment id="15017029" author="lars_francke" created="Fri, 20 Nov 2015 12:41:38 +0000"  >&lt;p&gt;This issue was closed as part of a bulk closing operation on 2015-11-20. All issues that have been resolved and where all fixVersions have been released have been closed (following discussions on the mailing list).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12597676">HBASE-6334</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12478354" name="memstoreReseek.txt" size="2683" author="dhruba" created="Fri, 6 May 2011 00:17:35 +0000"/>
                            <attachment id="12478381" name="memstoreReseek2.txt" size="2707" author="dhruba" created="Fri, 6 May 2011 07:10:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 5 May 2011 08:44:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33235</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ho73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>101182</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>