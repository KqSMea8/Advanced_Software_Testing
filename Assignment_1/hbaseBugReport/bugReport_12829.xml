<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:36:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12829/HBASE-12829.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12829] Request count in RegionLoad may not accurate to compute the load cost for region</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12829</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;StochasticLoadBalancer#RequestCostFunction(ReadRequestCostFunction and WriteRequestCostFunction) will compute load cost for a region based on a number of remembered region loads. Each region load records the total count for read/write request at reported time since it opened. However, the request count will be reset if region moved, making the new reported count could not represent the total request. For example, if a region has high write throughput, the WrtieRequest in region load will be very big after onlined for a long time, then if the region moved, the new WriteRequest will be much smaller, making the region contributes much smaller to the cost of its belonging rs. We may need to consider the region open time to get more accurate region load. &lt;br/&gt;
As another way, how about using read/write request count at each time slots instead of total request count? The total count will make older read/write request throughput contribute more to the cost by CostFromRegionLoadFunction#getRegionLoadCost:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; getRegionLoadCost(Collection&amp;lt;RegionLoad&amp;gt; regionLoadList) {
      &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; cost = 0;

      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (RegionLoad rl : regionLoadList) {
        &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; toAdd = getCostFromRl(rl);

        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (cost == 0) {
          cost = toAdd;
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
          cost = (.5 * cost) + (.5 * toAdd);
        }
      }
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; cost;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For example, assume the balancer now remembers three loads for a region at time t1, t2, t3(t1 &amp;lt; t2 &amp;lt; t3), the write request is w1, w2, w3 respectively for time slots [0, t1), [t1, t2), [t2, t3), so the WriteRequest in the region load at t1, t2, t3 will be w1, w1 + w2, w1 + w2 + w3 and the WriteRequest cost will be:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    0.5 * (w1 + w2 + w3) + 0.25 * (w1 + w2)  + 0.25 * w1 = w1 + 0.75 * w2 + 0.5 * w3
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The w1 contributes more to the cost than w2 and w3. However, intuitively, I think the recent read/write throughput should represent the current load of the region better than the older ones. Therefore, how about using w1, w2 and w3 directly when computing? Then, the cost will become:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    0.25 * w1 + 0.25 * w2 + 0.5 * w3
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12765996">HBASE-12829</key>
            <summary>Request count in RegionLoad may not accurate to compute the load cost for region</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="cuijianwei">Jianwei Cui</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Jan 2015 11:20:05 +0000</created>
                <updated>Fri, 9 Jan 2015 11:22:09 +0000</updated>
                                            <version>0.99.2</version>
                                                    <component>Balancer</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 49 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i244af:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>