<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:08:03 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-9840/HBASE-9840.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-9840] Large scans and BlockCache evictions problems</title>
                <link>https://issues.apache.org/jira/browse/HBASE-9840</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;I just ran into a scenario that baffled me first, but after some reflection makes sense. I ran a very large scan that filled up most of the block cache with my scan&apos;s data. I ran that scan a few times.&lt;/p&gt;

&lt;p&gt;That I ran a much smaller scan, and this scan will never get all its blocks cached if it does not fit entirely into the remaining BlockCache; regardless how I often I run it!&lt;/p&gt;

&lt;p&gt;The reason is that the blocks of the first large scan were all promoted. Since the 2nd scan did not fully fit into the cache all blocks are round-robin evicted as I rerun the scan. Thus those blocks will never get accessed more than once before they get evicted again.&lt;/p&gt;

&lt;p&gt;Since promoted blocks are not demoted the large scan&apos;s block will never be evicted unless we have another small enough scan/get that can promote its blocks.&lt;/p&gt;

&lt;p&gt;Not sure what the proper solution is, but it seems only a LRU cache that can expire blocks over time would solve this.&lt;/p&gt;

&lt;p&gt;Granted, this is a pretty special case.&lt;/p&gt;

&lt;p&gt;Edit: My usual spelling digressions.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12675742">HBASE-9840</key>
            <summary>Large scans and BlockCache evictions problems</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="7">Later</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="lhofhansl">Lars Hofhansl</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Oct 2013 05:39:44 +0000</created>
                <updated>Tue, 3 Dec 2013 21:31:48 +0000</updated>
                            <resolved>Tue, 3 Dec 2013 21:31:48 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13805086" author="vrodionov" created="Fri, 25 Oct 2013 06:28:39 +0000"  >&lt;p&gt;What is the purpose of running large scan (larger than available young gen cache space) with cacheBlock enabled? &lt;/p&gt;

&lt;p&gt;I do have a couple comments on LruBlockCache design and implementation. I did not spend much time analyzing the code though:&lt;/p&gt;

&lt;p&gt;1.  singleFactor = 0.25, multiFactor = 0.5 , memoryFactor = 0.25 - are all hard-coded. They must be configurable.&lt;br/&gt;
2. Default values are probably not optimal at all. If it is attempt to mimic LRU2Q cache than optimal split for first insert is closer to 0.75 (I think I read it on Facebook engineering)&lt;br/&gt;
3. Eviction does not follow LRU2Q at all. In LRU2Q all data is evicted from the tail of a common queue (say, single and multi bucket CAN NOT be processed separately but together). In LruBlockCache all 3 buckets evict their data independently.&lt;/p&gt;
</comment>
                            <comment id="13805088" author="vrodionov" created="Fri, 25 Oct 2013 06:32:36 +0000"  >&lt;p&gt;By the way, Lars, 3. would solve the issue you have observed.&lt;/p&gt;</comment>
                            <comment id="13805448" author="lhofhansl" created="Fri, 25 Oct 2013 16:50:14 +0000"  >&lt;p&gt;Normally you&apos;d not cache your blocks on large scan (that&apos;s why &quot;this is a pretty special case&quot;).&lt;br/&gt;
Yeah #3 would fix this.&lt;/p&gt;

&lt;p&gt;This is not immediately important, just a note that our caching needs work &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13805482" author="jdcryans" created="Fri, 25 Oct 2013 17:26:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;singleFactor = 0.25, multiFactor = 0.5 , memoryFactor = 0.25 - are all hard-coded. They must be configurable.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Meh, +0, see the following.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Default values are probably not optimal at all. If it is attempt to mimic LRU2Q cache than optimal split for first insert is closer to 0.75 (I think I read it on Facebook engineering)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;From its javadoc:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Each priority will retain close to its maximum size, however, if any priority is not using its entire chunk the others are able to grow beyond their chunk size.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So if you aren&apos;t using the in-memory part, you effectively dedicate 75% of your BC to the multi priority.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Eviction does not follow LRU2Q at all&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;2Q suffers from different problems, mainly the tuning of Kin and Kout.&lt;/p&gt;

&lt;p&gt;The &quot;best&quot; page replacement policy is one that takes into account age and frequency of access, but we can&apos;t use ARC.&lt;/p&gt;</comment>
                            <comment id="13805527" author="vrodionov" created="Fri, 25 Oct 2013 18:00:45 +0000"  >&lt;p&gt;When all three buckets become full  all new blocks  are inserted at 0.25 split in a queue. Always, because :&lt;/p&gt;

&lt;p&gt;1. cache entries never expire.&lt;br/&gt;
2. all buckets manage eviction independently. &lt;/p&gt;
</comment>
                            <comment id="13805563" author="jdcryans" created="Fri, 25 Oct 2013 18:28:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;When all three buckets become full all new blocks are inserted at 0.25 split in a queue&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, but like I am saying 2Q has its own configs that you can&apos;t change at runtime and you will hit another edgy use case that isn&apos;t able to use all the cache.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 25 Oct 2013 06:28:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>355240</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 8 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1p8qv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>355528</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>