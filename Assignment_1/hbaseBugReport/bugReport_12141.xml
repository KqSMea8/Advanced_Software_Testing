<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Dec 16 20:30:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HBASE-12141/HBASE-12141.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[HBASE-12141] ClusterStatus message might exceed max datagram payload limits</title>
                <link>https://issues.apache.org/jira/browse/HBASE-12141</link>
                <project id="12310753" key="HBASE">HBase</project>
                    <description>&lt;p&gt;The multicast ClusterStatusPublisher and its companion listener are using datagram channels without any framing. I think this is an issue because Netty&apos;s ProtobufDecoder expects a complete PB message to be available in the ChannelBuffer yet ClusterStatus messages can be large and might exceed the maximum datagram payload size. As one user reported on list:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.hadoop.hbase.client.ClusterStatusListener - ERROR - Unexpected exception, continuing.
com.google.protobuf.InvalidProtocolBufferException: Protocol message tag had invalid wire type.
        at com.google.protobuf.InvalidProtocolBufferException.invalidWireType(InvalidProtocolBufferException.java:99)
        at com.google.protobuf.UnknownFieldSet$Builder.mergeFieldFrom(UnknownFieldSet.java:498)
        at com.google.protobuf.GeneratedMessage.parseUnknownField(GeneratedMessage.java:193)
        at org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos$ClusterStatus.&amp;lt;init&amp;gt;(ClusterStatusProtos.java:7554)
        at org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos$ClusterStatus.&amp;lt;init&amp;gt;(ClusterStatusProtos.java:7512)
        at org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos$ClusterStatus$1.parsePartialFrom(ClusterStatusProtos.java:7689)
        at org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos$ClusterStatus$1.parsePartialFrom(ClusterStatusProtos.java:7684)
        at com.google.protobuf.AbstractParser.parsePartialFrom(AbstractParser.java:141)
        at com.google.protobuf.AbstractParser.parseFrom(AbstractParser.java:176)
        at com.google.protobuf.AbstractParser.parseFrom(AbstractParser.java:182)
        at com.google.protobuf.AbstractParser.parseFrom(AbstractParser.java:49)
        at org.jboss.netty.handler.codec.protobuf.ProtobufDecoder.decode(ProtobufDecoder.java:122)
        at org.jboss.netty.handler.codec.oneone.OneToOneDecoder.handleUpstream(OneToOneDecoder.java:66)
        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
        at org.jboss.netty.channel.socket.oio.OioDatagramWorker.process(OioDatagramWorker.java:52)
        at org.jboss.netty.channel.socket.oio.AbstractOioWorker.run(AbstractOioWorker.java:73)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The javadoc for ProtobufDecoder says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Decodes a received ChannelBuffer into a Google Protocol Buffers Message and MessageLite. Please note that this decoder must be used with a proper FrameDecoder such as ProtobufVarint32FrameDecoder or LengthFieldBasedFrameDecoder if you are using a stream-based transport such as TCP/IP.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;and even though we are using a datagram transport we have related issues, depending on what the sending and receiving OS does with overly large datagrams:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We may receive a datagram with a truncated message&lt;/li&gt;
	&lt;li&gt;We may get an upcall when processing one fragment of a fragmented datagram, where the complete message is not available yet&lt;/li&gt;
	&lt;li&gt;We may not be able to send the overly large ClusterStatus in the first place. Linux claims to do PMTU and return EMSGSIZE if a datagram packet payload exceeds the MTU, but will send a fragmented datagram if PMTU is disabled. I&apos;m surprised we have the above report given the default is to reject overly large datagram payloads, so perhaps the user is using a different server OS or Netty datagram channels do their own fragmentation (I haven&apos;t checked).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In any case, the server and client pipelines are definitely not doing any kind of framing. This is the multicast status listener from 0.98 for example:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      b.setPipeline(Channels.pipeline(
          &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ProtobufDecoder(ClusterStatusProtos.ClusterStatus.getDefaultInstance()),
          &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ClusterStatusHandler()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12745293">HBASE-12141</key>
            <summary>ClusterStatus message might exceed max datagram payload limits</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="apurtell">Andrew Purtell</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Oct 2014 16:09:59 +0000</created>
                <updated>Thu, 2 Oct 2014 17:49:49 +0000</updated>
                                            <version>0.98.3</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="14154994" author="apurtell" created="Wed, 1 Oct 2014 16:10:33 +0000"  >&lt;p&gt;Ping &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkeywal&quot; class=&quot;user-hover&quot; rel=&quot;nkeywal&quot;&gt;Nicolas Liochon&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14156267" author="nkeywal" created="Thu, 2 Oct 2014 09:26:23 +0000"  >&lt;p&gt;Yeah, the strategy was to keep the message small enough (if multiple servers fail simultaneously, we send multiple messages instead of one). As well, we send the message multiple times in case it got lost somewhere. I had issue with Netty 3.x when tried to add frames. I haven&apos;t tried very hard. We could make MAX_SERVER_PER_MESSAGE configurable for network with a very small mtu? It&apos;s also possible to compress the message. Once again, I had issue with Netty 3.x for this in the past.&lt;/p&gt;

&lt;p&gt;This said, I would be interested to understand the network config. &lt;/p&gt;</comment>
                            <comment id="14156857" author="apurtell" created="Thu, 2 Oct 2014 17:46:24 +0000"  >&lt;p&gt;See &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/hbase-user/201410.mbox/%3C3256288.x8cyWY5ZEW%40localhost.localdomain%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/hbase-user/201410.mbox/%3C3256288.x8cyWY5ZEW%40localhost.localdomain%3E&lt;/a&gt; . The network configuration is &quot;interesting&quot;. &lt;/p&gt;</comment>
                            <comment id="14156860" author="apurtell" created="Thu, 2 Oct 2014 17:49:35 +0000"  >&lt;p&gt;... which could explain fragmentation, I think. The MTU of OpenVPN tunnels will be less than normal by packet header + tunnel protocol overheads and possibly not subject to PMTU discovery. I&apos;d wager our channel handler is being invoked when the first fragment is received so the PB is truncated but the remainder will show up soon.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Oct 2014 09:26:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 11 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i20oxz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>